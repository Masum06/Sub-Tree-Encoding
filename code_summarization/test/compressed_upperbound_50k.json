[{"code": "private int currentDepth $F72 { \n\ttry { \n\t\tInteger oneBased = ( ( Integer ) DEPTH_FIELD . get ( this ) ) ; \n\t\treturn oneBased - NUM00 ; \n\t\t} \n\t$F180169 ( e ) } \n"}, {"code": "protected $F8748 datasetIntegrity ( boolean nominalPredictor , boolean numericPredictor , boolean stringPredictor , boolean datePredictor , boolean relationalPredictor , boolean multiInstance , int classType , boolean predictorMissing , boolean classMissing ) { \n\tprint ( NUM00 ) ; \n\tprintAttributeSummary ( nominalPredictor , numericPredictor , stringPredictor , datePredictor , relationalPredictor , multiInstance , classType ) ; \n\tprint ( NUM00 ) ; \n\tint numTrain = getNumInstances ( ) , numClasses = NUM00 , missingLevel = NUM00 ; \n\t$F125783 ( result ) Instances train = null ; \n\tKernel kernel = null ; \n\ttry { \n\t\ttrain = makeTestDataset ( NUM00 , numTrain , nominalPredictor ? getNumNominal ( ) : NUM00 , numericPredictor ? getNumNumeric ( ) : NUM00 , stringPredictor ? getNumString ( ) : NUM00 , datePredictor ? getNumDate ( ) : NUM00 , relationalPredictor ? getNumRelational ( ) : NUM00 , numClasses , classType , multiInstance ) ; \n\t\tif ( missingLevel > NUM00 ) { \n\t\t\taddMissing ( train , missingLevel , predictorMissing , classMissing ) ; \n\t\t\t} \n\t\tkernel = Kernel . makeCopies ( getKernel ( ) , NUM00 ) [ NUM00 ] ; \n\t\t} \n\tcatch ( Exception ex ) $F220112 ( ex ) try { \n\t\tInstances trainCopy = new Instances ( train ) ; \n\t\tkernel . buildKernel ( trainCopy ) ; \n\t\tcompareDatasets ( train , trainCopy ) ; \n\t\tprintln ( NUM00 ) ; \n\t\tresult [ NUM00 ] = _BOOL ; \n\t\t} \n\tcatch ( Exception ex ) { \n\t\tprintln ( NUM00 ) ; \n\t\tresult [ NUM00 ] = _BOOL ; \n\t\tif ( m_Debug ) { \n\t\t\tprintln ( NUM00 ) ; \n\t\t\tprint ( NUM00 ) ; \n\t\t\t$F5354 ( println , ex ) println ( NUM00 ) ; \n\t\t\tprintln ( $F369 ( train ) ) ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public static int unionSize $F128693 ( x , y ) { \n\tfinal int lx = x . length , ly = y . length ; \n\tfinal int min = ( lx < ly ) ? lx : ly ; \n\tint i = NUM00 , res = NUM00 ; \n\tfor ( ; \n\ti < min ; \n\ti ++ ) { \n\t\tres += Long . bitCount ( x [ i ] | y [ i ] ) ; \n\t\t} \n\tfor ( ; \n\ti < lx ; \n\ti ++ ) { \n\t\tres += Long . bitCount ( x [ i ] ) ; \n\t\t} \n\tfor ( ; \n\ti < ly ; \n\ti ++ ) { \n\t\tres += Long . bitCount ( y [ i ] ) ; \n\t\t} \n\treturn res ; \n\t} \n"}, {"code": "public void testReverseOrder4 $F72 throws Exception { \n\t$F116795 ( id , UUID ) GridCacheAdapter $F2538 cache = grid . internalCache ( ) ; \n\tGridCacheContext $F2538 ctx = cache . context ( ) ; \n\tGridCacheTestEntryEx entry1 = new GridCacheTestEntryEx ( ctx , NUM00 ) ; \n\tGridCacheTestEntryEx entry2 = new GridCacheTestEntryEx ( ctx , NUM00 ) ; \n\tGridCacheVersion ver1 = version ( NUM00 ) ; \n\tGridCacheVersion ver2 = version ( NUM00 ) ; \n\tGridCacheVersion ver3 = version ( NUM00 ) ; \n\tGridCacheMvccCandidate v3k1 = entry1 . addLocal ( NUM00 , ver3 , NUM00 , _BOOL , _BOOL ) ; \n\tGridCacheMvccCandidate v3k2 = entry2 . addLocal ( NUM00 , ver3 , NUM00 , _BOOL , _BOOL ) ; \n\tlinkCandidates ( ctx , v3k1 , v3k2 ) ; \n\tentry1 . readyLocal ( ver3 ) ; \n\tcheckLocal ( v3k1 , ver3 , _BOOL , _BOOL , _BOOL ) ; \n\tcheckLocal ( v3k2 , ver3 , _BOOL , _BOOL , _BOOL ) ; \n\tGridCacheMvccCandidate v1k1 = entry1 . addLocal ( NUM00 , ver1 , NUM00 , _BOOL , _BOOL ) ; \n\tGridCacheMvccCandidate v1k2 = entry2 . addLocal ( NUM00 , ver1 , NUM00 , _BOOL , _BOOL ) ; \n\tlinkCandidates ( ctx , v1k1 , v1k2 ) ; \n\tentry1 . readyLocal ( ver1 ) ; \n\tentry2 . readyLocal ( ver1 ) ; \n\tcheckLocal ( v3k1 , ver3 , _BOOL , _BOOL , _BOOL ) ; \n\tcheckLocal ( v3k2 , ver3 , _BOOL , _BOOL , _BOOL ) ; \n\tcheckLocal ( v1k1 , ver1 , _BOOL , _BOOL , _BOOL ) ; \n\tcheckLocal ( v1k2 , ver1 , _BOOL , _BOOL , _BOOL ) ; \n\tGridCacheMvccCandidate v2k2 = entry2 . addRemote ( id , NUM00 , ver2 , NUM00 , _BOOL , _BOOL ) ; \n\tcheckRemote ( v2k2 , ver2 , _BOOL , _BOOL ) ; \n\tentry2 . readyLocal ( v3k2 ) ; \n\tcheckLocal ( v3k1 , ver3 , _BOOL , _BOOL , _BOOL ) ; \n\tcheckLocal ( v3k2 , ver3 , _BOOL , _BOOL , _BOOL ) ; \n\t} \n"}, {"code": "$F1 public void closingOK $F72 { \n\tList < AddUserFields . AttributeSpec > specs = new ArrayList < AddUserFields . AttributeSpec > $F72 ; \n\tfor ( $F2277 ( i , m_listModel ) ) { \n\t\tAddUserFields . AttributeSpec a = ( AddUserFields . AttributeSpec ) m_listModel . elementAt ( i ) ; \n\t\tspecs . add ( a ) ; \n\t\t} \n\tif ( m_modifyL != null ) { \n\t\tm_modifyL . setModifiedStatus ( AddUserFieldsCustomizer . this , _BOOL ) ; \n\t\t} \n\tm_filter . setAttributeSpecs ( specs ) ; \n\t} \n"}, {"code": "public String toString $F72 { \n\t$F280 ( text ) if ( ( m_classAttribute == null ) ) $F2455 try { \n\t\t$F84 ( text ) $F38468 ( text , m_kernel ) for ( int i = NUM00 ; \n\t\ti < m_classAttribute . numValues ( ) ; \n\t\ti ++ ) { \n\t\t\tfor ( int j = i + NUM00 ; \n\t\t\tj < m_classAttribute . numValues ( ) ; \n\t\t\tj ++ ) { \n\t\t\t\ttext . append ( NUM00 + m_classAttribute . value ( i ) + NUM00 + m_classAttribute . value ( j ) + NUM00 ) ; \n\t\t\t\t$F53015 ( text , m_classifiers , i , j ) if ( m_fitLogisticModels ) { \n\t\t\t\t\t$F84 ( text ) if ( m_classifiers [ i ] [ j ] . m_logistic == null ) $F86 ( text ) else { \n\t\t\t\t\t\ttext . append ( m_classifiers [ i ] [ j ] . m_logistic ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t$F84 ( text ) } \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) $F2455 $F92 ( text ) } \n"}, {"code": "public final Sector union ( Sector that ) { \n\t$F397 ( that , this ) Angle minLat = this . minLatitude ; \n\tAngle maxLat = this . maxLatitude ; \n\tAngle minLon = this . minLongitude ; \n\tAngle maxLon = this . maxLongitude ; \n\tif ( that . minLatitude . degrees < this . minLatitude . degrees ) minLat = that . minLatitude ; \n\tif ( that . maxLatitude . degrees > this . maxLatitude . degrees ) maxLat = that . maxLatitude ; \n\tif ( that . minLongitude . degrees < this . minLongitude . degrees ) minLon = that . minLongitude ; \n\tif ( that . maxLongitude . degrees > this . maxLongitude . degrees ) maxLon = that . maxLongitude ; \n\treturn new Sector ( minLat , maxLat , minLon , maxLon ) ; \n\t} \n"}, {"code": "private static boolean isDoubleEqual ( double value , double valueToCompare ) { \n\treturn $F20923 ( Math , value , valueToCompare ) ; \n\t} \n"}, {"code": "public void testIntValuePos $F72 { \n\tString a = NUM00 ; \n\t$F12208 ( aNumber , a ) int result = - NUM00 ; \n\tassertTrue ( NUM00 , aNumber . intValue ( ) == result ) ; \n\t} \n"}, {"code": "private void walk ( File directory , int depth , $F9884 results ) throws IOException { \n\tcheckIfCancelled ( directory , depth , results ) ; \n\tif ( handleDirectory ( directory , depth , results ) ) { \n\t\thandleDirectoryStart ( directory , depth , results ) ; \n\t\tint childDepth = depth + NUM00 ; \n\t\tif ( depthLimit < NUM00 || childDepth <= depthLimit ) { \n\t\t\tcheckIfCancelled ( directory , depth , results ) ; \n\t\t\t$F5237 $F5239 ( childFiles , filter , directory ) ; \n\t\t\tchildFiles = filterDirectoryContents ( directory , depth , childFiles ) ; \n\t\t\tif ( childFiles == null ) { \n\t\t\t\thandleRestricted ( directory , childDepth , results ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tfor ( File childFile : childFiles ) { \n\t\t\t\t\tif $F3444 ( childFile ) { \n\t\t\t\t\t\twalk ( childFile , childDepth , results ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tcheckIfCancelled ( childFile , childDepth , results ) ; \n\t\t\t\t\t\thandleFile ( childFile , childDepth , results ) ; \n\t\t\t\t\t\tcheckIfCancelled ( childFile , childDepth , results ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\thandleDirectoryEnd ( directory , depth , results ) ; \n\t\t} \n\tcheckIfCancelled ( directory , depth , results ) ; \n\t} \n"}, {"code": "public static $F131 ordinalArray ( TupleSet tuples , String field ) { \n\treturn $F157026 ( ordinalArray , tuples , field , DefaultLiteralComparator ) ; \n\t} \n"}, {"code": "public void testDivideExceptionInvalidRM $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\tString b = NUM00 ; \n\tint bScale = NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) $F1918 ( bNumber , b , bScale ) try { \n\t\taNumber . divide ( bNumber , NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\tcatch ( IllegalArgumentException e ) { \n\t\tassertEquals ( NUM00 , NUM00 , e . getMessage ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void datasetChanged ( DatasetChangeEvent event ) { \n\tsuper . datasetChanged ( event ) ; \n\tif ( this . subplots == null ) $F932 XYDataset dataset = null ; \n\tif ( event . getDataset ( ) instanceof XYDataset ) { \n\t\tdataset = ( XYDataset ) event . getDataset ( ) ; \n\t\t} \n\tfor ( XYPlot subplot : this . subplots ) { \n\t\tif $F358955 ( subplot , dataset ) { \n\t\t\tsubplot . configureRangeAxes ( ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean onScheduleAsLibrary ( Config config , Config runtime , IScheduler scheduler , PackingPlan packing ) { \n\tboolean ret = _BOOL ; \n\ttry { \n\t\tscheduler . initialize ( config , runtime ) ; \n\t\tret = scheduler . onSchedule ( packing ) ; \n\t\tif ( ret ) { \n\t\t\tret = SchedulerUtils . setLibSchedulerLocation ( runtime , scheduler , _BOOL ) ; \n\t\t\t} \n\t\telse { \n\t\t\tLOG . severe ( NUM00 ) ; \n\t\t\t} \n\t\t} \n\t$F3229 ( scheduler ) return ret ; \n\t} \n"}, {"code": "public static boolean isStringType ( Type t ) { \n\treturn $F183853 ( t , RefType ) ; \n\t} \n"}, {"code": "public Entry updateOrCreateSource ( User user , String id , String url , String title , Long modTime , Long createTime , boolean isAdmin , Errors errors ) { \n\tif ( user == null ) { \n\t\tErrors . add ( errors , errorMessages . errorUserIsNull ( ) ) ; \n\t\t$F1274 } \n\tif ( url == null ) { \n\t\tErrors . add ( errors , errorMessages . errorUrlIsNull ( ) ) ; \n\t\t$F1274 } \n\tEntry source = getEntryByUserIdAndUrl ( user . getId ( ) , url ) ; \n\tif ( source == null ) { \n\t\tif $F2979 ( url ) { \n\t\t\tErrors . add ( errors , errorMessages . errorUrlIsEmpty ( ) ) ; \n\t\t\t$F1274 } \n\t\tif ( title == null ) { \n\t\t\tErrors . add ( errors , errorMessages . errorTitleIsNull ( ) ) ; \n\t\t\t$F1274 } \n\t\tif $F2979 ( title ) { \n\t\t\tErrors . add ( errors , errorMessages . errorTitleIsEmpty ( ) ) ; \n\t\t\t$F1274 } \n\t\tif ( modTime == null ) { \n\t\t\tErrors . add ( errors , errorMessages . errorModTimeIsNull ( ) ) ; \n\t\t\t$F1274 } \n\t\tif ( createTime == null ) { \n\t\t\tErrors . add ( errors , errorMessages . errorCreateTimeIsNull ( ) ) ; \n\t\t\t$F1274 } \n\t\tif ( id != null && ! idGenerator . isIdWellFormed ( id ) ) { \n\t\t\tErrors . add ( errors , errorMessages . errorIdIsInvalid ( ) ) ; \n\t\t\t$F1274 } \n\t\tif ( createTime . longValue ( ) > modTime . longValue ( ) ) { \n\t\t\tmodTime = createTime ; \n\t\t\t} \n\t\tif ( url != null ) $F8576 ( url , cleanUpText ) if ( title != null ) $F8576 ( title , cleanUpText ) source = new Entry $F72 ; \n\t\tsource . setDb ( db ) ; \n\t\tif ( id == null ) { \n\t\t\tid = idGenerator . getAnotherId ( ) ; \n\t\t\t} \n\t\tsource . setId ( id ) ; \n\t\tsource . setSourceUrl ( url ) ; \n\t\tsource . setSourceTitle ( title ) ; \n\t\tsource . setCreateTime ( createTime ) ; \n\t\tsource . setType ( Constants . source ) ; \n\t\tsource . setUserId ( user . getId ( ) ) ; \n\t\tdb . persistEntry ( source ) ; \n\t\t} \n\telse if ( ! canUserModifyEntry ( user , source , isAdmin ) ) { \n\t\tErrors . add ( errors , errorMessages . errorUserIsNotEntitledToModifyTheSource ( ) ) ; \n\t\t$F1274 } \n\tsource . setModTime ( modTime ) ; \n\treturn source ; \n\t} \n"}, {"code": "private void validateSqlStatement ( String sql , int jdbcStatementIndex ) { \n\tAssert . isTrue ( StringUtils . isNotBlank ( sql ) , NUM00 + jdbcStatementIndex + NUM00 ) ; \n\t} \n"}, {"code": "public static Long [ ] valuesOf $F101011 ( array ) { \n\tLong [ ] dest = new Long [ array . length ] ; \n\tfor ( $F1139 ( i , array ) ) $F11856 ( dest , i , Long , array ) return dest ; \n\t} \n"}, {"code": "$F1 public boolean isTraceEnabled $F72 { \n\treturn logger . isLoggable ( Level . FINEST ) ; \n\t} \n"}, {"code": "private static void useMissile ( Player player ) { \n\tStackableItem projectilesItem = null ; \n\tif ( player . getRangeWeapon ( ) != null ) { \n\t\tprojectilesItem = player . getAmmunition ( ) ; \n\t\t} \n\tif ( projectilesItem == null ) { \n\t\tprojectilesItem = player . getMissileIfNotHoldingOtherWeapon ( ) ; \n\t\t} \n\tif ( projectilesItem != null ) { \n\t\tprojectilesItem . removeOne ( ) ; \n\t\t} \n\t} \n"}, {"code": "public TcpMatcher ( final NetworkConfig config ) { \n\tsuper ( config ) ; \n\t} \n"}, {"code": "private int determineMaxLevelRec ( int level , Node v ) { \n\tint newLevel = level ; \n\tfor ( $F149631 ( e , v ) ) { \n\t\tnewLevel = Math . max ( newLevel , determineMaxLevelRec ( level , e . getTarget ( ) ) + NUM00 ) ; \n\t\t} \n\treturn newLevel ; \n\t} \n"}, {"code": "protected void requestPassCodeConfirmation $F72 { \n\tclearBoxes ( ) ; \n\tmPassCodeHdr . setText ( R . string . pass_code_reenter_your_pass_code ) ; \n\t$F185816 ( mPassCodeHdrExplanation , View ) mConfirmingPassCode = _BOOL ; \n\t} \n"}, {"code": "private void addWorkerFailed ( Worker w ) { \n\t$F677 ( mainLock , this ) $F8934 ( mainLock ) try { \n\t\t$F198638 ( w , workers ) decrementWorkerCount ( ) ; \n\t\ttryTerminate ( ) ; \n\t\t} \n\t$F796 ( mainLock ) } \n"}, {"code": "public void testInsert4 $F72 throws SQLException { \n\tDatabaseCreator . fillSimpleTable1 ( conn ) ; \n\tstatement . execute ( NUM00 + DatabaseCreator . SIMPLE_TABLE2 + NUM00 + DatabaseCreator . SIMPLE_TABLE1 ) ; \n\tResultSet r = statement . executeQuery ( NUM00 + DatabaseCreator . SIMPLE_TABLE2 + NUM00 + DatabaseCreator . SIMPLE_TABLE1 + NUM00 ) ; \n\t$F24630 ( r ) $F92911 ( assertEquals , r ) $F59 ( r ) } \n"}, {"code": "private synchronized void putMapEntry ( String localId , MapEntry entry ) { \n\tif ( ! isLocalId ( localId ) ) $F322689 ( localId ) $F60661 ( json ) try { \n\t\tjson . put ( NUM00 , entry . retainCount ) ; \n\t\tif ( entry . objectId != null ) { \n\t\t\tjson . put ( NUM00 , entry . objectId ) ; \n\t\t\t} \n\t\t} \n\tcatch ( JSONException je ) $F54146 ( je ) $F4453 ( file , diskPath , localId ) $F1909 ( diskPath ) try { \n\t\tParseFileUtils . writeJSONObjectToFile ( file , json ) ; \n\t\t} \n\t$F29052 } \n"}, {"code": "public void endElement $F1947 ( namespaceURI , localName , name ) throws $F2253 { \n\t$F5453 ( m_inEntityRef ) m_prefixMap . popNamespaces ( m_elemContext . m_currentElemDepth , null ) ; \n\ttry { \n\t\t$F42851 ( writer , m_writer ) if ( m_elemContext . m_startTagOpen ) { \n\t\t\tif ( m_tracer != null ) super . fireStartElem ( m_elemContext . m_elementName ) ; \n\t\t\t$F19322 ( nAttrs , m_attributes ) if ( nAttrs > NUM00 ) { \n\t\t\t\tprocessAttributes ( m_writer , nAttrs ) ; \n\t\t\t\t$F725 ( m_attributes ) } \n\t\t\tif ( m_spaceBeforeClose ) $F3410 ( writer ) else $F3410 ( writer ) } \n\t\telse { \n\t\t\t$F32367 ( m_cdataTagOpen , closeCDATA ) if ( shouldIndent ( ) ) indent ( m_elemContext . m_currentElemDepth - NUM00 ) ; \n\t\t\t$F3410 ( writer ) $F3410 ( writer ) writer . write ( name ) ; \n\t\t\t$F3410 ( writer ) } \n\t\t} \n\t$F6289 ( e ) if ( ! m_elemContext . m_startTagOpen && m_doIndent ) { \n\t\tm_ispreserve = m_preserves . isEmpty ( ) ? _BOOL : m_preserves . pop ( ) ; \n\t\t} \n\tm_isprevtext = _BOOL ; \n\tif ( m_tracer != null ) super . fireEndElem ( name ) ; \n\tm_elemContext = m_elemContext . m_prev ; \n\t} \n"}, {"code": "public static void f $F4353 ( msg , args ) { \n\t$F18748 ( allowWtf ) StackTraceElement caller = getCallerStackTraceElement ( ) ; \n\tString tag = generateTag ( caller ) ; \n\tif ( sLevel > LEVEL_FATAL ) $F932 if $F3305 ( args ) { \n\t\t$F3869 ( msg , String , args ) } \n\tLog . wtf ( tag , msg ) ; \n\t} \n"}, {"code": "public void deleteLeaves ( String name ) { \n\tfor ( $F2277 ( i , _leaves ) ) { \n\t\tCatalogTreeLeaf leaf = _leaves . get ( i ) ; \n\t\tif $F3175 ( name , leaf ) $F106 ( _leaves , i ) } \n\t} \n"}, {"code": "public String toString $F72 { \n\t$F3239 ( s ) final int size = size ( ) ; \n\tfor ( $F119 ( i , size ) ) $F6407 ( s , getInt , i ) $F92 ( s ) } \n"}, {"code": "protected boolean validate ( final $F1469 component , final int soffset , int eoffset , final BitSet generous ) { \n\tif ( eoffset == - NUM00 ) $F65461 ( eoffset , component ) for ( int i = soffset ; \n\ti <= eoffset ; \n\ti ++ ) { \n\t\tif ( ! generous . get ( component [ i ] ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void buildPieces $F72 { \n\tpieces = new Piece $F2313 ( pathArray ) ; \n\t$F98511 ( paint ) $F28837 ( matrix ) Canvas canvas = new Canvas $F72 ; \n\tfor ( $F1139 ( i , pieces ) ) { \n\t\tint shadow = Utils . nextInt ( Utils . dp2px ( NUM00 ) , Utils . dp2px ( NUM00 ) ) ; \n\t\t$F77510 ( path , pathArray , i ) RectF r = new RectF $F72 ; \n\t\tpath . computeBounds ( r , _BOOL ) ; \n\t\tBitmap pBitmap = Utils . createBitmapSafely ( ( int ) r . width ( ) + shadow * NUM00 , ( int ) r . height ( ) + shadow * NUM00 , Bitmap . Config . ARGB_4444 , NUM00 ) ; \n\t\tif ( pBitmap == null ) { \n\t\t\tpieces [ i ] = new Piece ( - NUM00 , - NUM00 , null , shadow ) ; \n\t\t\t$F598 } \n\t\tpieces [ i ] = new Piece ( ( int ) r . left + mTouchPoint . x - shadow , ( int ) r . top + mTouchPoint . y - shadow , pBitmap , shadow ) ; \n\t\tcanvas . setBitmap ( pieces [ i ] . bitmap ) ; \n\t\tBitmapShader mBitmapShader = new BitmapShader ( mBitmap , Shader . TileMode . CLAMP , Shader . TileMode . CLAMP ) ; \n\t\t$F2268 ( matrix ) matrix . setTranslate ( - r . left - offsetX + shadow , - r . top - offsetY + shadow ) ; \n\t\tmBitmapShader . setLocalMatrix ( matrix ) ; \n\t\t$F2268 ( paint ) $F6212 ( offsetPath ) offsetPath . addPath ( path , - r . left + shadow , - r . top + shadow ) ; \n\t\t$F22950 ( paint , Paint ) paint . setShadowLayer ( shadow , NUM00 , NUM00 , NUM00 ) ; \n\t\tcanvas . drawPath ( offsetPath , paint ) ; \n\t\tpaint . setShadowLayer ( $F4026 ) ; \n\t\tpaint . setXfermode ( new PorterDuffXfermode ( PorterDuff . Mode . XOR ) ) ; \n\t\tcanvas . drawPath ( offsetPath , paint ) ; \n\t\tpaint . setXfermode ( null ) ; \n\t\tpaint . setShader ( mBitmapShader ) ; \n\t\t$F146962 ( paint ) canvas . drawPath ( offsetPath , paint ) ; \n\t\t} \n\tArrays . sort ( pieces ) ; \n\t} \n"}, {"code": "public boolean removeShutdownHook ( Thread hook ) { \n\t$F8108 ( sm , System ) if ( sm != null ) { \n\t\tsm . checkPermission ( RuntimePermissionCollection . SHUTDOWN_HOOKS_PERMISSION ) ; \n\t\t} \n\t$F1149 ( hook ) if ( VMState > NUM00 ) $F10763 synchronized ( hooksList ) $F20067 ( hooksList , hook ) } \n"}, {"code": "public void run $F72 { \n\twhile ( m_keyboardStream != null ) { \n\t\ttry { \n\t\t\tif ( m_keyboardReadRequest ) { \n\t\t\t\t$F27015 ( s , m_keyboardStream ) m_keyboardInput . add ( s ) ; \n\t\t\t\tm_keyboardReadRequest = _BOOL ; \n\t\t\t\t$F59357 ( this , notifyAll ) } \n\t\t\telse try $F31130 ( Thread ) $F109995 } \n\t\tcatch ( IOException io ) $F845 } \n\t} \n"}, {"code": "public boolean boundScroll $F72 { \n\tfloat curScroll = getStackScroll ( ) ; \n\tfloat newScroll = getBoundedStackScroll ( curScroll ) ; \n\tif ( Float . compare ( newScroll , curScroll ) != NUM00 ) $F9278 ( setStackScroll , newScroll , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "$F1 public AggregateableEvaluation aggregate ( Evaluation evaluation ) { \n\tm_Incorrect += evaluation . incorrect ( ) ; \n\tm_Correct += evaluation . correct ( ) ; \n\tm_Unclassified += evaluation . unclassified ( ) ; \n\tm_MissingClass += evaluation . m_MissingClass ; \n\tm_WithClass += evaluation . m_WithClass ; \n\tif ( evaluation . m_ConfusionMatrix != null ) { \n\t\t$F3789 newMatrix = evaluation . confusionMatrix ( ) ; \n\t\tif ( newMatrix != null ) { \n\t\t\tfor ( $F1139 ( i , m_ConfusionMatrix ) ) { \n\t\t\t\tfor ( $F179379 ( j , m_ConfusionMatrix , i ) ) { \n\t\t\t\t\tm_ConfusionMatrix [ i ] [ j ] += newMatrix [ i ] [ j ] ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1986 newClassPriors = evaluation . m_ClassPriors ; \n\tif ( newClassPriors != null && m_ClassPriors != null ) { \n\t\tfor ( int i = NUM00 ; \n\t\ti < this . m_ClassPriors . length ; \n\t\ti ++ ) $F15086 ( m_ClassPriors , i , newClassPriors ) } \n\tm_ClassPriorsSum = evaluation . m_ClassPriorsSum ; \n\tm_TotalCost += evaluation . totalCost ( ) ; \n\tm_SumErr += evaluation . m_SumErr ; \n\tm_SumAbsErr += evaluation . m_SumAbsErr ; \n\tm_SumSqrErr += evaluation . m_SumSqrErr ; \n\tm_SumClass += evaluation . m_SumClass ; \n\tm_SumSqrClass += evaluation . m_SumSqrClass ; \n\tm_SumPredicted += evaluation . m_SumPredicted ; \n\tm_SumSqrPredicted += evaluation . m_SumSqrPredicted ; \n\tm_SumClassPredicted += evaluation . m_SumClassPredicted ; \n\tm_SumPriorAbsErr += evaluation . m_SumPriorAbsErr ; \n\tm_SumPriorSqrErr += evaluation . m_SumPriorSqrErr ; \n\tm_SumKBInfo += evaluation . m_SumKBInfo ; \n\t$F1986 newMarginCounts = evaluation . m_MarginCounts ; \n\tif ( newMarginCounts != null ) { \n\t\tfor ( $F1139 ( i , m_MarginCounts ) ) { \n\t\t\tm_MarginCounts [ i ] += newMarginCounts [ i ] ; \n\t\t\t} \n\t\t} \n\tm_ComplexityStatisticsAvailable = evaluation . m_ComplexityStatisticsAvailable ; \n\tm_CoverageStatisticsAvailable = evaluation . m_CoverageStatisticsAvailable ; \n\tm_SumPriorEntropy += evaluation . m_SumPriorEntropy ; \n\tm_SumSchemeEntropy += evaluation . m_SumSchemeEntropy ; \n\tm_TotalSizeOfRegions += evaluation . m_TotalSizeOfRegions ; \n\tm_TotalCoverage += evaluation . m_TotalCoverage ; \n\t$F17258 predsToAdd = evaluation . m_Predictions ; \n\tif ( predsToAdd != null ) { \n\t\tif ( m_Predictions == null ) { \n\t\t\tm_Predictions = new $F17258 $F72 ; \n\t\t\t} \n\t\tfor ( $F2277 ( i , predsToAdd ) ) $F62006 ( m_Predictions , predsToAdd , i ) } \n\treturn this ; \n\t} \n"}, {"code": "public void waitForVolumesToBeVisible ( CGRequestParams request ) { \n\tscan ( request . getCopies ( ) , request . getRsets ( ) ) ; \n\t} \n"}, {"code": "protected void startAdditionalServices ( final Cache cache , $F87266 ( options ) ) throws Exception $F845 "}, {"code": "public void updateView $F72 { \n\tif ( fInputElement != null && fParentComposite != null ) { \n\t\tIndicatorViewState oldState = fStateMap . get ( fInputElement ) ; \n\t\tboolean reload = fFilesToReoad . contains ( fInputElement ) ; \n\t\tif ( reload || oldState == null ) { \n\t\t\tJsonObject jsonObject = DroidsafePluginUtilities . parseIndicatorFile ( fInputElement ) ; \n\t\t\t$F8249 ( jsonObject ) fFilesToReoad . remove ( fInputElement ) ; \n\t\t\tfState = new IndicatorViewState ( fInputElement , jsonObject , getSecuritySpec ( ) , oldState ) ; \n\t\t\tfStateMap . put ( fInputElement , fState ) ; \n\t\t\t} \n\t\telse { \n\t\t\tfState = oldState ; \n\t\t\t} \n\t\tsetPartName ( fState . indicatorType ) ; \n\t\tshowPage ( PAGE_VIEWER ) ; \n\t\tfTreeViewer . setInput ( fState . jsonObject ) ; \n\t\tif ( fTreeViewer . getSorter ( ) == null ) sortByField ( getSortByField ( ) ) ; \n\t\t} \n\telse { \n\t\tsetPartName ( DEFAULT_PART_NAME ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void paint ( Graphics g ) { \n\t$F169501 ( g , image , this ) if ( ! paintCalled ) { \n\t\tpaintCalled = _BOOL ; \n\t\t$F59357 ( this , notifyAll ) } \n\t} \n"}, {"code": "$F1 public boolean connectionAllowed ( String eventName ) { \n\tif $F1710 ( m_listenees , eventName ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean isPrefixed $F72 { \n\treturn $F48845 ( name ) ; \n\t} \n"}, {"code": "public void releaseAnyConnection ( Connection connection ) throws SQLException { \n\ttry $F881 ( connection ) $F12237 ( ex ) } \n"}, {"code": "public QuickActionView addActions ( Collection < Action > actions ) { \n\tcheckShown ( ) ; \n\tmActions . addAll ( actions ) ; \n\treturn this ; \n\t} \n"}, {"code": "public void addSeriesRenderer ( int index , SimpleSeriesRenderer renderer ) $F42308 ( mRenderers , index , renderer ) "}, {"code": "$F98441 ( is , os , listener , bufferSize , current , total , DEFAULT_IMAGE_TOTAL_SIZE , bytes , count , shouldStopLoading , _BOOL ) "}, {"code": "private float calcAngle ( float value ) { \n\treturn value / mData . getYValueSum ( ) * NUM00 ; \n\t} \n"}, {"code": "$F10929 ( buf , mSizeLimit , mBuffersByLastUse , pos , Collections , mBuffersBySize , BUF_COMPARATOR , mCurrentSize , trim ) "}, {"code": "protected < T extends AbstractOptionValue $F5162 > AbstractOptions ( Function $F223439 valueFilter , AbstractOptions baseOptions , $F35808 values ) { \n\trequireNonNull ( baseOptions , NUM00 ) ; \n\trequireNonNull ( valueFilter , NUM00 ) ; \n\trequireNonNull ( values , NUM00 ) ; \n\tvalueMap = new $F223444 ( baseOptions . valueMap ) ; \n\tputAll ( valueFilter , StreamSupport . stream ( values . spliterator ( ) , _BOOL ) ) ; \n\t} \n"}, {"code": "public CharSeq concat ( CharSeq another ) { \n\treturn new CharSeq ( str + another . str ) ; \n\t} \n"}, {"code": "$F1 protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws $F13444 { \n\t$F11560 ( resp ) $F70095 ( sendToClient , resp ) for ( Video v : this . videos ) { \n\t\tsendToClient . write ( $F43113 ( v ) + v . getUrl ( ) + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "protected void notifyStateChange ( int oldState , int newState ) { \n\tmState = newState ; \n\tif ( oldState != newState ) { \n\t\tfirePropertyChange ( NUM00 , Integer . valueOf ( oldState ) , Integer . valueOf ( newState ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void test_GetOrder $F72 { \n\tassertEquals ( NUM00 , BigInteger . valueOf ( NUM00 ) , ecps . getOrder ( ) ) ; \n\t} \n"}, {"code": "private void formatAndLogThrowable ( LoggingLevel level , Color color , String msg , Throwable t ) { \n\tif ( ! USE_COLORS ) $F55644 ( formatAndLogThrowable , level , msg , t ) if ( PhotonLogger . level . id < level . id ) $F932 LocalDateTime dateTime = LocalDateTime . now ( ) ; \n\tString formatted = formatLogLine ( level , dateTime , msg ) ; \n\tLoggingService . logThrowable ( dateTime , t , formatted , color ) ; \n\t} \n"}, {"code": "public static String constructQueueRedisKey ( String queueName , String shardName , int priority , PinLaterJobState state ) { \n\treturn String . format ( NUM00 , PINLATER_QUEUE_KEY_PREFIX , shardName , queueName , priority , state . getValue ( ) ) ; \n\t} \n"}, {"code": "public static String decodeCharset ( String s , String charset ) { \n\t$F1338 ( s ) try { \n\t\tbyte $F46499 = s . getBytes ( ASCII_CHARSET ) ; \n\t\treturn ( new String ( buf , NUM00 , buf . length , charset ) ) ; \n\t\t} \n\tcatch ( UnsupportedEncodingException uee ) { \n\t\treturn s ; \n\t\t} \n\t} \n"}, {"code": "public void addRestrictedDomain ( String domainName ) { \n\t$F63624 ( StringUtils , domainName ) $F9406 ( restrictedDomains ) restrictedDomains . add ( domainName ) ; \n\t} \n"}, {"code": "StoppableReadLock ( ReadWriteLock lock , CancelCriterion stopper ) { \n\tthis . lock = lock . readLock ( ) ; \n\tthis . stopper = stopper ; \n\t} \n"}, {"code": "public void testisAutoIncrement $F72 { \n\ttry { \n\t\tassertFalse ( rsmd . isAutoIncrement ( NUM00 ) ) ; \n\t\t} \n\t$F125502 ( fail , e1 ) try { \n\t\t$F59 ( conn ) rsmd . getSchemaName ( NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F31184 } \n"}, {"code": "private long computeInterfaceHash $F72 { \n\tlong hash = NUM00 ; \n\t$F121388 ( sink ) try { \n\t\t$F5348 ( md , MessageDigest ) DataOutputStream out = new DataOutputStream ( new DigestOutputStream ( sink , md ) ) ; \n\t\tout . writeInt ( INTERFACE_HASH_STUB_VERSION ) ; \n\t\tfor ( Method method : remoteMethods ) { \n\t\t\tMethodDoc methodDoc = method . methodDoc ( ) ; \n\t\t\tout . writeUTF ( methodDoc . name ( ) ) ; \n\t\t\tout . writeUTF ( Util . methodDescriptorOf ( methodDoc ) ) ; \n\t\t\tClassDoc exceptions [ ] = methodDoc . thrownExceptions ( ) ; \n\t\t\tArrays . sort ( exceptions , new ClassDocComparator $F72 ) ; \n\t\t\tfor ( ClassDoc ex : exceptions ) { \n\t\t\t\tout . writeUTF ( Util . binaryNameOf ( ex ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F1206 ( out ) byte hashArray [ ] = md . digest ( ) ; \n\t\tfor ( int i = NUM00 ; \n\t\ti < $F121399 ( Math , hashArray ) ; \n\t\ti ++ ) { \n\t\t\thash += ( ( long ) ( hashArray [ i ] & NUM00 ) ) < < ( i * NUM00 ) ; \n\t\t\t} \n\t\t} \n\tcatch ( IOException e ) $F27253 ( e ) catch ( NoSuchAlgorithmException e ) $F27253 ( e ) return hash ; \n\t} \n"}, {"code": "public static void copy $F251959 ( in , out ) throws IOException { \n\t$F18062 ( Assert , in ) $F18062 ( Assert , out ) out . write ( in ) ; \n\t} \n"}, {"code": "$F18907 ( items ) "}, {"code": "private static native boolean renderFrame ( $F2027 pixels , long gifFileInPtr , $F2027 metaData ) ; \n"}, {"code": "$F66520 ( msg , startpos , count , sb , initialSubmode , tmp , submode , idx , _BOOL , ch , SUBMODE_ALPHA , isAlphaUpper , isAlphaLower , SUBMODE_LOWER , isMixed , SUBMODE_MIXED , PUNCTUATION , MIXED , next , isPunctuation , SUBMODE_PUNCTUATION , h , len , i , odd ) "}, {"code": "public static boolean isValidNCName ( String ncName ) { \n\t$F49299 ( ncName , _BOOL ) $F12685 ( ch , ncName ) if ( isNCNameStart ( ch ) == _BOOL ) return _BOOL ; \n\tfor ( $F1088 ( i , ncName ) ) { \n\t\tch = ncName . charAt ( i ) ; \n\t\tif ( isNCName ( ch ) == _BOOL ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public $F118223 addMessage ( MType message ) { \n\t$F18045 ( message ) ensureMutableMessageList ( ) ; \n\tmessages . add ( message ) ; \n\tif ( builders != null ) $F723 ( builders ) onChanged ( ) ; \n\tincrementModCounts ( ) ; \n\treturn this ; \n\t} \n"}, {"code": "protected void prepareDataSet $F72 { \n\tdataSet1 = $F196441 ( Arrays ) ; \n\tdataSet2 = $F196441 ( Arrays ) ; \n\tdataSet3 = Arrays . asList ( $F20551 ) ; \n\t} \n"}, {"code": "private ServiceRegistrar [ ] buildServiceRegistrar $F72 { \n\tint k = NUM00 ; \n\tServiceRegistrar [ ] proxys = new ServiceRegistrar $F2313 ( proxyRegSet ) ; \n\t$F10531 ( iter , proxyRegSet ) while $F2921 ( iter ) { \n\t\tProxyReg reg = ( ProxyReg ) iter . next ( ) ; \n\t\tproxys [ k ++ ] = reg . proxy ; \n\t\t} \n\treturn proxys ; \n\t} \n"}, {"code": "private static boolean checkValue ( String val ) throws MalformedObjectNameException { \n\t$F1149 ( val ) $F22998 ( len , val ) $F116 ( len , _BOOL ) $F9609 ( s , val ) final $F2027 result = parseValue ( s , NUM00 ) ; \n\t$F178172 ( endValue , result ) final boolean value_pattern = result [ NUM00 ] == NUM00 ; \n\tif ( endValue < len ) throw new MalformedObjectNameException ( NUM00 + s [ endValue ] + NUM00 ) ; \n\treturn value_pattern ; \n\t} \n"}, {"code": "protected void recoverPrimary ( Set excludedServers ) { \n\tif ( pool . getPoolOrCacheCancelInProgress ( ) != null ) $F932 $F179935 ( isDebugEnabled , logger ) if ( queueConnections . getPrimary ( ) != null ) { \n\t\tif ( isDebugEnabled ) $F981 ( logger ) $F665 } \n\tif ( isDebugEnabled ) $F981 ( logger ) if ( printRecoveringPrimary ) { \n\t\tlogger . info ( LocalizedMessage . create ( LocalizedStrings . QueueManagerImpl_SUBSCRIPTION_MANAGER_REDUNDANCY_SATISFIER_PRIMARY_ENDPOINT_HAS_BEEN_LOST_ATTEMPTIMG_TO_RECOVER ) ) ; \n\t\tprintRecoveringPrimary = _BOOL ; \n\t\t} \n\tQueueConnectionImpl newPrimary = null ; \n\twhile ( newPrimary == null && pool . getPoolOrCacheCancelInProgress ( ) == null ) { \n\t\tList backups = queueConnections . getBackups ( ) ; \n\t\tnewPrimary = promoteBackupToPrimary ( backups ) ; \n\t\t$F32472 ( newPrimary ) if ( ! addToConnectionList ( newPrimary , _BOOL ) ) { \n\t\t\tsynchronized ( lock ) { \n\t\t\t\tqueueConnections = queueConnections . removeConnection ( newPrimary ) ; \n\t\t\t\t} \n\t\t\tnewPrimary = null ; \n\t\t\t} \n\t\t} \n\tif ( newPrimary != null ) { \n\t\tif ( isDebugEnabled ) { \n\t\t\tlogger . debug ( NUM00 , newPrimary . getEndpoint ( ) ) ; \n\t\t\t} \n\t\tif ( PoolImpl . AFTER_PRIMARY_RECOVERED_CALLBACK_FLAG ) { \n\t\t\tClientServerObserver bo = ClientServerObserverHolder . getInstance ( ) ; \n\t\t\tbo . afterPrimaryRecovered ( newPrimary . getServer ( ) ) ; \n\t\t\t} \n\t\tcqsConnected ( ) ; \n\t\tprintPrimaryNotFoundError = _BOOL ; \n\t\tprintRecoveringPrimary = _BOOL ; \n\t\t$F665 } \n\twhile ( newPrimary == null ) { \n\t\tnewPrimary = createNewPrimary ( excludedServers ) ; \n\t\t$F32472 ( newPrimary ) if ( ! addToConnectionList ( newPrimary , _BOOL ) ) { \n\t\t\texcludedServers . add ( newPrimary . getServer ( ) ) ; \n\t\t\tnewPrimary = null ; \n\t\t\t} \n\t\tif ( newPrimary != null ) { \n\t\t\tif ( isDebugEnabled ) { \n\t\t\t\tlogger . debug ( NUM00 , newPrimary . getEndpoint ( ) ) ; \n\t\t\t\t} \n\t\t\tif ( ! recoverInterest ( newPrimary , _BOOL ) ) { \n\t\t\t\texcludedServers . add ( newPrimary . getServer ( ) ) ; \n\t\t\t\tnewPrimary = null ; \n\t\t\t\t} \n\t\t\tcqsConnected ( ) ; \n\t\t\t} \n\t\tif ( newPrimary != null && PoolImpl . AFTER_PRIMARY_RECOVERED_CALLBACK_FLAG ) { \n\t\t\tClientServerObserver bo = ClientServerObserverHolder . getInstance ( ) ; \n\t\t\tbo . afterPrimaryRecovered ( newPrimary . getServer ( ) ) ; \n\t\t\t} \n\t\tprintPrimaryNotFoundError = _BOOL ; \n\t\tprintRecoveringPrimary = _BOOL ; \n\t\t$F665 } \n\tcqsDisconnected ( ) ; \n\tif ( isDebugEnabled ) $F981 ( logger ) synchronized ( lock ) { \n\t\tqueueConnections = queueConnections . setPrimaryDiscoveryFailed ( null ) ; \n\t\t$F165 ( lock ) } \n\t} \n"}, {"code": "$F5077 ( journalWriter , writer , journalFileTmp , IO_BUFFER_SIZE , MAGIC , VERSION_1 , Integer , appVersion , valueCount , entry , lruEntries , DIRTY , CLEAN , journalFile , _BOOL ) "}, {"code": "public void remove $F72 throws RecurrenceInfoException { \n\tList < RecurrenceRule > rulesList = new ArrayList < RecurrenceRule > $F72 ; \n\trulesList . addAll ( rRulesList ) ; \n\trulesList . addAll ( eRulesList ) ; \n\ttry { \n\t\tfor ( RecurrenceRule rule : rulesList ) $F7042 ( rule ) $F7042 ( info ) } \n\tcatch ( RecurrenceRuleException rre ) { \n\t\tthrow new RecurrenceInfoException $F2808 ( rre ) ; \n\t\t} \n\tcatch ( GenericEntityException gee ) { \n\t\tthrow new RecurrenceInfoException $F2808 ( gee ) ; \n\t\t} \n\t} \n"}, {"code": "public void addNodesInDocOrder ( DTMIterator iterator , XPathContext support ) { \n\tif ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , null ) ) ; \n\tint node ; \n\twhile ( DTM . NULL != $F161934 ( node , iterator ) ) { \n\t\taddNodeInDocOrder ( node , support ) ; \n\t\t} \n\t} \n"}, {"code": "protected boolean needToRefetchData $F72 { \n\t$F657 ( now , System ) long last = lastDataFetchTime ; \n\tif ( ( last + fetchIntervalMillis ) < now ) { \n\t\tlastDataFetchTime = now ; \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public DocumentType createDocumentType $F1947 ( qualifiedName , publicID , systemID ) { \n\tcheckQName ( qualifiedName ) ; \n\treturn new DocumentTypeImpl ( null , qualifiedName , publicID , systemID ) ; \n\t} \n"}, {"code": "public void handleRequest ( RequestContext rc ) throws CLIException { \n\tsuper . handleRequest ( rc ) ; \n\tldapLogin ( ) ; \n\tSSOToken adminSSOToken = getAdminSSOToken ( ) ; \n\tIOutput outputWriter = getOutputWriter ( ) ; \n\tString realm = getStringOptionValue ( IArgument . REALM_NAME ) ; \n\tString patternType = getStringOptionValue ( IArgument . AGENT_TYPE ) ; \n\tString filter = getStringOptionValue ( IArgument . FILTER ) ; \n\t$F23170 ( patternType ) if $F38892 ( filter ) { \n\t\tfilter = NUM00 ; \n\t\t} \n\t$F28010 ( params , realm , patternType , filter ) $F28013 ( writeLog , LogWriter , Level , params ) try { \n\t\tAMIdentityRepository amir = new AMIdentityRepository ( adminSSOToken , realm ) ; \n\t\tIdSearchResults isr = amir . searchIdentities ( IdType . AGENTONLY , filter , new IdSearchControl $F72 ) ; \n\t\tSet results = isr . getSearchResults ( ) ; \n\t\tif $F2772 ( results ) { \n\t\t\tfor ( $F2774 ( i , results ) ) { \n\t\t\t\tAMIdentity amid = ( AMIdentity ) i . next ( ) ; \n\t\t\t\tif ( ! matchType ( amid , patternType ) ) $F38599 ( i ) } \n\t\t\t} \n\t\tif $F2772 ( results ) { \n\t\t\tfor ( $F2774 ( i , results ) ) { \n\t\t\t\tAMIdentity amid = ( AMIdentity ) i . next ( ) ; \n\t\t\t\t$F131 args = { \n\t\t\t\t\tamid . getName ( ) , amid . getUniversalId ( ) } \n\t\t\t\t; \n\t\t\t\toutputWriter . printlnMessage ( MessageFormat . format ( getResourceString ( NUM00 ) , args ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse $F265961 ( outputWriter , getResourceString ) $F28013 ( writeLog , LogWriter , Level , params ) } \n\tcatch ( IdRepoException e ) { \n\t\t$F28032 ( args , realm , patternType , filter , e ) debugError ( NUM00 , e ) ; \n\t\t$F28035 ( writeLog , LogWriter , Level , args ) $F145379 ( e , ExitCodes ) } \n\tcatch ( SSOException e ) { \n\t\t$F28032 ( args , realm , patternType , filter , e ) debugError ( NUM00 , e ) ; \n\t\t$F28035 ( writeLog , LogWriter , Level , args ) $F145379 ( e , ExitCodes ) } \n\t} \n"}, {"code": "public $F96 toBytes $F72 { \n\ttry { \n\t\t$F1538 ( out ) $F145993 ( _field , out ) $F11316 ( out ) } \n\t$F57213 ( e ) } \n"}, {"code": "$F1431 public static < E extends Enum < ? extends Style . HasCssName > > E fromStyleName ( final String styleName , final $F48880 enumClass , final E defaultValue ) { \n\t$F6973 ( styleName , enumClass , defaultValue ) for ( final Enum < ? extends Style . HasCssName > constant : enumClass . getEnumConstants ( ) ) { \n\t\tfinal Style . HasCssName anEnum = ( Style . HasCssName ) constant ; \n\t\tfinal String cssClass = anEnum . getCssName ( ) ; \n\t\tif ( cssClass != null && StyleHelper . containsStyle ( styleName , cssClass ) ) { \n\t\t\treturn ( E ) anEnum ; \n\t\t\t} \n\t\t} \n\treturn defaultValue ; \n\t} \n"}, {"code": "@ HLEUnimplemented @ HLEFunction ( nid = NUM00 , version = NUM00 , checkInsideInterrupt = _BOOL ) public int sceMpegNextAvcRpAu ( @ CheckArgument ( NUM00 ) int mpeg , int streamUid ) { \n\tif $F15257 ( streamMap , streamUid ) { \n\t\t$F18177 ( log , String , streamUid ) $F150 } \n\tint result = hleMpegGetAvcAu ( null ) ; \n\tif ( result != NUM00 ) { \n\t\t$F117609 ( log , String , result ) return result ; \n\t\t} \n\tvideoFrameCount ++ ; \n\tstartedMpeg = _BOOL ; \n\t$F1082 } \n"}, {"code": "private $F33153 createExportMaskMap ( $F4324 placedMasks ) { \n\t$F33153 $F8690 ( exportMaskMap ) ; \n\tIterator < ExportMask > exportMaskIterator = dbClient . queryIterativeObjects ( ExportMask . class , placedMasks , _BOOL ) ; \n\twhile $F2921 ( exportMaskIterator ) { \n\t\tExportMask exportMask = exportMaskIterator . next ( ) ; \n\t\t$F33163 ( exportMaskMap , exportMask ) } \n\treturn exportMaskMap ; \n\t} \n"}, {"code": "public ImmutableArray2 $F22664 insert ( int index , K obj ) { \n\tint len = length + NUM00 ; \n\tint newLen = len ; \n\tboolean extendable ; \n\tif ( index == len - NUM00 ) { \n\t\tAtomicBoolean x = canExtend ; \n\t\tif ( x != null ) { \n\t\t\tcanExtend = null ; \n\t\t\tif ( array . length > index && x . getAndSet ( _BOOL ) ) { \n\t\t\t\tarray [ index ] = obj ; \n\t\t\t\treturn new ImmutableArray2 $F22664 ( array , len , _BOOL ) ; \n\t\t\t\t} \n\t\t\t} \n\t\textendable = _BOOL ; \n\t\tnewLen = len + NUM00 ; \n\t\t} \n\telse { \n\t\textendable = _BOOL ; \n\t\t} \n\t$F1431 $F26136 a2 = ( $F26136 ) new Object [ newLen ] ; \n\tDataUtils . copyWithGap ( array , a2 , length , index ) ; \n\ta2 [ index ] = obj ; \n\treturn new ImmutableArray2 $F22664 ( a2 , len , extendable ) ; \n\t} \n"}, {"code": "public void writeNoScale ( Image c , Component i ) { \n\t$F113304 ( page , newpage ) int x = x0 + width - ( c . getWidth ( null ) + charwidth ) ; \n\tint y = y0 + ( linenum * lineheight ) + lineascent ; \n\tif ( page != null && pagenum >= prFirst ) { \n\t\tpage . drawImage ( c , x , y , c . getWidth ( null ) , c . getHeight ( null ) , null ) ; \n\t\t} \n\t} \n"}, {"code": "public void putDocumentInCache ( int n , Source source ) { \n\tint cachedNode = getNode ( source ) ; \n\tif ( DTM . NULL != cachedNode ) { \n\t\tif $F62529 ( cachedNode , n ) throw new RuntimeException ( NUM00 + NUM00 + source . getSystemId ( ) ) ; \n\t\t$F665 } \n\tif ( null != source . getSystemId ( ) ) { \n\t\tm_sourceTree . addElement ( new SourceTree ( n , source . getSystemId ( ) ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public static void copy ( InputStream is , Resource out , boolean closeIS ) throws IOException { \n\tOutputStream os = null ; \n\ttry { \n\t\tos = toBufferedOutputStream ( out . getOutputStream ( ) ) ; \n\t\t} \n\tcatch ( IOException ioe ) { \n\t\tIOUtil . closeEL ( os ) ; \n\t\tthrow ioe ; \n\t\t} \n\tcopy ( is , os , closeIS , _BOOL ) ; \n\t} \n"}, {"code": "public String fadeAudio ( String path , String type , double fadeInLength , double stopTime , double fadeOutLength ) throws IOException { \n\tfinal $F3803 curves = Arrays . asList ( new String [ ] { \n\t\tNUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t) ; \n\tif $F2200 ( curves , type ) $F1666 ( type ) $F1705 ( file , path ) String outFile = file . getCanonicalPath ( ) + NUM00 ; \n\t$F8728 ( cmd ) cmd . add ( soxBin ) ; \n\tcmd . add ( path ) ; \n\tcmd . add ( outFile ) ; \n\t$F18793 ( cmd ) cmd . add ( type ) ; \n\t$F31982 ( cmd , fadeInLength ) if ( stopTime != - NUM00 ) $F31982 ( cmd , stopTime ) if ( fadeOutLength != - NUM00 ) $F31982 ( cmd , fadeOutLength ) try { \n\t\tint rc = execSox ( cmd , callback ) ; \n\t\tif ( rc != NUM00 ) { \n\t\t\toutFile = null ; \n\t\t\t} \n\t\t} \n\t$F12241 ( e ) $F3101 ( e ) return outFile ; \n\t} \n"}, {"code": "$F1 public void draw ( Canvas canvas ) { \n\tsuper . draw ( canvas ) ; \n\tif ( mEdgeGlowTop != null ) { \n\t\t$F3666 ( scrollX , getScrollX ) if ( ! mEdgeGlowTop . isFinished ( ) ) { \n\t\t\tfinal int restoreCount = canvas . save ( ) ; \n\t\t\tfinal int topPadding = mListPadding . top + mGlowPaddingTop ; \n\t\t\tfinal int bottomPadding = mListPadding . bottom + mGlowPaddingBottom ; \n\t\t\tfinal int height = getHeight ( ) - topPadding - bottomPadding ; \n\t\t\tint edgeX = Math . min ( NUM00 , scrollX + mFirstPositionDistanceGuess ) ; \n\t\t\tcanvas . rotate ( - NUM00 ) ; \n\t\t\tcanvas . translate ( - getHeight ( ) + topPadding , edgeX ) ; \n\t\t\tmEdgeGlowTop . setSize ( height , height ) ; \n\t\t\tif ( mEdgeGlowTop . draw ( canvas ) ) $F5795 ( invalidate ) canvas . restoreToCount ( restoreCount ) ; \n\t\t\t} \n\t\tif ( ! mEdgeGlowBottom . isFinished ( ) ) { \n\t\t\tfinal int restoreCount = canvas . save ( ) ; \n\t\t\tfinal int topPadding = mListPadding . left + mGlowPaddingTop ; \n\t\t\tfinal int bottomPadding = mListPadding . right + mGlowPaddingBottom ; \n\t\t\tfinal int height = getHeight ( ) - topPadding - bottomPadding ; \n\t\t\t$F3666 ( width , getWidth ) int edgeX = Math . max ( width , scrollX + mLastPositionDistanceGuess ) ; \n\t\t\tcanvas . rotate ( NUM00 ) ; \n\t\t\t$F86480 ( canvas , topPadding , edgeX ) mEdgeGlowBottom . setSize ( height , height ) ; \n\t\t\tif ( mEdgeGlowBottom . draw ( canvas ) ) $F5795 ( invalidate ) canvas . restoreToCount ( restoreCount ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static ClassProperties loadProperties ( $F749 cls , Properties properties , boolean inherit ) { \n\tClassProperties cp = new ClassProperties ( properties ) ; \n\tfor ( Class c : cls ) { \n\t\tcp . load ( c , inherit ) ; \n\t\t} \n\treturn cp ; \n\t} \n"}, {"code": "public void testCase20 $F72 { \n\t$F3017 $F3021 int bSign = NUM00 ; \n\tBigInteger aNumber = BigInteger . ZERO ; \n\t$F3023 ( bNumber , bSign , bBytes ) $F3024 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "private static void fixGPSTimeStamp ( XMPNode exifSchema ) throws XMPException { \n\tXMPNode gpsDateTime = XMPNodeUtils . findChildNode ( exifSchema , NUM00 , _BOOL ) ; \n\t$F2329 ( gpsDateTime ) try { \n\t\tXMPDateTime binGPSStamp ; \n\t\tXMPDateTime binOtherDate ; \n\t\tbinGPSStamp = XMPUtils . convertToDate ( gpsDateTime . getValue ( ) ) ; \n\t\tif ( binGPSStamp . getYear ( ) != NUM00 || binGPSStamp . getMonth ( ) != NUM00 || binGPSStamp . getDay ( ) != NUM00 ) $F932 XMPNode otherDate = XMPNodeUtils . findChildNode ( exifSchema , NUM00 , _BOOL ) ; \n\t\tif ( otherDate == null ) { \n\t\t\totherDate = XMPNodeUtils . findChildNode ( exifSchema , NUM00 , _BOOL ) ; \n\t\t\t} \n\t\tbinOtherDate = XMPUtils . convertToDate ( otherDate . getValue ( ) ) ; \n\t\tCalendar cal = binGPSStamp . getCalendar ( ) ; \n\t\tcal . set ( Calendar . YEAR , binOtherDate . getYear ( ) ) ; \n\t\tcal . set ( Calendar . MONTH , binOtherDate . getMonth ( ) ) ; \n\t\tcal . set ( Calendar . DAY_OF_MONTH , binOtherDate . getDay ( ) ) ; \n\t\tbinGPSStamp = new XMPDateTimeImpl ( cal ) ; \n\t\tgpsDateTime . setValue ( XMPUtils . convertFromDate ( binGPSStamp ) ) ; \n\t\t} \n\tcatch ( XMPException e ) $F932 } \n"}, {"code": "protected boolean cellConsumesEventType ( Cell $F1011 cell , String eventType ) { \n\t$F2689 consumedEvents = cell . getConsumedEvents ( ) ; \n\t$F28807 ( consumedEvents , eventType ) } \n"}, {"code": "public int read $F72 throws IOException { \n\t$F7468 ( b0 , fInputStream ) if ( b0 > NUM00 ) { \n\t\tthrow new IOException ( Localizer . getMessage ( NUM00 , Integer . toString ( b0 ) ) ) ; \n\t\t} \n\treturn b0 ; \n\t} \n"}, {"code": "protected void create_y_axis ( int i ) { \n\tLog . e ( NUM00 , i + NUM00 ) ; \n\tfloat ver_height = ( ( graphheight / label_size ) * i ) + border ; \n\tif $F2283 ( i , largest_value_set ) canvas . drawLine ( horstart , ver_height , width - ( border ) , ver_height , paint ) ; \n\telse $F41674 ( canvas , horstart , ver_height , border , paint ) $F339 ( paint , Color ) int Y_labels = ( int ) size - NUM00 - i ; \n\tString y_labels = String . format ( NUM00 , Y_labels * y_axis_ratio ) ; \n\tpaint . setTextAlign ( Paint . Align . RIGHT ) ; \n\tcanvas . drawText ( y_labels , horstart - NUM00 , ver_height - NUM00 , paint ) ; \n\tpaint . setTextAlign ( Paint . Align . LEFT ) ; \n\t} \n"}, {"code": "public long max $F72 $F1522 ( deltaMax ) "}, {"code": "public void print ( File file ) throws IOException { \n\tcheckExec ( ) ; \n\t$F8108 ( sm , System ) if ( sm != null ) { \n\t\tsm . checkPrintJobAccess ( ) ; \n\t\t} \n\tcheckActionSupport ( Action . PRINT ) ; \n\tcheckFileValidation ( file ) ; \n\tpeer . print ( file ) ; \n\t} \n"}, {"code": "public void extend ( RuleGrounding other ) { \n\tif ( other . isFailed ( ) ) { \n\t\t$F725 ( groundings ) $F665 } \n\textend ( other . getAlternatives ( ) ) ; \n\t} \n"}, {"code": "$F1 public String expect ( Pattern pattern ) { \n\tfinal String token = read ( pattern ) ; \n\tif ( token == null ) { \n\t\tthrow new ParserException ( NUM00 + pattern . pattern ( ) + NUM00 + document ) ; \n\t\t} \n\treturn token ; \n\t} \n"}, {"code": "public void testGetTableTypesOrder $F72 throws Exception { \n\t$F9236 ( dmd , con ) ResultSet rs = dmd . getTableTypes ( ) ; \n\tString previousType = NUM00 ; \n\twhile $F1682 ( rs ) { \n\t\t$F27130 ( type , rs ) assertTrue ( type . compareTo ( previousType ) >= NUM00 ) ; \n\t\tpreviousType = type ; \n\t\t} \n\t$F59 ( rs ) } \n"}, {"code": "private FileChannel updateCache ( String filePath ) { \n\tFileChannel fileChannel = fileNameAndStreamCache . get ( filePath ) ; \n\ttry { \n\t\tif ( null == fileChannel ) { \n\t\t\t$F4647 ( stream , filePath ) $F42861 ( fileChannel , stream ) fileNameAndStreamCache . put ( filePath , fileChannel ) ; \n\t\t\t} \n\t\t} \n\tcatch ( IOException e ) { \n\t\tLOGGER . error ( e , e . getMessage ( ) ) ; \n\t\t} \n\treturn fileChannel ; \n\t} \n"}, {"code": "$F43277 ( listener , mListeners ) "}, {"code": "private static String descriptorForFieldSignature ( String signature ) $F11447 ( signature ) "}, {"code": "public void addParameters ( final $F386819 parameters ) { \n\t$F1932 ( LOG ) if ( parameters == null ) $F10911 ( LOG ) else { \n\t\tsuper . clearRequestBody ( ) ; \n\t\t$F68861 ( i , parameters , params ) } \n\t} \n"}, {"code": "$F21175 public Atom annotationInterfaceToAnnotationClass $F72 { \n\t$F64222 ( annotationClassName_tmp , val ) $F12508 ( System , val , annotationClassName_tmp ) annotationClassName_tmp [ val . length - NUM00 ] = NUM00 ; \n\tannotationClassName_tmp [ val . length ] = NUM00 ; \n\tannotationClassName_tmp [ val . length + NUM00 ] = NUM00 ; \n\treturn Atom . findOrCreateUtf8Atom ( annotationClassName_tmp ) ; \n\t} \n"}, {"code": "public boolean resourceSupportAR ( Integer id ) { \n\t$F1933 ( id , _BOOL ) return resourceSupportAR ( id . intValue ( ) ) ; \n\t} \n"}, {"code": "public static $F529 createElectronicText $F71242 ( dctx , context ) { \n\t$F157005 ( result , createElectronicTextMethod , dctx , context ) return result ; \n\t} \n"}, {"code": "public PatternGuardExpr ( String namespace , String name , Expression [ ] parameters , PatternExpr guarded ) { \n\tthis ( namespace , name , Arrays . asList ( parameters ) , guarded ) ; \n\t} \n"}, {"code": "public static int intersectLineLine ( Line2D a , Line2D b , Point2D intersect ) { \n\tdouble a1x = a . getX1 ( ) , a1y = a . getY1 ( ) ; \n\tdouble a2x = a . getX2 ( ) , a2y = a . getY2 ( ) ; \n\tdouble b1x = b . getX1 ( ) , b1y = b . getY1 ( ) ; \n\tdouble b2x = b . getX2 ( ) , b2y = b . getY2 ( ) ; \n\treturn intersectLineLine ( a1x , a1y , a2x , a2y , b1x , b1y , b2x , b2y , intersect ) ; \n\t} \n"}, {"code": "public static Set updateAndGetRemovableOCs ( Set origSet , Set removeOCs ) { \n\tSet returnOCs = removeOCs ; \n\tif $F1032 ( removeOCs ) { \n\t\t$F266988 ( returnOCs ) $F10531 ( itr1 , origSet ) while $F2921 ( itr1 ) { \n\t\t\t$F2778 ( origOC , itr1 ) $F10531 ( itr2 , removeOCs ) while $F2921 ( itr2 ) { \n\t\t\t\t$F2778 ( removeOC , itr2 ) if $F8397 ( origOC , removeOC ) $F97801 ( returnOCs , origOC ) } \n\t\t\t} \n\t\torigSet . removeAll ( returnOCs ) ; \n\t\t} \n\treturn returnOCs ; \n\t} \n"}, {"code": "public static int unixTimestamp $F72 { \n\treturn ( int ) $F210831 ( System ) ; \n\t} \n"}, {"code": "public boolean isPDFLicense $F72 { \n\tString key = getSummary ( ) ; \n\t$F179974 ( key ) } \n"}, {"code": "protected void drawGridBackground ( Canvas c ) { \n\t$F351179 ( mDrawGridBackground , c , mViewPortHandler , mGridBackgroundPaint ) $F351179 ( mDrawBorders , c , mViewPortHandler , mBorderPaint ) } \n"}, {"code": "public ZipStreamImpl openReadImpl ( PathImpl path ) throws IOException { \n\t$F14393 ( pathName , path ) return openReadImpl ( pathName ) ; \n\t} \n"}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "$F1 public void onTmpFilesCopied ( ResultCode result ) $F9099 ( dismissLoadingDialog , finish ) "}, {"code": "public synchronized OMGraphicList prepare $F72 { \n\tProjection projection = getProjection ( ) ; \n\tboolean DEBUG_FINE = $F5288 ( logger , Level ) ; \n\tif ( projection == null ) { \n\t\tif ( DEBUG_FINE ) { \n\t\t\tlogger . fine ( getName ( ) + NUM00 ) ; \n\t\t\t} \n\t\treturn new OMGraphicList $F72 ; \n\t\t} \n\tif ( spatialIndex == null ) { \n\t\tif ( DEBUG_FINE ) { \n\t\t\tlogger . fine ( getName ( ) + NUM00 ) ; \n\t\t\t} \n\t\tOMGraphicList list = getList ( ) ; \n\t\tif ( list != null ) { \n\t\t\tlist . generate ( projection , _BOOL ) ; \n\t\t\treturn list ; \n\t\t\t} \n\t\telse { \n\t\t\treturn new OMGraphicList $F72 ; \n\t\t\t} \n\t\t} \n\tPoint2D ul = projection . getUpperLeft ( ) ; \n\tPoint2D lr = projection . getLowerRight ( ) ; \n\t$F82240 ( ulLat , ul ) $F82242 ( ulLon , ul ) $F82240 ( lrLat , lr ) $F82242 ( lrLon , lr ) $F138819 ( list ) if ( ProjMath . isCrossingDateline ( ulLon , lrLon , projection . getScale ( ) ) ) { \n\t\t$F22808 ( DEBUG_FINE , logger ) $F59772 ( ymin , Math , ulLat , lrLat ) $F7560 ( ymax , Math , ulLat , lrLat ) try { \n\t\t\tlist = spatialIndex . getOMGraphics ( ulLon , ymin , NUM00 , ymax , list , drawingAttributes , projection , coordTransform ) ; \n\t\t\tlist = spatialIndex . getOMGraphics ( - NUM00 , ymin , lrLon , ymax , list , drawingAttributes , projection , coordTransform ) ; \n\t\t\t} \n\t\tcatch ( InterruptedIOException iioe ) { \n\t\t\tlist = null ; \n\t\t\t} \n\t\tcatch ( IOException ex ) { \n\t\t\t$F157331 ( DEBUG_FINE , ex ) } \n\t\tcatch ( FormatException fe ) { \n\t\t\t$F157331 ( DEBUG_FINE , fe ) } \n\t\tcatch ( NullPointerException npe ) { \n\t\t\t$F157331 ( DEBUG_FINE , npe ) } \n\t\t} \n\telse { \n\t\t$F59772 ( xmin , Math , ulLon , lrLon ) $F7560 ( xmax , Math , ulLon , lrLon ) $F59772 ( ymin , Math , ulLat , lrLat ) $F7560 ( ymax , Math , ulLat , lrLat ) try { \n\t\t\tlist = spatialIndex . getOMGraphics ( xmin , ymin , xmax , ymax , list , drawingAttributes , projection , coordTransform ) ; \n\t\t\t} \n\t\tcatch ( InterruptedIOException iioe ) { \n\t\t\tlist = null ; \n\t\t\t} \n\t\tcatch ( $F3258 ex ) { \n\t\t\t$F157331 ( DEBUG_FINE , ex ) } \n\t\tcatch ( FormatException fe ) { \n\t\t\t$F157331 ( DEBUG_FINE , fe ) } \n\t\tcatch ( NullPointerException npe ) { \n\t\t\t$F157331 ( DEBUG_FINE , npe ) } \n\t\t} \n\treturn list ; \n\t} \n"}, {"code": "static WorkQueue commonSubmitterQueue $F72 { \n\tForkJoinPool p ; \n\t$F17861 ws ; \n\tint m ; \n\tSubmitter z ; \n\treturn ( $F17863 ( z , submitters ) && ( p = commonPool ) != null && $F17865 ( ws , p ) && $F17868 ( m , ws ) ) ? ws [ m & z . seed & SQMASK ] : null ; \n\t} \n"}, {"code": "private boolean isFieldPackagePrivate ( Element attribute ) { \n\tSet < Modifier > modifiers = attribute . getModifiers ( ) ; \n\treturn ! modifiers . contains ( PUBLIC ) && ! modifiers . contains ( PROTECTED ) && ! modifiers . contains ( PRIVATE ) ; \n\t} \n"}, {"code": "public void testDivideRoundHalfUpPos $F72 $F207243 ( a , aScale , b , bScale , c , resScale , aNumber , bNumber , result , BigDecimal , assertEquals ) "}, {"code": "public boolean reallyRestoreMsWordListFormatForUser ( String userId , InputStreamReader streamReader , boolean isAdmin , Errors errors ) { \n\tif ( userId == null ) { \n\t\tErrors . add ( errors , errorMessages . errorsUserIdIsNull ( ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tif ( streamReader == null ) { \n\t\tErrors . add ( errors , errorMessages . errorsTheInputStreamReaderIsNull ( ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t$F20481 ( bf , streamReader ) final User user = getUserById ( userId ) ; \n\t$F1933 ( user , _BOOL ) boolean createdAnyChildren = _BOOL ; \n\ttry { \n\t\t$F42358 ( now , System ) Entry notebook = createEntryNoteBook ( user , NUM00 , now , null , null , _BOOL , _BOOL , _BOOL , isAdmin , _BOOL , errors ) ; \n\t\t$F1933 ( notebook , _BOOL ) Entry root = getEntryById ( notebook . getRootId ( ) ) ; \n\t\t$F60075 parents = new $F60075 $F72 ; \n\t\tHashMap $F8434 bulletToDepth = new HashMap $F8434 $F72 ; \n\t\tString line = null ; \n\t\tInteger previousDepth = NUM00 ; \n\t\tparents . add ( root ) ; \n\t\twhile $F443 ( line , bf ) { \n\t\t\t$F1382 ( line ) if $F2979 ( line ) $F1448 String note = line ; \n\t\t\tInteger depth = NUM00 ; \n\t\t\tif ( $F15506 ( line ) ) { \n\t\t\t\t$F28921 ( bullet , line ) $F64779 ( note , line ) depth = bulletToDepth . get ( bullet ) ; \n\t\t\t\tif ( depth == null ) { \n\t\t\t\t\tdepth = new Integer ( $F2958 ( bulletToDepth ) ) ; \n\t\t\t\t\tbulletToDepth . put ( bullet , depth ) ; \n\t\t\t\t\t} \n\t\t\t\tfor ( $F2198 ( i , parents ) ; \n\t\t\t\ti > depth . intValue ( ) ; \n\t\t\t\t-- i ) { \n\t\t\t\t\t$F18938 ( parents , i ) } \n\t\t\t\tdepth = new Integer ( $F2958 ( parents ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tpreviousDepth = NUM00 ; \n\t\t\t\twhile $F3817 ( parents ) $F68329 ( parents ) } \n\t\t\t$F4975 ( parents , _BOOL ) Entry $F7662 ( parent , parents ) ; \n\t\t\tEntry entry = createSimpleEntry ( user , note , now , parent . getId ( ) , TreeRelType . Parent , _BOOL , _BOOL , _BOOL , isAdmin , Constants . note , errors , null ) ; \n\t\t\t$F1933 ( entry , _BOOL ) if ( previousDepth . intValue ( ) != depth . intValue ( ) ) $F207 ( parents , entry ) else $F233310 ( parents , entry ) createdAnyChildren = _BOOL ; \n\t\t\t} \n\t\t} \n\tcatch ( IOException e ) { \n\t\tErrors . add ( errors , errorMessages . errorProblemReadingInput ( ) ) ; \n\t\t} \n\treturn createdAnyChildren ; \n\t} \n"}, {"code": "$F169125 protected void onPageScrolled $F3665 ( position , offset , offsetPixels ) { \n\t$F31867 ( mDecorChildCount , scrollX , getScrollX , paddingLeft , getPaddingLeft , paddingRight , getPaddingRight , width , getWidth , childCount , getChildCount , i , child , getChildAt , lp , hgrav , Gravity , childLeft , Math , childOffset ) dispatchOnPageScrolled ( position , offset , offsetPixels ) ; \n\t$F31877 ( mPageTransformer , scrollX , getScrollX , childCount , getChildCount , i , child , getChildAt , lp , transformPos , getClientWidth ) mCalledSuper = _BOOL ; \n\t} \n"}, {"code": "public static String convertCodes ( String string ) { \n\t$F6928 ( string ) int current = NUM00 ; \n\t$F7782 ( cs , string ) $F83 ( sb ) for ( char c : cs ) { \n\t\tif ( current <= cs . length && c == NUM00 ) { \n\t\t\tchar tc = Character . toLowerCase ( cs [ current + NUM00 ] ) ; \n\t\t\tif ( tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 || tc == NUM00 ) $F86 ( sb ) else $F288 ( sb , c ) } \n\t\telse $F288 ( sb , c ) current ++ ; \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "private void loadText ( InputStream is ) { \n\tBufferedReader reader ; \n\tString line ; \n\t$F13241 ( unitList ) $F13241 ( unitTypesList ) if ( is == null ) $F78453 $F105457 ( reader , is ) try { \n\t\t$F36243 ( line , reader ) lineCount ++ ; \n\t\twhile ( line != null ) { \n\t\t\tif $F14943 ( line ) { \n\t\t\t\tparseAndAdd ( line , reader ) ; \n\t\t\t\t} \n\t\t\t$F36243 ( line , reader ) } \n\t\t$F59 ( reader ) units = new DatabaseClusterUnit $F2313 ( unitList ) ; \n\t\tunits = ( DatabaseClusterUnit [ ] ) unitList . toArray ( units ) ; \n\t\tunitList = null ; \n\t\tunitTypes = new UnitType $F2313 ( unitTypesList ) ; \n\t\tunitTypes = ( UnitType [ ] ) unitTypesList . toArray ( unitTypes ) ; \n\t\tunitTypesList = null ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tthrow new Error ( e . getMessage ( ) + NUM00 + lineCount ) ; \n\t\t} \n\t$F4231 } \n"}, {"code": "private float calculateSelectorRadius $F72 { \n\tif ( mfSelectorRadius == NUM00 ) { \n\t\t$F2047 ( nHeight , mSelectedView ) $F2049 ( nWidth , mSelectedView ) $F17432 ( nLargerSide , Math , nWidth , nHeight ) mfSelectorRadius = ( ( nLargerSide ^ NUM00 ) / NUM00 ) ; \n\t\t} \n\treturn mfSelectorRadius ; \n\t} \n"}, {"code": "private int measureWidth ( int measureSpec ) { \n\tint result ; \n\t$F20444 ( specMode , MeasureSpec , measureSpec ) $F23132 ( specSize , MeasureSpec , measureSpec ) if ( specMode == MeasureSpec . EXACTLY ) { \n\t\tresult = specSize ; \n\t\t} \n\telse { \n\t\tresult = ( int ) mTextPaint . measureText ( mText ) + getPaddingLeft ( ) + getPaddingRight ( ) ; \n\t\t$F23140 ( specMode , MeasureSpec , result , Math , specSize ) } \n\treturn result ; \n\t} \n"}, {"code": "public void test_getPutByteArray $F72 { \n\tfinal int capacity = NUM00 ; \n\tfinal ByteArrayBuffer buf = new ByteArrayBuffer ( capacity ) ; \n\tassertEquals ( $F19905 , buf . getByte ( NUM00 ) ) ; \n\tassertEquals ( $F19905 , buf . getByte ( capacity - NUM00 ) ) ; \n\tfinal int pos = NUM00 ; \n\tfor ( $F119 ( i , LIMIT ) ) { \n\t\tfinal $F96 expected = new byte [ r . nextInt ( capacity - NUM00 ) ] ; \n\t\tr . nextBytes ( expected ) ; \n\t\tbuf . put ( pos , expected ) ; \n\t\tassertEquals ( NUM00 , BytesUtil . compareBytesWithLenAndOffset ( NUM00 , expected . length , expected , pos , expected . length , buf . array ( ) ) ) ; \n\t\tfinal $F96 $F14612 ( actual , expected ) ; \n\t\tbuf . get ( pos , actual ) ; \n\t\tassertTrue ( BytesUtil . bytesEqual ( expected , actual ) ) ; \n\t\t} \n\tassertEquals ( $F19905 , buf . getByte ( NUM00 ) ) ; \n\tassertEquals ( $F19905 , buf . getByte ( pos + capacity - NUM00 ) ) ; \n\t} \n"}, {"code": "$F1 public void onAdded ( final RPObject object ) { \n\tif ( isUser ( object ) ) { \n\t\tif $F16934 ( object ) { \n\t\t\t$F103786 ( adminlevel , object ) } \n\t\t} \n\t} \n"}, {"code": "private String local_number $F72 throws ParseException { \n\t$F83 ( s ) $F10954 ( debug , dbg_enter ) try { \n\t\tint lc = NUM00 ; \n\t\twhile ( lexer . hasMoreChars ( ) ) { \n\t\t\tchar la = lexer . lookAhead ( NUM00 ) ; \n\t\t\tif ( la == NUM00 || la == NUM00 || la == NUM00 || la == NUM00 || la == NUM00 || la == NUM00 || Lexer . isHexDigit ( la ) ) { \n\t\t\t\tlexer . consume ( NUM00 ) ; \n\t\t\t\ts . append ( la ) ; \n\t\t\t\tlc ++ ; \n\t\t\t\t} \n\t\t\telse if ( lc > NUM00 ) $F597 else throw createParseException ( NUM00 + la ) ; \n\t\t\t} \n\t\t$F92 ( s ) } \n\tfinally { \n\t\t$F10954 ( debug , dbg_leave ) } \n\t} \n"}, {"code": "public void pathValuesToPixel ( $F77502 paths ) $F155016 ( i , paths , pathValueToPixel ) "}, {"code": "public static $F96 decode ( String s ) $F36684 ( decode , s ) "}, {"code": "public static void checkState ( boolean expression , Object errorMessage ) { \n\tif ( ExoPlayerLibraryInfo . ASSERTIONS_ENABLED && ! expression ) { \n\t\tthrow new IllegalStateException $F45942 ( String , errorMessage ) ; \n\t\t} \n\t} \n"}, {"code": "public static void slideInFromTopAnimator ( $F4170 List $F113170 animators , $F4170 View view , RecyclerView recyclerView ) { \n\talphaAnimator ( animators , view , NUM00 ) ; \n\tanimators . add ( ObjectAnimator . ofFloat ( view , NUM00 , - recyclerView . getMeasuredHeight ( ) > > NUM00 , NUM00 ) ) ; \n\tif ( FlexibleAdapter . DEBUG ) $F27746 ( Log , TAG ) } \n"}, {"code": "MutableBigInteger ( MutableBigInteger val ) { \n\tintLen = val . intLen ; \n\tvalue = Arrays . copyOfRange ( val . value , val . offset , val . offset + intLen ) ; \n\t} \n"}, {"code": "@ RequestMapping ( $F3144 ) public void ssoBindingError ( Locale locale , @ PathVariable ( $F3144 ) String tenant , HttpServletResponse response ) throws IOException { \n\tlogger . info ( $F370 ( locale , tenant ) ) ; \n\tssoDefaultTenantError ( locale , response ) ; \n\t} \n"}, {"code": "public CheckpointManager ( NetworkParameters params , $F5466 InputStream inputStream ) throws IOException { \n\tthis . params = checkNotNull ( params ) ; \n\t$F192589 ( inputStream , openStream , params ) checkNotNull ( inputStream ) ; \n\tinputStream = new BufferedInputStream ( inputStream ) ; \n\t$F46282 ( inputStream ) $F7468 ( first , inputStream ) $F2268 ( inputStream ) if ( first == BINARY_MAGIC . charAt ( NUM00 ) ) dataHash = readBinary ( inputStream ) ; \n\telse if ( first == TEXTUAL_MAGIC . charAt ( NUM00 ) ) dataHash = readTextual ( inputStream ) ; \n\telse $F3575 } \n"}, {"code": "public IndexSegmentIndex ( IRawStore store , Checkpoint checkpoint , IndexMetadata metadata , boolean readOnly ) { \n\tsuper ( store , checkpoint , metadata , readOnly ) ; \n\t} \n"}, {"code": "private String liveness $F72 { \n\tboolean isClosed = _BOOL ; \n\ttry { \n\t\tif ( isClosed ( ) ) { \n\t\t\tisClosed = _BOOL ; \n\t\t\t} \n\t\t} \n\tcatch ( SQLException s ) { \n\t\tisClosed = _BOOL ; \n\t\t} \n\tif ( isClosed ) $F2455 $F1278 } \n"}, {"code": "private static void insertValue ( final $F14855 paramsMap , final String paramVal , final String parameterName ) { \n\tif ( paramVal != null ) { \n\t\t$F24645 ( list ) list . add ( paramVal ) ; \n\t\tparamsMap . put ( parameterName , list ) ; \n\t\t} \n\t} \n"}, {"code": "public Dimension minimumLayoutSize ( Container target ) { \n\tDimension size ; \n\tsynchronized ( this ) { \n\t\tcheckContainer ( target ) ; \n\t\tcheckRequests ( ) ; \n\t\tsize = new Dimension ( xTotal . minimum , yTotal . minimum ) ; \n\t\t} \n\t$F3970 ( insets , target ) size . width = ( int ) Math . min ( ( long ) size . width + ( long ) insets . left + ( long ) insets . right , Integer . MAX_VALUE ) ; \n\tsize . height = ( int ) Math . min ( ( long ) size . height + ( long ) insets . top + ( long ) insets . bottom , Integer . MAX_VALUE ) ; \n\treturn size ; \n\t} \n"}, {"code": "private static void solve_l2r_l1l2_svr ( Problem prob , $F1986 w , Parameter param ) { \n\tint l = prob . l ; \n\tdouble C = param . C ; \n\tdouble p = param . p ; \n\tint w_size = prob . n ; \n\tdouble eps = param . eps ; \n\tint i , s , iter = NUM00 ; \n\tint max_iter = param . getMaxIters ( ) ; \n\tint active_size = l ; \n\t$F4120 ( index , l ) double d , G , H ; \n\tdouble Gmax_old = Double . POSITIVE_INFINITY ; \n\tdouble Gmax_new , Gnorm1_new ; \n\tdouble Gnorm1_init = - NUM00 ; \n\t$F9662 ( beta , l ) $F9662 ( QD , l ) $F1986 y = prob . y ; \n\t$F1986 lambda = new double [ ] { \n\t\tNUM00 / C } \n\t; \n\t$F1986 upper_bound = new double [ ] { \n\t\tDouble . POSITIVE_INFINITY } \n\t; \n\tif ( param . solverType == SolverType . L2R_L1LOSS_SVR_DUAL ) { \n\t\tlambda [ NUM00 ] = NUM00 ; \n\t\tupper_bound [ NUM00 ] = C ; \n\t\t} \n\tfor ( i = NUM00 ; \n\ti < l ; \n\ti ++ ) beta [ i ] = NUM00 ; \n\tfor ( i = NUM00 ; \n\ti < w_size ; \n\ti ++ ) w [ i ] = NUM00 ; \n\tfor ( i = NUM00 ; \n\ti < l ; \n\ti ++ ) { \n\t\tQD [ i ] = NUM00 ; \n\t\tfor ( Feature xi : prob . x [ i ] ) { \n\t\t\t$F10704 ( val , xi ) QD [ i ] += val * val ; \n\t\t\tw [ xi . getIndex ( ) - NUM00 ] += beta [ i ] * val ; \n\t\t\t} \n\t\tindex [ i ] = i ; \n\t\t} \n\twhile ( iter < max_iter ) { \n\t\tGmax_new = NUM00 ; \n\t\tGnorm1_new = NUM00 ; \n\t\tfor ( i = NUM00 ; \n\t\ti < active_size ; \n\t\ti ++ ) { \n\t\t\tint j = i + random . nextInt ( active_size - i ) ; \n\t\t\tswap ( index , i , j ) ; \n\t\t\t} \n\t\tfor ( s = NUM00 ; \n\t\ts < active_size ; \n\t\ts ++ ) { \n\t\t\ti = index [ s ] ; \n\t\t\tG = - y [ i ] + lambda [ GETI_SVR ( i ) ] * beta [ i ] ; \n\t\t\tH = QD [ i ] + lambda [ GETI_SVR ( i ) ] ; \n\t\t\tfor ( Feature xi : prob . x [ i ] ) { \n\t\t\t\tint ind = xi . getIndex ( ) - NUM00 ; \n\t\t\t\t$F10704 ( val , xi ) G += val * w [ ind ] ; \n\t\t\t\t} \n\t\t\tdouble Gp = G + p ; \n\t\t\tdouble Gn = G - p ; \n\t\t\tdouble violation = NUM00 ; \n\t\t\tif ( beta [ i ] == NUM00 ) { \n\t\t\t\tif ( Gp < NUM00 ) violation = - Gp ; \n\t\t\t\telse if ( Gn > NUM00 ) violation = Gn ; \n\t\t\t\telse if ( Gp > Gmax_old && Gn < - Gmax_old ) { \n\t\t\t\t\tactive_size -- ; \n\t\t\t\t\tswap ( index , s , active_size ) ; \n\t\t\t\t\ts -- ; \n\t\t\t\t\t$F598 } \n\t\t\t\t} \n\t\t\telse if ( beta [ i ] >= upper_bound [ GETI_SVR ( i ) ] ) { \n\t\t\t\tif ( Gp > NUM00 ) violation = Gp ; \n\t\t\t\telse if ( Gp < - Gmax_old ) { \n\t\t\t\t\tactive_size -- ; \n\t\t\t\t\tswap ( index , s , active_size ) ; \n\t\t\t\t\ts -- ; \n\t\t\t\t\t$F598 } \n\t\t\t\t} \n\t\t\telse if ( beta [ i ] <= - upper_bound [ GETI_SVR ( i ) ] ) { \n\t\t\t\tif ( Gn < NUM00 ) violation = - Gn ; \n\t\t\t\telse if ( Gn > Gmax_old ) { \n\t\t\t\t\tactive_size -- ; \n\t\t\t\t\tswap ( index , s , active_size ) ; \n\t\t\t\t\ts -- ; \n\t\t\t\t\t$F598 } \n\t\t\t\t} \n\t\t\telse if ( beta [ i ] > NUM00 ) violation = Math . abs ( Gp ) ; \n\t\t\telse violation = Math . abs ( Gn ) ; \n\t\t\t$F19410 ( Gmax_new , Math , violation ) Gnorm1_new += violation ; \n\t\t\tif ( Gp < H * beta [ i ] ) d = - Gp / H ; \n\t\t\telse if ( Gn > H * beta [ i ] ) d = - Gn / H ; \n\t\t\telse d = - beta [ i ] ; \n\t\t\tif $F20932 ( Math , d ) $F598 double beta_old = beta [ i ] ; \n\t\t\tbeta [ i ] = Math . min ( Math . max ( beta [ i ] + d , - upper_bound [ GETI_SVR ( i ) ] ) , upper_bound [ GETI_SVR ( i ) ] ) ; \n\t\t\td = beta [ i ] - beta_old ; \n\t\t\tif ( d != NUM00 ) { \n\t\t\t\tfor ( Feature xi : prob . x [ i ] ) { \n\t\t\t\t\tw [ xi . getIndex ( ) - NUM00 ] += d * xi . getValue ( ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tif ( iter == NUM00 ) Gnorm1_init = Gnorm1_new ; \n\t\titer ++ ; \n\t\tif ( iter % NUM00 == NUM00 ) info ( NUM00 ) ; \n\t\tif ( Gnorm1_new <= eps * Gnorm1_init ) { \n\t\t\tif ( active_size == l ) $F597 else { \n\t\t\t\tactive_size = l ; \n\t\t\t\tinfo ( NUM00 ) ; \n\t\t\t\tGmax_old = Double . POSITIVE_INFINITY ; \n\t\t\t\t$F598 } \n\t\t\t} \n\t\tGmax_old = Gmax_new ; \n\t\t} \n\tinfo ( NUM00 , iter ) ; \n\tif ( iter >= max_iter ) info ( NUM00 ) ; \n\tdouble v = NUM00 ; \n\tint nSV = NUM00 ; \n\tfor ( i = NUM00 ; \n\ti < w_size ; \n\ti ++ ) $F60596 ( v , w , i ) v = NUM00 * v ; \n\tfor ( i = NUM00 ; \n\ti < l ; \n\ti ++ ) { \n\t\tv += p * Math . abs ( beta [ i ] ) - y [ i ] * beta [ i ] + NUM00 * lambda [ GETI_SVR ( i ) ] * beta [ i ] * beta [ i ] ; \n\t\tif ( beta [ i ] != NUM00 ) nSV ++ ; \n\t\t} \n\tinfo ( NUM00 , v ) ; \n\tinfo ( NUM00 , nSV ) ; \n\t} \n"}, {"code": "public boolean select ( int position ) { \n\tView v = mAllList . get ( position ) ; \n\tif ( mMultiChoiceAdapter != null ) { \n\t\tperformVibrate ( ) ; \n\t\tperformSelect ( v , position , _BOOL ) ; \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F20795 ( result ) $F9007 ( result ) $F9007 ( result ) $F9010 ( result , Collections , super ) $F1007 ( result ) } \n"}, {"code": "$F1 public void ignorableWhitespace ( XMLString text , Augmentations augs ) throws XNIException { \n\tif ( ! fIncludeIgnorableWhitespace || fFilterReject ) $F932 if ( ! fDeferNodeExpansion ) { \n\t\tNode child = fCurrentNode . getLastChild ( ) ; \n\t\tif ( child != null && $F77051 ( child , Node ) ) { \n\t\t\tText textNode = ( Text ) child ; \n\t\t\ttextNode . appendData ( text . toString ( ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tText textNode = fDocument . createTextNode ( text . toString ( ) ) ; \n\t\t\tif ( fDocumentImpl != null ) { \n\t\t\t\tTextImpl textNodeImpl = ( TextImpl ) textNode ; \n\t\t\t\ttextNodeImpl . setIgnorableWhitespace ( _BOOL ) ; \n\t\t\t\t} \n\t\t\tfCurrentNode . appendChild ( textNode ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tint txt = fDeferredDocumentImpl . createDeferredTextNode ( text . toString ( ) , _BOOL ) ; \n\t\tfDeferredDocumentImpl . appendChild ( fCurrentNodeIndex , txt ) ; \n\t\t} \n\t} \n"}, {"code": "private static final void waitForEditorToBeActive ( IEditorPart internalFileEditor , IWorkbenchPage page ) { \n\t$F657 ( start , System ) long end = start ; \n\tdo $F22067 ( end , System ) while ( page . getActiveEditor ( ) != internalFileEditor && ( end - start ) < NUM00 ) ; \n\tif ( page . getActiveEditor ( ) != internalFileEditor ) $F10910 ( logger ) } \n"}, {"code": "private Solution largestObjectiveValue ( int objective , Population population ) { \n\tSolution largest = null ; \n\tdouble value = Double . NEGATIVE_INFINITY ; \n\tfor ( Solution solution : population ) { \n\t\tif ( solution . getObjective ( objective ) > value ) { \n\t\t\tlargest = solution ; \n\t\t\tvalue = solution . getObjective ( objective ) ; \n\t\t\t} \n\t\t} \n\treturn largest ; \n\t} \n"}, {"code": "public static int convertLatmToY ( int latm ) { \n\tlong v = Math . round ( ( Mercator . MAX_Y - Mercator . lat2y ( latm / LATLON_TO_LATLONM ) ) * MAX_AP_UNITS / ( Mercator . MAX_Y * NUM00 ) ) ; \n\tif ( v > MAX_AP_UNITS ) return MAX_AP_UNITS ; \n\t$F125151 ( v ) $F23219 ( v ) } \n"}, {"code": "public void registerCallbackHandler ( SMSObjectListener changeListener ) throws SMSException { \n\tobjectListener = changeListener ; \n\tif ( ! notificationInitialized ) { \n\t\tString notificationFlag = SystemProperties . get ( NOTIFICATION_PROPERTY , NUM00 ) ; \n\t\tif $F21935 ( notificationFlag ) { \n\t\t\ttry { \n\t\t\t\tURL url = WebtopNaming . getNotificationURL ( ) ; \n\t\t\t\tPLLClient . addNotificationHandler ( JAXRPCUtil . SMS_SERVICE , new SMSNotificationHandler $F72 ) ; \n\t\t\t\tclient . send ( NUM00 , url . toString ( ) , null , null ) ; \n\t\t\t\t$F36310 ( debug , url ) } \n\t\t\tcatch ( Exception e ) { \n\t\t\t\tif $F12866 ( debug ) { \n\t\t\t\t\tdebug . warning ( $F47745 ( e ) + NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\tstartPollingThreadIfEnabled ( getCachePollingInterval ( ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse $F7429 ( startPollingThreadIfEnabled , getCachePollingInterval ) notificationInitialized = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public static NSObject parse ( InputStream in ) throws ParseException , IOException { \n\t$F96 buf = PropertyListParser . readAll ( in ) ; \n\t$F59 ( in ) return parse ( buf ) ; \n\t} \n"}, {"code": "protected double currentScoreFunction $F72 { \n\tdouble score = NUM00 ; \n\tfor ( int i = NUM00 ; \n\ti < this . values [ this . currentVar1 ] . length ; \n\ti ++ ) { \n\t\tfor ( int j = NUM00 ; \n\t\tj < this . values [ this . currentVar2 ] . length ; \n\t\tj ++ ) { \n\t\t\tscore -= this . currentCounts [ this . currentVar1 ] [ this . currentVar2 ] [ i ] [ j ] * Math . log ( this . currentPi [ i ] [ j ] ) ; \n\t\t\t} \n\t\t} \n\treturn score ; \n\t} \n"}, {"code": "public grammaticalityEstimator ( Set FileNames , int iMinChar , int iMaxChar , int iCharWindow , int iMinWord , int iMaxWord , int iWordWindow ) { \n\tiMinCharNGram = iMinChar ; \n\tiMaxCharNGram = iMaxChar ; \n\tiMinWordNGram = iMinWord ; \n\tiMaxWordNGram = iMaxWord ; \n\tiWordDist = iWordWindow ; \n\tiCharDist = iCharWindow ; \n\tDistroDocs = new TreeMap < Integer , DistributionDocument > $F72 ; \n\tDistroWordDocs = new TreeMap < Integer , DistributionWordDocument > $F72 ; \n\t$F280 ( sb ) $F10531 ( iTexts , FileNames ) while $F2921 ( iTexts ) { \n\t\t$F2778 ( sFile , iTexts ) try { \n\t\t\t$F51387 ( bf , sFile ) String sTmp ; \n\t\t\twhile $F443 ( sTmp , bf ) sb . append ( sTmp ) ; \n\t\t\t$F59 ( bf ) } \n\t\tcatch ( FileNotFoundException ex ) $F289588 ( ex , System ) catch ( IOException ex ) $F289588 ( ex , System ) sb . append ( $F2858 ) ; \n\t\t} \n\t$F6947 ( FullTextDataString , sb ) for ( int iCnt = iMinCharNGram ; \n\tiCnt <= iMaxCharNGram ; \n\tiCnt ++ ) { \n\t\tDistroDocs . put ( iCnt , new DistributionDocument ( iCharDist , iCnt ) ) ; \n\t\t} \n\tfor ( int iCnt = iMinWordNGram ; \n\tiCnt <= iMaxWordNGram ; \n\tiCnt ++ ) { \n\t\tDistroWordDocs . put ( iCnt , new DistributionWordDocument ( iWordDist , iCnt ) ) ; \n\t\t} \n\t} \n"}, {"code": "private int checkZoneLink ( SpannableStringBuilder out , String in , int start ) { \n\tint pos = start + NUM00 ; \n\t$F83 ( temp ) String targetString = in . substring ( pos , Math . min ( in . length ( ) , pos + NUM00 ) ) ; \n\tboolean prevIsDash = _BOOL ; \n\tfor ( $F1088 ( i , targetString ) ) { \n\t\t$F1280 ( c , targetString , i ) if $F19297 ( c ) $F40016 ( temp , c , prevIsDash , _BOOL ) else if ( c == NUM00 ) { \n\t\t\t$F7630 ( i ) if ( prevIsDash ) { \n\t\t\t\t$F50865 ( temp ) $F597 } \n\t\t\ttemp . append ( c ) ; \n\t\t\tprevIsDash = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( prevIsDash ) $F50866 ( temp ) $F597 } \n\t\t} \n\t$F1822 ( zone , temp ) if ( $F3598 ( zone ) || zone . equalsIgnoreCase ( NUM00 ) ) $F7629 out . append ( zone ) ; \n\treturn pos + zone . length ( ) - NUM00 ; \n\t} \n"}, {"code": "public void checkNextPoissonConsistency ( double mean ) { \n\tfinal int sampleSize = NUM00 ; \n\tfinal int minExpectedCount = NUM00 ; \n\tlong maxObservedValue = NUM00 ; \n\tfinal double alpha = NUM00 ; \n\tUnitTestUtils . Frequency $F17803 frequency = new UnitTestUtils . Frequency $F17803 $F72 ; \n\tfor ( $F119 ( i , sampleSize ) ) { \n\t\tlong value = randomData . nextPoisson ( mean ) ; \n\t\t$F12283 ( value , maxObservedValue ) frequency . addValue ( value ) ; \n\t\t} \n\tPoissonDistribution poissonDistribution = new PoissonDistribution ( mean ) ; \n\tint lower = NUM00 ; \n\twhile ( poissonDistribution . cumulativeProbability ( lower - NUM00 ) * sampleSize < minExpectedCount ) { \n\t\tlower ++ ; \n\t\t} \n\tint upper = $F11263 ( mean ) ; \n\twhile ( ( NUM00 - poissonDistribution . cumulativeProbability ( upper - NUM00 ) ) * sampleSize < minExpectedCount ) { \n\t\tupper -- ; \n\t\t} \n\tint binWidth = NUM00 ; \n\tboolean widthSufficient = _BOOL ; \n\tdouble lowerBinMass = NUM00 ; \n\tdouble upperBinMass = NUM00 ; \n\twhile ( ! widthSufficient ) { \n\t\tbinWidth ++ ; \n\t\tlowerBinMass = poissonDistribution . probability ( lower - NUM00 , lower + binWidth - NUM00 ) ; \n\t\tupperBinMass = poissonDistribution . probability ( upper - binWidth - NUM00 , upper - NUM00 ) ; \n\t\twidthSufficient = FastMath . min ( lowerBinMass , upperBinMass ) * sampleSize >= minExpectedCount ; \n\t\t} \n\t$F67791 ( binBounds ) binBounds . add ( lower ) ; \n\tint bound = lower + binWidth ; \n\twhile ( bound < upper - binWidth ) { \n\t\tbinBounds . add ( bound ) ; \n\t\tbound += binWidth ; \n\t\t} \n\tbinBounds . add ( upper ) ; \n\tfinal int $F152626 ( binCount , binBounds ) ; \n\t$F12300 ( observed , binCount ) $F9662 ( expected , binCount ) observed [ NUM00 ] = NUM00 ; \n\tfor ( $F119 ( i , lower ) ) { \n\t\tobserved [ NUM00 ] += frequency . getCount ( ( long ) i ) ; \n\t\t} \n\texpected [ NUM00 ] = poissonDistribution . cumulativeProbability ( lower - NUM00 ) * sampleSize ; \n\tobserved [ binCount - NUM00 ] = NUM00 ; \n\tfor ( int i = upper ; \n\ti <= maxObservedValue ; \n\ti ++ ) { \n\t\tobserved [ binCount - NUM00 ] += frequency . getCount ( ( long ) i ) ; \n\t\t} \n\texpected [ binCount - NUM00 ] = ( NUM00 - poissonDistribution . cumulativeProbability ( upper - NUM00 ) ) * sampleSize ; \n\tfor ( $F4864 ( i , binCount ) ) { \n\t\tobserved [ i ] = NUM00 ; \n\t\tfor ( int j = binBounds . get ( i - NUM00 ) ; \n\t\tj < binBounds . get ( i ) ; \n\t\tj ++ ) { \n\t\t\tobserved [ i ] += frequency . getCount ( ( long ) j ) ; \n\t\t\t} \n\t\texpected [ i ] = ( poissonDistribution . cumulativeProbability ( binBounds . get ( i ) - NUM00 ) - poissonDistribution . cumulativeProbability ( binBounds . get ( i - NUM00 ) - NUM00 ) ) * sampleSize ; \n\t\t} \n\tif ( UnitTestUtils . chiSquareTest ( expected , observed ) < alpha ) { \n\t\t$F83 ( msgBuffer ) $F79122 ( df ) $F84 ( msgBuffer ) msgBuffer . append ( mean ) ; \n\t\t$F84 ( msgBuffer ) msgBuffer . append ( UnitTestUtils . chiSquareTest ( expected , observed ) ) ; \n\t\t$F84 ( msgBuffer ) msgBuffer . append ( UnitTestUtils . chiSquare ( expected , observed ) ) ; \n\t\t$F84 ( msgBuffer ) $F84 ( msgBuffer ) for ( $F1139 ( i , expected ) ) { \n\t\t\t$F84 ( msgBuffer ) msgBuffer . append ( i == NUM00 ? NUM00 : binBounds . get ( i - NUM00 ) ) ; \n\t\t\t$F84 ( msgBuffer ) msgBuffer . append ( i == binBounds . size ( ) ? NUM00 : binBounds . get ( i ) ) ; \n\t\t\t$F84 ( msgBuffer ) $F84 ( msgBuffer ) msgBuffer . append ( df . format ( expected [ i ] ) ) ; \n\t\t\t$F84 ( msgBuffer ) $F6939 ( msgBuffer , observed , i ) $F84 ( msgBuffer ) } \n\t\t$F84 ( msgBuffer ) msgBuffer . append ( alpha ) ; \n\t\t$F84 ( msgBuffer ) Assert . fail ( msgBuffer . toString ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static void checkValid $F9830 ( x ) { \n\tfor ( double v : x ) { \n\t\tif $F35707 ( Double , v ) $F1666 ( v ) } \n\t} \n"}, {"code": "final void layoutChildren ( boolean queryAdapter ) { \n\t$F3666 ( paddingLeft , getPaddingLeft ) $F3666 ( paddingRight , getPaddingRight ) final int itemMargin = mItemMargin ; \n\tfinal int colWidth = ( getWidth ( ) - paddingLeft - paddingRight - itemMargin * ( mColCount - NUM00 ) ) / mColCount ; \n\tmColWidth = colWidth ; \n\tint rebuildLayoutRecordsBefore = - NUM00 ; \n\tint rebuildLayoutRecordsAfter = - NUM00 ; \n\t$F406787 ( Arrays , mItemBottoms , Integer ) $F3666 ( childCount , getChildCount ) int amountRemoved = NUM00 ; \n\tfor ( $F119 ( i , childCount ) ) { \n\t\tView child = getChildAt ( i ) ; \n\t\t$F310049 ( lp , child ) final int col = lp . column ; \n\t\tfinal int position = mFirstPosition + i ; \n\t\tfinal boolean needsLayout = queryAdapter || child . isLayoutRequested ( ) ; \n\t\tif ( queryAdapter ) { \n\t\t\tView newView = obtainView ( position , child ) ; \n\t\t\tif ( newView == null ) { \n\t\t\t\tremoveViewAt ( i ) ; \n\t\t\t\tif ( i - NUM00 >= NUM00 ) invalidateLayoutRecordsAfterPosition ( i - NUM00 ) ; \n\t\t\t\tamountRemoved ++ ; \n\t\t\t\t$F598 } \n\t\t\telse if ( newView != child ) { \n\t\t\t\tremoveViewAt ( i ) ; \n\t\t\t\taddView ( newView , i ) ; \n\t\t\t\tchild = newView ; \n\t\t\t\t} \n\t\t\tlp = ( LayoutParams ) child . getLayoutParams ( ) ; \n\t\t\t} \n\t\tfinal int span = $F406799 ( Math , mColCount , lp ) ; \n\t\tfinal int widthSize = colWidth * span + itemMargin * ( span - NUM00 ) ; \n\t\tif ( needsLayout ) { \n\t\t\tfinal int widthSpec = $F19050 ( MeasureSpec , widthSize ) ; \n\t\t\tfinal int heightSpec ; \n\t\t\tif ( lp . height == LayoutParams . WRAP_CONTENT ) { \n\t\t\t\theightSpec = MeasureSpec . makeMeasureSpec ( NUM00 , MeasureSpec . UNSPECIFIED ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\theightSpec = MeasureSpec . makeMeasureSpec ( lp . height , MeasureSpec . EXACTLY ) ; \n\t\t\t\t} \n\t\t\tchild . measure ( widthSpec , heightSpec ) ; \n\t\t\t} \n\t\tint childTop = mItemBottoms [ col ] > Integer . MIN_VALUE ? mItemBottoms [ col ] + mItemMargin : child . getTop ( ) ; \n\t\tif ( span > NUM00 ) { \n\t\t\tint lowest = childTop ; \n\t\t\tfor ( int j = col + NUM00 ; \n\t\t\tj < col + span ; \n\t\t\tj ++ ) { \n\t\t\t\tfinal int bottom = mItemBottoms [ j ] + mItemMargin ; \n\t\t\t\t$F12283 ( bottom , lowest ) } \n\t\t\tchildTop = lowest ; \n\t\t\t} \n\t\tfinal int childHeight = child . getMeasuredHeight ( ) ; \n\t\tfinal int childBottom = childTop + childHeight ; \n\t\tfinal int childLeft = paddingLeft + col * ( colWidth + itemMargin ) ; \n\t\tfinal int childRight = childLeft + child . getMeasuredWidth ( ) ; \n\t\tchild . layout ( childLeft , childTop , childRight , childBottom ) ; \n\t\tfor ( $F5883 ( j , col , span ) ) { \n\t\t\tmItemBottoms [ j ] = childBottom ; \n\t\t\t} \n\t\tfinal LayoutRecord rec = mLayoutRecords . get ( position ) ; \n\t\tif ( rec != null && rec . height != childHeight ) { \n\t\t\trec . height = childHeight ; \n\t\t\trebuildLayoutRecordsBefore = position ; \n\t\t\t} \n\t\tif ( rec != null && rec . span != span ) { \n\t\t\trec . span = span ; \n\t\t\trebuildLayoutRecordsAfter = position ; \n\t\t\t} \n\t\t} \n\tfor ( $F119 ( i , mColCount ) ) { \n\t\tif ( mItemBottoms [ i ] == Integer . MIN_VALUE ) $F15086 ( mItemBottoms , i , mItemTops ) } \n\tif ( rebuildLayoutRecordsBefore >= NUM00 || rebuildLayoutRecordsAfter >= NUM00 ) { \n\t\t$F308891 ( rebuildLayoutRecordsBefore , invalidateLayoutRecordsBeforePosition ) $F308891 ( rebuildLayoutRecordsAfter , invalidateLayoutRecordsAfterPosition ) for ( int i = NUM00 ; \n\t\ti < ( childCount - amountRemoved ) ; \n\t\ti ++ ) { \n\t\t\tfinal int position = mFirstPosition + i ; \n\t\t\tfinal View child = getChildAt ( i ) ; \n\t\t\t$F3670 ( lp , child ) LayoutRecord rec = mLayoutRecords . get ( position ) ; \n\t\t\tif ( rec == null ) { \n\t\t\t\trec = new LayoutRecord $F72 ; \n\t\t\t\tmLayoutRecords . put ( position , rec ) ; \n\t\t\t\t} \n\t\t\trec . column = lp . column ; \n\t\t\t$F130165 ( rec , child ) rec . id = lp . id ; \n\t\t\trec . span = $F406799 ( Math , mColCount , lp ) ; \n\t\t\t} \n\t\t} \n\tif ( this . mSelectorPosition != INVALID_POSITION ) $F406862 ( child , getChildAt , mMotionPosition , mFirstPosition , positionSelector ) else if ( mTouchMode > TOUCH_MODE_DOWN ) $F406862 ( child , getChildAt , mMotionPosition , mFirstPosition , positionSelector ) else $F406864 ( mSelectorRect ) } \n"}, {"code": "protected void processConnectionEvent ( ConnectionEvent event ) { \n\tfor ( Enumeration < ConnectionListener > e = connectionListeners . elements ( ) ; \n\te . hasMoreElements ( ) ; \n\t) { \n\t\tConnectionListener l = e . nextElement ( ) ; \n\t\tswitch $F56007 ( event ) { \n\t\t\tcase ConnectionEvent . CONNECTED : l . connected ( ( ConnectedEvent ) event ) ; \n\t\t\t$F597 case ConnectionEvent . DISCONNECTED : l . disconnected ( ( DisconnectedEvent ) event ) ; \n\t\t\t$F597 case ConnectionEvent . PACKET_RECEIVED : l . packetReceived ( ( PacketReceivedEvent ) event ) ; \n\t\t\t$F597 } \n\t\t} \n\t} \n"}, {"code": "public double percentage ( ConstantRange range ) { \n\tSortedSet < Constant > sorted = values ( ) ; \n\tSortedSet < Constant > contained = new TreeSet < Constant > $F72 ; \n\tConstant prev = null ; \n\tfor ( Constant pct : sorted ) { \n\t\tif $F105 ( range , pct ) contained . add ( pct ) ; \n\t\telse if $F2979 ( contained ) prev = pct ; \n\t\t} \n\tif $F10471 ( contained ) $F1082 double prevPercent = prev == null ? NUM00 : pcts . get ( prev ) ; \n\treturn pcts . get ( contained . last ( ) ) - prevPercent ; \n\t} \n"}, {"code": "public static void closeQuiet ( $F5466 Closeable closeable ) $F25132 ( closeable ) "}, {"code": "$F1 public void releaseLuceePageContext ( PageContext pc , boolean register ) { \n\tif ( pc . getId ( ) < NUM00 ) $F665 $F33833 ( pc ) $F33833 ( ThreadLocalPageContext ) runningPcs . remove ( Integer . valueOf ( pc . getId ( ) ) ) ; \n\tif ( $F6213 ( pcs ) && pc . getRequestTimeoutException ( ) == null ) pcs . push ( pc ) ; \n\t} \n"}, {"code": "public void addEventListener ( SIPDialogEventListener newListener ) $F207 ( eventListeners , newListener ) "}, {"code": "$F25527 ( redundantOpCompactThreshold , redundantOpCount , lruEntries ) "}, {"code": "private static $F96 stringToByteArray ( String str ) { \n\t$F1338 ( str ) $F39526 ( srcByte , str ) int srcLength = srcByte . length ; \n\t$F130978 ( result , srcLength ) $F135 ( System , srcByte , result , srcLength ) result [ srcLength ] = NUM00 ; \n\treturn result ; \n\t} \n"}, {"code": "public static Properties loadProperties ( ClassLoader classLoader , String classpathResource ) $F15679 ( loadProperties , classpathResource ) "}, {"code": "$F1 public boolean equals ( Object o ) { \n\tif ( o instanceof Graph ) { \n\t\treturn string . equals ( o . toString ( ) ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public final static NameValuePair parseNameValuePair $F45528 ( value , parser ) throws ParseException { \n\t$F826 ( value ) $F45529 ( parser , SaveHeaderValueParser ) $F45535 ( buffer , value ) buffer . append ( value ) ; \n\tSaveParserCursor cursor = new SaveParserCursor ( $F34024 ( value ) ) ; \n\treturn parser . parseNameValuePair ( buffer , cursor ) ; \n\t} \n"}, {"code": "$F35762 ( newScrollValue , itemDimension , initialMotionValue , lastMotionValue , getPullToRefreshScrollDirection , HORIZONTAL , mInitialMotionX , mLastMotionX , VERTICAL , mInitialMotionY , mLastMotionY , mCurrentMode , PULL_FROM_END , Math , FRICTION , getFooterSize , PULL_FROM_START , getHeaderSize , setHeaderScroll , isRefreshing , scale , mFooterLayout , mHeaderLayout , mState , State , setState ) "}, {"code": "private static MappingObject ObjectAt ( PCalLocation loc , MappingObject [ ] [ ] map ) { \n\treturn map [ loc . getLine ( ) ] [ loc . getColumn ( ) ] ; \n\t} \n"}, {"code": "public String parse ( File file , JSON m ) { \n\ttry { \n\t\tTemplate template = getTemplate ( file ) ; \n\t\tif ( template != null ) { \n\t\t\t$F29429 ( w ) $F5172 ( writer , w ) template . merge ( new VelocityContext ( m ) , writer ) ; \n\t\t\t$F1206 ( writer ) $F59 ( writer ) $F92 ( w ) } \n\t\t} \n\t$F36160 ( log , e ) $F1274 } \n"}, {"code": "private $F16501 diff_main $F35621 ( text1 , text2 , checklines , deadline ) { \n\t$F3541 ( text1 , text2 ) $F16501 diffs ; \n\tif $F1238 ( text1 , text2 ) { \n\t\tdiffs = new $F16501 $F72 ; \n\t\tif $F35625 ( text1 ) $F35630 ( diffs , Operation , text1 ) return diffs ; \n\t\t} \n\tint commonlength = diff_commonPrefix ( text1 , text2 ) ; \n\t$F11991 ( commonprefix , text1 , commonlength ) $F11978 ( text1 , commonlength ) $F11978 ( text2 , commonlength ) commonlength = diff_commonSuffix ( text1 , text2 ) ; \n\tString commonsuffix = $F35634 ( text1 , commonlength ) ; \n\t$F35641 ( text1 , commonlength ) $F35641 ( text2 , commonlength ) diffs = diff_compute ( text1 , text2 , checklines , deadline ) ; \n\tif $F35625 ( commonprefix ) { \n\t\tdiffs . addFirst ( $F35627 ( Operation , commonprefix ) ) ; \n\t\t} \n\tif $F35625 ( commonsuffix ) { \n\t\tdiffs . addLast ( $F35627 ( Operation , commonsuffix ) ) ; \n\t\t} \n\tdiff_cleanupMerge ( diffs ) ; \n\treturn diffs ; \n\t} \n"}, {"code": "public Repository ( String domain , boolean fairLock ) { \n\tlock = new ReentrantReadWriteLock ( fairLock ) ; \n\tdomainTb = new HashMap < String , Map < String , NamedObject > > $F989 ; \n\tif $F69744 ( domain ) this . domain = domain . intern ( ) ; \n\telse this . domain = ServiceName . DOMAIN ; \n\tdomainTb . put ( this . domain , new HashMap < String , NamedObject > $F72 ) ; \n\t} \n"}, {"code": "public int countTokens $F72 { \n\tint count = NUM00 ; \n\tboolean inToken = _BOOL ; \n\tfor ( int i = position , length = string . length ( ) ; \n\ti < length ; \n\ti ++ ) { \n\t\tif ( delimiters . indexOf ( string . charAt ( i ) , NUM00 ) >= NUM00 ) { \n\t\t\tif ( returnDelimiters ) count ++ ; \n\t\t\tif ( inToken ) { \n\t\t\t\tcount ++ ; \n\t\t\t\tinToken = _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tinToken = _BOOL ; \n\t\t\t} \n\t\t} \n\tif ( inToken ) count ++ ; \n\treturn count ; \n\t} \n"}, {"code": "public static synchronized void indexDocument ( CodeIndexDocument codeIndexDocument ) throws IOException { \n\tQueue < CodeIndexDocument > queue = new ConcurrentLinkedQueue $F200 $F72 ; \n\tqueue . add ( codeIndexDocument ) ; \n\tindexDocuments ( queue ) ; \n\tqueue = null ; \n\t} \n"}, {"code": "protected void resetCommon $F72 throws XNIException $F16404 ( count , fCommonComponents , i , c , this ) "}, {"code": "private void updateVolumeLabels ( Volume trustedSrc , Volume invalidTgt ) { \n\tVirtualArray invalidTgtVA = dbClient . queryObject ( VirtualArray . class , invalidTgt . getVirtualArray ( ) ) ; \n\t$F83 ( newLabel ) newLabel . append ( trustedSrc . getLabel ( ) ) ; \n\t$F84 ( newLabel ) newLabel . append ( invalidTgtVA . getLabel ( ) ) ; \n\t$F209111 ( log , newLabel ) invalidTgt . setLabel ( newLabel . toString ( ) ) ; \n\tNamedURI projectURI = invalidTgt . getProject ( ) ; \n\tprojectURI . setName ( newLabel . toString ( ) ) ; \n\tinvalidTgt . setProject ( projectURI ) ; \n\tNamedURI tenantURI = invalidTgt . getTenant ( ) ; \n\ttenantURI . setName ( newLabel . toString ( ) ) ; \n\tinvalidTgt . setTenant ( tenantURI ) ; \n\tVolume tgtVplexVolume = VPlexSrdfUtil . getVplexVolumeFromSrdfVolume ( dbClient , invalidTgt ) ; \n\tif ( tgtVplexVolume != null ) { \n\t\tVolume srcVplexVolume = VPlexSrdfUtil . getVplexVolumeFromSrdfVolume ( dbClient , trustedSrc ) ; \n\t\tif ( srcVplexVolume != null ) { \n\t\t\t$F4910 ( newLabel ) newLabel . append ( srcVplexVolume . getLabel ( ) ) ; \n\t\t\t$F84 ( newLabel ) newLabel . append ( invalidTgtVA . getLabel ( ) ) ; \n\t\t\t$F209111 ( log , newLabel ) tgtVplexVolume . setLabel ( newLabel . toString ( ) ) ; \n\t\t\tprojectURI = tgtVplexVolume . getProject ( ) ; \n\t\t\tprojectURI . setName ( newLabel . toString ( ) ) ; \n\t\t\ttgtVplexVolume . setProject ( projectURI ) ; \n\t\t\ttenantURI = tgtVplexVolume . getTenant ( ) ; \n\t\t\ttenantURI . setName ( newLabel . toString ( ) ) ; \n\t\t\ttgtVplexVolume . setTenant ( tenantURI ) ; \n\t\t\tdbClient . updateAndReindexObject ( tgtVplexVolume ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void handle ( Exception exception , String title , String message ) { \n\tUtils . handleError ( getShell ( ) , exception , title , message ) ; \n\t} \n"}, {"code": "private void readObject ( ObjectInputStream in ) throws $F6427 { \n\t$F6428 ( in ) i18n = Environment . getI18n ( ) ; \n\tbeanContextChildSupport = new BeanContextChildSupport ( this ) ; \n\t} \n"}, {"code": "private void paintForegroundEnabled $F269611 ( g , width , height ) { \n\tShape s = decodeArrowPath ( width , height ) ; \n\tg . setPaint ( enabledColor ) ; \n\tg . fill ( s ) ; \n\t} \n"}, {"code": "private static void logThrow ( Level level , String className , String methodName , String message , $F131 args , Throwable thrown ) { \n\tjava . util . logging . LogRecord lr = new java . util . logging . LogRecord ( level , message ) ; \n\tlr . setLoggerName ( logger . getName ( ) ) ; \n\tlr . setSourceClassName ( className ) ; \n\tlr . setSourceMethodName ( methodName ) ; \n\tlr . setParameters ( args ) ; \n\tlr . setThrown ( thrown ) ; \n\tlogger . log ( lr ) ; \n\t} \n"}, {"code": "public void testToBigIntegerZero $F72 $F114431 ( a , bNumber , aNumber , result , assertTrue ) "}, {"code": "public void onAccuracyChanged ( Sensor sensor , int accuracy ) { \n\tif ( sensor . getType ( ) != Sensor . TYPE_ACCELEROMETER ) $F932 if ( this . status == AccelListener . STOPPED ) $F932 this . accuracy = accuracy ; \n\t} \n"}, {"code": "$F125330 ( allowsTrailingArguments ) "}, {"code": "@ AndroidOnly ( NUM00 + NUM00 ) public void testSetMaxCRLNumberLjava_math_BigInteger $F72 { \n\t$F40920 ( selector ) $F88961 ( maxCRL ) $F390737 ( crl , maxCRL ) selector . setMaxCRLNumber ( null ) ; \n\t$F97594 ( assertTrue , selector , crl ) selector . setMaxCRLNumber ( maxCRL ) ; \n\t$F97594 ( assertTrue , selector , crl ) selector . setMaxCRLNumber ( new BigInteger $F580 ) ; \n\t$F97594 ( assertFalse , selector , crl ) } \n"}, {"code": "private void evaluatePopup ( MouseEvent e ) { \n\tif $F264788 ( e ) { \n\t\tJPopupMenu menu = createBookmarkPopupMenu ( ) ; \n\t\tif ( menu != null ) $F268505 ( menu , this , e ) } \n\t} \n"}, {"code": "private boolean removeTask ( Task t , int min ) { \n\tfor ( $F2198 ( i , tasks ) ; \n\t-- i >= min ; \n\t) { \n\t\tif $F36973 ( tasks , i , t ) { \n\t\t\ttasks . remove ( i ) ; \n\t\t\tif ( i < firstPending ) { \n\t\t\t\tfirstPending -- ; \n\t\t\t\tfor ( $F335206 ( j , threads ) ) { \n\t\t\t\t\tTaskThread thread = threads . get ( j ) ; \n\t\t\t\t\tif ( thread . task == t ) { \n\t\t\t\t\t\tif ( thread != Thread . currentThread ( ) ) $F7589 ( thread ) $F597 } \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void test_DivideBigDecimalRoundingModeHALF_UP $F72 { \n\tString a = NUM00 ; \n\tString b = NUM00 ; \n\tRoundingMode rm = RoundingMode . HALF_UP ; \n\tString c = NUM00 ; \n\t$F29821 ( aNumber , a ) $F29821 ( bNumber , b ) $F29822 ( result , aNumber , bNumber , rm ) $F1925 ( assertEquals , c , result ) } \n"}, {"code": "protected void ensurePathExists ( String path ) { \n\t$F6542 ( paths , path ) $F8755 ( spath ) for ( String temp : paths ) { \n\t\tif $F7283 ( StringUtils , temp ) $F1448 spath . append ( temp ) ; \n\t\tensureExists ( spath . toString ( ) , null , acl , CreateMode . PERSISTENT ) ; \n\t\t$F84 ( spath ) } \n\t} \n"}, {"code": "public $F6969 loadClass ( String name , boolean resolve ) throws ClassNotFoundException { \n\t$F24867 ( i , name ) if ( i != - NUM00 ) { \n\t\t$F8108 ( sm , System ) if ( sm != null ) { \n\t\t\tsm . checkPackageAccess ( name . substring ( NUM00 , i ) ) ; \n\t\t\t} \n\t\t} \n\tif ( ucp . knownToNotExist ( name ) ) { \n\t\t$F69674 ( c , findLoadedClass , name ) if ( c != null ) { \n\t\t\t$F72524 ( resolve , resolveClass , c ) return c ; \n\t\t\t} \n\t\t$F102970 ( name ) } \n\treturn ( super . loadClass ( name , resolve ) ) ; \n\t} \n"}, {"code": "$F23145 ( measureSpec , result , specMode , MeasureSpec , specSize , mRadius , getPaddingTop , getPaddingBottom , Math ) "}, {"code": "private boolean isListChildUnderClipped ( float x , float y ) { \n\tfinal View listChild = findListChildUnder ( x , y ) ; \n\treturn listChild != null && isDescendantClipped ( listChild ) ; \n\t} \n"}, {"code": "Rules ( Workspace workspace ) { \n\tthis . root = workspace . getRoot ( ) ; \n\tthis . teamHook = workspace . getTeamHook ( ) ; \n\t} \n"}, {"code": "public static void writeByteArrayToFile ( File file , $F96 data , boolean append ) throws IOException { \n\tOutputStream out = null ; \n\ttry { \n\t\tout = openOutputStream ( file , append ) ; \n\t\tout . write ( data ) ; \n\t\t$F59 ( out ) } \n\t$F18090 ( IOUtils , out ) } \n"}, {"code": "public void add ( $F4170 T item ) { \n\tsynchronized ( lock ) $F23232 ( items , item ) if ( notifyOnChange ) { \n\t\t$F4173 ( notifyItemInserted , items ) } \n\t} \n"}, {"code": "private void checkPendingCustomMessages $F72 { \n\tif ( joiningNodes . isEmpty ( ) && isLocalNodeCoordinator ( ) ) { \n\t\tTcpDiscoveryCustomEventMessage msg ; \n\t\twhile $F22655 ( msg , pendingCustomMsgs ) { \n\t\t\tprocessCustomMessage ( msg ) ; \n\t\t\tif ( msg . verified ( ) ) msgHist . add ( msg ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private static $F7465 ( msg , startpos , count , len , idx , ch , isDigit ) "}, {"code": "protected int parseAndAddNode ( XmlResourceParser parser , HashMap < String , TagParser > tagParserMap , $F17804 screenIds ) throws $F18821 { \n\tif $F3175 ( TAG_INCLUDE , parser ) { \n\t\tfinal int resId = getAttributeResourceValue ( parser , ATTR_WORKSPACE , NUM00 ) ; \n\t\tif ( resId != NUM00 ) $F8587 ( parseLayout , resId , screenIds ) else $F1083 } \n\t$F725 ( mValues ) parseContainerAndScreen ( parser , mTemp ) ; \n\tfinal long container = mTemp [ NUM00 ] ; \n\tfinal long screenId = mTemp [ NUM00 ] ; \n\tmValues . put ( Favorites . CONTAINER , container ) ; \n\tmValues . put ( Favorites . SCREEN , screenId ) ; \n\tmValues . put ( Favorites . CELLX , convertToDistanceFromEnd ( getAttributeValue ( parser , ATTR_X ) , mColumnCount ) ) ; \n\tmValues . put ( Favorites . CELLY , convertToDistanceFromEnd ( getAttributeValue ( parser , ATTR_Y ) , mRowCount ) ) ; \n\tTagParser $F24916 ( tagParser , tagParserMap , parser ) ; \n\tif ( tagParser == null ) { \n\t\tif ( LOGD ) Log . d ( $F71108 ( TAG , parser ) ) ; \n\t\t$F1082 } \n\tlong newElementId = tagParser . parseAndAdd ( parser ) ; \n\tif ( newElementId >= NUM00 ) { \n\t\tif ( ! screenIds . contains ( screenId ) && container == Favorites . CONTAINER_DESKTOP ) $F207 ( screenIds , screenId ) $F1082 } \n\t$F1082 } \n"}, {"code": "private float calculateScrambleImageHeightMultiplier ( float multiplier ) { \n\tswitch ( currentPuzzle ) { \n\t\tcase PuzzleUtils . TYPE_777 : case PuzzleUtils . TYPE_666 : case PuzzleUtils . TYPE_555 : case PuzzleUtils . TYPE_222 : case PuzzleUtils . TYPE_444 : case PuzzleUtils . TYPE_333 : return ( multiplier / NUM00 ) * NUM00 ; \n\t\tcase PuzzleUtils . TYPE_CLOCK : return multiplier / NUM00 ; \n\t\tcase PuzzleUtils . TYPE_MEGA : return ( multiplier / NUM00 ) ; \n\t\tcase PuzzleUtils . TYPE_PYRA : return ( float ) ( multiplier / Math . sqrt ( NUM00 ) ) ; \n\t\tcase PuzzleUtils . TYPE_SKEWB : return ( multiplier / NUM00 ) * NUM00 ; \n\t\tcase PuzzleUtils . TYPE_SQUARE1 : return multiplier ; \n\t\t} \n\treturn multiplier ; \n\t} \n"}, {"code": "public void testNumericScalars $F72 throws Exception { \n\t$F44214 ( m ) m . enableDefaultTyping ( ) ; \n\tassertEquals ( NUM00 , m . writeValueAsString ( new Object [ ] { \n\t\tInteger . valueOf ( NUM00 ) } \n\t) ) ; \n\tassertEquals ( NUM00 , m . writeValueAsString ( new Object [ ] { \n\t\tLong . valueOf ( NUM00 ) } \n\t) ) ; \n\tassertEquals ( NUM00 , m . writeValueAsString ( new Object [ ] { \n\t\tDouble . valueOf ( NUM00 ) } \n\t) ) ; \n\tassertEquals ( NUM00 , m . writeValueAsString ( new Object [ ] { \n\t\tFloat . valueOf ( NUM00 ) } \n\t) ) ; \n\t} \n"}, {"code": "protected void closeCallbacksExceptListener $F72 { \n\tcloseCacheCallback ( getCacheLoader ( ) ) ; \n\tcloseCacheCallback ( getCacheWriter ( ) ) ; \n\tcloseCacheCallback ( getEvictionController ( ) ) ; \n\t} \n"}, {"code": "private static int indexOf ( Object o , $F131 elements , int index , int fence ) { \n\tif ( o == null ) { \n\t\tfor ( int i = index ; \n\t\ti < fence ; \n\t\ti ++ ) if ( elements [ i ] == null ) return i ; \n\t\t} \n\telse { \n\t\tfor ( int i = index ; \n\t\ti < fence ; \n\t\ti ++ ) if $F145 ( o , elements , i ) return i ; \n\t\t} \n\t$F150 } \n"}, {"code": "private void populateProfiles ( final ProfileList profiles ) { \n\t$F213890 ( profilesComboBox ) for ( Profile p : profiles ) $F86251 ( profilesComboBox , p ) final int count = profilesComboBox . getItemCount ( ) ; \n\tif ( count != NUM00 ) { \n\t\tprofilesComboBox . setSelectedIndex ( count - NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private long checkFileHeader ( BufferedFileDataInput bfdi ) throws $F47918 { \n\tint magic = NUM00 ; \n\tshort major = NUM00 ; \n\tshort minor = NUM00 ; \n\ttry { \n\t\tbfdi . waitAvailable ( HEADER_LENGTH , HEADER_WAIT_MILLIS ) ; \n\t\t$F5961 ( magic , bfdi ) $F11214 ( major , bfdi ) $F11214 ( minor , bfdi ) $F33039 ( baseSeqno , bfdi ) } \n\tcatch ( IOException e ) { \n\t\tthrow new THLException $F27414 ( file , e ) ; \n\t\t} \n\tif ( magic != MAGIC1BER ) throw new THLException ( $F62869 ( file ) ) ; \n\tif ( major != MAJOR_VERSION ) throw new THLException ( $F62869 ( file ) ) ; \n\tif ( minor != MINOR_VERSION ) logger . warn ( $F62869 ( file ) + major + NUM00 + minor + NUM00 + MAJOR_VERSION + NUM00 + MINOR_VERSION ) ; \n\treturn baseSeqno ; \n\t} \n"}, {"code": "public float realAbsolute $F72 $F170694 ( Math , mLeft ) "}, {"code": "private ExtremumType extremumType ( int n , $F1986 alpha_extreme , HyperBoundingBox interval ) { \n\tif $F74408 ( n , alpha_extreme ) { \n\t\treturn extremumType ; \n\t\t} \n\t$F40939 ( alpha_extreme_l , alpha_extreme ) $F40939 ( alpha_extreme_r , alpha_extreme ) $F40939 ( alpha_extreme_c , alpha_extreme ) $F7057 ( System , alpha_extreme , alpha_extreme_l ) $F7057 ( System , alpha_extreme , alpha_extreme_r ) $F7057 ( System , alpha_extreme , alpha_extreme_c ) $F1986 centroid = SpatialUtil . centroid ( interval ) ; \n\tfor ( $F119 ( i , n ) ) { \n\t\talpha_extreme_l [ i ] = centroid [ i ] ; \n\t\talpha_extreme_r [ i ] = centroid [ i ] ; \n\t\talpha_extreme_c [ i ] = centroid [ i ] ; \n\t\t} \n\tdouble intervalLength = interval . getMax ( n ) - interval . getMin ( n ) ; \n\talpha_extreme_l [ n ] = Math . random ( ) * intervalLength + interval . getMin ( n ) ; \n\talpha_extreme_r [ n ] = Math . random ( ) * intervalLength + interval . getMin ( n ) ; \n\tdouble f_c = function ( alpha_extreme_c ) ; \n\tdouble f_l = function ( alpha_extreme_l ) ; \n\tdouble f_r = function ( alpha_extreme_r ) ; \n\tif ( f_l < f_c ) { \n\t\tif ( f_r < f_c || Math . abs ( f_r - f_c ) < DELTA ) { \n\t\t\treturn ExtremumType . MAXIMUM ; \n\t\t\t} \n\t\t} \n\tif ( f_r < f_c ) { \n\t\tif ( f_l < f_c || Math . abs ( f_l - f_c ) < DELTA ) { \n\t\t\treturn ExtremumType . MAXIMUM ; \n\t\t\t} \n\t\t} \n\tif ( f_l > f_c ) { \n\t\tif ( f_r > f_c || Math . abs ( f_r - f_c ) < DELTA ) { \n\t\t\treturn ExtremumType . MINIMUM ; \n\t\t\t} \n\t\t} \n\tif ( f_r > f_c ) { \n\t\tif ( f_l > f_c || Math . abs ( f_l - f_c ) < DELTA ) { \n\t\t\treturn ExtremumType . MINIMUM ; \n\t\t\t} \n\t\t} \n\tif ( Math . abs ( f_l - f_c ) < DELTA && Math . abs ( f_r - f_c ) < DELTA ) { \n\t\treturn ExtremumType . CONSTANT ; \n\t\t} \n\tthrow new IllegalArgumentException ( NUM00 + this + NUM00 + NUM00 + f_l + NUM00 + NUM00 + f_c + NUM00 + NUM00 + f_r + NUM00 + NUM00 + vec . toArray ( ) + NUM00 + NUM00 + FormatUtil . format ( alpha_extreme_c ) + NUM00 + NUM00 + FormatUtil . format ( alpha_extreme_l ) + NUM00 + NUM00 + FormatUtil . format ( alpha_extreme_r ) + NUM00 + NUM00 + n ) ; \n\t} \n"}, {"code": "public static String map2OID ( String algName ) { \n\treturn alg2OidMap . get ( $F184776 ( algName , Locale ) ) ; \n\t} \n"}, {"code": "$F1 public Generator < ICircle > construct $F4374 ( args ) { \n\treturn new UniformGenerator $F115457 ( Double , args ) ; \n\t} \n"}, {"code": "private boolean yy_refill $F72 throws $F3258 { \n\t$F72981 ( yy_startRead , System , yy_buffer , yy_endRead , yy_currentPos , yy_markedPos , yy_pushbackPos ) $F72988 ( yy_currentPos , yy_buffer , System , newBuffer ) $F7994 ( numRead , yy_reader , yy_buffer , yy_endRead ) $F72989 ( numRead , _BOOL , yy_endRead ) } \n"}, {"code": "protected void processMouseEvent ( MouseEvent e ) { \n\tif ( myInplaceComponent != null && ( MouseEvent . MOUSE_PRESSED == e . getID ( ) || MouseEvent . MOUSE_RELEASED == e . getID ( ) ) ) { \n\t\tfinishEditing ( _BOOL ) ; \n\t\t} \n\tsuper . processMouseEvent ( e ) ; \n\t} \n"}, {"code": "protected void addModule ( $F50791 moduleMap , Collection $F50793 moduleList , IFloodlightModule module ) { \n\tCollection < $F50789 > servs = moduleServiceMap . get ( module ) ; \n\tif ( servs != null ) { \n\t\tfor ( $F50789 c : servs ) moduleMap . put ( c , module ) ; \n\t\t} \n\tmoduleList . add ( module ) ; \n\t} \n"}, {"code": "protected boolean hasAllTables $F72 throws CouldntLoadDataException , InvalidDatabaseException { \n\t$F973 ( NaviLogger ) final int counter = PostgreSQLHelpers . getTableCount ( getConnection ( ) , Lists . newArrayList ( TABLES ) ) ; \n\tif ( counter == NUM00 ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse if ( counter == TABLES . length ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\tthrow new InvalidDatabaseException ( String . format ( NUM00 , counter , TABLES . length ) ) ; \n\t\t} \n\t} \n"}, {"code": "public $F3803 classify ( List < List < Feature > > features ) throws CleartkProcessingException { \n\t$F20724 featureStringArray = toStrings ( features ) ; \n\tPipe pipe = transducer . getInputPipe ( ) ; \n\tInstance instance = new Instance ( featureStringArray , null , null , null ) ; \n\tinstance = pipe . instanceFrom ( instance ) ; \n\tSequence $F1011 data = ( Sequence $F1011 ) instance . getData ( ) ; \n\tSequence $F1011 untypedSequence = transducer . transduce ( data ) ; \n\tSequence $F4 sequence = ReflectionUtil . uncheckedCast ( untypedSequence ) ; \n\t$F10144 ( returnValues ) for ( $F2277 ( i , sequence ) ) { \n\t\t$F1729 ( encodedOutcome , sequence , i ) returnValues . add ( outcomeEncoder . decode ( encodedOutcome ) ) ; \n\t\t} \n\treturn returnValues ; \n\t} \n"}, {"code": "public void onBindHeaderViewHolder ( $F43069 holder , int position ) { \n\tonBindHeaderViewHolder ( holder , position , Collections . emptyList ( ) ) ; \n\t} \n"}, {"code": "private void updateLineList $F72 { \n\tif $F31483 ( horizontalLineRadiobutton ) $F5795 ( setHorizontalLineSelected ) else $F5795 ( setVerticalLineSelected ) updateButtonStates ( ) ; \n\t} \n"}, {"code": "public void rectangle $F12359 ( x , y , halfWidth , halfHeight ) { \n\t$F30465 ( halfWidth ) $F30465 ( halfHeight ) double xs = scaleX ( x ) ; \n\tdouble ys = scaleY ( y ) ; \n\tdouble ws = factorX ( NUM00 * halfWidth ) ; \n\tdouble hs = factorY ( NUM00 * halfHeight ) ; \n\tif ( ws <= NUM00 && hs <= NUM00 ) pixel ( x , y ) ; \n\telse offscreen . draw ( new $F1634 ( xs - ws / NUM00 , ys - hs / NUM00 , ws , hs ) ) ; \n\tdraw ( ) ; \n\t} \n"}, {"code": "$F120210 ( maximumPullScroll , getMaximumPullScroll , pLeft , getPaddingLeft , pTop , getPaddingTop , pRight , getPaddingRight , pBottom , getPaddingBottom , getPullToRefreshScrollDirection , HORIZONTAL , mMode , mHeaderLayout , mFooterLayout , VERTICAL , DEBUG , Log , LOG_TAG , String , setPadding ) "}, {"code": "public void replaceSplitElement ( int aIndex , Fragment aSplitElement ) $F65992 ( splits , aIndex , aSplitElement ) "}, {"code": "private void startItemList ( StringBuilder result , String rootId ) { \n\tresult . append ( NUM00 + NUM00 + rootId + NUM00 ) ; \n\t} \n"}, {"code": "private static int numInitialSplits ( long numRecords ) { \n\tfinal int maxSplits = NUM00 ; \n\tfinal long recordsPerSplit = NUM00 ; \n\treturn ( int ) Math . min ( maxSplits , numRecords / recordsPerSplit + NUM00 ) ; \n\t} \n"}, {"code": "public void mouseClicked ( MouseEvent e ) { \n\tif ( e . getClickCount ( ) > NUM00 ) { \n\t\t$F58463 ( System ) } \n\t} \n"}, {"code": "private static $F806 scanForSources ( final File sourceDir , $F11290 ( sourceIncludes ) , $F11290 ( sourceExcludes ) ) { \n\tfinal DirectoryScanner ds = new DirectoryScanner $F72 ; \n\tds . setFollowSymlinks ( _BOOL ) ; \n\tds . setBasedir ( sourceDir ) ; \n\tds . setIncludes ( $F10148 ( sourceIncludes ) ) ; \n\tds . setExcludes ( $F10148 ( sourceExcludes ) ) ; \n\tds . addDefaultExcludes ( ) ; \n\ttry { \n\t\tds . scan ( ) ; \n\t\t} \n\tcatch ( IllegalStateException e ) { \n\t\treturn $F382 ; \n\t\t} \n\treturn ds . getIncludedFiles ( ) ; \n\t} \n"}, {"code": "private boolean hasNextPostponed $F72 $F3387 ( postponedRoutes ) "}, {"code": "public boolean hasSingleElement $F72 { \n\t$F214965 ( mSelectedWidgets ) } \n"}, {"code": "public IgfsPath ( URI uri ) { \n\t$F18062 ( A , uri ) path = $F158868 ( normalizePath , uri ) ; \n\t} \n"}, {"code": "public int toInt ( Element el , String attributeName ) { \n\treturn Caster . toIntValue ( el . getAttribute ( attributeName ) , Integer . MIN_VALUE ) ; \n\t} \n"}, {"code": "$F47733 ( reader , writer , buffer , count ) "}, {"code": "public void addGetters ( int assignedPropertyNumber , String propertyName ) { \n\tfor ( EventType type : knownTypes ) { \n\t\tEventPropertyGetter getter = type . getGetter ( propertyName ) ; \n\t\tVariantPropertyGetterRow row = allGetters . get ( type ) ; \n\t\tif ( row == null ) { \n\t\t\tsynchronized ( this ) { \n\t\t\t\trow = new VariantPropertyGetterRow ( type , new EventPropertyGetter [ assignedPropertyNumber + NUM00 ] ) ; \n\t\t\t\tallGetters . put ( type , row ) ; \n\t\t\t\t} \n\t\t\t} \n\t\trow . addGetter ( assignedPropertyNumber , getter ) ; \n\t\t} \n\tproperties . add ( propertyName ) ; \n\t} \n"}, {"code": "protected void markUsed ( Entry entry ) { \n\tentry . lastUsed = System . nanoTime ( ) ; \n\t} \n"}, {"code": "$F1 public String execute $F72 { \n\treturn SUCCESS ; \n\t} \n"}, {"code": "private void handleStateLeft ( InetAddress endpoint , $F806 pieces ) { \n\tassert pieces . length >= NUM00 ; \n\tCollection $F40118 tokens = getTokensFor ( endpoint ) ; \n\tif $F585 ( logger ) $F39971 ( logger , endpoint , tokens ) excise ( tokens , endpoint , extractExpireTime ( pieces ) ) ; \n\t} \n"}, {"code": "public static void register ( String algorithmURI , Class < ? extends SignatureAlgorithmSpi > implementingClass ) throws AlgorithmAlreadyRegisteredException , ClassNotFoundException , XMLSignatureException { \n\t$F139595 ( JavaUtils ) if $F59675 ( log , java ) { \n\t\tlog . log ( $F59673 ( java ) , NUM00 + algorithmURI + NUM00 + implementingClass ) ; \n\t\t} \n\tClass < ? extends SignatureAlgorithmSpi > registeredClass = algorithmHash . get ( algorithmURI ) ; \n\tif ( registeredClass != null ) { \n\t\tObject exArgs [ ] = { \n\t\t\talgorithmURI , registeredClass } \n\t\t; \n\t\tthrow new AlgorithmAlreadyRegisteredException ( NUM00 , exArgs ) ; \n\t\t} \n\talgorithmHash . put ( algorithmURI , implementingClass ) ; \n\t} \n"}, {"code": "$F1431 public KeyValuePersistenceSettings ( File settingsFile ) { \n\tInputStream in ; \n\ttry { \n\t\t$F5335 ( in , settingsFile ) } \n\tcatch ( IOException e ) { \n\t\tthrow new IgniteException $F27414 ( settingsFile , e ) ; \n\t\t} \n\tinit ( loadSettings ( in ) ) ; \n\t} \n"}, {"code": "public boolean containsWordBreakingChar ( final $F4170 CharSequence input ) { \n\tif $F20899 ( TextUtils , input ) { \n\t\tfor ( $F1088 ( i , input ) ) { \n\t\t\t$F1280 ( c , input , i ) $F46660 ( isWordBreakingChar , c , _BOOL ) } \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void checkInteriorIntersections $F72 { \n\tfor ( $F2774 ( i , segStrings ) ) { \n\t\tSegmentString ss0 = ( SegmentString ) i . next ( ) ; \n\t\tfor ( $F2774 ( j , segStrings ) ) { \n\t\t\tSegmentString ss1 = ( SegmentString ) j . next ( ) ; \n\t\t\tcheckInteriorIntersections ( ss0 , ss1 ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public synchronized boolean removeElement ( Object object ) { \n\tint index ; \n\tif ( ( index = indexOf ( object , NUM00 ) ) == - NUM00 ) { \n\t\treturn _BOOL ; \n\t\t} \n\tremoveElementAt ( index ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private $F4203 UnaryOperator $F4203 compose ( UnaryOperator $F4203 before , UnaryOperator $F4203 after ) $F1337 "}, {"code": "private void addCdcColSpecs ( ArrayList < ColumnSpec > cdcSpecs , OneRowChange cdcRowChangeData ) { \n\t$F2199 ( cdcPos , cdcSpecs ) if ( cdcColumnsAtFront ) cdcPos = NUM00 ; \n\tColumnSpec spec = cdcRowChangeData . new ColumnSpec $F72 ; \n\tspec . setIndex ( cdcPos + NUM00 ) ; \n\t$F87453 ( spec ) spec . setType ( java . sql . Types . VARCHAR ) ; \n\t$F4910 ( spec ) cdcSpecs . add ( cdcPos , spec ) ; \n\tspec = cdcRowChangeData . new ColumnSpec $F72 ; \n\tspec . setIndex ( cdcPos + NUM00 + NUM00 ) ; \n\t$F87453 ( spec ) spec . setType ( java . sql . Types . TIMESTAMP ) ; \n\t$F57027 ( cdcSpecs , cdcPos , spec ) spec = cdcRowChangeData . new ColumnSpec $F72 ; \n\tspec . setIndex ( cdcPos + NUM00 + NUM00 ) ; \n\t$F87453 ( spec ) spec . setType ( java . sql . Types . BIGINT ) ; \n\t$F57027 ( cdcSpecs , cdcPos , spec ) } \n"}, {"code": "public static String convertToJavaFieldName ( String name ) { \n\t$F1384 ( dotIndex , name ) $F384188 ( dotIndex , name ) $F83044 ( split , name ) $F83 ( out ) boolean first = _BOOL ; \n\tfor ( String section : split ) { \n\t\tif ( first ) $F40007 ( first , _BOOL , out , section ) else { \n\t\t\tout . append ( StringUtil . capitalize ( section ) ) ; \n\t\t\t} \n\t\t} \n\t$F92 ( out ) } \n"}, {"code": "public static SecretKeys generateKey $F72 throws GeneralSecurityException { \n\tfixPrng ( ) ; \n\t$F156 ( keyGen , KeyGenerator , CIPHER ) keyGen . init ( AES_KEY_LENGTH_BITS ) ; \n\t$F43927 ( confidentialityKey , keyGen ) $F96 integrityKeyBytes = randomBytes ( HMAC_KEY_LENGTH_BITS / NUM00 ) ; \n\tSecretKey integrityKey = new SecretKeySpec ( integrityKeyBytes , HMAC_ALGORITHM ) ; \n\treturn new SecretKeys ( confidentialityKey , integrityKey ) ; \n\t} \n"}, {"code": "$F178575 ( expression , errorMessage , String ) "}, {"code": "protected void execute ( $F806 sqls , SQLiteDatabase db ) { \n\tString throwSQL = NUM00 ; \n\ttry { \n\t\tif ( sqls != null ) { \n\t\t\tfor ( String sql : sqls ) { \n\t\t\t\tthrowSQL = sql ; \n\t\t\t\tdb . execSQL ( BaseUtility . changeCase ( sql ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( SQLException e ) { \n\t\tthrow new DatabaseGenerateException ( DatabaseGenerateException . SQL_ERROR + throwSQL ) ; \n\t\t} \n\t} \n"}, {"code": "$F3441 ( journalWriter , writer , journalFileTmp , Util , MAGIC , VERSION_1 , Integer , appVersion , valueCount , entry , lruEntries , DIRTY , CLEAN , journalFile , renameTo , journalFileBackup , _BOOL ) "}, {"code": "private void refreshDoneButton ( boolean done ) { \n\tbutDone . setText ( done ? Messages . getString ( NUM00 ) : Messages . getString ( NUM00 ) ) ; \n\t} \n"}, {"code": "private void createMigrationTaskPage $F72 { \n\tMigrationTaskEditor migrationTaskEditor = new MigrationTaskEditor ( migrationTask , getContainer ( ) ) ; \n\tint index = addPage ( migrationTaskEditor . getControl ( ) ) ; \n\tsetPageText ( index , NUM00 ) ; \n\ttaskListeners . add ( migrationTaskEditor ) ; \n\t} \n"}, {"code": "$F31880 ( position , offset , offsetPixels , mDecorChildCount , scrollX , getScrollX , paddingLeft , getPaddingLeft , paddingRight , getPaddingRight , width , getWidth , childCount , getChildCount , i , child , getChildAt , lp , hgrav , Gravity , childLeft , Math , childOffset , mOnPageChangeListener , mInternalPageChangeListener , mPageTransformer , transformPos , getClientWidth , mCalledSuper , _BOOL ) "}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "$F25545 ( i , count , buf , newbuf , mPool , System ) "}, {"code": "public static int toIPv4Address ( String ipAddress ) { \n\tif ( ipAddress == null ) $F11812 $F6542 ( octets , ipAddress ) if $F11845 ( octets ) $F11812 int result = NUM00 ; \n\tfor ( $F809 ( i ) ) { \n\t\tint oct = Integer . valueOf ( octets [ i ] ) ; \n\t\tif $F58159 ( oct ) $F11812 result |= oct < < ( ( NUM00 - i ) * NUM00 ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public void closeCursor ( Cursor cursor ) { \n\t$F59 ( cursor ) cursorMap . remove ( Integer . valueOf ( cursor . getCursorId ( ) ) ) ; \n\t} \n"}, {"code": "private boolean hasNext ( Pattern pattern ) { \n\t$F1485 ( hasNext , _BOOL ) Matcher matcher = pattern . matcher ( gserValue . substring ( pos , length ) ) ; \n\t$F89398 ( matcher ) } \n"}, {"code": "void pushInt ( int i ) { \n\tswitch ( i ) { \n\t\t$F52533 mv . visitInsn ( ICONST_M1 ) ; \n\t\t$F665 $F3366 mv . visitInsn ( ICONST_0 ) ; \n\t\t$F665 $F3366 mv . visitInsn ( ICONST_1 ) ; \n\t\t$F665 $F3366 mv . visitInsn ( ICONST_2 ) ; \n\t\t$F665 $F3366 mv . visitInsn ( ICONST_3 ) ; \n\t\t$F665 $F3366 mv . visitInsn ( ICONST_4 ) ; \n\t\t$F665 $F3366 mv . visitInsn ( ICONST_5 ) ; \n\t\t$F665 } \n\tif ( i >= Byte . MIN_VALUE && i <= Byte . MAX_VALUE ) { \n\t\tmv . visitIntInsn ( BIPUSH , i ) ; \n\t\t$F665 } \n\tif ( i >= Short . MIN_VALUE && i <= Short . MAX_VALUE ) { \n\t\tmv . visitIntInsn ( SIPUSH , i ) ; \n\t\t$F665 } \n\tmv . visitLdcInsn ( Integer . valueOf ( i ) ) ; \n\t} \n"}, {"code": "public static String xmlNode $F106000 ( name , attributes , content , indent ) { \n\tString start = attributes == null ? name : name + attributes ; \n\tif ( content == null ) $F34654 ( start ) if ( indent && $F48845 ( content ) ) { \n\t\tcontent = NUM00 + indent ( content ) ; \n\t\t} \n\treturn NUM00 + start + NUM00 + content + NUM00 + name + NUM00 ; \n\t} \n"}, {"code": "public void add ( int position , $F4170 T item ) { \n\tsynchronized ( lock ) { \n\t\t$F9406 ( items ) items . add ( position , item ) ; \n\t\t} \n\t$F72524 ( notifyOnChange , notifyItemInserted , position ) } \n"}, {"code": "void notifyFailure ( Throwable exception ) { \n\tsynchronized ( waitObject ) { \n\t\tisComplete = _BOOL ; \n\t\tif ( exception instanceof MqttException ) { \n\t\t\tpendingException = ( MqttException ) exception ; \n\t\t\t} \n\t\telse { \n\t\t\tpendingException = new MqttException ( exception ) ; \n\t\t\t} \n\t\t$F165 ( waitObject ) if ( exception instanceof MqttException ) { \n\t\t\tlastException = ( MqttException ) exception ; \n\t\t\t} \n\t\tif ( listener != null ) { \n\t\t\tlistener . onFailure ( this , exception ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static void transform ( StreamSource src , StreamSource stylesheet , Fop fop ) throws FOPException { \n\tResult res = new SAXResult ( fop . getDefaultHandler ( ) ) ; \n\ttry { \n\t\t$F2218 ( factory , TransformerFactory ) Transformer transformer ; \n\t\tif ( stylesheet == null ) { \n\t\t\ttransformer = factory . newTransformer ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\ttransformer = factory . newTransformer ( stylesheet ) ; \n\t\t\t} \n\t\ttransformer . setURIResolver ( new LocalResolver ( transformer . getURIResolver ( ) ) ) ; \n\t\ttransformer . transform ( src , res ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new FOPException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public $F3803 splitStringWithDefaultDelimiterEscaped ( String inputString ) { \n\tString delimiter = configurationHelper . getProperty ( ConfigurationValue . FIELD_DATA_DELIMITER ) ; \n\tString escapeChar = configurationHelper . getProperty ( ConfigurationValue . FIELD_DATA_DELIMITER_ESCAPE_CHAR ) ; \n\t$F24645 ( splitString ) if $F16093 ( StringUtils , inputString ) { \n\t\tString regex = NUM00 + Pattern . quote ( escapeChar ) + NUM00 + Pattern . quote ( delimiter ) ; \n\t\tfor ( String s : inputString . split ( regex ) ) { \n\t\t\tsplitString . add ( s . replace ( escapeChar + delimiter , delimiter ) ) ; \n\t\t\t} \n\t\t} \n\treturn splitString ; \n\t} \n"}, {"code": "protected final boolean readAvailableBlocking $F72 throws IOException { \n\t$F1469 buffer = myBuffer ; \n\tStringBuilder token = myTextBuffer ; \n\t$F4910 ( token ) boolean read = _BOOL ; \n\tint n ; \n\twhile $F87061 ( n , myReader , buffer ) { \n\t\tif ( myScheduledSubmitter != null ) myScheduledSubmitter . cancel ( _BOOL ) ; \n\t\tread = _BOOL ; \n\t\tsynchronized ( myTextBuffer ) { \n\t\t\tprocessLine ( buffer , token , n ) ; \n\t\t\t} \n\t\tmyScheduledSubmitter = myExecutorService . submit ( myTokenSubmitter ) ; \n\t\t} \n\tsubmitToken ( ) ; \n\treturn read ; \n\t} \n"}, {"code": "public void deleteObligation ( final Obligation obligation , int basicBlockId ) throws ObligationAcquiredOrReleasedInLoopException { \n\tMap < ObligationSet , State > updatedStateMap = new HashMap < ObligationSet , State > $F72 ; \n\tfor ( Iterator $F7432 i = stateIterator ( ) ; \n\ti . hasNext ( ) ; \n\t) { \n\t\tState state = i . next ( ) ; \n\t\tcheckCircularity ( state , obligation , basicBlockId ) ; \n\t\tObligationSet obligationSet = state . getObligationSet ( ) ; \n\t\tobligationSet . remove ( obligation ) ; \n\t\tif $F5973 ( obligationSet ) $F1717 ( updatedStateMap , obligationSet , state ) } \n\treplaceMap ( updatedStateMap ) ; \n\t} \n"}, {"code": "$F73354 ( curViewBound , curViewWidth , right , mClipPadding ) "}, {"code": "public ContentImpl createCompoundPackageContent ( OleBlobImpl blob , String prettyName , String className , String typeName , ByteBuffer blobBb , int dataBlockLen ) { \n\treturn new CompoundContentImpl ( blob , prettyName , className , typeName , blobBb . position ( ) , dataBlockLen ) ; \n\t} \n"}, {"code": "protected boolean checkCoverage $F72 { \n\tint i ; \n\tint n ; \n\t$F2027 count ; \n\tRange r ; \n\tString attrIndex ; \n\tSubspaceClusterDefinition cl ; \n\tcount = new int [ getNumAttributes ( ) ] ; \n\tfor ( $F95978 ( i , getNumAttributes ) ) { \n\t\tfor ( n = NUM00 ; \n\t\tn < getClusters ( ) . length ; \n\t\tn ++ ) { \n\t\t\tcl = ( SubspaceClusterDefinition ) getClusters ( ) [ n ] ; \n\t\t\tr = new Range ( cl . getAttrIndexRange ( ) ) ; \n\t\t\tr . setUpper ( getNumAttributes ( ) ) ; \n\t\t\tif ( r . isInRange ( i ) ) { \n\t\t\t\tcount [ i ] ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tattrIndex = NUM00 ; \n\tfor ( $F6929 ( i , count ) ) { \n\t\tif ( count [ i ] == NUM00 ) { \n\t\t\tif $F35625 ( attrIndex ) { \n\t\t\t\tattrIndex += NUM00 ; \n\t\t\t\t} \n\t\t\tattrIndex += ( i + NUM00 ) ; \n\t\t\t} \n\t\t} \n\tif $F35625 ( attrIndex ) { \n\t\tthrow new IllegalArgumentException $F54019 ( attrIndex ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private $F11868 findValues ( String string ) { \n\t$F11868 $F129524 ( results ) ; \n\tfor ( $F55140 ( str , string ) ) { \n\t\tif $F1264 ( str ) $F3762 ( results , findValue , str ) } \n\treturn results ; \n\t} \n"}, {"code": "private static int indexOf ( $F131 array , int len , Object elt ) { \n\tfor ( $F119 ( i , len ) ) { \n\t\tif $F145 ( elt , array , i ) return i ; \n\t\t} \n\t$F150 } \n"}, {"code": "$F1309 public void append $F2236 ( name , value ) { \n\t$F64948 ( l , map , name ) if ( l != null ) $F207 ( l , value ) else { \n\t\tl = Lists . newArrayList ( value ) ; \n\t\tmap . put ( name , l ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean equals ( Object obj ) { \n\t$F3627 ( obj , this , _BOOL ) if ( ! ( obj instanceof Certificate ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tCertificate object = ( Certificate ) obj ; \n\ttry $F120506 ( Arrays , getEncoded , object ) catch ( CertificateEncodingException e ) { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public Statement between ( Object former , Object later ) { \n\t$F84 ( statement ) append ( former ) ; \n\t$F84 ( statement ) append ( later ) ; \n\treturn this ; \n\t} \n"}, {"code": "public $F96 encode1 ( final String s ) { \n\tfinal ByteArrayBuffer tmp = new ByteArrayBuffer $F45530 ( s ) ; \n\tfinal int nwritten = uc . encode ( s , tmp ) ; \n\tfinal int npack = LongPacker . getByteLength ( nwritten ) ; \n\tfinal $F96 a = new byte [ npack + nwritten ] ; \n\tfinal DataOutputBuffer dob = new DataOutputBuffer ( NUM00 , a ) ; \n\ttry { \n\t\tdob . packLong ( nwritten ) ; \n\t\tdob . append ( tmp . array ( ) , NUM00 , tmp . pos ( ) ) ; \n\t\treturn a ; \n\t\t} \n\tfinally { \n\t\ttry $F881 ( dob ) $F12153 ( e ) } \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public static Map < Object , Long > valueHistogram ( GeoTimeSerie gts ) { \n\tMap < Object , Long > occurrences = new HashMap < Object , Long > $F72 ; \n\tfor ( $F168888 ( i , gts ) ) { \n\t\tObject value = GTSHelper . valueAtIndex ( gts , i ) ; \n\t\tif $F15257 ( occurrences , value ) $F248856 ( occurrences , value ) else { \n\t\t\toccurrences . put ( value , NUM00 + occurrences . get ( value ) ) ; \n\t\t\t} \n\t\t} \n\tif ( GTSHelper . isBucketized ( gts ) && gts . bucketcount != gts . values ) { \n\t\toccurrences . put ( null , ( long ) ( gts . bucketcount - gts . values ) ) ; \n\t\t} \n\treturn occurrences ; \n\t} \n"}, {"code": "private void updateExistingRow ( final SQLiteDatabase database , final long id , boolean bumpCount ) { \n\t$F2544 ( stringId , String , id ) $F41822 ( database ) final Cursor cursor = database . query ( SongPlayCountColumns . NAME , null , WHERE_ID_EQUALS , $F8640 ( stringId ) , null , null , null ) ; \n\tif ( cursor != null && cursor . moveToFirst ( ) ) { \n\t\tint lastUpdatedIndex = cursor . getColumnIndex ( SongPlayCountColumns . LAST_UPDATED_WEEK_INDEX ) ; \n\t\t$F41834 ( lastUpdatedWeek , cursor , lastUpdatedIndex ) int weekDiff = mNumberOfWeeksSinceEpoch - lastUpdatedWeek ; \n\t\tif ( Math . abs ( weekDiff ) >= NUM_WEEKS ) { \n\t\t\tdeleteEntry ( database , stringId ) ; \n\t\t\t$F308 ( bumpCount , createNewPlayedEntry , database , id ) } \n\t\telse if ( weekDiff != NUM00 ) { \n\t\t\t$F4120 ( playCounts , NUM_WEEKS ) if ( weekDiff > NUM00 ) { \n\t\t\t\tfor ( $F8122 ( i , NUM_WEEKS , weekDiff ) ) { \n\t\t\t\t\tplayCounts [ i + weekDiff ] = cursor . getInt ( getColumnIndexForWeek ( i ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if ( weekDiff < NUM00 ) { \n\t\t\t\tfor ( $F41842 ( i , NUM_WEEKS , weekDiff ) ) { \n\t\t\t\t\tplayCounts [ i ] = cursor . getInt ( getColumnIndexForWeek ( i - weekDiff ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( bumpCount ) $F41850 ( playCounts ) float score = calculateScore ( playCounts ) ; \n\t\t\tif ( score < NUM00 ) { \n\t\t\t\tdeleteEntry ( database , stringId ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tContentValues values = new ContentValues ( NUM_WEEKS + NUM00 ) ; \n\t\t\t\tvalues . put ( SongPlayCountColumns . LAST_UPDATED_WEEK_INDEX , mNumberOfWeeksSinceEpoch ) ; \n\t\t\t\tvalues . put ( SongPlayCountColumns . PLAYCOUNTSCORE , score ) ; \n\t\t\t\tfor ( $F119 ( i , NUM_WEEKS ) ) { \n\t\t\t\t\tvalues . put ( getColumnNameForWeek ( i ) , playCounts [ i ] ) ; \n\t\t\t\t\t} \n\t\t\t\tdatabase . update ( SongPlayCountColumns . NAME , values , WHERE_ID_EQUALS , $F8640 ( stringId ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( bumpCount ) { \n\t\t\t$F41874 ( values ) int scoreIndex = cursor . getColumnIndex ( SongPlayCountColumns . PLAYCOUNTSCORE ) ; \n\t\t\tfloat score = cursor . getFloat ( scoreIndex ) + getScoreMultiplierForWeek ( NUM00 ) ; \n\t\t\tvalues . put ( SongPlayCountColumns . PLAYCOUNTSCORE , score ) ; \n\t\t\tvalues . put ( getColumnNameForWeek ( NUM00 ) , cursor . getInt ( getColumnIndexForWeek ( NUM00 ) ) + NUM00 ) ; \n\t\t\tdatabase . update ( SongPlayCountColumns . NAME , values , WHERE_ID_EQUALS , $F8640 ( stringId ) ) ; \n\t\t\t} \n\t\t$F59 ( cursor ) } \n\telse $F308 ( bumpCount , createNewPlayedEntry , database , id ) $F41894 ( database ) $F41895 ( database ) } \n"}, {"code": "private void computeWeights ( Node node ) { \n\tint wsum = NUM00 ; \n\tfor ( Node child : node . children ) { \n\t\tcomputeWeights ( child ) ; \n\t\twsum += child . weight ; \n\t\t} \n\tnode . weight = Math . max ( NUM00 , wsum ) ; \n\t} \n"}, {"code": "public Searcher $F72 throws IOException { \n\tsearcher = new IndexSearcher ( DirectoryReader . open ( FSDirectory . open ( Paths . get ( INDEX_DIR ) ) ) ) ; \n\tparser = new QueryParser ( CONTENT_FIELD , new StandardAnalyzer $F72 ) ; \n\t} \n"}, {"code": "public QueryStringQueryBuilder field ( String field ) $F17642 ( fields , field , this ) "}, {"code": "public static < R , A , B > CompletionStage $F23350 combine ( CompletionStage $F20163 a , CompletionStage < B > b , BiFunction < A , B , R > function ) { \n\treturn a . thenCombine ( b , function ) ; \n\t} \n"}, {"code": "protected String buildCreateSchemaStatement $F72 throws ReplicatorException $F1337 "}, {"code": "public void testNegPosFirstShorter $F72 { \n\t$F50446 $F92469 int aSign = - NUM00 ; \n\tint bSign = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , - NUM00 , NUM00 , NUM00 , - NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F37344 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public StreamInfoManager ( TwitchApi api , StreamInfoListener listener ) { \n\tthis . listener = listener ; \n\tthis . api = api ; \n\t$F23429 ( pendingRequests ) invalidStreamInfo = new StreamInfo ( NUM00 , listener ) ; \n\tinvalidStreamInfo . setRequested ( ) ; \n\t} \n"}, {"code": "public Sentence asSentence $F72 { \n\treturn Sentence . newConjunction ( sentences ) ; \n\t} \n"}, {"code": "public boolean isPronoun $F72 $F298 ( typeString , SUFFIX_PRONOUN ) "}, {"code": "protected void appendShortType $F94426 ( sb , fieldType , fieldWidth ) $F86 ( sb ) "}, {"code": "public static Vector tokenizeString ( String source , String separator ) { \n\tif $F1277 ( separator ) { \n\t\treturn tokenizeString ( source , separator . charAt ( NUM00 ) ) ; \n\t\t} \n\t$F6518 ( tokenized ) $F1749 ( len , source ) $F83 ( buf ) for ( $F119 ( iter , len ) ) { \n\t\t$F1280 ( current , source , iter ) if ( $F136643 ( separator , current ) ) { \n\t\t\tif $F4012 ( buf ) { \n\t\t\t\t$F147908 ( tokenized , buf ) $F6932 ( buf ) } \n\t\t\t} \n\t\telse $F288 ( buf , current ) } \n\tif $F4012 ( buf ) { \n\t\t$F147908 ( tokenized , buf ) } \n\treturn tokenized ; \n\t} \n"}, {"code": "private void backupFavorites ( BackupDataOutput data ) throws IOException { \n\t$F12250 ( cr , mContext ) Cursor cursor = cr . query ( Favorites . CONTENT_URI , FAVORITE_PROJECTION , getUserSelectionArg ( ) , null , null ) ; \n\ttry { \n\t\t$F12257 ( cursor ) while $F12260 ( cursor ) { \n\t\t\t$F12262 ( id , cursor , ID_INDEX ) $F12262 ( updateTime , cursor , ID_MODIFIED ) Key key = getKey ( Key . FAVORITE , id ) ; \n\t\t\tmKeys . add ( key ) ; \n\t\t\tfinal String backupKey = keyToBackupKey ( key ) ; \n\t\t\tif ( ! mExistingKeys . contains ( backupKey ) || updateTime >= mLastBackupRestoreTime ) $F906 ( writeRowToBackup , key , packFavorite , cursor , data ) else { \n\t\t\t\t$F12259 ( DEBUG , Log , TAG , id ) } \n\t\t\t} \n\t\t} \n\t$F3229 ( cursor ) } \n"}, {"code": "public void update $F72 { \n\tif ( lastTime != - NUM00 ) { \n\t\tlong delta = System . nanoTime ( ) - lastTime ; \n\t\trollingAverage . addValue ( delta ) ; \n\t\t} \n\t$F101251 ( lastTime , System ) } \n"}, {"code": "public List < ValidationErrorMessage > validate $F72 { \n\t$F725 ( errorMessageIds ) $F896 ( paymentProduct ) for ( PaymentProductField field : paymentProduct . getPaymentProductFields ( ) ) { \n\t\tif ( ! isFieldInAccountOnFileAndNotAltered ( field ) ) { \n\t\t\terrorMessageIds . addAll ( field . validateValue ( $F13536 ( getValue , field ) ) ) ; \n\t\t\t} \n\t\t} \n\treturn errorMessageIds ; \n\t} \n"}, {"code": "KeyStoreState $F72 $F845 "}, {"code": "CryptoResult ( final T result , final $F81025 masterKeys , final CiphertextHeaders headers ) { \n\tresult_ = result ; \n\tmasterKeys_ = Collections . unmodifiableList ( masterKeys ) ; \n\theaders_ = headers ; \n\tencryptionContext_ = headers_ . getEncryptionContextMap ( ) ; \n\t} \n"}, {"code": "public void stateChanged ( ChangeEvent e ) { \n\t$F7254 ( ignoreUpdate ) double value = ( double ) ( NUM00 - setpointSlider . getValue ( ) ) / NUM00 ; \n\tsetSetPoint ( value ) ; \n\tsim . setSetPoint ( value ) ; \n\t} \n"}, {"code": "public static $F806 parseDelimitedList ( String list , char delimiter ) { \n\tString delim = NUM00 + delimiter ; \n\tStringTokenizer st = new StringTokenizer ( list + delim + NUM00 , delim , _BOOL ) ; \n\t$F8728 ( v ) String lastToken = NUM00 ; \n\tString word = NUM00 ; \n\twhile $F14498 ( st ) { \n\t\t$F8095 ( tok , st ) if ( lastToken != null ) { \n\t\t\tif $F1238 ( tok , delim ) { \n\t\t\t\tword = word + lastToken ; \n\t\t\t\tif $F1238 ( lastToken , delim ) tok = null ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif $F1264 ( word ) v . add ( word ) ; \n\t\t\t\tword = NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\tlastToken = tok ; \n\t\t} \n\t$F16105 ( v ) } \n"}, {"code": "private void initializeLayout $F72 { \n\tGridLayout gl = new GridLayout $F32532 ; \n\tgl . setVgap ( NUM00 ) ; \n\tsetLayout ( gl ) ; \n\tadd ( $F34046 ) ; \n\tadd ( frozenDD ) ; \n\tadd ( $F34046 ) ; \n\tadd ( tfUpBound ) ; \n\tadd ( $F34046 ) ; \n\tadd ( tfLowBound ) ; \n\tadd ( $F34046 ) ; \n\tadd ( tfIncrement ) ; \n\tadd ( $F34046 ) ; \n\tadd ( tfDelay ) ; \n\tsetBorder ( $F171654 ( BorderFactory ) ) ; \n\t} \n"}, {"code": "$F1 public boolean isRunning $F72 { \n\treturn $F293975 ( frame ) ; \n\t} \n"}, {"code": "public static MosaicDefinition createMosaicDefinition ( final Account creator ) { \n\treturn createMosaicDefinition ( creator , Utils . createMosaicId ( NUM00 , NUM00 ) , createMosaicProperties ( ) ) ; \n\t} \n"}, {"code": "public Result result ( SqlNode node , Collection $F304761 clauses , RelNode rel ) { \n\tfinal String alias2 = SqlValidatorUtil . getAlias ( node , - NUM00 ) ; \n\tfinal String alias3 = alias2 != null ? alias2 : NUM00 ; \n\tfinal String alias4 = SqlValidatorUtil . uniquify ( alias3 , aliasSet , SqlValidatorUtil . EXPR_SUGGESTER ) ; \n\tfinal String alias5 = alias2 == null || ! alias2 . equals ( alias4 ) ? alias4 : null ; \n\treturn new Result ( node , clauses , alias5 , Collections . singletonList ( Pair . of ( alias4 , rel . getRowType ( ) ) ) ) ; \n\t} \n"}, {"code": "private static void _trustAllHttpsCertificates $F72 { \n\tSSLContext context ; \n\tif ( _trustManagers == null ) { \n\t\t_trustManagers = new TrustManager [ ] { \n\t\t\tnew FakeX509TrustManager $F72 } \n\t\t; \n\t\t} \n\ttry { \n\t\t$F6161 ( context , SSLContext ) context . init ( null , _trustManagers , $F5607 ) ; \n\t\t} \n\tcatch ( GeneralSecurityException gse ) { \n\t\tthrow new IllegalStateException $F1783 ( gse ) ; \n\t\t} \n\tHttpsURLConnection . setDefaultSSLSocketFactory ( context . getSocketFactory ( ) ) ; \n\t} \n"}, {"code": "private static boolean isInNeedOfForm ( UIComponent component ) { \n\treturn ( component instanceof ActionSource || component instanceof ActionSource2 || component instanceof EditableValueHolder ) ; \n\t} \n"}, {"code": "private void addInternalListeners $F72 { \n\tcbDistribution . addItemListener ( cbItemListener ) ; \n\t} \n"}, {"code": "public static double safeSqrt ( double x ) { \n\treturn ( x < NUM00 ? - Math . sqrt ( - x ) : Math . sqrt ( x ) ) ; \n\t} \n"}, {"code": "public static long runMultiThreaded ( Iterable < $F353160 > calls , GridTestSafeThreadFactory threadFactory ) throws Exception { \n\tif ( ! busyLock . enterBusy ( ) ) $F4638 Collection $F392673 $F204 ( threads ) ; \n\tlong time ; \n\ttry { \n\t\tfor ( $F353160 call : calls ) threads . add ( threadFactory . newThread ( call ) ) ; \n\t\t$F3224 ( time , System ) for ( Thread t : threads ) $F2346 ( t ) } \n\tfinally { \n\t\tbusyLock . leaveBusy ( ) ; \n\t\t} \n\tfor ( Thread t : threads ) $F14454 ( t ) time = System . currentTimeMillis ( ) - time ; \n\tthreadFactory . checkError ( ) ; \n\treturn time ; \n\t} \n"}, {"code": "private void bappend ( char ch ) { \n\ttry { \n\t\tmBuff [ ++ mBuffIdx ] = ch ; \n\t\t} \n\tcatch ( Exception exp ) { \n\t\tchar buff [ ] = new char [ mBuff . length < < NUM00 ] ; \n\t\t$F7057 ( System , mBuff , buff ) mBuff = buff ; \n\t\tmBuff [ mBuffIdx ] = ch ; \n\t\t} \n\t} \n"}, {"code": "public void initializeOwnerReferencesForField ( StateManager sm , FieldMetaData fmd ) { \n\tif ( fmd . getAssociationType ( ) == FieldMetaData . ONE_TO_MANY ) { \n\t\t$F7922 collection = ( $F7922 ) sm . fetch ( fmd . getIndex ( ) ) ; \n\t\tif ( collection != null ) { \n\t\t\tfor ( Object item : collection ) { \n\t\t\t\tif ( item != null ) { \n\t\t\t\t\t_relationsManager . setOwnerStateManagerForPersistentInstance ( item , sm , fmd ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse if ( fmd . getAssociationType ( ) == FieldMetaData . ONE_TO_ONE || fmd . isEmbeddedPC ( ) ) { \n\t\tObject value = sm . fetch ( fmd . getIndex ( ) ) ; \n\t\tif ( value != null ) { \n\t\t\t_relationsManager . setOwnerStateManagerForPersistentInstance ( value , sm , fmd ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public String buildUnionSubQuery ( String typeDiscriminatorColumn , $F806 unionColumns , $F2689 columnsPresentInTable , int computedColumnsOffset , String typeDiscriminatorValue , String selection , String groupBy , String having ) { \n\tint unionColumnsCount = unionColumns . length ; \n\t$F12914 ( projectionIn , unionColumnsCount ) for ( $F119 ( i , unionColumnsCount ) ) { \n\t\tString unionColumn = unionColumns [ i ] ; \n\t\tif $F1238 ( unionColumn , typeDiscriminatorColumn ) { \n\t\t\tprojectionIn [ i ] = NUM00 + typeDiscriminatorValue + NUM00 + typeDiscriminatorColumn ; \n\t\t\t} \n\t\telse if ( i <= computedColumnsOffset || columnsPresentInTable . contains ( unionColumn ) ) { \n\t\t\tprojectionIn [ i ] = unionColumn ; \n\t\t\t} \n\t\telse { \n\t\t\tprojectionIn [ i ] = NUM00 + unionColumn ; \n\t\t\t} \n\t\t} \n\treturn buildQuery ( projectionIn , selection , groupBy , having , null , null ) ; \n\t} \n"}, {"code": "public Node ( Coordinate pt ) { \n\tthis ( pt , new DirectedEdgeStar $F72 ) ; \n\t} \n"}, {"code": "public synchronized void increase $F72 { \n\tif ( accuracy > NUM00 ) { \n\t\t$F5740 ( timePassed , System , lastAdded ) if ( timePassed > accuracy ) { \n\t\t\tclearUp ( ) ; \n\t\t\tif ( count > NUM00 ) { \n\t\t\t\tdata . addFirst ( lastAdded + accuracy ) ; \n\t\t\t\t} \n\t\t\t$F3224 ( lastAdded , System ) count = NUM00 ; \n\t\t\t} \n\t\tcount ++ ; \n\t\t} \n\telse { \n\t\tclearUp ( ) ; \n\t\tdata . addFirst ( System . currentTimeMillis ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void revert ( final VirtualFile root , final List $F337766 files ) throws VcsException { \n\tfor ( $F3803 paths : VcsFileUtil . chunkPaths ( root , files ) ) { \n\t\tGitSimpleHandler handler = new GitSimpleHandler ( myProject , root , GitCommand . CHECKOUT ) ; \n\t\thandler . addParameters ( NUM00 ) ; \n\t\thandler . endOptions ( ) ; \n\t\thandler . addParameters ( paths ) ; \n\t\t$F21687 ( handler ) } \n\t} \n"}, {"code": "public static $F5415 concatAllFloat ( $F5415 ... arrays ) { \n\tint totalLength = NUM00 ; \n\t$F18832 ( subArrayCount , arrays ) $F189285 ( i , subArrayCount , totalLength , arrays ) $F5415 $F189287 ( result , Arrays , arrays , totalLength ) ; \n\t$F26358 ( offset , arrays ) $F189290 ( i , subArrayCount , System , arrays , result , offset ) return result ; \n\t} \n"}, {"code": "public TaggedValueIterator ( final String aLine , final boolean attemptFirstWord , final String ... tags ) { \n\tthis . aLine = aLine ; \n\tthis . attemptFirstWord = attemptFirstWord ; \n\tthis . tags = tags ; \n\ttagPos = NUM00 ; \n\tnextResult = getNextResult ( ) ; \n\tif ( attemptFirstWord ) { \n\t\tint a = NUM00 ; \n\t\twhile $F7007 ( a , aLine ) { \n\t\t\tif ( aLine . charAt ( a ) == NUM00 || aLine . charAt ( a ) == NUM00 || $F1750 ( Character , aLine , a ) ) a ++ ; \n\t\t\telse $F597 } \n\t\tint b = a + NUM00 ; \n\t\twhile $F7007 ( b , aLine ) { \n\t\t\tif ( $F15875 ( Character , aLine , b ) || aLine . charAt ( b ) == NUM00 ) b ++ ; \n\t\t\telse $F597 } \n\t\tif ( b - a > NUM00 ) { \n\t\t\tnextResult = aLine . substring ( a , b ) ; \n\t\t\t} \n\t\ttagPos = b ; \n\t\t} \n\t} \n"}, {"code": "public void ascendTree $F72 { \n\tif ( null != parentPath ) { \n\t\tparentPath . append ( PARENT_PATH ) ; \n\t\t$F665 } \n\tFile parentTree = calcParentTree ( ) ; \n\tif ( null != parentTree ) $F24818 ( treeFile , parentTree ) parentPath = new StringBuilder ( provideLastName ( ) ) ; \n\tparentPath . append ( PARENT_PATH ) ; \n\t} \n"}, {"code": "public boolean canRead $F72 $F40347 ( _is ) "}, {"code": "void writeTo $F5474 ( b , off ) $F112231 ( System , buf , b , off , count ) "}, {"code": "void onItemDismissed ( final int position ) { \n\tfinal T removed = mData . get ( position ) ; \n\tfinal boolean wasRemoved = remove ( position ) ; \n\tif ( wasRemoved && mDataChangeListener != null ) { \n\t\tmDataChangeListener . onItemRemoved ( removed , position ) ; \n\t\t} \n\t} \n"}, {"code": "public static double normalPDF $F7635 ( x , variance , meanValue ) { \n\t$F96817 ( standardDeviation , Math , variance ) return ( NUM00 / ( standardDeviation * $F172440 ( Math ) ) ) * Math . pow ( Math . E , - ( $F127638 ( x , meanValue ) ) / ( NUM00 * variance ) ) ; \n\t} \n"}, {"code": "public static $F131 sortCopy ( $F131 objects , Comparer comparer ) { \n\tint len = objects . length ; \n\t$F133 ( copy , len ) $F135 ( System , objects , copy , len ) sort ( copy , comparer ) ; \n\treturn copy ; \n\t} \n"}, {"code": "public synchronized void addZoomListener ( ZoomListener listener ) $F207 ( mZoomListeners , listener ) "}, {"code": "private void clearRegisters ( Instruction start , Instruction end ) { \n\tfor ( Instruction p = start ; \n\t; \n\tp = p . nextInstructionInCodeOrder ( ) ) { \n\t\tfor ( $F75495 ops = p . getOperands ( ) ; \n\t\tops . hasMoreElements ( ) ; \n\t\t) { \n\t\t\t$F75499 ( op , ops ) if ( op instanceof RegisterOperand ) { \n\t\t\t\tRegisterOperand rOp = ( RegisterOperand ) op ; \n\t\t\t\tclearDepGraphNodeForRegister ( rOp . getRegister ( ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F67767 ( p , end ) } \n\tfor ( Enumeration < Register > e = GenericPhysicalDefUse . enumerateAllImplicitDefUses ( ir ) ; \n\te . hasMoreElements ( ) ; \n\t) { \n\t\tRegister r = e . nextElement ( ) ; \n\t\tclearDepGraphNodeForRegister ( r ) ; \n\t\t} \n\t} \n"}, {"code": "public void fireAnnotationSelected ( WorkflowAnnotation anno ) { \n\tList < WorkflowAnnotation > $F19827 ( list ) ; \n\tlist . add ( anno ) ; \n\tfireAnnotationsChanged ( AnnotationEvent . SELECTED_ANNOTATION_CHANGED , list ) ; \n\t} \n"}, {"code": "public boolean updateStatsAndReturnIfAllowed $F72 { \n\t$F68120 ( now , SystemClock ) long deltaMs = now - mLastRequestTimestamp ; \n\tif ( deltaMs < mDelayMs ) return _BOOL ; \n\tmLastRequestTimestamp = now ; \n\tif ( deltaMs < NUM00 * mDelayMs ) { \n\t\tmDelayMs = Math . min ( MAX_DELAY , mDelayMs * NUM00 ) ; \n\t\t} \n\telse { \n\t\tmDelayMs = MIN_DELAY ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean verifyServerEvidenceMessage ( BigInteger serverM2 ) throws CryptoException { \n\tif ( ( this . A == null ) || ( this . M1 == null ) || ( this . S == null ) ) { \n\t\tthrow new CryptoException $F3487 ; \n\t\t} \n\tBigInteger computedM2 = SRP6Util . calculateM2 ( digest , N , A , M1 , S ) ; \n\tif $F1238 ( computedM2 , serverM2 ) { \n\t\tthis . M2 = serverM2 ; \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void handleText ( String text ) { \n\tif ( skippingCharacters > NUM00 ) { \n\t\tif $F11984 ( skippingCharacters , text ) { \n\t\t\tskippingCharacters -= text . length ( ) ; \n\t\t\t$F665 } \n\t\telse { \n\t\t\t$F11978 ( text , skippingCharacters ) skippingCharacters = NUM00 ; \n\t\t\t} \n\t\t} \n\tif ( rtfDestination != null ) { \n\t\trtfDestination . handleText ( text ) ; \n\t\t$F665 } \n\twarning ( NUM00 ) ; \n\t} \n"}, {"code": "public final boolean remove ( final URI serviceURI ) { \n\tboolean modified = _BOOL ; \n\tsynchronized ( this ) { \n\t\tif ( aliases . remove ( serviceURI ) != null ) { \n\t\t\tmodified = _BOOL ; \n\t\t\t} \n\t\tfinal ServiceFactory factory = services . remove ( serviceURI ) ; \n\t\tif ( factory != null ) { \n\t\t\tmodified = _BOOL ; \n\t\t\tif ( factory instanceof CustomServiceFactory ) $F106 ( customServices , factory ) } \n\t\t} \n\treturn modified ; \n\t} \n"}, {"code": "$F5466 private static String referenceToAttribute ( String attrib , boolean includeDummies ) { \n\twhile $F3106 ( attrib ) $F3109 ( attrib ) if $F3106 ( attrib ) { \n\t\tif ( includeDummies ) $F3109 ( attrib ) else $F1274 } \n\tif ( ! StringUtil . startsWithChar ( attrib , NUM00 ) ) $F1337 $F3108 ( attrib ) if ( StringUtil . startsWithChar ( attrib , NUM00 ) ) { \n\t\tString cleanAttribute = null ; \n\t\tfor ( $F1088 ( i , attrib ) ) { \n\t\t\t$F1280 ( currChar , attrib , i ) if $F37111 ( currChar ) $F103997 ( cleanAttribute ) else if ( currChar == NUM00 ) { \n\t\t\t\t$F14493 ( cleanAttribute , attrib , i ) $F597 } \n\t\t\t} \n\t\tattrib = cleanAttribute ; \n\t\t} \n\telse { \n\t\tfor ( $F1088 ( i , attrib ) ) { \n\t\t\t$F1280 ( currChar , attrib , i ) if $F58237 ( currChar ) { \n\t\t\t\t$F45799 ( attrib , i ) $F597 } \n\t\t\t} \n\t\t} \n\treturn attrib ; \n\t} \n"}, {"code": "public EscapedWriter ( Writer fos ) { \n\tsuper ( fos ) ; \n\t} \n"}, {"code": "public boolean isExpired ( final Date date ) { \n\t$F826 ( date ) return ( cookieExpiryDate != null && cookieExpiryDate . getTime ( ) <= date . getTime ( ) ) ; \n\t} \n"}, {"code": "public void record ( RecordBuilderImpl recordBuilder ) { \n\tstoreBitmap ( recordBuilder ) ; \n\tOutputStream viewHierarchyDump = null ; \n\ttry { \n\t\tviewHierarchyDump = mAlbum . openViewHierarchyFile ( recordBuilder . getName ( ) ) ; \n\t\tmViewHierarchy . deflate ( recordBuilder . getView ( ) , viewHierarchyDump ) ; \n\t\tmAlbum . addRecord ( recordBuilder ) ; \n\t\t} \n\t$F12153 ( e ) finally { \n\t\tif ( viewHierarchyDump != null ) { \n\t\t\ttry $F881 ( viewHierarchyDump ) catch ( IOException e ) { \n\t\t\t\tLog . e ( NUM00 , NUM00 , e ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected boolean isCorrectMethod ( Method method , $F131 args ) { \n\treturn ( $F3174 ( proxySignature , method ) && args . length == NUM00 ) ; \n\t} \n"}, {"code": "public void testCase17 $F72 { \n\t$F221347 $F221350 int aSign = NUM00 ; \n\tint bSign = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F221355 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public Metadata . Property . Builder clear $F72 { \n\tMetadata_Property_Builder _defaults = new Metadata . Property . Builder $F72 ; \n\ttype = _defaults . type ; \n\tboxedType = _defaults . boxedType ; \n\tname = _defaults . name ; \n\tcapitalizedName = _defaults . capitalizedName ; \n\tallCapsName = _defaults . allCapsName ; \n\tgetterName = _defaults . getterName ; \n\tcodeGenerator = _defaults . codeGenerator ; \n\tfullyCheckedCast = _defaults . fullyCheckedCast ; \n\t$F725 ( accessorAnnotations ) $F725 ( _unsetProperties ) $F27392 ( _unsetProperties , _defaults ) return ( Metadata . Property . Builder ) this ; \n\t} \n"}, {"code": "public static float r_distance ( vec3 a , vec3 b ) { \n\tfloat x = a . m [ NUM00 ] - b . m [ NUM00 ] ; \n\tfloat y = a . m [ NUM00 ] - b . m [ NUM00 ] ; \n\tfloat z = a . m [ NUM00 ] - b . m [ NUM00 ] ; \n\tfloat result = $F16207 ( Math , x , y , z ) ; \n\treturn result ; \n\t} \n"}, {"code": "public void checkBackupInfo ( final File backupInfoFile , boolean backupInMultiVdc ) { \n\ttry ( $F24408 ( fis , backupInfoFile ) ) { \n\t\t$F2697 ( properties ) properties . load ( fis ) ; \n\t\tcheckVersion ( properties ) ; \n\t\tcheckHosts ( properties , backupInMultiVdc ) ; \n\t\t} \n\t$F60644 ( log , ex ) } \n"}, {"code": "static String toLowerCase ( String s ) { \n\t$F1749 ( len , s ) StringBuilder sb = null ; \n\tfor ( $F119 ( i , len ) ) { \n\t\t$F1280 ( c , s , i ) if ( $F19295 ( c ) || ( c == NUM00 ) ) { \n\t\t\tif ( sb != null ) sb . append ( c ) ; \n\t\t\t} \n\t\telse if ( $F19295 ( c ) || ( c == NUM00 ) ) { \n\t\t\tif ( sb != null ) sb . append ( c ) ; \n\t\t\t} \n\t\telse if $F19295 ( c ) { \n\t\t\tif ( sb == null ) { \n\t\t\t\t$F3934 ( sb , len ) $F58551 ( sb , s , i ) } \n\t\t\tsb . append ( ( char ) ( c - CASE_DIFF ) ) ; \n\t\t\t} \n\t\telse $F825 } \n\treturn $F75266 ( sb , s ) ; \n\t} \n"}, {"code": "public void testConstructorSignBytesNegative3 $F72 { \n\tbyte $F3009 = $F101798 ; \n\tint aSign = - NUM00 ; \n\tbyte $F3018 = { \n\t\t- NUM00 , NUM00 , - NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3030 ( rBytes ) $F3031 ( resBytes , aNumber ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F7841 ( assertEquals , aNumber ) } \n"}, {"code": "public static $F96 buildOpusComment ( String comment ) { \n\t$F96 data = new byte [ $F63757 ( comment ) ] ; \n\twriteOpusComment ( data , NUM00 , comment ) ; \n\treturn data ; \n\t} \n"}, {"code": "public static void assertProps ( UniformPair < EventBean > received , $F806 propertyNames , $F131 expectedInsert , $F131 expectedRemoved ) { \n\tassertProps ( received . getFirst ( ) , propertyNames , expectedInsert ) ; \n\tassertProps ( received . getSecond ( ) , propertyNames , expectedRemoved ) ; \n\t} \n"}, {"code": "$F1654 ( al ) "}, {"code": "public static String toUpperCase ( String src ) { \n\tif ( src == null ) $F1337 else { \n\t\treturn src . toUpperCase ( ) ; \n\t\t} \n\t} \n"}, {"code": "public final Iterator < KnowledgeEdge > requiredEdgesIterator $F72 { \n\tSet < KnowledgeEdge > $F9626 ( edges ) ; \n\tfor ( OrderedPair < Set < MyNode > > o : requiredRulesSpecs ) { \n\t\tfinal Set < MyNode > first = o . getFirst ( ) ; \n\t\tfor ( MyNode s1 : first ) { \n\t\t\tfinal Set < MyNode > second = o . getSecond ( ) ; \n\t\t\tfor ( MyNode s2 : second ) { \n\t\t\t\tif $F2137 ( s1 , s2 ) { \n\t\t\t\t\tedges . add ( new KnowledgeEdge ( $F66558 ( s1 , s2 ) ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F16047 ( edges ) } \n"}, {"code": "$F1309 public void unlock ( LockState $F4203 lockState ) { \n\t$F826 ( lockState ) if ( lockState . setLock != this ) $F825 if ( lockState . thread != Thread . currentThread ( ) ) $F825 threadSet . remove ( Thread . currentThread ( ) ) ; \n\tfor ( ReentrantLock lock : lockState . locks ) $F795 ( lock ) } \n"}, {"code": "public static String formatJavaDocBox ( String text ) { \n\trequireNonNull ( text ) ; \n\treturn formatTextBox ( text , JAVA_DOC_WIDTH , JAVADOC_WORDS , JAVA_DOC_SINGLE_LINE_WORDS ) ; \n\t} \n"}, {"code": "private static String forceNumberStringToTwoDigits ( String text ) { \n\twhile $F3599 ( text ) $F21679 ( text ) if $F4012 ( text ) { \n\t\ttext = text . substring ( $F1092 ( text ) , text . length ( ) ) ; \n\t\t} \n\treturn text ; \n\t} \n"}, {"code": "public void addDropItem ( final String name , final double probability , final int min , final int max ) { \n\tdropsItems . add ( new DropItem ( name , probability , min , max ) ) ; \n\t} \n"}, {"code": "public static < E extends Identifiable > $F57915 findByPrimaryKeys ( EntityManager em , $F114477 ids , $F48880 type ) { \n\trequireArgument ( em != null , NUM00 ) ; \n\trequireArgument ( $F1031 ( ids ) , NUM00 ) ; \n\trequireArgument ( type != null , NUM00 ) ; \n\tTypedQuery $F11685 query = em . createNamedQuery ( NUM00 , type ) ; \n\tquery . setHint ( NUM00 , NUM00 ) ; \n\ttry { \n\t\t$F155222 ( query , ids ) $F155222 ( query , _BOOL ) $F155223 ( query ) } \n\tcatch ( NoResultException ex ) { \n\t\treturn new $F201 $F989 ; \n\t\t} \n\t} \n"}, {"code": "private void loadWorkflow ( Properties ctx , int AD_Workflow_ID , HttpSession sess ) { \n\tMWorkflow wf = new MWorkflow ( ctx , AD_Workflow_ID , null ) ; \n\tMWFNode [ ] nodes = wf . getNodes ( _BOOL , Env . getContextAsInt ( ctx , NUM00 ) ) ; \n\tMWFNode wfn = null ; \n\t$F12181 ( nodes_ID ) for ( $F1139 ( i , nodes ) ) { \n\t\twfn = nodes [ i ] ; \n\t\tnodes_ID . add ( new Integer ( wfn . getAD_WF_Node_ID ( ) ) ) ; \n\t\t} \n\tint imageMap [ ] [ ] = generateImageMap ( nodes_ID ) ; \n\tsess . setAttribute ( WORKFLOW , wf ) ; \n\tsess . setAttribute ( NODES , nodes ) ; \n\tsess . setAttribute ( NODES_ID , nodes_ID ) ; \n\tsess . setAttribute ( IMAGE_MAP , imageMap ) ; \n\tsess . setAttribute ( ACTIVE_NODE , $F89913 ) ; \n\t} \n"}, {"code": "public int hashCode $F72 { \n\tint h = hash ; \n\tif ( h == - NUM00 ) { \n\t\ttry { \n\t\t\th = Arrays . hashCode ( X509CertImpl . getEncodedInternal ( this ) ) ; \n\t\t\t} \n\t\tcatch ( CertificateException e ) { \n\t\t\th = NUM00 ; \n\t\t\t} \n\t\thash = h ; \n\t\t} \n\treturn h ; \n\t} \n"}, {"code": "public void removeFromTags ( String removeTag ) { \n\ttags . remove ( removeTag ) ; \n\tfirePropertyChange ( TAG , null , removeTag ) ; \n\tfirePropertyChange ( TAGS_AS_ <missing ';'> NUM00 , null , removeTag ) ; \n\t} \n"}, {"code": "public static boolean verify $F55962 ( data , signature , pub ) { \n\tPreconditions . checkArgument ( data . length == NUM00 && signature . length <= NUM00 && pub . length <= NUM00 ) ; \n\tByteBuffer byteBuff = nativeECDSABuffer . get ( ) ; \n\tif ( byteBuff == null ) { \n\t\tbyteBuff = ByteBuffer . allocateDirect ( NUM00 + NUM00 + NUM00 + NUM00 ) ; \n\t\t$F16706 ( byteBuff , ByteOrder ) nativeECDSABuffer . set ( byteBuff ) ; \n\t\t} \n\t$F23501 ( byteBuff ) byteBuff . put ( data ) ; \n\tbyteBuff . putInt ( signature . length ) ; \n\tbyteBuff . putInt ( pub . length ) ; \n\tbyteBuff . put ( signature ) ; \n\tbyteBuff . put ( pub ) ; \n\treturn secp256k1_ecdsa_verify ( byteBuff ) == NUM00 ; \n\t} \n"}, {"code": "protected void deleteDirectory ( File webAppFile ) { \n\tif $F3444 ( webAppFile ) { \n\t\t$F5459 ( children , webAppFile ) $F5460 ( element , children , deleteDirectory ) $F1900 ( webAppFile ) } \n\telse $F19636 ( webAppFile ) } \n"}, {"code": "$F1431 static public void assertSameIteratorAnyOrder ( final $F131 expected , final Iterator actual ) $F228450 ( assertSameIteratorAnyOrder , expected , actual ) "}, {"code": "public static String formattingFinishedPercentage ( final RolloutGroup rolloutGroup , final float finishedPercentage ) { \n\tfloat tmpFinishedPercentage = NUM00 ; \n\tswitch ( rolloutGroup . getStatus ( ) ) { \n\t\tcase READY : case SCHEDULED : case ERROR : tmpFinishedPercentage = NUM00 ; \n\t\t$F597 case FINISHED : tmpFinishedPercentage = NUM00 ; \n\t\t$F597 case RUNNING : tmpFinishedPercentage = finishedPercentage ; \n\t\t$F597 $F2448 } \n\t$F23890 ( String , tmpFinishedPercentage ) } \n"}, {"code": "public static String generateHostName ( String vmName , String hostId ) { \n\tString hostname = vmName + NUM00 + hostId ; \n\tPreconditions . checkState ( hostname . equals ( hostname . toLowerCase ( ) ) , NUM00 ) ; \n\treturn hostname ; \n\t} \n"}, {"code": "protected void transferFromFile ( File idFile ) throws IOException { \n\ttry ( BufferedReader br = new BufferedReader $F434 ( idFile ) ) { \n\t\tString line ; \n\t\twhile $F443 ( line , br ) { \n\t\t\t$F1382 ( line ) if $F4012 ( line ) { \n\t\t\t\ttransfer ( line ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F4562 ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , fuzzyThreshold , scaleFactor , isTouchEvent , deltaValue , currentScrollValue , scrollValue , HORIZONTAL , VERTICAL , mode , newScrollValue , PullToRefreshBase , Log , LOG_TAG , State , Math ) "}, {"code": "private static String unwrap ( String expression ) { \n\tif $F3106 ( expression ) { \n\t\texpression = expression . substring ( $F12707 ( expression ) , $F1092 ( expression ) ) ; \n\t\tif $F8991 ( expression ) { \n\t\t\texpression = $F129389 ( expression ) ; \n\t\t\t} \n\t\telse { \n\t\t\texpression = $F129389 ( expression ) ; \n\t\t\t} \n\t\t} \n\treturn expression ; \n\t} \n"}, {"code": "public boolean areAllSegmentPresent ( int datasetSize ) { \n\treturn mPieSegmentList . size ( ) == datasetSize ; \n\t} \n"}, {"code": "protected int drawNextEventTimeDiff $F72 { \n\tint timeDiff = msgInterval [ NUM00 ] == msgInterval [ NUM00 ] ? NUM00 : rng . nextInt ( $F50510 ( msgInterval ) ) ; \n\treturn msgInterval [ NUM00 ] + timeDiff ; \n\t} \n"}, {"code": "private int createLines $F36827 ( text , insertPosition , offset ) { \n\tint count = NUM00 ; \n\tint start = NUM00 ; \n\tDelimiterInfo delimiterInfo = nextDelimiterInfo ( text , NUM00 ) ; \n\twhile ( delimiterInfo != null && delimiterInfo . delimiterIndex > - NUM00 ) { \n\t\tint index = delimiterInfo . delimiterIndex + ( delimiterInfo . delimiterLength - NUM00 ) ; \n\t\tif ( insertPosition + count >= fLines . size ( ) ) fLines . add ( new Line ( offset + start , offset + index , delimiterInfo . delimiter ) ) ; \n\t\telse fLines . add ( insertPosition + count , new Line ( offset + start , offset + index , delimiterInfo . delimiter ) ) ; \n\t\t++ count ; \n\t\tstart = index + NUM00 ; \n\t\tdelimiterInfo = nextDelimiterInfo ( text , start ) ; \n\t\t} \n\tif $F7007 ( start , text ) { \n\t\tif ( insertPosition + count < fLines . size ( ) ) { \n\t\t\tLine l = ( Line ) fLines . get ( insertPosition + count ) ; \n\t\t\t$F7878 ( delta , text , start ) l . offset -= delta ; \n\t\t\tl . length += delta ; \n\t\t\t} \n\t\telse { \n\t\t\tfLines . add ( new Line ( offset + start , offset + text . length ( ) - NUM00 , null ) ) ; \n\t\t\t++ count ; \n\t\t\t} \n\t\t} \n\treturn count ; \n\t} \n"}, {"code": "public static double sqrt ( double x ) { \n\t$F41531 ( Math , x ) } \n"}, {"code": "private ResultPointsAndTransitions transitionsBetween ( ResultPoint from , ResultPoint to ) { \n\t$F166720 ( fromX , from ) $F166722 ( fromY , from ) $F166720 ( toX , to ) $F166722 ( toY , to ) $F226920 ( steep , Math , toY , fromY , toX , fromX ) $F226922 ( steep , temp , fromX , fromY , toX , toY ) $F11871 ( dx , Math , toX , fromX ) $F11871 ( dy , Math , toY , fromY ) int error = - dx > > NUM00 ; \n\t$F211050 ( ystep , fromY , toY ) $F211050 ( xstep , fromX , toX ) int transitions = NUM00 ; \n\t$F226926 ( inBlack , image , steep , fromY , fromX ) $F226931 ( x , fromX , y , fromY , toX , xstep , isBlack , image , steep , inBlack , transitions , error , dy , toY , ystep , dx ) $F226932 ( from , to , transitions ) } \n"}, {"code": "public static String toBits ( final long x ) { \n\t$F1121 ( sb ) long t = x ; \n\tfor ( $F6268 ( i ) ) { \n\t\tif ( ( i & NUM00 ) == NUM00 && i > NUM00 ) $F86 ( sb ) sb . append ( t < NUM00 ? NUM00 : NUM00 ) ; \n\t\tt = t < < NUM00 ; \n\t\t} \n\tassert t == NUM00 ; \n\t$F92 ( sb ) } \n"}, {"code": "public static final $F96 encodeUrl ( BitSet urlsafe , $F96 bytes ) { \n\t$F1338 ( bytes ) $F13265 ( urlsafe , WWW_FORM_URL ) $F1538 ( buffer ) for ( $F1139 ( i , bytes ) ) { \n\t\tint b = bytes [ i ] ; \n\t\tif ( b < NUM00 ) { \n\t\t\tb = NUM00 + b ; \n\t\t\t} \n\t\tif $F73204 ( urlsafe , b ) { \n\t\t\tif ( b == NUM00 ) { \n\t\t\t\tb = NUM00 ; \n\t\t\t\t} \n\t\t\tbuffer . write ( b ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F3410 ( buffer ) char hex1 = Character . toUpperCase ( $F73208 ( Character , b ) ) ; \n\t\t\tchar hex2 = Character . toUpperCase ( $F73213 ( Character , b ) ) ; \n\t\t\tbuffer . write ( hex1 ) ; \n\t\t\tbuffer . write ( hex2 ) ; \n\t\t\t} \n\t\t} \n\t$F11316 ( buffer ) } \n"}, {"code": "public MessageTokenizer ( IDiscordClient client , String content ) { \n\t$F19273 ( content ) if $F1277 ( content ) $F824 $F19273 ( client ) this . content = content ; \n\tthis . client = client ; \n\tstepForward ( NUM00 ) ; \n\t} \n"}, {"code": "public void await ( int ID ) throws InterruptedException { \n\t$F7546 ( parties ) final boolean startCondition = competitionCondition ; \n\tint competingFor = ( locks . length * NUM00 - NUM00 - ID ) / NUM00 ; \n\twhile ( competingFor >= NUM00 ) { \n\t\tfinal Lock node = locks [ competingFor ] ; \n\t\tif $F39091 ( node ) { \n\t\t\tsynchronized ( node ) { \n\t\t\t\twhile ( competitionCondition == startCondition ) $F18604 ( node ) } \n\t\t\t$F704 ( node ) wakeUpTarget ( competingFor * NUM00 + NUM00 ) ; \n\t\t\twakeUpTarget ( competingFor * NUM00 + NUM00 ) ; \n\t\t\t$F665 } \n\t\telse { \n\t\t\tif ( competingFor == NUM00 ) $F597 competingFor = ( competingFor - NUM00 ) / NUM00 ; \n\t\t\t} \n\t\t} \n\tcompetitionCondition = ! competitionCondition ; \n\twakeUpTarget ( NUM00 ) ; \n\t} \n"}, {"code": "private void loadTranslationsCacheIfEmpty $F72 { \n\tif $F2979 ( translationCache ) { \n\t\tfor ( ObjectTranslation translation : translations ) { \n\t\t\tif ( translation . getLocale ( ) != null && translation . getProperty ( ) != null && ! StringUtils . isEmpty ( translation . getValue ( ) ) ) { \n\t\t\t\tString key = ObjectTranslation . getCacheKey ( translation . getLocale ( ) , translation . getProperty ( ) ) ; \n\t\t\t\t$F96588 ( translationCache , key , translation ) } \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public NavMouseMode ( boolean shouldConsumeEvents ) { \n\tsuper ( modeID , shouldConsumeEvents ) ; \n\tsetModeCursor ( Cursor . getPredefinedCursor ( Cursor . CROSSHAIR_CURSOR ) ) ; \n\trectAttributes . setLinePaint ( Color . GRAY ) ; \n\trectAttributes . setMattingPaint ( Color . LIGHT_GRAY ) ; \n\trectAttributes . setMatted ( _BOOL ) ; \n\t} \n"}, {"code": "public void addEvent ( SimEvent newEvent ) { \n\tnewEvent . setSerial ( serial ++ ) ; \n\tsortedSet . add ( newEvent ) ; \n\t} \n"}, {"code": "public static void stopTimer ( String name ) { \n\t$F25238 ( stopTime , System ) Long startTime = openTimers . remove ( name ) ; \n\t$F826 ( startTime ) SummaryStatistics statistics = data . get ( name ) ; \n\tif ( statistics == null ) { \n\t\tstatistics = new SummaryStatistics $F72 ; \n\t\tdata . put ( name , statistics ) ; \n\t\t} \n\tstatistics . addValue ( stopTime - startTime ) ; \n\t} \n"}, {"code": "public String toStringSummary $F72 { \n\tint resultsetLength ; \n\tString result ; \n\tString titles ; \n\tint i ; \n\tint j ; \n\t$F1747 ( m_NonSigWins ) resultsetLength = NUM00 + Math . max ( ( int ) ( Math . log ( getColCount ( ) ) / Math . log ( NUM00 ) ) , ( int ) ( Math . log ( getRowCount ( ) ) / Math . log ( NUM00 ) ) ) ; \n\tresult = NUM00 ; \n\ttitles = NUM00 ; \n\tresult += NUM00 ; \n\tresult += NUM00 + NUM00 ; \n\tresult += NUM00 ; \n\tresult += NUM00 ; \n\tfor ( $F95978 ( i , getColCount ) ) { \n\t\t$F324879 ( getColHidden , i ) titles += NUM00 ; \n\t\tresult += NUM00 ; \n\t\ttitles += NUM00 + Utils . padLeft ( NUM00 + getSummaryTitle ( i ) , resultsetLength * NUM00 + NUM00 ) ; \n\t\t} \n\tresult += NUM00 ; \n\tresult += titles + NUM00 ; \n\tfor ( $F95978 ( i , getColCount ) ) { \n\t\t$F324879 ( getColHidden , i ) for ( $F95978 ( j , getColCount ) ) { \n\t\t\t$F324879 ( getColHidden , j ) if ( j == NUM00 ) result += ( char ) ( $F146909 + i % NUM00 ) ; \n\t\t\tif ( j == i ) result += NUM00 ; \n\t\t\telse result += NUM00 + m_NonSigWins [ i ] [ j ] + NUM00 + m_Wins [ i ] [ j ] + NUM00 ; \n\t\t\t} \n\t\tresult += NUM00 ; \n\t\t} \n\tresult += NUM00 ; \n\treturn result ; \n\t} \n"}, {"code": "public static File createTempPath ( String path ) throws IOException { \n\tString sep = File . separator ; \n\tFile tempDir = new File ( System . getProperty ( NUM00 ) + sep + path ) ; \n\tif $F1906 ( tempDir ) if $F4928 ( tempDir ) { \n\t\t$F3452 ( status , tempDir ) $F132377 ( tempDir , status ) } \n\t$F60829 ( tempDir ) return tempDir ; \n\t} \n"}, {"code": "public void hspan ( double start , double end , Paint color , String legend ) { \n\tLegendText legendText = new LegendText ( color , legend ) ; \n\tcomments . add ( legendText ) ; \n\tplotElements . add ( new HSpan ( start , end , color , legendText ) ) ; \n\t} \n"}, {"code": "public StateInteractive extent_to_whole_connections $F72 { \n\t$F155343 selected_items = new $F155359 $F72 ; \n\tfor ( BrdItem curr_item : items_list ) { \n\t\tif ( curr_item instanceof BrdConnectable ) { \n\t\t\tselected_items . addAll ( curr_item . get_connection_items ( ) ) ; \n\t\t\t} \n\t\t} \n\t$F4975 ( selected_items , return_state ) items_list = selected_items ; \n\tactlog_start_scope ( LogfileScope . EXTEND_TO_WHOLE_CONNECTIONS ) ; \n\tfilter ( ) ; \n\t$F8798 ( i_brd ) return this ; \n\t} \n"}, {"code": "public static IKeyBuilder newInstance ( int capacity , CollatorEnum collatorChoice , Locale locale , Object strength , DecompositionEnum mode ) { \n\tif ( collatorChoice == CollatorEnum . ASCII ) { \n\t\treturn new KeyBuilder ( capacity ) ; \n\t\t} \n\tif ( locale == null ) { \n\t\t$F39044 ( locale , Locale ) if $F17747 ( log ) log . info ( $F16018 ( locale ) ) ; \n\t\t} \n\tfinal boolean icu = collatorChoice == CollatorEnum . ICU ; \n\tif ( icu && ! DefaultKeyBuilderFactory . isICUAvailable ( ) ) { \n\t\tthrow new UnsupportedOperationException ( DefaultKeyBuilderFactory . ICU_NOT_AVAILABLE ) ; \n\t\t} \n\t$F172325 ( buf , createBuffer , capacity ) final int len = NUM00 ; \n\tswitch ( collatorChoice ) { \n\t\tcase ICU : return new KeyBuilder ( new ICUSortKeyGenerator ( locale , strength , mode ) , len , buf ) ; \n\t\tcase JDK : return new KeyBuilder ( new JDKSortKeyGenerator ( locale , strength , mode ) , len , buf ) ; \n\t\t$F1267 $F134041 ( collatorChoice ) } \n\t} \n"}, {"code": "private $F27878 possibleParents ( Node x , $F27878 nodes , IKnowledge knowledge ) { \n\t$F27878 $F19827 ( possibleParents ) ; \n\t$F20605 ( _x , x ) for ( Node z : nodes ) { \n\t\t$F20605 ( _z , z ) if ( possibleParentOf ( _z , _x , knowledge ) ) $F207 ( possibleParents , z ) } \n\treturn possibleParents ; \n\t} \n"}, {"code": "protected void configureFromProperties ( InputStream is , String rootDirectory ) throws IOException { \n\t$F2697 ( props ) props . load ( is ) ; \n\tprops . put ( ROOT_DIR_PATH_PROPERTY , rootDirectory ) ; \n\tString oldPrefix = getPropertyPrefix ( ) ; \n\tsetProperties ( null , props ) ; \n\tsetPropertyPrefix ( oldPrefix ) ; \n\t} \n"}, {"code": "Connection openNewConnection $F72 throws SQLException { \n\tConnection newConn = DriverManager . getConnection ( url , user , password ) ; \n\tif $F3106 ( url ) { \n\t\ttry $F348538 ( s , newConn ) $F845 } \n\telse if $F3106 ( url ) { \n\t\ttry $F348538 ( s , newConn ) { \n\t\t\t$F131050 ( s ) } \n\t\t} \n\treturn newConn ; \n\t} \n"}, {"code": "$F1 public void addRelations ( Task task , Iterable < ObjectId > projectIds , String fieldName ) { \n\tList < Project > $F19827 ( newProjectList ) ; \n\tIterable < Project > projectsToAdd = projectRepository . findAll ( projectIds , null ) ; \n\tfor ( Project project : projectsToAdd ) $F207 ( newProjectList , project ) try { \n\t\tif ( PropertyUtils . getProperty ( task , fieldName ) != null ) { \n\t\t\tIterable < Project > projects = ( Iterable < Project > ) PropertyUtils . getProperty ( task , fieldName ) ; \n\t\t\tfor ( Project project : projects ) $F207 ( newProjectList , project ) } \n\t\t} \n\t$F12237 ( e ) try { \n\t\tPropertyUtils . setProperty ( task , fieldName , newProjectList ) ; \n\t\t} \n\t$F12237 ( e ) taskRepository . save ( task ) ; \n\t} \n"}, {"code": "protected void doFloodBDDP ( long pinSwitch , OFPacketIn pi , FloodlightContext cntx ) { \n\tTopologyInstance ti = getCurrentInstance ( _BOOL ) ; \n\t$F60758 switches = ti . getSwitchesInOpenflowDomain ( pinSwitch ) ; \n\tif ( switches == null ) { \n\t\tswitches = new $F18150 $F72 ; \n\t\tswitches . add ( pinSwitch ) ; \n\t\t} \n\tfor ( long sid : switches ) { \n\t\t$F2579 ( sw , floodlightProvider , sid ) $F45557 ( sw ) Collection < Short > enabledPorts = sw . getEnabledPortNumbers ( ) ; \n\t\t$F45557 ( enabledPorts ) Set < Short > ports = new HashSet < Short > $F72 ; \n\t\tports . addAll ( enabledPorts ) ; \n\t\tSet < Short > portsKnownToTopo = ti . getPortsWithLinks ( sid ) ; \n\t\tif ( portsKnownToTopo != null ) { \n\t\t\tfor ( short p : portsKnownToTopo ) { \n\t\t\t\tNodePortTuple npt = new NodePortTuple ( sid , p ) ; \n\t\t\t\tif ( ti . isBroadcastDomainPort ( npt ) == _BOOL ) $F106 ( ports , p ) } \n\t\t\t} \n\t\tSet < Short > portsToEliminate = getPortsToEliminateForBDDP ( sid ) ; \n\t\tif ( portsToEliminate != null ) $F111938 ( ports , portsToEliminate ) if ( pinSwitch == sid ) { \n\t\t\tports . remove ( pi . getInPort ( ) ) ; \n\t\t\t} \n\t\tdoMultiActionPacketOut ( pi . getPacketData ( ) , sw , ports , cntx ) ; \n\t\t} \n\t} \n"}, {"code": "public void sleepMillis ( final long millis ) { \n\ttry $F7595 ( Thread , millis ) catch ( final InterruptedException e ) $F98543 ( logger , e ) } \n"}, {"code": "private static void verifyWriteSetNotFound ( final BTree btree ) { \n\t$F973 ( log ) for ( $F6268 ( i ) ) { \n\t\tif $F105 ( btree , i ) $F1666 ( i ) } \n\t} \n"}, {"code": "private double calculateEntropy ( double ... masses ) { \n\tdouble res = NUM00 ; \n\tfor ( double d : masses ) { \n\t\tres -= ( d == NUM00 ) ? NUM00 : d * Math . log ( d ) ; \n\t\t} \n\treturn res / LOG2 ; \n\t} \n"}, {"code": "public static boolean isValidNmtoken ( String nmtoken ) { \n\t$F49299 ( nmtoken , _BOOL ) for ( $F1088 ( i , nmtoken ) ) { \n\t\t$F1280 ( ch , nmtoken , i ) $F38676 ( isName , ch , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public void mousePressed ( MouseEvent e ) { \n\tm_frameLimiter . setRepeats ( _BOOL ) ; \n\tif ( ( e . getModifiers ( ) & InputEvent . BUTTON1_MASK ) != NUM00 && ! e . isAltDown ( ) && m_mouseState == NUM00 && m_scaling == NUM00 ) { \n\t\tif ( ( ( e . getModifiers ( ) & InputEvent . CTRL_MASK ) != NUM00 ) && ( ( e . getModifiers ( ) & InputEvent . SHIFT_MASK ) == NUM00 ) ) { \n\t\t\tm_mouseState = NUM00 ; \n\t\t\t} \n\t\telse if ( ( ( e . getModifiers ( ) & InputEvent . SHIFT_MASK ) != NUM00 ) && ( ( e . getModifiers ( ) & InputEvent . CTRL_MASK ) == NUM00 ) ) { \n\t\t\tm_oldMousePos . width = e . getX ( ) ; \n\t\t\tm_oldMousePos . height = e . getY ( ) ; \n\t\t\tm_newMousePos . width = e . getX ( ) ; \n\t\t\tm_newMousePos . height = e . getY ( ) ; \n\t\t\tm_mouseState = NUM00 ; \n\t\t\tGraphics g = getGraphics ( ) ; \n\t\t\tif ( m_ZoomBoxColor == null ) { \n\t\t\t\t$F129587 ( g , Color ) } \n\t\t\telse $F158293 ( g , m_ZoomBoxColor ) if ( m_ZoomBoxXORColor == null ) { \n\t\t\t\tg . setXORMode ( Color . white ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tg . setXORMode ( m_ZoomBoxXORColor ) ; \n\t\t\t\t} \n\t\t\tg . drawRect ( m_oldMousePos . width , m_oldMousePos . height , m_newMousePos . width - m_oldMousePos . width , m_newMousePos . height - m_oldMousePos . height ) ; \n\t\t\t$F355 ( g ) } \n\t\telse { \n\t\t\tm_oldMousePos . width = e . getX ( ) ; \n\t\t\tm_oldMousePos . height = e . getY ( ) ; \n\t\t\tm_newMousePos . width = e . getX ( ) ; \n\t\t\tm_newMousePos . height = e . getY ( ) ; \n\t\t\tm_mouseState = NUM00 ; \n\t\t\t$F2346 ( m_frameLimiter ) } \n\t\t} \n\telse if ( ( e . getButton ( ) == MouseEvent . BUTTON1 ) && e . isAltDown ( ) && e . isShiftDown ( ) && ! e . isControlDown ( ) ) $F5795 ( saveComponent ) else if ( m_mouseState == NUM00 && m_scaling == NUM00 ) $F845 } \n"}, {"code": "private static double parseDoubleValue ( String parseString , String openTag , String closeTag , DataTypeValidationException exception ) throws DataTypeValidationException { \n\tString tagValue ; \n\ttagValue = parseStringValue ( parseString , openTag , closeTag , exception ) ; \n\tdouble doubleValue ; \n\ttry $F97478 ( doubleValue , Double , tagValue ) catch ( NumberFormatException e ) { \n\t\tthrow e ; \n\t\t} \n\treturn doubleValue ; \n\t} \n"}, {"code": "public void putString ( String s ) throws ArrayIndexOutOfBoundsException , UnsupportedEncodingException { \n\t$F151317 ( bytes , s ) int length = bytes . length ; \n\tint endAt = m_index + length + NUM00 ; \n\tif ( endAt > m_content . length ) throw new ArrayIndexOutOfBoundsException ( endAt + NUM00 + m_content . length ) ; \n\t$F6483 ( System , bytes , m_content , m_index , length ) m_index += length ; \n\tm_content [ m_index ++ ] = NUM00 ; \n\tdebugAppendString ( s ) ; \n\t} \n"}, {"code": "$F35762 ( newScrollValue , itemDimension , initialMotionValue , lastMotionValue , getPullToRefreshScrollDirection , HORIZONTAL , mInitialMotionX , mLastMotionX , VERTICAL , mInitialMotionY , mLastMotionY , mCurrentMode , PULL_FROM_END , Math , FRICTION , getFooterSize , PULL_FROM_START , getHeaderSize , setHeaderScroll , isRefreshing , scale , mFooterLayout , mHeaderLayout , mState , State , setState ) "}, {"code": "public void addRtcpListener ( RtcpEventListener listener ) $F6659 ( listeners , listener ) "}, {"code": "$F1 protected void ensureNumberOfColumns ( int numberOfColumns ) { \n\tif ( data . length >= numberOfColumns ) $F932 $F9662 ( newData , numberOfColumns ) $F7057 ( System , data , newData ) data = newData ; \n\t} \n"}, {"code": "private static BitMatrix extractPureBits ( BitMatrix image ) throws NotFoundException { \n\t$F125230 ( leftTopBlack , image ) $F125232 ( rightBottomBlack , image ) $F125233 ( leftTopBlack , rightBottomBlack , NotFoundException ) float moduleSize = moduleSize ( leftTopBlack , image ) ; \n\tint top = leftTopBlack [ NUM00 ] ; \n\tint bottom = rightBottomBlack [ NUM00 ] ; \n\tint left = leftTopBlack [ NUM00 ] ; \n\tint right = rightBottomBlack [ NUM00 ] ; \n\tif ( left >= right || top >= bottom ) $F63046 ( NotFoundException ) $F125236 ( bottom , top , right , left ) $F125240 ( matrixWidth , Math , right , left , moduleSize ) $F125240 ( matrixHeight , Math , bottom , top , moduleSize ) $F125241 ( matrixWidth , matrixHeight , NotFoundException ) $F125242 ( matrixHeight , matrixWidth , NotFoundException ) $F55078 ( nudge , moduleSize ) top += nudge ; \n\tleft += nudge ; \n\t$F125249 ( nudgedTooFarRight , left , matrixWidth , moduleSize , right ) $F125252 ( nudgedTooFarRight , nudge , NotFoundException , left ) $F125249 ( nudgedTooFarDown , top , matrixHeight , moduleSize , bottom ) $F125252 ( nudgedTooFarDown , nudge , NotFoundException , top ) $F125254 ( bits , matrixWidth , matrixHeight ) $F125266 ( y , matrixHeight , iOffset , top , moduleSize , x , matrixWidth , image , left , bits ) return bits ; \n\t} \n"}, {"code": "$F1 public void error ( String domain , String key , XMLParseException exception ) throws XNIException { \n\tif ( fErrorHandler != null ) { \n\t\tSAXParseException saxException = createSAXParseException ( exception ) ; \n\t\ttry $F16034 ( fErrorHandler , saxException ) catch ( SAXParseException e ) $F34850 ( createXMLParseException , e ) catch ( SAXException e ) $F34850 ( createXNIException , e ) } \n\t} \n"}, {"code": "public static boolean connect ( FileDescriptor fd , InetAddress inetAddress , int port ) throws SocketException { \n\ttry { \n\t\treturn IoBridge . connect ( fd , inetAddress , port , NUM00 ) ; \n\t\t} \n\tcatch ( SocketTimeoutException ex ) $F27253 ( ex ) } \n"}, {"code": "public boolean isWhitespace ( int nodeHandle ) { \n\tint type = getNodeType ( nodeHandle ) ; \n\tNode node = getNode ( nodeHandle ) ; \n\tif ( TEXT_NODE == type || CDATA_SECTION_NODE == type ) { \n\t\tFastStringBuffer buf = StringBufferPool . get ( ) ; \n\t\twhile ( node != null ) { \n\t\t\t$F77057 ( buf , node ) node = logicalNextDOMTextNode ( node ) ; \n\t\t\t} \n\t\tboolean b = buf . isWhitespace ( $F34024 ( buf ) ) ; \n\t\tStringBufferPool . free ( buf ) ; \n\t\treturn b ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public CStatusPanel ( final BackEndDebuggerProvider debuggerProvider ) { \n\t$F9898 ( super ) $F1832 ( Preconditions , debuggerProvider ) $F97485 ( m_label , Color ) add ( m_label ) ; \n\tm_synchronizer = new CStatusLabelSynchronizer ( m_label , debuggerProvider ) ; \n\t} \n"}, {"code": "$F1 public boolean open ( String access ) { \n\tif $F3057 ( access ) { \n\t\ttry { \n\t\t\tiStream = new FileImageInputStream $F15780 ( filePath ) ; \n\t\t\tparser = new LabelParser $F72 ; \n\t\t\tmetadata = parser . parseHeader ( iStream ) ; \n\t\t\t$F59 ( iStream ) iStream = null ; \n\t\t\t} \n\t\tcatch ( IOException e ) { \n\t\t\ttry $F881 ( iStream ) catch ( Exception x ) $F845 return ( _BOOL ) ; \n\t\t\t} \n\t\t} \n\treturn ( super . open ( access ) ) ; \n\t} \n"}, {"code": "void deregisterSpring ( Spring spring ) { \n\t$F826 ( spring ) mActiveSprings . remove ( spring ) ; \n\t$F10194 ( mSpringRegistry , spring ) } \n"}, {"code": "$F5466 public String fileName $F72 { \n\treturn JavaLogger . fileName ( delegate ) ; \n\t} \n"}, {"code": "public static BNode parseBNode ( String nTriplesBNode , ValueFactory valueFactory ) throws IllegalArgumentException { \n\tif $F3106 ( nTriplesBNode ) { \n\t\treturn valueFactory . createBNode ( nTriplesBNode . substring ( NUM00 ) ) ; \n\t\t} \n\telse $F18931 ( nTriplesBNode ) } \n"}, {"code": "public void resetPSRs $F72 $F6051 ( pilotRolls ) "}, {"code": "public static void sort $F97 ( array ) $F57765 ( DualPivotQuicksort , array ) "}, {"code": "public void closePopup $F72 { \n\tif ( openedSubPopup != null ) { \n\t\topenedSubPopup . closePopup ( ) ; \n\t\t} \n\tremoveFromParent ( ) ; \n\t} \n"}, {"code": "public void freeObject ( int id ) { \n\tif ( cacheId == id ) { \n\t\tcacheId = - NUM00 ; \n\t\tcache = null ; \n\t\t} \n\tmap . remove ( id ) ; \n\t} \n"}, {"code": "private void stretchViewVertically ( View view , int crossSize ) { \n\t$F310049 ( lp , view ) int newHeight = crossSize - lp . topMargin - lp . bottomMargin ; \n\t$F89002 ( newHeight , Math ) view . measure ( MeasureSpec . makeMeasureSpec ( view . getMeasuredWidth ( ) , MeasureSpec . EXACTLY ) , $F19050 ( MeasureSpec , newHeight ) ) ; \n\t} \n"}, {"code": "public static InetAddress hexToInet6Address ( String addrHexString ) throws IllegalArgumentException { \n\ttry { \n\t\treturn numericToInetAddress ( String . format ( NUM00 , $F606 ( addrHexString ) , $F606 ( addrHexString ) , $F606 ( addrHexString ) , $F606 ( addrHexString ) , $F606 ( addrHexString ) , $F606 ( addrHexString ) , $F606 ( addrHexString ) , $F606 ( addrHexString ) ) ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tLog . e ( NUM00 , NUM00 + addrHexString + NUM00 + e ) ; \n\t\t$F29415 ( e ) } \n\t} \n"}, {"code": "public void trackFailure $F72 { \n\tretryTime = Utils . currentTimeMillis ( ) + ( long ) backoff ; \n\tbackoff = Math . min ( backoff * params . multiplier , params . maximum ) ; \n\t} \n"}, {"code": "public double readDouble $F72 throws IOException { \n\treturn primitiveTypes . readDouble ( ) ; \n\t} \n"}, {"code": "private boolean isAtMaximum ( Adjustable bar ) { \n\treturn ( bar . getValue ( ) + bar . getVisibleAmount ( ) >= bar . getMaximum ( ) ) ; \n\t} \n"}, {"code": "public boolean matchesCS ( String seq ) { \n\treturn queue . startsWith ( seq , pos ) ; \n\t} \n"}, {"code": "protected void parseAndAddMapTileSet ( URL tileSetProperties ) throws IOException , MalformedURLException { \n\t$F2697 ( descProps ) Logger logger = getLogger ( ) ; \n\t$F973 ( logger ) $F35900 ( descURLStream , tileSetProperties ) descProps . load ( descURLStream ) ; \n\tlogger . info ( $F148552 ( tileSetProperties , descProps ) ) ; \n\tMapTileSet mts = createMapTileSetFromProperties ( descProps ) ; \n\tif ( mts != null && mts . allGood ( ) ) { \n\t\t$F20605 ( mtsName , mts ) $F20063 ( mapTileSets , mts ) $F9472 ( logger , mtsName ) } \n\t$F59 ( descURLStream ) } \n"}, {"code": "protected Date compute ( double value ) { \n\tif $F35707 ( Double , value ) $F1337 long dateLong = ( long ) value ; \n\t$F25205 ( date , dateLong ) $F4377 ( cal , Calendar ) cal . setTime ( date ) ; \n\t$F11894 ( cal ) } \n"}, {"code": "public void enablePan ( BluetoothAdapter adapter ) { \n\tif ( mPan == null ) mPan = ( BluetoothPan ) connectProxy ( adapter , BluetoothProfile . PAN ) ; \n\tassertNotNull ( mPan ) ; \n\t$F657 ( start , System ) mPan . setBluetoothTethering ( _BOOL ) ; \n\t$F657 ( stop , System ) assertTrue ( mPan . isTetheringOn ( ) ) ; \n\twriteOutput ( String . format ( NUM00 , ( stop - start ) ) ) ; \n\t} \n"}, {"code": "private int distBetweenPoints ( int x1 , int z1 , int x2 , int z2 , boolean bAllowDiags ) { \n\t$F11871 ( w , Math , x2 , x1 ) $F11871 ( h , Math , z2 , z1 ) if ( bAllowDiags ) { \n\t\tif ( w < h ) w = NUM00 ; \n\t\telse h = NUM00 ; \n\t\t} \n\treturn w + h + NUM00 ; \n\t} \n"}, {"code": "public URL ( String protocol , String host , int port , String file , URLStreamHandler handler ) throws MalformedURLException { \n\tif ( port < - NUM00 ) $F285896 ( port ) $F896 ( protocol ) if ( $F82309 ( host ) && $F4434 ( host ) ) $F253145 ( host ) this . protocol = protocol ; \n\tthis . host = host ; \n\tthis . port = port ; \n\tfile = UrlUtils . authoritySafePath ( host , file ) ; \n\t$F1384 ( hash , file ) if ( hash != - NUM00 ) { \n\t\tthis . file = file . substring ( NUM00 , hash ) ; \n\t\tthis . ref = file . substring ( hash + NUM00 ) ; \n\t\t} \n\telse $F6988 ( this , file ) fixURL ( _BOOL ) ; \n\tif ( handler == null ) { \n\t\tsetupStreamHandler ( ) ; \n\t\tif ( streamHandler == null ) $F285896 ( protocol ) } \n\telse { \n\t\tstreamHandler = handler ; \n\t\t} \n\t} \n"}, {"code": "private $F28319 createVolumesMethod ( URI systemURI , URI poolURI , $F28584 volumeURIs , VirtualPoolCapabilityValuesWrapper capabilities ) { \n\treturn new $F28319 ( NUM00 , systemURI , poolURI , volumeURIs , capabilities ) ; \n\t} \n"}, {"code": "public FileCommandInfo ( int fd , String command , int result , String parameters ) { \n\tthis ( _BOOL , fd , command , result , parameters ) ; \n\t} \n"}, {"code": "public void init ( GuiManualHerblore manual ) { \n\tfor ( ManualWidgetBase widget : widgets ) widget . init ( manual ) ; \n\t} \n"}, {"code": "$F65857 ( connection , oldFactory , sc , SSLContext , trustAllCerts , newFactory , Log , LOG_TAG , e ) "}, {"code": "public final double sampleMax $F72 { \n\treturn _activeCountMax . getAndSet ( _activeCount . get ( ) ) ; \n\t} \n"}, {"code": "@ Get public Representation userCodeForm $F72 throws OAuth2RestletException , InvalidGrantException , NotFoundException , ServerException { \n\tfinal OAuth2Request request = requestFactory . create ( getRequest ( ) ) ; \n\tif ( request . getParameter ( OAuth2Constants . DeviceCode . USER_CODE ) != null ) $F15127 ( verify ) else $F25228 ( getTemplateRepresentation , FORM , request ) } \n"}, {"code": "public void testMissionNameConstruction $F72 { \n\tString xml = NUM00 ; \n\txml += createStartMissionXml ( NUM00 , NUM00 ) ; \n\txml += createEndMissionXml ( ) ; \n\t$F217487 ( missionInputStream , xml ) String missionName = null ; \n\ttry { \n\t\tmissionName = MissionParser . getMissionName ( missionInputStream ) ; \n\t\t} \n\tcatch ( MissionParseException e ) $F302 ( e ) Assert . assertEquals ( NUM00 , missionName ) ; \n\t} \n"}, {"code": "$F1 public boolean equals ( Object other ) { \n\t$F3627 ( other , this , _BOOL ) if ( other instanceof ZoneOffsetTransition ) { \n\t\tZoneOffsetTransition d = ( ZoneOffsetTransition ) other ; \n\t\treturn $F142656 ( transition , d , offsetBefore ) && $F12737 ( offsetAfter , d ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void release $F72 { \n\t$F33833 ( super ) init ( ) ; \n\t} \n"}, {"code": "public double unsafeSabrVolatility ( final double strike , final double forward , final double expiryTime , final double alpha , final double beta , final double nu , final double rho ) { \n\tfinal double oneMinusBeta = NUM00 - beta ; \n\tfinal double A = Math . pow ( forward * strike , oneMinusBeta ) ; \n\tfinal double sqrtA = Math . sqrt ( A ) ; \n\tdouble logM ; \n\tif ( ! isClose ( forward , strike ) ) logM = Math . log ( forward / strike ) ; \n\telse { \n\t\tfinal double epsilon = ( forward - strike ) / strike ; \n\t\tlogM = epsilon - NUM00 * epsilon * epsilon ; \n\t\t} \n\tfinal double z = ( nu / alpha ) * sqrtA * logM ; \n\tfinal double B = NUM00 - NUM00 * rho * z + z * z ; \n\tfinal double C = oneMinusBeta * oneMinusBeta * logM * logM ; \n\tfinal double tmp = ( Math . sqrt ( B ) + z - rho ) / ( NUM00 - rho ) ; \n\tfinal double xx = Math . log ( tmp ) ; \n\tfinal double D = sqrtA * ( NUM00 + C / NUM00 + C * C / NUM00 ) ; \n\tfinal double d = NUM00 + expiryTime * ( oneMinusBeta * oneMinusBeta * alpha * alpha / ( NUM00 * A ) + NUM00 * rho * beta * nu * alpha / sqrtA + ( NUM00 - NUM00 * rho * rho ) * ( nu * nu / NUM00 ) ) ; \n\tdouble multiplier ; \n\tfinal double m = NUM00 ; \n\tif ( Math . abs ( z * z ) > Constants . QL_EPSILON * m ) multiplier = z / xx ; \n\telse { \n\t\tfinal double talpha = ( NUM00 - rho * rho ) / ( NUM00 - rho ) ; \n\t\tfinal double tbeta = alpha - NUM00 ; \n\t\tfinal double tgamma = rho / ( NUM00 - rho ) ; \n\t\tmultiplier = NUM00 - beta * z + ( tgamma - talpha + tbeta * tbeta * NUM00 ) * z * z ; \n\t\t} \n\treturn ( alpha / D ) * multiplier * d ; \n\t} \n"}, {"code": "public void close $F72 { \n\twhile $F5973 ( mReceivers ) { \n\t\tmContext . unregisterReceiver ( mReceivers . remove ( NUM00 ) ) ; \n\t\t} \n\tif ( mOutputWriter != null ) { \n\t\ttry $F881 ( mOutputWriter ) $F122999 ( Log , mTag , e ) } \n\t} \n"}, {"code": "private void resolveFiles ( $F3803 classpaths , $F2540 ( files ) , $F806 paths , String prefix ) { \n\tfor ( String path : paths ) { \n\t\t$F150661 ( relativePath , fileHandler , path ) if ( prefix != null ) { \n\t\t\trelativePath = fileHandler . append ( prefix , relativePath ) ; \n\t\t\t} \n\t\t$F73441 ( classpaths , relativePath ) if $F251710 ( fileHandler , path ) { \n\t\t\t$F806 children = fileHandler . getChildren ( path ) ; \n\t\t\tif $F180527 ( children ) { \n\t\t\t\tresolveFiles ( null , files , children , relativePath ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse $F1717 ( files , relativePath , path ) } \n\t} \n"}, {"code": "public void testGetInstance $F72 throws Exception { \n\ttry { \n\t\tExemptionMechanism . getInstance ( $F45216 , NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\tcatch ( NoSuchProviderException pe ) $F845 try { \n\t\tExemptionMechanism . getInstance ( NUM00 , $F45216 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F45786 } \n"}, {"code": "public synchronized void reloadConfiguration $F72 { \n\tproperties = null ; \n\t$F725 ( finalParameters ) } \n"}, {"code": "protected void removeMessageProcessor ( MessageProcessor oldMessageProcessor ) { \n\tsynchronized ( messageProcessors ) { \n\t\tif $F16914 ( messageProcessors , oldMessageProcessor ) $F5196 ( oldMessageProcessor ) } \n\t} \n"}, {"code": "X509IssuerSerial ( X509Certificate cert ) { \n\tthis ( cert . getIssuerX500Principal ( ) , cert . getSerialNumber ( ) ) ; \n\t} \n"}, {"code": "private void addToSet ( ObjectXmlPersist persist , IFile file , String setName ) throws IOException , CoreException { \n\tCollection < GraphEdgeMatcherDescriptor > updateSet = loadEdgeMatchers ( persist , file ) ; \n\tpersistUpdatedBundle ( persist , file , updateSet , setName ) ; \n\t} \n"}, {"code": "public void putBytes $F97 ( bytes ) { \n\tensureCapacity ( bytes . length ) ; \n\tSystem . arraycopy ( bytes , NUM00 , this . byteBuffer , this . position , bytes . length ) ; \n\tthis . position += bytes . length ; \n\t} \n"}, {"code": "public static String arrayToDelimitedString ( $F131 arr , String delim ) { \n\t$F4158 ( arr ) $F280 ( sb ) for ( $F1139 ( i , arr ) ) { \n\t\t$F234280 ( i , sb , delim ) $F6939 ( sb , arr , i ) } \n\t$F92 ( sb ) } \n"}, {"code": "public void clearAll $F72 { \n\tfinal List < EncodedImage > old ; \n\tsynchronized ( this ) { \n\t\t$F159472 ( old , mMap ) ; \n\t\t$F725 ( mMap ) } \n\tfor ( $F2277 ( i , old ) ) { \n\t\tEncodedImage encodedImage = old . get ( i ) ; \n\t\t$F2727 ( encodedImage ) } \n\t} \n"}, {"code": "public static CompiereColor parse ( String attributes ) { \n\tCompiereColor cc = new CompiereColor $F72 ; \n\ttry { \n\t\tif $F22 ( attributes ) cc . parseAttributres ( attributes ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tlog . severe ( $F28567 ( attributes , e ) ) ; \n\t\t} \n\treturn cc ; \n\t} \n"}, {"code": "public synchronized static LuaState newLuaState $F72 { \n\tint i = getNextStateIndex ( ) ; \n\tLuaState L = new LuaState ( i ) ; \n\tstates . add ( i , L ) ; \n\treturn L ; \n\t} \n"}, {"code": "static long checkPreambleSize ( Memory mem ) { \n\tfinal long cap = mem . getCapacity ( ) ; \n\tif ( cap < NUM00 ) $F127556 ( throwNotBigEnough , cap ) final long pre0 = mem . getLong ( NUM00 ) ; \n\tfinal int $F178448 ( preLongs , pre0 ) ; \n\tfinal int required = Math . max ( preLongs < < NUM00 , NUM00 ) ; \n\tif ( cap < required ) { \n\t\tthrowNotBigEnough ( cap , required ) ; \n\t\t} \n\treturn pre0 ; \n\t} \n"}, {"code": "public int read $F72 throws IOException { \n\t$F113304 ( inputStream , reopen ) count ( NUM00 ) ; \n\t$F51652 ( inputStream ) } \n"}, {"code": "$F5803 ( drawable , getDrawable , matrix , prevMatrix , drawableWidth , drawableHeight , scaleX , viewWidth , scaleY , viewHeight , mScaleType , CENTER , CENTER_CROP , Math , CENTER_INSIDE , FIT_CENTER , FIT_XY , redundantXSpace , redundantYSpace , matchViewWidth , matchViewHeight , isZoomed , imageRenderedAtLeastOnce , normalizedScale , prevMatchViewWidth , prevMatchViewHeight , savePreviousImageValues , m , Matrix , transX , transY , prevActualWidth , actualWidth , getImageWidth , translateMatrixAfterRotate , prevViewWidth , prevActualHeight , actualHeight , getImageHeight , prevViewHeight , fixTrans , setImageMatrix ) "}, {"code": "public void limit $F12359 ( x1 , y1 , x2 , y2 ) { \n\t$F68034 ( clip , Math , x1 ) $F68034 ( clip , Math , y1 ) $F68037 ( clip , Math , x2 ) $F68037 ( clip , Math , y2 ) } \n"}, {"code": "public void shutdown $F72 { \n\t$F42358 ( begin , System ) $F973 ( log ) $F115765 ( log , getTaskCount , scheduledPool ) $F115765 ( log , getTaskCount , instantPool ) $F115765 ( log , getTaskCount , longRunningPool ) log . info ( NUM00 + ( workStealingPool . getQueuedTaskCount ( ) + workStealingPool . getQueuedSubmissionCount ( ) ) + NUM00 ) ; \n\t$F733 ( scheduledPool ) $F733 ( instantPool ) $F733 ( longRunningPool ) $F733 ( workStealingPool ) boolean success = _BOOL ; \n\ttry { \n\t\tsuccess |= awaitTermination ( NUM00 ) ; \n\t\tscheduledPool . setExecuteExistingDelayedTasksAfterShutdownPolicy ( _BOOL ) ; \n\t\tscheduledPool . setContinueExistingPeriodicTasksAfterShutdownPolicy ( _BOOL ) ; \n\t\tsuccess |= awaitTermination ( NUM00 ) ; \n\t\t} \n\t$F3101 ( e ) log . info ( NUM00 + success + NUM00 + $F32707 ( System , begin ) + NUM00 ) ; \n\t$F115765 ( log , getTaskCount , scheduledPool ) $F115765 ( log , getTaskCount , instantPool ) $F115765 ( log , getTaskCount , longRunningPool ) log . info ( NUM00 + ( workStealingPool . getQueuedTaskCount ( ) + workStealingPool . getQueuedSubmissionCount ( ) ) + NUM00 ) ; \n\t$F5832 ( workStealingPool ) } \n"}, {"code": "public static Collection < InetAddress > toInetAddresses ( $F6877 addrs , $F6877 hostNames ) throws IgniteCheckedException { \n\tSet < InetAddress > res = new $F9623 $F716 ( addrs ) ; \n\t$F13712 ( hostNamesIt , hostNames ) for ( String addr : addrs ) { \n\t\tString hostName = $F81711 ( hostNamesIt ) ; \n\t\tInetAddress inetAddr = null ; \n\t\tif $F20899 ( F , hostName ) { \n\t\t\ttry { \n\t\t\t\tinetAddr = InetAddress . getByName ( hostName ) ; \n\t\t\t\t} \n\t\t\tcatch ( UnknownHostException ignored ) $F845 } \n\t\tif ( inetAddr == null || inetAddr . isLoopbackAddress ( ) ) { \n\t\t\ttry { \n\t\t\t\tinetAddr = InetAddress . getByName ( addr ) ; \n\t\t\t\t} \n\t\t\tcatch ( UnknownHostException ignored ) $F845 } \n\t\t$F67023 ( inetAddr , res ) } \n\tif $F2979 ( res ) throw new IgniteCheckedException $F6486 ( addrs , hostNames ) ; \n\treturn res ; \n\t} \n"}, {"code": "public static String removeNewLineChars ( String s ) { \n\tString retString = null ; \n\tif ( ( s != null ) && $F4012 ( s ) && $F12703 ( s ) ) { \n\t\t$F7782 ( chars , s ) int len = chars . length ; \n\t\t$F1350 ( sb , len ) for ( $F119 ( i , len ) ) { \n\t\t\tchar c = chars [ i ] ; \n\t\t\tif ( c != NUM00 ) $F288 ( sb , c ) } \n\t\t$F6947 ( retString , sb ) } \n\telse { \n\t\tretString = s ; \n\t\t} \n\treturn retString ; \n\t} \n"}, {"code": "void calculateCounters $F72 { \n\t$F15308 ( isDBAvailable ) $F657 ( time , System ) int total = NUM00 ; \n\t$F8934 ( write ) try { \n\t\tcountResetFeedsAndCategories ( ) ; \n\t\ttotal += countFeedsWithUnread ( ) ; \n\t\tcountCategoriesWithUnread ( ) ; \n\t\tcountSpecialCategories ( total ) ; \n\t\t} \n\t$F796 ( write ) Log . i ( TAG , String . format ( NUM00 , total , $F32707 ( System , time ) ) ) ; \n\t} \n"}, {"code": "protected void appendHTML ( final StringBuilder sbuf , final char ch ) { \n\tswitch ( ch ) { \n\t\t$F2999 ( sbuf ) $F2999 ( sbuf ) $F2999 ( sbuf ) $F3000 ( sbuf , ch ) } \n\t} \n"}, {"code": "private Collection $F134071 migrateColumns ( SQLTable currentTable ) { \n\tList $F134071 $F204 ( vars ) ; \n\tString tableType = currentTable . getEntityType ( ) ; \n\tMap < String , ResourceType . DataType > columns = currentTable . getColumns ( ) ; \n\t$F2539 foreignColumns = currentTable . getForeignKeyColumns ( ) ; \n\tfor ( $F3465 ( column , columns ) ) { \n\t\tResourceType . DataType columnType = columns . get ( column ) ; \n\t\tif $F1710 ( foreignColumns , column ) { \n\t\t\tvars . addAll ( migrateAsRelation ( tableType , column , foreignColumns . get ( column ) ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F133393 ( vars , migrateAsResource , tableType , columnType , column ) } \n\t\t} \n\treturn vars ; \n\t} \n"}, {"code": "public int retrieveRowCount ( String tableName ) throws SQLException { \n\tResultSet rs = null ; \n\tint rowCount = - NUM00 ; \n\ttry { \n\t\trs = statement . executeQuery ( NUM00 + tableName ) ; \n\t\t$F24630 ( rs ) $F55 ( rowCount , rs ) } \n\t$F14364 ( rs ) return rowCount ; \n\t} \n"}, {"code": "public JarModifier ( File jarFile ) throws JarException , IOException { \n\tthis . jarFile = jarFile ; \n\tJarFile jar = new JarFile ( jarFile ) ; \n\tEnumeration < ? extends JarEntry > enumerator = jar . entries ( ) ; \n\twhile $F1444 ( enumerator ) { \n\t\tJarEntry currentEntry = ( JarEntry ) enumerator . nextElement ( ) ; \n\t\tJarEntry resetEntry = new JarEntry $F27949 ( currentEntry ) ; \n\t\t$F22760 ( jarEntries , currentEntry , resetEntry ) } \n\tString manifestPath = META_INF + SEPERATOR + NUM00 ; \n\tJarEntry jarEntry = jar . getJarEntry ( manifestPath ) ; \n\tif ( jarEntry != null ) { \n\t\tEnumeration $F145052 entries = jar . entries ( ) ; \n\t\twhile $F1444 ( entries ) { \n\t\t\tjarEntry = ( JarEntry ) entries . nextElement ( ) ; \n\t\t\tif ( manifestPath . equalsIgnoreCase ( jarEntry . getName ( ) ) ) $F5153 else { \n\t\t\t\tjarEntry = null ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tManifest manifest = new Manifest $F72 ; \n\tif ( jarEntry != null ) { \n\t\tmanifest . read ( jar . getInputStream ( jarEntry ) ) ; \n\t\t} \n\tthis . manifest = manifest ; \n\t$F59 ( jar ) } \n"}, {"code": "$F1 public int addAttribute ( Attribute a ) { \n\tif ( a == null ) $F825 else { \n\t\tint index = - NUM00 ; \n\t\tAttribute original = a ; \n\t\ta = ( Attribute ) a . clone ( ) ; \n\t\tif $F3817 ( unusedColumnList ) { \n\t\t\tsynchronized ( unusedColumnList ) { \n\t\t\t\tif $F3817 ( unusedColumnList ) { \n\t\t\t\t\t$F21431 ( index , unusedColumnList ) attributes . set ( index , a ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\t$F8935 ( index , attributes ) attributes . add ( a ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\t$F8935 ( index , attributes ) attributes . add ( a ) ; \n\t\t\t} \n\t\ta . setTableIndex ( index ) ; \n\t\toriginal . setTableIndex ( index ) ; \n\t\treturn index ; \n\t\t} \n\t} \n"}, {"code": "default B with ( String key , int value ) $F65298 ( with , key , Integer , value ) "}, {"code": "public static $F149197 void sortTopN ( X [ ] array , int offset , int limit , Comparator < ? super X > comp ) { \n\tpartitionTopN ( array , offset , limit , comp ) ; \n\tArrays . sort ( array , offset , ( int ) Math . min ( ( long ) offset + limit , array . length ) , comp ) ; \n\t} \n"}, {"code": "protected boolean isServerTransaction $F72 { \n\treturn this instanceof SIPServerTransaction ; \n\t} \n"}, {"code": "Object addMarkedOccurrenceHighlight ( int start , int end , MarkOccurrencesHighlightPainter p ) throws BadLocationException { \n\t$F47177 ( doc , textArea ) TextUI mapper = textArea . getUI ( ) ; \n\tHighlightInfo i = new LayeredHighlightInfo $F72 ; \n\ti . painter = p ; \n\ti . p0 = doc . createPosition ( start ) ; \n\ti . p1 = doc . createPosition ( end - NUM00 ) ; \n\tmarkedOccurrences . add ( i ) ; \n\tmapper . damageRange ( textArea , start , end ) ; \n\treturn i ; \n\t} \n"}, {"code": "$F4562 ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , fuzzyThreshold , scaleFactor , isTouchEvent , deltaValue , currentScrollValue , scrollValue , HORIZONTAL , VERTICAL , mode , newScrollValue , PullToRefreshBase , Log , LOG_TAG , State , Math ) "}, {"code": "public static void readFully ( InputStream in , byte $F46499 , int off , int len ) throws IOException { \n\tint toRead = len ; \n\twhile ( toRead > NUM00 ) { \n\t\t$F24020 ( ret , in , buf , off , toRead ) $F28956 ( ret ) toRead -= ret ; \n\t\toff += ret ; \n\t\t} \n\t} \n"}, {"code": "public static void assumeTrue ( BooleanSupplier assumptionSupplier , Supplier $F4 messageSupplier ) throws TestAbortedException { \n\tif ( ! assumptionSupplier . getAsBoolean ( ) ) { \n\t\t$F80909 ( throwTestAbortedException , messageSupplier ) } \n\t} \n"}, {"code": "public static String addToCartBulk ( HttpServletRequest request , HttpServletResponse response ) { \n\t$F10362 ( categoryId , request ) ShoppingCart cart = getCartObject ( request ) ; \n\t$F15914 ( delegator , request ) $F15918 ( dispatcher , request ) ShoppingCartHelper cartHelper = new ShoppingCartHelper ( delegator , dispatcher , cart ) ; \n\tString controlDirective ; \n\t$F15921 ( result ) $F529 paramMap = UtilHttp . getParameterMap ( request ) ; \n\tString catalogId = CatalogWorker . getCurrentCatalogId ( request ) ; \n\tresult = cartHelper . addToCartBulk ( catalogId , categoryId , paramMap ) ; \n\tcontrolDirective = processResult ( result , request ) ; \n\tif $F1238 ( controlDirective , ERROR ) $F2455 else $F2455 } \n"}, {"code": "public void addFrequentSet ( FrequentItemSet itemSet ) { \n\tfrequentSets . add ( itemSet ) ; \n\tmaximumSetSize = Math . max ( itemSet . getNumberOfItems ( ) , maximumSetSize ) ; \n\t} \n"}, {"code": "private int skipFromPeekBuffer ( int length ) { \n\t$F17565 ( bytesSkipped , Math , peekBufferLength , length ) updatePeekBuffer ( bytesSkipped ) ; \n\treturn bytesSkipped ; \n\t} \n"}, {"code": "protected $F28319 createRemoveVolumesFromCGMethod ( URI vplexURI , URI cgURI , $F28584 vplexVolumeURIs ) $F166144 ( REMOVE_VOLUMES_FROM_CG_STEP , vplexURI , cgURI , vplexVolumeURIs ) "}, {"code": "private static int showUrlsPrompt ( Component parent , $F3803 urls ) { \n\tString text = NUM00 ; \n\tfor ( String url : urls ) { \n\t\turl = splitUrl ( url ) ; \n\t\ttext += url + NUM00 ; \n\t\t} \n\tString okOption = NUM00 ; \n\tif $F3817 ( urls ) { \n\t\tokOption = $F10533 ( urls ) ; \n\t\t} \n\t$F806 options = { \n\t\tokOption , NUM00 } \n\t; \n\tif $F10471 ( urls ) { \n\t\toptions = new String [ ] { \n\t\t\tokOption , NUM00 , NUM00 } \n\t\t; \n\t\t} \n\tint chosenOption = JOptionPane . showOptionDialog ( parent , text , NUM00 , JOptionPane . OK_CANCEL_OPTION , JOptionPane . QUESTION_MESSAGE , null , options , NUM00 ) ; \n\treturn chosenOption ; \n\t} \n"}, {"code": "int convertMouse ( MouseEvent event ) { \n\tint result ; \n\tif ( panelFont == null ) return ( NO_MOUSE ) ; \n\tint colOff = event . getX ( ) - GRID_WIDTH - PANEL_MARGIN ; \n\tint colNum = colOff / horizStep ; \n\tint colRem = colOff % horizStep ; \n\tif ( ( colNum >= panelColumns ) || ( colRem < TEXT_MARGIN ) || ( colRem > ( horizStep - GRID_WIDTH - TEXT_MARGIN ) ) ) $F3139 ( NO_MOUSE ) int rowOff = event . getY ( ) - GRID_WIDTH - PANEL_MARGIN ; \n\tint rowNum = rowOff / vertiStep ; \n\tint rowRem = rowOff % vertiStep ; \n\tif ( ( rowRem < TEXT_MARGIN ) || ( rowRem > ( vertiStep - GRID_WIDTH - TEXT_MARGIN ) ) ) $F3139 ( NO_MOUSE ) result = cornerIndex + ( rowNum * panelColumns ) + colNum ; \n\tif ( result >= cellCount ) return ( NO_MOUSE ) ; \n\treturn ( result ) ; \n\t} \n"}, {"code": "private static String computeRegexString $F1947 ( originalString , oldName , newName ) { \n\t$F80469 ( builder , originalString ) String oldNameOrNewNameRegEx = String . format ( NUM00 , Pattern . quote ( oldName ) , Pattern . quote ( newName ) ) ; \n\t$F12747 ( i , originalString , oldName ) if ( i >= NUM00 ) { \n\t\tint prevI = NUM00 ; \n\t\twhile ( i >= NUM00 ) { \n\t\t\tbuilder . append ( Pattern . quote ( originalString . substring ( prevI , i ) ) ) ; \n\t\t\tbuilder . append ( oldNameOrNewNameRegEx ) ; \n\t\t\tprevI = i ; \n\t\t\ti = originalString . indexOf ( oldName , i + oldName . length ( ) ) ; \n\t\t\t} \n\t\tbuilder . append ( Pattern . quote ( originalString . substring ( prevI + oldName . length ( ) , originalString . length ( ) ) ) ) ; \n\t\t} \n\t$F92 ( builder ) } \n"}, {"code": "public synchronized String generateCallIdentifier ( String address ) { \n\tString date = Long . toString ( System . currentTimeMillis ( ) + callIDCounter ++ + rand . nextLong ( ) ) ; \n\tbyte cid [ ] = digester . digest ( date . getBytes ( ) ) ; \n\t$F21991 ( cidString , Utils , cid ) return cidString + NUM00 + address ; \n\t} \n"}, {"code": "int parseHour ( String source , char patternChar , int offset ) throws ParseException { \n\tint min = ( patternChar == HOUR_1_LETTER || patternChar == HOUR12_1_LETTER ) ? NUM00 : NUM00 ; \n\tint max = ( ( patternChar == HOUR_LETTER || patternChar == HOUR_1_LETTER ) ? NUM00 : NUM00 ) + min ; \n\treturn parseNumber ( source , offset , NUM00 , min , max ) - min ; \n\t} \n"}, {"code": "public void doHistory ( KeyEvent e ) { \n\tif $F13190 ( e , m_Input ) { \n\t\tswitch ( e . getKeyCode ( ) ) { \n\t\t\tcase KeyEvent . VK_UP : if ( m_HistoryPos > NUM00 ) { \n\t\t\t\tm_HistoryPos -- ; \n\t\t\t\tString command = m_CommandHistory . elementAt ( m_HistoryPos ) ; \n\t\t\t\tm_Input . setText ( command ) ; \n\t\t\t\t} \n\t\t\t$F597 case KeyEvent . VK_DOWN : if $F1765 ( m_HistoryPos , m_CommandHistory ) { \n\t\t\t\tm_HistoryPos ++ ; \n\t\t\t\tString command = NUM00 ; \n\t\t\t\tif $F1765 ( m_HistoryPos , m_CommandHistory ) { \n\t\t\t\t\tcommand = m_CommandHistory . elementAt ( m_HistoryPos ) ; \n\t\t\t\t\t} \n\t\t\t\tm_Input . setText ( command ) ; \n\t\t\t\t} \n\t\t\t$F597 $F2448 } \n\t\t} \n\t} \n"}, {"code": "public static $F262544 substitute ( Substitution substitution , $F262544 originalTypes ) { \n\t$F1275 ( originalTypes ) $F262544 substitutedTypes = originalTypes ; \n\tfor ( $F21059 ( i , length , originalTypes ) ) { \n\t\tReferenceBinding originalType = originalTypes [ i ] ; \n\t\tTypeBinding substitutedType = substitute ( substitution , originalType ) ; \n\t\tif ( ! ( substitutedType instanceof ReferenceBinding ) ) $F1337 if ( substitutedType != originalType ) { \n\t\t\tif ( substitutedTypes == originalTypes ) { \n\t\t\t\tSystem . arraycopy ( originalTypes , NUM00 , substitutedTypes = new ReferenceBinding [ length ] , NUM00 , i ) ; \n\t\t\t\t} \n\t\t\tsubstitutedTypes [ i ] = ( ReferenceBinding ) substitutedType ; \n\t\t\t} \n\t\telse if ( substitutedTypes != originalTypes ) { \n\t\t\tsubstitutedTypes [ i ] = originalType ; \n\t\t\t} \n\t\t} \n\treturn substitutedTypes ; \n\t} \n"}, {"code": "$F1 protected void onDraw ( Canvas canvas ) { \n\tsuper . onDraw ( canvas ) ; \n\t$F8249 ( mBitmapShader ) canvas . drawCircle ( mCenterX , mCenterY , mCoverRadius , mCoverPaint ) ; \n\tcanvas . drawCircle ( mCenterX , mCenterY , mCoverRadius , mCoverFrontPaint ) ; \n\tmDurationText = secondsToTime ( mDurationSecondsCurrent ) ; \n\t$F77589 ( mDurationPaint , mDurationText , mRectDuration ) canvas . drawText ( mDurationText , ( mCenterX - ( $F77595 ( mRectDuration ) ) ) , ( mCenterY + ( $F180726 ( mRectDuration ) ) ) , mDurationPaint ) ; \n\tif ( mBitmapUnselectedAction1 != null && mBitmapSelectedAction1 != null ) { \n\t\tcanvas . drawBitmap ( isAction1Selected ? mBitmapSelectedAction1 : mBitmapUnselectedAction1 , ( mCenterX - ( NUM00 * ( mCenterX / NUM00 ) ) ) , mCenterY + ( mCenterY / NUM00 ) - ( mCenterY / NUM00 ) , mActionPaint ) ; \n\t\t} \n\tif ( mBitmapUnselectedAction2 != null && mBitmapSelectedAction2 != null ) { \n\t\tcanvas . drawBitmap ( isAction2Selected ? mBitmapSelectedAction2 : mBitmapUnselectedAction2 , mCenterX - ( mCenterX / NUM00 ) , mCenterY + ( mCenterY / NUM00 ) - ( mCenterY / NUM00 ) , mActionPaint ) ; \n\t\t} \n\tif ( mBitmapUnselectedAction3 != null && mBitmapSelectedAction3 != null ) { \n\t\tcanvas . drawBitmap ( isAction3Selected ? mBitmapSelectedAction3 : mBitmapUnselectedAction3 , ( int ) ( mCenterX + ( NUM00 * ( mCenterX / NUM00 ) ) ) , mCenterY + ( mCenterY / NUM00 ) - ( mCenterY / NUM00 ) , mActionPaint ) ; \n\t\t} \n\tcanvas . drawArc ( mProgressRectF , NUM00 , NUM00 , _BOOL , mPaintEmptyProgress ) ; \n\tcanvas . drawArc ( mProgressRectF , NUM00 , calculatePastProgress ( ) , _BOOL , mPaintLoadedProgress ) ; \n\tcanvas . drawCircle ( ( float ) ( mCenterX + ( ( mCenterX - NUM00 ) * Math . cos ( Math . toRadians ( calculatePastProgress ( ) - NUM00 ) ) ) ) , ( float ) ( mCenterY + ( ( mCenterX - NUM00 ) * Math . sin ( Math . toRadians ( calculatePastProgress ( ) - NUM00 ) ) ) ) , mRadiusToggle , mPaintProgressToggle ) ; \n\t} \n"}, {"code": "private static Collection < TCPTransport > allKnownTransports $F72 { \n\tSet < TCPTransport > s ; \n\tsynchronized ( localEndpoints ) { \n\t\ts = new HashSet < TCPTransport > $F716 ( localEndpoints ) ; \n\t\tfor ( LinkedList < TCPEndpoint > epList : localEndpoints . values ( ) ) { \n\t\t\tTCPEndpoint ep = epList . getFirst ( ) ; \n\t\t\ts . add ( ep . transport ) ; \n\t\t\t} \n\t\t} \n\treturn s ; \n\t} \n"}, {"code": "public void requestSecondsUntilIdleLockout $F72 { \n\toperations . add ( PasswordPolicyStateOperationType . GET_SECONDS_UNTIL_IDLE_LOCKOUT ) ; \n\t} \n"}, {"code": "@ RequestMapping ( $F3144 , method = { \n\tRequestMethod . GET } \n) $F4586 private static $F3803 showHiveDatabases $F72 throws IOException { \n\tIHiveClient hiveClient = HiveClientFactory . getHiveClient ( ) ; \n\t$F36422 ( results ) try { \n\t\tresults = hiveClient . getHiveDbNames ( ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F301 ( e ) $F5614 ( e ) } \n\treturn results ; \n\t} \n"}, {"code": "public void testNegNegFirstShorter $F72 { \n\t$F50446 $F92469 int aSign = - NUM00 ; \n\tint bSign = - NUM00 ; \n\tbyte $F3018 = { \n\t\t- NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , NUM00 , - NUM00 , - NUM00 , NUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F37344 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F7841 ( assertEquals , result ) } \n"}, {"code": "private static double hackyAdjuster ( double f ) { \n\tdouble tmp = Math . sqrt ( NUM00 - f ) ; \n\treturn ( f <= NUM00 ) ? tmp : tmp + ( NUM00 * ( f - NUM00 ) ) ; \n\t} \n"}, {"code": "private static Object fromString ( String s ) throws $F6427 { \n\t$F96 data = Base64 . decode ( s , Base64 . DEFAULT ) ; \n\tObjectInputStream ois = new ObjectInputStream $F24702 ( data ) ; \n\t$F67404 ( o , ois ) $F59 ( ois ) return o ; \n\t} \n"}, {"code": "private boolean copyDocument ( SearchDocument newDocument , SearchDocument document , $F24190 ( removedProperties ) ) { \n\tboolean mutated = _BOOL ; \n\tfor ( String oldFieldName : document . getPropertyNames ( ) ) { \n\t\tnewDocument . addProperty ( oldFieldName ) ; \n\t\t$F3803 oldValues = document . getProperty ( oldFieldName ) ; \n\t\tif ( oldValues != null ) { \n\t\t\t$F2689 objectsRemoved = ( removedProperties != null ) ? removedProperties . get ( oldFieldName ) : null ; \n\t\t\tfor ( String oldValue : oldValues ) { \n\t\t\t\tif ( ( objectsRemoved != null ) && $F105 ( objectsRemoved , oldValue ) ) { \n\t\t\t\t\tmutated = _BOOL ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\taddProperty ( oldFieldName , oldValue , newDocument ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn mutated ; \n\t} \n"}, {"code": "public SVDMatrix ( Matrix Arg ) { \n\tthis ( Arg , _BOOL , _BOOL , _BOOL ) ; \n\t} \n"}, {"code": "public void unlockForClear ( InternalDistributedMember locker ) { \n\tsynchronized ( this . clearLockSync ) { \n\t\tInternalDistributedSystem instance = InternalDistributedSystem . getAnyInstance ( ) ; \n\t\tif ( instance != null && logger . isDebugEnabled ( ) ) { \n\t\t\tlogger . debug ( NUM00 , locker , System . identityHashCode ( this ) ) ; \n\t\t\t} \n\t\tif ( this . lockOwner != null && ! locker . equals ( this . lockOwner ) ) { \n\t\t\tif ( instance != null && logger . isDebugEnabled ( ) ) $F11589 ( logger , lockOwner ) $F665 } \n\t\tunlockVersionGeneration ( locker ) ; \n\t\t} \n\t} \n"}, {"code": "public UnicastRef $F72 $F845 "}, {"code": "private static int lastIndexOf ( Object o , $F1113 $F131 elements , int index ) { \n\tif ( o == null ) { \n\t\tfor ( $F141 ( i , index ) ) { \n\t\t\tif ( elements [ i ] == null ) { \n\t\t\t\treturn i ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tfor ( $F141 ( i , index ) ) { \n\t\t\tif $F145 ( o , elements , i ) { \n\t\t\t\treturn i ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F150 } \n"}, {"code": "public void write ( ByteBuffer buffer ) throws IOException { \n\t$F16709 ( buffer ) if ( mFileChannel . size ( ) + buffer . capacity ( ) < mMaxSize ) { \n\t\twhile $F5720 ( buffer ) $F4050 ( mFileChannel , buffer ) updateWaveFileSize ( ) ; \n\t\t} \n\telse { \n\t\tint remaining = ( int ) ( mMaxSize - mFileChannel . size ( ) ) ; \n\t\tremaining -= ( int ) ( remaining % mAudioFormat . getFrameSize ( ) ) ; \n\t\t$F152855 ( bytes , buffer ) ByteBuffer current = ByteBuffer . wrap ( Arrays . copyOf ( bytes , remaining ) ) ; \n\t\tByteBuffer next = ByteBuffer . wrap ( Arrays . copyOfRange ( bytes , remaining , bytes . length ) ) ; \n\t\twhile $F5720 ( current ) $F4050 ( mFileChannel , current ) updateWaveFileSize ( ) ; \n\t\trollover ( ) ; \n\t\twhile $F5720 ( next ) $F4050 ( mFileChannel , next ) updateWaveFileSize ( ) ; \n\t\t} \n\t} \n"}, {"code": "public static double dmod_d ( double lhs , double rhs ) { \n\treturn rhs != NUM00 ? lhs - rhs * Math . floor ( lhs / rhs ) : Double . NaN ; \n\t} \n"}, {"code": "public void testMaxLess $F72 { \n\t$F127614 $F79258 int aSign = NUM00 ; \n\tint bSign = NUM00 ; \n\t$F67522 $F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F127615 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F67528 ( assertTrue , result ) } \n"}, {"code": "private synchronized void block ( boolean tf ) { \n\tif ( tf ) { \n\t\ttry { \n\t\t\tif ( m_ioThread . isAlive ( ) && m_state != IDLE ) $F5795 ( wait ) } \n\t\t$F34690 } \n\telse $F5795 ( notifyAll ) } \n"}, {"code": "public void move ( MouseEvent e ) { \n\tPoint2D pnt = getProjectionPoint ( e ) ; \n\t$F166720 ( x , pnt ) $F166722 ( y , pnt ) if ( poly . getRenderType ( ) == OMGraphic . RENDERTYPE_OFFSET ) { \n\t\tgpm = new OffsetGrabPoint ( x , y ) ; \n\t\t$F725 ( gpm ) } \n\telse { \n\t\tgpm = gpo ; \n\t\t$F725 ( gpm ) gpm . set ( x , y ) ; \n\t\t} \n\taddPolyGrabPointsToOGP ( gpm ) ; \n\tmovingPoint = gpm ; \n\t} \n"}, {"code": "public FloatBuffer put $F11671 ( src , srcOffset , floatCount ) $F11682 ( Arrays , src , srcOffset , floatCount , remaining , i , put , this ) "}, {"code": "public final void dispatchCharactersEvents ( int nodeHandle , ContentHandler ch , boolean normalize ) throws SAXException { \n\tint identity = makeNodeIdentity ( nodeHandle ) ; \n\tif ( identity == DTM . NULL ) $F665 int type = _type2 ( identity ) ; \n\tif ( type == DTM . ELEMENT_NODE || type == DTM . DOCUMENT_NODE ) { \n\t\tint startNode = identity ; \n\t\tidentity = _firstch2 ( identity ) ; \n\t\tif ( DTM . NULL != identity ) { \n\t\t\tint offset = - NUM00 ; \n\t\t\tint length = NUM00 ; \n\t\t\tdo { \n\t\t\t\ttype = _exptype2 ( identity ) ; \n\t\t\t\tif $F117450 ( type , DTM ) { \n\t\t\t\t\tint dataIndex = m_dataOrQName . elementAt ( identity ) ; \n\t\t\t\t\tif ( dataIndex >= NUM00 ) { \n\t\t\t\t\t\tif ( - NUM00 == offset ) { \n\t\t\t\t\t\t\toffset = dataIndex > > > TEXT_LENGTH_BITS ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\tlength += dataIndex & TEXT_LENGTH_MAX ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tif ( - NUM00 == offset ) { \n\t\t\t\t\t\t\toffset = m_data . elementAt ( - dataIndex ) ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\tlength += m_data . elementAt ( - dataIndex + NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\tidentity ++ ; \n\t\t\t\t} \n\t\t\twhile ( _parent2 ( identity ) >= startNode ) ; \n\t\t\tif ( length > NUM00 ) { \n\t\t\t\tif ( normalize ) m_chars . sendNormalizedSAXcharacters ( ch , offset , length ) ; \n\t\t\t\telse m_chars . sendSAXcharacters ( ch , offset , length ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse if ( DTM . TEXT_NODE == type || DTM . CDATA_SECTION_NODE == type ) { \n\t\tint dataIndex = m_dataOrQName . elementAt ( identity ) ; \n\t\tif ( dataIndex >= NUM00 ) { \n\t\t\tif ( normalize ) m_chars . sendNormalizedSAXcharacters ( ch , dataIndex > > > TEXT_LENGTH_BITS , dataIndex & TEXT_LENGTH_MAX ) ; \n\t\t\telse m_chars . sendSAXcharacters ( ch , dataIndex > > > TEXT_LENGTH_BITS , dataIndex & TEXT_LENGTH_MAX ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( normalize ) m_chars . sendNormalizedSAXcharacters ( ch , m_data . elementAt ( - dataIndex ) , m_data . elementAt ( - dataIndex + NUM00 ) ) ; \n\t\t\telse m_chars . sendSAXcharacters ( ch , m_data . elementAt ( - dataIndex ) , m_data . elementAt ( - dataIndex + NUM00 ) ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tint dataIndex = m_dataOrQName . elementAt ( identity ) ; \n\t\tif ( dataIndex < NUM00 ) { \n\t\t\tdataIndex = - dataIndex ; \n\t\t\tdataIndex = m_data . elementAt ( dataIndex + NUM00 ) ; \n\t\t\t} \n\t\t$F124180 ( str , m_values , dataIndex ) if ( normalize ) FastStringBuffer . sendNormalizedSAXcharacters ( str . toCharArray ( ) , NUM00 , str . length ( ) , ch ) ; \n\t\telse ch . characters ( $F62204 ( str ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean containIP $F14337 ( cidrPrefix , cidrMaskBits , ip ) { \n\tboolean matched = _BOOL ; \n\tint bitsToShift = NUM00 - cidrMaskBits ; \n\tif ( bitsToShift > NUM00 ) { \n\t\tcidrPrefix = cidrPrefix > > bitsToShift ; \n\t\tip = ip > > bitsToShift ; \n\t\tcidrPrefix = cidrPrefix < < bitsToShift ; \n\t\tip = ip < < bitsToShift ; \n\t\t} \n\tif ( cidrPrefix != ip ) { \n\t\tmatched = _BOOL ; \n\t\t} \n\treturn matched ; \n\t} \n"}, {"code": "protected static Boolean lock ( String serviceName , Object name ) { \n\tDistributedLockService service = DistributedLockService . getServiceNamed ( serviceName ) ; \n\tboolean locked = service . lock ( name , NUM00 , - NUM00 ) ; \n\t$F33236 ( Boolean , locked ) } \n"}, {"code": "protected int checkKnownCookie $F72 { \n\tint retVal = NUM00 ; \n\tdebug . message ( NUM00 , ADAPTIVE ) ; \n\tHttpServletRequest req = getHttpServletRequest ( ) ; \n\tif ( req != null ) { \n\t\tCookie cookie = CookieUtils . getCookieFromReq ( req , knownCookieName ) ; \n\t\tif ( cookie != null ) { \n\t\t\tif ( knownCookieValue . equalsIgnoreCase ( CookieUtils . getCookieValue ( cookie ) ) ) { \n\t\t\t\tretVal = knownCookieScore ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F23170 ( knownCookieValue ) if ( knownCookieSave ) { \n\t\t$F545 ( postAuthNMap , knownCookieName ) $F545 ( postAuthNMap , knownCookieValue ) } \n\tif ( ! knownCookieInvert ) { \n\t\tretVal = knownCookieScore - retVal ; \n\t\t} \n\treturn retVal ; \n\t} \n"}, {"code": "public $F5237 selectImportFiles ( final String title , boolean multipleSelection , FileNameExtensionFilter [ ] fileNameExtensionFilters ) { \n\tif ( Boolean . parseBoolean ( System . getProperty ( NUM00 , Boolean . toString ( OSType . isMac ( ) ) ) ) ) { \n\t\tFileDialog importDialog = fileDialogs . get ( title ) ; \n\t\tif ( importDialog == null ) { \n\t\t\timportDialog = new FileDialog ( this , title , FileDialog . LOAD ) ; \n\t\t\tfileDialogs . put ( title , importDialog ) ; \n\t\t\t} \n\t\timportDialog . setVisible ( _BOOL ) ; \n\t\tif ( importDialog . getFile ( ) != null ) { \n\t\t\treturn new File [ ] { \n\t\t\t\tnew File ( importDialog . getDirectory ( ) , importDialog . getFile ( ) ) } \n\t\t\t; \n\t\t\t} \n\t\t} \n\telse { \n\t\tJFileChooser importChooser = fileChoosers . get ( title ) ; \n\t\tif ( importChooser == null ) { \n\t\t\timportChooser = new JFileChooser ( Utils . getCWD ( ) ) ; \n\t\t\timportChooser . setMultiSelectionEnabled ( multipleSelection ) ; \n\t\t\tfor ( FileNameExtensionFilter fileNameExtensionFilter : fileNameExtensionFilters ) { \n\t\t\t\timportChooser . setFileFilter ( fileNameExtensionFilter ) ; \n\t\t\t\t} \n\t\t\timportChooser . setDialogTitle ( title ) ; \n\t\t\tfileChoosers . put ( title , importChooser ) ; \n\t\t\t} \n\t\tint returnVal = importChooser . showOpenDialog ( this ) ; \n\t\tif ( returnVal == JFileChooser . APPROVE_OPTION ) { \n\t\t\tif ( importChooser . isMultiSelectionEnabled ( ) ) { \n\t\t\t\treturn importChooser . getSelectedFiles ( ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\treturn new File [ ] { \n\t\t\t\t\timportChooser . getSelectedFile ( ) } \n\t\t\t\t; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public GT_MetaGenerated_Item ( String aUnlocalized , short aOffset , short aItemAmount ) { \n\tsuper ( aUnlocalized ) ; \n\tsetCreativeTab ( GregTech_API . TAB_GREGTECH_MATERIALS ) ; \n\tsetHasSubtypes ( _BOOL ) ; \n\tsetMaxDamage ( NUM00 ) ; \n\tmEnabledItems = new BitSet ( aItemAmount ) ; \n\tmVisibleItems = new BitSet ( aItemAmount ) ; \n\tmOffset = ( short ) Math . min ( NUM00 , aOffset ) ; \n\tmItemAmount = ( short ) Math . min ( aItemAmount , NUM00 - mOffset ) ; \n\tmIconList = new IIcon [ aItemAmount ] [ NUM00 ] ; \n\tsInstances . put ( getUnlocalizedName ( ) , this ) ; \n\t} \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F994 ( newVector ) $F9007 ( newVector ) $F9007 ( newVector ) $F1000 ( newVector ) $F1006 ( newVector ) $F1000 ( newVector ) $F1000 ( newVector ) $F1000 ( newVector ) $F1000 ( newVector ) $F1000 ( newVector ) $F9010 ( newVector , Collections , super ) $F1007 ( newVector ) } \n"}, {"code": "$F1 public SSLEngineResult wrap ( $F30903 srcs , int offset , int len , ByteBuffer dst ) throws SSLException { \n\tif ( engine_was_shutteddown ) { \n\t\treturn new SSLEngineResult ( SSLEngineResult . Status . CLOSED , SSLEngineResult . HandshakeStatus . NOT_HANDSHAKING , NUM00 , NUM00 ) ; \n\t\t} \n\tif $F54923 ( srcs , dst ) $F4639 if ( dst . isReadOnly ( ) ) { \n\t\tthrow new ReadOnlyBufferException $F72 ; \n\t\t} \n\t$F14406 ( handshake_started , beginHandshake ) SSLEngineResult . HandshakeStatus handshakeStatus = getHandshakeStatus ( ) ; \n\tif ( ( session == null || engine_was_closed ) && ( handshakeStatus . equals ( SSLEngineResult . HandshakeStatus . NEED_UNWRAP ) || handshakeStatus . equals ( SSLEngineResult . HandshakeStatus . NEED_TASK ) ) ) { \n\t\treturn new SSLEngineResult ( getEngineStatus ( ) , handshakeStatus , NUM00 , NUM00 ) ; \n\t\t} \n\t$F45850 ( capacity , dst ) int produced = NUM00 ; \n\tif ( alertProtocol . hasAlert ( ) ) { \n\t\tif ( capacity < recordProtocol . getRecordSize ( NUM00 ) ) { \n\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . BUFFER_OVERFLOW , handshakeStatus , NUM00 , NUM00 ) ; \n\t\t\t} \n\t\t$F96 alert_data = alertProtocol . wrap ( ) ; \n\t\tdst . put ( alert_data ) ; \n\t\tif ( alertProtocol . isFatalAlert ( ) ) { \n\t\t\talertProtocol . setProcessed ( ) ; \n\t\t\tif ( session != null ) $F5218 ( session ) shutdown ( ) ; \n\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . CLOSED , SSLEngineResult . HandshakeStatus . NOT_HANDSHAKING , NUM00 , alert_data . length ) ; \n\t\t\t} \n\t\telse { \n\t\t\talertProtocol . setProcessed ( ) ; \n\t\t\tif ( close_notify_was_sent && close_notify_was_received ) { \n\t\t\t\tshutdown ( ) ; \n\t\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . CLOSED , SSLEngineResult . HandshakeStatus . NOT_HANDSHAKING , NUM00 , alert_data . length ) ; \n\t\t\t\t} \n\t\t\treturn new SSLEngineResult ( getEngineStatus ( ) , getHandshakeStatus ( ) , NUM00 , alert_data . length ) ; \n\t\t\t} \n\t\t} \n\tif ( capacity < recordProtocol . getMinRecordSize ( ) ) { \n\t\tif ( logger != null ) { \n\t\t\tlogger . println ( NUM00 + capacity + NUM00 + recordProtocol . getMinRecordSize ( ) + NUM00 ) ; \n\t\t\t} \n\t\treturn new SSLEngineResult ( SSLEngineResult . Status . BUFFER_OVERFLOW , handshakeStatus , NUM00 , NUM00 ) ; \n\t\t} \n\ttry { \n\t\tif ( ! handshakeStatus . equals ( SSLEngineResult . HandshakeStatus . NEED_WRAP ) ) { \n\t\t\tdataStream . setSourceBuffers ( srcs , offset , len ) ; \n\t\t\tif ( ( capacity < SSLRecordProtocol . MAX_SSL_PACKET_SIZE ) && ( capacity < recordProtocol . getRecordSize ( dataStream . available ( ) ) ) ) { \n\t\t\t\tif ( logger != null ) { \n\t\t\t\t\tlogger . println ( NUM00 + capacity + NUM00 + recordProtocol . getRecordSize ( dataStream . available ( ) ) + NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . BUFFER_OVERFLOW , handshakeStatus , NUM00 , NUM00 ) ; \n\t\t\t\t} \n\t\t\tif ( remaining_wrapped_data == null ) { \n\t\t\t\tremaining_wrapped_data = recordProtocol . wrap ( ContentType . APPLICATION_DATA , dataStream ) ; \n\t\t\t\t} \n\t\t\tif ( capacity < remaining_wrapped_data . length ) { \n\t\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . BUFFER_OVERFLOW , handshakeStatus , dataStream . consumed ( ) , NUM00 ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tdst . put ( remaining_wrapped_data ) ; \n\t\t\t\tproduced = remaining_wrapped_data . length ; \n\t\t\t\tremaining_wrapped_data = null ; \n\t\t\t\treturn new SSLEngineResult ( getEngineStatus ( ) , handshakeStatus , dataStream . consumed ( ) , produced ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( remaining_hsh_data == null ) { \n\t\t\t\tremaining_hsh_data = handshakeProtocol . wrap ( ) ; \n\t\t\t\t} \n\t\t\tif ( capacity < remaining_hsh_data . length ) { \n\t\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . BUFFER_OVERFLOW , handshakeStatus , NUM00 , NUM00 ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tdst . put ( remaining_hsh_data ) ; \n\t\t\t\tproduced = remaining_hsh_data . length ; \n\t\t\t\tremaining_hsh_data = null ; \n\t\t\t\thandshakeStatus = handshakeProtocol . getStatus ( ) ; \n\t\t\t\tif ( handshakeStatus . equals ( SSLEngineResult . HandshakeStatus . FINISHED ) ) { \n\t\t\t\t\tsession = recordProtocol . getSession ( ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\treturn new SSLEngineResult ( getEngineStatus ( ) , getHandshakeStatus ( ) , NUM00 , produced ) ; \n\t\t\t} \n\t\t} \n\tcatch ( AlertException e ) { \n\t\talertProtocol . alert ( AlertProtocol . FATAL , e . getDescriptionCode ( ) ) ; \n\t\tengine_was_closed = _BOOL ; \n\t\tif ( session != null ) $F5218 ( session ) throw e . getReason ( ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F96 readFully ( InputStream in ) throws IOException { \n\t$F11452 ( readFullyNoClose , in ) } \n"}, {"code": "public static ParsedSql parseSqlStatement ( String sql ) { \n\t$F2695 ( namedParameters ) ParsedSql parsedSql = new ParsedSql ( sql ) ; \n\t$F7782 ( statement , sql ) int namedParameterCount = NUM00 ; \n\tint unnamedParameterCount = NUM00 ; \n\tint totalParameterCount = NUM00 ; \n\tint i = NUM00 ; \n\twhile ( i < statement . length ) { \n\t\tint skipToPosition = skipCommentsAndQuotes ( statement , i ) ; \n\t\tif ( i != skipToPosition ) { \n\t\t\t$F5884 ( skipToPosition , statement ) i = skipToPosition ; \n\t\t\t} \n\t\tchar c = statement [ i ] ; \n\t\tif $F37111 ( c ) { \n\t\t\tint j = i + NUM00 ; \n\t\t\tif ( j < statement . length && statement [ j ] == NUM00 && c == NUM00 ) { \n\t\t\t\ti = i + NUM00 ; \n\t\t\t\t$F598 } \n\t\t\twhile ( j < statement . length && ! isParameterSeparator ( statement [ j ] ) ) { \n\t\t\t\tj ++ ; \n\t\t\t\t} \n\t\t\tif ( j - i > NUM00 ) { \n\t\t\t\t$F129846 ( parameter , sql , i , j ) if $F2200 ( namedParameters , parameter ) $F107337 ( namedParameters , parameter , namedParameterCount ) parsedSql . addNamedParameter ( parameter , i , j ) ; \n\t\t\t\ttotalParameterCount ++ ; \n\t\t\t\t} \n\t\t\ti = j - NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( c == NUM00 ) $F1097 ( unnamedParameterCount , totalParameterCount ) } \n\t\ti ++ ; \n\t\t} \n\tparsedSql . setNamedParameterCount ( namedParameterCount ) ; \n\tparsedSql . setUnnamedParameterCount ( unnamedParameterCount ) ; \n\tparsedSql . setTotalParameterCount ( totalParameterCount ) ; \n\treturn parsedSql ; \n\t} \n"}, {"code": "final void putLong ( int offset , long value ) { \n\tunsafe . putLong ( offset + address , value ) ; \n\t} \n"}, {"code": "public boolean onEvent ( ActionResult result ) { \n\tsynchronized ( this ) { \n\t\tString requestId = result . getResponseInfo ( ) . mRequestId ; \n\t\t$F1933 ( requestId , _BOOL ) $F12396 ( eventRemoved , mRequestIds , requestId ) if ( eventRemoved ) { \n\t\t\tClass key = null ; \n\t\t\tfor ( Class type : mLastRequestIdByType . keySet ( ) ) { \n\t\t\t\tif ( $F115302 ( requestId , mLastRequestIdByType , type ) ) $F3468 ( key , type ) } \n\t\t\t$F231860 ( key , mLastRequestIdByType ) } \n\t\treturn eventRemoved ; \n\t\t} \n\t} \n"}, {"code": "public static String gensalt ( int log_rounds , SecureRandom random ) { \n\t$F280 ( rs ) byte rnd [ ] = new byte [ BCRYPT_SALT_LEN ] ; \n\trandom . nextBytes ( rnd ) ; \n\t$F84 ( rs ) $F2854 ( log_rounds , rs ) if ( log_rounds > NUM00 ) $F825 $F42779 ( rs , Integer , log_rounds ) $F84 ( rs ) rs . append ( encode_base64 ( rnd , rnd . length ) ) ; \n\t$F92 ( rs ) } \n"}, {"code": "public void checkKey ( Object key ) throws PartitionedRegionException { \n\t$F24126 ( hasHash ) $F2329 ( key ) $F17043 ( expected , key ) $F19899 ( expected , keyHash ) throw new PartitionedRegionException ( NUM00 + expected + NUM00 + keyHash ) ; \n\t} \n"}, {"code": "public StringBuffer numberToString ( final String strNumberToConvert ) { \n\tString strNumber = NUM00 , signBit = NUM00 ; \n\tif $F3106 ( strNumberToConvert ) { \n\t\tstrNumber = NUM00 + $F47252 ( strNumberToConvert ) ; \n\t\tsignBit = NUM00 ; \n\t\t} \n\telse strNumber = NUM00 + strNumberToConvert ; \n\tfinal DecimalFormat dft = new DecimalFormat $F580 ; \n\tfinal String strtemp = NUM00 + dft . format ( Double . parseDouble ( strNumber ) ) ; \n\t$F1350 ( strbNumber , strtemp ) $F22998 ( intLen , strbNumber ) for ( int i = intLen - NUM00 ; \n\ti > NUM00 ; \n\ti = i - NUM00 ) $F48459 ( strbNumber , i ) if $F3057 ( signBit ) strbNumber = strbNumber . insert ( NUM00 , NUM00 ) ; \n\treturn strbNumber ; \n\t} \n"}, {"code": "private void runInitScriptIfRequired ( String url , Connection connection ) throws SQLException { \n\t$F275 ( matcher , INITSCRIPT_MATCHING_PATTERN , url ) if $F24133 ( matcher ) { \n\t\t$F283 ( initScriptPath , matcher ) try { \n\t\t\tURL resource = Resources . getResource ( initScriptPath ) ; \n\t\t\tString sql = Resources . toString ( resource , Charsets . UTF_8 ) ; \n\t\t\tScriptUtils . executeSqlScript ( connection , initScriptPath , sql ) ; \n\t\t\t} \n\t\tcatch ( IOException | IllegalArgumentException e ) { \n\t\t\t$F18942 ( LOGGER , initScriptPath ) throw new SQLException ( NUM00 + initScriptPath , e ) ; \n\t\t\t} \n\t\tcatch ( ScriptException e ) { \n\t\t\t$F59427 ( LOGGER , initScriptPath , e ) throw new SQLException ( NUM00 + initScriptPath , e ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private static int parseInt $F36827 ( value , beginIndex , endIndex ) throws NumberFormatException { \n\tif ( $F128898 ( beginIndex , endIndex , value ) || beginIndex > endIndex ) { \n\t\tthrow new NumberFormatException ( value ) ; \n\t\t} \n\tint i = beginIndex ; \n\tint result = NUM00 ; \n\tint digit ; \n\tif ( i < endIndex ) { \n\t\t$F289104 ( digit , Character , value , i ) if ( digit < NUM00 ) $F111291 ( value ) result = - digit ; \n\t\t} \n\twhile ( i < endIndex ) { \n\t\t$F289104 ( digit , Character , value , i ) if ( digit < NUM00 ) $F111291 ( value ) result *= NUM00 ; \n\t\tresult -= digit ; \n\t\t} \n\treturn - result ; \n\t} \n"}, {"code": "public static void println ( Object x ) $F18992 ( out , x ) "}, {"code": "public static void checkFinite $F10212 ( val ) throws MathIllegalArgumentException { \n\tfor ( $F1139 ( i , val ) ) { \n\t\tfinal double x = val [ i ] ; \n\t\tif ( Double . isInfinite ( x ) || Double . isNaN ( x ) ) { \n\t\t\tthrow new MathIllegalArgumentException ( LocalizedCoreFormats . NOT_FINITE1BER , x ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void initKeyboardButtons ( KeyboardView view ) { \n\t$F9404 ( mButtons ) mButtons . add ( ( KeyboardButtonView ) view . findViewById ( R . id . pin_code_button_0 ) ) ; \n\tmButtons . add ( ( KeyboardButtonView ) view . findViewById ( R . id . pin_code_button_1 ) ) ; \n\tmButtons . add ( ( KeyboardButtonView ) view . findViewById ( R . id . pin_code_button_2 ) ) ; \n\tmButtons . add ( ( KeyboardButtonView ) view . findViewById ( R . id . pin_code_button_3 ) ) ; \n\tmButtons . add ( ( KeyboardButtonView ) view . findViewById ( R . id . pin_code_button_4 ) ) ; \n\tmButtons . add ( ( KeyboardButtonView ) view . findViewById ( R . id . pin_code_button_5 ) ) ; \n\tmButtons . add ( ( KeyboardButtonView ) view . findViewById ( R . id . pin_code_button_6 ) ) ; \n\tmButtons . add ( ( KeyboardButtonView ) view . findViewById ( R . id . pin_code_button_7 ) ) ; \n\tmButtons . add ( ( KeyboardButtonView ) view . findViewById ( R . id . pin_code_button_8 ) ) ; \n\tmButtons . add ( ( KeyboardButtonView ) view . findViewById ( R . id . pin_code_button_9 ) ) ; \n\tmButtons . add ( ( KeyboardButtonView ) view . findViewById ( R . id . pin_code_button_clear ) ) ; \n\tfor ( View button : mButtons ) { \n\t\tbutton . setOnClickListener ( this ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isAutoNew ( Properties ctx , int WindowNo ) { \n\t$F19273 ( ctx ) String s = getContext ( ctx , WindowNo , NUM00 , _BOOL ) ; \n\tif ( s != null ) { \n\t\tif $F3057 ( s ) return _BOOL ; \n\t\telse return _BOOL ; \n\t\t} \n\treturn isAutoNew ( ctx ) ; \n\t} \n"}, {"code": "private static String findRelativePath ( String filePath , String dirPath ) { \n\tString relPath ; \n\tif ( ! $F22072 ( dirPath , File ) ) { \n\t\tdirPath = dirPath + File . separator ; \n\t\t} \n\tif $F7311 ( filePath , dirPath ) { \n\t\t$F94062 ( relPath , filePath , dirPath ) } \n\telse { \n\t\trelPath = filePath ; \n\t\t} \n\treturn relPath ; \n\t} \n"}, {"code": "public boolean init $F72 { \n\t$F156357 ( log ) MClient client = MClient . get ( Env . getCtx ( ) ) ; \n\tString ASPFilter = NUM00 ; \n\tif ( client . isUseASP ( ) ) ASPFilter = $F40 + client . getAD_Client_ID ( ) + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + client . getAD_Client_ID ( ) + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + client . getAD_Client_ID ( ) + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 ; \n\tString sql = null ; \n\tif ( Env . isBaseLanguage ( $F9205 ( Env ) ) ) sql = $F34354 + NUM00 + NUM00 + NUM00 + ASPFilter + NUM00 ; \n\telse sql = $F40645 + Env . getAD_Language ( Env . getCtx ( ) ) + NUM00 + NUM00 + ASPFilter + NUM00 ; \n\tboolean hasFields = _BOOL ; \n\tRows rows = new Rows $F72 ; \n\ttry { \n\t\t$F46 ( pstmt , DB , sql ) pstmt . setInt ( NUM00 , m_processInfo . getAD_Process_ID ( ) ) ; \n\t\t$F49 ( rs , pstmt ) while $F1682 ( rs ) { \n\t\t\thasFields = _BOOL ; \n\t\t\tcreateField ( rs , rows ) ; \n\t\t\tisPair = ! isPair ; \n\t\t\t} \n\t\t$F59 ( rs ) $F59 ( pstmt ) } \n\t$F64 ( log , Level , sql , e ) if ( $F15255 ( m_mFields , m_mFields2 ) || $F15255 ( m_mFields , m_wEditors ) || $F15255 ( m_mFields2 , m_wEditors2 ) ) $F81302 ( log , Level ) if ( hasFields ) { \n\t\tcenterPanel . appendChild ( rows ) ; \n\t\tdynamicDisplay ( ) ; \n\t\t} \n\telse dispose ( ) ; \n\treturn hasFields ; \n\t} \n"}, {"code": "$F62319 ( filename , separator , keepSeparator , size , prefix , getPrefixLength , array , otherSeparator , SYSTEM_SEPARATOR , OTHER_SEPARATOR , i , lastIsDirectory , _BOOL , System , j ) "}, {"code": "public void resetSingleton $F72 { \n\troot = null ; \n\t$F3223 ( tmpFileCounter ) $F725 ( accessedFiles ) shouldAllThrowIOException = _BOOL ; \n\t$F725 ( classesThatShouldThrowIOException ) synchronized ( leakingResources ) { \n\t\tfor ( LeakingResource resource : leakingResources ) { \n\t\t\ttry $F33834 ( resource ) catch ( Exception e ) { \n\t\t\t\tlogger . warn ( $F5351 ( e ) , e ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F725 ( leakingResources ) } \n\t} \n"}, {"code": "public void testAndNotNegNegFirstLonger $F72 { \n\t$F37335 $F37339 int aSign = - NUM00 ; \n\tint bSign = - NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F89728 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public static String generateStringOfCharacters ( int count ) { \n\t$F83 ( sb ) for ( $F119 ( i , count ) ) { \n\t\tsb . append ( CHARACTERS . charAt ( ( int ) ( Math . random ( ) * CHARACTERS . length ( ) ) ) ) ; \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "private ExchangeRateManager $F72 { \n\tif ( System . getProperty ( NUM00 ) == null ) $F5788 addKnownRates ( ) ; \n\t} \n"}, {"code": "public void removeAttribute ( String name ) { \n\tif ( name != null ) if ( attributesList != null ) { \n\t\tfor ( $F2277 ( i , attributesList ) ) { \n\t\t\tObject o = attributesList . elementAt ( i ) ; \n\t\t\tif ( o instanceof AttributeField ) { \n\t\t\t\tAttributeField a = ( AttributeField ) o ; \n\t\t\t\ttry { \n\t\t\t\t\t$F20605 ( n , a ) if ( n != null ) { \n\t\t\t\t\t\tif $F1238 ( name , n ) $F106 ( attributesList , a ) } \n\t\t\t\t\t} \n\t\t\t\tcatch ( SdpParseException e ) $F845 } \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public void evict ( String key ) { \n\tkey = safetyKey ( key ) ; \n\t$F140034 ( file , cacheDirectory , key ) $F1900 ( file ) } \n"}, {"code": "public static boolean isUniqueContraintError ( Exception e ) { \n\tif ( DB . isPostgreSQL ( ) ) return isSQLState ( e , NUM00 ) ; \n\treturn isErrorCode ( e , NUM00 ) ; \n\t} \n"}, {"code": "$F156045 ( msg , x , super , this ) "}, {"code": "$F32569 ( panel , cols , rows , filler , filled_cell_11 , _BOOL , cc , Box , index ) "}, {"code": "private void insertUsedContextPrefixes $F72 { \n\t$F2199 ( unknownPrefixesCount , unknownPrefixesInXMLLiteral ) if ( unknownPrefixesCount > NUM00 ) { \n\t\t$F20818 ( contextPrefixes ) ElementInfo topElement = peekStack ( ) ; \n\t\tfor ( $F119 ( i , unknownPrefixesCount ) ) { \n\t\t\t$F1729 ( prefix , unknownPrefixesInXMLLiteral , i ) String namespace = topElement . getNamespace ( prefix ) ; \n\t\t\tif ( namespace != null ) { \n\t\t\t\tappendNamespaceDecl ( contextPrefixes , prefix , namespace ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F1384 ( endOfFirstStartTag , charBuf ) charBuf . insert ( endOfFirstStartTag , contextPrefixes . toString ( ) ) ; \n\t\t} \n\t$F725 ( unknownPrefixesInXMLLiteral ) } \n"}, {"code": "public void addPutTimeNanos ( long duration ) { \n\tputTimeNanos . addAndGet ( duration ) ; \n\tif ( delegate != null ) delegate . addPutTimeNanos ( duration ) ; \n\t} \n"}, {"code": "public static $F3807 precomputeHashes $F31474 ( data , tweak ) { \n\t$F15272 $F10252 ( list , MAX_HASH_FUNCS ) ; \n\tfor ( $F1316 ( i , MAX_HASH_FUNCS ) ) $F139401 ( list , murmurhash3bit , i , data , tweak ) return list ; \n\t} \n"}, {"code": "$F10344 ( HTTPRequestMethod ) @ Before ( adviceClass = { \n\t$F10345 , AnonymousViewCheck . class , UserBlockCheck . class } \n) $F10353 public void showHomeFollowingTags $F10355 ( context , request , response , userName ) throws Exception { \n\t$F10360 ( user , request , User ) request . setAttribute ( Keys . TEMAPLTE_DIR_NAME , Symphonys . get ( NUM00 ) ) ; \n\t$F10375 ( renderer ) context . setRenderer ( renderer ) ; \n\t$F10384 ( renderer ) $F10377 ( dataModel , renderer ) filler . fillHeaderAndFooter ( request , response , dataModel ) ; \n\t$F10362 ( pageNumStr , request ) $F10365 ( Strings , pageNumStr ) $F10367 ( pageNum , Integer , pageNumStr ) $F10411 ( pageSize , Symphonys ) $F10411 ( windowSize , Symphonys ) fillHomeUser ( dataModel , user ) ; \n\t$F10381 ( followingId , user , Keys ) dataModel . put ( Follow . FOLLOWING_ID , followingId ) ; \n\tavatarQueryService . fillUserAvatarURL ( user ) ; \n\tfinal JSONObject followingTagsResult = followQueryService . getFollowingTags ( followingId , pageNum , pageSize ) ; \n\tfinal $F10413 followingTags = ( $F10413 ) followingTagsResult . opt ( Keys . RESULTS ) ; \n\tdataModel . put ( Common . USER_HOME_FOLLOWING_TAGS , followingTags ) ; \n\tfinal boolean isLoggedIn = ( Boolean ) dataModel . get ( Common . IS_LOGGED_IN ) ; \n\tif ( isLoggedIn ) { \n\t\tfinal JSONObject currentUser = ( JSONObject ) dataModel . get ( Common . CURRENT_USER ) ; \n\t\t$F10381 ( followerId , currentUser , Keys ) $F10398 ( isFollowing , followQueryService , followerId , followingId ) dataModel . put ( Common . IS_FOLLOWING , isFollowing ) ; \n\t\tfor ( final JSONObject followingTag : followingTags ) { \n\t\t\t$F10381 ( homeUserFollowingTagId , followingTag , Keys ) followingTag . put ( Common . IS_FOLLOWING , followQueryService . isFollowing ( followerId , homeUserFollowingTagId ) ) ; \n\t\t\t} \n\t\t} \n\tuser . put ( UserExt . USER_T_CREATE_TIME , new Date ( user . getLong ( Keys . OBJECT_ID ) ) ) ; \n\tfinal int followingTagCnt = followingTagsResult . optInt ( Pagination . PAGINATION_RECORD_COUNT ) ; \n\tfinal int pageCount = ( int ) Math . ceil ( followingTagCnt / ( double ) pageSize ) ; \n\tfinal $F3807 pageNums = Paginator . paginate ( pageNum , pageSize , pageCount , windowSize ) ; \n\tif $F5973 ( pageNums ) { \n\t\tdataModel . put ( Pagination . PAGINATION_FIRST_PAGE1 , pageNums . get ( NUM00 ) ) ; \n\t\tdataModel . put ( Pagination . PAGINATION_LAST_PAGE1 , $F7661 ( pageNums ) ) ; \n\t\t} \n\t$F10442 ( dataModel , Pagination , pageNum ) $F10444 ( dataModel , Pagination , pageCount ) dataModel . put ( Pagination . PAGINATION_PAGE1S , pageNums ) ; \n\t} \n"}, {"code": "public int elevationAt ( float lat , float lon ) { \n\tif ( frame_is_valid == _BOOL ) { \n\t\tif ( lat >= dsi . sw_lat && lat <= dsi . ne_lat && lon >= dsi . sw_lon && lon <= dsi . ne_lon ) { \n\t\t\tint lat_index = Math . round ( ( lat - dsi . sw_lat ) * NUM00 / uhl . lat_post_interval ) ; \n\t\t\tint lon_index = Math . round ( ( lon - dsi . sw_lon ) * NUM00 / uhl . lon_post_interval ) ; \n\t\t\tif ( elevations [ lon_index ] == null ) readDataRecord ( lon_index ) ; \n\t\t\treturn ( int ) elevations [ lon_index ] [ lat_index ] ; \n\t\t\t} \n\t\t} \n\t$F150 } \n"}, {"code": "ObservedObject createObservedObject ( ObjectName object ) { \n\treturn new ObservedObject ( object ) ; \n\t} \n"}, {"code": "private void deleteChildren ( Element container ) { \n\twhile $F49521 ( container ) { \n\t\tcontainer . removeChild ( container . getLastChild ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "private void saveInitialChildState ( FacesContext facesContext , UIComponent component ) { \n\tif ( component instanceof EditableValueHolder && ! component . isTransient ( ) ) { \n\t\tString clientId = component . getClientId ( facesContext ) ; \n\t\tSavedState state = new SavedState $F72 ; \n\t\tinitialChildState . put ( clientId , state ) ; \n\t\tstate . populate ( ( EditableValueHolder ) component ) ; \n\t\t} \n\tIterator < UIComponent > iterator = component . getFacetsAndChildren ( ) ; \n\twhile $F2921 ( iterator ) { \n\t\t$F11626 ( saveChildState , facesContext , iterator ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean is_overlap $F72 { \n\t$F155343 start_contacts = get_start_contacts ( ) ; \n\t$F155343 end_contacts = get_end_contacts ( ) ; \n\tfor ( BrdItem end_contact : end_contacts ) { \n\t\t$F12651 ( start_contacts , end_contact , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "static Object ensureNotNull ( Location location , Object value ) { \n\tif ( value == null ) { \n\t\tthrow new EvalException ( location , NUM00 ) ; \n\t\t} \n\treturn value ; \n\t} \n"}, {"code": "public static final ArrayList readListXml ( InputStream in ) throws $F18821 { \n\t$F58707 ( parser , Xml ) $F58708 ( parser , in ) return ( ArrayList ) $F176917 ( readValueXml , parser ) ; \n\t} \n"}, {"code": "private static String padRight ( String s , int minLength ) { \n\treturn $F49045 ( String , minLength , s ) ; \n\t} \n"}, {"code": "$F1 public $F14937 enumerateMeasures $F72 { \n\t$F75150 ( newVector ) $F6519 ( newVector ) $F1007 ( newVector ) } \n"}, {"code": "protected synchronized void onSendTaskCompleted ( $F228084 buffer ) { \n\tlogger . trace ( NUM00 , name ( ) , buffer ) ; \n\t$F15856 ( activeSendTasks ) } \n"}, {"code": "public void addPreferencesButton $F72 { \n\t$F79691 ( prefsButton ) prefsButton . setHideActionText ( _BOOL ) ; \n\tprefsButton . setAction ( RasterPlotActions . getPropertiesDialogAction ( this ) ) ; \n\tbuttonPanel . add ( prefsButton ) ; \n\t} \n"}, {"code": "public void clearUnused ( ConfigImpl config ) { \n\tSystemOut . printDate ( config . getOutWriter ( ) , $F80356 ( size , maxSize ) ) ; \n\tif ( size ( ) > maxSize ) { \n\t\t$F131 keys = keys ( ) ; \n\t\tLongKeyList list = new LongKeyList $F72 ; \n\t\tfor ( $F1139 ( i , keys ) ) { \n\t\t\tPageSource ps = getPageSource ( keys [ i ] , _BOOL ) ; \n\t\t\tlong updateTime = ps . getLastAccessTime ( ) ; \n\t\t\tif ( updateTime + timeout < System . currentTimeMillis ( ) ) { \n\t\t\t\tlong add = ( ( ps . getAccessCount ( ) - NUM00 ) * NUM00 ) ; \n\t\t\t\t$F46170 ( add , timeout ) list . add ( updateTime + add , keys [ i ] ) ; \n\t\t\t\t} \n\t\t\t} \n\t\twhile ( size ( ) > maxSize ) { \n\t\t\tObject key = list . shift ( ) ; \n\t\t\t$F12576 ( key ) remove ( key ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static GridField [ ] createFields ( Properties ctx , int WindowNo , int TabNo , int AD_Tab_ID ) { \n\tArrayList < GridFieldVO > listVO = new ArrayList < GridFieldVO > $F72 ; \n\tint AD_Window_ID = NUM00 ; \n\tboolean readOnly = _BOOL ; \n\tString sql = GridFieldVO . getSQL ( ctx ) ; \n\tPreparedStatement pstmt = null ; \n\ttry { \n\t\t$F47577 ( pstmt , DB , sql ) $F47 ( pstmt , AD_Tab_ID ) $F49 ( rs , pstmt ) while $F1682 ( rs ) { \n\t\t\tGridFieldVO vo = GridFieldVO . create ( ctx , WindowNo , TabNo , AD_Window_ID , AD_Tab_ID , readOnly , rs ) ; \n\t\t\tlistVO . add ( vo ) ; \n\t\t\t} \n\t\t$F59 ( rs ) $F59 ( pstmt ) pstmt = null ; \n\t\t} \n\t$F230362 ( log , Level , sql , e ) $F285021 ( pstmt ) GridField [ ] retValue = new GridField $F2313 ( listVO ) ; \n\tfor ( $F2277 ( i , listVO ) ) retValue [ i ] = new GridField ( ( GridFieldVO ) listVO . get ( i ) ) ; \n\treturn retValue ; \n\t} \n"}, {"code": "public ShortInterleavedRaster $F235065 ( sampleModel , dataBuffer , origin ) $F235073 ( this , sampleModel , dataBuffer , origin ) "}, {"code": "private void copyCarbonDataFileToCarbonStorePath ( String localFileName ) throws CarbonDataWriterException { \n\t$F657 ( copyStartTime , System ) $F21448 ( LOGGER , localFileName , carbonDataDirectoryPath ) try { \n\t\tCarbonFile localCarbonFile = FileFactory . getCarbonFile ( localFileName , FileFactory . getFileType ( localFileName ) ) ; \n\t\tString carbonFilePath = carbonDataDirectoryPath + localFileName . substring ( $F23703 ( localFileName , File ) ) ; \n\t\tcopyLocalFileToCarbonStore ( carbonFilePath , localFileName , CarbonCommonConstants . BYTEBUFFER_SIZE , getMaxOfBlockAndFileSize ( fileSizeInBytes , localCarbonFile . getSize ( ) ) ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tthrow new CarbonDataWriterException $F580 ; \n\t\t} \n\tLOGGER . info ( NUM00 + localFileName + NUM00 + $F32707 ( System , copyStartTime ) ) ; \n\t} \n"}, {"code": "$F1 public boolean flingBackward ( Selector obj , boolean isVertical ) throws UiObjectNotFoundException { \n\tUiScrollable scrollable = new UiScrollable ( obj . toUiSelector ( ) ) ; \n\tif ( isVertical ) scrollable . setAsVerticalList ( ) ; \n\telse scrollable . setAsHorizontalList ( ) ; \n\treturn scrollable . flingBackward ( ) ; \n\t} \n"}, {"code": "protected static double toDouble ( String s ) { \n\ttry $F2404 ( Double , s ) catch ( Exception e ) { \n\t\tTestCase . fail ( NUM00 + s + NUM00 + throwableToString ( e ) ) ; \n\t\treturn Double . NaN ; \n\t\t} \n\t} \n"}, {"code": "public void addListener ( final IFilterPanelListener $F4203 listener ) $F232044 ( m_listeners , listener ) "}, {"code": "public void testmirror ( File orig , File origni , File truecolor ) { \n\tFile mirror = TestSupport . addSuffixToName ( orig , NUM00 ) ; \n\tFile recov = TestSupport . addSuffixToName ( orig , NUM00 ) ; \n\tlong crc0 = NUM00 ; \n\tboolean interlaced ; \n\tboolean palete ; \n\t{ \n\t\tPngReader pngr = new PngReader ( orig ) ; \n\t\tPngWriter pngw = null ; \n\t\ttry { \n\t\t\tif $F146187 ( rand ) pngr . setLineSetFactory ( ImageLineSetDefault . getFactoryByte ( ) ) ; \n\t\t\tpalete = pngr . imgInfo . indexed ; \n\t\t\tpngr . prepareSimpleDigestComputation ( ) ; \n\t\t\tinterlaced = pngr . isInterlaced ( ) ; \n\t\t\tpngw = new PngWriter ( mirror , pngr . imgInfo , _BOOL ) ; \n\t\t\tpngw . setFilterType ( FilterType . FILTER_CYCLIC ) ; \n\t\t\tpngw . copyChunksFrom ( pngr . getChunksList ( ) ) ; \n\t\t\tIImageLineSet < ? extends IImageLine > lines = pngr . readRows ( ) ; \n\t\t\tfor ( int row = NUM00 ; \n\t\t\trow < pngr . imgInfo . rows ; \n\t\t\trow ++ ) { \n\t\t\t\tmirrorLine ( lines . getImageLine ( row ) , pngr . imgInfo ) ; \n\t\t\t\tpngw . writeRow ( lines . getImageLine ( row ) ) ; \n\t\t\t\t} \n\t\t\t$F87417 ( pngr ) crc0 = PngHelperInternal . getDigest ( pngr ) ; \n\t\t\t$F87417 ( pngw ) } \n\t\tfinally { \n\t\t\t$F59 ( pngr ) $F711 ( pngw ) } \n\t\t} \n\t{ \n\t\tPngReader pngr2 = new PngReader ( mirror ) ; \n\t\tPngWriter pngw = null ; \n\t\ttry { \n\t\t\tif ( pngr2 . imgInfo . bitDepth < NUM00 && rand . nextBoolean ( ) ) pngr2 . setLineSetFactory ( ImageLineSetDefault . getFactoryByte ( ) ) ; \n\t\t\tpngw = new PngWriter ( recov , pngr2 . imgInfo , _BOOL ) ; \n\t\t\tpngw . setFilterType ( FilterType . FILTER_DEFAULT ) ; \n\t\t\tpngw . copyChunksFrom ( pngr2 . getChunksList ( ) ) ; \n\t\t\tfor ( int row = NUM00 ; \n\t\t\trow < pngr2 . imgInfo . rows ; \n\t\t\trow ++ ) { \n\t\t\t\tIImageLine line = pngr2 . readRow ( ) ; \n\t\t\t\tmirrorLine ( line , pngr2 . imgInfo ) ; \n\t\t\t\tpngw . writeRow ( line ) ; \n\t\t\t\t} \n\t\t\t$F87417 ( pngr2 ) $F87417 ( pngw ) } \n\t\tfinally { \n\t\t\t$F59 ( pngr2 ) $F711 ( pngw ) } \n\t\t} \n\tif ( ! interlaced ) TestSupport . testCrcEquals ( recov , crc0 ) ; \n\telse TestSupport . testSameCrc ( recov , origni ) ; \n\tif ( interlaced ) additionalTestInterlaced ( orig , origni ) ; \n\tif ( palete && truecolor . exists ( ) ) additionalTestPalette ( orig , truecolor ) ; \n\t} \n"}, {"code": "public boolean isStable $F72 $F298 ( myFeatures , FEATURE_STABLE ) "}, {"code": "public static void calcTextSize ( Paint paint , String demoText , FSize outputFSize ) { \n\tRect r = mCalcTextSizeRect ; \n\tr . set ( $F4026 ) ; \n\t$F77589 ( paint , demoText , r ) outputFSize . width = r . width ( ) ; \n\toutputFSize . height = r . height ( ) ; \n\t} \n"}, {"code": "protected void performDefaults $F72 { \n\tsuper . performDefaults ( ) ; \n\tinitializeValues ( ) ; \n\tverifyValidation ( ) ; \n\t} \n"}, {"code": "public String toString $F72 { \n\t$F64605 ( buf ) for ( int i = NUM00 , end = _pos - NUM00 ; \n\ti < end ; \n\ti ++ ) { \n\t\t$F6939 ( buf , _data , i ) $F84 ( buf ) } \n\tif $F44803 ( size ) { \n\t\tbuf . append ( _data [ _pos - NUM00 ] ) ; \n\t\t} \n\t$F84 ( buf ) $F92 ( buf ) } \n"}, {"code": "public static void write ( int x1 , int y1 , Image image , int image_width , int image_height , LinkProperties properties , DataOutputStream dos ) throws $F3 { \n\t$F108267 ( pixels , image_width , image_height ) PixelGrabber pixelgrabber = new PixelGrabber ( image , NUM00 , NUM00 , image_width , image_height , pixels , NUM00 , image_width ) ; \n\tpixelgrabber . grabPixels ( ) ; \n\tLinkRaster . write ( x1 , y1 , image_width , image_height , pixels , properties , dos ) ; \n\t} \n"}, {"code": "$F1431 public void testProjectionPredicateDifferentClassLoaders $F72 throws Exception { \n\tfinal Ignite ignite3 = startGrid ( NUM00 ) ; \n\t$F52326 clsLdrUrls ; \n\ttry { \n\t\tclsLdrUrls = new URL [ ] { \n\t\t\tnew URL ( GridTestProperties . getProperty ( NUM00 ) ) } \n\t\t; \n\t\t} \n\tcatch ( MalformedURLException e ) $F7077 ( e ) ClassLoader ldr1 = new URLClassLoader ( clsLdrUrls , getClass ( ) . getClassLoader ( ) ) ; \n\t$F198604 ( taskCls , ldr1 ) $F198604 ( nodeFilterCls , ldr1 ) IgnitePredicate $F33331 nodeFilter = ( IgnitePredicate $F33331 ) nodeFilterCls . getConstructor ( UUID . class ) . newInstance ( ignite2 . cluster ( ) . localNode ( ) . id ( ) ) ; \n\tMap < UUID , Integer > ret = ( Map < UUID , Integer > ) executeAsync ( compute ( ignite1 . cluster ( ) . forPredicate ( nodeFilter ) ) , taskCls , null ) . get ( TASK_EXEC_TIMEOUT_MS ) ; \n\tassert ret != null ; \n\tassert ret . get ( ignite1 . cluster ( ) . localNode ( ) . id ( ) ) != null && ret . get ( ignite1 . cluster ( ) . localNode ( ) . id ( ) ) == NUM00 : ret . get ( ignite1 . cluster ( ) . localNode ( ) . id ( ) ) ; \n\tassert ret . get ( ignite3 . cluster ( ) . localNode ( ) . id ( ) ) != null && ret . get ( ignite3 . cluster ( ) . localNode ( ) . id ( ) ) == NUM00 : ret . get ( ignite3 . cluster ( ) . localNode ( ) . id ( ) ) ; \n\t} \n"}, {"code": "public void stateChanged ( ChangeEvent evt ) { \n\t$F129070 ( scale , slider ) value . setText ( NUM00 + String . valueOf ( scale ) ) ; \n\tsize . setText ( NUM00 + ( width * scale ) + NUM00 + ( height * scale ) + NUM00 ) ; \n\t$F8798 ( preview ) } \n"}, {"code": "public static void writeToFile ( String content , File dstFile ) throws IOException { \n\t$F287736 ( bufferedWriter , dstFile , _BOOL ) bufferedWriter . write ( content ) ; \n\t$F59 ( bufferedWriter ) } \n"}, {"code": "public static boolean isFileURL ( URL url ) { \n\t$F5524 ( protocol , url ) return ( $F86439 ( URL_PROTOCOL_FILE , protocol , URL_PROTOCOL_VFSFILE , URL_PROTOCOL_VFS ) ) ; \n\t} \n"}, {"code": "private void updateStatus ( String relayState , int currentStatus ) { \n\t$F10158 ( tmp , currentStatusMap , relayState ) if ( tmp != null ) { \n\t\t$F79839 ( previousStatus , tmp ) switch ( previousStatus ) { \n\t\t\tcase LOGOUT_SUCCEEDED_STATUS : if ( currentStatus > previousStatus ) { \n\t\t\t\t$F117910 ( currentStatusMap , relayState , currentStatus ) } \n\t\t\t$F597 case LOGOUT_FAILED_STATUS : if ( currentStatus < LOGOUT_FAILED_STATUS ) { \n\t\t\t\t$F117910 ( currentStatusMap , relayState , LOGOUT_PARTIAL_STATUS ) } \n\t\t\t$F597 $F2448 } \n\t\t} \n\telse { \n\t\t$F117910 ( currentStatusMap , relayState , currentStatus ) } \n\t} \n"}, {"code": "public static $F2027 oidStrToInts ( String oid ) throws IOException { \n\t$F115 ( length , oid ) if $F198486 ( oid , length ) $F3496 ( oid ) $F2027 result = new int [ length / NUM00 + NUM00 ] ; \n\tint number = NUM00 ; \n\tfor ( $F119 ( i , length ) ) { \n\t\tint value = NUM00 ; \n\t\tint pos = i ; \n\t\tfor ( ; \n\t\ti < length ; \n\t\ti ++ ) { \n\t\t\t$F1280 ( ch , oid , i ) if ( ( ch < NUM00 ) || ( ch > NUM00 ) ) $F5153 value = NUM00 * value + ( ch - NUM00 ) ; \n\t\t\t} \n\t\tif ( i == pos ) $F3496 ( oid ) result [ number ++ ] = value ; \n\t\t$F15290 ( i , length ) $F1280 ( ch , oid , i ) if ( ch != NUM00 ) $F3496 ( oid ) } \n\tif ( number < NUM00 ) $F3496 ( oid ) return Arrays . copyOfRange ( result , NUM00 , number ) ; \n\t} \n"}, {"code": "public static $F2689 listServers ( SSOToken ssoToken , String siteName ) throws SMSException , SSOException , ConfigurationException { \n\t$F13750 ( members ) String siteId = getSiteId ( ssoToken , siteName ) ; \n\tif ( siteId != null ) { \n\t\t$F2689 allServers = ServerConfiguration . getServers ( ssoToken ) ; \n\t\tfor ( String svr : allServers ) { \n\t\t\tif ( ServerConfiguration . belongToSite ( ssoToken , svr , siteName ) ) $F207 ( members , svr ) } \n\t\t} \n\treturn members ; \n\t} \n"}, {"code": "public static GenericObjectEditorDialog createDialog ( Container parent ) $F13736 ( createDialog , parent ) "}, {"code": "public static boolean containsInLineFeatures ( StyledLayerDescriptor sld ) { \n\tif ( sld != null ) { \n\t\tfor ( StyledLayer layer : sld . layers ( ) ) { \n\t\t\tif ( layer instanceof UserLayer ) { \n\t\t\t\tUserLayer userLayer = ( UserLayer ) layer ; \n\t\t\t\tif ( userLayer . getInlineFeatureDatastore ( ) != null ) { \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public byte decodeBuffer ( InputStream in ) [ ] throws IOException { \n\t$F1538 ( outStream ) decodeBuffer ( in , outStream ) ; \n\treturn $F87573 ( outStream ) ; \n\t} \n"}, {"code": "public static void runFinalization $F72 { \n\tRUNTIME . runFinalization ( ) ; \n\t} \n"}, {"code": "private void displayAllStringDefinedInStringXml $F72 { \n\tSimpleIconFontTextView textView = ( SimpleIconFontTextView ) findViewById ( R . id . text_view_1 ) ; \n\t$F24645 ( list ) list . add ( getString ( R . string . gems_logo ) ) ; \n\tString text = TextUtils . join ( NUM00 , list ) ; \n\ttextView . setText ( text ) ; \n\t} \n"}, {"code": "public static void checkHTTPRequestLength ( HttpServletRequest request ) throws ServletException { \n\tint maxContentLength = SAMLUtils . getMaxContentLength ( ) ; \n\tif ( maxContentLength != NUM00 ) { \n\t\t$F7983 ( length , request ) if ( length == - NUM00 ) { \n\t\t\tthrow new ServletException $F16961 ( bundle ) ; \n\t\t\t} \n\t\tif ( length > maxContentLength ) { \n\t\t\t$F36310 ( debug , length ) throw new ServletException $F16961 ( bundle ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void addForeignKeyConstraint $F19845 ( name , sourceField , targetField , targetTable ) { \n\tForeignKeyConstraint foreignKey = new ForeignKeyConstraint ( name , sourceField , targetField , targetTable ) ; \n\taddForeignKeyConstraint ( foreignKey ) ; \n\t} \n"}, {"code": "$F1 public void onCreate ( Bundle savedInstanceState ) { \n\tsuper . onCreate ( savedInstanceState ) ; \n\tmHandler = new Handler $F72 ; \n\tsetContentView ( R . layout . voice_recognition ) ; \n\tButton speakButton = ( Button ) findViewById ( R . id . btn_speak ) ; \n\tmList = ( ListView ) findViewById ( R . id . list ) ; \n\tmSupportedLanguageView = ( Spinner ) findViewById ( R . id . supported_languages ) ; \n\tPackageManager pm = getPackageManager ( ) ; \n\t$F45549 activities = pm . queryIntentActivities ( new Intent ( RecognizerIntent . ACTION_RECOGNIZE_SPEECH ) , NUM00 ) ; \n\tif $F6887 ( activities ) { \n\t\tspeakButton . setOnClickListener ( this ) ; \n\t\t} \n\telse { \n\t\tspeakButton . setEnabled ( _BOOL ) ; \n\t\t$F15121 ( speakButton ) } \n\trefreshVoiceSettings ( ) ; \n\t} \n"}, {"code": "public void push ( Notification notification , NotificationResponseListener listener ) { \n\tfinal String notificationTopic = notification . getTopic ( ) ; \n\tfinal String topic = notificationTopic == null ? defaultTopic : notificationTopic ; \n\tRequest req = Utils . buildRequest ( client , topic , notification , gateway ) ; \n\tsemaphore . acquireUninterruptibly ( ) ; \n\treq . send ( new ResponseListener ( semaphore , notification , listener ) ) ; \n\t} \n"}, {"code": "$F43588 ( json , key , value , isValueNumeric , _BOOL , Double , escapeJSON ) "}, {"code": "public void updateFromResource $F72 { \n\tfor ( String resource : resources ) { \n\t\tInputStream is = ClassLoader . getSystemResourceAsStream ( resource ) ; \n\t\tLinkedHashMap < EntryType , LinkedHashMap < String , ConfigEntry > > parseResult = parse ( is ) ; \n\t\tfor ( EntryType type : myMap . keySet ( ) ) { \n\t\t\tLinkedHashMap < String , ConfigEntry > dataMappings = myMap . get ( type ) ; \n\t\t\tLinkedHashMap < String , ConfigEntry > resourceMappings = parseResult . get ( type ) ; \n\t\t\tLinkedHashMap < String , ConfigEntry > tempMappings = new LinkedHashMap < String , ConfigEntry > $F72 ; \n\t\t\tLinkedHashSet $F4 keys = new LinkedHashSet $F4 $F72 ; \n\t\t\t$F70469 ( keys , dataMappings ) $F70469 ( keys , resourceMappings ) for ( String key : keys ) { \n\t\t\t\tif $F1710 ( resourceMappings , key ) $F103853 ( tempMappings , key , resourceMappings ) else $F103853 ( tempMappings , key , dataMappings ) } \n\t\t\tmyMap . put ( type , tempMappings ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void deselect ( final int index , final boolean shouldFireEvents ) { \n\tcheckWidget ( ) ; \n\tif $F55119 ( index , items ) $F932 final DLItem item = selection . remove ( index ) ; \n\t$F72524 ( shouldFireEvents , fireSelectionEvent , item ) final List $F255565 deselectedItems = new ArrayList $F255565 $F72 ; \n\titem . setLastAction ( LAST_ACTION . DESELECTION ) ; \n\tdeselectedItems . add ( item ) ; \n\t$F72524 ( shouldFireEvents , fireSelectionChangeEvent , deselectedItems ) redrawTables ( ) ; \n\t} \n"}, {"code": "public boolean isLeaf ( Object nd ) { \n\t$F125481 ( node , nd ) return ! node . hasChildNodes ( ) ; \n\t} \n"}, {"code": "public void addListener ( Listener listener ) { \n\tmListeners . add ( listener ) ; \n\tnotifyServiceDiscovered ( mMatchingDrones ) ; \n\t} \n"}, {"code": "$F1 boolean equals ( Object obj ) ; \n"}, {"code": "private $F1986 parseVector ( String s ) { \n\t$F35105 ( entries , WHITESPACE_PATTERN , s ) $F40939 ( d , entries ) for ( $F1139 ( i , entries ) ) { \n\t\ttry { \n\t\t\td [ i ] = ParseUtil . parseDouble ( entries [ i ] ) ; \n\t\t\t} \n\t\tcatch ( NumberFormatException e ) $F129033 } \n\treturn d ; \n\t} \n"}, {"code": "public void test_create_update $F72 throws IOException { \n\tfinal String id = NUM00 ; \n\tfinal $F529 metadata = $F532 ; \n\tmetadata . put ( FileMetadataSchema . ID , id ) ; \n\t$F16824 ( metadata ) final int version0 ; \n\tfinal long createTime0 ; \n\tfinal $F96 expected0 = new byte $F137708 ; \n\t{ \n\t\tversion0 = repo . create ( metadata ) ; \n\t\tmetadata . put ( FileMetadataSchema . VERSION , Integer . valueOf ( version0 ) ) ; \n\t\tassertEquals ( NUM00 , NUM00 , version0 ) ; \n\t\tRepositoryDocumentImpl doc = ( RepositoryDocumentImpl ) repo . read ( id ) ; \n\t\tcreateTime0 = doc . getVersionCreateTime ( ) ; \n\t\t$F529 actual = doc . asMap ( ) ; \n\t\tassertEquals ( NUM00 , id , actual . get ( FileMetadataSchema . ID ) ) ; \n\t\tassertEquals ( NUM00 , version0 , actual . get ( FileMetadataSchema . VERSION ) ) ; \n\t\tassertEquals ( NUM00 , NUM00 , actual . get ( NUM00 ) ) ; \n\t\tassertEquals ( NUM00 , metadata . size ( ) , actual . size ( ) ) ; \n\t\trepo . copyStream ( id , version0 , new ByteArrayInputStream ( expected0 ) ) ; \n\t\tassertEquals ( NUM00 , expected0 , read ( repo . inputStream ( id , version0 ) ) ) ; \n\t\t} \n\tfinal int version1 ; \n\tfinal long createTime1 ; \n\tfinal $F96 expected1 = new byte $F137708 ; \n\t{ \n\t\t$F16824 ( metadata ) DocumentImpl doc1 = new DocumentImpl ( metadata ) ; \n\t\tdoc1 . copyStream ( expected1 ) ; \n\t\tversion1 = repo . update ( doc1 ) ; \n\t\tassertEquals ( NUM00 , NUM00 , version1 ) ; \n\t\tmetadata . put ( FileMetadataSchema . VERSION , Integer . valueOf ( version1 ) ) ; \n\t\tRepositoryDocumentImpl doc = ( RepositoryDocumentImpl ) repo . read ( id ) ; \n\t\tcreateTime1 = doc . getVersionCreateTime ( ) ; \n\t\tassertNotSame ( NUM00 , NUM00 , createTime1 ) ; \n\t\tassertNotSame ( NUM00 , createTime0 , createTime1 ) ; \n\t\t$F529 actual = doc . asMap ( ) ; \n\t\tassertEquals ( NUM00 , id , actual . get ( FileMetadataSchema . ID ) ) ; \n\t\tassertEquals ( NUM00 , version1 , actual . get ( FileMetadataSchema . VERSION ) ) ; \n\t\tassertEquals ( NUM00 , NUM00 , actual . get ( NUM00 ) ) ; \n\t\tassertEquals ( NUM00 , metadata . size ( ) , actual . size ( ) ) ; \n\t\tassertEquals ( NUM00 , expected1 , read ( repo . inputStream ( id , version1 ) ) ) ; \n\t\tassertEquals ( NUM00 , $F68763 , read ( repo . inputStream ( id , version0 ) ) ) ; \n\t\t{ \n\t\t\tITPS tps = repo . readMetadata ( id , createTime1 - NUM00 ) ; \n\t\t\tITPV tpv = tps . get ( FileMetadataSchema . VERSION ) ; \n\t\t\tassertEquals ( NUM00 , null , tpv . getValue ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public void writeExternal ( ObjectOutput out ) throws IOException { \n\tsuper . writeExternal ( out ) ; \n\tout . writeDouble ( knnDistance ) ; \n\t} \n"}, {"code": "public SessionWrapper ( Session ses ) { \n\tthis . ses = ses ; \n\tthis . time = System . currentTimeMillis ( ) ; \n\t} \n"}, {"code": "public static List < BatchResponse > postWithSingleRequest ( final RequestSpecification requestSpec , final ResponseSpecification responseSpec , final BatchRequest br ) { \n\tfinal List < BatchRequest > $F204 ( batchRequests ) ; \n\tbatchRequests . add ( br ) ; \n\tfinal String jsonifiedRequest = BatchHelper . toJsonString ( batchRequests ) ; \n\tfinal List < BatchResponse > response = BatchHelper . postBatchRequestsWithoutEnclosingTransaction ( requestSpec , responseSpec , jsonifiedRequest ) ; \n\tAssert . assertNotNull ( response ) ; \n\tAssert . assertTrue ( $F3816 ( response ) ) ; \n\treturn response ; \n\t} \n"}, {"code": "public File programDirectory $F72 { \n\treturn programDirectory ; \n\t} \n"}, {"code": "$F1 public void clearRouteSensors $F72 { \n\t$F9404 ( _controlSensorList ) } \n"}, {"code": "public static KEYSTORE_TYPE fromString ( String x ) throws ConfigurationException { \n\tfor ( $F40424 ( currentType , KEYSTORE_TYPE ) ) { \n\t\tif $F280736 ( x , currentType ) return currentType ; \n\t\t} \n\tthrow new ConfigurationException $F10797 ( MessageFormat , x ) ; \n\t} \n"}, {"code": "public ObjectMapper nextLevel ( ObjectMapper level ) { \n\tObjectMapper previous = levelStack . peek ( ) ; \n\tlevelStack . push ( level ) ; \n\treturn previous ; \n\t} \n"}, {"code": "protected static int toDigit ( final char ch , final int index ) throws HexDecodeException { \n\tfinal int digit = Character . digit ( ch , NUM00 ) ; \n\tif ( digit == - NUM00 ) { \n\t\tthrow new HexDecodeException ( NUM00 + ch + NUM00 + index ) ; \n\t\t} \n\treturn digit ; \n\t} \n"}, {"code": "public JSONObject toJson $F72 throws JSONException { \n\t$F60661 ( json ) $F19928 ( jpods ) for ( DiasporaPod pod : pods ) { \n\t\tjpods . put ( pod . toJson ( ) ) ; \n\t\t} \n\t$F545 ( json , jpods ) json . put ( $F132682 ( System ) ) ; \n\treturn json ; \n\t} \n"}, {"code": "public static KeyStore load ( File keyStoreFile , Password password ) throws CryptoException , FileNotFoundException { \n\tKeyStoreType keyStoreType = null ; \n\ttry { \n\t\tkeyStoreType = CryptoFileUtil . detectKeyStoreType ( new FileInputStream ( keyStoreFile ) ) ; \n\t\t} \n\tcatch ( FileNotFoundException ex ) { \n\t\tthrow ex ; \n\t\t} \n\tcatch ( IOException ex ) $F102881 ( res , ex ) $F1338 ( keyStoreType ) return load ( keyStoreFile , password , keyStoreType ) ; \n\t} \n"}, {"code": "$F1 public $F9107 ( pcl , m_pcSupport ) "}, {"code": "$F1219 static boolean isPrecachingEnabled ( Context context ) { \n\t$F111887 ( prefs , PreferenceManager , context ) return prefs . getBoolean ( PREF_IS_PRECACHING_ENABLED , _BOOL ) ; \n\t} \n"}, {"code": "public void and ( LongBitSet other ) { \n\tint pos = Math . min ( numWords , other . numWords ) ; \n\twhile ( -- pos >= NUM00 ) { \n\t\tbits [ pos ] &= other . bits [ pos ] ; \n\t\t} \n\tif ( numWords > other . numWords ) { \n\t\tArrays . fill ( bits , other . numWords , numWords , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public boolean equals ( Object obj ) { \n\tif ( this == obj ) return _BOOL ; \n\tif ( ! ( obj instanceof PrincipalEntry ) ) return _BOOL ; \n\tPrincipalEntry that = ( PrincipalEntry ) obj ; \n\treturn ( $F142656 ( principalClass , that , principalName ) ) ; \n\t} \n"}, {"code": "public boolean isValidLockdownProfile $F72 { \n\ttry { \n\t\treturn _BOOL ; \n\t\t} \n\tcatch ( IllegalArgumentException e ) { \n\t\tLog . w ( TAG , NUM00 , e ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "private int readServerResponse $F72 throws IOException { \n\t$F75240 ( replyBuf ) int c ; \n\tint continuingCode = - NUM00 ; \n\tint code ; \n\tString response ; \n\tserverResponse . setSize ( NUM00 ) ; \n\twhile ( _BOOL ) { \n\t\twhile $F175320 ( c , in ) { \n\t\t\tif ( c == NUM00 ) { \n\t\t\t\tif $F175289 ( c , in ) $F86 ( replyBuf ) } \n\t\t\t$F36813 ( replyBuf , c ) $F41314 ( c ) } \n\t\t$F6947 ( response , replyBuf ) $F4910 ( replyBuf ) if ( logger . isLoggable ( PlatformLogger . Level . FINEST ) ) $F224661 ( logger , serverAddr , response ) if $F1277 ( response ) $F44867 ( code ) else { \n\t\t\ttry { \n\t\t\t\tcode = Integer . parseInt ( $F606 ( response ) ) ; \n\t\t\t\t} \n\t\t\tcatch ( NumberFormatException e ) $F44867 ( code ) catch ( StringIndexOutOfBoundsException e ) $F1448 } \n\t\tserverResponse . addElement ( response ) ; \n\t\tif ( continuingCode != - NUM00 ) { \n\t\t\tif ( code != continuingCode || ( $F22876 ( response ) && $F4431 ( response ) ) ) $F1448 else { \n\t\t\t\tcontinuingCode = - NUM00 ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\telse if ( $F22876 ( response ) && $F4431 ( response ) ) $F34544 ( continuingCode , code ) else $F5153 } \n\treturn code ; \n\t} \n"}, {"code": "$F12423 ( filename , extensions , _BOOL , indexOfExtension , fileExt , getExtension , extension ) "}, {"code": "public FromClause ( Stream streamOne , OuterJoinQualifier outerJoinQualifier , Stream streamTwo ) { \n\tthis ( streamOne ) ; \n\tadd ( streamTwo ) ; \n\touterJoinQualifiers . add ( outerJoinQualifier ) ; \n\t} \n"}, {"code": "private static void decodeAnsiX12Segment ( BitSource bits , StringBuilder result ) throws FormatException { \n\t$F11844 ( cValues ) do { \n\t\t$F46340 ( bits ) $F2847 ( firstByte , bits ) $F32905 ( firstByte ) $F46342 ( parseTwoBytes , firstByte , bits , cValues ) for ( $F6268 ( i ) ) { \n\t\t\tint cValue = cValues [ i ] ; \n\t\t\tif ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue < NUM00 ) $F46359 ( result , cValue ) else if ( cValue < NUM00 ) $F46359 ( result , cValue ) else $F2172 ( FormatException ) } \n\t\t} \n\twhile $F2892 ( bits ) ; \n\t} \n"}, {"code": "public static KdbDatabase createKdbDatabase ( Credentials credentials , KdbHeader kdbHeader , InputStream inputStream ) throws IOException { \n\tDataInput dataInput = new LittleEndianDataInputStream ( inputStream ) ; \n\tcheckSignature ( dataInput ) ; \n\tdeserializeHeader ( kdbHeader , dataInput ) ; \n\tInputStream decryptedInputStream = kdbHeader . createDecryptedInputStream ( credentials . getKey ( ) , inputStream ) ; \n\tMessageDigest digest = Encryption . getMessageDigestInstance ( ) ; \n\tDigestInputStream digestInputStream = new DigestInputStream ( decryptedInputStream , digest ) ; \n\tdataInput = new LittleEndianDataInputStream ( digestInputStream ) ; \n\tKdbDatabase kdbDatabase = new KdbDatabase $F72 ; \n\tKdbGroup lastGroup = ( KdbGroup ) kdbDatabase . getRootGroup ( ) ; \n\tfor ( long group = NUM00 ; \n\tgroup < kdbHeader . getGroupCount ( ) ; \n\tgroup ++ ) $F176272 ( lastGroup , deserializeGroup , dataInput ) for ( long entry = NUM00 ; \n\tentry < kdbHeader . getEntryCount ( ) ; \n\tentry ++ ) { \n\t\tdeserializeEntry ( kdbDatabase , dataInput ) ; \n\t\t} \n\tif ( ! Arrays . equals ( digest . digest ( ) , kdbHeader . getContentHash ( ) ) ) $F4639 $F59 ( digestInputStream ) return kdbDatabase ; \n\t} \n"}, {"code": "private DiffPart decodeAdd $F6803 ( blockSize_S , blockSize_L ) throws UnsupportedEncodingException , DecodingException { \n\tif ( blockSize_S < NUM00 || blockSize_L < NUM00 ) { \n\t\tthrow new DecodingException ( NUM00 + blockSize_S + NUM00 + blockSize_L ) ; \n\t\t} \n\t$F83249 ( s , r , blockSize_S ) $F83249 ( l , r , blockSize_L ) $F1538 ( output ) for ( $F119 ( i , l ) ) { \n\t\toutput . write ( r . readByte ( ) ) ; \n\t\t} \n\tDiffPart part = new DiffPart ( DiffAction . INSERT ) ; \n\tpart . setStart ( s ) ; \n\t$F92634 ( part , output , WIKIPEDIA_ENCODING ) return part ; \n\t} \n"}, {"code": "public void sort $F72 { \n\tArrays . sort ( V , NUM00 , size ( ) ) ; \n\t} \n"}, {"code": "public void rebuildPanel $F72 { \n\tif $F165223 ( activeWorker ) $F11437 ( activeWorker , _BOOL ) $F7600 ( panelImages ) $F8797 ( panelImages ) $F8798 ( scrollPane ) activeWorker = new ImageLoader ( mediaFiles ) ; \n\t$F1699 ( activeWorker ) } \n"}, {"code": "protected void processBytes $F24576 ( buf , off , len ) { \n\tnBytesIn += len ; \n\tif ( len < NUM00 || state . isDone ( ) ) $F665 if ( state == State . ROW_READY ) throw new PngjInputException $F580 ; \n\tif ( inf . needsDictionary ( ) || ! inf . needsInput ( ) ) $F11388 inf . setInput ( buf , off , len ) ; \n\tif ( isCallbackMode ( ) ) { \n\t\twhile ( inflateData ( ) ) { \n\t\t\tint nextRowLen = processRowCallback ( ) ; \n\t\t\tprepareForNextRow ( nextRowLen ) ; \n\t\t\t$F62357 ( isDone , processDoneCallback ) } \n\t\t} \n\telse inflateData ( ) ; \n\t} \n"}, {"code": "$F1 protected String toString ( File obj ) $F33745 ( obj ) "}, {"code": "public final void goToNextPage $F72 { \n\tfinal boolean isLastPage = viewPager . getCurrentItem ( ) == $F113103 ( pages ) ; \n\tif ( ! isLastPage ) { \n\t\tviewPager . setCurrentItem ( viewPager . getCurrentItem ( ) + NUM00 , _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "private static InputStream nullInputStream $F72 throws NullPointerException { \n\tif $F44803 ( currentTimeMillis ) $F1337 $F18043 } \n"}, {"code": "public List < TypeId $F1011 > asList $F72 { \n\treturn $F78193 ( Collections , Arrays , types ) ; \n\t} \n"}, {"code": "private static void deleteRules ( $F3803 batchList , $F38669 rulesToDelete ) { \n\tString deleteStatement = NUM00 + RULES_TABLE + NUM00 ; \n\tfor ( Rule rule : rulesToDelete ) { \n\t\tbatchList . add ( String . format ( deleteStatement , rule . getUid ( ) ) ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean isVisited ( Object element ) $F69736 ( myVisitedElements , element ) "}, {"code": "public AwsIotConnection ( AbstractAwsIotClient client ) $F6988 ( this , client ) "}, {"code": "public static $F4203 $F124768 exceptionallyCompletedFuture ( Throwable throwable ) { \n\tfinal $F124768 future = new $F124768 $F72 ; \n\tfuture . completeExceptionally ( throwable ) ; \n\treturn future ; \n\t} \n"}, {"code": "protected void initForecastErrors ( ArrayList $F6204 model , TimeSeries . DataSequence data ) { \n\tdouble sumErr = NUM00 ; \n\tdouble sumAbsErr = NUM00 ; \n\tdouble sumAbsPercentErr = NUM00 ; \n\tdouble sumErrSquared = NUM00 ; \n\tint processedPoints = NUM00 ; \n\t$F2199 ( n , data ) for ( $F119 ( i , n ) ) { \n\t\tdouble error = model . get ( i ) - data . get ( i ) . value ; \n\t\tsumErr += error ; \n\t\tsumAbsErr += Math . abs ( error ) ; \n\t\tsumAbsPercentErr += Math . abs ( error / data . get ( i ) . value ) ; \n\t\tsumErrSquared += error * error ; \n\t\tprocessedPoints ++ ; \n\t\t} \n\tthis . bias = sumErr / processedPoints ; \n\tthis . mad = sumAbsErr / processedPoints ; \n\tthis . mape = sumAbsPercentErr / processedPoints ; \n\tthis . mse = sumErrSquared / processedPoints ; \n\tthis . sae = sumAbsErr ; \n\terrorsInit = _BOOL ; \n\t} \n"}, {"code": "public boolean checkModifiers ( MouseEvent e ) { \n\treturn e . getModifiers ( ) == modifiers ; \n\t} \n"}, {"code": "public void emitRetainedVars ( GenerateJsVisitor gen ) { \n\tif $F5973 ( retainedVars ) { \n\t\tgen . out ( NUM00 ) ; \n\t\tboolean first = _BOOL ; \n\t\tfor ( String varName : retainedVars ) { \n\t\t\tif ( ! first ) { \n\t\t\t\tgen . out ( NUM00 ) ; \n\t\t\t\t} \n\t\t\tfirst = _BOOL ; \n\t\t\tgen . out ( varName ) ; \n\t\t\t} \n\t\tgen . endLine ( _BOOL ) ; \n\t\t$F725 ( retainedVars ) } \n\t} \n"}, {"code": "public URI $F139050 ( scheme , authority , path , query , fragment ) throws URISyntaxException { \n\t$F284036 ( scheme , path ) $F83 ( uri ) $F43191 ( scheme , uri ) $F189369 ( authority , uri , AUTHORITY_ENCODER ) $F189367 ( path , PATH_ENCODER , uri ) $F189369 ( query , uri , ALL_LEGAL_ENCODER ) $F189369 ( fragment , uri , ALL_LEGAL_ENCODER ) $F25731 ( parseURI , uri , _BOOL ) } \n"}, {"code": "public List < StructuredTranslation > KbestExtractOnHG ( HyperGraph hg , int topN ) { \n\tresetState ( ) ; \n\tif ( hg == null || hg . goalNode == null ) $F2905 ( emptyList ) final List < StructuredTranslation > $F10252 ( kbest , topN ) ; \n\tfor ( $F9993 ( k , topN ) ) { \n\t\tStructuredTranslation translation = getKthStructuredTranslation ( hg . goalNode , k ) ; \n\t\t$F32472 ( translation ) kbest . add ( translation ) ; \n\t\t} \n\treturn kbest ; \n\t} \n"}, {"code": "$F1 public int read $F72 throws IOException { \n\tsynchronized ( lock ) { \n\t\tcheckNotClosed ( ) ; \n\t\tif ( pos != count ) $F7626 ( str , pos ) $F150 } \n\t} \n"}, {"code": "public static boolean isSnapshotFullCopySupported ( URI blockSnapURI , DbClient dbClient ) { \n\tBlockSnapshot $F34887 ( blockObj , dbClient , blockSnapURI ) ; \n\tStorageSystem storage = dbClient . queryObject ( $F41797 , blockObj . getStorageController ( ) ) ; \n\treturn ( storage != null && ( storage . deviceIsType ( Type . openstack ) || storage . deviceIsType ( Type . vnxblock ) || storage . deviceIsType ( Type . ibmxiv ) || storage . deviceIsType ( Type . vmax ) ) ) ; \n\t} \n"}, {"code": "public Iterable < ServiceDescriptor > listServices $F72 { \n\tArrayList < ServiceDescriptor > serviceDescriptors = new ArrayList < ServiceDescriptor > $F72 ; \n\tfor ( FileDescriptor fileDescriptor : fileDescriptors ) { \n\t\tserviceDescriptors . addAll ( fileDescriptor . getServices ( ) ) ; \n\t\t} \n\treturn serviceDescriptors ; \n\t} \n"}, {"code": "private String stripCodeValueSentences ( String string ) $F8480 ( string ) "}, {"code": "public void testDivideRoundHalfEvenNeg2 $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\tString b = NUM00 ; \n\tint bScale = NUM00 ; \n\tString c = NUM00 ; \n\tint resScale = - NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) $F1918 ( bNumber , b , bScale ) BigDecimal result = aNumber . divide ( bNumber , resScale , BigDecimal . ROUND_HALF_EVEN ) ; \n\t$F1925 ( assertEquals , c , result ) $F1928 ( assertEquals , resScale , result ) } \n"}, {"code": "public static double quantile $F7635 ( p , alpha , beta ) { \n\tif ( Double . isNaN ( alpha ) || Double . isNaN ( beta ) || Double . isNaN ( p ) || alpha < NUM00 || beta < NUM00 ) $F6623 ( Double ) if $F19274 ( p ) $F6623 ( Double ) $F14826 ( p ) $F14826 ( p ) if ( p > NUM00 ) { \n\t\treturn NUM00 - rawQuantile ( NUM00 - p , beta , alpha , logBeta ( beta , alpha ) ) ; \n\t\t} \n\telse { \n\t\treturn rawQuantile ( p , alpha , beta , logBeta ( alpha , beta ) ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean validate $F1947 ( cert , signedData , signature ) throws NoSuchAlgorithmException , IOException , Exception { \n\t$F96 certBytes = Base64 . decode ( cert ) ; \n\t$F96 signedDataBytes = Base64 . decode ( signedData ) ; \n\t$F96 signatureBytes = Base64 . decode ( signature ) ; \n\treturn validate ( certBytes , signedDataBytes , signatureBytes ) ; \n\t} \n"}, {"code": "private SharedDeployment createNewDeployment ( GridDeploymentMetadata meta , boolean isCache ) { \n\tassert Thread . holdsLock ( mux ) ; \n\tassert meta . parentLoader ( ) == null ; \n\tIgniteUuid ldrId = IgniteUuid . fromUuid ( ctx . localNodeId ( ) ) ; \n\tGridDeploymentClassLoader clsLdr ; \n\tif ( meta . deploymentMode ( ) == CONTINUOUS || meta . participants ( ) == null ) { \n\t\tclsLdr = new GridDeploymentClassLoader ( ldrId , meta . userVersion ( ) , meta . deploymentMode ( ) , _BOOL , ctx , ctx . config ( ) . getClassLoader ( ) != null ? ctx . config ( ) . getClassLoader ( ) : U . gridClassLoader ( ) , meta . classLoaderId ( ) , meta . senderNodeId ( ) , comm , ctx . config ( ) . getNetworkTimeout ( ) , log , ctx . config ( ) . getPeerClassLoadingLocalClassPathExclude ( ) , ctx . config ( ) . getPeerClassLoadingMissedResourcesCacheSize ( ) , meta . deploymentMode ( ) == CONTINUOUS , _BOOL ) ; \n\t\tif ( meta . participants ( ) != null ) for ( Map . Entry < UUID , IgniteUuid > e : meta . participants ( ) . entrySet ( ) ) clsLdr . register ( $F15245 ( e ) ) ; \n\t\tif $F585 ( log ) log . debug ( NUM00 + NUM00 + clsLdr + NUM00 + meta + NUM00 ) ; \n\t\t} \n\telse { \n\t\tassert meta . deploymentMode ( ) == SHARED ; \n\t\tclsLdr = new GridDeploymentClassLoader ( ldrId , meta . userVersion ( ) , meta . deploymentMode ( ) , _BOOL , ctx , U . gridClassLoader ( ) , meta . participants ( ) , comm , ctx . config ( ) . getNetworkTimeout ( ) , log , ctx . config ( ) . getPeerClassLoadingLocalClassPathExclude ( ) , ctx . config ( ) . getPeerClassLoadingMissedResourcesCacheSize ( ) , _BOOL , _BOOL ) ; \n\t\tif $F585 ( log ) log . debug ( NUM00 + NUM00 + clsLdr + NUM00 + meta + NUM00 ) ; \n\t\t} \n\tSharedDeployment dep = new SharedDeployment ( meta . deploymentMode ( ) , clsLdr , ldrId , meta . userVersion ( ) , meta . alias ( ) ) ; \n\t$F51620 ( log , dep ) if ( isCache ) { \n\t\tList < SharedDeployment > deps = F . addIfAbsent ( cache , meta . userVersion ( ) , new LinkedList < SharedDeployment > $F72 ) ; \n\t\tassert deps != null ; \n\t\tdeps . add ( dep ) ; \n\t\t$F51620 ( log , cache ) } \n\treturn dep ; \n\t} \n"}, {"code": "$F1654 ( seq ) "}, {"code": "public void testAddServletRunAsRole $F72 throws Exception { \n\tString xml = WEBAPP_TEST_HEADER + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 ; \n\t$F168856 ( webXml , WebXmlIo , xml , getEntityResolver ) WebXmlUtils . addServletRunAsRoleName ( webXml , NUM00 , NUM00 ) ; \n\tString roleName = WebXmlUtils . getServletRunAsRoleName ( webXml , NUM00 ) ; \n\tassertEquals ( NUM00 , roleName ) ; \n\t} \n"}, {"code": "public void testCase15 $F72 { \n\t$F70249 $F10679 int aSign = - NUM00 ; \n\tint bSign = - NUM00 ; \n\t$F113721 $F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F10683 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F70256 ( assertEquals , result ) } \n"}, {"code": "public MultiTermQuery ( final String field ) { \n\t$F40806 ( this , Objects , field ) } \n"}, {"code": "public static void printLine ( Object message ) { \n\tif $F931 ( isDisabled ) $F45719 ( printLine , String , message ) } \n"}, {"code": "public void accumulate ( TaggedLogAPIEntity entity ) throws Exception { \n\tAggregateAPIEntity current = root ; \n\tfor ( String groupby : groupbys ) { \n\t\tString tagv = locateGroupbyField ( groupby , entity ) ; \n\t\tif $F4251 ( tagv ) { \n\t\t\ttagv = UNASSIGNED_GROUPBY_ROOT_FIELD_NAME ; \n\t\t\t} \n\t\tMap < String , AggregateAPIEntity > children = current . getEntityList ( ) ; \n\t\tif $F4257 ( children , tagv ) { \n\t\t\tchildren . put ( tagv , factory . create ( ) ) ; \n\t\t\tcurrent . setNumDirectDescendants ( current . getNumDirectDescendants ( ) + NUM00 ) ; \n\t\t\t} \n\t\tAggregateAPIEntity child = children . get ( tagv ) ; \n\t\tif ( counting ) count ( child ) ; \n\t\tfor ( String sumFunctionField : sumFunctionFields ) { \n\t\t\tsum ( child , entity , sumFunctionField ) ; \n\t\t\t} \n\t\tcurrent = child ; \n\t\t} \n\t} \n"}, {"code": "public void testInvalidXml $F72 throws Exception { \n\ttestInvalidGpx ( INVALID_XML_GPX ) ; \n\t} \n"}, {"code": "public String toString ( boolean expand ) { \n\t$F83 ( acc ) toString ( acc , NUM00 , expand ) ; \n\t$F92 ( acc ) } \n"}, {"code": "public static boolean isAccessorPair ( TMember member , TMember member2 ) { \n\treturn ( member instanceof TGetter && member2 instanceof TSetter ) || ( member instanceof TSetter && member2 instanceof TGetter ) ; \n\t} \n"}, {"code": "public static DateFormat createUTCDateFormatter ( String dateFormat ) { \n\tDateFormat formatter = new SimpleDateFormat ( dateFormat ) ; \n\t$F69761 ( formatter , TimeZone ) return formatter ; \n\t} \n"}, {"code": "public void writeLinkedKml ( final String filename , final KmlType kml ) { \n\tif $F3057 ( filename ) $F825 if $F3057 ( filename ) $F825 writeKml ( filename , kml ) ; \n\t} \n"}, {"code": "String destinationFilePath $F72 { \n\treturn destinationFilePath ; \n\t} \n"}, {"code": "$F1 public void refreshUsersOrGroupsListFromServer $F72 { \n\tshowLoadingDialog ( getString ( R . string . common_loading ) ) ; \n\tGetShareWithUsersAsyncTask getTask = new GetShareWithUsersAsyncTask ( this ) ; \n\t$F131 params = { \n\t\tgetFile ( ) , getAccount ( ) , getStorageManager ( ) } \n\t; \n\tgetTask . execute ( params ) ; \n\t} \n"}, {"code": "public BootPanel $F72 $F5795 ( initComponents ) "}, {"code": "private List $F29867 defaultHeaders $F72 { \n\t$F121432 ( dateFormat ) List $F29867 $F204 ( headers ) ; \n\theaders . add ( new BasicHeader ( NUM00 , $F52170 ( dateFormat ) ) ) ; \n\treturn headers ; \n\t} \n"}, {"code": "public AemParsys clear $F72 { \n\tList < WebElement > list = currentScope . findElements ( By . cssSelector ( SELECTOR_FOR_COMPONENT_IN_PARSYS ) ) ; \n\t$F22620 ( list ) return this ; \n\t} \n"}, {"code": "protected RequestHandle sendRequest ( DefaultHttpClient client , HttpContext httpContext , HttpUriRequest uriRequest , String contentType , ResponseHandlerInterface responseHandler , Context context ) { \n\tif ( contentType != null ) { \n\t\turiRequest . setHeader ( NUM00 , contentType ) ; \n\t\t} \n\tresponseHandler . setRequestHeaders ( uriRequest . getAllHeaders ( ) ) ; \n\tresponseHandler . setRequestURI ( uriRequest . getURI ( ) ) ; \n\t$F44535 request = threadPool . submit ( new AsyncHttpRequest ( client , httpContext , uriRequest , responseHandler ) ) ; \n\tif ( context != null ) { \n\t\tList $F265217 requestList = requestMap . get ( context ) ; \n\t\tif ( requestList == null ) { \n\t\t\trequestList = new LinkedList $F265217 $F72 ; \n\t\t\trequestMap . put ( context , requestList ) ; \n\t\t\t} \n\t\trequestList . add ( new WeakReference < $F44535 > ( request ) ) ; \n\t\t} \n\treturn new RequestHandle ( request ) ; \n\t} \n"}, {"code": "private void registerNewClient ( JsonObject jData ) { \n\tClient newClient = gson . fromJson ( jData , Client . class ) ; \n\tif $F45040 ( newClient ) { \n\t\taddClient ( newClient ) ; \n\t\tbroadcastNewClient ( newClient ) ; \n\t\tsendClientList ( newClient ) ; \n\t\t} \n\telse { \n\t\tlogger . log ( Level . WARNING , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void parse ( InputStream in , String baseURI ) throws IOException , RDFParseException , RDFHandlerException { \n\t$F826 ( in ) $F826 ( baseURI ) InputSource inputSource = new InputSource ( new BOMInputStream ( in , _BOOL ) ) ; \n\tinputSource . setSystemId ( baseURI ) ; \n\tparse ( inputSource ) ; \n\t} \n"}, {"code": "public static Date parseDate ( String dateValue , Collection dateFormats ) throws DateParseException { \n\t$F826 ( dateValue ) $F13265 ( dateFormats , DEFAULT_PATTERNS ) $F91666 ( dateValue ) SimpleDateFormat dateParser = null ; \n\t$F242733 ( formatIter , dateFormats ) while $F2921 ( formatIter ) { \n\t\tfinal String format = $F2775 ( formatIter ) ; \n\t\tif ( dateParser == null ) { \n\t\t\t$F85877 ( dateParser , format , Locale ) ; \n\t\t\t$F69761 ( dateParser , TimeZone ) } \n\t\telse { \n\t\t\tdateParser . applyPattern ( format ) ; \n\t\t\t} \n\t\ttry $F57093 ( dateParser , dateValue ) catch ( final ParseException pe ) $F845 } \n\t$F91673 ( dateValue ) } \n"}, {"code": "public JSONObject remove ( String name ) { \n\t$F896 ( name ) int index = indexOf ( name ) ; \n\tif ( index != - NUM00 ) $F27228 ( table , index , names , values ) return this ; \n\t} \n"}, {"code": "EdgeMap $F40167 findLoops ( Deque $F40167 code , Map < Block , Block > idom , SetMap < Block , Edge > pred ) { \n\tEdgeMap $F40167 loops = new EdgeMap $F40167 $F72 ; \n\tfor ( Block b : code ) for ( Edge s : b . succ ( ) ) if ( isLoop ( s , idom ) ) { \n\t\tverboseStatus ( NUM00 + s ) ; \n\t\tBlock h = s . to ; \n\t\tSet $F40167 loop = loops . get ( h ) ; \n\t\tSet $F40167 work = new TreeSet $F40167 $F72 ; \n\t\tfor ( Edge p : pred . get ( h ) ) { \n\t\t\tif ( isLoop ( p , idom ) && ! loop . contains ( p . from ) && p . from != h ) { \n\t\t\t\tloop . add ( p . from ) ; \n\t\t\t\twork . add ( p . from ) ; \n\t\t\t\t} \n\t\t\t} \n\t\twhile $F5973 ( work ) { \n\t\t\tBlock x = getBlock ( work ) ; \n\t\t\tfor ( Edge p : pred . get ( x ) ) { \n\t\t\t\tif ( p . from != h && ! loop . contains ( p . from ) ) { \n\t\t\t\t\tloop . add ( p . from ) ; \n\t\t\t\t\twork . add ( p . from ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn loops ; \n\t} \n"}, {"code": "public $F2027 readLine $F72 { \n\tint record [ ] = new int [ MAX_LEN ] ; \n\tint checksum = NUM00 ; \n\ttry { \n\t\twhile ( ( $F7614 ( charIn , buffIn ) == NUM00 ) || ( charIn == NUM00 ) ) $F845 if ( charIn != NUM00 ) { \n\t\t\t$F15998 ( log , lineNo ) return new int [ ] { \n\t\t\t\t- NUM00 } \n\t\t\t; \n\t\t\t} \n\t\t} \n\tcatch ( IOException e ) { \n\t\tJOptionPane . showMessageDialog ( this , NUM00 , NUM00 , JOptionPane . ERROR_MESSAGE ) ; \n\t\tif $F585 ( log ) $F146649 ( log , e ) } \n\trecord [ LEN ] = rdHexByte ( ) ; \n\tchecksum += record [ LEN ] ; \n\trecord [ ADDRH ] = rdHexByte ( ) ; \n\tchecksum += record [ ADDRH ] ; \n\trecord [ ADDRL ] = rdHexByte ( ) ; \n\tchecksum += record [ ADDRL ] ; \n\trecord [ TYPE ] = rdHexByte ( ) ; \n\tchecksum += record [ TYPE ] ; \n\taddress = ( address & NUM00 ) + record [ ADDRH ] * NUM00 + record [ ADDRL ] ; \n\ttype = record [ TYPE ] ; \n\tif ( type != END ) { \n\t\tlen = record [ LEN ] ; \n\t\tfor ( $F9993 ( i , len ) ) { \n\t\t\trecord [ TYPE + i ] = rdHexByte ( ) ; \n\t\t\tchecksum += record [ TYPE + i ] ; \n\t\t\t} \n\t\t} \n\tint fileCheck = rdHexByte ( ) ; \n\tif ( ( ( checksum + fileCheck ) & NUM00 ) != NUM00 ) $F17663 ( log , lineNo ) lineNo ++ ; \n\treturn record ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "private void generateHiveTestFiles $F72 throws FileNotFoundException { \n\ttry ( PrintWriter writerA = new PrintWriter ( $F109794 ( testWorkDir ) ) ; \n\tPrintWriter writerB = new PrintWriter ( $F109794 ( testWorkDir ) ) ) { \n\t\tchar sep = NUM00 ; \n\t\tint idB = NUM00 ; \n\t\tint idA = NUM00 ; \n\t\tint v = NUM00 ; \n\t\tfor ( $F6268 ( i ) ) { \n\t\t\twriterA . print ( idA ++ ) ; \n\t\t\twriterA . print ( sep ) ; \n\t\t\twriterA . println ( idB ) ; \n\t\t\twriterB . print ( idB ++ ) ; \n\t\t\twriterB . print ( sep ) ; \n\t\t\twriterB . println ( v += NUM00 ) ; \n\t\t\twriterB . print ( idB ++ ) ; \n\t\t\twriterB . print ( sep ) ; \n\t\t\twriterB . println ( v += NUM00 ) ; \n\t\t\t} \n\t\t$F1206 ( writerA ) $F1206 ( writerB ) } \n\t} \n"}, {"code": "public void renameEditorPanel ( Editor panel ) { \n\t$F110977 ( panelsList ) for ( $F2277 ( i , panelsList ) ) { \n\t\t$F16628 ( o , panelsList , i ) if ( o == panel ) { \n\t\t\tJCheckBoxMenuItem r = ( JCheckBoxMenuItem ) panelsSubMenu . getItem ( i ) ; \n\t\t\tr . setText ( panel . getTitle ( ) ) ; \n\t\t\t$F665 } \n\t\t} \n\t} \n"}, {"code": "private boolean fitsAsSingleLine ( int col ) { \n\treturn ( col + singleLineWidth ( ) <= PcalTLAGen . wrapColumn ) || ( bodyFormulas . sf == null && $F45555 ( prcdFormulas ) ) ; \n\t} \n"}, {"code": "$F1 protected void before $F72 throws Throwable { \n\tpreviousThreads = Thread . getAllStackTraces ( ) ; \n\t} \n"}, {"code": "public void sphericalToWorld ( Vector3 vec ) { \n\tif ( pjUnprojected == null ) { \n\t\tString projStr = NUM00 + projInfo . getSemiMajorAxis ( ) + NUM00 + projInfo . getSemiMinorAxis ( ) + NUM00 ; \n\t\tpjUnprojected = Proj4 . newInstance ( projStr ) ; \n\t\t} \n\tif ( pjProjected == null ) { \n\t\tpjProjected = Proj4 . newInstance ( proj4String ) ; \n\t\t} \n\ttry { \n\t\tvec . toArray ( coord ) ; \n\t\tcoord [ NUM00 ] = Math . toRadians ( coord [ NUM00 ] ) ; \n\t\tcoord [ NUM00 ] = Math . toRadians ( coord [ NUM00 ] ) ; \n\t\tpjUnprojected . transform ( pjProjected , coord ) ; \n\t\tvec . setX ( coord [ NUM00 ] ) ; \n\t\tvec . setY ( coord [ NUM00 ] ) ; \n\t\t} \n\t$F1516 ( e ) } \n"}, {"code": "public String replace ( CharSequence target , CharSequence replacement ) { \n\t$F896 ( target ) $F896 ( replacement ) $F1822 ( targetString , target ) int matchStart = indexOf ( targetString , NUM00 ) ; \n\t$F5881 ( matchStart , this ) $F1822 ( replacementString , replacement ) $F1749 ( targetLength , targetString ) if ( targetLength == NUM00 ) { \n\t\tint resultLength = count + ( count + NUM00 ) * replacementString . length ( ) ; \n\t\t$F7542 ( result , resultLength ) result . append ( replacementString ) ; \n\t\tint end = offset + count ; \n\t\tfor ( int i = offset ; \n\t\ti != end ; \n\t\t++ i ) { \n\t\t\t$F6939 ( result , value , i ) result . append ( replacementString ) ; \n\t\t\t} \n\t\t$F92 ( result ) } \n\t$F7542 ( result , count ) int searchStart = NUM00 ; \n\tdo { \n\t\tresult . append ( value , offset + searchStart , matchStart - searchStart ) ; \n\t\tresult . append ( replacementString ) ; \n\t\tsearchStart = matchStart + targetLength ; \n\t\t} \n\twhile ( ( matchStart = indexOf ( targetString , searchStart ) ) != - NUM00 ) ; \n\tresult . append ( value , offset + searchStart , count - searchStart ) ; \n\t$F92 ( result ) } \n"}, {"code": "public static String encodeUrl ( final String str ) $F73165 ( encode , str ) "}, {"code": "public void drawRenderedImage ( RenderedImage img , AffineTransform xform ) { \n\t$F2329 ( img ) mPrintMetrics . drawImage ( this , img ) ; \n\tmDrawingArea . addInfinite ( ) ; \n\t} \n"}, {"code": "private long buildSize ( int durationInSeconds , LinkInfo linfo ) { \n\tlong result = - NUM00 ; \n\tdouble bitRateSum = NUM00 ; \n\tswitch ( linfo . fmt ) { \n\t\t$F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 + NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 / NUM00 ; \n\t\t$F597 $F3366 bitRateSum = NUM00 / NUM00 ; \n\t\t$F597 } \n\tbitRateSum = bitRateSum * NUM00 * NUM00 ; \n\tresult = ( long ) ( Math . ceil ( ( bitRateSum * durationInSeconds ) / NUM00 ) ) ; \n\treturn result ; \n\t} \n"}, {"code": "private void skipToEndOfLine $F72 { \n\tfor ( $F93943 ( pos , in ) ) { \n\t\t$F1280 ( c , in , pos ) if $F37111 ( c ) $F56675 ( pos ) } \n\t} \n"}, {"code": "public IndependenceTest indTestSubset ( List vars ) $F1337 "}, {"code": "$F1 public void actOn ( File f ) { \n\tBufferedReader reader = null ; \n\ttry { \n\t\t$F438 ( reader , f ) announceSeedsFromReader ( reader ) ; \n\t\t} \n\tcatch ( FileNotFoundException fnf ) $F55754 ( logger , Level , fnf ) $F18090 ( IOUtils , reader ) } \n"}, {"code": "public static String formatMillis ( int millis ) { \n\tString result = NUM00 ; \n\tint hr = millis / NUM00 ; \n\tmillis %= NUM00 ; \n\tint min = millis / NUM00 ; \n\tmillis %= NUM00 ; \n\tint sec = millis / NUM00 ; \n\tif ( hr > NUM00 ) { \n\t\tresult += hr + NUM00 ; \n\t\t} \n\tif ( min >= NUM00 ) { \n\t\tif ( min > NUM00 ) { \n\t\t\tresult += min + NUM00 ; \n\t\t\t} \n\t\telse $F58266 ( result , min ) } \n\tif ( sec > NUM00 ) { \n\t\tresult += sec ; \n\t\t} \n\telse { \n\t\tresult += NUM00 + sec ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F16267 ( propertyName , listener , propertyChangeSupport ) "}, {"code": "public File createNewFolder ( File containingDir ) throws IOException { \n\t$F31068 ( containingDir ) File newFolder = createFileObject ( containingDir , newFolderString ) ; \n\tint i = NUM00 ; \n\twhile ( newFolder . exists ( ) && i < NUM00 ) { \n\t\tnewFolder = createFileObject ( containingDir , MessageFormat . format ( newFolderNextString , new Integer ( i ) ) ) ; \n\t\ti ++ ; \n\t\t} \n\tif $F3428 ( newFolder ) $F144276 ( newFolder ) else $F1908 ( newFolder ) return newFolder ; \n\t} \n"}, {"code": "public ResourcesPoet addTypedArray ( String name , $F254768 ( values ) ) { \n\t$F8382 ( element , document ) $F34765 ( element , name ) for ( String value : values ) { \n\t\t$F8382 ( valueElement , document ) $F5849 ( valueElement , document , value ) element . appendChild ( valueElement ) ; \n\t\t} \n\tresourceElement . appendChild ( element ) ; \n\treturn this ; \n\t} \n"}, {"code": "public boolean addSubAction ( final ConfAction actionConf ) throws GeneralException , ConfigurationException { \n\tif ( actionConf . getType ( ) != null ) { \n\t\tfinal SubAction sub = SubAction . factory ( actionConf . getType ( ) , actionConf ) ; \n\t\tif ( sub == null ) { \n\t\t\tif ( Cfg . DEBUG ) { \n\t\t\t\tCheck . log ( TAG + NUM00 + actionConf . getType ( ) ) ; \n\t\t\t\t} \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tlist . add ( sub ) ; \n\t\tif ( sub instanceof SubActionSlow ) { \n\t\t\tsetQueue ( MAIN_QUEUE ) ; \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\t$F135076 ( Cfg , Check , TAG ) return _BOOL ; \n\t\t} \n\t} \n"}, {"code": "void fillEntryTree ( Set < PageLeafEntry > entries , Row row ) { \n\tint ptr = _rowHead ; \n\t$F96 buffer = _buffer ; \n\twhile ( ptr < BLOCK_SIZE ) { \n\t\tint code = buffer [ ptr ] & CODE_MASK ; \n\t\tint len = getLength ( code , row ) ; \n\t\tif ( code == INSERT || code == REMOVE ) { \n\t\t\tPageLeafEntry entry = new PageLeafEntry ( this , row , ptr , len , code ) ; \n\t\t\tentries . add ( entry ) ; \n\t\t\t} \n\t\tptr += len ; \n\t\t} \n\t} \n"}, {"code": "public static $F50398 boolean containsAtleastOne ( Collection $F50398 left , Collection $F50398 right ) { \n\t$F6973 ( left , right , _BOOL ) for ( S id : left ) $F51680 ( right , id , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "private boolean processKeyUp ( int keyCode ) { \n\tif ( keyCode == KeyEvent . KEYCODE_ESCAPE || keyCode == KeyEvent . KEYCODE_BACK ) $F27427 ( dismiss , _BOOL ) else if ( keyCode == KeyEvent . KEYCODE_TAB ) { \n\t\tif ( mInKbMode ) { \n\t\t\t$F121010 ( isTypedTimeFullyLegal , finishKbMode , _BOOL ) return _BOOL ; \n\t\t\t} \n\t\t} \n\telse if ( keyCode == KeyEvent . KEYCODE_ENTER ) { \n\t\tif ( mInKbMode ) { \n\t\t\t$F1485 ( isTypedTimeFullyLegal , _BOOL ) finishKbMode ( _BOOL ) ; \n\t\t\t} \n\t\tif ( mCallback != null ) { \n\t\t\tmCallback . onTimeSet ( mTimePicker , mTimePicker . getHours ( ) , mTimePicker . getMinutes ( ) ) ; \n\t\t\t} \n\t\tdismiss ( ) ; \n\t\treturn _BOOL ; \n\t\t} \n\telse if ( keyCode == KeyEvent . KEYCODE_DEL ) { \n\t\tif ( mInKbMode ) { \n\t\t\tif $F5973 ( mTypedTimes ) { \n\t\t\t\tint deleted = deleteLastTypedKey ( ) ; \n\t\t\t\tString deletedKeyStr ; \n\t\t\t\t$F218511 ( deleted , getAmOrPmKeyCode , AM , deletedKeyStr , mAmText , PM , mPmText , String , getValFromKeyCode ) Utils . tryAccessibilityAnnounce ( mTimePicker , String . format ( mDeletedKeyFormat , deletedKeyStr ) ) ; \n\t\t\t\tupdateDisplay ( _BOOL ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse $F218536 ( keyCode , KeyEvent , mIs24HourMode , getAmOrPmKeyCode , AM , PM , mInKbMode , mTimePicker , Log , TAG , _BOOL , mTypedTimes , tryStartingKbMode , addKeyIfLegal , updateDisplay ) return _BOOL ; \n\t} \n"}, {"code": "public void assertDurationIsInRange ( long expectedMillis ) { \n\tlong minimum = ( long ) ( ( double ) expectedMillis * NUM00 ) ; \n\tlong maximum = Math . max ( ( long ) ( ( double ) expectedMillis * NUM00 ) , NUM00 ) ; \n\tlong waitMillis = Math . max ( expectedMillis * NUM00 , NUM00 ) ; \n\tlong duration = getDurationMillis ( waitMillis ) ; \n\tif ( duration < minimum ) { \n\t\tAssert . fail ( NUM00 + expectedMillis + NUM00 + minimum + NUM00 + duration ) ; \n\t\t} \n\telse if ( duration > maximum ) { \n\t\tAssert . fail ( NUM00 + expectedMillis + NUM00 + maximum + NUM00 + duration ) ; \n\t\t} \n\t} \n"}, {"code": "public void logDiff $F19845 ( id , field , db , hw ) { \n\tStringBuffer diffBuffer = new StringBuffer $F4456 ( String , id , field ) ; \n\tif ( $F4250 ( db ) || db . equalsIgnoreCase ( NO_MATCHING_ENTRY ) ) $F181853 ( diffBuffer , String , hw ) else if ( $F4250 ( hw ) || hw . equalsIgnoreCase ( NO_MATCHING_ENTRY ) ) $F181853 ( diffBuffer , String , db ) else { \n\t\tdiffBuffer . append ( String . format ( NUM00 , db != null ? db : NUM00 , hw != null ? hw : NUM00 ) ) ; \n\t\t} \n\tmsgs . append ( $F5528 ( diffBuffer ) ) ; \n\tif ( log != null ) { \n\t\t$F17749 ( log , diffBuffer ) } \n\t} \n"}, {"code": "public FieldFrameBodyIMG ( Lyrics3Image image ) $F207 ( images , image ) "}, {"code": "public AbstractResource ( String mimetype ) { \n\tthis ( mimetype , System . currentTimeMillis ( ) ) ; \n\t} \n"}, {"code": "private Parameters $F72 { \n\tfor ( $F2774 ( i , arguments ) ) { \n\t\t$F2778 ( arg , i ) $F37156 ( arg ) if $F14943 ( arg ) $F11416 ( arg ) $F1384 ( colonIndex , arg ) String key ; \n\t\tString value ; \n\t\tif ( colonIndex >= NUM00 ) $F60269 ( key , arg , colonIndex , value ) else { \n\t\t\t$F64779 ( key , arg ) value = NUM00 ; \n\t\t\t} \n\t\tif $F2200 ( allowedKeys , key ) throw new IllegalArgumentException ( NUM00 + arg . substring ( NUM00 ) + NUM00 + StringUtil . toCommaDelimitedString ( allowedKeys ) ) ; \n\t\thashtable . put ( key , value ) ; \n\t\t} \n\tfor ( $F2774 ( i , requiredKeys ) ) { \n\t\t$F2778 ( requiredKey , i ) if $F15257 ( hashtable , requiredKey ) $F11416 ( requiredKey ) } \n\t} \n"}, {"code": "public List < TLV > initRespondSmp $F22381 ( question , secret , initiating ) throws OtrException { \n\tif ( question != null && ! initiating ) $F824 $F96 our_fp = Hex . decode ( keyManager . getLocalFingerprint ( sessionID ) ) ; \n\tString remoteFingerprint = keyManager . getRemoteFingerprint ( sessionID ) ; \n\tif ( remoteFingerprint == null ) throw new OtrException $F580 ; \n\t$F96 their_fp = Hex . decode ( remoteFingerprint ) ; \n\t$F96 sessionId ; \n\ttry { \n\t\tsessionId = computeSessionId ( session . getS ( ) ) ; \n\t\t} \n\tcatch ( SMException ex ) { \n\t\tthrow new OtrException ( ex ) ; \n\t\t} \n\t$F96 bytes = secret . getBytes ( SerializationUtils . UTF8 ) ; \n\tint combined_buf_len = NUM00 + sessionId . length + bytes . length ; \n\t$F2175 ( combined_buf , combined_buf_len ) combined_buf [ NUM00 ] = NUM00 ; \n\tif ( initiating ) { \n\t\t$F10319 ( System , our_fp , combined_buf ) $F10319 ( System , their_fp , combined_buf ) } \n\telse { \n\t\t$F10319 ( System , their_fp , combined_buf ) $F10319 ( System , our_fp , combined_buf ) } \n\t$F7057 ( System , sessionId , combined_buf ) System . arraycopy ( bytes , NUM00 , combined_buf , NUM00 + sessionId . length , bytes . length ) ; \n\tMessageDigest sha256 ; \n\ttry $F14527 ( sha256 , MessageDigest ) catch ( NoSuchAlgorithmException ex ) { \n\t\tthrow new OtrException ( ex ) ; \n\t\t} \n\t$F96 combined_secret = sha256 . digest ( combined_buf ) ; \n\t$F96 smpmsg ; \n\ttry { \n\t\tif ( initiating ) { \n\t\t\tsmpmsg = SM . step1 ( smstate , combined_secret ) ; \n\t\t\t} \n\t\telse { \n\t\t\tsmpmsg = SM . step2b ( smstate , combined_secret ) ; \n\t\t\t} \n\t\t} \n\tcatch ( SMException ex ) { \n\t\tthrow new OtrException ( ex ) ; \n\t\t} \n\tif ( question != null ) { \n\t\tbytes = question . getBytes ( SerializationUtils . UTF8 ) ; \n\t\t$F96 qsmpmsg = new byte [ bytes . length + NUM00 + smpmsg . length ] ; \n\t\t$F7057 ( System , bytes , qsmpmsg ) System . arraycopy ( smpmsg , NUM00 , qsmpmsg , bytes . length + NUM00 , smpmsg . length ) ; \n\t\tsmpmsg = qsmpmsg ; \n\t\t} \n\tTLV sendtlv = new TLV ( initiating ? ( question != null ? TLV . SMP1Q : TLV . SMP1 ) : TLV . SMP2 , smpmsg ) ; \n\tsmstate . nextExpected = initiating ? SM . EXPECT2 : SM . EXPECT3 ; \n\treturn makeTlvList ( sendtlv ) ; \n\t} \n"}, {"code": "private double melToLinFreq ( double inputFreq ) { \n\treturn ( NUM00 * ( Math . pow ( NUM00 , ( inputFreq / NUM00 ) ) - NUM00 ) ) ; \n\t} \n"}, {"code": "public RoundedIconGenerator ( int iconWidthPx , int iconHeightPx , int cornerRadiusPx , int backgroundColor , float textSizePx ) { \n\tmIconWidthPx = iconWidthPx ; \n\tmIconHeightPx = iconHeightPx ; \n\tmCornerRadiusPx = cornerRadiusPx ; \n\tmBackgroundRect = new RectF ( NUM00 , NUM00 , mIconWidthPx , mIconHeightPx ) ; \n\tmBackgroundPaint = new Paint ( Paint . ANTI_ALIAS_FLAG ) ; \n\tmBackgroundPaint . setColor ( backgroundColor ) ; \n\tmTextPaint = new TextPaint ( Paint . ANTI_ALIAS_FLAG ) ; \n\tmTextPaint . setColor ( Color . WHITE ) ; \n\tmTextPaint . setFakeBoldText ( _BOOL ) ; \n\tmTextPaint . setTextSize ( textSizePx ) ; \n\t$F319 ( textFontMetrics , mTextPaint ) mTextHeight = ( float ) Math . ceil ( textFontMetrics . bottom - textFontMetrics . top ) ; \n\tmTextYOffset = - textFontMetrics . top ; \n\t} \n"}, {"code": "public static $F96 randomBytes ( int size ) { \n\t$F2175 ( bytes , size ) seededRandom . nextBytes ( bytes ) ; \n\treturn bytes ; \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\t$F280 ( BfString ) $F84 ( BfString ) if ( m_starting != null ) { \n\t\t$F84 ( BfString ) $F16690 ( BfString , startSetToString ) $F84 ( BfString ) } \n\tif ( m_threshold != - Double . MAX_VALUE ) { \n\t\tBfString . append ( NUM00 + Utils . doubleToString ( m_threshold , NUM00 , NUM00 ) + NUM00 ) ; \n\t\t} \n\t$F92 ( BfString ) } \n"}, {"code": "protected void arraycopy $F24576 ( buf , pos , length ) { \n\tmMessage . write ( buf , pos , length ) ; \n\tmPosition = mPosition + length ; \n\t} \n"}, {"code": "public boolean expired $F72 { \n\treturn System . currentTimeMillis ( ) - time > DFLT_EXPIRATION_TIMEOUT ; \n\t} \n"}, {"code": "public JSONObject put ( String key , boolean value ) throws JSONException { \n\tput ( key , value ? Boolean . TRUE : Boolean . FALSE ) ; \n\treturn this ; \n\t} \n"}, {"code": "$F13735 ( prefix , namespace , attName , attValue , xmlWriter ) "}, {"code": "private void handleSelection ( View view , Item item , int position ) { \n\tif ( ! item . isSelectable ( ) ) $F932 if ( item . isSelected ( ) && ! mAllowDeselection ) $F932 boolean selected = _BOOL ; \n\tif ( mPositionBasedStateManagement ) { \n\t\tselected = mSelections . contains ( position ) ; \n\t\t} \n\telse { \n\t\tselected = item . isSelected ( ) ; \n\t\t} \n\tif ( mSelectWithItemUpdate || view == null ) { \n\t\t$F14406 ( mMultiSelect , deselect ) if ( selected ) { \n\t\t\tdeselect ( position ) ; \n\t\t\t} \n\t\telse { \n\t\t\tselect ( position ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( ! mMultiSelect ) { \n\t\t\tif ( mPositionBasedStateManagement ) { \n\t\t\t\t$F116323 ( entries , mSelections ) while $F2921 ( entries ) { \n\t\t\t\t\tInteger pos = entries . next ( ) ; \n\t\t\t\t\tif ( pos != position ) { \n\t\t\t\t\t\tdeselect ( pos , entries ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F11868 selections = getSelections ( ) ; \n\t\t\t\tfor ( int pos : selections ) { \n\t\t\t\t\tif ( pos != position ) { \n\t\t\t\t\t\tdeselect ( pos ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\titem . withSetSelected ( ! selected ) ; \n\t\tview . setSelected ( ! selected ) ; \n\t\tif ( mSelectionListener != null ) mSelectionListener . onSelectionChanged ( item , ! selected ) ; \n\t\tif ( mPositionBasedStateManagement ) { \n\t\t\tif ( selected ) { \n\t\t\t\t$F80306 ( mSelections , position ) } \n\t\t\telse $F207 ( mSelections , position ) } \n\t\t} \n\t} \n"}, {"code": "public boolean canInvoke ( MDepreciationWorkfile assetwk , MAssetAcct assetAcct , int A_Current_Period , BigDecimal Accum_Dep ) { \n\tif ( assetwk == null ) $F433305 ( log , _BOOL ) int offset = NUM00 ; \n\tint lifePeriods = assetwk . getUseLifeMonths ( assetwk . isFiscal ( ) ) ; \n\tboolean ok = ( offset <= A_Current_Period ) ; \n\tif ( CLogMgt . isLevelFinest ( ) ) log . finest ( NUM00 + A_Current_Period + NUM00 + lifePeriods + NUM00 + offset + NUM00 + ok ) ; \n\treturn ok ; \n\t} \n"}, {"code": "$F99425 ( os , writeInt , CACHE_MAGIC , writeString , key , etag , writeLong , serverDate , lastModified , ttl , softTtl , writeStringStringMap , responseHeaders , _BOOL , VolleyLog , e ) "}, {"code": "public $F96 bytes $F72 throws HttpRequestException { \n\tfinal ByteArrayOutputStream output = byteStream ( ) ; \n\ttry $F359906 ( copy , buffer , output ) $F189262 ( e ) $F11316 ( output ) } \n"}, {"code": "public void fadeOutAllLayers $F72 { \n\tmTransitionState = TRANSITION_STARTING ; \n\tArrays . fill ( mIsLayerOn , _BOOL ) ; \n\tinvalidateSelf ( ) ; \n\t} \n"}, {"code": "public TreeMap < Float , $F197452 > packModifiedFirstFitDescending $F72 $F39976 "}, {"code": "public void addTextChangeListener ( final FilterQueryChangeListener textChangeListener ) $F207 ( listeners , textChangeListener ) "}, {"code": "$F1 public Iterator < Profile > iterator $F72 $F16048 ( profiles ) "}, {"code": "private boolean startsWithSpace ( String str ) { \n\treturn $F35624 ( str ) && $F4431 ( str ) ; \n\t} \n"}, {"code": "$F16698 ( path , uriPrefix ) "}, {"code": "private int keyToLevel ( String key ) { \n\t$F6542 ( token , key ) return $F33765 ( token ) ; \n\t} \n"}, {"code": "public boolean mouseDragged ( MouseEvent e ) { \n\tif ( grabbed_plot_graphics_ ) { \n\t\t$F121945 ( x , e ) $F55855 ( y , e ) int dx = x - prevX ; \n\t\tint dy = y - prevY ; \n\t\tplotX += dx ; \n\t\tplotY += dy ; \n\t\tprevX = x ; \n\t\tprevY = y ; \n\t\tgraph . resize ( plotX , plotY , plotWidth , plotHeight ) ; \n\t\tOMGraphicList plotGraphics = graph . getPlotGraphics ( ) ; \n\t\tplotGraphics . generate ( getProjection ( ) , _BOOL ) ; \n\t\trepaint ( ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void initCachingHttpHeadersFilter ( ServletContext servletContext , EnumSet < DispatcherType > disps ) { \n\t$F980 ( log ) FilterRegistration . Dynamic cachingHttpHeadersFilter = servletContext . addFilter ( NUM00 , new CachingHttpHeadersFilter ( jHipsterProperties ) ) ; \n\tcachingHttpHeadersFilter . addMappingForUrlPatterns ( disps , _BOOL , NUM00 ) ; \n\tcachingHttpHeadersFilter . addMappingForUrlPatterns ( disps , _BOOL , NUM00 ) ; \n\tcachingHttpHeadersFilter . setAsyncSupported ( _BOOL ) ; \n\t} \n"}, {"code": "protected void addCommonComponent ( XMLComponent component ) $F42353 ( fCommonComponents , component , addRecognizedParamsAndSetDefaults ) "}, {"code": "SNode awaitFulfill ( SNode s , boolean timed , long nanos ) { \n\t$F74107 ( deadline , timed , System , nanos ) $F686 ( w , Thread ) int spins = ( shouldSpin ( s ) ? ( timed ? maxTimedSpins : maxUntimedSpins ) : NUM00 ) ; \n\tfor ( $F589 ) { \n\t\tif $F84922 ( w ) s . tryCancel ( ) ; \n\t\tSNode m = s . match ; \n\t\t$F60730 ( m ) if ( timed ) { \n\t\t\t$F27353 ( nanos , deadline , System ) if ( nanos <= NUM00 ) { \n\t\t\t\ts . tryCancel ( ) ; \n\t\t\t\t$F598 } \n\t\t\t} \n\t\tif ( spins > NUM00 ) spins = shouldSpin ( s ) ? ( spins - NUM00 ) : NUM00 ; \n\t\telse if $F74129 ( s ) s . waiter = w ; \n\t\telse if ( ! timed ) LockSupport . park ( this ) ; \n\t\telse if ( nanos > spinForTimeoutThreshold ) LockSupport . parkNanos ( this , nanos ) ; \n\t\t} \n\t} \n"}, {"code": "public void load ( GeneralSubtrees generalSubtrees ) { \n\tList < GeneralSubtree > generalSubtreesList = generalSubtrees . getGeneralSubtrees ( ) ; \n\tCollections . sort ( generalSubtreesList , new GeneralSubtreeBaseComparator $F72 ) ; \n\tdata = new Object [ generalSubtreesList . size ( ) ] [ NUM00 ] ; \n\tint i = NUM00 ; \n\tfor ( GeneralSubtree generalSubtree : generalSubtreesList ) { \n\t\tdata [ i ] [ NUM00 ] = generalSubtree ; \n\t\tdata [ i ] [ NUM00 ] = generalSubtree ; \n\t\tdata [ i ] [ NUM00 ] = generalSubtree ; \n\t\ti ++ ; \n\t\t} \n\tfireTableDataChanged ( ) ; \n\t} \n"}, {"code": "$F1 public synchronized int read $F72 { \n\treturn pos < count ? buffer . charAt ( pos ++ ) & NUM00 : - NUM00 ; \n\t} \n"}, {"code": "public boolean isPingDisabled $F72 { \n\treturn ( null != healthcheck && $F1905 ( healthcheck ) ) ; \n\t} \n"}, {"code": "public static void writeToFile ( File file , String contents ) throws IOException { \n\t$F4649 ( fos , file ) $F60813 ( fos , contents ) $F59 ( fos ) } \n"}, {"code": "public void makeTreeOfWritables ( Iterable < $F54234 > flatData ) { \n\tText key = new Text $F72 ; \n\tfor ( $F54234 pair : flatData ) { \n\t\tkey . set ( pair . key ) ; \n\t\tArrayList < IntWritable > valList ; \n\t\tif $F15257 ( mockInput , key ) { \n\t\t\t$F9404 ( valList ) mockInput . put ( key , valList ) ; \n\t\t\tkey = new Text $F72 ; \n\t\t\t} \n\t\telse valList = ( ArrayList < IntWritable > ) mockInput . get ( key ) ; \n\t\tvalList . add ( new IntWritable ( pair . value ( ) ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static double angle ( Coordinate p0 , Coordinate p1 ) { \n\t$F25547 ( dx , p1 , p0 ) $F25549 ( dy , p1 , p0 ) $F31795 ( Math , dy , dx ) } \n"}, {"code": "public InMemoryCursor $F4374 ( columnNames ) { \n\tmCurrentPosition = - NUM00 ; \n\tmColumnNames = columnNames ; \n\t} \n"}, {"code": "$F1 public boolean isEnabled $F72 { \n\tif ( ( attributeSelectionPanel != null ) && ! isValueOnly ( ) ) $F68134 ( attributeSelectionPanel ) else { \n\t\t$F68135 ( slider ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void renderForeground ( final ExecutionUnit process , final Graphics2D g2 , boolean printing ) { \n\tif ( drawHighlight && ! printing && ( model . isDragStarted ( ) || model . isDropTargetSet ( ) && model . isImportDragged ( ) ) || model . isOperatorSourceHovered ( ) ) { \n\t\tswitch ( RapidMinerGUI . getDragHighlighteMode ( ) ) { \n\t\t\tcase FULL : case BORDER : drawDragBorder ( process , g2 ) ; \n\t\t\t$F597 case NONE : $F1267 $F597 } \n\t\t} \n\t} \n"}, {"code": "public ModbusTransaction createTransaction $F72 { \n\tModbusSerialTransaction transaction = new ModbusSerialTransaction $F72 ; \n\ttransaction . setTransport ( this ) ; \n\treturn transaction ; \n\t} \n"}, {"code": "public void start $F72 { \n\tif ( runner == null ) { \n\t\t$F40963 ( runner , this ) ; \n\t\t$F2346 ( runner ) } \n\t} \n"}, {"code": "public synchronized int exportObject ( String name , Object obj ) throws CannotCompileException { \n\t$F121108 ( clazz , obj ) ExportedObject eo = new ExportedObject $F72 ; \n\teo . object = obj ; \n\teo . methods = clazz . getMethods ( ) ; \n\texportedObjects . addElement ( eo ) ; \n\teo . identifier = $F2281 ( exportedObjects ) ; \n\tif ( name != null ) exportedNames . put ( name , eo ) ; \n\ttry { \n\t\tstubGen . makeProxyClass ( clazz ) ; \n\t\t} \n\tcatch ( NotFoundException e ) { \n\t\tthrow new CannotCompileException ( e ) ; \n\t\t} \n\treturn eo . identifier ; \n\t} \n"}, {"code": "protected final File createDBFFDCDirectory $F72 { \n\t$F1705 ( dbffdcDir , ffdcDirectoryName ) if $F1906 ( dbffdcDir ) { \n\t\tfinal boolean isDBFFDcDirCreated = dbffdcDir . mkdirs ( ) ; \n\t\tif ( isDBFFDcDirCreated ) { \n\t\t\t$F24661 ( dbffdcDir , ffdcDirectoryName ) return dbffdcDir ; \n\t\t\t} \n\t\t} \n\telse if $F4926 ( dbffdcDir ) $F1337 return dbffdcDir ; \n\t} \n"}, {"code": "public static String readCharacterSizedString ( InputStream stream ) throws IOException { \n\t$F83 ( result ) int strLen = readUINT16 ( stream ) ; \n\t$F7468 ( character , stream ) character |= stream . read ( ) < < NUM00 ; \n\tdo { \n\t\tif ( character != NUM00 ) { \n\t\t\t$F36813 ( result , character ) $F10201 ( character , stream ) character |= stream . read ( ) < < NUM00 ; \n\t\t\t} \n\t\t} \n\twhile ( character != NUM00 || $F1286 ( result ) > strLen ) ; \n\tif ( strLen != $F1286 ( result ) ) $F4639 $F92 ( result ) } \n"}, {"code": "protected void processChildren ( QueryNode queryTree ) throws QueryNodeException { \n\tList < QueryNode > children = queryTree . getChildren ( ) ; \n\tChildrenList newChildren ; \n\tif $F8841 ( children ) { \n\t\tnewChildren = allocateChildrenList ( ) ; \n\t\ttry { \n\t\t\tfor ( QueryNode child : children ) { \n\t\t\t\tchild = processIteration ( child ) ; \n\t\t\t\t$F18045 ( child ) newChildren . add ( child ) ; \n\t\t\t\t} \n\t\t\tList < QueryNode > orderedChildrenList = setChildrenOrder ( newChildren ) ; \n\t\t\tqueryTree . set ( orderedChildrenList ) ; \n\t\t\t} \n\t\tfinally { \n\t\t\tnewChildren . beingUsed = _BOOL ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void initializeMessages $F24643 ( messages ) { \n\tmessages . addAll ( Arrays . asList ( TipOfTheDayMessages . getGeneralMessages ( ) ) ) ; \n\tif ( OSUtils . isWindows ( ) ) { \n\t\tmessages . addAll ( Arrays . asList ( TipOfTheDayMessages . getWindowsMessages ( ) ) ) ; \n\t\t} \n\telse if ( OSUtils . isMacOSX ( ) ) { \n\t\tmessages . addAll ( Arrays . asList ( TipOfTheDayMessages . getMacOSXMessages ( ) ) ) ; \n\t\t} \n\telse if ( OSUtils . isLinux ( ) ) { \n\t\tmessages . addAll ( Arrays . asList ( TipOfTheDayMessages . getLinuxMessages ( ) ) ) ; \n\t\t} \n\telse { \n\t\tmessages . addAll ( Arrays . asList ( TipOfTheDayMessages . getOtherMessages ( ) ) ) ; \n\t\t} \n\tif ( ! OSUtils . isMacOSX ( ) ) { \n\t\tmessages . addAll ( Arrays . asList ( TipOfTheDayMessages . getNonMacOSXMessages ( ) ) ) ; \n\t\t} \n\tmessages . addAll ( Arrays . asList ( TipOfTheDayMessages . getFrostWireMessages ( ) ) ) ; \n\tCollections . shuffle ( messages ) ; \n\t_currentTip = - NUM00 ; \n\t} \n"}, {"code": "public PersistedQueue ( final File queueEnvPath , final String queueName , final int cacheSize ) { \n\t$F1907 ( queueEnvPath ) final EnvironmentConfig dbEnvConfig = new EnvironmentConfig $F72 ; \n\tdbEnvConfig . setTransactional ( _BOOL ) ; \n\tdbEnvConfig . setAllowCreate ( _BOOL ) ; \n\tthis . dbEnv = new Environment ( queueEnvPath , dbEnvConfig ) ; \n\tDatabaseConfig dbConfig = new DatabaseConfig $F72 ; \n\tdbConfig . setTransactional ( _BOOL ) ; \n\tdbConfig . setAllowCreate ( _BOOL ) ; \n\tdbConfig . setDeferredWrite ( _BOOL ) ; \n\tthis . queueDatabase = dbEnv . openDatabase ( null , queueName , dbConfig ) ; \n\tthis . queueName = queueName ; \n\tthis . cacheSize = cacheSize ; \n\tthis . opsCounter = NUM00 ; \n\t} \n"}, {"code": "protected final StringBuilder write ( StringBuilder sb , final Object ... objects ) { \n\tfor ( Object string : objects ) sb . append ( string ) ; \n\treturn sb ; \n\t} \n"}, {"code": "$F6802 ( esd , connectionAllowed ) "}, {"code": "public static Request newPostOpenGraphActionRequest ( Session session , OpenGraphAction openGraphAction , Callback callback ) { \n\tif ( openGraphAction == null ) { \n\t\tthrow new FacebookException $F580 ; \n\t\t} \n\tif ( Utility . isNullOrEmpty ( openGraphAction . getType ( ) ) ) { \n\t\tthrow new FacebookException $F580 ; \n\t\t} \n\tString path = String . format ( MY_ACTION_FORMAT , openGraphAction . getType ( ) ) ; \n\treturn newPostRequest ( session , path , openGraphAction , callback ) ; \n\t} \n"}, {"code": "public void showLoading $F72 { \n\tswitchState ( LOADING , null , null , null , null , null , $F9641 ( Collections ) ) ; \n\t} \n"}, {"code": "public void readExternal ( ObjectInput in ) throws $F6427 { \n\t$F5952 ( vocabSize , in ) for ( $F119 ( i , vocabSize ) ) { \n\t\t$F1540 ( line , in ) Vocabulary . id ( line ) ; \n\t\t} \n\t$F216839 ( numTokens , in ) countFuncs = new long [ in . readInt ( ) ] [ NUM00 ] ; \n\tfor ( $F1139 ( i , countFuncs ) ) { \n\t\tcountFuncs [ i ] [ NUM00 ] = in . readLong ( ) ; \n\t\tcountFuncs [ i ] [ NUM00 ] = in . readLong ( ) ; \n\t\t} \n\ttypesFuncs = new long [ in . readInt ( ) ] [ NUM00 ] ; \n\tfor ( $F1139 ( i , typesFuncs ) ) { \n\t\ttypesFuncs [ i ] [ NUM00 ] = in . readLong ( ) ; \n\t\ttypesFuncs [ i ] [ NUM00 ] = in . readLong ( ) ; \n\t\t} \n\t$F216839 ( quantizationBase , in ) bf = new BloomFilter $F72 ; \n\tbf . readExternal ( in ) ; \n\t} \n"}, {"code": "public static double computeMAD $F280936 ( x , median ) { \n\tfor ( $F1139 ( i , x ) ) { \n\t\tx [ i ] = Math . abs ( x [ i ] - median ) ; \n\t\t} \n\tdouble mad = QuickSelect . median ( x ) ; \n\tif $F102905 ( mad ) { \n\t\tdouble min = Double . POSITIVE_INFINITY ; \n\t\tfor ( double xi : x ) { \n\t\t\tif ( xi > NUM00 && xi < min ) { \n\t\t\t\tmin = xi ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( min < Double . POSITIVE_INFINITY ) { \n\t\t\tmad = min ; \n\t\t\t} \n\t\telse { \n\t\t\tmad = NUM00 ; \n\t\t\t} \n\t\t} \n\tif ( mad == Double . POSITIVE_INFINITY ) { \n\t\tdouble max = NUM00 ; \n\t\tfor ( double xi : x ) { \n\t\t\tif ( xi < Double . POSITIVE_INFINITY && xi > max ) { \n\t\t\t\tmax = xi ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( max < Double . POSITIVE_INFINITY ) { \n\t\t\tmad = max ; \n\t\t\t} \n\t\telse { \n\t\t\tmad = NUM00 ; \n\t\t\t} \n\t\t} \n\treturn mad ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public SdpException ( Throwable rootCause ) { \n\tsuper ( rootCause . getLocalizedMessage ( ) ) ; \n\t} \n"}, {"code": "$F65837 ( node , count , capacity , _BOOL , f , first , last , notEmpty ) "}, {"code": "protected void notifyPropertyChangeListener $F109214 ( property , oldValue , newValue ) { \n\tSet $F39994 v ; \n\tsynchronized ( this ) { \n\t\t$F28907 ( v , listeners ) ; \n\t\t} \n\tfor ( PropertyChangeListener listener : v ) { \n\t\tlistener . propertyChange ( new PropertyChangeEvent ( this , property , oldValue , newValue ) ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean indicateDirtyRead ( ITemplateHolder template ) { \n\treturn ( ( template . isReadOperation ( ) && _useDirtyRead ) || template . isDirtyReadRequested ( ) ) ; \n\t} \n"}, {"code": "public JValueSlider $F21324 ( title , min , max , value ) { \n\tthis ( title , new Integer ( min ) , new Integer ( max ) , new Integer ( value ) ) ; \n\tm_smin = min ; \n\tm_srange = max - min ; \n\tm_slider . setMinimum ( min ) ; \n\tm_slider . setMaximum ( max ) ; \n\tsetValue ( new Integer ( value ) ) ; \n\t} \n"}, {"code": "protected void applyAttributesToSymbol ( TacticalGraphicAttributes graphicAttributes , TacticalSymbolAttributes symbolAttributes ) { \n\tDouble value = graphicAttributes . getInteriorOpacity ( ) ; \n\tif ( value != null ) { \n\t\tsymbolAttributes . setOpacity ( value ) ; \n\t\t} \n\tvalue = graphicAttributes . getScale ( ) ; \n\tif ( value != null ) { \n\t\tsymbolAttributes . setScale ( value ) ; \n\t\t} \n\tMaterial material = graphicAttributes . getInteriorMaterial ( ) ; \n\tsymbolAttributes . setInteriorMaterial ( material ) ; \n\tFont font = graphicAttributes . getTextModifierFont ( ) ; \n\tif ( font != null ) { \n\t\tsymbolAttributes . setTextModifierFont ( font ) ; \n\t\t} \n\tmaterial = graphicAttributes . getTextModifierMaterial ( ) ; \n\tif ( material != null ) { \n\t\tsymbolAttributes . setTextModifierMaterial ( material ) ; \n\t\t} \n\t} \n"}, {"code": "public final void increaseIdleCount ( IdleStatus status , long currentTime ) { \n\tif ( status == IdleStatus . BOTH_IDLE ) { \n\t\t$F5224 ( idleCountForBoth ) lastIdleTimeForBoth = currentTime ; \n\t\t} \n\telse if ( status == IdleStatus . READER_IDLE ) { \n\t\t$F5224 ( idleCountForRead ) lastIdleTimeForRead = currentTime ; \n\t\t} \n\telse if ( status == IdleStatus . WRITER_IDLE ) { \n\t\t$F5224 ( idleCountForWrite ) lastIdleTimeForWrite = currentTime ; \n\t\t} \n\telse $F18931 ( status ) } \n"}, {"code": "public RemoteServiceDescriptor ( String baseUrl , HttpJsonRequestFactory requestFactory ) throws IllegalArgumentException { \n\tthis . baseUrl = baseUrl ; \n\tthis . requestFactory = requestFactory ; \n\ttry { \n\t\t$F23801 ( baseUrlURL , baseUrl ) final String protocol = baseUrlURL . getProtocol ( ) ; \n\t\tif ( ! $F40270 ( protocol ) ) $F74022 ( String , baseUrl ) } \n\tcatch ( MalformedURLException e ) $F74022 ( String , baseUrl ) } \n"}, {"code": "private Journal readJournal ( ParcelFileDescriptor oldState ) { \n\tJournal journal = new Journal $F72 ; \n\t$F1933 ( oldState , journal ) FileInputStream inStream = new FileInputStream $F122976 ( oldState ) ; \n\ttry { \n\t\t$F89380 ( availableBytes , inStream ) $F12259 ( DEBUG , Log , TAG , availableBytes ) if ( availableBytes < MAX_JOURNAL_SIZE ) { \n\t\t\t$F2175 ( buffer , availableBytes ) int bytesRead = NUM00 ; \n\t\t\tboolean valid = _BOOL ; \n\t\t\tInvalidProtocolBufferNanoException lastProtoException = null ; \n\t\t\twhile ( availableBytes > NUM00 ) { \n\t\t\t\ttry { \n\t\t\t\t\tint result = inStream . read ( buffer , bytesRead , NUM00 ) ; \n\t\t\t\t\tif ( result > NUM00 ) { \n\t\t\t\t\t\tavailableBytes -= result ; \n\t\t\t\t\t\tbytesRead += result ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\t$F6173 ( Log , TAG ) availableBytes = NUM00 ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\tcatch ( IOException e ) $F32833 ( buffer , availableBytes ) try { \n\t\t\t\t\t$F122989 ( MessageNano , journal , readCheckedBytes , buffer , bytesRead ) valid = _BOOL ; \n\t\t\t\t\tavailableBytes = NUM00 ; \n\t\t\t\t\t$F27752 ( VERBOSE , Log , TAG , bytesRead ) } \n\t\t\t\tcatch ( InvalidProtocolBufferNanoException e ) { \n\t\t\t\t\tlastProtoException = e ; \n\t\t\t\t\t$F725 ( journal ) } \n\t\t\t\t} \n\t\t\t$F12259 ( DEBUG , Log , TAG , bytesRead ) if ( ! valid ) $F100667 ( Log , TAG , lastProtoException ) } \n\t\t} \n\t$F122999 ( Log , TAG , e ) return journal ; \n\t} \n"}, {"code": "public Server start $F72 throws SQLException { \n\ttry { \n\t\tstarted = _BOOL ; \n\t\t$F2346 ( service ) String name = $F43113 ( service ) + service . getURL ( ) + NUM00 ; \n\t\tThread t = new Thread ( this , name ) ; \n\t\tt . setDaemon ( service . isDaemon ( ) ) ; \n\t\t$F2346 ( t ) for ( int i = NUM00 ; \n\t\ti < NUM00 ; \n\t\ti += i ) { \n\t\t\twait ( i ) ; \n\t\t\t$F46660 ( isRunning , _BOOL , this ) } \n\t\t$F46660 ( isRunning , _BOOL , this ) throw DbException . get ( ErrorCode . EXCEPTION_OPENING_PORT_2 , name , NUM00 + NUM00 ) ; \n\t\t} \n\tcatch ( DbException e ) { \n\t\tthrow DbException . toSQLException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public boolean isComplete $F72 { \n\treturn _BOOL ; \n\t} \n"}, {"code": "public ByteMatrix encode ( String contents , int width , int height , Map < EncodeHintType , Object > hints ) throws WriterException { \n\t$F20313 ( contents ) if ( width < NUM00 || height < NUM00 ) $F20855 ( width , height ) ErrorCorrectionLevel errorCorrectionLevel = ErrorCorrectionLevel . L ; \n\tif ( hints != null ) { \n\t\tErrorCorrectionLevel requestedECLevel = ( ErrorCorrectionLevel ) hints . get ( EncodeHintType . ERROR_CORRECTION ) ; \n\t\t$F57733 ( requestedECLevel , errorCorrectionLevel ) } \n\tQRCode code = new QRCode $F72 ; \n\tEncoder . encode ( contents , errorCorrectionLevel , hints , code ) ; \n\treturn renderResult ( code , width , height ) ; \n\t} \n"}, {"code": "public IntBuffer put $F74721 ( src , srcOffset , intCount ) { \n\t$F74722 ( isReadOnly ) $F11673 ( Arrays , src , srcOffset , intCount ) if ( intCount > remaining ( ) ) { \n\t\tthrow new BufferOverflowException $F72 ; \n\t\t} \n\tfor ( int i = srcOffset ; \n\ti < srcOffset + intCount ; \n\t++ i ) $F11680 ( put , src , i ) return this ; \n\t} \n"}, {"code": "public Request header ( String key , String value ) { \n\tObjects . requireNonNull ( key ) ; \n\tObjects . requireNonNull ( value ) ; \n\t_headers . put ( key , value ) ; \n\treturn this ; \n\t} \n"}, {"code": "public void updateUI $F72 { \n\t$F125777 ( super ) setBackground ( $F381381 ) ; \n\tsetWrapStyleWord ( _BOOL ) ; \n\tsetHighlighter ( null ) ; \n\tsetEditable ( _BOOL ) ; \n\tLookAndFeel . installBorder ( this , NUM00 ) ; \n\tLookAndFeel . installColorsAndFont ( this , NUM00 , NUM00 , NUM00 ) ; \n\tif ( resizeHandler != null ) { \n\t\tresizeHandler . componentResized ( null ) ; \n\t\t} \n\tSizePolicy policy = ( SizePolicy ) getClientProperty ( SizePolicy . class ) ; \n\tif ( policy != null ) { \n\t\tGUIUtils . restrictSize ( this , policy ) ; \n\t\t} \n\t} \n"}, {"code": "public static void generateExtensionManager ( File rootFolder ) throws IOException { \n\t$F4453 ( outFile , rootFolder , REGISTRY_PATH ) $F83 ( builder ) $F84 ( builder ) generateImports ( builder ) ; \n\tgenerateClass ( builder ) ; \n\tFileUtils . writeStringToFile ( outFile , builder . toString ( ) ) ; \n\t} \n"}, {"code": "public synchronized Future $F2193 submit ( $F56328 task ) throws RejectedExecutionException { \n\treturn pool . submit ( task ) ; \n\t} \n"}, {"code": "private void checkBucketName ( String name ) throws InvalidBucketNameException { \n\tif ( name == null ) { \n\t\tthrow new InvalidBucketNameException ( NULL_ <missing ';'> NUM00 , $F50952 } \n\tif ( $F3598 ( name ) || $F20 ( name ) ) { \n\t\tString msg = NUM00 ; \n\t\tthrow new InvalidBucketNameException ( name , msg ) ; \n\t\t} \n\tif $F11809 ( name ) { \n\t\tString msg = NUM00 + NUM00 ; \n\t\tthrow new InvalidBucketNameException ( name , msg ) ; \n\t\t} \n\tif $F48318 ( name ) { \n\t\tString msg = NUM00 + NUM00 ; \n\t\tthrow new InvalidBucketNameException ( name , msg ) ; \n\t\t} \n\t} \n"}, {"code": "private void validateUserNamespaceAuthorizationCreateRequest ( UserNamespaceAuthorizationCreateRequest request ) { \n\t$F18062 ( Assert , request ) validateUserNamespaceAuthorizationKey ( request . getUserNamespaceAuthorizationKey ( ) ) ; \n\tvalidateNamespacePermissions ( request . getNamespacePermissions ( ) ) ; \n\t} \n"}, {"code": "protected String format ( Object o ) $F2495 ( o ) "}, {"code": "public void calculateDerived $F72 { \n\txStats . calculateDerived ( ) ; \n\tyStats . calculateDerived ( ) ; \n\tdifferencesStats . calculateDerived ( ) ; \n\tcorrelation = Double . NaN ; \n\tif ( ! Double . isNaN ( xStats . stdDev ) && ! Double . isNaN ( yStats . stdDev ) && ! Utils . eq ( xStats . stdDev , NUM00 ) ) { \n\t\tdouble slope = ( xySum - xStats . sum * yStats . sum / count ) / ( xStats . sumSq - xStats . sum * xStats . mean ) ; \n\t\tif ( ! Utils . eq ( yStats . stdDev , NUM00 ) ) { \n\t\t\tcorrelation = slope * xStats . stdDev / yStats . stdDev ; \n\t\t\t} \n\t\telse { \n\t\t\tcorrelation = NUM00 ; \n\t\t\t} \n\t\t} \n\tif ( Utils . gr ( differencesStats . stdDev , NUM00 ) ) { \n\t\tdouble tval = differencesStats . mean * Math . sqrt ( count ) / differencesStats . stdDev ; \n\t\tif ( m_degreesOfFreedom >= NUM00 ) { \n\t\t\tdifferencesProbability = Statistics . FProbability ( tval * tval , NUM00 , m_degreesOfFreedom ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( count > NUM00 ) { \n\t\t\t\tdifferencesProbability = Statistics . FProbability ( tval * tval , NUM00 , ( int ) count - NUM00 ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tdifferencesProbability = NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( differencesStats . sumSq == NUM00 ) { \n\t\t\tdifferencesProbability = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tdifferencesProbability = NUM00 ; \n\t\t\t} \n\t\t} \n\tdifferencesSignificance = NUM00 ; \n\tif ( differencesProbability <= sigLevel ) { \n\t\tif ( xStats . mean > yStats . mean ) { \n\t\t\tdifferencesSignificance = NUM00 ; \n\t\t\t} \n\t\telse $F44867 ( differencesSignificance ) } \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "protected boolean canDeleteConsistencyGroup ( final BlockConsistencyGroup consistencyGroup ) { \n\treturn ( ! consistencyGroup . getInactive ( ) && ! consistencyGroup . created ( ) ) ; \n\t} \n"}, {"code": "$F141880 ( closeable , rethrown ) "}, {"code": "public AmqpMessage receiveNoWait $F72 throws Exception { \n\tcheckClosed ( ) ; \n\treturn prefetch . poll ( ) ; \n\t} \n"}, {"code": "$F1 protected void removeRange ( int start , int end ) { \n\tif ( start < NUM00 ) { \n\t\tthrow new IndexOutOfBoundsException ( NUM00 + start ) ; \n\t\t} \n\telse if ( end > size ) $F73737 ( end , size ) else if ( start > end ) $F73737 ( start , end ) $F19899 ( start , end ) if ( end == size ) { \n\t\tArrays . fill ( array , firstIndex + start , firstIndex + size , null ) ; \n\t\t} \n\telse if ( start == NUM00 ) { \n\t\tArrays . fill ( array , firstIndex , firstIndex + end , null ) ; \n\t\tfirstIndex += end ; \n\t\t} \n\telse { \n\t\tSystem . arraycopy ( array , firstIndex + end , array , firstIndex + start , size - end ) ; \n\t\tint lastIndex = firstIndex + size ; \n\t\tint newLast = lastIndex + start - end ; \n\t\tArrays . fill ( array , newLast , lastIndex , null ) ; \n\t\t} \n\tsize -= end - start ; \n\tmodCount ++ ; \n\t} \n"}, {"code": "private boolean zzRefill $F72 throws $F3258 { \n\t$F72981 ( zzStartRead , System , zzBuffer , zzEndRead , zzCurrentPos , zzMarkedPos , zzPushbackPos ) if ( zzCurrentPos >= zzBuffer . length ) { \n\t\tfinal char newBuffer [ ] = new char [ zzCurrentPos * NUM00 ] ; \n\t\t$F7057 ( System , zzBuffer , newBuffer ) zzBuffer = newBuffer ; \n\t\t} \n\tfinal int numRead = zzReader . read ( zzBuffer , zzEndRead , zzBuffer . length - zzEndRead ) ; \n\t$F72989 ( numRead , _BOOL , zzEndRead ) } \n"}, {"code": "private void checkDuplicateNamesDuringDelete $F149310 ( ids ) { \n\tArrayList $F37552 myEntities = game . getPlayerEntities ( game . getPlayer ( localPlayerNumber ) , _BOOL ) ; \n\tHashtable < String , $F15272 > rawNameToId = new Hashtable < String , $F15272 > ( ( int ) $F98338 ( myEntities ) ) ; \n\tfor ( Entity e : myEntities ) { \n\t\tString rawName = e . getShortNameRaw ( ) ; \n\t\t$F15272 namedIds = rawNameToId . get ( rawName ) ; \n\t\tif ( namedIds == null ) { \n\t\t\t$F117818 ( namedIds ) } \n\t\t$F42096 ( namedIds , e ) rawNameToId . put ( rawName , namedIds ) ; \n\t\t} \n\tfor ( int id : ids ) { \n\t\tEntity removedEntity = game . getEntity ( id ) ; \n\t\t$F4322 ( removedEntity ) String removedRawName = removedEntity . getShortNameRaw ( ) ; \n\t\tInteger count = duplicateNameHash . get ( removedEntity . getShortNameRaw ( ) ) ; \n\t\tif ( ( count != null ) && ( count > NUM00 ) ) { \n\t\t\t$F15272 namedIds = rawNameToId . get ( removedRawName ) ; \n\t\t\tfor ( Integer i : namedIds ) { \n\t\t\t\tEntity e = game . getEntity ( i ) ; \n\t\t\t\tString eRawName = e . getShortNameRaw ( ) ; \n\t\t\t\tif ( eRawName . equals ( removedRawName ) && ( e . duplicateMarker > removedEntity . duplicateMarker ) ) { \n\t\t\t\t\te . duplicateMarker -- ; \n\t\t\t\t\te . generateShortName ( ) ; \n\t\t\t\t\te . generateDisplayName ( ) ; \n\t\t\t\t\tif ( ! $F60437 ( ids , e ) ) { \n\t\t\t\t\t\tsendUpdateEntity ( e ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tduplicateNameHash . put ( removedEntity . getShortNameRaw ( ) , new Integer ( count - NUM00 ) ) ; \n\t\t\t} \n\t\telse if ( count != null ) { \n\t\t\tduplicateNameHash . remove ( removedEntity . getShortNameRaw ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void stopBKCluster $F72 throws Exception { \n\t$F2727 ( bkc ) for ( BookieServer server : bs ) { \n\t\t$F733 ( server ) AutoRecoveryMain autoRecovery = autoRecoveryProcesses . get ( server ) ; \n\t\tif ( autoRecovery != null && isAutoRecoveryEnabled ( ) ) { \n\t\t\t$F733 ( autoRecovery ) LOG . debug ( NUM00 + server . getLocalAddress ( ) ) ; \n\t\t\t} \n\t\t} \n\t$F725 ( bs ) for ( File f : tmpDirs ) { \n\t\tFileUtils . deleteDirectory ( f ) ; \n\t\t} \n\t} \n"}, {"code": "$F1322 ( criteria , oredCriteria ) "}, {"code": "public void releaseSelections ( Set $F37552 items ) { \n\tfor ( Entity item : items ) { \n\t\treleaseSelection ( item ) ; \n\t\t} \n\t} \n"}, {"code": "public HubLinkMapping ( String fileName , int numberOfHubs , Network network ) { \n\tthis . numberOfHubs = numberOfHubs ; \n\tif $F3578 ( fileName ) { \n\t\treadMappingTable ( fileName ) ; \n\t\tunMappedLinksAtZeroHub = _BOOL ; \n\t\t$F665 } \n\thandleUnmappedLinksStart ( ) ; \n\ttry { \n\t\t$F35542 ( fr , fileName ) $F20481 ( br , fr ) String line ; \n\t\tStringTokenizer tokenizer ; \n\t\tString token ; \n\t\tint linkId ; \n\t\t$F36243 ( line , br ) while ( line != null ) { \n\t\t\ttokenizer = new StringTokenizer ( line ) ; \n\t\t\tfor ( int i = NUM00 ; \n\t\t\ti < this . numberOfHubs ; \n\t\t\ti ++ ) { \n\t\t\t\t$F39710 ( token , tokenizer ) linkId = ( int ) Double . parseDouble ( token ) ; \n\t\t\t\tlinkHubMapping . put ( Integer . toString ( linkId ) , i ) ; \n\t\t\t\t} \n\t\t\tif $F14498 ( tokenizer ) $F11389 $F36243 ( line , br ) } \n\t\t} \n\t$F41337 ( e ) catch ( Exception e ) $F11389 $F36382 ( linkHubMapping ) handleUnmappedLinksEnd ( network ) ; \n\t} \n"}, {"code": "public boolean deleteLoadName ( String load ) { \n\t$F92359 ( _loadList , load , _BOOL ) _loadList . remove ( load ) ; \n\tlog . debug ( NUM00 + getName ( ) + NUM00 + load ) ; \n\tsetDirtyAndFirePropertyChange ( LOADS_CHANGED_PROPERTY , $F2958 ( _loadList ) , _loadList . size ( ) ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private ComputeState validateComputeName ( String awsId , String vmName ) throws Throwable { \n\tif ( this . isAwsClientMock ) $F1337 ComputeState computeState = getComputeByAWSId ( this . host , awsId ) ; \n\tString tagNameValue = computeState . name ; \n\tassertNotNull ( NUM00 , tagNameValue ) ; \n\tassertEquals ( vmName , tagNameValue ) ; \n\treturn computeState ; \n\t} \n"}, {"code": "public static String fromTag ( IntArrayTag tag ) { \n\t$F83 ( builder ) builder . append ( ARRAY_START ) ; \n\tboolean start = _BOOL ; \n\tfor ( int value : tag . getValue ( ) ) { \n\t\tIntTag i = new IntTag ( value ) ; \n\t\t$F11657 ( start , _BOOL , builder , ELEMENT_SEPERATOR ) $F6407 ( builder , fromTag , i ) } \n\tbuilder . append ( ARRAY_END ) ; \n\t$F92 ( builder ) } \n"}, {"code": "public static int removeArgsAndReturnInsertionIndex ( $F3803 args , int argIndex , boolean tryRemovingArgValue ) { \n\tif $F55119 ( argIndex , args ) $F1083 if ( tryRemovingArgValue ) { \n\t\tString argValue = getArgValue ( args , argIndex + NUM00 ) ; \n\t\tif ( argValue != null ) { \n\t\t\targs . remove ( argIndex + NUM00 ) ; \n\t\t\t} \n\t\t} \n\targs . remove ( argIndex ) ; \n\treturn argIndex ; \n\t} \n"}, {"code": "void replacePolicyInResourceTree ( ServiceTypeManager svtm , SSOToken token , Policy oldPolicy , Policy newPolicy ) throws PolicyException , SSOException { \n\tremovePolicyFromResourceTree ( svtm , token , oldPolicy ) ; \n\taddPolicyToResourceTree ( svtm , token , newPolicy ) ; \n\t} \n"}, {"code": "public AtomicDoubleArray ( int length ) { \n\tlarray = new AtomicLongArray ( length ) ; \n\tlong ZERO = Double . doubleToRawLongBits ( NUM00 ) ; \n\tfor ( $F119 ( i , length ) ) larray . set ( i , ZERO ) ; \n\t} \n"}, {"code": "private void copyAction ( File srcFile , File destFile ) throws $F27136 { \n\t$F4647 ( istream , srcFile ) $F4649 ( ostream , destFile ) $F27404 ( input , istream ) $F27404 ( output , ostream ) try { \n\t\tinput . transferTo ( NUM00 , input . size ( ) , output ) ; \n\t\t} \n\tfinally { \n\t\t$F59 ( istream ) $F59 ( ostream ) $F59 ( input ) $F59 ( output ) } \n\t} \n"}, {"code": "private void recomputeSeperation ( $F28974 ( means ) , $F28974 ( cdist ) , LongStatistic diststat ) { \n\t$F18832 ( k , means ) for ( $F119 ( i , k ) ) { \n\t\t$F80292 ( mi , DoubleVector , means , i ) for ( $F119 ( j , i ) ) { \n\t\t\tcdist [ i ] [ j ] = cdist [ j ] [ i ] = distanceFunction . distance ( mi , DoubleVector . wrap ( means [ j ] ) ) ; \n\t\t\t} \n\t\t} \n\tif ( diststat != null ) { \n\t\tdiststat . increment ( ( k * ( k - NUM00 ) ) > > NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private static BufferedImage makeSquare ( BufferedImage input ) { \n\tif ( input . getHeight ( ) == input . getWidth ( ) ) { \n\t\treturn input ; \n\t\t} \n\telse { \n\t\tint max = Math . max ( input . getHeight ( ) , input . getWidth ( ) ) ; \n\t\tint dx = ( max - input . getWidth ( ) ) / NUM00 ; \n\t\tint dy = ( max - input . getHeight ( ) ) / NUM00 ; \n\t\treturn createImg ( max , max , input . getType ( ) , null ) ; \n\t\t} \n\t} \n"}, {"code": "protected abstract void handleLostEntry ( HttpRoute route ) ; \n"}, {"code": "public void writeStartElement ( String localName ) throws XMLStreamException { \n\tif $F6036 ( localName ) { \n\t\tthrow new XMLStreamException $F580 ; \n\t\t} \n\t_state = STATE_ELEMENT ; \n\tif ( _currentEle != null && _currentEle . getState ( ) == ELEMENT_STARTTAG_OPEN ) $F5795 ( closeStartTag ) _currentEle = new Element ( _currentEle , localName , _BOOL ) ; \n\topenStartTag ( ) ; \n\t_writer . write ( localName ) ; \n\t} \n"}, {"code": "public void addProcessInteractionListener ( final ProcessInteractionListener l ) $F41100 ( l , processInteractionListeners ) "}, {"code": "private void traverseInternal ( Object root , boolean yieldRoot , IdentityHashMap $F75026 seen ) { \n\tif ( root == null || seen . containsKey ( root ) ) $F932 if ( yieldRoot ) { \n\t\t$F145568 ( visit , root ) } \n\t$F22747 ( seen , root ) if ( root instanceof JSONObject ) { \n\t\t$F49150 ( json , root ) $F50737 ( keys , json ) while $F2921 ( keys ) { \n\t\t\t$F13714 ( key , keys ) try { \n\t\t\t\ttraverseInternal ( json . get ( key ) , _BOOL , seen ) ; \n\t\t\t\t} \n\t\t\tcatch ( JSONException e ) $F9491 ( e ) } \n\t\t} \n\telse if ( root instanceof JSONArray ) { \n\t\tJSONArray array = ( JSONArray ) root ; \n\t\tfor ( $F38840 ( i , array ) ) { \n\t\t\ttry { \n\t\t\t\ttraverseInternal ( array . get ( i ) , _BOOL , seen ) ; \n\t\t\t\t} \n\t\t\tcatch ( JSONException e ) $F9491 ( e ) } \n\t\t} \n\telse if ( root instanceof Map ) { \n\t\t$F22331 map = ( $F22331 ) root ; \n\t\tfor ( Object value : map . values ( ) ) { \n\t\t\ttraverseInternal ( value , _BOOL , seen ) ; \n\t\t\t} \n\t\t} \n\telse if ( root instanceof List ) { \n\t\t$F33514 ( list , root ) for ( Object value : list ) { \n\t\t\ttraverseInternal ( value , _BOOL , seen ) ; \n\t\t\t} \n\t\t} \n\telse if ( root instanceof ParseObject ) { \n\t\tif ( traverseParseObjects ) { \n\t\t\tParseObject object = ( ParseObject ) root ; \n\t\t\tfor ( $F3465 ( key , object ) ) { \n\t\t\t\ttraverseInternal ( object . get ( key ) , _BOOL , seen ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse if ( root instanceof ParseACL ) { \n\t\tParseACL acl = ( ParseACL ) root ; \n\t\tParseUser user = acl . getUnresolvedUser ( ) ; \n\t\tif ( user != null && user . isCurrentUser ( ) ) { \n\t\t\ttraverseInternal ( user , _BOOL , seen ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public StrBuilder replaceFirst $F2236 ( searchStr , replaceStr ) { \n\tfinal int searchLen = ( searchStr == null ? NUM00 : searchStr . length ( ) ) ; \n\tif ( searchLen > NUM00 ) { \n\t\tfinal int index = indexOf ( searchStr , NUM00 ) ; \n\t\tif ( index >= NUM00 ) { \n\t\t\tfinal int replaceLen = ( replaceStr == null ? NUM00 : replaceStr . length ( ) ) ; \n\t\t\treplaceImpl ( index , index + searchLen , searchLen , replaceStr , replaceLen ) ; \n\t\t\t} \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "protected abstract void internalPut ( int index , byte b ) ; \n"}, {"code": "public CommonTurnoutOperationConfig ( TurnoutOperation op ) { \n\tsuper ( op ) ; \n\tmyOp = ( CommonTurnoutOperation ) op ; \n\tmaxTriesSpinner = new JSpinner $F72 ; \n\tintervalSpinner = new JSpinner $F72 ; \n\t$F275999 ( vbox , Box ) Box hbox1 = Box . createHorizontalBox ( ) ; \n\tBox hbox2 = Box . createHorizontalBox ( ) ; \n\tvbox . add ( hbox2 ) ; \n\tvbox . add ( hbox1 ) ; \n\tvbox . add ( Box . createVerticalGlue ( ) ) ; \n\thbox1 . add ( new JLabel $F253578 ( Bundle ) ) ; \n\t$F154816 ( hbox1 , Box ) $F167982 ( intervalSpinner ) intervalSpinner . setModel ( new SpinnerNumberModel ( myOp . getInterval ( ) , CommonTurnoutOperation . minInterval , CommonTurnoutOperation . maxInterval , CommonTurnoutOperation . intervalStepSize ) ) ; \n\thbox1 . add ( intervalSpinner ) ; \n\thbox2 . add ( new JLabel $F253578 ( Bundle ) ) ; \n\t$F154816 ( hbox2 , Box ) $F167982 ( maxTriesSpinner ) maxTriesSpinner . setModel ( new SpinnerNumberModel ( myOp . getMaxTries ( ) , CommonTurnoutOperation . minMaxTries , CommonTurnoutOperation . maxMaxTries , NUM00 ) ) ; \n\thbox2 . add ( maxTriesSpinner ) ; \n\tBox hbox3 = Box . createHorizontalBox ( ) ; \n\t$F154814 ( hbox3 , Box ) vbox . add ( hbox3 ) ; \n\tadd ( vbox ) ; \n\t} \n"}, {"code": "public static String gensalt ( int log_rounds , SecureRandom random ) { \n\t$F102540 ( log_rounds ) $F83 ( rs ) byte rnd [ ] = new byte [ BCRYPT_SALT_LEN ] ; \n\trandom . nextBytes ( rnd ) ; \n\t$F84 ( rs ) $F2854 ( log_rounds , rs ) rs . append ( log_rounds ) ; \n\t$F84 ( rs ) encode_base64 ( rnd , rnd . length , rs ) ; \n\t$F92 ( rs ) } \n"}, {"code": "protected void drawDescription ( Canvas c ) { \n\tif $F1264 ( mDescription ) { \n\t\tif ( mDescriptionPosition == null ) { \n\t\t\tc . drawText ( mDescription , getWidth ( ) - mViewPortHandler . offsetRight ( ) - NUM00 , getHeight ( ) - mViewPortHandler . offsetBottom ( ) - NUM00 , mDescPaint ) ; \n\t\t\t} \n\t\telse { \n\t\t\tc . drawText ( mDescription , mDescriptionPosition . x , mDescriptionPosition . y , mDescPaint ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "long parseBytes ( String freeSpace , String path ) throws IOException { \n\ttry { \n\t\t$F227249 ( bytes , Long , freeSpace ) if ( bytes < NUM00 ) { \n\t\t\tthrow new IOException ( NUM00 + DF + NUM00 + NUM00 + path + NUM00 ) ; \n\t\t\t} \n\t\treturn bytes ; \n\t\t} \n\tcatch ( NumberFormatException ex ) { \n\t\tthrow new IOExceptionWithCause ( NUM00 + DF + NUM00 + NUM00 + path + NUM00 , ex ) ; \n\t\t} \n\t} \n"}, {"code": "public String findInterlanguageLink ( String lang ) { \n\tint start = $F242624 ( page , lang ) ; \n\t$F94834 ( start ) $F12712 ( end , page , start ) $F94834 ( end ) String link = page . substring ( start + NUM00 + lang . length ( ) , end ) ; \n\tif $F12703 ( link ) $F1337 if $F1277 ( link ) $F1274 return link ; \n\t} \n"}, {"code": "private void updateActions ( final INaviAddressSpace addressSpace ) { \n\tm_loadAddressSpaceAction . setEnabled ( ! addressSpace . isLoaded ( ) ) ; \n\t} \n"}, {"code": "public static $F4203 $F69963 from ( $F40799 ( source ) , int parallelism ) { \n\treturn from ( source , parallelism , QueueSupplier . SMALL_BUFFER_SIZE , QueueSupplier . small ( ) ) ; \n\t} \n"}, {"code": "private static void cleanDirectoryOnExit ( File directory ) throws IOException $F189472 ( directory , message , files , exception , file , forceDeleteOnExit , ioe ) "}, {"code": "private void addGumball ( float xPos , float yPos ) { \n\tGumball gumball = new Gumball $F72 ; \n\tgumball . mXInitPos = xPos ; \n\tgumball . mYInitPos = yPos ; \n\tgumball . mSoundPoolId = UUID . randomUUID ( ) ; \n\tmSoundPoolId . put ( gumball . mSoundPoolId , _BOOL ) ; \n\tmGameView . addGumball ( gumball ) ; \n\tmSoundPool . play ( $F113059 ( mSoundBallDrop ) ) ; \n\t} \n"}, {"code": "int put ( T segment , List $F11632 recycleBin ) { \n\tint count ; \n\tif ( lastCount == NUM00 ) { \n\t\tcount = NUM00 ; \n\t\tlastCount = NUM00 ; \n\t\tlast = segment ; \n\t\t} \n\telse if ( Objects . deepEquals ( last , segment ) ) { \n\t\t++ lastCount ; \n\t\tcount = NUM00 ; \n\t\trecycleBin . add ( segment ) ; \n\t\t} \n\telse { \n\t\tcount = lastCount ; \n\t\tlastCount = NUM00 ; \n\t\tlast = segment ; \n\t\t} \n\treturn count ; \n\t} \n"}, {"code": "$F61852 public void testDelete6 $F72 throws SQLException { \n\tDatabaseCreator . fillFKStrictTable ( conn ) ; \n\tstatement . execute ( NUM00 + DatabaseCreator . FKSTRICT_TABLE + NUM00 + DatabaseCreator . PARENT_TABLE + NUM00 ) ; \n\tResultSet r = statement . executeQuery ( NUM00 + DatabaseCreator . FKSTRICT_TABLE + NUM00 ) ; \n\t$F24630 ( r ) $F92911 ( assertEquals , r ) $F59 ( r ) } \n"}, {"code": "public Channel chan ( final String topic , final JsonNode payload ) { \n\tLOG . log ( Level . FINE , NUM00 , $F40356 ( topic , payload ) ) ; \n\tfinal Channel channel = new Channel ( topic , payload , Socket . this ) ; \n\t$F9231 ( channels , channel ) return channel ; \n\t} \n"}, {"code": "public PlaPointFloat change_size ( double p_new_size ) { \n\tif ( v_x == NUM00 && v_y == NUM00 ) { \n\t\treturn this ; \n\t\t} \n\t$F25559 ( length , Math , v_x , v_y ) double new_x = ( v_x * p_new_size ) / length ; \n\tdouble new_y = ( v_y * p_new_size ) / length ; \n\treturn new PlaPointFloat ( new_x , new_y ) ; \n\t} \n"}, {"code": "int insert ( Row row , $F96 sourceBuffer , int sourceOffset , BlobOutputStream [ ] blobs ) { \n\tint rowHead = _rowHead ; \n\tint blobTail = _blobTail ; \n\t$F1749 ( rowLength , row ) rowHead -= rowLength ; \n\tif ( rowHead < blobTail ) $F7629 $F96 buffer = _buffer ; \n\tSystem . arraycopy ( sourceBuffer , sourceOffset , buffer , rowHead , rowLength ) ; \n\tbuffer [ rowHead ] = ( byte ) ( ( buffer [ rowHead ] & ~ CODE_MASK ) | INSERT ) ; \n\tblobTail = row . insertBlobs ( buffer , rowHead , blobTail , blobs ) ; \n\t$F33287 ( blobTail ) setBlobTail ( blobTail ) ; \n\trowHead ( rowHead ) ; \n\tvalidateBlock ( row ) ; \n\treturn rowHead ; \n\t} \n"}, {"code": "private void addDefaultUri $F72 throws IgniteSpiException { \n\tassert uriEncodedList != null ; \n\tURI uri ; \n\ttry { \n\t\turi = U . resolveWorkDirectory ( DFLT_DEPLOY_DIR , _BOOL ) . toURI ( ) ; \n\t\t} \n\tcatch ( IgniteCheckedException e ) { \n\t\tthrow new IgniteSpiException ( NUM00 , e ) ; \n\t\t} \n\turiEncodedList . add ( uri ) ; \n\t} \n"}, {"code": "protected void transfer ( String seqRange ) throws IOException { \n\ttry { \n\t\t$F46662 ( rangePos , seqRange ) if ( rangePos == - NUM00 ) { \n\t\t\ttransfer ( Long . parseLong ( seqRange ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F66071 ( start , seqRange , rangePos ) $F49882 ( end , seqRange , rangePos ) final long startIdx ; \n\t\t\tif $F1277 ( start ) { \n\t\t\t\tstartIdx = NUM00 ; \n\t\t\t\t} \n\t\t\telse $F174805 ( startIdx , Long , start ) final long endIdx ; \n\t\t\tif $F1277 ( end ) { \n\t\t\t\tendIdx = mReader . numberSequences ( ) - NUM00 ; \n\t\t\t\t} \n\t\t\telse $F174805 ( endIdx , Long , end ) if ( startIdx > endIdx ) $F111291 ( seqRange ) for ( long i = startIdx ; \n\t\t\ti <= endIdx ; \n\t\t\ti ++ ) { \n\t\t\t\ttransfer ( i ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( final NumberFormatException e ) { \n\t\twarnInvalidSequence ( seqRange ) ; \n\t\t} \n\t} \n"}, {"code": "public static double distancePointLinePerpendicular ( Coordinate p , Coordinate A , Coordinate B ) { \n\tdouble len2 = $F27158 ( B , A ) * $F27158 ( B , A ) + $F27159 ( B , A ) * $F27159 ( B , A ) ; \n\tdouble s = ( $F27159 ( A , p ) * $F27158 ( B , A ) - $F27158 ( A , p ) * $F27159 ( B , A ) ) / len2 ; \n\treturn Math . abs ( s ) * Math . sqrt ( len2 ) ; \n\t} \n"}, {"code": "BigInteger copy $F72 { \n\tprepareJavaRepresentation ( ) ; \n\t$F4120 ( copyDigits , numberLength ) $F135 ( System , digits , copyDigits , numberLength ) return new BigInteger ( sign , numberLength , copyDigits ) ; \n\t} \n"}, {"code": "$F21572 ( doc , elementList , nameNode , child , childData , load , _BOOL , assertEquals ) "}, {"code": "public String patchFixIds $F72 $F16566 ( properties ) "}, {"code": "public final void readFully $F97 ( b ) throws $F3258 { \n\t$F46502 ( readFully , b ) } \n"}, {"code": "private void createGui $F72 { \n\t$F40881 ( outerNamePanel ) $F40871 ( outerNamePanel ) $F40881 ( namePanel ) $F40867 ( namePanel ) final JLabel nameLabel = new CHelpLabel ( NUM00 + NUM00 , new CNameHelp $F72 ) ; \n\t$F114439 ( nameLabel ) $F40893 ( namePanel , nameLabel , BorderLayout ) $F30063 ( namePanel , m_nameTextField , BorderLayout ) $F30063 ( outerNamePanel , namePanel , BorderLayout ) $F40881 ( outerDescriptionPanel ) $F40867 ( outerDescriptionPanel ) $F40881 ( descriptionPanel ) $F40871 ( descriptionPanel ) $F167982 ( descriptionPanel ) descriptionPanel . add ( new JScrollPane ( m_descriptionField ) ) ; \n\t$F30063 ( outerDescriptionPanel , descriptionPanel , BorderLayout ) $F40901 ( buttonPanel ) buttonPanel . add ( $F26679 ) ; \n\t$F40867 ( buttonPanel ) buttonPanel . add ( m_saveButton ) ; \n\t$F40881 ( topPanel ) $F58125 ( topPanel , outerNamePanel , BorderLayout ) $F30063 ( topPanel , outerDescriptionPanel , BorderLayout ) $F30069 ( topPanel , buttonPanel , BorderLayout ) $F40881 ( bottomPanel ) bottomPanel . setBorder ( m_tableBorder ) ; \n\tfinal JScrollPane scrollPane = new JScrollPane ( m_childrenTagTable ) ; \n\t$F30063 ( bottomPanel , scrollPane , BorderLayout ) final JSplitPane splitPane = new JSplitPane ( JSplitPane . VERTICAL_SPLIT , _BOOL , topPanel , bottomPanel ) ; \n\tsplitPane . setOneTouchExpandable ( _BOOL ) ; \n\tsplitPane . setDividerLocation ( splitPane . getMinimumDividerLocation ( ) ) ; \n\t$F242063 ( splitPane ) add ( splitPane ) ; \n\t} \n"}, {"code": "public static boolean isJellybeanOrLater $F72 { \n\treturn Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN ; \n\t} \n"}, {"code": "public PartialCorrelationPdf ( int n , int k ) { \n\tthis . n = n ; \n\tthis . k = k ; \n\tdouble gammaRatio = gammaRatio ( n , k ) ; \n\tthis . constant = ( NUM00 / Math . pow ( Math . PI , NUM00 ) ) * gammaRatio ; \n\tthis . outsideExp = ( double ) ( n - k - NUM00 ) / NUM00 ; \n\t} \n"}, {"code": "private static boolean isEnabled $F72 { \n\tif ( SystemUtils . IS_OS_WINDOWS ) { \n\t\treturn _BOOL ; \n\t\t} \n\ttry { \n\t\t$F3803 lines = CommandUtil . executeCommandAndGetLines ( Collections . singletonList ( NUM00 ) ) ; \n\t\tfor ( String line : lines ) { \n\t\t\tif $F3578 ( line ) { \n\t\t\t\tif $F3578 ( line ) $F53787 ( Logger , _BOOL ) return _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F15720 return _BOOL ; \n\t} \n"}, {"code": "public boolean validate $F72 { \n\t$F24661 ( outputFile , outputPath ) if ( outputFile . exists ( ) || outputFile . isDirectory ( ) ) { \n\t\tinvalidMessage = NUM00 ; \n\t\treturn valid = _BOOL ; \n\t\t} \n\tif ( ! signMode ) { \n\t\t$F24661 ( keyFile , keyFilePath ) if ( $F1905 ( keyFile ) || keyFile . isDirectory ( ) ) { \n\t\t\tinvalidMessage = NUM00 ; \n\t\t\treturn valid = _BOOL ; \n\t\t\t} \n\t\t} \n\treturn valid = _BOOL ; \n\t} \n"}, {"code": "public void addResponseCodeListener ( ActionListener a ) $F6659 ( responseCodeListeners , a ) "}, {"code": "public double calculateLogLikelihood $F72 { \n\tdouble logL = NUM00 ; \n\tfor ( Statistic statistic : dataList ) { \n\t\tfor ( int j = NUM00 ; \n\t\tj < statistic . getDimension ( ) ; \n\t\tj ++ ) { \n\t\t\tlogL -= Math . log ( statistic . getStatisticValue ( j ) ) ; \n\t\t\t} \n\t\t} \n\treturn logL ; \n\t} \n"}, {"code": "public static boolean hasDeadStatesFromInitial ( Automaton a ) { \n\tBitSet reachableFromInitial = getLiveStatesFromInitial ( a ) ; \n\tBitSet reachableFromAccept = getLiveStatesToAccept ( a ) ; \n\treachableFromInitial . andNot ( reachableFromAccept ) ; \n\treturn reachableFromInitial . isEmpty ( ) == _BOOL ; \n\t} \n"}, {"code": "public Decimal subtract ( Decimal decimal ) { \n\tassertDefined ( ) ; \n\tif ( null == m_value ) $F3139 ( decimal ) BigDecimal value = m_value . subtract ( decimal . getBigDecimalValue ( ) ) ; \n\treturn new Decimal ( value , SCALE ) ; \n\t} \n"}, {"code": "public final boolean equals ( Object object ) { \n\t$F1933 ( object , _BOOL ) if ( ! ( object instanceof KnowledgeEdge ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tKnowledgeEdge pair = ( KnowledgeEdge ) object ; \n\treturn $F142656 ( from , pair , to ) ; \n\t} \n"}, {"code": "protected int skipLine ( int c ) throws IOException { \n\twhile ( c != - NUM00 && c != NUM00 && c != NUM00 ) $F145798 ( c , reader ) if ( c == NUM00 ) { \n\t\t$F10201 ( c , reader ) lineNo ++ ; \n\t\treportLocation ( lineNo , NUM00 ) ; \n\t\t} \n\telse if ( c == NUM00 ) { \n\t\t$F10201 ( c , reader ) if ( c == NUM00 ) $F145798 ( c , reader ) lineNo ++ ; \n\t\treportLocation ( lineNo , NUM00 ) ; \n\t\t} \n\treturn c ; \n\t} \n"}, {"code": "$F1 public void listVolumes ( CommandInput input , CompletionHandler completionHandler ) { \n\tcreateOrUpdateTargetSsl ( input ) ; \n\tURI uri = UriUtils . extendUri ( input . getDockerUri ( ) , NUM00 ) ; \n\tsendGet ( uri , null , completionHandler ) ; \n\t} \n"}, {"code": "public static ByteBuffer base64StringToByteBuffer ( String base64EncodedKey ) { \n\treturn ByteBuffer . wrap ( base64DecodeString ( base64EncodedKey ) ) ; \n\t} \n"}, {"code": "public boolean step $F72 { \n\t$F657 ( current , System ) if ( mStart == NUM00 || ( current - mStart < NUM00 ) ) { \n\t\tmProgress = NUM00 ; \n\t\t} \n\telse if ( current - mStart > mDuration ) { \n\t\tif ( mLoop ) { \n\t\t\tmProgress = NUM00 ; \n\t\t\tstart ( ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tmProgress = NUM00 ; \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\tmProgress = ( current - mStart ) / ( double ) mDuration ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected void load_raw_characters ( StringBuilder sb ) throws IOException { \n\tint c = read_char ( ) ; \n\tfor ( $F589 ) { \n\t\tc = read_char ( ) ; \n\t\tswitch ( c ) { \n\t\t\tcase CharacterSequence . CHAR_SEQ_ESCAPED_NEWLINE_SEQUENCE_1 : case CharacterSequence . CHAR_SEQ_ESCAPED_NEWLINE_SEQUENCE_2 : case CharacterSequence . CHAR_SEQ_ESCAPED_NEWLINE_SEQUENCE_3 : $F598 $F52533 $F665 $F1267 if ( ! IonTokenConstsX . is7bitValue ( c ) ) $F8576 ( c , read_large_char_sequence ) } \n\t\tif ( IonUTF8 . needsSurrogateEncoding ( c ) ) { \n\t\t\tsb . append ( IonUTF8 . highSurrogate ( c ) ) ; \n\t\t\tc = IonUTF8 . lowSurrogate ( c ) ; \n\t\t\t} \n\t\t$F36813 ( sb , c ) } \n\t} \n"}, {"code": "public SignatureFakingOracle ( final String documentString ) throws SignatureFakingException { \n\tSecurity . addProvider ( new BouncyCastleProvider $F72 ) ; \n\tsignatureValueElements = new LinkedList $F6869 $F72 ; \n\tkeyInfoElements = new LinkedList $F6869 $F72 ; \n\t$F36428 ( certificates ) certHandlers = new LinkedList < CertificateHandler > $F72 ; \n\ttry { \n\t\tdoc = DomUtilities . stringToDom ( documentString ) ; \n\t\tcrawlSignatureElements ( ) ; \n\t\t$F25390 ( log , signatureValueElements ) crawlKeyInfoElements ( ) ; \n\t\t$F25390 ( log , keyInfoElements ) } \n\tcatch ( SAXException e ) { \n\t\tthrow new SignatureFakingException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public ArbitraryLengthPathNode ( final TermNode left , final TermNode right , final VarNode tVarLeft , final VarNode tVarRight , final long lowerBound , final long upperBound ) { \n\tthis ( new BOp [ ] { \n\t\tnew JoinGroupNode $F72 } \n\t, NV . asMap ( new NV ( Annotations . LEFT_TERM , left ) , new NV ( Annotations . RIGHT_TERM , right ) , new NV ( Annotations . TRANSITIVITY_VAR_LEFT , tVarLeft ) , new NV ( Annotations . TRANSITIVITY_VAR_RIGHT , tVarRight ) , new NV ( Annotations . DROP_VARS , new ArrayList < VarNode > $F72 ) , new NV ( Annotations . LOWER_BOUND , lowerBound ) , new NV ( Annotations . UPPER_BOUND , upperBound ) ) ) ; \n\tfinal Set < VarNode > $F22304 ( dropVars ) ; \n\tdropVars . add ( tVarLeft ) ; \n\tdropVars . add ( tVarRight ) ; \n\tsetProperty ( Annotations . DROP_VARS , dropVars ) ; \n\t} \n"}, {"code": "$F34537 ( listener , changingListeners ) "}, {"code": "private Integer scanYamlDirectiveNumber ( Mark startMark ) { \n\tchar ch = reader . peek ( ) ; \n\tif ( ! Character . isDigit ( ch ) ) { \n\t\tthrow new ScannerException ( NUM00 , startMark , NUM00 + ch + NUM00 + $F1047 ( ch ) + NUM00 , reader . getMark ( ) ) ; \n\t\t} \n\tint length = NUM00 ; \n\twhile ( Character . isDigit ( reader . peek ( length ) ) ) { \n\t\tlength ++ ; \n\t\t} \n\tInteger value = Integer . parseInt ( reader . prefixForward ( length ) ) ; \n\treturn value ; \n\t} \n"}, {"code": "public static final String toBitString ( int i [ ] ) { \n\tStringBuilder $F144303 ( sb , i ) ; \n\tfor ( int b : i ) $F288 ( sb , b ) $F92 ( sb ) } \n"}, {"code": "public static ByteBuffer convertToSigned16BitSamples ( Buffer buffer ) { \n\treturn convertToSigned16BitSamples ( buffer . getSamples ( ) ) ; \n\t} \n"}, {"code": "boolean checkToken ( ByteWrapper token , Key nodeId , InetAddress ip , int port , Key lookupKey ) { \n\tupdateTokenTimestamps ( ) ; \n\tboolean valid = checkToken ( token , nodeId , ip , port , lookupKey , timestampCurrent . get ( ) ) || checkToken ( token , nodeId , ip , port , lookupKey , timestampPrevious ) ; \n\tif ( ! valid ) DHT . logDebug ( NUM00 + ip . getHostAddress ( ) ) ; \n\treturn valid ; \n\t} \n"}, {"code": "$F9749 ( namespace , attName , attValue , xmlWriter , registerPrefix ) "}, {"code": "public void expandAll $F72 { \n\tcancelEditing ( ) ; \n\tfinal TreeModel tm = getModel ( ) ; \n\tfinal Object root = tm . getRoot ( ) ; \n\tif ( root != null ) { \n\t\texpandAllPaths ( new TreePath ( root ) , tm ) ; \n\t\t} \n\t} \n"}, {"code": "protected void describeVocabularies ( final IVCount [ ] predicatePartitionCounts ) { \n\tfinal $F2689 namespaces = new LinkedHashSet $F4 $F72 ; \n\t{ \n\t\tfor ( IVCount tmp : predicatePartitionCounts ) { \n\t\t\tfinal URI p = ( URI ) tmp . getValue ( ) ; \n\t\t\t$F101311 ( namespace , p ) $F8996 ( namespace ) namespaces . add ( namespace ) ; \n\t\t\t} \n\t\t} \n\tfinal $F806 $F21575 ( a , namespaces ) ; \n\tArrays . sort ( a ) ; \n\tfor ( String namespace : a ) { \n\t\tg . add ( aDataset , VoidVocabularyDecl . vocabulary , f . createURI ( namespace ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void testInvokeAny4 $F72 throws Throwable { \n\tCountDownLatch latch = new CountDownLatch $F989 ; \n\t$F25236 ( e ) PoolCleaner cleaner = null ; \n\ttry { \n\t\tcleaner = cleaner ( e ) ; \n\t\t$F25247 ( l ) $F3761 ( l , latchAwaitingStringTask , latch ) $F722 ( l ) try { \n\t\t\te . invokeAny ( l ) ; \n\t\t\tshouldThrow ( ) ; \n\t\t\t} \n\t\t$F83403 $F38783 ( latch ) } \n\t$F14364 ( cleaner ) } \n"}, {"code": "private static void solve_l2r_l1l2_svr ( Problem prob , $F1986 w , Parameter param ) { \n\tint l = prob . l ; \n\tdouble C = param . C ; \n\tdouble p = param . p ; \n\tint w_size = prob . n ; \n\tdouble eps = param . eps ; \n\tint i , s , iter = NUM00 ; \n\tint max_iter = NUM00 ; \n\tint active_size = l ; \n\t$F4120 ( index , l ) double d , G , H ; \n\tdouble Gmax_old = Double . POSITIVE_INFINITY ; \n\tdouble Gmax_new , Gnorm1_new ; \n\tdouble Gnorm1_init = NUM00 ; \n\t$F9662 ( beta , l ) $F9662 ( QD , l ) $F1986 y = prob . y ; \n\t$F1986 lambda = new double [ ] { \n\t\tNUM00 / C } \n\t; \n\t$F1986 upper_bound = new double [ ] { \n\t\tDouble . POSITIVE_INFINITY } \n\t; \n\tif ( param . solverType == SolverType . L2R_L1LOSS_SVR_DUAL ) { \n\t\tlambda [ NUM00 ] = NUM00 ; \n\t\tupper_bound [ NUM00 ] = C ; \n\t\t} \n\tfor ( i = NUM00 ; \n\ti < l ; \n\ti ++ ) $F5629 ( beta , i ) for ( i = NUM00 ; \n\ti < w_size ; \n\ti ++ ) $F5629 ( w , i ) for ( i = NUM00 ; \n\ti < l ; \n\ti ++ ) { \n\t\tQD [ i ] = NUM00 ; \n\t\tfor ( Feature xi : prob . x [ i ] ) { \n\t\t\t$F10704 ( val , xi ) QD [ i ] += val * val ; \n\t\t\tw [ xi . getIndex ( ) - NUM00 ] += beta [ i ] * val ; \n\t\t\t} \n\t\tindex [ i ] = i ; \n\t\t} \n\twhile ( iter < max_iter ) { \n\t\tGmax_new = NUM00 ; \n\t\tGnorm1_new = NUM00 ; \n\t\tfor ( i = NUM00 ; \n\t\ti < active_size ; \n\t\ti ++ ) { \n\t\t\tint j = i + random . nextInt ( active_size - i ) ; \n\t\t\tswap ( index , i , j ) ; \n\t\t\t} \n\t\tfor ( s = NUM00 ; \n\t\ts < active_size ; \n\t\ts ++ ) { \n\t\t\ti = index [ s ] ; \n\t\t\tG = - y [ i ] + lambda [ GETI_SVR ( i ) ] * beta [ i ] ; \n\t\t\tH = QD [ i ] + lambda [ GETI_SVR ( i ) ] ; \n\t\t\tfor ( Feature xi : prob . x [ i ] ) { \n\t\t\t\tint ind = xi . getIndex ( ) - NUM00 ; \n\t\t\t\t$F10704 ( val , xi ) G += val * w [ ind ] ; \n\t\t\t\t} \n\t\t\tdouble Gp = G + p ; \n\t\t\tdouble Gn = G - p ; \n\t\t\tdouble violation = NUM00 ; \n\t\t\tif ( beta [ i ] == NUM00 ) { \n\t\t\t\tif ( Gp < NUM00 ) { \n\t\t\t\t\tviolation = - Gp ; \n\t\t\t\t\t} \n\t\t\t\telse if ( Gn > NUM00 ) { \n\t\t\t\t\tviolation = Gn ; \n\t\t\t\t\t} \n\t\t\t\telse if ( Gp > Gmax_old && Gn < - Gmax_old ) { \n\t\t\t\t\tactive_size -- ; \n\t\t\t\t\tswap ( index , s , active_size ) ; \n\t\t\t\t\ts -- ; \n\t\t\t\t\t$F598 } \n\t\t\t\t} \n\t\t\telse if ( beta [ i ] >= upper_bound [ GETI_SVR ( i ) ] ) { \n\t\t\t\tif ( Gp > NUM00 ) { \n\t\t\t\t\tviolation = Gp ; \n\t\t\t\t\t} \n\t\t\t\telse if ( Gp < - Gmax_old ) { \n\t\t\t\t\tactive_size -- ; \n\t\t\t\t\tswap ( index , s , active_size ) ; \n\t\t\t\t\ts -- ; \n\t\t\t\t\t$F598 } \n\t\t\t\t} \n\t\t\telse if ( beta [ i ] <= - upper_bound [ GETI_SVR ( i ) ] ) { \n\t\t\t\tif ( Gn < NUM00 ) { \n\t\t\t\t\tviolation = - Gn ; \n\t\t\t\t\t} \n\t\t\t\telse if ( Gn > Gmax_old ) { \n\t\t\t\t\tactive_size -- ; \n\t\t\t\t\tswap ( index , s , active_size ) ; \n\t\t\t\t\ts -- ; \n\t\t\t\t\t$F598 } \n\t\t\t\t} \n\t\t\telse if ( beta [ i ] > NUM00 ) { \n\t\t\t\tviolation = Math . abs ( Gp ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tviolation = Math . abs ( Gn ) ; \n\t\t\t\t} \n\t\t\t$F19410 ( Gmax_new , Math , violation ) Gnorm1_new += violation ; \n\t\t\tif ( Gp < H * beta [ i ] ) { \n\t\t\t\td = - Gp / H ; \n\t\t\t\t} \n\t\t\telse if ( Gn > H * beta [ i ] ) { \n\t\t\t\td = - Gn / H ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\td = - beta [ i ] ; \n\t\t\t\t} \n\t\t\tif $F20932 ( Math , d ) $F1448 double beta_old = beta [ i ] ; \n\t\t\tbeta [ i ] = Math . min ( Math . max ( beta [ i ] + d , - upper_bound [ GETI_SVR ( i ) ] ) , upper_bound [ GETI_SVR ( i ) ] ) ; \n\t\t\td = beta [ i ] - beta_old ; \n\t\t\tif ( d != NUM00 ) { \n\t\t\t\tfor ( Feature xi : prob . x [ i ] ) { \n\t\t\t\t\tw [ xi . getIndex ( ) - NUM00 ] += d * xi . getValue ( ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t$F126526 ( iter , Gnorm1_init , Gnorm1_new ) iter ++ ; \n\t\tif ( iter % NUM00 == NUM00 ) $F1210 ( info ) if ( Gnorm1_new <= eps * Gnorm1_init ) { \n\t\t\tif ( active_size == l ) $F5153 else { \n\t\t\t\tactive_size = l ; \n\t\t\t\tinfo ( NUM00 ) ; \n\t\t\t\tGmax_old = Double . POSITIVE_INFINITY ; \n\t\t\t\t$F598 } \n\t\t\t} \n\t\tGmax_old = Gmax_new ; \n\t\t} \n\tinfo ( NUM00 , iter ) ; \n\tif ( iter >= max_iter ) $F1210 ( info ) double v = NUM00 ; \n\tint nSV = NUM00 ; \n\tfor ( i = NUM00 ; \n\ti < w_size ; \n\ti ++ ) { \n\t\t$F60596 ( v , w , i ) } \n\tv = NUM00 * v ; \n\tfor ( i = NUM00 ; \n\ti < l ; \n\ti ++ ) { \n\t\tv += p * Math . abs ( beta [ i ] ) - y [ i ] * beta [ i ] + NUM00 * lambda [ GETI_SVR ( i ) ] * beta [ i ] * beta [ i ] ; \n\t\tif ( beta [ i ] != NUM00 ) { \n\t\t\tnSV ++ ; \n\t\t\t} \n\t\t} \n\tinfo ( NUM00 , v ) ; \n\tinfo ( NUM00 , nSV ) ; \n\t} \n"}, {"code": "public SignalGroupSubTableAction ( String s ) $F845 "}, {"code": "public static $F3803 generateXVals ( int from , int to ) { \n\t$F10144 ( xvals ) for ( int i = from ; \n\ti < to ; \n\ti ++ ) $F34171 ( xvals , i ) return xvals ; \n\t} \n"}, {"code": "public void testCompareToDiffSigns1 $F72 { \n\t$F67214 $F10679 int aSign = NUM00 ; \n\tint bSign = - NUM00 ; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F79260 ( assertEquals , aNumber , bNumber ) } \n"}, {"code": "private HashMap addAttr ( SvcReg reg , EntryClass eclass , int fldidx , Object value ) { \n\tHashMap [ ] attrMaps = serviceByAttr . get ( eclass ) ; \n\tif ( attrMaps == null ) { \n\t\tattrMaps = new HashMap [ eclass . getNumFields ( ) ] ; \n\t\tserviceByAttr . put ( eclass , attrMaps ) ; \n\t\t} \n\tHashMap map = attrMaps [ fldidx ] ; \n\tif ( map == null ) { \n\t\t$F6450 ( map ) ; \n\t\tattrMaps [ fldidx ] = map ; \n\t\t} \n\t$F73534 ( regs , map , value ) if ( regs == null ) { \n\t\t$F136190 ( regs ) map . put ( value , regs ) ; \n\t\t} \n\telse $F12651 ( regs , reg , map ) regs . add ( reg ) ; \n\treturn map ; \n\t} \n"}, {"code": "public QueryStringDecoderUtil ( URI uri ) { \n\tthis ( uri , Charset . defaultCharset ( ) ) ; \n\t} \n"}, {"code": "$F38947 ( rgbColor , red , green , blue , black , Math , cyan , magenta , yellow ) "}, {"code": "$F43277 ( listener , mListeners ) "}, {"code": "public static void showErrorMessage ( String msg ) $F127556 ( showErrorMessage , msg ) "}, {"code": "public final static NameValuePair parseNameValuePair $F45528 ( value , parser ) throws ParseException { \n\t$F826 ( value ) $F45529 ( parser , BasicHeaderValueParser ) $F45535 ( buffer , value ) buffer . append ( value ) ; \n\t$F45541 ( cursor , value ) return parser . parseNameValuePair ( buffer , cursor ) ; \n\t} \n"}, {"code": "public static String stripCharsInBag ( String s , String bag ) { \n\tint i ; \n\t$F4000 ( stringBuilder ) for ( $F23302 ( i , s ) ) { \n\t\t$F1280 ( c , s , i ) if $F85013 ( bag , c ) stringBuilder . append ( c ) ; \n\t\t} \n\t$F92 ( stringBuilder ) } \n"}, {"code": "public static double cos ( double radians ) { \n\treturn Math . cos ( radians ) ; \n\t} \n"}, {"code": "public static String formatNumber ( float number , int digitCount , boolean separateThousands ) { \n\t$F11577 ( out ) boolean neg = _BOOL ; \n\t$F40722 ( number ) boolean zero = _BOOL ; \n\tif ( number < NUM00 && number > - NUM00 ) { \n\t\tzero = _BOOL ; \n\t\t} \n\tif ( number < NUM00 ) $F385538 ( neg , _BOOL , number ) if ( digitCount > POW_10 . length ) $F65461 ( digitCount , POW_10 ) number *= POW_10 [ digitCount ] ; \n\t$F385541 ( lval , Math , number ) $F40997 ( ind , out ) int charCount = NUM00 ; \n\tboolean decimalPointAdded = _BOOL ; \n\twhile ( lval != NUM00 || charCount < ( digitCount + NUM00 ) ) { \n\t\t$F273037 ( digit , lval ) lval = lval / NUM00 ; \n\t\tout [ ind -- ] = ( char ) ( digit + NUM00 ) ; \n\t\tcharCount ++ ; \n\t\tif ( charCount == digitCount ) { \n\t\t\tout [ ind -- ] = NUM00 ; \n\t\t\tcharCount ++ ; \n\t\t\tdecimalPointAdded = _BOOL ; \n\t\t\t} \n\t\telse if ( separateThousands && lval != NUM00 && charCount > digitCount ) { \n\t\t\tif ( decimalPointAdded ) { \n\t\t\t\tif $F385546 ( charCount , digitCount ) { \n\t\t\t\t\tout [ ind -- ] = NUM00 ; \n\t\t\t\t\tcharCount ++ ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif $F385546 ( charCount , digitCount ) { \n\t\t\t\t\tout [ ind -- ] = NUM00 ; \n\t\t\t\t\tcharCount ++ ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F385557 ( zero , out , ind , charCount ) $F385557 ( neg , out , ind , charCount ) int start = out . length - charCount ; \n\treturn String . valueOf ( out , start , out . length - start ) ; \n\t} \n"}, {"code": "$F1 protected void onDestroy $F72 { \n\t$F112103 ( super ) doReallyStop ( _BOOL ) ; \n\tmFragments . dispatchDestroy ( ) ; \n\tif ( mLoaderManager != null ) { \n\t\tmLoaderManager . doDestroy ( ) ; \n\t\t} \n\t} \n"}, {"code": "$F166447 ( propertyName , in_vcl , beanContextChildSupport ) "}, {"code": "static public boolean doesFileExist ( Context c , String fileName , long fileSize , boolean deleteFileOnMismatch ) { \n\tFile fileForNewFile = new File ( Helpers . generateSaveFileName ( c , fileName ) ) ; \n\tif $F3428 ( fileForNewFile ) { \n\t\tif $F19634 ( fileForNewFile , fileSize ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t$F19637 ( deleteFileOnMismatch , fileForNewFile ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "static WindowsFileAttributes fromFindData ( long address ) { \n\t$F149755 ( fileAttrs , unsafe , address , OFFSETOF_FIND_DATA_ATTRIBUTES ) $F279493 ( creationTime , unsafe , address , OFFSETOF_FIND_DATA_CREATETIME ) $F279493 ( lastAccessTime , unsafe , address , OFFSETOF_FIND_DATA_LASTACCESSTIME ) $F279493 ( lastWriteTime , unsafe , address , OFFSETOF_FIND_DATA_LASTWRITETIME ) long size = ( ( long ) ( unsafe . getInt ( address + OFFSETOF_FIND_DATA_SIZEHIGH ) ) < < NUM00 ) + ( unsafe . getInt ( address + OFFSETOF_FIND_DATA_SIZELOW ) & NUM00 ) ; \n\tint reparseTag = isReparsePoint ( fileAttrs ) ? unsafe . getInt ( address + OFFSETOF_FIND_DATA_RESERVED0 ) : NUM00 ; \n\treturn new WindowsFileAttributes ( fileAttrs , creationTime , lastAccessTime , lastWriteTime , size , reparseTag , NUM00 , NUM00 , NUM00 ) ; \n\t} \n"}, {"code": "public static final void writeMapXml ( Map val , XmlSerializer out , WriteMapCallback callback ) throws $F18821 { \n\t$F2329 ( val ) Set s = val . entrySet ( ) ; \n\t$F10531 ( i , s ) while $F2921 ( i ) { \n\t\t$F53089 e = ( $F53089 ) i . next ( ) ; \n\t\twriteValueXml ( e . getValue ( ) , $F123408 ( e ) , out , callback ) ; \n\t\t} \n\t} \n"}, {"code": "public void fireEventProgrammatically ( Event event ) { \n\tif ( ! event . isConsumed ( ) ) ripplerPane . fireEvent ( event ) ; \n\t} \n"}, {"code": "private boolean hasFullEntry ( JsonValue entry , QuerySide querySide ) { \n\tif ( querySide == QuerySide . SOURCE && sourceQueryFullEntry != null ) { \n\t\treturn sourceQueryFullEntry ; \n\t\t} \n\telse if ( querySide == QuerySide . TARGET && targetQueryFullEntry != null ) { \n\t\treturn targetQueryFullEntry ; \n\t\t} \n\tif ( entry != null ) { \n\t\tshort ignoreFields = NUM00 ; \n\t\tif ( entry . isDefined ( NUM00 ) ) { \n\t\t\tignoreFields ++ ; \n\t\t\t} \n\t\tif ( entry . isDefined ( NUM00 ) ) { \n\t\t\tignoreFields ++ ; \n\t\t\t} \n\t\tignoreFields += NUM00 ; \n\t\treturn entry . size ( ) > ignoreFields ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isModule ( IResource resource ) { \n\treturn ( resource != null && TLA_EXTENSION . equals ( resource . getFileExtension ( ) ) ) ; \n\t} \n"}, {"code": "public int writeAnnotation ( Annotation annotation ) { \n\t$F35972 ( off , data ) writeByte ( annotation . visibility ) ; \n\twriteEncodedArray ( annotation . encodedAnnotation ) ; \n\treturn off ; \n\t} \n"}, {"code": "public static long fromInet4Address ( final InetAddress inetAddress ) { \n\tensureIsInet4Address ( inetAddress ) ; \n\treturn Integer . toUnsignedLong ( inetAddress . hashCode ( ) ) ; \n\t} \n"}, {"code": "public boolean revisionContainsTemplateName ( int revId , String templateName ) throws WikiApiException { \n\treturn revisionContainsTemplateNames ( revId , Arrays . asList ( $F8640 ( templateName ) ) ) ; \n\t} \n"}, {"code": "public List < GenericEntry > retrieveAllAccountInfoRequests ( Date fromDate ) throws AppsForYourDomainException , IOException , ServiceException { \n\tString url = BASE_URL + NUM00 + domain ; \n\tif ( fromDate != null ) { \n\t\turl += NUM00 + DATE_FORMAT . format ( fromDate ) ; \n\t\t} \n\treturn getAllPages ( new URL ( url ) , GenericFeed . class ) ; \n\t} \n"}, {"code": "protected void drawCylinder ( int x , int y , int w , int h , Color fillColor , Paint fillPaint , Color penColor , boolean isShadow ) { \n\tint h4 = h / NUM00 ; \n\tint r = w - NUM00 ; \n\tif ( fillColor != null || fillPaint != null ) { \n\t\tArea area = new Area ( new Rectangle ( x , y + h4 / NUM00 , r , h - h4 ) ) ; \n\t\tarea . add ( new Area ( new Rectangle ( x , y + h4 / NUM00 , r , h - h4 ) ) ) ; \n\t\tarea . add ( new Area ( new $F35359 ( x , y , r , h4 ) ) ) ; \n\t\tarea . add ( new Area ( new $F35359 ( x , y + h - h4 , r , h4 ) ) ) ; \n\t\tif ( isShadow ) { \n\t\t\tg . setColor ( mxConstants . SHADOW_COLOR ) ; \n\t\t\tg . translate ( mxConstants . SHADOW_OFFSETX , mxConstants . SHADOW_OFFSETY ) ; \n\t\t\tg . fill ( area ) ; \n\t\t\tg . translate ( - mxConstants . SHADOW_OFFSETX , - mxConstants . SHADOW_OFFSETY ) ; \n\t\t\t} \n\t\tif ( fillPaint != null ) $F158292 ( g , fillPaint ) else $F158293 ( g , fillColor ) g . fill ( area ) ; \n\t\t} \n\tif ( penColor != null ) { \n\t\tg . setColor ( penColor ) ; \n\t\tint h2 = h4 / NUM00 ; \n\t\tg . drawOval ( x , y , r , h4 ) ; \n\t\tg . drawLine ( x , y + h2 , x , y + h - h2 ) ; \n\t\tg . drawLine ( x + w - NUM00 , y + h2 , x + w - NUM00 , y + h - h2 ) ; \n\t\tg . drawArc ( x , y + h - h4 , r , h4 , NUM00 , - NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public StringList plus ( String ... args ) { \n\tStringList newList = new StringList $F72 ; \n\tnewList . addAll ( this ) ; \n\t$F9629 ( newList , Arrays , args ) return newList ; \n\t} \n"}, {"code": "private void walkParseTree ( List < SwiftBaseListener > listeners , TopLevelContext tree ) { \n\tParseTreeWalker walker = new ParseTreeWalker $F72 ; \n\t$F22620 ( listeners ) } \n"}, {"code": "$F1 public final char readChar $F72 throws IOException { \n\t$F52634 ( dis , work ) return ( char ) ( $F169749 ( work ) | $F18896 ( work ) ) ; \n\t} \n"}, {"code": "public static int truncatedCompareTo ( final Date date1 , final Date date2 , final int field ) { \n\tfinal Date truncatedDate1 = truncate ( date1 , field ) ; \n\tfinal Date truncatedDate2 = truncate ( date2 , field ) ; \n\t$F12554 ( truncatedDate1 , truncatedDate2 ) } \n"}, {"code": "protected List < DecompoundedWord > makeSplit ( String aWord ) { \n\tList < DecompoundedWord > result = new ArrayList < DecompoundedWord > $F72 ; \n\tfor ( $F1088 ( i , aWord ) ) { \n\t\tString leftWord = $F1399 ( aWord , i ) ; \n\t\t$F36289 ( rightWord , aWord , i ) boolean leftGood = dict . contains ( leftWord ) && leftWord . length ( ) >= minWordLength ; \n\t\tboolean rightGood = rightWord . length ( ) > minRestLength || $F1276 ( rightWord ) ; \n\t\tif ( leftGood && rightGood ) { \n\t\t\tDecompoundedWord split = DecompoundedWord . createFromString ( leftWord + NUM00 + rightWord ) ; \n\t\t\tsplit . setSplitPos ( i ) ; \n\t\t\tresult . add ( split ) ; \n\t\t\t} \n\t\tfor ( String morpheme : morphemes . getAll ( ) ) { \n\t\t\ttry { \n\t\t\t\tString leftWithoutMorpheme = $F15173 ( leftWord , morpheme ) ; \n\t\t\t\tif ( leftWord . endsWith ( morpheme ) && dict . contains ( leftWithoutMorpheme ) && rightGood ) { \n\t\t\t\t\tDecompoundedWord split = DecompoundedWord . createFromString ( leftWithoutMorpheme + NUM00 + morpheme + NUM00 + rightWord ) ; \n\t\t\t\t\tsplit . setSplitPos ( i ) ; \n\t\t\t\t\tresult . add ( split ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tcatch ( StringIndexOutOfBoundsException e ) $F1448 } \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F9105 ( url ) "}, {"code": "public static String classNamePath ( String className ) { \n\tString filename = className . replace ( NUM00 , File . separator ) ; \n\t$F56558 ( filename ) if $F56559 ( filename ) { \n\t\t$F31601 ( filename ) } \n\treturn NUM00 + File . separator + filename + NUM00 ; \n\t} \n"}, {"code": "public void removeTitlePrefix ( String prfx ) { \n\ttitlePrefix . remove ( prfx ) ; \n\tfirePropertyChange ( TITLE_PREFIX , null , titlePrefix ) ; \n\t} \n"}, {"code": "public void send ( Set recipients , boolean multicast ) throws InterruptedException , ReplyException { \n\t$F179935 ( isDebugEnabled , logger ) $F2758 ( Thread ) recipients = new HashSet ( recipients ) ; \n\tDistributedMember me = originDm . getDistributionManagerId ( ) ; \n\t$F80306 ( recipients , me ) $F291442 ( isDebugEnabled , logger , recipients ) rp = new ReplyProcessor21 ( originDm , recipients ) ; \n\tprocessorId = rp . getProcessorId ( ) ; \n\tsetRecipients ( recipients ) ; \n\tsetMulticast ( multicast ) ; \n\tSet failures = originDm . putOutgoing ( this ) ; \n\tif $F8841 ( failures ) { \n\t\tfor ( $F2774 ( i , failures ) ) { \n\t\t\tInternalDistributedMember mbr = ( InternalDistributedMember ) i . next ( ) ; \n\t\t\t$F291442 ( isDebugEnabled , logger , mbr ) } \n\t\t} \n\trp . waitForReplies ( ) ; \n\t} \n"}, {"code": "private boolean isRelevant ( Object service , $F12345 attributes ) { \n\tLOOP : for ( Entry e : _serviceAttributes ) { \n\t\tfor ( Entry en : attributes ) { \n\t\t\tif $F1238 ( e , en ) continue LOOP ; \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\tboolean flag = _BOOL ; \n\tfor ( Entry en : attributes ) $F42256 ( _serviceName , en , flag , _BOOL ) $F25096 ( flag , _BOOL ) flag = _BOOL ; \n\tfor ( Class cl : _classes ) { \n\t\tif $F38790 ( cl , service ) $F3468 ( flag , _BOOL ) } \n\treturn flag ; \n\t} \n"}, {"code": "private static boolean eq ( Object o1 , Object o2 ) $F64386 ( o1 , o2 ) "}, {"code": "public int findCarByRoadNumber ( String roadNumber ) { \n\tif ( sysList != null ) { \n\t\tif $F2137 ( roadNumber , _roadNumber ) { \n\t\t\treturn getIndex ( NUM00 , roadNumber ) ; \n\t\t\t} \n\t\tint index = getIndex ( _index , roadNumber ) ; \n\t\t$F236432 ( index ) return getIndex ( NUM00 , roadNumber ) ; \n\t\t} \n\t$F150 } \n"}, {"code": "@ SlashedClassName @ SuppressFBWarnings ( NUM00 ) public static String toSlashedClassName ( @ SlashedClassName ( when = When . UNKNOWN ) String className ) { \n\tif $F48846 ( className ) { \n\t\treturn DescriptorFactory . canonicalizeString ( $F2934 ( className ) ) ; \n\t\t} \n\treturn className ; \n\t} \n"}, {"code": "public static double P_AveragePrecision ( int y [ ] , int r [ ] ) { \n\tdouble avg_prec = NUM00 ; \n\tint L = y . length ; \n\t$F67791 ( ones ) for ( $F119 ( j , L ) ) { \n\t\tif ( y [ j ] == NUM00 ) $F207 ( ones , j ) } \n\tif $F119130 ( ones ) $F1082 for ( int j : ones ) { \n\t\tdouble s = NUM00 ; \n\t\tfor ( int k : ones ) { \n\t\t\tif ( r [ k ] <= r [ j ] ) { \n\t\t\t\ts ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\tavg_prec += ( s / ( NUM00 + r [ j ] ) ) ; \n\t\t} \n\tavg_prec /= ones . size ( ) ; \n\treturn avg_prec ; \n\t} \n"}, {"code": "public Location newLocation ( String name ) { \n\tLocation location = getLocationByName ( name ) ; \n\tif ( location == null ) { \n\t\t_id ++ ; \n\t\tlocation = new Location ( Integer . toString ( _id ) , name ) ; \n\t\t$F10192 ( oldSize , Integer , _locationHashTable ) $F33163 ( _locationHashTable , location ) $F10197 ( setDirtyAndFirePropertyChange , LISTLENGTH_CHANGED_PROPERTY , oldSize , Integer , _locationHashTable ) } \n\treturn location ; \n\t} \n"}, {"code": "$F1 public void close $F72 { \n\tclosing = _BOOL ; \n\tif ( reservations == null || reservations . compareAndSet ( $F29083 ) ) doClose ( ) ; \n\t} \n"}, {"code": "private void removeOMADownloadFromSharedPrefs ( long downloadId ) { \n\t$F47059 ( omaDownloads , getStoredDownloadInfo , PENDING_OMA_DOWNLOADS ) for ( String omaDownload : omaDownloads ) { \n\t\tOMAEntry entry = OMAEntry . parseOMAEntry ( omaDownload ) ; \n\t\tif ( entry . mDownloadId == downloadId ) { \n\t\t\tomaDownloads . remove ( omaDownload ) ; \n\t\t\tstoreDownloadInfo ( PENDING_OMA_DOWNLOADS , omaDownloads ) ; \n\t\t\t$F665 } \n\t\t} \n\t} \n"}, {"code": "public static boolean isAndroidSdkDirInLocalPropertiesFile ( $F1113 File projectDir ) { \n\tString androidHome = getAndroidHomeFromLocalPropertiesFile ( projectDir ) ; \n\tif $F48189 ( Strings , androidHome ) { \n\t\t$F574 ( msg , String , androidHome ) LOG . info ( msg ) ; \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static boolean hasTokenInformation ( Bundle bundle ) { \n\t$F1933 ( bundle , _BOOL ) $F19101 ( token , bundle , TOKEN_KEY ) if $F38892 ( token ) { \n\t\treturn _BOOL ; \n\t\t} \n\tlong expiresMilliseconds = bundle . getLong ( EXPIRATION_DATE_KEY , NUM00 ) ; \n\t$F6482 ( expiresMilliseconds , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "public void resetPolicy $F72 { \n\tmPreferences . putString ( PREF_LAST_RESPONSE , Integer . toString ( Policy . RETRY ) ) ; \n\tsetRetryUntil ( DEFAULT_RETRY_UNTIL ) ; \n\tsetMaxRetries ( DEFAULT_MAX_RETRIES ) ; \n\tsetRetryCount ( Long . parseLong ( DEFAULT_RETRY_COUNT ) ) ; \n\tsetValidityTimestamp ( DEFAULT_VALIDITY_TIMESTAMP ) ; \n\t$F17621 ( mPreferences ) } \n"}, {"code": "$F1 public boolean connectionAllowed ( String eventName ) { \n\tif ( eventName . equals ( NUM00 ) && m_listenees . containsKey ( eventName ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static Vector2 pow ( Vector2 o , double power ) { \n\treturn new Vector2 ( Math . pow ( o . x , power ) , Math . pow ( o . z , power ) ) ; \n\t} \n"}, {"code": "public static Object invokeStatic ( String clazz , String methodName , $F749 types , $F131 values ) throws NoSuchMethodException { \n\ttry { \n\t\treturn invokeStatic ( Class . forName ( clazz ) , methodName , types , values ) ; \n\t\t} \n\tcatch ( ClassNotFoundException e ) { \n\t\tthrow new NoSuchMethodException ( NUM00 + clazz + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public Prototype undump ( InputStream stream , String chunkname ) throws IOException { \n\tif ( stream . read ( ) != LUA_SIGNATURE [ NUM00 ] || stream . read ( ) != LUA_SIGNATURE [ NUM00 ] || stream . read ( ) != LUA_SIGNATURE [ NUM00 ] || stream . read ( ) != LUA_SIGNATURE [ NUM00 ] ) $F1274 String sname = getSourceName ( chunkname ) ; \n\tLoadState s = new LoadState ( stream , sname ) ; \n\ts . loadHeader ( ) ; \n\tswitch ( s . luacNumberFormat ) { \n\t\t$F160093 ( NUMBER_FORMAT_FLOATS_OR_DOUBLES , NUMBER_FORMAT_INTS_ONLY , NUMBER_FORMAT1_PATCH_INT32 ) $F1267 throw new LuaError $F580 ; \n\t\t} \n\treturn s . loadFunction ( LuaString . valueOf ( sname ) ) ; \n\t} \n"}, {"code": "public void addButton ( URL url , String info , ActionListener al ) { \n\tJButton b = new JButton ( new ImageIcon ( url , info ) ) ; \n\tb . setToolTipText ( info ) ; \n\tb . setMargin ( $F32450 ) ; \n\tb . addActionListener ( al ) ; \n\tb . setBorderPainted ( _BOOL ) ; \n\tadd ( b ) ; \n\t} \n"}, {"code": "private void mapRequestToResponses ( Matcher < Request > requestMatcher , ResponseSource responses ) { \n\tmappings . add ( new MatcherResponseSourcePair ( requestMatcher , responses ) ) ; \n\t} \n"}, {"code": "$F1 protected void commitToInput $F72 { \n\tJmxBeanSensorAssignment assignment = getInput ( ) ; \n\tif ( null != assignment ) { \n\t\tassignment . setDomain ( domainText . getText ( ) ) ; \n\t\tassignment . setObjectNameParameters ( new $F4188 ( parametersMap ) ) ; \n\t\tif ( allAttributesButton . getSelection ( ) ) { \n\t\t\tassignment . setAttributes ( $F87295 ( Collections ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tassignment . setAttributes ( $F28906 ( attributesSet ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static $F806 split ( String original , String separator ) { \n\t$F6518 ( nodes ) $F12747 ( index , original , separator ) while ( index >= NUM00 ) { \n\t\tnodes . addElement ( original . substring ( NUM00 , index ) ) ; \n\t\t$F29993 ( original , index , separator ) index = original . indexOf ( separator ) ; \n\t\t} \n\tnodes . addElement ( original ) ; \n\t$F5442 ( ret , nodes ) for ( $F2277 ( i , nodes ) ) { \n\t\tret [ i ] = $F1766 ( nodes , i ) ; \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "public void insertTwin ( Instruction inst , Instruction twin ) { \n\tListIterator < GCIRMapElement > iter = list . listIterator ( ) ; \n\twhile $F2921 ( iter ) { \n\t\tGCIRMapElement newPtr = iter . next ( ) ; \n\t\tif ( newPtr . getInstruction ( ) == inst ) { \n\t\t\titer . add ( newPtr . createTwin ( twin ) ) ; \n\t\t\t$F665 } \n\t\t} \n\tthrow new OptimizingCompilerException ( NUM00 + inst + NUM00 ) ; \n\t} \n"}, {"code": "public java . lang . Object newInstance $F72 throws java . lang . InstantiationException , java . lang . IllegalAccessException { \n\tObject o = newInstanceImpl ( ) ; \n\tif ( o == null ) { \n\t\tthrow new InstantiationException $F72 ; \n\t\t} \n\treturn o ; \n\t} \n"}, {"code": "FormatSpecifierParser ( String format ) { \n\tthis . format = format ; \n\tthis . length = format . length ( ) ; \n\t} \n"}, {"code": "public static void toString ( $F33240 iter , String separator , StringBuilder sb ) { \n\twhile $F2921 ( iter ) { \n\t\t$F45691 ( sb , iter ) $F173088 ( iter , sb , separator ) } \n\t} \n"}, {"code": "public boolean isFull $F72 { \n\tif ( maxSize > NUM00 && notifications . size ( ) >= maxSize ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void schedulePlaylistSave $F72 { \n\tif ( ! mPlaylistLoading ) { \n\t\tif $F48405 ( mPlaylistSavePending , _BOOL ) { \n\t\t\tmThreadPoolManager . scheduleOnce ( new PlaylistSaveTask $F72 , NUM00 , TimeUnit . SECONDS ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean isToRead $F72 { \n\tIterator < VariableValue > i = variables . iterator ( ) ; \n\twhile $F2921 ( i ) { \n\t\tVariableValue v = i . next ( ) ; \n\t\tif ( v . isToRead ( ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void actionPerformed ( ActionEvent e ) $F5795 ( navigateToPriorDemo ) "}, {"code": "public String toString $F72 { \n\t$F280 ( text ) for ( $F1139 ( i , m_Elements ) ) { \n\t\t$F96530 ( i , text ) text . append ( Utils . doubleToString ( m_Elements [ i ] , NUM00 ) ) ; \n\t\t} \n\t$F84 ( text ) $F92 ( text ) } \n"}, {"code": "$F1309 public static Integer Integer ( int i ) $F62107 ( Integer , i ) "}, {"code": "$F1322 ( criteria , oredCriteria ) "}, {"code": "$F47011 ( tag , msg , args , sLevel , LEVEL_VERBOSE , String , Log ) "}, {"code": "public void saveIndexes $F72 { \n\t$F12181 ( toSave ) synchronized ( this ) { \n\t\t$F131 valueTable = this . indexes . valueTable ; \n\t\tfor ( $F151668 ( i , l , valueTable ) ) { \n\t\t\tIndex index = ( Index ) valueTable [ i ] ; \n\t\t\t$F67023 ( index , toSave ) } \n\t\t} \n\tboolean allSaved = _BOOL ; \n\tfor ( $F62958 ( i , length , toSave ) ) { \n\t\tIndex index = ( Index ) toSave . get ( i ) ; \n\t\tReadWriteMonitor monitor = index . monitor ; \n\t\t$F45557 ( monitor ) try { \n\t\t\tmonitor . enterRead ( ) ; \n\t\t\tif ( index . hasChanged ( ) ) { \n\t\t\t\tif ( monitor . exitReadEnterWrite ( ) ) { \n\t\t\t\t\ttry { \n\t\t\t\t\t\tsaveIndex ( index ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\tcatch ( IOException e ) { \n\t\t\t\t\t\tif ( VERBOSE ) { \n\t\t\t\t\t\t\tUtil . verbose ( NUM00 , System . err ) ; \n\t\t\t\t\t\t\t$F301 ( e ) } \n\t\t\t\t\t\tallSaved = _BOOL ; \n\t\t\t\t\t\t} \n\t\t\t\t\tfinally { \n\t\t\t\t\t\tmonitor . exitWriteEnterRead ( ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tallSaved = _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tfinally { \n\t\t\tmonitor . exitRead ( ) ; \n\t\t\t} \n\t\t} \n\tif ( this . participantsContainers != null && this . participantUpdated ) { \n\t\twriteParticipantsIndexNamesFile ( ) ; \n\t\tthis . participantUpdated = _BOOL ; \n\t\t} \n\tthis . needToSave = ! allSaved ; \n\t} \n"}, {"code": "private double match_bitapScore $F33970 ( e , x , loc , pattern ) { \n\tfloat accuracy = ( float ) e / pattern . length ( ) ; \n\t$F11871 ( proximity , Math , loc , x ) if ( Match_Distance == NUM00 ) { \n\t\treturn proximity == NUM00 ? accuracy : NUM00 ; \n\t\t} \n\treturn accuracy + $F124570 ( proximity , Match_Distance ) ; \n\t} \n"}, {"code": "$F25079 ( deltaY , mPtrIndicator , DEBUG , PtrCLog , LOG_TAG , String , to , PtrIndicator , change , updatePos ) "}, {"code": "public void putAll $F15182 ( m ) { \n\t$F4173 ( tryPresize , m ) for ( $F15184 ( e , m ) ) putVal ( e . getKey ( ) , e . getValue ( ) , _BOOL ) ; \n\t} \n"}, {"code": "public UndoableEdit insertString ( int where , String str ) throws BadLocationException { \n\tif ( where >= count || where < NUM00 ) { \n\t\tthrow new BadLocationException ( NUM00 , count ) ; \n\t\t} \n\t$F7782 ( chars , str ) replace ( where , NUM00 , chars , NUM00 , chars . length ) ; \n\tif ( marks != null ) { \n\t\tupdateMarksForInsert ( where , str . length ( ) ) ; \n\t\t} \n\treturn new InsertUndo ( where , str . length ( ) ) ; \n\t} \n"}, {"code": "$F198049 ( Byte , getValue ) "}, {"code": "boolean writeData $F72 throws IOException { \n\tint tosend ; \n\tint sent ; \n\t$F2175 ( block , kBlockSize ) do { \n\t\ttosend = Math . min ( sendStreamSize - totalSent , block . length ) ; \n\t\t$F21535 ( System , sendData , totalSent , block , tosend ) if ( tosend > NUM00 ) { \n\t\t\tsent = localSend ( block , tosend ) ; \n\t\t\tupdateLocalClock ( ) ; \n\t\t\tif ( sent != - NUM00 ) { \n\t\t\t\ttotalSent += sent ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F105262 ( logger , Level ) } \n\t\t\t} \n\t\telse { \n\t\t\tsent = tosend = NUM00 ; \n\t\t\t} \n\t\t} \n\twhile ( sent > NUM00 ) ; \n\tif $F70311 ( logger , Level ) { \n\t\tlogger . log ( Level . FINER , NUM00 + totalSent + NUM00 + ( sendStreamSize - totalSent ) ) ; \n\t\t} \n\treturn tosend == NUM00 ; \n\t} \n"}, {"code": "public static int copyAndCloseOutput ( Reader input , Writer output ) throws IOException { \n\ttry $F8587 ( copy , input , output ) $F3229 ( output ) } \n"}, {"code": "public int checkBookiesUp ( int count , int timeout ) throws Exception { \n\tZooKeeper zkc = connectZooKeeper ( zkHost , zkPort , zkTimeoutSec ) ; \n\ttry { \n\t\tint mostRecentSize = NUM00 ; \n\t\tfor ( $F119 ( i , timeout ) ) { \n\t\t\ttry { \n\t\t\t\t$F3803 children = zkc . getChildren ( NUM00 , _BOOL ) ; \n\t\t\t\t$F36382 ( children ) $F8935 ( mostRecentSize , children ) if ( ( mostRecentSize > count ) || LOG . isDebugEnabled ( ) ) { \n\t\t\t\t\tLOG . info ( NUM00 + mostRecentSize + NUM00 + NUM00 + count ) ; \n\t\t\t\t\tif ( ( mostRecentSize > count ) || LOG . isTraceEnabled ( ) ) { \n\t\t\t\t\t\tfor ( String child : children ) $F10090 ( LOG , child ) } \n\t\t\t\t\t} \n\t\t\t\t$F15290 ( mostRecentSize , count ) } \n\t\t\tcatch ( KeeperException e ) $F845 $F9470 ( Thread ) } \n\t\treturn mostRecentSize ; \n\t\t} \n\t$F3229 ( zkc ) } \n"}, {"code": "public Point2D inverseTransform ( Point2D src , Point2D dst ) { \n\ttry { \n\t\tsrc . setLocation ( src . getX ( ) + rotXOffset , src . getY ( ) + rotYOffset ) ; \n\t\tdst = rotTransform . inverseTransform ( src , dst ) ; \n\t\t} \n\tcatch ( NoninvertibleTransformException e ) { \n\t\tlogger . log ( Level . FINE , e . getMessage ( ) , e ) ; \n\t\t} \n\treturn dst ; \n\t} \n"}, {"code": "public static Throwable shouldFail ( Class clazz , Closure code ) { \n\tThrowable th = null ; \n\ttry $F180315 ( code ) catch ( GroovyRuntimeException gre ) { \n\t\tth = ScriptBytecodeAdapter . unwrap ( gre ) ; \n\t\t} \n\t$F268630 ( th , e ) if ( th == null ) { \n\t\tfail ( $F20488 ( code , clazz ) ) ; \n\t\t} \n\telse if $F78643 ( clazz , th ) { \n\t\tfail ( $F106504 ( code , clazz , th ) ) ; \n\t\t} \n\treturn th ; \n\t} \n"}, {"code": "public int write ( $F96 destMac , $F96 packet , int offset , int byteCount ) { \n\t$F896 ( destMac ) $F896 ( packet ) $F11673 ( Arrays , packet , offset , byteCount ) if $F11845 ( destMac ) { \n\t\tthrow new IllegalArgumentException $F75477 ( destMac ) ; \n\t\t} \n\treturn sendPacket ( fd , mInterfaceName , mProtocolType , destMac , packet , offset , byteCount ) ; \n\t} \n"}, {"code": "private Boolean processYESNO $F17723 ( handler , uri , name , rawName , value ) throws $F2253 { \n\tif ( ! $F40270 ( value ) ) { \n\t\thandleError ( handler , XSLTErrorResources . INVALID_BOOLEAN , $F40356 ( name , value ) , null ) ; \n\t\t$F1274 } \n\treturn new Boolean ( value . equals ( NUM00 ) ? _BOOL : _BOOL ) ; \n\t} \n"}, {"code": "protected $F104317 loadRMAData ( int C_BPartner_ID ) { \n\t$F104317 list = new $F104317 $F72 ; \n\t$F180114 ( sqlStmt ) PreparedStatement pstmt = null ; \n\ttry { \n\t\t$F47577 ( pstmt , DB , sqlStmt ) $F47 ( pstmt , C_BPartner_ID ) $F49 ( rs , pstmt ) while $F1682 ( rs ) { \n\t\t\tlist . add ( new KeyNamePair ( rs . getInt ( NUM00 ) , rs . getString ( NUM00 ) ) ) ; \n\t\t\t} \n\t\t$F59 ( rs ) } \n\tcatch ( SQLException e ) { \n\t\tlog . log ( Level . SEVERE , sqlStmt . toString ( ) , e ) ; \n\t\t} \n\tfinally { \n\t\tif ( pstmt != null ) { \n\t\t\ttry $F881 ( pstmt ) catch ( Exception ex ) { \n\t\t\t\tlog . severe ( NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn list ; \n\t} \n"}, {"code": "$F1 public List < WorkOrder > searchWOForBilling ( $F87266 ( criteriaMap ) ) { \n\t$F980 ( logger ) final List < WorkOrder > filteredList = new ArrayList < WorkOrder > $F72 ; \n\t$F111652 ( criteriaMap , ACTION_FLAG ) for ( final WorkOrder workorder : searchWO ( criteriaMap ) ) if ( ! $F13536 ( isWOValidforBill , workorder ) ) filteredList . add ( workorder ) ; \n\treturn filteredList ; \n\t} \n"}, {"code": "public Week $F93037 ( time , zone , locale ) { \n\t$F19400 ( ParamChecks , time ) $F19400 ( ParamChecks , zone ) $F19400 ( ParamChecks , locale ) $F17013 ( calendar , Calendar , zone , locale ) calendar . setTime ( time ) ; \n\tint tempWeek = calendar . get ( Calendar . WEEK_OF_YEAR ) ; \n\tif ( tempWeek == NUM00 && $F21623 ( calendar , Calendar ) == Calendar . DECEMBER ) { \n\t\tthis . week = NUM00 ; \n\t\tthis . year = ( short ) ( $F21621 ( calendar , Calendar ) + NUM00 ) ; \n\t\t} \n\telse { \n\t\tthis . week = ( byte ) Math . min ( tempWeek , LAST_WEEK_IN_YEAR ) ; \n\t\t$F91762 ( yyyy , calendar , Calendar ) if ( $F21623 ( calendar , Calendar ) == Calendar . JANUARY && this . week >= NUM00 ) { \n\t\t\tyyyy -- ; \n\t\t\t} \n\t\tthis . year = ( short ) yyyy ; \n\t\t} \n\tpeg ( calendar ) ; \n\t} \n"}, {"code": "public ResourceQueue ( final NonBlockingLockManagerWithNewDesign $F23350 lockService , final R resource ) { \n\t$F10057 ( lockService ) $F10057 ( resource ) this . lockService = lockService ; \n\tthis . resource = resource ; \n\tthis . queue = new LinkedBlockingQueue $F4203 $F72 ; \n\tthis . statisticsTask = new QueueSizeMovingAverageTask ( resource . toString ( ) , queue ) ; \n\t} \n"}, {"code": "public void encodeAndSign ( X500Name subject , Signature signature ) throws CertificateException , IOException , SignatureException { \n\tDerOutputStream out , scratch ; \n\t$F96 certificateRequestInfo ; \n\t$F96 sig ; \n\tif ( encoded != null ) throw new SignatureException $F580 ; \n\tthis . subject = subject ; \n\t$F153010 ( scratch ) scratch . putInteger ( BigInteger . ZERO ) ; \n\tsubject . encode ( scratch ) ; \n\tscratch . write ( subjectPublicKeyInfo . getEncoded ( ) ) ; \n\tattributeSet . encode ( scratch ) ; \n\t$F153010 ( out ) $F109543 ( out , DerValue , scratch ) $F3031 ( certificateRequestInfo , out ) scratch = out ; \n\t$F6163 ( signature , certificateRequestInfo ) sig = signature . sign ( ) ; \n\tAlgorithmId algId = null ; \n\ttry { \n\t\talgId = AlgorithmId . get ( signature . getAlgorithm ( ) ) ; \n\t\t} \n\tcatch ( NoSuchAlgorithmException nsae ) { \n\t\tthrow new SignatureException ( nsae ) ; \n\t\t} \n\talgId . encode ( scratch ) ; \n\tscratch . putBitString ( sig ) ; \n\t$F153010 ( out ) $F109543 ( out , DerValue , scratch ) $F3031 ( encoded , out ) } \n"}, {"code": "public synchronized void schedulePeriodicTask ( TimerTask task , long period ) { \n\ttry { \n\t\tm_timer . scheduleAtFixedRate ( task , NUM00 , period ) ; \n\t\t} \n\tcatch ( IllegalStateException ie ) { \n\t\tm_timer = new Timer $F72 ; \n\t\tm_timer . scheduleAtFixedRate ( task , NUM00 , period ) ; \n\t\t} \n\t} \n"}, {"code": "public static String abbreviate ( String str , FontMetrics fm , int width ) { \n\t$F317241 ( lastblank , nchars , cumx ) while ( cumx < width && nchars < str . length ( ) ) { \n\t\tif $F11974 ( Character , str , nchars ) { \n\t\t\tlastblank = nchars ; \n\t\t\t} \n\t\tcumx += fm . charWidth ( str . charAt ( nchars ) ) ; \n\t\tnchars ++ ; \n\t\t} \n\tif ( nchars < str . length ( ) && lastblank > NUM00 ) { \n\t\tnchars = lastblank ; \n\t\t} \n\treturn ( nchars > NUM00 ? str . substring ( NUM00 , nchars ) : str ) ; \n\t} \n"}, {"code": "protected void stopWraparoundTest $F72 { \n\tif ( testRunning && wrapTest ) { \n\t\t$F5191 ( wrapTimer ) statusText1 . setText ( $F11846 ( Integer , numErrors ) ) ; \n\t\tstatusText1 . setVisible ( _BOOL ) ; \n\t\tstatusText2 . setText ( Integer . toString ( numIterations ) + NUM00 ) ; \n\t\tstatusText2 . setVisible ( _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "protected void checkRowIndex ( final int row ) throws MathIllegalArgumentException { \n\tif ( row < NUM00 || row >= getRowDimension ( ) ) { \n\t\tthrow new MathIllegalArgumentException ( LocalizedCoreFormats . ROW_INDEX , row , NUM00 , getRowDimension ( ) - NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private void nukeSymbols $F72 { \n\t_count = NUM00 ; \n\t_longestCollisionList = NUM00 ; \n\t$F9952 ( Arrays , _mainHash ) $F17838 ( Arrays , _mainNames ) $F17838 ( Arrays , _collList ) _collCount = NUM00 ; \n\t_collEnd = NUM00 ; \n\t} \n"}, {"code": "private static float determineEnemyBlitzStrength ( final Territory blitzHere , final List < Route > blitzTerrRoutes , final List < Territory > blockTerr , final GameData data , final PlayerID ePlayer ) { \n\tfinal $F87074 $F9626 ( ignore ) ; \n\t$F114092 ( ignore ) final CompositeMatch $F101 blitzUnit = new CompositeMatchAnd $F200 ( Matches . unitIsOwnedBy ( ePlayer ) , Matches . UnitCanBlitz , Matches . UnitCanMove ) ; \n\tfinal CompositeMatch < Territory > validBlitzRoute = new CompositeMatchAnd $F200 ( Matches . territoryHasNoEnemyUnits ( ePlayer , data ) , Matches . TerritoryIsNotImpassableToLandUnits ( ePlayer , data ) ) ; \n\tfinal List < Route > $F204 ( routes ) ; \n\tfinal $F336297 blitzUnits = findAttackers ( blitzHere , NUM00 , ignore , ePlayer , data , blitzUnit , validBlitzRoute , blockTerr , routes , _BOOL ) ; \n\tfor ( final Route r : routes ) { \n\t\tif ( r . numberOfSteps ( ) == NUM00 ) $F207 ( blitzTerrRoutes , r ) } \n\treturn strength ( blitzUnits , _BOOL , _BOOL , _BOOL ) ; \n\t} \n"}, {"code": "public Name join ( String identifier ) { \n\tvalidateLowerUnderscore ( identifier ) ; \n\tList < NamePiece > $F204 ( newPieceList ) ; \n\tnewPieceList . addAll ( namePieces ) ; \n\tnewPieceList . add ( new NamePiece ( identifier , CaseFormat . LOWER_UNDERSCORE ) ) ; \n\treturn new Name ( newPieceList ) ; \n\t} \n"}, {"code": "private LocalDateTime parseDate ( String dateStr , boolean tryAgain ) { \n\tLocalDateTime date = LocalDateTime . now ( ZoneId . of ( NUM00 ) ) ; \n\tif ( mDateTimeFormatter == null ) { \n\t\tinitFormatter ( dateStr ) ; \n\t\t} \n\tif ( mDateTimeFormatter != null ) { \n\t\ttry { \n\t\t\tdate = LocalDateTime . parse ( dateStr , mDateTimeFormatter ) ; \n\t\t\t} \n\t\tcatch ( DateTimeParseException e ) { \n\t\t\tTimber . d ( String . format ( NUM00 , dateStr ) ) ; \n\t\t\tif ( tryAgain ) { \n\t\t\t\tTimber . d ( NUM00 ) ; \n\t\t\t\tmDateTimeFormatter = null ; \n\t\t\t\tparseDate ( dateStr , _BOOL ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn date ; \n\t} \n"}, {"code": "public String toString $F72 { \n\tString string = caller ; \n\tif ( level > NUM00 || thread != - NUM00 ) { \n\t\tstring += NUM00 ; \n\t\t} \n\tif ( level > NUM00 ) { \n\t\tstring += level ; \n\t\t} \n\tif ( thread != - NUM00 ) { \n\t\tstring += NUM00 + thread ; \n\t\t} \n\tif ( level > NUM00 || thread != - NUM00 ) { \n\t\tstring += NUM00 ; \n\t\t} \n\tstring += NUM00 ; \n\t$F70739 ( spawnMessage , string ) if $F4012 ( answer ) { \n\t\tstring += answer + NUM00 ; \n\t\t} \n\tif $F4012 ( callee ) { \n\t\tstring += callee + NUM00 ; \n\t\t} \n\tstring += message ; \n\t$F70739 ( returnsInstantly , string ) return string ; \n\t} \n"}, {"code": "public static boolean isWhiteSpace ( int c ) { \n\tswitch ( c ) { \n\t\tcase NUL_CHAR : $F1262 $F1262 case FF_CHAR : $F1262 $F1262 return _BOOL ; \n\t\t$F1267 return _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public void remove ( RequestFilter filter ) $F106 ( filters , filter ) "}, {"code": "protected void removeClassifiers $F23416 ( indices ) { \n\tint i ; \n\tif ( indices == null ) $F6051 ( m_ModelClassifiers ) else { \n\t\tfor ( $F121270 ( i , indices ) ) m_ModelClassifiers . remove ( indices [ i ] ) ; \n\t\t} \n\tsetModified ( _BOOL ) ; \n\t} \n"}, {"code": "$F43832 ( pcl , m_pcSupport ) "}, {"code": "public int numCheckpoints $F72 $F1652 ( checkpoints ) "}, {"code": "public void addElement ( Object anObject ) { \n\tp_data . add ( anObject ) ; \n\tfireIntervalAdded ( this , $F2281 ( p_data ) , $F2281 ( p_data ) ) ; \n\tif ( $F10470 ( p_data ) && m_selectedObject == null && anObject != null ) setSelectedItem ( anObject ) ; \n\t} \n"}, {"code": "public Builder addListenUrls $F24643 ( urls ) { \n\t$F10144 ( needAdd ) for ( String url : urls ) { \n\t\tif ( ! UrlUtil . isUrl ( url ) ) $F1448 needAdd . add ( url ) ; \n\t\t} \n\tif $F20899 ( CollectionUtil , needAdd ) { \n\t\tif ( mListenUrls == null ) { \n\t\t\t$F21884 ( mListenUrls ) } \n\t\tmListenUrls . addAll ( needAdd ) ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "public void addAssignedVirtualArrays $F32029 ( virtualArrayURIs ) { \n\tif $F13709 ( virtualArrayURIs ) { \n\t\t$F11293 ( addVirtualArrays ) addVirtualArrays . addAll ( virtualArrayURIs ) ; \n\t\tif ( _assignedVirtualArrays == null ) { \n\t\t\tsetAssignedVirtualArrays ( new StringSet $F72 ) ; \n\t\t\t_assignedVirtualArrays . addAll ( addVirtualArrays ) ; \n\t\t\t} \n\t\telse $F21926 ( _assignedVirtualArrays , addVirtualArrays ) updateVirtualArrayTags ( ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public boolean isCellEditable ( int row , int column ) { \n\tEnvVar envVar = dataList . get ( row ) ; \n\t$F3627 ( column , COL_VALUE , _BOOL ) return ! envVar . isPredefined ( ) ; \n\t} \n"}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "private boolean dropInTrash $F72 { \n\tif ( mHighlightedBlockView != null ) { \n\t\tmHighlightedBlockView . setHighlightedConnection ( null ) ; \n\t\tmHighlightedBlockView = null ; \n\t\t} \n\t$F725 ( mDraggedConnections ) return mController . trashRootBlock ( mPendingDrag . getRootDraggedBlock ( ) ) ; \n\t} \n"}, {"code": "$F4203 $F5675 concatValues ( final $F10809 ... data ) { \n\tfinal $F5675 $F204 ( rv ) ; \n\tfor ( $F10809 values : data ) $F50757 ( rv , Arrays , values ) return rv ; \n\t} \n"}, {"code": "public DagIterator ( Graph pattern ) { \n\tfor ( Edge edge : pattern . getEdges ( ) ) { \n\t\tif ( Edges . isDirectedEdge ( edge ) || Edges . isUndirectedEdge ( edge ) ) $F1448 throw new IllegalArgumentException ( NUM00 + NUM00 + edge ) ; \n\t\t} \n\tdecoratedGraphs . add ( new DecoratedGraph ( pattern ) ) ; \n\t} \n"}, {"code": "private boolean validateCustomCatalog ( String title , String value ) { \n\treturn _BOOL ; \n\t} \n"}, {"code": "public FunctionExecutionPooledExecutor ( BlockingQueue $F24548 q , int poolSize , PoolStatHelper stats , ThreadFactory tf ) { \n\tthis ( q , poolSize , stats , tf , Integer . getInteger ( DistributionConfig . GEMFIRE_PREFIX + NUM00 , NUM00 * NUM00 ) , _BOOL ) ; \n\t} \n"}, {"code": "protected boolean isSSDPDiscovery ( String body ) { \n\tif ( body != null && body . startsWith ( NUM00 ) && body . contains ( NUM00 ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public void addChild ( WXComponent child , int index ) { \n\tif ( child == null || index < - NUM00 ) $F932 if ( child instanceof WXBaseRefresh ) { \n\t\tif ( ! checkRefreshOrLoading ( child ) ) $F207 ( mRefreshs , child ) $F665 } \n\t$F9406 ( mChildren ) $F2199 ( count , mChildren ) index = index >= count ? - NUM00 : index ; \n\tif ( index == - NUM00 ) $F207 ( mChildren , child ) else $F42308 ( mChildren , index , child ) } \n"}, {"code": "private void restoreSortingSelection ( $F2027 selection , int lead , ModelChange change ) { \n\tfor ( $F26259 ( i , selection ) ) { \n\t\tselection [ i ] = convertRowIndexToView ( selection [ i ] , change ) ; \n\t\t} \n\tlead = convertRowIndexToView ( lead , change ) ; \n\tif ( selection . length == NUM00 || ( selection . length == NUM00 && selection [ NUM00 ] == getSelectedRow ( ) ) ) $F932 selectionModel . setValueIsAdjusting ( _BOOL ) ; \n\t$F149815 ( selectionModel ) for ( $F26259 ( i , selection ) ) { \n\t\tif ( selection [ i ] != - NUM00 ) { \n\t\t\tselectionModel . addSelectionInterval ( selection [ i ] , selection [ i ] ) ; \n\t\t\t} \n\t\t} \n\tSwingUtilities2 . setLeadAnchorWithoutSelection ( selectionModel , lead , lead ) ; \n\tselectionModel . setValueIsAdjusting ( _BOOL ) ; \n\t} \n"}, {"code": "$F29611 ( remaining , count , EMPTY_BYTE_ARRAY , pos , buf , buffers , c , Math , System , newbuf ) "}, {"code": "$F92397 public void clean $F72 { \n\tmute ( null ) ; \n\tmute ( null ) ; \n\tmute ( null ) ; \n\t} \n"}, {"code": "public void consume ( int eventCount , long timeoutInMillis , Predicate $F137768 condition ) throws TimeoutException { \n\t$F30465 ( eventCount ) $F7546 ( eventCount ) int eventsRemaining = eventCount ; \n\tfinal long stopTime = System . currentTimeMillis ( ) + timeoutInMillis ; \n\twhile ( eventsRemaining > NUM00 && System . currentTimeMillis ( ) < stopTime ) { \n\t\tEvent nextEvent = queue . poll ( ) ; \n\t\tif ( nextEvent != null ) { \n\t\t\tif $F167956 ( condition , nextEvent ) { \n\t\t\t\t-- eventsRemaining ; \n\t\t\t\tconsumedEvents . accept ( nextEvent ) ; \n\t\t\t\t} \n\t\t\telse $F17670 ( ignoredEvents , nextEvent ) } \n\t\t} \n\tif ( eventsRemaining > NUM00 ) { \n\t\tthrow new TimeoutException ( NUM00 + ( eventCount - eventsRemaining ) + NUM00 + eventCount + NUM00 + timeoutInMillis + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private void updateUiFromCommand ( Command command ) { \n\t$F2329 ( command ) actionsComboBox . setText ( command . getAction ( ) ) ; \n\tdataTextField . setText ( command . getData ( ) ) ; \n\tcategoryTextField . setText ( command . getCategory ( ) ) ; \n\tmimeTextField . setText ( command . getMimeType ( ) ) ; \n\tcomponentTextField . setText ( command . getComponent ( ) ) ; \n\tuserTextField . setText ( command . getUser ( ) ) ; \n\tflagsList_ . removeSelectionInterval ( NUM00 , flagsList_ . getItemsCount ( ) ) ; \n\tList < IntentFlags > flags = command . getFlags ( ) ; \n\tif $F8841 ( flags ) { \n\t\tfor ( IntentFlags flag : command . getFlags ( ) ) { \n\t\t\tflagsList_ . setSelectedValue ( flag , _BOOL ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\t$F53383 ( flagsList_ ) } \n\tupdateFlagsTextField ( ) ; \n\ttableModel_ . removeAllRows ( ) ; \n\tList < ExtraField > extras = command . getExtras ( ) ; \n\tif $F8841 ( extras ) { \n\t\tfor ( ExtraField extra : extras ) { \n\t\t\ttableModel_ . addRow ( extra ) ; \n\t\t\t} \n\t\t} \n\tupdateTableVisibility ( ) ; \n\t} \n"}, {"code": "public void testCompareToZeroZero $F72 { \n\tBigInteger aNumber = BigInteger . ZERO ; \n\tBigInteger bNumber = BigInteger . ZERO ; \n\t$F79260 ( assertEquals , aNumber , bNumber ) } \n"}, {"code": "public static int randGaussian $F6803 ( mean , sd ) { \n\treturn ( int ) ( rand . nextGaussian ( ) * sd + mean ) ; \n\t} \n"}, {"code": "private float computeOverscrollPercent $F72 { \n\tif ( mOverScrollOffset >= NUM00 ) { \n\t\treturn mOverScrollOffset / mMaxOverScroll ; \n\t\t} \n\telse { \n\t\treturn mOverScrollOffset / mMaxUnderScroll ; \n\t\t} \n\t} \n"}, {"code": "public IVector ( int c ) { \n\tvector = new int [ Math . max ( defaultCapacity , c ) ] ; \n\t} \n"}, {"code": "public void processInvite ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { \n\tfinal Request request = requestEvent . getRequest ( ) ; \n\tfinal SipProvider sipProvider = ( SipProvider ) requestEvent . getSource ( ) ; \n\tServerTransaction st = serverTransaction ; \n\ttry { \n\t\tif ( st == null ) { \n\t\t\ttry { \n\t\t\t\tst = sipProvider . getNewServerTransaction ( request ) ; \n\t\t\t\t} \n\t\t\tcatch ( TransactionUnavailableException tae ) { \n\t\t\t\t$F301 ( tae ) $F665 } \n\t\t\tcatch ( TransactionAlreadyExistsException taex ) $F932 } \n\t\tfinal String toTag = NUM00 + System . nanoTime ( ) ; \n\t\tResponse response = messageFactory . createResponse ( Response . RINGING , request ) ; \n\t\t$F38126 ( toHeader , response , ToHeader ) toHeader . setTag ( toTag ) ; \n\t\tst . sendResponse ( response ) ; \n\t\t$F38119 ( response , messageFactory , Response , request ) ; \n\t\tfinal Address address = addressFactory . createAddress ( NUM00 + myAddress + NUM00 + myPort + NUM00 ) ; \n\t\tfinal ContactHeader contactHeader = headerFactory . createContactHeader ( address ) ; \n\t\tresponse . addHeader ( contactHeader ) ; \n\t\ttoHeader = ( ToHeader ) response . getHeader ( ToHeader . NAME ) ; \n\t\ttoHeader . setTag ( toTag ) ; \n\t\tst . sendResponse ( response ) ; \n\t\t} \n\t$F1516 ( ex ) } \n"}, {"code": "public static IgniteLogger logger ( GridKernalContext ctx , AtomicReference < IgniteLogger > logRef , Object obj ) { \n\tIgniteLogger log = logRef . get ( ) ; \n\tif ( log == null ) { \n\t\tlogRef . compareAndSet ( null , ctx . log ( obj . getClass ( ) ) ) ; \n\t\t$F16478 ( log , logRef ) } \n\treturn log ; \n\t} \n"}, {"code": "protected boolean readReceiveDelay $F72 { \n\ttry $F50527 ( receiveDelay , Integer , receiveDelayField ) catch ( Exception e ) $F50530 ( statusText1 , rb , _BOOL , receiveDelay , errorInStatus1 , resetNotes2 ) if ( receiveDelay < NUM00 ) $F50530 ( statusText1 , rb , _BOOL , receiveDelay , errorInStatus1 , resetNotes2 ) if ( receiveDelay > NUM00 ) $F50530 ( statusText1 , rb , _BOOL , receiveDelay , errorInStatus1 , resetNotes2 ) return _BOOL ; \n\t} \n"}, {"code": "private void writeIndent ( int times ) throws IOException { \n\tfor ( int i = options . getBaseIndent ( ) + times ; \n\ti > NUM00 ; \n\ti -- ) { \n\t\twriter . write ( options . getIndent ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public int hashCode $F72 { \n\tint result = NUM00 ; \n\t$F195842 ( it , iterator ) while $F2921 ( it ) { \n\t\t$F8877 ( object , it ) result = ( NUM00 * result ) + $F50584 ( object ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public static int parseString ( String value ) $F75349 ( Integer , value ) "}, {"code": "void doHandleJavaMouseEvent ( MouseEvent mouseEvent ) { \n\tif ( ! XToolkit . isLeftMouseButton ( mouseEvent ) && ! XToolkit . isRightMouseButton ( mouseEvent ) ) $F932 XBaseWindow grabWindow = XAwtState . getGrabWindow ( ) ; \n\tPoint ptGlobal = mouseEvent . getLocationOnScreen ( ) ; \n\tif ( ! hasPointerMoved ) { \n\t\tif ( grabInputPoint == null || ( Math . abs ( ptGlobal . x - grabInputPoint . x ) > getMouseMovementSmudge ( ) ) || ( Math . abs ( ptGlobal . y - grabInputPoint . y ) > getMouseMovementSmudge ( ) ) ) { \n\t\t\thasPointerMoved = _BOOL ; \n\t\t\t} \n\t\t} \n\tXBaseMenuWindow wnd = getMenuWindowFromPoint ( ptGlobal ) ; \n\tXMenuItemPeer item = ( wnd != null ) ? wnd . getItemFromPoint ( wnd . toLocal ( ptGlobal ) ) : null ; \n\tXBaseMenuWindow cwnd = getShowingLeaf ( ) ; \n\tswitch ( mouseEvent . getID ( ) ) { \n\t\tcase MouseEvent . MOUSE_PRESSED : showingMousePressedSubmenu = null ; \n\t\tif ( ( grabWindow == this ) && ( wnd == null ) ) $F5795 ( ungrabInput ) else { \n\t\t\tgrabInput ( ) ; \n\t\t\tif ( item != null && ! item . isSeparator ( ) && item . isTargetItemEnabled ( ) ) { \n\t\t\t\tif ( wnd . getShowingSubmenu ( ) == item ) { \n\t\t\t\t\tshowingMousePressedSubmenu = ( XMenuPeer ) item ; \n\t\t\t\t\t} \n\t\t\t\twnd . selectItem ( item , _BOOL ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( wnd != null ) { \n\t\t\t\t\twnd . selectItem ( null , _BOOL ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t$F597 case MouseEvent . MOUSE_RELEASED : if ( item != null && ! item . isSeparator ( ) && item . isTargetItemEnabled ( ) ) { \n\t\t\tif ( item instanceof XMenuPeer ) { \n\t\t\t\tif ( showingMousePressedSubmenu == item ) { \n\t\t\t\t\tif ( wnd instanceof XMenuBarPeer ) $F5795 ( ungrabInput ) else { \n\t\t\t\t\t\twnd . selectItem ( item , _BOOL ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\titem . action ( mouseEvent . getWhen ( ) ) ; \n\t\t\t\tungrabInput ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( hasPointerMoved || ( wnd instanceof XMenuBarPeer ) ) $F5795 ( ungrabInput ) } \n\t\tshowingMousePressedSubmenu = null ; \n\t\t$F597 case MouseEvent . MOUSE_DRAGGED : if ( wnd != null ) { \n\t\t\tif ( item != null && ! item . isSeparator ( ) && item . isTargetItemEnabled ( ) ) { \n\t\t\t\tif ( grabWindow == this ) { \n\t\t\t\t\twnd . selectItem ( item , _BOOL ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\twnd . selectItem ( null , _BOOL ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( cwnd != null ) { \n\t\t\t\tcwnd . selectItem ( null , _BOOL ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F597 } \n\t} \n"}, {"code": "public boolean isInvalidNode $F72 { \n\tASTNode first = fNodes . get ( NUM00 ) ; \n\tASTNode candidate = first . getParent ( ) ; \n\t$F397 ( candidate , _BOOL ) if ( candidate . getNodeType ( ) == ASTNode . METHOD_DECLARATION ) return _BOOL ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void push ( final float value ) { \n\t$F31338 ( bits , Float , value ) if $F31340 ( bits ) { \n\t\tmv . visitInsn ( Opcodes . FCONST_0 + ( int ) value ) ; \n\t\t} \n\telse $F31345 ( mv , value ) } \n"}, {"code": "public void onMotion ( MotionEvent event , Interaction iact ) $F845 "}, {"code": "public synchronized void removeBatchClustererListener ( BatchClustererListener cl ) $F106 ( m_batchClustererListeners , cl ) "}, {"code": "public HeldLocksGrant refresh ( long expirationDateMs ) { \n\treturn new HeldLocksGrant ( grantId , creationDateMs , expirationDateMs , lockMap , lockTimeout , versionId ) ; \n\t} \n"}, {"code": "void removeKnownObject ( ParseObject object ) { \n\t$F15767 ( mutex , knownObjects , object ) } \n"}, {"code": "static HeapBytesStore $F2147 wrap ( $F1113 $F96 bytes ) { \n\treturn HeapBytesStore . wrap ( bytes ) ; \n\t} \n"}, {"code": "private static String parse ( JsonValue base ) { \n\tif ( ! base . isString ( ) ) $F1337 return buildString ( base . asString ( ) ) ; \n\t} \n"}, {"code": "public void testValueOfLongNegative2 $F72 { \n\tlong longVal = - NUM00 ; \n\t$F2544 ( aNumber , BigInteger , longVal ) byte $F3018 = { \n\t\t- NUM00 , NUM00 , - NUM00 , - NUM00 } \n\t; \n\t$F3030 ( rBytes ) $F3031 ( resBytes , aNumber ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F7841 ( assertEquals , aNumber ) } \n"}, {"code": "public void beforeInsert ( int index , char element ) { \n\t$F8871 ( index , size ) ensureCapacity ( size + NUM00 ) ; \n\t$F27096 ( System , elements , index , size ) elements [ index ] = element ; \n\tsize ++ ; \n\t} \n"}, {"code": "private void growEntries $F72 { \n\tint newLen = ( next . length < < NUM00 ) + NUM00 ; \n\t$F4120 ( newNext , newLen ) GridUnsafe . copyMemory ( next , INT_ARR_OFF , newNext , INT_ARR_OFF , size < < NUM00 ) ; \n\tnext = newNext ; \n\t$F3936 ( nextEmpty , newLen ) $F99493 ( Arrays , nextEmpty ) $F133 ( newObjs , newLen ) $F135 ( System , objs , newObjs , size ) objs = newObjs ; \n\t} \n"}, {"code": "public SidedPlane ( final Vector p , final boolean onSide , final Vector A , final Vector B ) { \n\tsuper ( A , B ) ; \n\tsigNum = onSide ? Math . signum ( evaluate ( p ) ) : - Math . signum ( evaluate ( p ) ) ; \n\t$F47005 ( sigNum ) } \n"}, {"code": "public static boolean isInputStreamGZIPCompressed ( final PushbackInputStream inputStream ) throws IOException { \n\t$F397 ( inputStream , _BOOL ) $F12496 ( signature ) $F83249 ( readStatus , inputStream , signature ) inputStream . unread ( signature ) ; \n\t$F42455 ( streamHeader , signature ) return readStatus == NUM00 && GZIPInputStream . GZIP_MAGIC == streamHeader ; \n\t} \n"}, {"code": "void insertOp $F14337 ( pos , length , op ) { \n\t$F219566 ( totalLen , m_ops , OpMap ) for ( $F151882 ( i , totalLen , pos ) ) { \n\t\tm_ops . setOp ( i + length , m_ops . getOp ( i ) ) ; \n\t\t} \n\tm_ops . setOp ( pos , op ) ; \n\tm_ops . setOp ( OpMap . MAPINDEX_LENGTH , totalLen + length ) ; \n\t} \n"}, {"code": "private void clear $F72 { \n\tvalid = _BOOL ; \n\tif $F21545 ( listenerObjects ) $F5795 ( deregisterListener ) ssm = null ; \n\tif ( SMSEntry . cacheSMSEntries ) $F5122 ( orgConfigs , globalConfigs ) } \n"}, {"code": "public static void registerDecayableObject ( Decayable obj ) $F207 ( decayObjects , obj ) "}, {"code": "public static void assertExpectedOutputContains ( String expectedString , String x ) { \n\tif $F2200 ( x , expectedString ) { \n\t\t$F25590 ( fail , expectedString , x ) } \n\t} \n"}, {"code": "public boolean remove ( String classname ) { \n\tString pkgname ; \n\t$F20799 ( names ) classname = cleanUp ( classname ) ; \n\tpkgname = extractPackage ( classname ) ; \n\tnames = m_Cache . get ( pkgname ) ; \n\tif ( names != null ) $F20067 ( names , classname ) else { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public void testFailedStage $F72 { \n\tCFException ex = new CFException $F72 ; \n\tCompletionStage $F2305 f = CompletableFuture . failedStage ( ex ) ; \n\tAtomicInteger $F107657 ( x ) ; \n\tAtomicReference $F81247 r = new AtomicReference $F81247 $F72 ; \n\tf . whenComplete ( null ) ; \n\tassertEquals ( x . get ( ) , NUM00 ) ; \n\t$F38219 ( assertEquals , r , ex ) ; \n\t} \n"}, {"code": "$F1 public void paintComponent ( Graphics g ) { \n\tsuper . paintComponent ( g ) ; \n\t$F20230 ( graphics , g ) graphics . setBackground ( mColorSpectrumBackground ) ; \n\tRenderingHints renderHints = new RenderingHints ( RenderingHints . KEY_ANTIALIASING , RenderingHints . VALUE_ANTIALIAS_ON ) ; \n\trenderHints . put ( RenderingHints . KEY_RENDERING , RenderingHints . VALUE_RENDER_QUALITY ) ; \n\tgraphics . setRenderingHints ( renderHints ) ; \n\tdrawFrequencies ( graphics ) ; \n\tdrawCursor ( graphics ) ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public void classLoaderDestroy ( DynamicClassLoader loader ) { \n\tMethod $F5998 ( destroy , getDestroyMethod , _resource ) ; \n\t$F8249 ( destroy ) try $F173188 ( destroy , _resource ) $F173190 ( log , Level , e ) } \n"}, {"code": "public boolean deleteAttachmentPoint ( DatapathId sw , OFPort port ) { \n\tAttachmentPoint ap = new AttachmentPoint ( sw , port , $F6419 ) ; \n\tif ( this . oldAPs != null ) { \n\t\tArrayList < AttachmentPoint > apList = new ArrayList < AttachmentPoint > $F72 ; \n\t\tapList . addAll ( this . oldAPs ) ; \n\t\t$F12747 ( index , apList , ap ) if ( index > NUM00 ) { \n\t\t\tapList . remove ( index ) ; \n\t\t\tthis . oldAPs = apList ; \n\t\t\t} \n\t\t} \n\tif ( this . attachmentPoints != null ) { \n\t\tArrayList < AttachmentPoint > apList = new ArrayList < AttachmentPoint > $F72 ; \n\t\tapList . addAll ( this . attachmentPoints ) ; \n\t\t$F12747 ( index , apList , ap ) if ( index > NUM00 ) { \n\t\t\tapList . remove ( index ) ; \n\t\t\tthis . attachmentPoints = apList ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "static boolean isAssignableTo ( ClassNode type , ClassNode toBeAssignedTo ) { \n\tif ( UNKNOWN_PARAMETER_TYPE == type ) return _BOOL ; \n\tif ( type == toBeAssignedTo ) return _BOOL ; \n\tif ( toBeAssignedTo . redirect ( ) == NUM00 <missing ')'> _TYPE && type . redirect ( ) == G <missing ';'> NUM00 <missing ';'> _TYPE ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( isPrimitiveType ( toBeAssignedTo ) ) toBeAssignedTo = getWrapper ( toBeAssignedTo ) ; \n\tif ( isPrimitiveType ( type ) ) type = getWrapper ( type ) ; \n\tif ( Double_TYPE == toBeAssignedTo ) { \n\t\treturn type . isDerivedFrom ( Number_TYPE ) ; \n\t\t} \n\tif ( Float_TYPE == toBeAssignedTo ) { \n\t\treturn type . isDerivedFrom ( Number_TYPE ) && Double_TYPE != type . redirect ( ) ; \n\t\t} \n\tif ( Long_TYPE == toBeAssignedTo ) { \n\t\treturn type . isDerivedFrom ( Number_TYPE ) && Double_TYPE != type . redirect ( ) && Float_TYPE != type . redirect ( ) ; \n\t\t} \n\tif ( Integer_TYPE == toBeAssignedTo ) { \n\t\treturn type . isDerivedFrom ( Number_TYPE ) && Double_TYPE != type . redirect ( ) && Float_TYPE != type . redirect ( ) && Long_TYPE != type . redirect ( ) ; \n\t\t} \n\tif ( Short_TYPE == toBeAssignedTo ) { \n\t\treturn type . isDerivedFrom ( Number_TYPE ) && Double_TYPE != type . redirect ( ) && Float_TYPE != type . redirect ( ) && Long_TYPE != type . redirect ( ) && Integer_TYPE != type . redirect ( ) ; \n\t\t} \n\tif ( Byte_TYPE == toBeAssignedTo ) { \n\t\treturn type . redirect ( ) == Byte_TYPE ; \n\t\t} \n\tif ( type . isArray ( ) && toBeAssignedTo . isArray ( ) ) { \n\t\treturn isAssignableTo ( type . getComponentType ( ) , toBeAssignedTo . getComponentType ( ) ) ; \n\t\t} \n\tif ( type . isDerivedFrom ( G <missing ')'> NUM00 <missing ';'> _TYPE ) && NUM00 <missing ';'> _TYPE . equals ( toBeAssignedTo ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( toBeAssignedTo . isDerivedFrom ( G <missing ')'> NUM00 <missing ';'> _TYPE ) && NUM00 <missing ';'> _TYPE . equals ( type ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( implementsInterfaceOrIsSubclassOf ( type , toBeAssignedTo ) ) { \n\t\t$F9506 ( OBJECT_TYPE , toBeAssignedTo , _BOOL ) if ( toBeAssignedTo . isUsingGenerics ( ) ) { \n\t\t\tGenericsType gt = GenericsUtils . buildWildcardType ( toBeAssignedTo ) ; \n\t\t\treturn gt . isCompatibleWith ( type ) ; \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\tif ( type . isDerivedFrom ( CLOSURE_TYPE ) && isSAMType ( toBeAssignedTo ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public synchronized int totalRecoverFiles $F72 { \n\tint total = NUM00 ; \n\tfor ( $F90432 ( file , fileDetails ) ) { \n\t\tif ( file . reused ( ) == _BOOL ) { \n\t\t\ttotal ++ ; \n\t\t\t} \n\t\t} \n\treturn total ; \n\t} \n"}, {"code": "$F107211 ( md5Model , animModel , defaultColour , invJointMatrices , calcInJointMatrices , animatedFrames , processAnimationFrames , list , md5Mesh , mesh , generateMesh , handleTexture , meshes , result ) "}, {"code": "$F156045 ( msg , x , super , this ) "}, {"code": "$F1 @ Timed public void deleteAssignment ( Experiment experiment , User . ID userID , Context context , Application . Name appName , Assignment currentAssignment ) { \n\tdeleteUserFromLookUp ( experiment . getID ( ) , userID , context ) ; \n\tboolean countUp = _BOOL ; \n\tassignmentsCountExecutor . execute ( new AssignmentCountEnvelope ( assignmentsRepository , experimentRepository , dbRepository , experiment , currentAssignment , countUp , eventLog , null , assignUserToExport , assignBucketCount ) ) ; \n\tdeleteAssignmentOld ( experiment . getID ( ) , userID , context , appName , currentAssignment . getBucketLabel ( ) ) ; \n\tremoveIndexUserToExperiment ( userID , experiment . getID ( ) , context , appName ) ; \n\tremoveIndexUserToBucket ( userID , experiment . getID ( ) , context , currentAssignment . getBucketLabel ( ) ) ; \n\tremoveIndexExperimentsToUser ( userID , experiment . getID ( ) , context , appName ) ; \n\t} \n"}, {"code": "String format ( Object obj , StringBuffer toAppendTo ) throws IllegalArgumentException { \n\tDate source = null ; \n\tif ( obj instanceof Date ) { \n\t\tsource = ( Date ) obj ; \n\t\t} \n\telse if ( obj instanceof String ) { \n\t\ttry { \n\t\t\tsource = parse ( ( String ) obj ) ; \n\t\t\t} \n\t\tcatch ( ParseException pe ) { \n\t\t\tthrow new RuntimeException $F3362 ( pe ) ; \n\t\t\t} \n\t\t} \n\tif ( source == null ) { \n\t\tthrow new IllegalArgumentException ( $F100654 ( obj ) ) ; \n\t\t} \n\treturn format ( source , toAppendTo ) ; \n\t} \n"}, {"code": "private static final boolean compareAndSetWaitStatus ( Node node , int expect , int update ) { \n\treturn unsafe . compareAndSwapInt ( node , waitStatusOffset , expect , update ) ; \n\t} \n"}, {"code": "public static ThreadDump create $F72 { \n\tThreadDump threadDump = _threadDumpRef . get ( ) ; \n\tif ( threadDump == null ) { \n\t\tthreadDump = new ThreadDumpPro $F72 ; \n\t\t_threadDumpRef . compareAndSet ( null , threadDump ) ; \n\t\t$F16478 ( threadDump , _threadDumpRef ) } \n\treturn threadDump ; \n\t} \n"}, {"code": "private void checkStart $F72 { \n\tif ( mCanProcessAudio && ! mOutput . isRunning ( ) && mOutput . available ( ) <= mBufferStartThreshold ) $F28175 ( mOutput ) } \n"}, {"code": "protected boolean matchesFilter $F41327 ( input , filter ) { \n\tfor ( final String match : filter ) { \n\t\tif $F2200 ( input , match ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F108235 ( f , first , n , item , last , count , notFull ) "}, {"code": "public IStatus run ( IProgressMonitor monitor ) { \n\tInputStream input = null ; \n\tFileOutputStream output = null ; \n\tIStatus jobStatus = Status . OK_STATUS ; \n\t$F12496 ( b ) int bytesRead ; \n\ttry { \n\t\t$F7963 ( connection , url ) $F21223 ( input , url ) long totalBytesRead = NUM00 ; \n\t\t$F9520 ( responseStatusCode , connection ) if ( responseStatusCode >= HttpURLConnection . HTTP_BAD_REQUEST ) { \n\t\t\tjobStatus = new Status ( Status . ERROR , CorePlugin . PLUGIN_ID , MessageFormat . format ( NUM00 , responseStatusCode , connection . getResponseMessage ( ) ) ) ; \n\t\t\t} \n\t\tlong contentLength = connection . getContentLength ( ) ; \n\t\t$F10893 ( output , target ) monitor . beginTask ( $F368 ( url ) , ( int ) contentLength ) ; \n\t\twhile ( jobStatus == Status . OK_STATUS ) { \n\t\t\tif ( contentLength > NUM00 && totalBytesRead >= contentLength ) $F5153 bytesRead = input . read ( b ) ; \n\t\t\t$F76065 ( bytesRead ) $F11584 ( output , b , bytesRead ) totalBytesRead += bytesRead ; \n\t\t\tmonitor . worked ( bytesRead ) ; \n\t\t\tif ( monitor . isCanceled ( ) ) { \n\t\t\t\tjobStatus = Status . CANCEL_STATUS ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t} \n\tcatch ( MalformedURLException e ) { \n\t\tjobStatus = new Status ( Status . ERROR , CorePlugin . PLUGIN_ID , NUM00 + url . toExternalForm ( ) , e ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tjobStatus = new Status ( Status . ERROR , CorePlugin . PLUGIN_ID , NUM00 + url . toExternalForm ( ) , e ) ; \n\t\t} \n\tcloseStreams ( input , output ) ; \n\treturn jobStatus ; \n\t} \n"}, {"code": "private static synchronized void initDocBuilderFactory $F72 { \n\t$F33943 ( docBuilderFactory , DocumentBuilderFactory ) docBuilderFactory . setIgnoringComments ( _BOOL ) ; \n\tdocBuilderFactory . setCoalescing ( _BOOL ) ; \n\t} \n"}, {"code": "$F149158 ( Math , svar0 ) "}, {"code": "private void createMissingValues $F72 { \n\t$F113821 ( sql ) PreparedStatement pstmt = null ; \n\ttry { \n\t\t$F213538 ( pstmt , DB , sql , get_TrxName ) pstmt . setInt ( NUM00 , getA_Registration_ID ( ) ) ; \n\t\t$F49 ( rs , pstmt ) while $F1682 ( rs ) { \n\t\t\tMRegistrationValue v = new MRegistrationValue ( this , rs . getInt ( NUM00 ) , NUM00 ) ; \n\t\t\t$F45240 ( v ) } \n\t\t$F59 ( rs ) $F59 ( pstmt ) pstmt = null ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tlog . log ( Level . SEVERE , null , e ) ; \n\t\t} \n\t$F285021 ( pstmt ) } \n"}, {"code": "private static String normalisePath ( String path ) $F11447 ( path ) "}, {"code": "public void startLaunchNotifier $F72 { \n\t$F61745 ( m_launchNotification ) m_launchNotifierThread . setDaemon ( _BOOL ) ; \n\t$F2346 ( m_launchNotifierThread ) } \n"}, {"code": "private static void encode ( List < AclEntry > acl , long address ) { \n\tlong offset = address ; \n\tfor ( AclEntry ace : acl ) { \n\t\tint flags = NUM00 ; \n\t\tUserPrincipal who = ace . principal ( ) ; \n\t\tif ( ! ( who instanceof UnixUserPrincipals . User ) ) throw new ProviderMismatchException $F72 ; \n\t\tUnixUserPrincipals . User user = ( UnixUserPrincipals . User ) who ; \n\t\tint uid ; \n\t\tif ( user . isSpecial ( ) ) { \n\t\t\tuid = - NUM00 ; \n\t\t\tif ( who == UnixUserPrincipals . SPECIAL_OWNER ) flags |= ACE_OWNER ; \n\t\t\telse if ( who == UnixUserPrincipals . SPECIAL_GROUP ) flags |= ( ACE_GROUP | ACE_IDENTIFIER_GROUP ) ; \n\t\t\telse if ( who == UnixUserPrincipals . SPECIAL_EVERYONE ) flags |= ACE_EVERYONE ; \n\t\t\telse $F38997 } \n\t\telse { \n\t\t\tif ( user instanceof UnixUserPrincipals . Group ) { \n\t\t\t\tuid = user . gid ( ) ; \n\t\t\t\tflags |= ACE_IDENTIFIER_GROUP ; \n\t\t\t\t} \n\t\t\telse $F57332 ( uid , user ) } \n\t\tint type ; \n\t\tswitch ( ace . type ( ) ) { \n\t\t\tcase ALLOW : type = ACE_ACCESS_ALLOWED_ACE_TYPE ; \n\t\t\t$F597 case DENY : type = ACE_ACCESS_DENIED_ACE_TYPE ; \n\t\t\t$F597 case AUDIT : type = ACE_SYSTEM_AUDIT_ACE_TYPE ; \n\t\t\t$F597 case ALARM : type = ACE_SYSTEM_ALARM_ACE_TYPE ; \n\t\t\t$F597 $F1267 $F38997 } \n\t\tSet < AclEntryPermission > aceMask = ace . permissions ( ) ; \n\t\tint mask = NUM00 ; \n\t\tif ( aceMask . contains ( AclEntryPermission . READ_DATA ) ) mask |= ACE_READ_DATA ; \n\t\tif ( aceMask . contains ( AclEntryPermission . WRITE_DATA ) ) mask |= ACE_WRITE_DATA ; \n\t\tif ( aceMask . contains ( AclEntryPermission . APPEND_DATA ) ) mask |= ACE_APPEND_DATA ; \n\t\tif ( aceMask . contains ( AclEntryPermission . READ_NAMED_ATTRS ) ) mask |= ACE_READ_NAMED_ATTRS ; \n\t\tif ( aceMask . contains ( AclEntryPermission . WRITE_NAMED_ATTRS ) ) mask |= ACE_WRITE_NAMED_ATTRS ; \n\t\tif ( aceMask . contains ( AclEntryPermission . EXECUTE ) ) mask |= ACE_EXECUTE ; \n\t\tif ( aceMask . contains ( AclEntryPermission . DELETE_CHILD ) ) mask |= ACE_DELETE_CHILD ; \n\t\tif ( aceMask . contains ( AclEntryPermission . READ_ATTRIBUTES ) ) mask |= ACE_READ_ATTRIBUTES ; \n\t\tif ( aceMask . contains ( AclEntryPermission . WRITE_ATTRIBUTES ) ) mask |= ACE_WRITE_ATTRIBUTES ; \n\t\tif ( aceMask . contains ( AclEntryPermission . DELETE ) ) mask |= ACE_DELETE ; \n\t\tif ( aceMask . contains ( AclEntryPermission . READ_ACL ) ) mask |= ACE_READ_ACL ; \n\t\tif ( aceMask . contains ( AclEntryPermission . WRITE_ACL ) ) mask |= ACE_WRITE_ACL ; \n\t\tif ( aceMask . contains ( AclEntryPermission . WRITE_OWNER ) ) mask |= ACE_WRITE_OWNER ; \n\t\tif ( aceMask . contains ( AclEntryPermission . SYNCHRONIZE ) ) mask |= ACE_SYNCHRONIZE ; \n\t\tSet < AclEntryFlag > aceFlags = ace . flags ( ) ; \n\t\tif ( aceFlags . contains ( AclEntryFlag . FILE_INHERIT ) ) flags |= ACE_FILE_INHERIT_ACE ; \n\t\tif ( aceFlags . contains ( AclEntryFlag . DIRECTORY_INHERIT ) ) flags |= ACE_DIRECTORY_INHERIT_ACE ; \n\t\tif ( aceFlags . contains ( AclEntryFlag . NO_PROPAGATE_INHERIT ) ) flags |= ACE_NO_PROPAGATE_INHERIT_ACE ; \n\t\tif ( aceFlags . contains ( AclEntryFlag . INHERIT_ONLY ) ) flags |= ACE_INHERIT_ONLY_ACE ; \n\t\tunsafe . putInt ( offset + OFFSETOF_UID , uid ) ; \n\t\tunsafe . putInt ( offset + OFFSETOF_MASK , mask ) ; \n\t\tunsafe . putShort ( offset + OFFSETOF_FLAGS , ( short ) flags ) ; \n\t\tunsafe . putShort ( offset + OFFSETOF_TYPE , ( short ) type ) ; \n\t\toffset += SIZEOF_ACE_T ; \n\t\t} \n\t} \n"}, {"code": "public static String expandHiddenDir ( final String filename ) { \n\tfinal int macro = filename . indexOf ( hiddenDirMacro , NUM00 ) ; \n\tString expandedFilter ; \n\t$F5881 ( macro , filename ) $F135076 ( Cfg , Check , TAG ) expandedFilter = filename . replaceFirst ( NUM00 , StringUtils . chomp ( Path . hidden ( ) , NUM00 ) ) ; \n\t$F44970 ( Cfg , Check , TAG , expandedFilter ) return expandedFilter ; \n\t} \n"}, {"code": "private boolean tryQueueCurrentBuffer ( long elapsedWaiting ) { \n\t$F69790 ( currentBuffer , _BOOL ) if ( isOpen && neverPubQueue . size ( ) < neverPubCapacity ) { \n\t\tneverPubQueue . add ( currentBuffer ) ; \n\t\ttotalQueuedRecords . addAndGet ( currentBuffer . sizeRecords ( ) ) ; \n\t\t$F5224 ( totalQueuedBuffers ) onQueueBufferSuccess ( currentBuffer , elapsedWaiting ) ; \n\t\tcurrentBuffer = new RecordBuffer $F200 ( flow ) ; \n\t\treturn _BOOL ; \n\t\t} \n\telse if ( elapsedWaiting > NUM00 ) $F74118 ( onQueueBufferTimeout , currentBuffer , elapsedWaiting , _BOOL ) else return _BOOL ; \n\t} \n"}, {"code": "public void updateValue ( final Object value , final boolean isSelected , boolean sync ) { \n\t$F84963 ( isReadOnly ) if ( GenericFormFactory . isTextForm ( formType ) ) { \n\t\ttextString = ( String ) value ; \n\t\tif $F1256 ( textString , lastTextString ) { \n\t\t\tsync = _BOOL ; \n\t\t\t} \n\t\tlastTextString = textString ; \n\t\t} \n\telse { \n\t\ttextString = ( String ) value ; \n\t\tthis . isSelected = isSelected ; \n\t\tif ( isSelected != lastIsSelected && lastTextString != null && textString != null && textString . equals ( lastTextString ) ) { \n\t\t\tsync = _BOOL ; \n\t\t\t} \n\t\tlastTextString = textString ; \n\t\tlastIsSelected = isSelected ; \n\t\t} \n\tif ( ( sync && guiType != FormFactory . ULC ) && guiComp != null ) { \n\t\tsyncGUI ( value ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean hasNext $F72 throws IOException { \n\t$F46282 ( dataInputStream ) $F7468 ( val , dataInputStream ) $F2268 ( dataInputStream ) return val != - NUM00 ; \n\t} \n"}, {"code": "private final StringBuilder appendParameterSignature ( StringBuilder buffer , $F28330 ( parameterTypes ) , $F28330 ( parameterNames ) ) { \n\tif ( parameterTypes != null ) { \n\t\tfor ( $F1139 ( i , parameterTypes ) ) { \n\t\t\tif ( i > NUM00 ) $F48903 ( buffer ) $F6939 ( buffer , parameterTypes , i ) if ( parameterNames != null && parameterNames [ i ] != null ) { \n\t\t\t\t$F84 ( buffer ) $F6939 ( buffer , parameterNames , i ) } \n\t\t\t} \n\t\t} \n\treturn buffer ; \n\t} \n"}, {"code": "public void completeHeartbeat ( Database database , long seqno , String eventId ) throws SQLException { \n\t$F51622 ( logger ) Statement st = null ; \n\tResultSet rs = null ; \n\tTimestamp sts = new Timestamp $F989 ; \n\tTimestamp now = $F32 ( System ) ; \n\t$F300029 whereClause = new $F300029 $F72 ; \n\t$F300029 values = new $F300029 $F72 ; \n\t$F51620 ( logger , now ) try { \n\t\t$F2715 ( st , database ) rs = st . executeQuery ( sourceTsQuery ) ; \n\t\tif $F1682 ( rs ) sts = rs . getTimestamp ( NUM00 ) ; \n\t\t} \n\tfinally { \n\t\t$F31187 ( rs ) $F31187 ( st ) } \n\tlong $F13543 ( lag_millis , now , sts ) ; \n\thbId . setValue ( KEY ) ; \n\twhereClause . add ( hbId ) ; \n\thbSeqno . setValue ( seqno ) ; \n\thbEventId . setValue ( eventId ) ; \n\thbTargetTstamp . setValue ( now ) ; \n\thbLagMillis . setValue ( lag_millis ) ; \n\tvalues . add ( hbSeqno ) ; \n\tvalues . add ( hbEventId ) ; \n\tvalues . add ( hbTargetTstamp ) ; \n\tvalues . add ( hbLagMillis ) ; \n\tdatabase . update ( hbTable , whereClause , values ) ; \n\t} \n"}, {"code": "public CipherParameters decrypt $F7159 ( in , inOff , inLen , keyLen ) throws IllegalArgumentException { \n\tif ( ! key . isPrivate ( ) ) $F825 BigInteger n = key . getModulus ( ) ; \n\tBigInteger d = key . getExponent ( ) ; \n\t$F2175 ( C , inLen ) $F198866 ( System , in , inOff , C ) BigInteger $F105488 ( c , C ) ; \n\tBigInteger r = c . modPow ( d , n ) ; \n\treturn generateKey ( n , r , keyLen ) ; \n\t} \n"}, {"code": "public PrivateKey loadPrivateKey $F72 throws Exception { \n\tif ( defaultKeys ) { \n\t\treturn getPrivateKeyFromString ( RSAKeyLoader . DEFAULT_PKEY ) ; \n\t\t} \n\tif ( priKey == null ) { \n\t\tFileReader f = new FileReader ( path + NUM00 + this . id ) ; \n\t\t$F20481 ( r , f ) String tmp = NUM00 ; \n\t\tString key = NUM00 ; \n\t\twhile $F443 ( tmp , r ) { \n\t\t\tkey = key + tmp ; \n\t\t\t} \n\t\t$F59 ( f ) $F59 ( r ) priKey = getPrivateKeyFromString ( key ) ; \n\t\t} \n\treturn priKey ; \n\t} \n"}, {"code": "public void removeCategoriesListener ( SnapshotCategoriesListener listener ) $F106 ( listeners , listener ) "}, {"code": "public boolean hasUnsupportedCriticalExtension $F72 { \n\tSet extns = getCriticalExtensionOIDs ( ) ; \n\t$F1933 ( extns , _BOOL ) extns . remove ( RFC3280CertPathUtilities . ISSUING_DISTRIBUTION_POINT ) ; \n\textns . remove ( RFC3280CertPathUtilities . DELTA_CRL_INDICATOR ) ; \n\t$F3386 ( extns ) } \n"}, {"code": "private Integer zGetWeekNumberForASevenDayRange ( LocalDate firstDateInRange , WeekFields weekFieldRules , boolean requireUnanimousWeekNumber ) { \n\t$F15277 ( weekNumbersList ) for ( int daysIntoTheFuture = NUM00 ; \n\tdaysIntoTheFuture <= NUM00 ; \n\t++ daysIntoTheFuture ) { \n\t\tLocalDate currentDateInRange ; \n\t\ttry { \n\t\t\tcurrentDateInRange = firstDateInRange . plusDays ( daysIntoTheFuture ) ; \n\t\t\tint currentWeekNumber = currentDateInRange . get ( weekFieldRules . weekOfWeekBasedYear ( ) ) ; \n\t\t\tweekNumbersList . add ( currentWeekNumber ) ; \n\t\t\t} \n\t\tcatch ( Exception ex ) $F1083 } \n\tboolean isUnanimous = ( InternalUtilities . areObjectsEqual ( $F6243 ( weekNumbersList ) ) ) ; \n\tif ( isUnanimous ) $F38160 ( weekNumbersList ) $F5972 ( requireUnanimousWeekNumber ) int mostCommonWeekNumber = InternalUtilities . getMostCommonElementInList ( weekNumbersList ) ; \n\treturn mostCommonWeekNumber ; \n\t} \n"}, {"code": "private boolean isNotInArray $F8306 ( str , array ) { \n\tfor ( $F1139 ( i , array ) ) $F55055 ( str , array , i , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "Node cloneOrImportNode ( short operation , Node node , boolean deep ) { \n\tNodeImpl copy = shallowCopy ( operation , node ) ; \n\tif ( deep ) { \n\t\t$F9040 ( list , node ) for ( $F85554 ( i , list ) ) { \n\t\t\tcopy . appendChild ( cloneOrImportNode ( operation , list . item ( i ) , deep ) ) ; \n\t\t\t} \n\t\t} \n\tnotifyUserDataHandlers ( operation , node , copy ) ; \n\treturn copy ; \n\t} \n"}, {"code": "public static synchronized void cleanup $F72 { \n\t$F8934 ( w ) try { \n\t\tsecp256k1_destroy_context ( Secp256k1Context . getContext ( ) ) ; \n\t\t} \n\t$F796 ( w ) } \n"}, {"code": "public void init $F72 throws Exception { \n\tloadParameterFromZK ( ) ; \n\t_invalidLoginCleanupExecutor . scheduleWithFixedDelay ( new InvalidLoginCleaner $F72 , CLEANUP_THREAD_SCHEDULE_INTERVAL_IN_MINS , CLEANUP_THREAD_SCHEDULE_INTERVAL_IN_MINS , TimeUnit . MINUTES ) ; \n\t$F10635 ( _log , _maxAuthnLoginAttemtsCount ) $F10635 ( _log , _maxAuthnLoginAttemtsLifeTimeInMins ) $F10635 ( _log , CLEANUP_THREAD_SCHEDULE_INTERVAL_IN_MINS ) } \n"}, {"code": "public $F3803 makeURLList ( String shard ) { \n\t$F3803 urls = StrUtils . splitSmart ( shard , NUM00 , _BOOL ) ; \n\tfor ( $F2277 ( i , urls ) ) { \n\t\turls . set ( i , buildUrl ( urls . get ( i ) ) ) ; \n\t\t} \n\tif $F3817 ( urls ) Collections . shuffle ( urls , r ) ; \n\treturn urls ; \n\t} \n"}, {"code": "public InputStreamReader reader ( final String charset ) throws HttpRequestException { \n\ttry { \n\t\treturn new InputStreamReader ( stream ( ) , getValidCharset ( charset ) ) ; \n\t\t} \n\tcatch ( UnsupportedEncodingException e ) { \n\t\tthrow new HttpRequestException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "private $F96 toZLIB ( RenderedImage image , Color bkg , String colorModel ) throws IOException { \n\treturn ImageGraphics2D . toByteArray ( image , ImageConstants . RAW , ImageConstants . ENCODING_FLATE_ASCII85 , ImageGraphics2D . getRAWProperties ( bkg , colorModel ) ) ; \n\t} \n"}, {"code": "public void addVertex ( Object id ) throws IllegalArgumentException { \n\tif ( initialized ) $F26853 Vertex vertex = new Vertex ( id ) ; \n\tObject existing = vertexMap . put ( id , vertex ) ; \n\tif ( existing != null ) $F26853 vertexList . add ( vertex ) ; \n\t} \n"}, {"code": "public void configureLocalServices $F72 { \n\tclientMemo . setLnTrafficController ( this ) ; \n\tclientMemo . configureCommandStation ( LnCommandStationType . COMMAND_STATION_DCS100 , _BOOL , _BOOL ) ; \n\tclientMemo . configureManagers ( ) ; \n\t} \n"}, {"code": "private static int indexOf ( int fromIndex , CharSequence csq ) { \n\t$F74334 ( csq ) $F115 ( length , csq ) int j = fromIndex ; \n\tint i = ( j < length ) ? csq . charAt ( j ++ ) : NUM00 ; \n\ti <<= NUM00 ; \n\ti |= ( j < length ) ? csq . charAt ( j ++ ) : NUM00 ; \n\treturn i ; \n\t} \n"}, {"code": "protected SizeRequirements calculateMinorAxisRequirements ( int axis , SizeRequirements r ) { \n\tupdateGrid ( ) ; \n\tcalculateColumnRequirements ( axis ) ; \n\tif ( r == null ) { \n\t\tr = new SizeRequirements $F72 ; \n\t\t} \n\tlong min = NUM00 ; \n\tlong pref = NUM00 ; \n\tint n = columnRequirements . length ; \n\tfor ( $F119 ( i , n ) ) { \n\t\tSizeRequirements req = columnRequirements [ i ] ; \n\t\tmin += req . minimum ; \n\t\tpref += req . preferred ; \n\t\t} \n\tint adjust = ( n + NUM00 ) * cellSpacing + NUM00 * borderWidth ; \n\tmin += adjust ; \n\tpref += adjust ; \n\tr . minimum = ( int ) min ; \n\tr . preferred = ( int ) pref ; \n\tr . maximum = ( int ) pref ; \n\tAttributeSet attr = getAttributes ( ) ; \n\tCSS . LengthValue cssWidth = ( CSS . LengthValue ) attr . getAttribute ( CSS . Attribute . WIDTH ) ; \n\tif ( BlockView . spanSetFromAttributes ( axis , r , cssWidth , null ) ) { \n\t\tif ( r . minimum < ( int ) min ) { \n\t\t\tr . maximum = r . minimum = r . preferred = ( int ) min ; \n\t\t\t} \n\t\t} \n\ttotalColumnRequirements . minimum = r . minimum ; \n\ttotalColumnRequirements . preferred = r . preferred ; \n\ttotalColumnRequirements . maximum = r . maximum ; \n\tObject o = attr . getAttribute ( CSS . Attribute . TEXT_ALIGN ) ; \n\tif ( o != null ) { \n\t\t$F1822 ( ta , o ) if $F3057 ( ta ) { \n\t\t\tr . alignment = NUM00 ; \n\t\t\t} \n\t\telse if $F3057 ( ta ) { \n\t\t\tr . alignment = NUM00 ; \n\t\t\t} \n\t\telse if $F3057 ( ta ) { \n\t\t\tr . alignment = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tr . alignment = NUM00 ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tr . alignment = NUM00 ; \n\t\t} \n\treturn r ; \n\t} \n"}, {"code": "public void append ( String string ) { \n\tfor ( $F1088 ( i , string ) ) append ( string . charAt ( i ) ) ; \n\t} \n"}, {"code": "public ListenableFuture $F4 push ( final String name , final Expression func ) { \n\tString let = String . format ( NUM00 , name , func . toHaskell ( ) ) ; \n\treturn pullRaw ( let ) ; \n\t} \n"}, {"code": "public final String toString ( int depth ) { \n\tif ( depth <= NUM00 ) $F1278 return ( $F18412 ( super , depth , mantissa ) + NUM00 + exponent + NUM00 + $F161291 ( bigVal ) + NUM00 + image ) ; \n\t} \n"}, {"code": "public MetaDataColumnDescriptor ( String columnName , int jdbcType , Object defaultValue ) { \n\t_columnName = columnName . toUpperCase ( ) ; \n\t_jdbcType = jdbcType ; \n\t_defaultValue = defaultValue ; \n\t} \n"}, {"code": "private void bulkLoad ( $F1986 lmin , $F1986 lmax , $F27878 children , ArrayModifiableDBIDs ids , int start , int end , int dim , int level , int code ) { \n\tif ( dim == NUM00 ) { \n\t\tDBIDArrayIter iter = ids . iter ( ) ; \n\t\titer . seek ( start ) ; \n\t\t$F69812 ( first , relation , iter ) $F60136 ( iter ) boolean degenerate = _BOOL ; \n\t\tloop : for ( ; \n\t\titer . getOffset ( ) < end ; \n\t\titer . advance ( ) ) { \n\t\t\t$F69812 ( other , relation , iter ) for ( $F1139 ( d , lmin ) ) { \n\t\t\t\tif ( Math . abs ( first . doubleValue ( d ) - other . doubleValue ( d ) ) > NUM00 ) { \n\t\t\t\t\tdegenerate = _BOOL ; \n\t\t\t\t\t$F217121 } \n\t\t\t\t} \n\t\t\t} \n\t\tif ( degenerate ) { \n\t\t\t$F40939 ( center , lmin ) for ( $F1139 ( d , lmin ) ) { \n\t\t\t\tcenter [ d ] = lmin [ d ] * NUM00 + lmax [ d ] * NUM00 + shift [ d ] ; \n\t\t\t\tif ( center [ d ] > min [ d ] + width [ d ] ) { \n\t\t\t\t\tcenter [ d ] -= width [ d ] ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tchildren . add ( new Node ( code , center , end - start , level , null ) ) ; \n\t\t\t$F665 } \n\t\t} \n\tif ( dim == lmin . length ) { \n\t\t$F40939 ( center , lmin ) for ( $F1139 ( d , lmin ) ) { \n\t\t\tcenter [ d ] = lmin [ d ] * NUM00 + lmax [ d ] * NUM00 + shift [ d ] ; \n\t\t\tif ( center [ d ] > min [ d ] + width [ d ] ) { \n\t\t\t\tcenter [ d ] -= width [ d ] ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( end - start < nmin ) { \n\t\t\tchildren . add ( new Node ( code , center , end - start , level , null ) ) ; \n\t\t\t$F665 } \n\t\telse { \n\t\t\t$F245843 ( newchildren ) bulkLoad ( lmin , lmax , newchildren , ids , start , end , NUM00 , level + NUM00 , NUM00 ) ; \n\t\t\tchildren . add ( new Node ( code , center , end - start , level , newchildren ) ) ; \n\t\t\t$F665 } \n\t\t} \n\telse { \n\t\tDBIDArrayIter siter = ids . iter ( ) , eiter = ids . iter ( ) ; \n\t\tsiter . seek ( start ) ; \n\t\teiter . seek ( end - NUM00 ) ; \n\t\twhile ( siter . getOffset ( ) < eiter . getOffset ( ) ) { \n\t\t\tif ( getShiftedDim ( relation . get ( siter ) , dim , level ) <= NUM00 ) { \n\t\t\t\t$F60136 ( siter ) $F598 } \n\t\t\tif ( getShiftedDim ( relation . get ( eiter ) , dim , level ) > NUM00 ) { \n\t\t\t\teiter . retract ( ) ; \n\t\t\t\t$F598 } \n\t\t\tids . swap ( siter . getOffset ( ) , eiter . getOffset ( ) - NUM00 ) ; \n\t\t\t$F60136 ( siter ) eiter . retract ( ) ; \n\t\t\t} \n\t\tfinal int spos = siter . getOffset ( ) ; \n\t\tif ( start < spos ) { \n\t\t\tfinal double tmp = lmax [ dim ] ; \n\t\t\tlmax [ dim ] = lmax [ dim ] * NUM00 + lmin [ dim ] * NUM00 ; \n\t\t\tbulkLoad ( lmin , lmax , children , ids , start , spos , dim + NUM00 , level , code ) ; \n\t\t\tlmax [ dim ] = tmp ; \n\t\t\t} \n\t\tif ( spos < end ) { \n\t\t\tfinal double tmp = lmin [ dim ] ; \n\t\t\tlmin [ dim ] = lmax [ dim ] * NUM00 + lmin [ dim ] * NUM00 ; \n\t\t\tbulkLoad ( lmin , lmax , children , ids , spos , end , dim + NUM00 , level , code | ( NUM00 < < dim ) ) ; \n\t\t\tlmin [ dim ] = tmp ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected $F46573 _forwardPoly ( $F5415 rawllpts , int ltype , int nsegs , boolean isFilled ) { \n\tboolean DEBUG = Debug . debugging ( NUM00 ) ; \n\tint len = $F92855 ( rawllpts ) ; \n\tif ( len < NUM00 ) return new $F46573 $F989 ; \n\tif ( isComplicatedLineType ( ltype ) ) return doPolyDispatch ( rawllpts , ltype , nsegs , isFilled ) ; \n\tint invalid_count = NUM00 ; \n\tboolean curr_invalid , prev_invalid = _BOOL ; \n\t$F101628 ( temp ) AzimuthVar az_first = null , az_save = null , azVar = new AzimuthVar $F72 ; \n\tArrayList < AzimuthVar > sections = new ArrayList < AzimuthVar > $F989 ; \n\t$F5415 x_ , xs = new float [ len ] ; \n\t$F5415 y_ , ys = new float [ len ] ; \n\t_forward ( rawllpts [ NUM00 ] , rawllpts [ NUM00 ] , temp , azVar ) ; \n\txs [ NUM00 ] = temp . x ; \n\tys [ NUM00 ] = temp . y ; \n\tprev_invalid = azVar . invalid_forward ; \n\tif ( prev_invalid ) { \n\t\t++ invalid_count ; \n\t\t} \n\telse { \n\t\tazVar . index = NUM00 ; \n\t\tazVar . current_azimuth = GreatCircle . sphericalAzimuth ( ( float ) centerY , ( float ) centerX , rawllpts [ NUM00 ] , rawllpts [ NUM00 ] ) ; \n\t\tif ( ! isFilled ) $F207 ( sections , azVar ) else { \n\t\t\taz_first = azVar ; \n\t\t\t} \n\t\tazVar = new AzimuthVar $F72 ; \n\t\t} \n\tint i = NUM00 , j = NUM00 ; \n\tfor ( i = NUM00 , j = NUM00 ; \n\ti < len ; \n\ti ++ , j += NUM00 ) { \n\t\tazVar . invalid_forward = _BOOL ; \n\t\t_forward ( $F99948 ( rawllpts , j , temp , azVar ) ) ; \n\t\tcurr_invalid = azVar . invalid_forward ; \n\t\txs [ i ] = temp . x ; \n\t\tys [ i ] = temp . y ; \n\t\tif ( ! curr_invalid && prev_invalid ) { \n\t\t\tazVar . index = i - NUM00 ; \n\t\t\tazVar . current_azimuth = GreatCircle . sphericalAzimuth ( ( float ) centerY , ( float ) centerX , rawllpts [ j - NUM00 ] , rawllpts [ j - NUM00 ] ) ; \n\t\t\tsections . add ( azVar ) ; \n\t\t\tazVar = new AzimuthVar $F72 ; \n\t\t\t} \n\t\telse if ( curr_invalid ) { \n\t\t\tif ( ! prev_invalid ) { \n\t\t\t\tazVar . index = i ; \n\t\t\t\tif ( isFilled && ( invalid_count == NUM00 ) ) { \n\t\t\t\t\taz_save = azVar ; \n\t\t\t\t\t} \n\t\t\t\telse $F207 ( sections , azVar ) azVar = new AzimuthVar $F72 ; \n\t\t\t\t} \n\t\t\t++ invalid_count ; \n\t\t\t} \n\t\tprev_invalid = curr_invalid ; \n\t\t} \n\tif ( invalid_count == NUM00 ) { \n\t\t$F46573 ret_val = new $F46573 $F989 ; \n\t\tret_val . add ( xs ) ; \n\t\tret_val . add ( ys ) ; \n\t\treturn ret_val ; \n\t\t} \n\tif ( invalid_count == len ) { \n\t\treturn new $F46573 $F989 ; \n\t\t} \n\tif ( ! prev_invalid ) { \n\t\tif $F294167 ( isFilled , az_save ) { \n\t\t\tint l = az_save . index ; \n\t\t\tx_ = new float [ len + l ] ; \n\t\t\ty_ = new float [ len + l ] ; \n\t\t\t$F135 ( System , xs , x_ , len ) $F135 ( System , ys , y_ , len ) $F6483 ( System , xs , x_ , len , l ) $F6483 ( System , ys , y_ , len , l ) az_save . index = len + l ; \n\t\t\tsections . add ( az_save ) ; \n\t\t\txs = x_ ; \n\t\t\tys = y_ ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( DEBUG && isFilled && ( az_save == null ) ) { \n\t\t\t\t$F18535 ( Debug ) } \n\t\t\tazVar . index = i ; \n\t\t\tj = rawllpts . length ; \n\t\t\tazVar . current_azimuth = GreatCircle . sphericalAzimuth ( ( float ) centerY , ( float ) centerX , rawllpts [ j - NUM00 ] , rawllpts [ j - NUM00 ] ) ; \n\t\t\tsections . add ( azVar ) ; \n\t\t\t} \n\t\t} \n\telse if ( az_save != null ) { \n\t\t$F32006 ( DEBUG , Debug ) sections . add ( az_first ) ; \n\t\tsections . add ( az_save ) ; \n\t\t} \n\t$F115 ( size , sections ) $F46573 ret_val = new $F46573 ( size ) ; \n\tif ( isFilled && ( len > NUM00 ) ) { \n\t\tgenerateFilledPoly ( xs , ys , sections , ret_val ) ; \n\t\treturn ret_val ; \n\t\t} \n\tfor ( j = NUM00 ; \n\tj < size ; \n\tj += NUM00 ) { \n\t\tAzimuthVar az1 = ( AzimuthVar ) sections . get ( j ) ; \n\t\tAzimuthVar az2 = ( AzimuthVar ) sections . get ( j + NUM00 ) ; \n\t\tint off1 = az1 . index ; \n\t\tint off2 = az2 . index ; \n\t\tint l = off2 - off1 ; \n\t\t$F189191 ( x_ , l ) $F189191 ( y_ , l ) $F21535 ( System , xs , off1 , x_ , l ) $F21535 ( System , ys , off1 , y_ , l ) ret_val . add ( x_ ) ; \n\t\tret_val . add ( y_ ) ; \n\t\t} \n\treturn ret_val ; \n\t} \n"}, {"code": "private $F5 filterYears $F39268 ( items ) { \n\t$F13710 iterator ; \n\t$F4377 ( now , Calendar ) $F91762 ( year , now , Calendar ) $F2544 ( yearInString , String , year ) $F12258 ( Log , TAG , yearInString ) int prevYear = year - NUM00 ; \n\t$F2544 ( prevYearInString , String , prevYear ) $F12258 ( Log , TAG , prevYearInString ) for ( iterator = items . iterator ( ) ; \n\titerator . hasNext ( ) ; \n\t) { \n\t\t$F13714 ( s , iterator ) if ( s . matches ( NUM00 ) && ! s . contains ( yearInString ) && ! s . contains ( prevYearInString ) ) { \n\t\t\t$F12258 ( Log , TAG , s ) $F7042 ( iterator ) } \n\t\t} \n\t$F91773 ( Log , TAG , items ) return items ; \n\t} \n"}, {"code": "public DataProviderEvent ( final LocalizableMessage reason , final Set $F12993 types ) { \n\tReject . ifNull ( reason , types ) ; \n\tReject . ifTrue ( types . isEmpty ( ) ) ; \n\tthis . reason = reason ; \n\tfinal EnumSet $F12993 tmp = EnumSet . noneOf ( Type . class ) ; \n\ttmp . addAll ( types ) ; \n\tthis . types = Collections . unmodifiableSet ( tmp ) ; \n\t} \n"}, {"code": "public $F4203 $F3803 validateBean ( T bean , String errIfBeanNull ) { \n\t$F10144 ( errors ) if ( bean == null ) $F56741 ( errors , errIfBeanNull ) Set < ConstraintViolation $F4203 > violations = validator . validate ( bean ) ; \n\tfor ( ConstraintViolation $F4203 violation : violations ) { \n\t\terrors . add ( violation . getMessage ( ) ) ; \n\t\t} \n\treturn errors ; \n\t} \n"}, {"code": "protected void smartInsertAfterBracket ( IDocument document , DocumentCommand command ) { \n\tif ( command . offset == - NUM00 || document . getLength ( ) == NUM00 ) $F932 try { \n\t\tint p = ( command . offset == document . getLength ( ) ? command . offset - NUM00 : command . offset ) ; \n\t\tint line = document . getLineOfOffset ( p ) ; \n\t\tint start = document . getLineOffset ( line ) ; \n\t\tint whiteend = findEndOfWhiteSpace ( document , start , command . offset ) ; \n\t\tif ( whiteend == command . offset ) { \n\t\t\tint indLine = findMatchingOpenBracket ( document , line , command . offset , NUM00 ) ; \n\t\t\tif ( indLine != - NUM00 && indLine != line ) { \n\t\t\t\tStringBuffer replaceText = new StringBuffer ( getIndentOfLine ( document , indLine ) ) ; \n\t\t\t\treplaceText . append ( document . get ( whiteend , command . offset - whiteend ) ) ; \n\t\t\t\treplaceText . append ( command . text ) ; \n\t\t\t\tcommand . length = command . offset - start ; \n\t\t\t\tcommand . offset = start ; \n\t\t\t\tcommand . text = replaceText . toString ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( BadLocationException e ) { \n\t\tGWTPluginLog . logError ( e ) ; \n\t\t} \n\t} \n"}, {"code": "private String attemptToChooseFormattingPattern $F72 { \n\tif $F85574 ( nationalNumber , MIN_LEADING_DIGITS_LENGTH ) { \n\t\t$F31458 ( getAvailableFormats , nationalNumber ) String formattedNumber = attemptToFormatAccruedDigits ( ) ; \n\t\tif $F4012 ( formattedNumber ) { \n\t\t\treturn formattedNumber ; \n\t\t\t} \n\t\treturn maybeCreateNewTemplate ( ) ? inputAccruedNationalNumber ( ) : accruedInput . toString ( ) ; \n\t\t} \n\telse { \n\t\t$F17718 ( appendNationalNumber , nationalNumber ) } \n\t} \n"}, {"code": "private void fillPicks $F72 throws Exception { \n\tMLookup orgL = MLookupFactory . get ( Env . getCtx ( ) , m_WindowNo , NUM00 , NUM00 , DisplayType . TableDir ) ; \n\tfWarehouse = new VLookup ( NUM00 , _BOOL , _BOOL , _BOOL , orgL ) ; \n\t$F405063 ( lWarehouse , Msg , Env ) fWarehouse . addVetoableChangeListener ( this ) ; \n\t$F37891 ( m_M_Warehouse_ID , fWarehouse ) MLookup bpL = MLookupFactory . get ( Env . getCtx ( ) , m_WindowNo , NUM00 , NUM00 , DisplayType . Search ) ; \n\tfBPartner = new VLookup ( NUM00 , _BOOL , _BOOL , _BOOL , bpL ) ; \n\t$F405063 ( lBPartner , Msg , Env ) fBPartner . addVetoableChangeListener ( this ) ; \n\t$F405063 ( lDocType , Msg , Env ) cmbDocType . addItem ( new KeyNamePair ( MOrder . Table_ID , $F9206 ( Msg , Env ) ) ) ; \n\tcmbDocType . addItem ( new KeyNamePair ( MRMA . Table_ID , $F9206 ( Msg , Env ) ) ) ; \n\tcmbDocType . addActionListener ( this ) ; \n\t} \n"}, {"code": "$F1 protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { \n\tFieldConfigFontPreview copy = null ; \n\tif ( fieldConfigBase != null ) { \n\t\tcopy = new FieldConfigFontPreview ( fieldConfigBase . getCommonData ( ) ) ; \n\t\t} \n\treturn copy ; \n\t} \n"}, {"code": "public void testConstructorSignBytesZeroNull3 $F72 { \n\tbyte $F3009 = $F845 ; \n\tint aSign = NUM00 ; \n\t$F15143 $F3023 ( aNumber , aSign , aBytes ) $F3030 ( rBytes ) $F3031 ( resBytes , aNumber ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , aNumber ) } \n"}, {"code": "public Object castToType ( int t , XPathContext support ) throws $F1872 { \n\tObject result ; \n\tswitch ( t ) { \n\t\tcase CLASS_ NUM00 : result = str ( ) ; \n\t\t$F597 case CLASS1BER : result = new Double ( num ( ) ) ; \n\t\t$F597 case CLASS_NODESET : result = iter ( ) ; \n\t\t$F597 case CLASS_BOOLEAN : result = new Boolean ( bool ( ) ) ; \n\t\t$F597 case CLASS_UNKNOWN : result = m_obj ; \n\t\t$F597 default : error ( XPATHErrorResources . ER_CANT_CONVERT_TO_TYPE , new Object [ ] { \n\t\t\tgetTypeString ( ) , Integer . toString ( t ) } \n\t\t) ; \n\t\tresult = null ; \n\t\t} \n\treturn result ; \n\t"}, {"code": "public static void forceDeleteOnExit ( File file ) throws IOException { \n\tif $F3444 ( file ) { \n\t\tdeleteDirectoryOnExit ( file ) ; \n\t\t} \n\telse $F125403 ( file ) } \n"}, {"code": "public boolean init ( StepMetaInterface smi , StepDataInterface sdi ) { \n\tthis . meta = ( ( SortKeyStepMeta ) smi ) ; \n\tthis . data = ( ( SortKeyStepData ) sdi ) ; \n\treturn super . init ( smi , sdi ) ; \n\t} \n"}, {"code": "private void printAnnotationFromEditor ( final WorkflowAnnotation anno , final Graphics2D g2 ) { \n\t$F317 ( gPr , g2 ) Rectangle2D loc = anno . getLocation ( ) ; \n\tgPr . translate ( $F5048 ( loc ) ) ; \n\tgPr . setClip ( NUM00 , NUM00 , $F63353 ( loc ) , $F63349 ( loc ) ) ; \n\tDimension size = new Dimension ( $F63353 ( loc ) , $F63349 ( loc ) ) ; \n\tpane . setSize ( size ) ; \n\tpane . setText ( AnnotationDrawUtils . createStyledCommentString ( anno ) ) ; \n\t$F197394 ( pane ) pane . paint ( gPr ) ; \n\t$F355 ( gPr ) } \n"}, {"code": "public void add ( IPoint pt ) { \n\tif ( inProgress ) { \n\t\tthrow new ConcurrentModificationException $F580 ; \n\t\t} \n\tpoints . add ( pt ) ; \n\t} \n"}, {"code": "public static Configuration load ( Reader reader ) throws IOException { \n\ttry { \n\t\t$F2697 ( properties ) properties . load ( reader ) ; \n\t\treturn from ( properties ) ; \n\t\t} \n\t$F3229 ( reader ) } \n"}, {"code": "public void add ( OffsettedItem item ) { \n\tthrowIfPrepared ( ) ; \n\ttry { \n\t\tif ( item . getAlignment ( ) > getAlignment ( ) ) $F825 } \n\tcatch ( NullPointerException ex ) $F895 items . add ( item ) ; \n\t} \n"}, {"code": "public static void addAnnotationToXML ( Element annotationsElement , String name , String value ) { \n\tif ( value == null ) { \n\t\tdeleteAnnotationFromXML ( annotationsElement , name ) ; \n\t\t} \n\telse { \n\t\tfinal Document doc = annotationsElement . getOwnerDocument ( ) ; \n\t\t$F8382 ( elem , doc ) annotationsElement . appendChild ( elem ) ; \n\t\t$F34765 ( elem , name ) elem . setTextContent ( value ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean readBoolean $F72 throws IOException { \n\treturn primitiveTypes . readBoolean ( ) ; \n\t} \n"}, {"code": "public $F14937 enumerateMeasures $F72 { \n\t$F75150 ( newVector ) $F6519 ( newVector ) $F1007 ( newVector ) } \n"}, {"code": "$F1 public Instances defineDataFormat $F72 throws Exception { \n\t$F95963 ( atts ) $F5 attValues ; \n\tint i ; \n\t$F23765 ( m_Random , getSeed ) ; \n\tm_nextClassShouldBeZero = _BOOL ; \n\tm_lastLabel = Double . NaN ; \n\tsetNumExamplesAct ( getNumExamples ( ) ) ; \n\t$F53628 ( atts ) ; \n\tatts . add ( $F84263 ) ; \n\tatts . add ( $F84263 ) ; \n\tatts . add ( $F84263 ) ; \n\t$F30598 ( attValues ) for ( $F61299 ( i ) ) $F34171 ( attValues , i ) atts . add ( $F66780 ( attValues ) ) ; \n\t$F30598 ( attValues ) for ( i = NUM00 ; \n\ti <= NUM00 ; \n\ti ++ ) $F34171 ( attValues , i ) atts . add ( $F66780 ( attValues ) ) ; \n\t$F30598 ( attValues ) for ( $F61299 ( i ) ) $F34171 ( attValues , i ) atts . add ( $F66780 ( attValues ) ) ; \n\tatts . add ( $F84263 ) ; \n\tatts . add ( $F84263 ) ; \n\tatts . add ( $F84263 ) ; \n\t$F30598 ( attValues ) for ( $F61299 ( i ) ) $F34171 ( attValues , i ) atts . add ( $F66780 ( attValues ) ) ; \n\t$F66789 ( m_DatasetFormat , getRelationNameToUse , atts ) return m_DatasetFormat ; \n\t} \n"}, {"code": "public static double lnGamma ( double alpha ) { \n\tdouble x = alpha , f = NUM00 , z ; \n\tif ( x < NUM00 ) { \n\t\tf = NUM00 ; \n\t\tz = x - NUM00 ; \n\t\twhile ( ++ z < NUM00 ) { \n\t\t\tf *= z ; \n\t\t\t} \n\t\tx = z ; \n\t\tf = - Math . log ( f ) ; \n\t\t} \n\tz = NUM00 / ( x * x ) ; \n\treturn f + ( x - NUM00 ) * Math . log ( x ) - x + NUM00 + ( ( ( - NUM00 * z + NUM00 ) * z - NUM00 ) * z + NUM00 ) / x ; \n\t} \n"}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "public void startTicker ( long delay , boolean rightToLeft ) { \n\t$F24126 ( tickerEnabled ) if $F931 ( isCellRenderer ) { \n\t\tForm parent = getComponentForm ( ) ; \n\t\tif ( parent != null ) { \n\t\t\tparent . registerAnimatedInternal ( this ) ; \n\t\t\t} \n\t\t} \n\t$F3224 ( tickerStartTime , System ) tickerDelay = delay ; \n\ttickerRunning = _BOOL ; \n\tthis . rightToLeft = rightToLeft ; \n\tif ( isRTL ( ) ) { \n\t\tthis . rightToLeft = ! this . rightToLeft ; \n\t\t} \n\t} \n"}, {"code": "static CipherSuite valueOf ( int id1 , int id2 ) { \n\tid1 &= NUM00 ; \n\tid2 &= NUM00 ; \n\tint id = ( id1 < < NUM00 ) | id2 ; \n\tCipherSuite c = idMap . get ( id ) ; \n\tif ( c == null ) { \n\t\tString h1 = Integer . toString ( id1 , NUM00 ) ; \n\t\tString h2 = Integer . toString ( id2 , NUM00 ) ; \n\t\tc = new CipherSuite ( NUM00 + h1 + NUM00 + h2 , id ) ; \n\t\t} \n\treturn c ; \n\t} \n"}, {"code": "public static Context createPendingActionContext ( Context context , ReconAction action , String mappingName , JsonValue sourceObject , String reconId , Situation situation ) { \n\t$F535 ( pendingActionMap ) pendingActionMap . put ( MAPPING_NAME , mappingName ) ; \n\tpendingActionMap . put ( SOURCE_OBJECT , sourceObject ) ; \n\tpendingActionMap . put ( RECON_ID , reconId ) ; \n\t$F186791 ( pendingActionMap , ORIGINAL_SITUATION , situation ) PendingActionContext pendingActionContext = new PendingActionContext ( context , pendingActionMap , action . toString ( ) ) ; \n\treturn pendingActionContext ; \n\t} \n"}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "public void showDroidsafeTextMarkers ( IEditorPart openedEditor , String className ) { \n\tif ( openedEditor != null && openedEditor instanceof ITextEditor && fProcessedClasses != null ) { \n\t\tITextEditor editor = ( ITextEditor ) openedEditor ; \n\t\tif $F105 ( fProcessedClasses , className ) { \n\t\t\tif $F105 ( fClassesNeedUpdate , className ) { \n\t\t\t\tClassMarkerProcessor classProcessor = get ( className ) ; \n\t\t\t\tclassProcessor . updateTaintMarkers ( editor ) ; \n\t\t\t\tfClassesNeedUpdate . remove ( className ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tfProcessedClasses . add ( className ) ; \n\t\t\tMap < String , Map < IntRange , Map < String , Set < CallLocationModel > > > > classTaintedDataMap = fTaintedDataMap . get ( className ) ; \n\t\t\tMap < String , Set < IntRange > > classUnreachableMethodMap = fUnreachableSourceMethodMap . get ( className ) ; \n\t\t\tif ( classTaintedDataMap != null || classUnreachableMethodMap != null ) { \n\t\t\t\tIEditorInput input = editor . getEditorInput ( ) ; \n\t\t\t\tif ( input instanceof FileEditorInput ) { \n\t\t\t\t\tClassMarkerProcessor classProcessor = get ( className ) ; \n\t\t\t\t\tclassProcessor . showDroidsafeTextMarkers ( editor ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private static void resolveNewExpression ( NewExpression objSubjectExpression , $F2690 objTypesSet ) { \n\tClassReference objClassRef = objSubjectExpression . getClassReference ( ) ; \n\tif ( null == objClassRef || null == objClassRef . getFQN ( ) ) { \n\t\tobjTypesSet . add ( Types . strResolvingAbortedOnPsiLevel ) ; \n\t\t$F665 } \n\tobjTypesSet . add ( objClassRef . getFQN ( ) ) ; \n\t} \n"}, {"code": "private static $F182941 pickUpToThree ( $F182941 sizes ) { \n\t$F182941 result = new ArrayList < Size > $F72 ; \n\tSize largest = sizes . get ( NUM00 ) ; \n\tresult . add ( largest ) ; \n\tSize lastSize = largest ; \n\tfor ( Size size : sizes ) { \n\t\tdouble targetArea = Math . pow ( $F31806 ( result ) ) * area ( largest ) ; \n\t\tif ( area ( size ) < targetArea ) { \n\t\t\tif ( ! result . contains ( lastSize ) && ( targetArea - area ( lastSize ) < area ( size ) - targetArea ) ) $F207 ( result , lastSize ) else $F207 ( result , size ) } \n\t\tlastSize = size ; \n\t\tif $F10471 ( result ) $F5153 } \n\tif ( $F6213 ( result ) && ! result . contains ( lastSize ) ) $F207 ( result , lastSize ) return result ; \n\t} \n"}, {"code": "private boolean verifyLogRecord $F10142 ( record , macPos ) throws Exception { \n\t$F83 ( data ) for ( $F21583 ( m , record ) ) $F40727 ( data , record , m ) curMAC = record [ macPos ] ; \n\tverified = helper . verifyMAC ( data . toString ( ) , helper . toByteArray ( curMAC ) ) ; \n\treturn verified ; \n\t} \n"}, {"code": "public static void copyToClipboard ( Transferable t ) { \n\tClipboardHelper . copyToClipboard ( t ) ; \n\t} \n"}, {"code": "public static String formatPercent ( int downloadSize , int fileSize ) { \n\t$F5773 ( num , downloadSize , fileSize ) float percent = ( ( float ) $F35376 ( num ) ) / NUM00 ; \n\treturn String . valueOf ( percent + NUM00 ) ; \n\t} \n"}, {"code": "final private String attrDef2AttrDesc ( Attributes attrs ) throws NamingException { \n\t$F8755 ( attrDesc ) Attribute attr = null ; \n\tint count = NUM00 ; \n\tattr = attrs . get ( NUMERICOID_ID ) ; \n\tif ( attr != null ) { \n\t\t$F6407 ( attrDesc , writeNumericOID , attr ) count ++ ; \n\t\t} \n\telse { \n\t\tthrow new ConfigurationException $F3487 ; \n\t\t} \n\tattr = attrs . get ( NAME_ID ) ; \n\t$F223946 ( attr , attrDesc , writeQDescrs , count ) attr = attrs . get ( DESC_ID ) ; \n\t$F223946 ( attr , attrDesc , writeQDString , count ) attr = attrs . get ( OBSOLETE_ID ) ; \n\t$F223946 ( attr , attrDesc , writeBoolean , count ) attr = attrs . get ( SUP_ID ) ; \n\t$F223946 ( attr , attrDesc , writeWOID , count ) attr = attrs . get ( EQUALITY_ID ) ; \n\t$F223946 ( attr , attrDesc , writeWOID , count ) attr = attrs . get ( ORDERING_ID ) ; \n\t$F223946 ( attr , attrDesc , writeWOID , count ) attr = attrs . get ( SUBSTR_ID ) ; \n\t$F223946 ( attr , attrDesc , writeWOID , count ) attr = attrs . get ( SYNTAX_ID ) ; \n\t$F223946 ( attr , attrDesc , writeWOID , count ) attr = attrs . get ( SINGLE_VAL_ID ) ; \n\t$F223946 ( attr , attrDesc , writeBoolean , count ) attr = attrs . get ( COLLECTIVE_ID ) ; \n\t$F223946 ( attr , attrDesc , writeBoolean , count ) attr = attrs . get ( NO_USER_MOD_ID ) ; \n\t$F223946 ( attr , attrDesc , writeBoolean , count ) attr = attrs . get ( USAGE_ID ) ; \n\t$F223946 ( attr , attrDesc , writeQDString , count ) if $F1765 ( count , attrs ) { \n\t\tString attrId = null ; \n\t\tfor ( NamingEnumeration < $F187854 > ae = attrs . getAll ( ) ; \n\t\tae . hasMoreElements ( ) ; \n\t\t) { \n\t\t\t$F45366 ( attr , ae ) attrId = attr . getID ( ) ; \n\t\t\tif ( $F133966 ( attrId , NUMERICOID_ID , NAME_ID , SYNTAX_ID ) || attrId . equals ( DESC_ID ) || attrId . equals ( SINGLE_VAL_ID ) || attrId . equals ( EQUALITY_ID ) || attrId . equals ( ORDERING_ID ) || attrId . equals ( SUBSTR_ID ) || attrId . equals ( NO_USER_MOD_ID ) || attrId . equals ( USAGE_ID ) || attrId . equals ( SUP_ID ) || attrId . equals ( COLLECTIVE_ID ) || attrId . equals ( OBSOLETE_ID ) ) $F1448 else $F9821 ( attrDesc , writeQDStrings , attr ) } \n\t\t} \n\t$F84 ( attrDesc ) $F92 ( attrDesc ) } \n"}, {"code": "private void updateActions $F72 { \n\tString selectedText = getSelectedText ( ) ; \n\t$F12553 ( selectedText ) boolean stuffSelected = $F1263 ( selectedText ) ; \n\tboolean allSelected = $F19068 ( selectedText , getText ) ; \n\tUNDO_ACTION . setEnabled ( isEnabled ( ) && isEditable ( ) && isUndoAvailable ( ) ) ; \n\tCUT_ACTION . setEnabled ( isEnabled ( ) && isEditable ( ) && stuffSelected ) ; \n\tCOPY_ACTION . setEnabled ( isEnabled ( ) && stuffSelected ) ; \n\tPASTE_ACTION . setEnabled ( isEnabled ( ) && isEditable ( ) && isPasteAvailable ( ) ) ; \n\tDELETE_ACTION . setEnabled ( isEnabled ( ) && stuffSelected ) ; \n\tSELECT_ALL_ACTION . setEnabled ( isEnabled ( ) && ! allSelected ) ; \n\t} \n"}, {"code": "public static $F4203 $F9884 makeImmutable $F50316 ( mutableCollection ) { \n\t$F9884 newCollection ; \n\ttry { \n\t\t$F1431 Class < $F9884 > cls = ( Class < $F9884 > ) mutableCollection . getClass ( ) ; \n\t\t$F33943 ( newCollection , cls ) } \n\tcatch ( InstantiationException | IllegalAccessException e ) $F48927 ( e ) for ( T element : mutableCollection ) { \n\t\tnewCollection . add ( Utils . makeImmutable ( element ) ) ; \n\t\t} \n\treturn Collections . unmodifiableCollection ( newCollection ) ; \n\t} \n"}, {"code": "public synchronized void trackHexImages ( IHex hex , MediaTracker tracker ) { \n\tImage base = hexToImageCache . get ( hex ) ; \n\tList < Image > superImgs = hexToImageListCache . get ( hex ) ; \n\tList < Image > orthoImgs = orthoListCache . get ( hex ) ; \n\ttracker . addImage ( base , NUM00 ) ; \n\tif ( superImgs != null ) { \n\t\tfor ( Iterator < Image > i = superImgs . iterator ( ) ; \n\t\ti . hasNext ( ) ; \n\t\t) { \n\t\t\ttracker . addImage ( i . next ( ) , NUM00 ) ; \n\t\t\t} \n\t\t} \n\tif ( orthoImgs != null ) { \n\t\tfor ( Iterator < Image > i = orthoImgs . iterator ( ) ; \n\t\ti . hasNext ( ) ; \n\t\t) { \n\t\t\ttracker . addImage ( i . next ( ) , NUM00 ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static Date parseText ( String dateStr ) { \n\ttry $F57093 ( mSimpleTextFormat , dateStr ) catch ( ParseException e ) $F33618 ( e ) } \n"}, {"code": "public boolean isProcessed ( Trace trace , Node node , Direction direction ) { \n\tboolean ret = _BOOL ; \n\tif ( processor . getNodeType ( ) == node . getType ( ) && processor . getDirection ( ) == direction ) { \n\t\tif ( uriFilter == null || uriFilter . test ( node . getUri ( ) ) ) { \n\t\t\tret = _BOOL ; \n\t\t\t} \n\t\t} \n\tif $F14148 ( log , Level ) { \n\t\tlog . finest ( NUM00 + trace + NUM00 + node + NUM00 + direction + NUM00 + ret ) ; \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "$F1 public synchronized void powerOnSelfTest $F72 throws Error { \n\tfor ( Iterator < WaveformSynthesizer > it = waveformSynthesizers . iterator ( ) ; \n\tit . hasNext ( ) ; \n\t) { \n\t\tWaveformSynthesizer ws = it . next ( ) ; \n\t\tws . powerOnSelfTest ( ) ; \n\t\t} \n\t} \n"}, {"code": "private QuadEdge [ ] fetchTriangleToVisit ( QuadEdge edge , Stack edgeStack , boolean includeFrame , Set visitedEdges ) { \n\tQuadEdge curr = edge ; \n\tint edgeCount = NUM00 ; \n\tboolean isFrame = _BOOL ; \n\tdo { \n\t\ttriEdges [ edgeCount ] = curr ; \n\t\tif ( isFrameEdge ( curr ) ) isFrame = _BOOL ; \n\t\tQuadEdge sym = curr . sym ( ) ; \n\t\tif $F2200 ( visitedEdges , sym ) edgeStack . push ( sym ) ; \n\t\tvisitedEdges . add ( curr ) ; \n\t\tedgeCount ++ ; \n\t\tcurr = curr . lNext ( ) ; \n\t\t} \n\twhile ( curr != edge ) ; \n\tif ( isFrame && ! includeFrame ) $F1274 return triEdges ; \n\t} \n"}, {"code": "public Collection engineGenerateCRLs ( InputStream inStream ) throws CRLException { \n\tCRL crl ; \n\t$F19151 ( crls ) while $F2108 ( crl , engineGenerateCRL , inStream ) $F207 ( crls , crl ) return crls ; \n\t} \n"}, {"code": "public void deleteEntityConfig ( String realm , String federationId ) throws WSFederationMetaException { \n\t$F2329 ( federationId ) $F23170 ( realm ) $F105633 ( objs , federationId , realm ) try { \n\t\tMap oldAttrs = configInst . getConfiguration ( realm , federationId ) ; \n\t\t$F125374 ( oldValues , oldAttrs , ATTR_ENTITY_CONFIG ) if $F4251 ( oldValues ) { \n\t\t\tLogUtil . error ( Level . INFO , LogUtil . NO_ENTITY_DESCRIPTOR_DELETE_ENTITY_CONFIG , objs , null ) ; \n\t\t\t$F45095 ( objs ) } \n\t\tIDPSSOConfigElement idpconfig = getIDPSSOConfig ( realm , federationId ) ; \n\t\tif ( idpconfig != null ) { \n\t\t\tremoveFromCircleOfTrust ( idpconfig , realm , federationId ) ; \n\t\t\t} \n\t\tSPSSOConfigElement spconfig = getSPSSOConfig ( realm , federationId ) ; \n\t\tif ( spconfig != null ) { \n\t\t\tremoveFromCircleOfTrust ( spconfig , realm , federationId ) ; \n\t\t\t} \n\t\t$F19850 ( attr ) attr . add ( ATTR_ENTITY_CONFIG ) ; \n\t\tconfigInst . deleteConfiguration ( realm , federationId , attr ) ; \n\t\tLogUtil . access ( Level . INFO , LogUtil . ENTITY_CONFIG_DELETED , objs , null ) ; \n\t\tWSFederationMetaCache . putEntityConfig ( realm , federationId , null ) ; \n\t\t} \n\tcatch ( ConfigurationException e ) { \n\t\t$F5197 ( debug , e ) $F806 data = { \n\t\t\te . getMessage ( ) , federationId , realm } \n\t\t; \n\t\tLogUtil . error ( Level . INFO , LogUtil . CONFIG_ERROR_DELETE_ENTITY_CONFIG , data , null ) ; \n\t\tthrow new WSFederationMetaException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public static synchronized DataSourceViewsManager sharedInstance $F72 { \n\tif ( sharedInstance == null ) sharedInstance = new DataSourceViewsManager $F72 ; \n\treturn sharedInstance ; \n\t} \n"}, {"code": "public String tag $F1947 ( inner , c1 , c2 ) { \n\tboolean color = $F128757 ( attr , ATTR_COLOR ) && ToastBootstrap . color ; \n\tString s = NUM00 ; \n\tif ( color ) s += NUM00 + c1 + NUM00 ; \n\ts += inner ; \n\tif ( color ) s += NUM00 + c2 + NUM00 ; \n\ts += NUM00 ; \n\tif ( color ) s += NUM00 + c1 + NUM00 ; \n\treturn color ? Pretty . format ( s ) : s ; \n\t} \n"}, {"code": "private final String loadXmlDefinition $F72 { \n\tfinal Cache cache = CacheFactory . getAnyInstance ( ) ; \n\t$F24475 ( stringWriter ) final PrintWriter printWriter = new PrintWriter ( stringWriter ) ; \n\tCacheXmlGenerator . generate ( cache , printWriter , _BOOL , _BOOL , _BOOL ) ; \n\t$F59 ( printWriter ) $F17718 ( loadXmlDefinition , stringWriter ) } \n"}, {"code": "private Long id ( HttpServletRequest request ) { \n\tLong id = null ; \n\tString pathInfo = request . getPathInfo ( ) ; \n\tif $F22 ( pathInfo ) { \n\t\t$F28924 ( idString , pathInfo ) id = Long . valueOf ( idString ) ; \n\t\t} \n\treturn id ; \n\t} \n"}, {"code": "public void uncompress $F72 { \n\t$F16709 ( data ) InflaterInputStream inflater = new InflaterInputStream ( data . asInputStream ( ) ) ; \n\t$F12496 ( buffer ) $F30909 ( tmp , IoBuffer ) tmp . setAutoExpand ( _BOOL ) ; \n\ttry { \n\t\twhile $F2892 ( inflater ) { \n\t\t\t$F83249 ( decompressed , inflater , buffer ) $F65649 ( decompressed ) $F148014 ( tmp , buffer , decompressed ) } \n\t\t} \n\tcatch ( IOException e ) { \n\t\ttmp . free ( ) ; \n\t\t$F7076 ( e ) } \n\tfinally { \n\t\tif ( inflater != null ) { \n\t\t\ttry $F881 ( inflater ) catch ( IOException e1 ) $F845 } \n\t\t} \n\tdata . free ( ) ; \n\tdata = tmp ; \n\t$F14257 ( data ) prepareIO ( ) ; \n\t} \n"}, {"code": "public void poll ( final TcpSocketStatisticsHandler handler ) { \n\tthis . statisticsHandler = handler ; \n\ttry { \n\t\t$F37249 ( fileLoader ) final ByteBuffer buffer = fileLoader . getBuffer ( ) ; \n\t\t$F2268 ( lineParser ) lineParser . handleToken ( buffer , buffer . position ( ) , buffer . limit ( ) ) ; \n\t\t} \n\tfinally { \n\t\tthis . statisticsHandler = null ; \n\t\t} \n\tmonitoredSockets . purgeEntriesOlderThan ( updateCount ) ; \n\tupdateCount ++ ; \n\t} \n"}, {"code": "$F1 public void close $F72 throws IOException { \n\tsynchronized ( lock ) { \n\t\tif $F931 ( isClosed ) { \n\t\t\t$F59 ( in ) buf = null ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public int compareTo ( CharBuffer otherBuffer ) { \n\tint compareRemaining = ( $F123020 ( remaining , otherBuffer ) ) ? remaining ( ) : otherBuffer . remaining ( ) ; \n\tint thisPos = position ; \n\tint otherPos = otherBuffer . position ; \n\tchar thisByte , otherByte ; \n\twhile ( compareRemaining > NUM00 ) { \n\t\tthisByte = get ( thisPos ) ; \n\t\totherByte = otherBuffer . get ( otherPos ) ; \n\t\tif ( thisByte != otherByte ) { \n\t\t\treturn thisByte < otherByte ? - NUM00 : NUM00 ; \n\t\t\t} \n\t\tthisPos ++ ; \n\t\totherPos ++ ; \n\t\tcompareRemaining -- ; \n\t\t} \n\t$F93077 ( remaining , otherBuffer ) } \n"}, {"code": "public UrbanSimZoneCSVWriterV2 ( String matsim4opusTempDirectory , String matsimOutputDirectory ) { \n\tthis . matsim4opusTempDirectory = matsim4opusTempDirectory ; \n\tthis . matsimOutputDirectory = matsimOutputDirectory ; \n\ttry { \n\t\t$F973 ( log ) zoneWriter = IOUtils . getBufferedWriter ( matsim4opusTempDirectory + FILE_NAME ) ; \n\t\tlog . info ( NUM00 + matsim4opusTempDirectory + FILE_NAME + NUM00 ) ; \n\t\tzoneWriter . write ( Labels . ZONE_ID + NUM00 + Labels . ACCESSIBILITY_BY_FREESPEED + NUM00 + Labels . ACCESSIBILITY_BY_CAR + NUM00 + Labels . ACCESSIBILITY_BY_BIKE + NUM00 + Labels . ACCESSIBILITY_BY_WALK + NUM00 + Labels . ACCESSIBILITY_BY_PT ) ; \n\t\t$F1769 ( zoneWriter ) $F973 ( log ) } \n\t$F1516 ( e ) } \n"}, {"code": "$F1 public void agg ( Object newVal ) { \n\tif $F2456 ( newVal ) { \n\t\tByteBuffer buffer = ByteBuffer . wrap ( $F2457 ( newVal ) ) ; \n\t\t$F23501 ( buffer ) while $F5720 ( buffer ) { \n\t\t\taggVal += buffer . getLong ( ) ; \n\t\t\tcount += buffer . getDouble ( ) ; \n\t\t\tfirstTime = _BOOL ; \n\t\t\t} \n\t\t$F665 } \n\taggVal += ( Long ) newVal ; \n\tcount ++ ; \n\tfirstTime = _BOOL ; \n\t} \n"}, {"code": "private static PolicyNotification extractPolicyNotification ( String xml ) throws PolicyEvaluationException { \n\tPolicyNotification policyNotification = null ; \n\ttry { \n\t\tString notificationDataBlock = getNotificationDataBlock ( xml ) ; \n\t\tif ( notificationDataBlock != null ) { \n\t\t\tDocument doc = XMLUtils . getXMLDocument ( $F107841 ( notificationDataBlock ) ) ; \n\t\t\tNode rootNode = XMLUtils . getRootNode ( doc , NODE_POLICY_SERVICE ) ; \n\t\t\tif ( rootNode != null ) { \n\t\t\t\tNode notificationNode = XMLUtils . getChildNode ( rootNode , NODE_POLICY_NOTIFICATION ) ; \n\t\t\t\tif ( notificationNode != null ) { \n\t\t\t\t\tpolicyNotification = PolicyNotification . parseXML ( notificationNode ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tdebug . error ( $F38 ) ; \n\t\t\t\t\tthrow new PolicyEvaluationException $F278179 ( ResBundleUtils ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F137865 ( debug ) } \n\t\t\t} \n\t\telse { \n\t\t\tdebug . error ( $F38 ) ; \n\t\t\t} \n\t\t} \n\tcatch ( Exception xe ) { \n\t\t$F5197 ( debug , xe ) throw new PolicyEvaluationException ( ResBundleUtils . rbName , NUM00 , null , xe ) ; \n\t\t} \n\treturn policyNotification ; \n\t} \n"}, {"code": "$F46593 ( checkNotClosed , trimToSize , journalWriter ) "}, {"code": "private Object findParcel ( $F4170 $F96 objectArray , $F4170 String className ) { \n\ttry { \n\t\tClass classTmp = getClassForName ( className ) ; \n\t\tConstructor declaredConstructor = classTmp . getDeclaredConstructor ( Parcel . class ) ; \n\t\tdeclaredConstructor . setAccessible ( _BOOL ) ; \n\t\treturn declaredConstructor . newInstance ( WearBusTools . byteToParcel ( objectArray ) ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tLog . d ( WearBusTools . BUSWEAR_TAG , $F5351 ( e ) ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "private static final String decodeFieldName ( final String pXmlFieldName ) { \n\t$F83 ( str ) $F1749 ( fieldNameLength , pXmlFieldName ) char currentChar ; \n\tfor ( $F119 ( i , fieldNameLength ) ) { \n\t\tcurrentChar = pXmlFieldName . charAt ( i ) ; \n\t\tif ( currentChar == NUM00 ) { \n\t\t\tstr . append ( Character . toUpperCase ( pXmlFieldName . charAt ( ++ i ) ) ) ; \n\t\t\t} \n\t\telse $F288 ( str , currentChar ) } \n\t$F92 ( str ) } \n"}, {"code": "public boolean isLoginSet $F72 { \n\treturn ( username != null && ( password != null && $F1263 ( username ) && $F1263 ( password ) ) ) || oauth ; \n\t} \n"}, {"code": "public void addContentItem ( ContentItem contentItem ) { \n\tif ( contentItems == null ) { \n\t\tcontentItems = new ArrayList < ContentItem > $F72 ; \n\t\t} \n\tcontentItems . add ( contentItem ) ; \n\t} \n"}, {"code": "public static String canonicalizeClassName ( String name ) { \n\t$F34587 ( classname , name ) $F2936 ( classname ) $F120626 ( classname ) $F212530 ( classname ) return classname ; \n\t} \n"}, {"code": "public static final void pause ( final int milliseconds ) { \n\tif ( milliseconds >= NUM00 || logger . isDebugEnabled ( ) ) $F58539 ( logger , milliseconds ) final long target = System . currentTimeMillis ( ) + milliseconds ; \n\ttry { \n\t\tfor ( $F589 ) { \n\t\t\tlong msLeft = target - System . currentTimeMillis ( ) ; \n\t\t\t$F65649 ( msLeft ) Thread . sleep ( msLeft ) ; \n\t\t\t} \n\t\t} \n\tcatch ( InterruptedException e ) { \n\t\tAssert . fail ( NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean isHighlightWithInvisibleEdge $F72 { \n\treturn highlightWithInvisibleEdge ; \n\t} \n"}, {"code": "private Configuration prepareJobForCancelling $F72 throws Exception { \n\tprepareFile ( NUM00 , NUM00 ) ; \n\t$F3223 ( executedTasks ) $F3223 ( cancelledTasks ) $F3223 ( failMapperId ) $F3223 ( splitsCount ) Configuration $F73973 ( cfg ) ; \n\tsetupFileSystems ( cfg ) ; \n\t$F156 ( job , Job , cfg ) job . setOutputKeyClass ( Text . class ) ; \n\tjob . setOutputValueClass ( IntWritable . class ) ; \n\tjob . setMapperClass ( CancellingTestMapper . class ) ; \n\tjob . setNumReduceTasks ( NUM00 ) ; \n\tjob . setInputFormatClass ( InFormat . class ) ; \n\tFileInputFormat . setInputPaths ( job , new Path ( NUM00 + getTestGridName ( NUM00 ) + NUM00 ) ) ; \n\tFileOutputFormat . setOutputPath ( job , new Path ( NUM00 + getTestGridName ( NUM00 ) + NUM00 ) ) ; \n\tjob . setJarByClass ( getClass ( ) ) ; \n\treturn job . getConfiguration ( ) ; \n\t} \n"}, {"code": "$F15683 ( listener , changingListeners ) "}, {"code": "public static $F1986 lsf2lpc $F9830 ( lsf ) { \n\tMathUtils . quickSort ( lsf ) ; \n\tint P = lsf . length ; \n\tint half_order = P / NUM00 ; \n\tint i , j ; \n\tdouble xf , xx ; \n\t$F1986 a = new double [ P / NUM00 + NUM00 ] ; \n\t$F1986 a1 = new double [ P / NUM00 + NUM00 ] ; \n\t$F1986 a2 = new double [ P / NUM00 + NUM00 ] ; \n\t$F1986 b = new double [ P / NUM00 + NUM00 ] ; \n\t$F1986 b1 = new double [ P / NUM00 + NUM00 ] ; \n\t$F1986 b2 = new double [ P / NUM00 + NUM00 ] ; \n\t$F1986 p = new double [ P / NUM00 ] ; \n\t$F1986 q = new double [ P / NUM00 ] ; \n\t$F107812 ( oneMinusA , P ) oneMinusA [ NUM00 ] = NUM00 ; \n\tif ( ( lsf [ NUM00 ] <= NUM00 ) || $F104544 ( lsf ) ) { \n\t\tthrow new IllegalArgumentException ( NUM00 + lsf [ NUM00 ] ) ; \n\t\t} \n\tfor ( i = NUM00 ; \n\ti < P ; \n\ti ++ ) { \n\t\tif ( lsf [ i ] <= lsf [ i - NUM00 ] ) $F824 if ( ( lsf [ i ] <= NUM00 ) || ( lsf [ i ] >= NUM00 ) ) throw new IllegalArgumentException ( NUM00 + i + NUM00 + lsf [ i ] ) ; \n\t\t} \n\tfor ( i = NUM00 ; \n\ti < half_order ; \n\ti ++ ) { \n\t\tp [ i ] = - NUM00 * Math . cos ( MathUtils . TWOPI * lsf [ NUM00 * i ] ) ; \n\t\tq [ i ] = - NUM00 * Math . cos ( MathUtils . TWOPI * lsf [ NUM00 * i + NUM00 ] ) ; \n\t\t} \n\txf = NUM00 ; \n\tfor ( i = NUM00 ; \n\ti <= P ; \n\ti ++ ) { \n\t\tif ( i == NUM00 ) xx = NUM00 ; \n\t\telse xx = NUM00 ; \n\t\ta [ NUM00 ] = xx + xf ; \n\t\tb [ NUM00 ] = xx - xf ; \n\t\txf = xx ; \n\t\tfor ( j = NUM00 ; \n\t\tj < half_order ; \n\t\tj ++ ) { \n\t\t\ta [ j + NUM00 ] = a [ j ] + p [ j ] * a1 [ j ] + a2 [ j ] ; \n\t\t\tb [ j + NUM00 ] = b [ j ] + q [ j ] * b1 [ j ] + b2 [ j ] ; \n\t\t\ta2 [ j ] = a1 [ j ] ; \n\t\t\ta1 [ j ] = a [ j ] ; \n\t\t\tb2 [ j ] = b1 [ j ] ; \n\t\t\tb1 [ j ] = b [ j ] ; \n\t\t\t} \n\t\tif ( i > NUM00 ) oneMinusA [ i ] = NUM00 * $F356083 ( a , half_order , b ) ; \n\t\t} \n\treturn oneMinusA ; \n\t} \n"}, {"code": "protected void generateFields $F72 { \n\tfor ( $F335184 iterator = mElements . iterator ( ) ; \n\titerator . hasNext ( ) ; \n\t) { \n\t\t$F84573 ( element , iterator ) if ( ! element . used ) { \n\t\t\t$F7042 ( iterator ) $F598 } \n\t\tPsiField [ ] fields = mClass . getFields ( ) ; \n\t\tboolean duplicateField = _BOOL ; \n\t\tfor ( PsiField field : fields ) { \n\t\t\t$F20605 ( name , field ) if ( name != null && name . equals ( element . getFieldName ( ) ) ) $F3468 ( duplicateField , _BOOL ) } \n\t\tif ( duplicateField ) { \n\t\t\t$F7042 ( iterator ) $F598 } \n\t\tmClass . add ( mFactory . createFieldFromText ( NUM00 + element . name + NUM00 + element . getFieldName ( ) + NUM00 , mClass ) ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean isFlying $F72 $F9911 ( flyThroughDialog ) "}, {"code": "public synchronized void init $F72 { \n\tchannelFactory = new NioClientSocketChannelFactory ( Executors . newCachedThreadPool ( ) , Executors . newCachedThreadPool ( ) ) ; \n\tdatagramChannelFactory = new NioDatagramChannelFactory ( Executors . newCachedThreadPool ( ) ) ; \n\ttimer = new HashedWheelTimer $F72 ; \n\t} \n"}, {"code": "public static String removePattern $F2236 ( source , regex ) { \n\treturn replacePattern ( source , regex , StringUtils . EMPTY ) ; \n\t} \n"}, {"code": "private void consumeNestedScroll $F2026 ( dxUnconsumed , dyUnconsumed , dxFinalUnconsumed , dyFinalUnconsumed ) { \n\tif ( mOverScrollEffect == OverScrollEffect . BOUNCE && dyFinalUnconsumed != NUM00 ) { \n\t\tmUnconsumedOverScrollOffset += - dyFinalUnconsumed ; \n\t\tint maxOffset = mOverScrollOffsetLimit ; \n\t\tif ( mUnconsumedOverScrollOffset > NUM00 ) { \n\t\t\t$F106734 ( mUnconsumedOverScrollOffset , Math , maxOffset ) } \n\t\telse if ( mUnconsumedOverScrollOffset < NUM00 ) { \n\t\t\tmUnconsumedOverScrollOffset = Math . max ( - maxOffset , mUnconsumedOverScrollOffset ) ; \n\t\t\t} \n\t\tsetScrollingOffset ( getUnconsumedScrollingOffset ( ) ) ; \n\t\t} \n\tpullEdgeEffects ( dxUnconsumed , dyUnconsumed ) ; \n\t} \n"}, {"code": "private void retrieveWaypoints ( SearchQuery query , ArrayList < Waypoint > waypoints ) { \n\tString queryLikeSelection2 = NUM00 + query . textQuery + NUM00 ; \n\t$F806 waypointSelectionArgs = new String [ ] { \n\t\tqueryLikeSelection2 , queryLikeSelection2 , queryLikeSelection2 } \n\t; \n\tCursor cursor = null ; \n\ttry { \n\t\tcursor = providerUtils . getWaypointCursor ( WAYPOINT_SELECTION_QUERY , waypointSelectionArgs , WAYPOINT_SELECTION_ORDER , MAX_SCORED_WAYPOINTS ) ; \n\t\tif ( cursor != null ) { \n\t\t\twaypoints . ensureCapacity ( cursor . getCount ( ) ) ; \n\t\t\twhile $F12260 ( cursor ) { \n\t\t\t\tWaypoint waypoint = providerUtils . createWaypoint ( cursor ) ; \n\t\t\t\tif ( LocationUtils . isValidLocation ( waypoint . getLocation ( ) ) ) $F207 ( waypoints , waypoint ) } \n\t\t\t} \n\t\t} \n\t$F14364 ( cursor ) } \n"}, {"code": "void release $F72 { \n\timageLoader . cancelPendingRequests ( ) ; \n\tloading = new boolean $F2313 ( noxItems ) ; \n\t} \n"}, {"code": "$F73823 ( lock , this , count ) "}, {"code": "public void add ( String name , long cnt ) { \n\t$F216949 ( _values ) _values . add ( new Count ( this , name , cnt ) ) ; \n\t} \n"}, {"code": "void closeDialog $F72 ; \n"}, {"code": "$F196938 ( textCompactionData , byteCompactionData , length , result , subMode , Mode , priorToShiftMode , i , subModeCh , ch , ALPHA , LL , ML , PS , MODE_SHIFT_TO_BYTE_COMPACTION_MODE , TEXT_COMPACTION_MODE_LATCH , LOWER , AS , MIXED , PL , MIXED_CHARS , AL , PUNCT , PAL , PUNCT_CHARS , ALPHA_SHIFT , PUNCT_SHIFT ) "}, {"code": "public MediaConfig createChannelFileAttachment ( String file , MediaConfig config ) { \n\tconfig . addCredentials ( this ) ; \n\tString xml = POSTFILE ( this . url + NUM00 , file , config . name , config . toXML ( ) ) ; \n\tElement root = parse ( xml ) ; \n\t$F1338 ( root ) try { \n\t\tMediaConfig media = new MediaConfig $F72 ; \n\t\tmedia . parseXML ( root ) ; \n\t\treturn media ; \n\t\t} \n\t$F77633 ( this , SDKException , exception ) } \n"}, {"code": "public void addParam ( AstNode param ) { \n\tassertNotNull ( param ) ; \n\tif ( params == null ) { \n\t\tparams = new ArrayList < AstNode > $F72 ; \n\t\t} \n\tparams . add ( param ) ; \n\tparam . setParent ( this ) ; \n\t} \n"}, {"code": "DeleteEvent ( $F4170 JSONObject json ) throws JSONException { \n\tsuper ( TYPE_DELETE , json ) ; \n\tif $F4329 ( TextUtils , mBlockId ) { \n\t\tthrow new JSONException ( TYPENAME_DELETE + NUM00 + JSON_BLOCK_ID ) ; \n\t\t} \n\tmOldXml = json . optString ( JSON_OLD_VALUE ) ; \n\tJSONArray ids = json . getJSONArray ( JSON_IDS ) ; \n\t$F1749 ( count , ids ) $F3803 $F10252 ( temp , count ) ; \n\tfor ( $F1316 ( i , count ) ) { \n\t\ttemp . add ( ids . getString ( i ) ) ; \n\t\t} \n\tmIds = Collections . unmodifiableList ( temp ) ; \n\t} \n"}, {"code": "public static boolean isFullCopyRestorable ( Volume volume , DbClient dbClient ) { \n\tboolean result = _BOOL ; \n\tString replicaState = volume . getReplicaState ( ) ; \n\tif ( isVolumeFullCopy ( volume , dbClient ) && replicaState != null && $F1030 ( replicaState ) ) { \n\t\tReplicationState state = ReplicationState . getEnumValue ( replicaState ) ; \n\t\tif ( state != null && state == ReplicationState . SYNCHRONIZED ) { \n\t\t\tresult = _BOOL ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private final static $F806 readQDStrings ( String string , $F2027 pos ) throws NamingException $F8587 ( readQDescrs , string , pos ) "}, {"code": "private static boolean isBufferTooLarge ( ByteBuffer buf ) { \n\treturn isBufferTooLarge ( buf . capacity ( ) ) ; \n\t} \n"}, {"code": "public static void resetIndexBufferTime $F72 $F21827 ( SAFE_QUERY_TIME ) "}, {"code": "protected abstract AdminResponse createResponse ( DistributionManager dm ) ; \n"}, {"code": "protected boolean checkExternalStorageAndNotify ( String fileName ) { \n\tif $F147883 ( fileName ) { \n\t\talertDownloadFailure ( R . string . download_no_sdcard_dlg_title ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t$F139156 ( status , Environment ) if ( ! status . equals ( Environment . MEDIA_MOUNTED ) ) { \n\t\tint title ; \n\t\tif ( status . equals ( Environment . MEDIA_SHARED ) ) { \n\t\t\ttitle = R . string . download_sdcard_busy_dlg_title ; \n\t\t\t} \n\t\telse { \n\t\t\ttitle = R . string . download_no_sdcard_dlg_title ; \n\t\t\t} \n\t\talertDownloadFailure ( title ) ; \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static String plnoun $F66432 ( quantity , noun ) { \n\tfinal String enoun = fullForm ( noun ) ; \n\tif ( quantity == NUM00 ) $F4915 ( singular , enoun ) else $F4915 ( plural , noun ) } \n"}, {"code": "public boolean verifyXMLSignature ( org . w3c . dom . Element element , $F9738 ( certAlias ) ) throws XMLSignatureException $F19580 ( verifyXMLSignature , element , DEF_ID_ATTRIBUTE , certAlias ) "}, {"code": "public void add ( Video video ) $F36131 ( videoList , video , notifyDataSetChanged ) "}, {"code": "private static boolean isInHorizontalTargetZone $F46870 ( x , y , handleXStart , handleXEnd , handleY , targetRadius ) { \n\tif $F104655 ( x , handleXStart , handleXEnd , Math , y , handleY , targetRadius ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void readTransportSystems ( final $F2027 columnsIndices , final BufferedReader reader ) throws IOException { \n\t$F27015 ( line , reader ) while $F22 ( line ) $F63868 ( line , reader ) } \n"}, {"code": "private boolean hasPrefix $F97 ( nal ) { \n\tif ( nal [ NUM00 ] == NUM00 && nal [ NUM00 ] == NUM00 && nal [ NUM00 ] == NUM00 && nal [ NUM00 ] == NUM00 ) return _BOOL ; \n\telse return _BOOL ; \n\t} \n"}, {"code": "private void unshareMain $F72 { \n\t$F2027 old = _mainHash ; \n\tint len = _mainHash . length ; \n\t$F3936 ( _mainHash , len ) $F135 ( System , old , _mainHash , len ) _mainHashShared = _BOOL ; \n\t} \n"}, {"code": "public ComponentConfigBuilder addItemInMultifield ( String multifieldLabel , int index , String itemType , String itemLabel , String value ) { \n\t$F170511 ( type , String , index , itemType ) $F170511 ( label , String , multifieldLabel , itemLabel ) config . add ( new ConfigurationEntry ( currentTab , type , label , value ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "$F1654 ( names ) "}, {"code": "public static $F48508 randomPoints $F14337 ( n , d , scale ) { \n\tIMultiPoint points [ ] = new IMultiPoint [ n ] ; \n\tfor ( $F119 ( i , n ) ) { \n\t\t$F83 ( sb ) for ( $F119 ( j , d ) ) { \n\t\t\tsb . append ( rGen . nextDouble ( ) * scale ) ; \n\t\t\t$F24364 ( j , d , sb ) } \n\t\tpoints [ i ] = new Hyperpoint $F3362 ( sb ) ; \n\t\t} \n\treturn points ; \n\t} \n"}, {"code": "private void parseParameters ( String parameters ) { \n\tLog . v ( NUM00 , NUM00 + NUM00 + parameters ) ; \n\tif ( parameters != null ) { \n\t\tint i ; \n\t\tdo { \n\t\t\t$F49897 ( i , parameters ) if ( i < NUM00 ) { \n\t\t\t\tparseParameter ( parameters ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F12723 ( parseParameter , parameters , i ) ; \n\t\t\t\t$F6943 ( parameters , i ) } \n\t\t\t} \n\t\twhile ( i >= NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public void addHttpSessionToken ( String site , String token ) { \n\tif $F94439 ( site ) { \n\t\tsite = site + $F580 ; \n\t\t} \n\tHttpSessionTokensSet siteTokens = sessionTokens . get ( site ) ; \n\tif ( siteTokens == null ) { \n\t\tsiteTokens = new HttpSessionTokensSet $F72 ; \n\t\tsessionTokens . put ( site , siteTokens ) ; \n\t\t} \n\t$F21448 ( log , site , token ) siteTokens . addToken ( token ) ; \n\tunmarkRemovedDefaultSessionToken ( site , token ) ; \n\t} \n"}, {"code": "public GradleDistribution deserializeFromString ( String distributionString ) { \n\tPreconditions . checkNotNull ( distributionString ) ; \n\tString localInstallationPrefix = NUM00 ; \n\tif ( distributionString . startsWith ( localInstallationPrefix ) && distributionString . endsWith ( NUM00 ) ) { \n\t\tString localInstallationDir = distributionString . substring ( localInstallationPrefix . length ( ) , $F1092 ( distributionString ) ) ; \n\t\treturn GradleDistribution . forLocalInstallation ( new File ( localInstallationDir ) ) ; \n\t\t} \n\tString remoteDistributionPrefix = NUM00 ; \n\tif ( distributionString . startsWith ( remoteDistributionPrefix ) && distributionString . endsWith ( NUM00 ) ) { \n\t\tString remoteDistributionUri = distributionString . substring ( remoteDistributionPrefix . length ( ) , $F1092 ( distributionString ) ) ; \n\t\treturn GradleDistribution . forRemoteDistribution ( createURI ( remoteDistributionUri ) ) ; \n\t\t} \n\tString versionPrefix = NUM00 ; \n\tif ( distributionString . startsWith ( versionPrefix ) && distributionString . endsWith ( NUM00 ) ) { \n\t\tString version = distributionString . substring ( versionPrefix . length ( ) , $F1092 ( distributionString ) ) ; \n\t\treturn GradleDistribution . forVersion ( version ) ; \n\t\t} \n\tString wrapperString = NUM00 ; \n\tif $F1238 ( distributionString , wrapperString ) { \n\t\treturn GradleDistribution . fromBuild ( ) ; \n\t\t} \n\t$F574 ( message , String , distributionString ) $F5301 ( message ) } \n"}, {"code": "public double metersToPixels $F72 { \n\tdouble screenCenterLat = screenTopLeft . latitude - screenSize . latitude / NUM00 ; \n\tdouble metersToLon = NUM00 / ( Util . LON_TO_METERS_AT_EQUATOR * Math . cos ( screenCenterLat / NUM00 * Math . PI ) ) ; \n\treturn screenSize . longitude / windowWidth * metersToLon ; \n\t} \n"}, {"code": "public boolean sendViaDataSocket $F24576 ( bytes , start , len ) { \n\tif ( dataOutputStream == null ) { \n\t\t$F1594 ( Log , TAG ) return _BOOL ; \n\t\t} \n\t$F6482 ( len , _BOOL ) try $F21537 ( dataOutputStream , bytes , start , len ) catch ( IOException e ) { \n\t\t$F1594 ( Log , TAG ) Log . i ( TAG , e . toString ( ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tlocalDataSocket . reportTraffic ( len ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void pushContext ( BaseContext c ) $F31742 ( contextStack , c ) "}, {"code": "$F1 public void bookmarksOrHistoryPicker ( ComboViews startView ) { \n\tif ( mTabControl . getCurrentWebView ( ) == null ) $F932 $F191280 ( isInCustomActionMode , endActionMode ) $F53033 ( extras ) extras . putBoolean ( BrowserBookmarksPage . EXTRA_DISABLE_WINDOW , ! mTabControl . canCreateNewTab ( ) ) ; \n\tmUi . showComboView ( startView , extras ) ; \n\t} \n"}, {"code": "public FST $F22381 ( fileName , encoding , verbose ) throws IOException { \n\t$F4647 ( fis , fileName ) try { \n\t\tloadHeaderless ( fis , encoding , verbose ) ; \n\t\t} \n\t$F3229 ( fis ) } \n"}, {"code": "public static $F1986 normalizeZscore $F9830 ( x ) { \n\tdouble mn = mean ( x , NUM00 ) ; \n\tdouble sd = standardDeviation ( x , NUM00 ) ; \n\tfor ( $F1139 ( i , x ) ) if $F179689 ( Double , x , i ) x [ i ] = ( x [ i ] - mn ) / sd ; \n\treturn x ; \n\t} \n"}, {"code": "void addLocation ( String location ) { \n\t$F13678 ( fLocationList , location ) fLocationList . add ( location ) ; \n\t$F17015 ( fTableViewer ) fTableViewer . setChecked ( location , _BOOL ) ; \n\tfTableViewer . setSelection ( new StructuredSelection ( location ) ) ; \n\tvalidateLocations ( ) ; \n\t} \n"}, {"code": "public JavaFormatter ( String lineDelimiter , int initialIndentLevel , boolean useCodeFormatter , IJavaProject project ) { \n\tfLineDelimiter = lineDelimiter ; \n\tfUseCodeFormatter = useCodeFormatter ; \n\tfInitialIndentLevel = initialIndentLevel ; \n\tfProject = project ; \n\t} \n"}, {"code": "public String encode $F2236 ( pString , charset ) throws EncoderException { \n\t$F1338 ( pString ) try $F8587 ( encodeText , pString , charset ) $F265978 ( e ) } \n"}, {"code": "private static void checkPathNeed $F72 { \n\tif ( samplingInterval == - NUM00 ) $F20182 ( lastPreloadTime , readMorePaths ) if ( ! Double . isNaN ( lastPreloadTime ) && SimClock . getTime ( ) >= lastPreloadTime - ( samplingInterval * MIN_AHEAD_INTERVALS ) ) { \n\t\tfor ( int i = NUM00 ; \n\t\ti < nrofPreload && ! Double . isNaN ( lastPreloadTime ) ; \n\t\ti ++ ) $F20182 ( lastPreloadTime , readMorePaths ) } \n\t} \n"}, {"code": "public double wide ( Prior prior , Likelihood likelihood ) throws OperatorFailedException { \n\tfinal int nodeCount = tree . getNodeCount ( ) ; \n\tfinal NodeRef root = tree . getRoot ( ) ; \n\tNodeRef i ; \n\tint indexI ; \n\tdo { \n\t\tindexI = MathUtils . nextInt ( nodeCount ) ; \n\t\ti = tree . getNode ( indexI ) ; \n\t\t} \n\twhile ( root == i || ( tree . getParent ( i ) == root && tree . getNodeHeight ( i ) > tree . getNodeHeight ( getOtherChild ( tree , tree . getParent ( i ) , i ) ) ) ) ; \n\t$F67791 ( secondNodeIndices ) $F104539 ( probabilities ) NodeRef j , jP ; \n\t$F59939 ( iP , tree , i ) $F9667 ( heightIP , tree , iP ) $F9667 ( heightI , tree , i ) double sum = NUM00 ; \n\tdouble backward = calculateTreeLikelihood ( prior , likelihood , tree ) ; \n\tint offset = ( int ) - backward ; \n\tbackward = Math . exp ( backward + offset ) ; \n\tfor ( $F119 ( n , nodeCount ) ) { \n\t\tj = tree . getNode ( n ) ; \n\t\tif ( j != root ) { \n\t\t\tjP = tree . getParent ( j ) ; \n\t\t\tif ( ( iP != jP ) && ( tree . getNodeHeight ( j ) < heightIP ) && $F59627 ( heightI , tree , jP ) ) { \n\t\t\t\tsecondNodeIndices . add ( n ) ; \n\t\t\t\tswap ( tree , i , j , iP , jP ) ; \n\t\t\t\tdouble prob = Math . exp ( calculateTreeLikelihood ( prior , likelihood , tree ) + offset ) ; \n\t\t\t\tprobabilities . add ( prob ) ; \n\t\t\t\tswap ( tree , i , j , jP , iP ) ; \n\t\t\t\tsum += prob ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( sum <= NUM00 ) $F62102 double ran = Math . random ( ) * sum ; \n\tint index = NUM00 ; \n\twhile ( ran > NUM00 ) { \n\t\tran -= probabilities . get ( index ) ; \n\t\tindex ++ ; \n\t\t} \n\tindex -- ; \n\tj = tree . getNode ( secondNodeIndices . get ( index ) ) ; \n\tjP = tree . getParent ( j ) ; \n\t$F9667 ( heightJP , tree , jP ) $F9667 ( heightJ , tree , j ) double sumForward2 = NUM00 ; \n\tNodeRef k , kP ; \n\tfor ( $F119 ( n , nodeCount ) ) { \n\t\tk = tree . getNode ( n ) ; \n\t\tif ( k != root ) { \n\t\t\tkP = tree . getParent ( k ) ; \n\t\t\tif ( ( jP != kP ) && ( tree . getNodeHeight ( k ) < heightJP ) && $F59627 ( heightJ , tree , kP ) ) { \n\t\t\t\tswap ( tree , j , k , jP , kP ) ; \n\t\t\t\tdouble prob = Math . exp ( calculateTreeLikelihood ( prior , likelihood , tree ) + offset ) ; \n\t\t\t\tsumForward2 += prob ; \n\t\t\t\tswap ( tree , j , k , kP , jP ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tswap ( tree , i , j , iP , jP ) ; \n\t$F28095 ( forward , probabilities , index ) iP = jP ; \n\theightIP = heightJP ; \n\tdouble sumBackward = NUM00 ; \n\tfor ( $F119 ( n , nodeCount ) ) { \n\t\tj = tree . getNode ( n ) ; \n\t\tif ( j != root ) { \n\t\t\tjP = tree . getParent ( j ) ; \n\t\t\tif ( ( iP != jP ) && ( tree . getNodeHeight ( j ) < heightIP ) && $F59627 ( heightI , tree , jP ) ) { \n\t\t\t\tswap ( tree , i , j , iP , jP ) ; \n\t\t\t\tdouble prob = Math . exp ( calculateTreeLikelihood ( prior , likelihood , tree ) + offset ) ; \n\t\t\t\tsumBackward += prob ; \n\t\t\t\tswap ( tree , i , j , jP , iP ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tdouble sumBackward2 = NUM00 ; \n\tj = tree . getNode ( secondNodeIndices . get ( index ) ) ; \n\tjP = tree . getParent ( j ) ; \n\theightJP = tree . getNodeHeight ( jP ) ; \n\theightJ = tree . getNodeHeight ( j ) ; \n\tfor ( $F119 ( n , nodeCount ) ) { \n\t\tk = tree . getNode ( n ) ; \n\t\tif ( k != root ) { \n\t\t\tkP = tree . getParent ( k ) ; \n\t\t\tif ( ( jP != kP ) && ( tree . getNodeHeight ( k ) < heightJP ) && $F59627 ( heightJ , tree , kP ) ) { \n\t\t\t\tswap ( tree , j , k , jP , kP ) ; \n\t\t\t\tdouble prob = Math . exp ( calculateTreeLikelihood ( prior , likelihood , tree ) + offset ) ; \n\t\t\t\tsumBackward2 += prob ; \n\t\t\t\tswap ( tree , j , k , kP , jP ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tdouble forwardProb = ( forward / sum ) + ( forward / sumForward2 ) ; \n\tdouble backwardProb = ( backward / sumBackward ) + ( backward / sumBackward2 ) ; \n\tdouble hastingsRatio = Math . log ( backwardProb / forwardProb ) ; \n\treturn hastingsRatio ; \n\t} \n"}, {"code": "public boolean isInputColumnNameAllowed ( String columnName ) { \n\t$F72105 ( columnName , _BOOL ) getInputColumnNames ( _BOOL ) ; \n\tfor ( $F1139 ( i , m_inputcolumnnames ) ) { \n\t\tif $F145 ( columnName , m_inputcolumnnames , i ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static int rgb ( String hex ) { \n\tint color = ( int ) Long . parseLong ( $F2934 ( hex ) , NUM00 ) ; \n\t$F52249 ( r , color ) $F52249 ( g , color ) $F52249 ( b , color ) $F69465 ( Color , r , g , b ) } \n"}, {"code": "$F1 public void addPropertyChangeListener ( String name , PropertyChangeListener pcl ) { \n\tm_bcSupport . addPropertyChangeListener ( name , pcl ) ; \n\t} \n"}, {"code": "public void testEmptyOrNullBlob $F72 throws Exception { \n\ttry { \n\t\t$F151311 ( stmt , connection ) try { \n\t\t\t$F270830 ( stmt ) stmt . setBytes ( NUM00 , $F10314 ) ; \n\t\t\tint insertedCount = stmt . executeUpdate ( ) ; \n\t\t\tassertTrue ( NUM00 , insertedCount == NUM00 ) ; \n\t\t\t$F270830 ( stmt ) stmt . setNull ( NUM00 , Types . BINARY ) ; \n\t\t\t$F102353 ( insertedCount , stmt ) assertTrue ( NUM00 , insertedCount == NUM00 ) ; \n\t\t\t} \n\t\t$F3229 ( stmt ) $F57556 ( stmt , connection ) $F270830 ( stmt ) try { \n\t\t\t$F49 ( rs , stmt ) $F32625 ( assertTrue , rs ) assertTrue ( NUM00 , Arrays . equals ( rs . getBytes ( NUM00 ) , $F10314 ) ) ; \n\t\t\t$F59 ( rs ) $F270830 ( stmt ) $F47578 ( rs , stmt ) $F32625 ( assertTrue , rs ) assertTrue ( NUM00 , rs . getObject ( NUM00 ) == null ) ; \n\t\t\t$F59 ( rs ) } \n\t\t$F3229 ( stmt ) } \n\tcatch ( Exception ex ) { \n\t\t$F301 ( ex ) throw ex ; \n\t\t} \n\t} \n"}, {"code": "$F9749 ( namespace , attName , attValue , xmlWriter , registerPrefix ) "}, {"code": "$F3441 ( journalWriter , writer , journalFileTmp , Utils , MAGIC , VERSION_1 , Integer , appVersion , valueCount , entry , lruEntries , DIRTY , CLEAN , journalFile , renameTo , journalFileBackup , _BOOL ) "}, {"code": "public void testCase22 $F72 { \n\tbyte $F3014 = { \n\t\tNUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , - NUM00 } \n\t; \n\t$F89724 int bSign = - NUM00 ; \n\tBigInteger aNumber = BigInteger . ZERO ; \n\t$F3023 ( bNumber , bSign , bBytes ) $F10683 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F10686 ( assertEquals , result ) } \n"}, {"code": "$F1431 public void restore ( String fileName ) throws $F6427 { \n\tObjectInputStream ois = new ObjectInputStream $F18079 ( fileName ) ; \n\tlocations = ( Map < V , Point > ) ois . readObject ( ) ; \n\t$F59 ( ois ) initializeLocations ( ) ; \n\tlocked = _BOOL ; \n\tfireStateChanged ( ) ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public void waitForData $F72 { \n\tif ( this . initialized ) $F932 waitOnInitialization ( this . initializationLatchAfterGetInitialImage ) ; \n\t} \n"}, {"code": "private void blackmanHarris4sMin ( int size ) { \n\tint start = ( windowFunction . length - size ) / NUM00 ; \n\tint stop = ( windowFunction . length + size ) / NUM00 ; \n\tdouble scale = NUM00 / ( double ) size / NUM00 ; \n\tfor ( int i = NUM00 ; \n\tstart < stop ; \n\tstart ++ , i ++ ) windowFunction [ i ] = scale * ( NUM00 - NUM00 * Math . cos ( twoPI * i / size ) + NUM00 * Math . cos ( NUM00 * twoPI * i / size ) - NUM00 * Math . cos ( NUM00 * twoPI * i / size ) ) ; \n\t} \n"}, {"code": "private $F96 calculateCMSKeyChecksum $F97 ( key ) { \n\t$F12496 ( result ) $F6163 ( sha1 , key ) $F137382 ( sha1 , digest ) $F10319 ( System , digest , result ) return result ; \n\t} \n"}, {"code": "$F60268 ( _lowerNick ) "}, {"code": "public boolean incrementReceived $F72 { \n\t$F62747 ( diff , System , startTime ) if ( diff >= NUM00 ) { \n\t\tpacketsPerSecond = intervalPackets ; \n\t\t$F3224 ( startTime , System ) intervalPackets = NUM00 ; \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\tintervalPackets ++ ; \n\t\t} \n\tthis . receivedPackets ++ ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "Sentence parseSentence ( final String text , final ConversationContext ctx ) { \n\tif ( isEmpty ( ) ) { \n\t\treturn ConversationParser . parse ( text , ctx ) ; \n\t\t} \n\t$F9652 ( txt , text ) final Sentence sentence = new SentenceImplementation ( ctx , txt ) ; \n\ttxt = ConversationParser . detectSentenceType ( txt , sentence ) ; \n\tif ( typeMatching ) { \n\t\treadTypeMatchExpressions ( txt , ctx , sentence ) ; \n\t\t} \n\telse if ( exactMatching ) { \n\t\treadSimpleExpressions ( txt , ctx , sentence ) ; \n\t\t} \n\telse if ( similarMatching ) { \n\t\treadSimpleExpressions ( txt , ctx , sentence ) ; \n\t\t} \n\telse if ( jokerMatching ) { \n\t\treadJokerExpressions ( txt , ctx , sentence ) ; \n\t\t} \n\telse $F79959 ( caseInsensitive , readSimpleExpressions , txt , ctx , sentence ) return sentence ; \n\t} \n"}, {"code": "public KafkaCluster usingDirectory ( File dataDir ) { \n\t$F57478 ( running ) if ( $F102274 ( dataDir ) && $F4925 ( dataDir ) && $F14321 ( dataDir ) && $F15586 ( dataDir ) ) $F825 this . dataDir = dataDir ; \n\treturn this ; \n\t} \n"}, {"code": "$F25545 ( i , count , buf , newbuf , mPool , System ) "}, {"code": "void onConsumeFinished ( Purchase purchase , IabResult result ) ; \n"}, {"code": "protected boolean checkProsodicPosition ( Element currentRulePart , String prosodicPositionType ) { \n\t$F32683 ( attNodes , currentRulePart ) for ( $F85554 ( z , attNodes ) ) { \n\t\t$F61359 ( el , attNodes , z ) $F48115 ( currentAtt , el ) $F61361 ( currentVal , el ) if $F3057 ( currentAtt ) { \n\t\t\tif $F14943 ( currentVal ) { \n\t\t\t\tif $F2137 ( prosodicPositionType , currentVal ) return _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F131348 ( currentVal ) $F9506 ( prosodicPositionType , currentVal , _BOOL ) } \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static BigDecimal parseBigDecimalForEntity ( String bigDecimalString ) throws NumberFormatException { \n\t$F1338 ( bigDecimalString ) $F1382 ( bigDecimalString ) $F2899 ( bigDecimalString ) if $F3599 ( bigDecimalString ) $F1337 return new BigDecimal ( bigDecimalString ) ; \n\t} \n"}, {"code": "public static void registerOperators ( String name , InputStream operatorsXML , ClassLoader classLoader ) $F214324 ( registerOperators , name , operatorsXML , classLoader ) "}, {"code": "private void doPermissionWorkBeforeAndroidM ( $F4170 Activity activity , $F4170 $F806 permissions , $F5466 PermissionsResultAction action ) { \n\tfor ( String perm : permissions ) { \n\t\tif ( action != null ) { \n\t\t\tif $F2200 ( mPermissions , perm ) { \n\t\t\t\taction . onResult ( perm , Permissions . NOT_FOUND ) ; \n\t\t\t\t} \n\t\t\telse if ( ActivityCompat . checkSelfPermission ( activity , perm ) != PackageManager . PERMISSION_GRANTED ) { \n\t\t\t\taction . onResult ( perm , Permissions . DENIED ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\taction . onResult ( perm , Permissions . GRANTED ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void deleteSubGroupContainers ( Set groupContainers ) throws $F52710 { \n\t$F10531 ( iter , groupContainers ) while $F2921 ( iter ) { \n\t\t$F2778 ( groupContainerDN , iter ) AMGroupContainer groupContainer = new AMGroupContainerImpl ( token , groupContainerDN ) ; \n\t\t$F1900 ( groupContainer ) } \n\t} \n"}, {"code": "public GlowTask ( Plugin owner , Runnable task , boolean sync , long delay , long period ) { \n\tsuper ( task , null ) ; \n\t$F201038 ( taskId , nextTaskId ) $F6947 ( description , task ) this . owner = owner ; \n\tthis . delay = delay ; \n\tthis . period = period ; \n\tcounter = NUM00 ; \n\tthis . sync = sync ; \n\t} \n"}, {"code": "public static void init $F4374 ( args ) { \n\ttry { \n\t\tcompiler . initCompiler ( args ) ; \n\t\tif ( VM . BuildForAdaptiveSystem && VM . BuildWithBaseBootImageCompiler ) { \n\t\t\toptCompiler . initCompiler ( args ) ; \n\t\t\t} \n\t\t} \n\tcatch ( Throwable e ) { \n\t\twhile ( e != null ) { \n\t\t\t$F301 ( e ) $F131447 ( e ) } \n\t\t} \n\t} \n"}, {"code": "static native boolean openDev $F72 ; \n"}, {"code": "int sendNextByte $F72 { \n\tint result = NUM00 ; \n\ttry { \n\t\tlong tDiff = interByteTime - ( $F32707 ( System , lastRxTime ) * NUM00 ) ; \n\t\tif ( tDiff > NUM00 ) { \n\t\t\t$F630 ( log , tDiff ) Thread . sleep ( tDiff / NUM00 , ( int ) ( tDiff % NUM00 ) ) ; \n\t\t\t} \n\t\t} \n\tcatch ( InterruptedException ex ) { \n\t\t$F103457 ( log , ex ) } \n\tif ( currTxCharPos >= currTxTgm . length ) $F20182 ( result , dequeueTelegram ) if ( result == NUM00 ) { \n\t\twriteChar ( currTxTgm [ currTxCharPos ++ ] , _BOOL ) ; \n\t\tif ( currTxCharPos >= currTxTgm . length ) { \n\t\t\tsetProtStat ( ProtStatus . RECEIVING ) ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public static String encode ( Serializable o ) { \n\t$F1538 ( bos ) try { \n\t\t$F7054 ( oos , bos ) try { \n\t\t\toos . writeObject ( o ) ; \n\t\t\t$F1206 ( oos ) } \n\t\t$F3229 ( oos ) return Base64 . encodeBytes ( bos . toByteArray ( ) ) ; \n\t\t} \n\t$F12153 ( e ) } \n"}, {"code": "public static $F529 createImage $F71242 ( dctx , context ) { \n\t$F157005 ( result , createImageMethod , dctx , context ) return result ; \n\t} \n"}, {"code": "public void addProfiles ( $F4170 IProfile ... profiles ) { \n\tif ( mAccountHeaderBuilder . mProfiles == null ) { \n\t\tmAccountHeaderBuilder . mProfiles = $F203 ; \n\t\t} \n\tCollections . addAll ( mAccountHeaderBuilder . mProfiles , IdDistributor . checkIds ( profiles ) ) ; \n\tmAccountHeaderBuilder . updateHeaderAndList ( ) ; \n\t} \n"}, {"code": "private static boolean isIdentifierName ( String k ) { \n\t$F1749 ( n , k ) $F6482 ( n , _BOOL ) if ( ! Character . isJavaIdentifierStart ( k . charAt ( NUM00 ) ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tfor ( $F1316 ( i , n ) ) { \n\t\tif ( ! Character . isJavaIdentifierPart ( k . charAt ( i ) ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "static boolean lessThanUnsignedLong ( long x1 , long x2 ) { \n\treturn ( x1 + Long . MIN_VALUE ) < ( x2 + Long . MIN_VALUE ) ; \n\t} \n"}, {"code": "private void moveSingleNode ( Object source , Point newPoint ) { \n\tDisplayNode node = ( DisplayNode ) source ; \n\tint deltaX = newPoint . x - clickPoint . x ; \n\t$F20221 ( deltaY , newPoint , clickPoint ) int newX = node . getLocation ( ) . x + deltaX ; \n\tint newY = node . getLocation ( ) . y + deltaY ; \n\tnode . setLocation ( newX , newY ) ; \n\t} \n"}, {"code": "public static $F4203 $F5675 toList ( T obj1 , T obj2 , T obj3 ) { \n\t$F11916 ( list ) list . add ( obj1 ) ; \n\tlist . add ( obj2 ) ; \n\tlist . add ( obj3 ) ; \n\treturn list ; \n\t} \n"}, {"code": "public void addMacroRecord ( MacroRecord record ) { \n\t$F67023 ( record , macroRecords ) } \n"}, {"code": "$F1431 protected KafkaSpoutWrapper createKafkaSpout ( Map conf , TopologyContext context , SpoutOutputCollector collector , final String topic , String schemeClsName , SpoutSpec spoutSpec , Map < String , StreamDefinition > sds ) throws Exception { \n\t$F21024 ( kafkaBrokerZkQuorum , config ) BrokerHosts hosts = null ; \n\tif ( config . hasPath ( NUM00 ) ) { \n\t\thosts = new ZkHosts ( kafkaBrokerZkQuorum , config . getString ( NUM00 ) ) ; \n\t\t} \n\telse { \n\t\thosts = new ZkHosts ( kafkaBrokerZkQuorum ) ; \n\t\t} \n\tString transactionZkRoot = DEFAULT_STORM_KAFKA_TRANSACTION_ZK_ROOT ; \n\tif ( config . hasPath ( NUM00 ) ) $F213842 ( transactionZkRoot , config ) String zkStateTransactionRelPath = DEFAULT_STORM_KAFKA_TRANSACTION_ZK_RELATIVE_PATH ; \n\tif ( config . hasPath ( NUM00 ) ) $F213842 ( zkStateTransactionRelPath , config ) SpoutConfig spoutConfig = new SpoutConfig ( hosts , topic , transactionZkRoot , zkStateTransactionRelPath + NUM00 + topic + NUM00 + topologyId ) ; \n\tboolean stormKafkaUseSameZkQuorumWithKafkaBroker = config . getBoolean ( NUM00 ) ; \n\tif ( stormKafkaUseSameZkQuorumWithKafkaBroker ) { \n\t\tZkServerPortUtils utils = new ZkServerPortUtils ( kafkaBrokerZkQuorum ) ; \n\t\tspoutConfig . zkServers = utils . getZkHosts ( ) ; \n\t\tspoutConfig . zkPort = utils . getZkPort ( ) ; \n\t\t} \n\telse { \n\t\tZkServerPortUtils utils = new ZkServerPortUtils $F16961 ( config ) ; \n\t\tspoutConfig . zkServers = utils . getZkHosts ( ) ; \n\t\tspoutConfig . zkPort = utils . getZkPort ( ) ; \n\t\t} \n\tspoutConfig . stateUpdateIntervalMs = config . hasPath ( NUM00 ) ? config . getInt ( NUM00 ) : NUM00 ; \n\tspoutConfig . fetchSizeBytes = config . hasPath ( NUM00 ) ? config . getInt ( NUM00 ) : NUM00 ; \n\tif ( config . hasPath ( NUM00 ) ) { \n\t\tspoutConfig . startOffsetTime = config . getInt ( NUM00 ) ; \n\t\t} \n\tspoutConfig . scheme = createMultiScheme ( conf , topic , schemeClsName ) ; \n\tKafkaSpoutWrapper wrapper = new KafkaSpoutWrapper ( spoutConfig , kafkaSpoutMetric ) ; \n\tSpoutOutputCollectorWrapper collectorWrapper = new SpoutOutputCollectorWrapper ( this , collector , topic , spoutSpec , numOfRouterBolts , sds , this . serializer ) ; \n\twrapper . open ( conf , context , collectorWrapper ) ; \n\tif $F17747 ( LOG ) $F146673 ( LOG , topic , schemeClsName ) return wrapper ; \n\t} \n"}, {"code": "public Builder addEmail ( Email email ) $F18637 ( emails , email , this ) "}, {"code": "public static HashProvider best ( HashParameters params ) { \n\treturn best ( params , EnumSet . of ( HashSupport . STATEFUL ) ) ; \n\t} \n"}, {"code": "public $F96 readRawBytes ( final int size ) throws IOException { \n\tif ( size < NUM00 ) { \n\t\tthrow InvalidProtocolBufferNanoException . negativeSize ( ) ; \n\t\t} \n\tif ( bufferPos + size > currentLimit ) { \n\t\tskipRawBytes ( currentLimit - bufferPos ) ; \n\t\tthrow InvalidProtocolBufferNanoException . truncatedMessage ( ) ; \n\t\t} \n\tif ( size <= bufferSize - bufferPos ) { \n\t\t$F4727 ( bytes , size ) $F21535 ( System , buffer , bufferPos , bytes , size ) bufferPos += size ; \n\t\treturn bytes ; \n\t\t} \n\telse { \n\t\tthrow InvalidProtocolBufferNanoException . truncatedMessage ( ) ; \n\t\t} \n\t} \n"}, {"code": "static boolean pairSum ( int ar [ ] , int x ) { \n\tArrays . sort ( ar ) ; \n\tint len = ar . length ; \n\tfor ( int i = NUM00 , j = len - NUM00 ; \n\ti < j ; \n\t) { \n\t\tif ( ar [ i ] + ar [ j ] == x ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse if ( ar [ i ] + ar [ j ] < x ) { \n\t\t\ti ++ ; \n\t\t\t} \n\t\telse { \n\t\t\tj -- ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public synchronized void loadFromFile $F72 { \n\t$F725 ( entries ) $F77510 ( file , Paths , fileName ) try ( BufferedReader reader = Files . newBufferedReader ( file , CHARSET ) ) { \n\t\tString line ; \n\t\tdo { \n\t\t\t$F36243 ( line , reader ) AddressbookEntry parsedEntry = parseLine ( line ) ; \n\t\t\tif ( parsedEntry != null ) $F64959 ( entries , parsedEntry ) } \n\t\twhile ( line != null ) ; \n\t\t} \n\tcatch ( IOException ex ) { \n\t\tLOGGER . warning ( $F9309 ( ex ) ) ; \n\t\t} \n\tLOGGER . info ( $F26062 ( entries , fileName ) ) ; \n\tscanCategories ( ) ; \n\t} \n"}, {"code": "public double localScore ( int i , int ... parents ) { \n\tfor ( int p : parents ) if $F105 ( forbidden , p ) return Double . NaN ; \n\tdouble residualVariance = covariances . get ( i , i ) ; \n\tint n = getSampleSize ( ) ; \n\tint p = parents . length ; \n\tMatrix covxx = getSelection1 ( covariances , parents ) ; \n\ttry { \n\t\tMatrix covxxInv = covxx . inverse ( ) ; \n\t\tMatrix covxy = getSelection2 ( covariances , parents , i ) ; \n\t\tMatrix b = covxxInv . times ( covxy ) ; \n\t\tdouble dot = NUM00 ; \n\t\tfor ( int j = NUM00 ; \n\t\tj < covxy . getRowDimension ( ) ; \n\t\tj ++ ) { \n\t\t\tfor ( int k = NUM00 ; \n\t\t\tk < covxy . getColumnDimension ( ) ; \n\t\t\tk ++ ) { \n\t\t\t\tdot += covxy . get ( j , k ) * b . get ( j , k ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tresidualVariance -= dot ; \n\t\tif ( residualVariance <= NUM00 ) { \n\t\t\tif ( isVerbose ( ) ) { \n\t\t\t\tout . println ( NUM00 + ( residualVariance / covariances . get ( i , i ) ) ) ; \n\t\t\t\t} \n\t\t\treturn Double . NaN ; \n\t\t\t} \n\t\tdouble c = getPenaltyDiscount ( ) ; \n\t\treturn score ( residualVariance , n , logn , p , c ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tboolean removedOne = _BOOL ; \n\t\twhile ( removedOne ) { \n\t\t\t$F37443 ( _parents ) $F46150 ( y , parents , _parents ) _parents . removeAll ( forbidden ) ; \n\t\t\t$F103411 ( parents , _parents ) for ( $F2277 ( y , _parents ) ) $F15302 ( parents , y , _parents ) removedOne = printMinimalLinearlyDependentSet ( parents , covariances ) ; \n\t\t\t} \n\t\treturn Double . NaN ; \n\t\t} \n\t} \n"}, {"code": "public boolean remove ( final int position ) { \n\tfinal AdapterTransaction removeTransaction = new RemoveTransaction $F200 ( this , position ) ; \n\tfinal boolean success = removeTransaction . perform ( ) ; \n\tmTransactions . offer ( removeTransaction ) ; \n\treturn success ; \n\t} \n"}, {"code": "private void encodeTypes ( $F17124 types , $F2100 ( m ) , String key , Declaration from ) { \n\tif $F4251 ( types ) $F665 $F20526 $F719 ( sats , types ) ; \n\tfor ( Type st : types ) $F18351 ( sats , typeMap , st , from ) m . put ( key , sats ) ; \n\t} \n"}, {"code": "public static void clearAssertionInformation $F72 { \n\t$F725 ( _AssertInfos ) _AssertOccured = _BOOL ; \n\t} \n"}, {"code": "public void build ( String code , String customStatus ) { \n\ttry { \n\t\tif ( customStatus != null ) { \n\t\t\tresult . put ( resources . getString ( R . string . intent_extra_status ) , customStatus ) ; \n\t\t\t} \n\t\telse { \n\t\t\tresult . put ( resources . getString ( R . string . intent_extra_status ) , $F222482 ( resources , R ) ) ; \n\t\t\t} \n\t\tresult . put ( resources . getString ( R . string . intent_extra_code ) , code ) ; \n\t\toperationListResult . put ( result ) ; \n\t\t} \n\tcatch ( JSONException e ) { \n\t\t$F222498 ( Log , TAG , e ) } \n\t} \n"}, {"code": "public static Operator generateBranchPlan ( AkibanInformationSchema ais , Table table ) { \n\tfinal Operator indexScan = generateIndexScan ( ais , table ) ; \n\tfinal Schema schema = SchemaCache . globalSchema ( ais ) ; \n\tPrimaryKey pkey = table . getPrimaryKeyIncludingInternal ( ) ; \n\tIndexRowType indexType = schema . indexRowType ( pkey . getIndex ( ) ) ; \n\treturn generateBranchPlan ( table , indexScan , indexType ) ; \n\t} \n"}, {"code": "protected void addToMaintenanceQueue ( NodePortTuple npt ) $F116364 ( maintenanceQueue , npt , _BOOL ) "}, {"code": "$F65837 ( node , count , capacity , _BOOL , f , first , last , notEmpty ) "}, {"code": "public long startstack $F72 $F12907 ( Long , fields ) "}, {"code": "public static void copyRealmPrivilegesFromParent ( SSOToken token , OrganizationConfigManager parent , OrganizationConfigManager child ) throws SSOException , DelegationException { \n\tif $F6299 ( debug ) { \n\t\tdebug . message ( NUM00 + NUM00 + parent . getOrganizationName ( ) + NUM00 + child . getOrganizationName ( ) ) ; \n\t\t} \n\tDelegationManager pdm = new DelegationManager ( token , parent . getOrganizationName ( ) ) ; \n\tDelegationManager cdm = new DelegationManager ( token , child . getOrganizationName ( ) ) ; \n\tString childOrgName = DNMapper . orgNameToDN ( child . getOrganizationName ( ) ) ; \n\tSet pdps = pdm . getPrivileges ( ) ; \n\tif $F4251 ( pdps ) { \n\t\t$F19243 ( debug ) $F665 } \n\tfor ( $F2774 ( items , pdps ) ) { \n\t\tDelegationPrivilege dp = ( DelegationPrivilege ) items . next ( ) ; \n\t\tSet subjects = dp . getSubjects ( ) ; \n\t\tif $F4251 ( subjects ) { \n\t\t\t$F36310 ( debug , dp ) $F598 } \n\t\t$F19850 ( newSubjects ) for ( $F2774 ( subs , subjects ) ) { \n\t\t\t$F2778 ( sName , subs ) try { \n\t\t\t\t$F21551 ( id , IdUtils , token , sName ) AMIdentity newId = new AMIdentity ( token , id . getName ( ) , id . getType ( ) , childOrgName , id . getDN ( ) ) ; \n\t\t\t\tnewSubjects . add ( IdUtils . getUniversalId ( newId ) ) ; \n\t\t\t\t} \n\t\t\tcatch ( IdRepoException ide ) { \n\t\t\t\tif $F6299 ( debug ) { \n\t\t\t\t\tdebug . message ( NUM00 + NUM00 + dp , ide ) ; \n\t\t\t\t\t} \n\t\t\t\t$F598 } \n\t\t\t} \n\t\tdp . setSubjects ( newSubjects ) ; \n\t\tSet permissions = dp . getPermissions ( ) ; \n\t\tif $F13709 ( permissions ) { \n\t\t\t$F10531 ( it , permissions ) while $F2921 ( it ) { \n\t\t\t\tDelegationPermission perm = ( DelegationPermission ) it . next ( ) ; \n\t\t\t\tperm . setOrganizationName ( NUM00 + childOrgName ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcdm . addPrivilege ( dp ) ; \n\t\t$F36310 ( debug , dp ) } \n\t} \n"}, {"code": "public boolean match ( MimeType other ) { \n\tif ( this == other ) return _BOOL ; \n\tif ( type != null && other . type != null && $F45203 ( type , other ) ) return _BOOL ; \n\tif ( subtype != null && other . subtype != null && $F45203 ( subtype , other ) ) return _BOOL ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public boolean isArmed $F72 { \n\treturn other . isArmed ( ) ; \n\t} \n"}, {"code": "public EncoderTestSuiteBuilder valid ( int min , int max ) { \n\t_valid . set ( min , max + NUM00 ) ; \n\t$F38527 ( _invalid , min , max ) $F38527 ( _encoded , min , max ) return this ; \n\t} \n"}, {"code": "protected $F81867 createChangeVirtualPoolDescriptors ( StorageSystem vplexSystem , Volume volume , VirtualPool newVpool , String taskId , $F46031 recommendations , VirtualPoolCapabilityValuesWrapper capabilities , ControllerOperationValuesWrapper operationsWrapper ) throws InternalException { \n\tURI volumeVarrayURI = volume . getVirtualArray ( ) ; \n\tVirtualArray volumeVarray = _dbClient . queryObject ( VirtualArray . class , volumeVarrayURI ) ; \n\t$F10635 ( s_logger , volumeVarrayURI ) URI volumeVpoolURI = volume . getVirtualPool ( ) ; \n\tVirtualPool currentVpool = _dbClient . queryObject ( $F81883 , volumeVpoolURI ) ; \n\t$F81867 descriptors = new ArrayList < VolumeDescriptor > $F72 ; \n\tVolumeDescriptor vplexVirtualVolumeDesc = new VolumeDescriptor ( VolumeDescriptor . Type . VPLEX_VIRT_VOLUME , volume . getStorageController ( ) , volume . getId ( ) , volume . getPool ( ) , null ) ; \n\t$F535 ( volumeParams ) volumeParams . put ( VolumeDescriptor . PARAM_VPOOL_CHANGE_EXISTING_VOLUME_ID , volume . getId ( ) ) ; \n\tvolumeParams . put ( VolumeDescriptor . PARAM_VPOOL_CHANGE_NEW_VPOOL_ID , newVpool . getId ( ) ) ; \n\tvolumeParams . put ( VolumeDescriptor . PARAM_VPOOL_CHANGE_OLD_VPOOL_ID , volume . getVirtualPool ( ) ) ; \n\tif ( operationsWrapper != null ) { \n\t\tif ( operationsWrapper . getMigrationSuspendBeforeCommit ( ) != null ) { \n\t\t\tvolumeParams . put ( VolumeDescriptor . PARAM_MIGRATION_SUSPEND_BEFORE_COMMIT , operationsWrapper . getMigrationSuspendBeforeCommit ( ) ) ; \n\t\t\t} \n\t\tif ( operationsWrapper . getMigrationSuspendBeforeDeleteSource ( ) != null ) { \n\t\t\tvolumeParams . put ( VolumeDescriptor . PARAM_MIGRATION_SUSPEND_BEFORE_DELETE_SOURCE , operationsWrapper . getMigrationSuspendBeforeDeleteSource ( ) ) ; \n\t\t\t} \n\t\t} \n\tvplexVirtualVolumeDesc . setParameters ( volumeParams ) ; \n\tdescriptors . add ( vplexVirtualVolumeDesc ) ; \n\tif ( VirtualPoolChangeAnalyzer . vpoolChangeRequiresMigration ( currentVpool , newVpool ) ) { \n\t\tVolume migSrcVolume = getAssociatedVolumeInVArray ( volume , volumeVarrayURI ) ; \n\t\tdescriptors . addAll ( createBackendVolumeMigrationDescriptors ( vplexSystem , volume , migSrcVolume , volumeVarray , newVpool , getVolumeCapacity ( migSrcVolume != null ? migSrcVolume : volume ) , taskId , recommendations , _BOOL , capabilities ) ) ; \n\t\t} \n\tURI haVarrayURI = VirtualPoolChangeAnalyzer . getHaVarrayURI ( currentVpool ) ; \n\tif ( haVarrayURI != null ) { \n\t\tVirtualArray haVarray = _dbClient . queryObject ( VirtualArray . class , haVarrayURI ) ; \n\t\tVirtualPool currentHaVpool = VirtualPoolChangeAnalyzer . getHaVpool ( currentVpool , _dbClient ) ; \n\t\tVirtualPool newHaVpool = VirtualPoolChangeAnalyzer . getNewHaVpool ( currentVpool , newVpool , _dbClient ) ; \n\t\tif ( VirtualPoolChangeAnalyzer . vpoolChangeRequiresMigration ( currentHaVpool , newHaVpool ) ) { \n\t\t\tVolume migSrcVolume = getAssociatedVolumeInVArray ( volume , haVarrayURI ) ; \n\t\t\tdescriptors . addAll ( createBackendVolumeMigrationDescriptors ( vplexSystem , volume , migSrcVolume , haVarray , newHaVpool , getVolumeCapacity ( migSrcVolume != null ? migSrcVolume : volume ) , taskId , recommendations , _BOOL , capabilities ) ) ; \n\t\t\t} \n\t\t} \n\treturn descriptors ; \n\t} \n"}, {"code": "public static boolean isJavaScriptEnabled ( HttpServletRequest request ) { \n\t$F27836 ( session , request ) Boolean javaScriptEnabled = ( Boolean ) session . getAttribute ( NUM00 ) ; \n\tif ( javaScriptEnabled != null ) { \n\t\t$F44652 ( javaScriptEnabled ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean equals ( Object obj ) { \n\tif ( this == obj ) return _BOOL ; \n\tif ( obj instanceof ECFieldFp ) { \n\t\treturn ( p . equals ( ( ( ECFieldFp ) obj ) . p ) ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public String name $F72 { \n\treturn theName ; \n\t} \n"}, {"code": "$F141880 ( closeable , rethrown ) "}, {"code": "private static String checksumMD5 ( String data ) { \n\tMessageDigest md5 = null ; \n\ttry $F14527 ( md5 , MessageDigest ) catch ( NoSuchAlgorithmException ex ) $F7077 ( ex ) return hexEncode ( md5 . digest ( data . getBytes ( ) ) ) ; \n\t} \n"}, {"code": "public static boolean validSkinSpecFile ( String fileName ) { \n\tFile file = new File ( Configuration . skinsDir ( ) , fileName ) ; \n\tif $F170765 ( file ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F2218 ( dbf , DocumentBuilderFactory ) try { \n\t\t$F2220 ( builder , dbf ) $F2221 ( doc , builder , file ) NodeList listOfComponents = doc . getElementsByTagName ( UI_ELEMENT ) ; \n\t\tif ( $F72501 ( listOfComponents ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\t$F7474 ( _BOOL ) } \n"}, {"code": "private void generateLegalTimesTree $F72 { \n\tint k0 = KeyEvent . KEYCODE_0 ; \n\tint k1 = KeyEvent . KEYCODE_1 ; \n\tint k2 = KeyEvent . KEYCODE_2 ; \n\tint k3 = KeyEvent . KEYCODE_3 ; \n\tint k4 = KeyEvent . KEYCODE_4 ; \n\tint k5 = KeyEvent . KEYCODE_5 ; \n\tint k6 = KeyEvent . KEYCODE_6 ; \n\tint k7 = KeyEvent . KEYCODE_7 ; \n\tint k8 = KeyEvent . KEYCODE_8 ; \n\tint k9 = KeyEvent . KEYCODE_9 ; \n\t$F58037 ( mLegalTimesTree ) $F58066 ( mIs24HourMode , minuteFirstDigit , k0 , k1 , k2 , k3 , k4 , k5 , minuteSecondDigit , k6 , k7 , k8 , k9 , firstDigit , mLegalTimesTree , secondDigit , thirdDigit , ampm , getAmOrPmKeyCode , AM , PM , fourthDigit ) } \n"}, {"code": "public StrBuilder insert ( final int index , final Object obj ) { \n\tif ( obj == null ) $F8587 ( insert , index , nullText ) return insert ( index , obj . toString ( ) ) ; \n\t} \n"}, {"code": "$F1 public void handleMouseMoved ( ChartCanvas canvas , MouseEvent e ) { \n\tif ( ! canvas . isTooltipEnabled ( ) ) $F932 String text = getTooltipText ( $F175257 ( canvas , e ) ) ; \n\tcanvas . setTooltip ( text , e . getScreenX ( ) , e . getScreenY ( ) ) ; \n\t} \n"}, {"code": "$F73823 ( lock , this , count ) "}, {"code": "private boolean loadUnpackedUMD ( String filename ) throws IOException , GeneralJpcspException { \n\t$F9303 ( doUmdBuffering , _BOOL ) $F1705 ( file , filename ) if $F3428 ( file ) { \n\t\t$F18800 ( raf , file ) $F27404 ( roChannel , raf ) ByteBuffer readbuffer = roChannel . map ( FileChannel . MapMode . READ_ONLY , NUM00 , $F181356 ( roChannel ) ) ; \n\t\temulator . load ( NUM00 , readbuffer ) ; \n\t\t$F59 ( raf ) $F973 ( log ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean disableVMAX3Compression ( URI blockObjectURI , StorageSystem storageSystem ) { \n\tVirtualPool virtualPool = null ; \n\tStoragePool storagePool = null ; \n\tVolume volume = null ; \n\tif ( URIUtil . isType ( blockObjectURI , $F8540 ) ) { \n\t\tvolume = _dbClient . queryObject ( $F8540 , blockObjectURI ) ; \n\t\t} \n\telse if ( URIUtil . isType ( blockObjectURI , $F34885 ) ) { \n\t\tBlockSnapshot $F34887 ( snapshot , _dbClient , blockObjectURI ) ; \n\t\tvolume = _dbClient . queryObject ( $F8540 , snapshot . getParent ( ) ) ; \n\t\t} \n\telse if ( URIUtil . isType ( blockObjectURI , $F30624 ) ) { \n\t\tBlockMirror mirror = _dbClient . queryObject ( $F30624 , blockObjectURI ) ; \n\t\tvirtualPool = _dbClient . queryObject ( $F81883 , mirror . getVirtualPool ( ) ) ; \n\t\tstoragePool = _dbClient . queryObject ( StoragePool . class , mirror . getPool ( ) ) ; \n\t\t} \n\tif ( volume != null ) { \n\t\tvirtualPool = _dbClient . queryObject ( $F81883 , volume . getVirtualPool ( ) ) ; \n\t\tstoragePool = _dbClient . queryObject ( StoragePool . class , volume . getPool ( ) ) ; \n\t\t} \n\treturn ( checkIfProviderSupportsCompressionOperations ( storageSystem ) && ! virtualPool . getCompressionEnabled ( ) && storagePool . getCompressionEnabled ( ) ) ; \n\t} \n"}, {"code": "public static LatLon rhumbEndPosition ( LatLon p , double rhumbAzimuthRadians , double pathLengthRadians ) { \n\t$F826 ( p ) return rhumbEndPosition ( p , Angle . fromRadians ( rhumbAzimuthRadians ) , Angle . fromRadians ( pathLengthRadians ) ) ; \n\t} \n"}, {"code": "private static int indexOf ( $F131 array , Object elt ) { \n\treturn indexOf ( array , array . length , elt ) ; \n\t} \n"}, {"code": "public Dimension maximumLayoutSize ( Container target ) { \n\treturn new Dimension ( Integer . MAX_VALUE , Integer . MAX_VALUE ) ; \n\t} \n"}, {"code": "public static String readStream ( InputStream in ) { \n\t$F58550 ( reader , in ) $F83 ( sb ) String line = null ; \n\ttry { \n\t\twhile $F443 ( line , reader ) $F104801 ( sb , line ) } \n\tcatch ( IOException e ) { \n\t\tFreshAirLog . e ( NUM00 , e ) ; \n\t\t} \n\tfinally { \n\t\t$F29053 ( in ) $F29053 ( reader ) } \n\t$F92 ( sb ) } \n"}, {"code": "public void update ( long n ) $F120892 ( uncounted , n ) "}, {"code": "private void logExpiration ( Entry e ) { \n\tif ( e . renewalsDone ( ) ) { \n\t\tlogger . log ( Level . FINE , NUM00 , e . lease ) ; \n\t\t} \n\telse { \n\t\tlogger . log ( Levels . FAILED , NUM00 , e . lease ) ; \n\t\t} \n\t} \n"}, {"code": "void removeRipple ( Ripple ripple ) { \n\tfinal Ripple [ ] ripples = mExitingRipples ; \n\tfinal int count = mExitingRipplesCount ; \n\tfinal int index = getRippleIndex ( ripple ) ; \n\tif ( index >= NUM00 ) { \n\t\tSystem . arraycopy ( ripples , index + NUM00 , ripples , index , count - ( index + NUM00 ) ) ; \n\t\tripples [ count - NUM00 ] = null ; \n\t\tmExitingRipplesCount -- ; \n\t\tinvalidateSelf ( ) ; \n\t\t} \n\t} \n"}, {"code": "protected final void writeS ( ByteBuffer buf , String text ) { \n\tif ( text == null ) { \n\t\tbuf . putChar ( NUM00 ) ; \n\t\t} \n\telse { \n\t\t$F22998 ( len , text ) for ( $F119 ( i , len ) ) { \n\t\t\tbuf . putChar ( text . charAt ( i ) ) ; \n\t\t\t} \n\t\tbuf . putChar ( NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void onDrawEye ( Eye eye ) { \n\t$F14651 ( GLES20 ) Engine . checkGLError ( NUM00 ) ; \n\tif $F1264 ( prefOrientationProviderString ) { \n\t\tif ( firstOnDrawEye > NUM00 ) { \n\t\t\tfirstOnDrawEye -- ; \n\t\t\t$F12457 ( m ) Matrix . invertM ( m , NUM00 , mHeadViewSDK , NUM00 ) ; \n\t\t\tMatrix . multiplyMM ( m , NUM00 , eye . getEyeView ( ) , NUM00 , m , NUM00 ) ; \n\t\t\tif ( eye . getType ( ) == Eye . Type . RIGHT ) { \n\t\t\t\tmEyeRightView = m ; \n\t\t\t\t} \n\t\t\telse if ( eye . getType ( ) == Eye . Type . LEFT ) { \n\t\t\t\tmEyeLeftView = m ; \n\t\t\t\t} \n\t\t\t$F665 } \n\t\t$F12457 ( m ) if ( eye . getType ( ) == Eye . Type . RIGHT ) { \n\t\t\tMatrix . multiplyMM ( m , NUM00 , mHeadViewUse , NUM00 , mEyeRightView , NUM00 ) ; \n\t\t\t} \n\t\telse { \n\t\t\tMatrix . multiplyMM ( m , NUM00 , mHeadViewUse , NUM00 , mEyeLeftView , NUM00 ) ; \n\t\t\t} \n\t\tMatrix . multiplyMM ( mView , NUM00 , m , NUM00 , mCamera , NUM00 ) ; \n\t\t} \n\telse { \n\t\tMatrix . multiplyMM ( mView , NUM00 , eye . getEyeView ( ) , NUM00 , mCamera , NUM00 ) ; \n\t\t} \n\t$F5415 perspective = eye . getPerspective ( Z_NEAR , Z_FAR ) ; \n\t$F14653 ( GLES20 ) GLES20 . glBlendFunc ( GLES20 . GL_SRC_ALPHA , GLES20 . GL_ONE_MINUS_SRC_ALPHA ) ; \n\t$F14657 ( GLES20 ) if ( prefShowEnv && bgEnv . isReady ( ) ) { \n\t\tMatrix . multiplyMM ( mModelView , NUM00 , mView , NUM00 , bgEnv . model , NUM00 ) ; \n\t\tMatrix . multiplyMM ( mModelViewProjection , NUM00 , perspective , NUM00 , mModelView , NUM00 ) ; \n\t\tbgEnv . draw ( eye . getType ( ) , mModelViewProjection ) ; \n\t\t} \n\tGLES20 . glDisable ( GLES20 . GL_DEPTH_TEST ) ; \n\tMatrix . multiplyMM ( mModelViewProjection , NUM00 , perspective , NUM00 , cameraPreview . model , NUM00 ) ; \n\tcameraPreview . draw ( eye . getType ( ) , mModelViewProjection ) ; \n\tMatrix . multiplyMM ( mModelView , NUM00 , mView , NUM00 , screen . model , NUM00 ) ; \n\tMatrix . multiplyMM ( mModelViewProjection , NUM00 , perspective , NUM00 , mModelView , NUM00 ) ; \n\tscreen . draw ( eye . getType ( ) , mModelViewProjection ) ; \n\tfor ( ButtonThing button : buttonList ) { \n\t\tMatrix . multiplyMM ( mModelView , NUM00 , mView , NUM00 , button . model , NUM00 ) ; \n\t\tMatrix . multiplyMM ( mModelViewProjection , NUM00 , perspective , NUM00 , mModelView , NUM00 ) ; \n\t\tbutton . draw ( eye . getType ( ) , mModelViewProjection ) ; \n\t\t} \n\tMatrix . multiplyMM ( mModelViewProjection , NUM00 , perspective , NUM00 , aimPoint . model , NUM00 ) ; \n\taimPoint . draw ( Eye . Type . MONOCULAR , mModelViewProjection ) ; \n\t} \n"}, {"code": "protected SourceRecords consumeRecordsByTopic ( int numRecords ) throws InterruptedException { \n\tSourceRecords records = new SourceRecords $F72 ; \n\tconsumeRecords ( numRecords , null ) ; \n\treturn records ; \n\t} \n"}, {"code": "$F1 public boolean equals ( Object o ) { \n\t$F3627 ( this , o , _BOOL ) if ( ! ( o instanceof PrototypeSize ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tPrototypeSize size = ( PrototypeSize ) o ; \n\t$F12738 ( prototype , size ) } \n"}, {"code": "private static int compareVersion ( String versionStr1 , String versionStr2 ) { \n\tif ( versionStr1 == null ) { \n\t\tthrow new MLContextException $F580 ; \n\t\t} \n\tif ( versionStr2 == null ) { \n\t\tthrow new MLContextException $F580 ; \n\t\t} \n\tScanner scanner1 = null ; \n\tScanner scanner2 = null ; \n\ttry { \n\t\tscanner1 = new Scanner ( versionStr1 ) ; \n\t\tscanner2 = new Scanner ( versionStr2 ) ; \n\t\tscanner1 . useDelimiter ( NUM00 ) ; \n\t\tscanner2 . useDelimiter ( NUM00 ) ; \n\t\twhile ( scanner1 . hasNextInt ( ) && scanner2 . hasNextInt ( ) ) { \n\t\t\t$F8254 ( version1 , scanner1 ) $F8254 ( version2 , scanner2 ) if ( version1 < version2 ) $F7629 else if ( version1 > version2 ) $F1083 } \n\t\treturn scanner1 . hasNextInt ( ) ? NUM00 : NUM00 ; \n\t\t} \n\t$F4651 ( scanner1 , scanner2 ) } \n"}, {"code": "public static boolean isValidVector ( Vector2f vector ) { \n\t$F1933 ( vector , _BOOL ) if ( Float . isNaN ( vector . x ) || Float . isNaN ( vector . y ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( Float . isInfinite ( vector . x ) || Float . isInfinite ( vector . y ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean isObsessional $F72 $F298 ( typeString , SUFFIX_OBSESSIONAL ) "}, {"code": "$F179160 public void changeLocoSpeed ( DccThrottle t , Block blk , float speed ) { \n\tif ( blk == referenced && speed == desiredSpeedStep ) $F932 float blockLength = blk . getLengthMm ( ) ; \n\tif ( blk == referenced ) { \n\t\tdistanceRemaining = distanceRemaining - getDistanceTravelled ( _throttle . getIsForward ( ) , _throttle . getSpeedSetting ( ) , ( ( float ) ( System . nanoTime ( ) - lastTimeTimerStarted ) / NUM00 ) ) ; \n\t\tblockLength = distanceRemaining ; \n\t\t$F980 ( log ) } \n\telse { \n\t\treferenced = blk ; \n\t\t} \n\tchangeLocoSpeed ( t , blockLength , speed ) ; \n\t} \n"}, {"code": "public boolean remove ( Object targetChild ) $F8587 ( remove , targetChild , _BOOL ) "}, {"code": "private void notifyClassObservers ( ClassDescriptor classDescriptor ) { \n\tfor ( IClassObserver observer : classObserverList ) { \n\t\tobserver . observeClass ( classDescriptor ) ; \n\t\t} \n\t} \n"}, {"code": "public void dup2 $F72 { \n\tmv . visitInsn ( Opcodes . DUP2 ) ; \n\t} \n"}, {"code": "static boolean isAppXml ( String mime ) { \n\treturn mime != null && ( mime . equals ( NUM00 ) || mime . equals ( NUM00 ) || mime . equals ( NUM00 ) || $F40447 ( mime ) ) ; \n\t} \n"}, {"code": "public static NativePage createNativePageForURL ( String url , NativePage candidatePage , Tab tab , TabModelSelector tabModelSelector , Activity activity ) { \n\treturn createNativePageForURL ( url , candidatePage , tab , tabModelSelector , activity , tab . isIncognito ( ) ) ; \n\t} \n"}, {"code": "protected void throwParseException ( ParseException e ) throws ParseException { \n\tif ( locator != null ) { \n\t\tString elementLocation = NUM00 ; \n\t\tif ( curHandler != null ) { \n\t\t\telementLocation += NUM00 + curHandler . qName ; \n\t\t\t} \n\t\tString location = NUM00 + String . valueOf ( locator . getLineNumber ( ) ) + NUM00 + String . valueOf ( locator . getColumnNumber ( ) ) + elementLocation + NUM00 ; \n\t\tLogUtils . logException ( logger , Level . FINE , location , e ) ; \n\t\tthrow new ParseException ( location + e . getMessage ( ) , e ) ; \n\t\t} \n\telse { \n\t\tLogUtils . logException ( logger , Level . FINE , null , e ) ; \n\t\tthrow e ; \n\t\t} \n\t} \n"}, {"code": "public CustomEditor $F72 { \n\t$F9898 ( setLayout ) add ( m_Label , BorderLayout . CENTER ) ; \n\tm_DeleteBut . addActionListener ( m_InnerActionListener ) ; \n\tm_EditBut . addActionListener ( m_InnerActionListener ) ; \n\tm_UpBut . addActionListener ( m_InnerActionListener ) ; \n\tm_DownBut . addActionListener ( m_InnerActionListener ) ; \n\tm_AddBut . addActionListener ( m_InnerActionListener ) ; \n\tm_ElementList . addListSelectionListener ( m_InnerSelectionListener ) ; \n\tm_ElementList . addMouseListener ( m_InnerMouseListener ) ; \n\t$F58097 ( m_AddBut ) $F58097 ( m_DeleteBut ) $F58097 ( m_EditBut ) $F58097 ( m_UpBut ) $F58097 ( m_DownBut ) } \n"}, {"code": "public MemoidOne ( Function < ? super Input , ? extends Output > fn , BiPredicate < Input , Input > equality ) { \n\tfn_ = Objects . requireNonNull ( fn ) ; \n\tequality_ = Objects . requireNonNull ( equality ) ; \n\t} \n"}, {"code": "public static EPType singleValue ( Class singleValueType ) { \n\tif ( singleValueType != null && singleValueType . isArray ( ) ) { \n\t\treturn new ClassMultiValuedEPType ( singleValueType , singleValueType . getComponentType ( ) ) ; \n\t\t} \n\treturn new ClassEPType ( singleValueType ) ; \n\t} \n"}, {"code": "private static $F6969 convertFieldType ( String fieldType ) { \n\t$F65325 ( fieldTypeMap , fieldType ) $F1274 } \n"}, {"code": "void addXMLElementAfterTokenIndex ( int lastTokenIndex , XMLElement element , boolean addAfterNewLine ) throws Exception { \n\taddXMLElementAfterTokenIndex ( lastTokenIndex , element , addAfterNewLine , _BOOL ) ; \n\t} \n"}, {"code": "public static $F529 findContentParents $F71242 ( dctx , context ) { \n\t$F34733 ( results , FastMap ) $F6689 parentList = FastList . newInstance ( ) ; \n\t$F545 ( results , parentList ) $F28487 ( dispatcher , dctx ) $F28495 ( contentId , context ) $F28495 ( contentAssocTypeId , context ) $F28495 ( direction , context ) if $F4329 ( UtilValidate , direction ) { \n\t\tdirection = NUM00 ; \n\t\t} \n\t$F34733 ( traversMap , FastMap ) $F545 ( traversMap , contentId ) $F545 ( traversMap , direction ) $F545 ( traversMap , contentAssocTypeId ) try { \n\t\t$F28545 ( thisResults , dispatcher , traversMap ) String errorMsg = ServiceUtil . getErrorMessage ( thisResults ) ; \n\t\tif $F35028 ( UtilValidate , errorMsg ) { \n\t\t\tDebug . logError ( NUM00 + errorMsg , module ) ; \n\t\t\treturn ServiceUtil . returnError ( errorMsg ) ; \n\t\t\t} \n\t\t$F108897 ( nodeMap , UtilGenerics , thisResults ) walkParentTree ( nodeMap , parentList ) ; \n\t\t} \n\tcatch ( GenericServiceException e ) { \n\t\treturn ServiceUtil . returnFailure ( e . getMessage ( ) ) ; \n\t\t} \n\treturn results ; \n\t} \n"}, {"code": "public static boolean arrayEquals ( Object x , Object y , double tolf , double told ) { \n\tif ( x == null && y == null ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F6973 ( x , y , _BOOL ) $F20850 ( xClass , x ) $F20850 ( yClass , y ) $F35938 ( xClass , yClass , _BOOL ) if $F101443 ( xClass ) $F23588 ( x , y ) else { \n\t\tif ( xClass . equals ( $F144048 ) ) { \n\t\t\treturn Arrays . equals ( $F25706 ( x ) , $F25706 ( y ) ) ; \n\t\t\t} \n\t\telse if ( xClass . equals ( $F1986 . class ) ) { \n\t\t\tif ( told == NUM00 ) { \n\t\t\t\treturn Arrays . equals ( $F41244 ( x ) , $F41244 ( y ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\treturn doubleArrayEquals ( $F41244 ( x ) , $F41244 ( y ) , told ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( xClass . equals ( $F2469 . class ) ) { \n\t\t\treturn Arrays . equals ( $F2471 ( x ) , $F2471 ( y ) ) ; \n\t\t\t} \n\t\telse if ( xClass . equals ( $F5415 . class ) ) { \n\t\t\tif ( tolf == NUM00 ) { \n\t\t\t\treturn Arrays . equals ( $F41250 ( x ) , $F41250 ( y ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\treturn floatArrayEquals ( $F41250 ( x ) , $F41250 ( y ) , ( float ) tolf ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( xClass . equals ( $F144055 ) ) { \n\t\t\treturn Arrays . equals ( $F2457 ( x ) , $F2457 ( y ) ) ; \n\t\t\t} \n\t\telse if ( xClass . equals ( $F5078 . class ) ) { \n\t\t\treturn Arrays . equals ( $F41262 ( x ) , $F41262 ( y ) ) ; \n\t\t\t} \n\t\telse if ( xClass . equals ( $F1469 . class ) ) { \n\t\t\treturn Arrays . equals ( $F114168 ( x ) , $F114168 ( y ) ) ; \n\t\t\t} \n\t\telse if ( xClass . equals ( $F144083 ) ) { \n\t\t\treturn Arrays . equals ( $F41256 ( x ) , $F41256 ( y ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F32760 ( xo , x ) $F32760 ( yo , y ) $F164288 ( xo , yo , _BOOL ) for ( $F24429 ( i , xo ) ) { \n\t\t\t\tif ( ! arrayEquals ( xo [ i ] , yo [ i ] , tolf , told ) ) { \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public Dictionary ( Directory tempDir , String tempFileNamePrefix , InputStream affix , List $F64393 dictionaries , boolean ignoreCase ) throws $F79407 { \n\tthis . ignoreCase = ignoreCase ; \n\tthis . needsInputCleaning = ignoreCase ; \n\tthis . needsOutputCleaning = _BOOL ; \n\tflagLookup . add ( new BytesRef $F72 ) ; \n\tPath aff = Files . createTempFile ( tempPath , NUM00 , NUM00 ) ; \n\tOutputStream out = new BufferedOutputStream ( Files . newOutputStream ( aff ) ) ; \n\tInputStream aff1 = null ; \n\tInputStream aff2 = null ; \n\tboolean success = _BOOL ; \n\ttry { \n\t\tfinal $F96 buffer = new byte [ NUM00 * NUM00 ] ; \n\t\tint len ; \n\t\t$F87062 ( len , affix , buffer , out ) $F59 ( out ) aff1 = new BufferedInputStream $F33274 ( Files , aff ) ; \n\t\tString encoding = getDictionaryEncoding ( aff1 ) ; \n\t\tCharsetDecoder decoder = getJavaEncoding ( encoding ) ; \n\t\taff2 = new BufferedInputStream $F33274 ( Files , aff ) ; \n\t\treadAffixFile ( aff2 , decoder ) ; \n\t\tIntSequenceOutputs o = IntSequenceOutputs . getSingleton ( ) ; \n\t\tBuilder < IntsRef > b = new Builder $F200 ( FST . INPUT_TYPE . BYTE4 , o ) ; \n\t\treadDictionaryFiles ( tempDir , tempFileNamePrefix , dictionaries , decoder , b ) ; \n\t\twords = b . finish ( ) ; \n\t\taliases = null ; \n\t\tmorphAliases = null ; \n\t\tsuccess = _BOOL ; \n\t\t} \n\tfinally { \n\t\tIOUtils . closeWhileHandlingException ( out , aff1 , aff2 ) ; \n\t\tif ( success ) $F11331 ( Files , aff ) else { \n\t\t\tIOUtils . deleteFilesIgnoringExceptions ( aff ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void collapseBuilding ( Building bldg ) { \n\tbuildings . removeElement ( bldg ) ; \n\tEnumeration < Coords > bldgCoords = bldg . getCoords ( ) ; \n\twhile $F1444 ( bldgCoords ) { \n\t\tfinal Coords coords = bldgCoords . nextElement ( ) ; \n\t\tcollapseBuilding ( coords ) ; \n\t\t} \n\t} \n"}, {"code": "$F22609 public void detachISO ( String vmId , boolean isDeleteFile , AsyncMethodCallback < Host . AsyncClient . detach_iso_call > handler ) throws RpcException { \n\tensureClient ( ) ; \n\tDetachISORequest detachISORequest = new DetachISORequest ( vmId ) ; \n\tdetachISORequest . setDelete_file ( isDeleteFile ) ; \n\tclientProxy . setTimeout ( DETACH_ISO_TIMEOUT_MS ) ; \n\tlogger . info ( NUM00 , vmId , getHostIp ( ) , detachISORequest ) ; \n\ttry { \n\t\tclientProxy . detach_iso ( detachISORequest , handler ) ; \n\t\t} \n\t$F22635 ( e ) } \n"}, {"code": "private String readNfcErrorMsg ( ByteBuffer reply ) throws IOException { \n\t$F8354 ( errorType , reply ) $F8354 ( errorCode , reply ) $F8354 ( msgLen , reply ) $F40722 ( msgLen ) $F87627 ( msgBuffer , ByteBuffer , msgLen ) readFully ( msgBuffer ) ; \n\tString errorMsg = new String ( msgBuffer . array ( ) , NUM00 , msgLen - NUM00 , Charsets . US_ASCII ) ; \n\treturn String . format ( NUM00 , errorType , errorCode , errorMsg ) ; \n\t} \n"}, {"code": "private void show ( boolean show ) { \n\tif ( show ) { \n\t\t$F65150 ( mXFade ) mState = STATE_PIE ; \n\t\tmCurrentItem = null ; \n\t\tPieItem root = getRoot ( ) ; \n\t\tfor ( PieItem openItem : mOpen ) { \n\t\t\tif ( openItem . hasItems ( ) ) { \n\t\t\t\tfor ( PieItem item : openItem . getItems ( ) ) $F242209 ( item , _BOOL ) } \n\t\t\t} \n\t\t$F15121 ( mLabel ) $F725 ( mOpen ) mOpen . add ( root ) ; \n\t\tlayoutPie ( ) ; \n\t\tfadeIn ( ) ; \n\t\t} \n\telse { \n\t\tmState = STATE_IDLE ; \n\t\tmTapMode = _BOOL ; \n\t\t$F65150 ( mXFade ) if ( mLabel != null ) $F71121 ( mLabel ) } \n\tsetVisible ( show ) ; \n\tmHandler . sendEmptyMessage ( show ? MSG_OPEN : MSG_CLOSE ) ; \n\t} \n"}, {"code": "private synchronized void persistProfileAndNotifyChange ( AuthnProvider modifiedProvider , boolean newObject ) { \n\t$F266936 ( modifiedProvider , System ) ; \n\tif ( newObject ) { \n\t\t_dbClient . createObject ( modifiedProvider ) ; \n\t\t} \n\telse { \n\t\t_dbClient . persistObject ( modifiedProvider ) ; \n\t\t} \n\tnotifyChange ( ) ; \n\t} \n"}, {"code": "public void addUndoableAction ( UndoableAction action ) { \n\tundoStack . push ( action ) ; \n\t$F6050 ( redoStack ) } \n"}, {"code": "public IntArrayList $F23416 ( data ) { \n\tarray = new int [ ( int ) $F28143 ( data ) + NUM00 ] ; \n\tsize = data . length ; \n\t$F135 ( System , data , array , size ) } \n"}, {"code": "private void addPingTimeData ( long sample ) { \n\t$F8934 ( lastPingTimesLock ) try { \n\t\tif ( lastPingTimes == null ) { \n\t\t\t$F11125 ( lastPingTimes , PING_MOVING_AVERAGE_WINDOW ) Arrays . fill ( lastPingTimes , sample ) ; \n\t\t\t} \n\t\telse { \n\t\t\tSystem . arraycopy ( lastPingTimes , NUM00 , lastPingTimes , NUM00 , lastPingTimes . length - NUM00 ) ; \n\t\t\t$F41606 ( lastPingTimes , sample ) } \n\t\t} \n\t$F796 ( lastPingTimesLock ) } \n"}, {"code": "$F77358 ( buffer , contentEncoding ) "}, {"code": "protected void tearDown $F72 { \n\ttry $F4650 ( ds , sds ) $F3957 } \n"}, {"code": "public String substring $F36827 ( subject , start , stop ) { \n\tif ( stop == - NUM00 || stop >= subject . length ( ) ) $F61217 ( subject , start ) $F6669 ( subject , start , stop ) } \n"}, {"code": "public boolean controlRunTrain ( int idx ) { \n\tif $F585 ( log ) { \n\t\tlog . debug ( NUM00 + idx + NUM00 + _runMode + NUM00 + getDisplayName ( ) ) ; \n\t\t} \n\tboolean ret = _BOOL ; \n\tint oldIndex = - MODE_MANUAL ; \n\tif ( _engineer == null ) { \n\t\tswitch ( idx ) { \n\t\t\tcase HALT : case RESUME : case RETRY : ret = _BOOL ; \n\t\t\t$F597 case ABORT : if ( _runMode == Warrant . MODE_LEARN ) { \n\t\t\t\tfirePropertyChange ( NUM00 , Integer . valueOf ( - MODE_LEARN ) , Integer . valueOf ( _idxCurrentOrder ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tstopWarrant ( _BOOL ) ; \n\t\t\t\t} \n\t\t\t$F597 } \n\t\t} \n\telse { \n\t\tsynchronized ( _engineer ) { \n\t\t\toldIndex = _engineer . getRunState ( ) ; \n\t\t\tswitch ( idx ) { \n\t\t\t\tcase HALT : _engineer . setHalt ( _BOOL ) ; \n\t\t\t\t$F597 case RESUME : _engineer . setHalt ( _BOOL ) ; \n\t\t\t\trestart ( ) ; \n\t\t\t\tret = moveIntoNextBlock ( MID ) ; \n\t\t\t\t$F597 case RETRY : BlockOrder bo = getBlockOrderAt ( _idxCurrentOrder + NUM00 ) ; \n\t\t\t\tret = _BOOL ; \n\t\t\t\tif ( bo != null ) { \n\t\t\t\t\tOBlock b = bo . getBlock ( ) ; \n\t\t\t\t\tif ( b . allocate ( this ) == null && ( b . getState ( ) & OBlock . OCCUPIED ) != NUM00 ) { \n\t\t\t\t\t\t_idxCurrentOrder ++ ; \n\t\t\t\t\t\tif $F1238 ( b , _stoppingBlock ) { \n\t\t\t\t\t\t\t_stoppingBlock . removePropertyChangeListener ( this ) ; \n\t\t\t\t\t\t\t_stoppingBlock = null ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\tbo . setPath ( this ) ; \n\t\t\t\t\t\trestart ( ) ; \n\t\t\t\t\t\tgoingActive ( b ) ; \n\t\t\t\t\t\tret = _BOOL ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t$F597 $F20998 ( ABORT , stopWarrant , _BOOL ) } \n\t\t\t} \n\t\t} \n\tif ( ret ) { \n\t\tfirePropertyChange ( NUM00 , Integer . valueOf ( oldIndex ) , Integer . valueOf ( idx ) ) ; \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "public void removeCustomSashFormListener ( ICustomSashFormListener listener ) $F4579 ( customSashFormListeners , listener ) "}, {"code": "$F59119 ( file , data , writeStringToFile , Charset , _BOOL ) "}, {"code": "protected void deleteSessionVariables $F71933 ( sessionId , varNames ) { \n\t$F59924 ( sessionId ) Key key = keyFactory . newKey ( sessionId ) ; \n\tTransaction transaction = datastore . newTransaction ( ) ; \n\ttry { \n\t\tEntity stateEntity = transaction . get ( key ) ; \n\t\tEntity . Builder builder = Entity . builder ( stateEntity ) ; \n\t\t$F83 ( delNames ) for ( String varName : varNames ) { \n\t\t\t$F86403 ( delNames , varName ) builder = builder . remove ( varName ) ; \n\t\t\t} \n\t\tdatastore . update ( builder . build ( ) ) ; \n\t\t} \n\t$F1214 finally { \n\t\tif $F433289 ( transaction ) $F21746 ( transaction ) } \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\t$F20818 ( sb ) format ( $F106703 ( getYear ) , NUM00 , sb ) ; \n\t$F84 ( sb ) format ( $F106703 ( getMonth ) , NUM00 , sb ) ; \n\t$F84 ( sb ) format ( getDate ( ) , NUM00 , sb ) ; \n\t$F92 ( sb ) } \n"}, {"code": "$F1 public void close $F72 throws IOException { \n\tif ( mBufferCount > NUM00 ) { \n\t\ttry $F29756 ( mQueue , mBuffer , mBufferCount ) catch ( InterruptedException e ) $F14525 mBufferCount = NUM00 ; \n\t\t} \n\t$F59 ( mQueue ) try $F45915 ( mThread ) catch ( InterruptedException e ) $F14525 $F3229 ( super ) checkException ( ) ; \n\t} \n"}, {"code": "public static int parseStringAsInt ( String in ) throws IndexParseFieldException { \n\ttry $F75349 ( Integer , in ) catch ( NumberFormatException e ) { \n\t\tthrow new IndexParseFieldException ( in , e ) ; \n\t\t} \n\t} \n"}, {"code": "public void writeAll ( ResultSet rs , boolean includeColumnNames , boolean trim ) throws SQLException , IOException { \n\t$F72524 ( includeColumnNames , writeColumnNames , rs ) while $F1682 ( rs ) { \n\t\twriteNext ( resultService . getColumnValues ( rs , trim ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void testSpecialCase1 $F72 { \n\tbyte $F3009 = $F201340 ; \n\t$F88888 int aSign = - NUM00 ; \n\tint bSign = - NUM00 ; \n\tbyte $F3018 = { \n\t\t- NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F37344 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F7841 ( assertEquals , result ) } \n"}, {"code": "private static void verifyDevice ( IDevice d , long mac , Short vlan , Integer ip , long swId , int port ) { \n\tassertNotNull ( d ) ; \n\tassertEquals ( MacAddress . of ( mac ) , d . getMACAddress ( ) ) ; \n\tif ( vlan == null ) assertArrayEquals ( new VlanVid [ ] { \n\t\tVlanVid . ofVlan ( - NUM00 ) } \n\t, d . getVlanId ( ) ) ; \n\telse assertArrayEquals ( new VlanVid [ ] { \n\t\tVlanVid . ofVlan ( vlan ) } \n\t, d . getVlanId ( ) ) ; \n\tif ( ip == null ) assertArrayEquals ( new IPv4Address [ ] { \n\t\tIPv4Address . of ( NUM00 ) } \n\t, d . getIPv4Addresses ( ) ) ; \n\telse assertArrayEquals ( new IPv4Address [ ] { \n\t\tIPv4Address . of ( ip ) } \n\t, d . getIPv4Addresses ( ) ) ; \n\tSwitchPort expectedAp = new SwitchPort ( DatapathId . of ( swId ) , OFPort . of ( port ) ) ; \n\tassertArrayEquals ( new SwitchPort [ ] { \n\t\texpectedAp } \n\t, d . getAttachmentPoints ( ) ) ; \n\t} \n"}, {"code": "public ZoneRulesBuilder addWindow ( ZoneOffset standardOffset , LocalDateTime until , TimeDefinition untilDefinition ) { \n\t$F10578 ( Objects , standardOffset ) $F10578 ( Objects , until ) $F10578 ( Objects , untilDefinition ) TZWindow window = new TZWindow ( standardOffset , until , untilDefinition ) ; \n\tif $F3817 ( windowList ) { \n\t\tTZWindow $F7662 ( previous , windowList ) ; \n\t\twindow . validateWindowOrder ( previous ) ; \n\t\t} \n\twindowList . add ( window ) ; \n\treturn this ; \n\t} \n"}, {"code": "public Hashtable < IPoint , List $F80240 > intersections ( Iterator $F80240 it ) { \n\tCollection $F80240 c = new ArrayList $F80240 $F72 ; \n\t$F3536 ( it , c ) return intersections ( c . toArray ( new ILineSegment $F10277 ) ) ; \n\t} \n"}, {"code": "public boolean isTTFNativeFont $F72 { \n\treturn ttf ; \n\t} \n"}, {"code": "private void registerProviders $F72 { \n\tfinal DevMachine devMachine = appContext . getDevMachine ( ) ; \n\t$F2329 ( devMachine ) final Set < Macro > providers = getMacros ( devMachine ) ; \n\tcheckNotNull ( providers ) ; \n\t$F19233 ( providers ) providerRegistry . register ( providers ) ; \n\t} \n"}, {"code": "public LongMap ( int initialCapacity , float loadFactor ) { \n\t$F81428 ( initialCapacity ) if ( capacity > $F152871 ) $F11416 ( initialCapacity ) capacity = MathUtils . nextPowerOfTwo ( initialCapacity ) ; \n\t$F255788 ( loadFactor ) this . loadFactor = loadFactor ; \n\t$F53239 ( threshold , capacity , loadFactor ) mask = capacity - NUM00 ; \n\thashShift = NUM00 - Integer . numberOfTrailingZeros ( capacity ) ; \n\tstashCapacity = Math . max ( NUM00 , ( int ) Math . ceil ( Math . log ( capacity ) ) + NUM00 ) ; \n\tpushIterations = Math . max ( Math . min ( capacity , NUM00 ) , $F86010 ( Math , capacity ) / NUM00 ) ; \n\tkeyTable = new long [ capacity + stashCapacity ] ; \n\tvalueTable = ( $F25667 ) new Object [ keyTable . length ] ; \n\t} \n"}, {"code": "protected ASN1Set ( ASN1Encodable obj ) $F6659 ( set , obj ) "}, {"code": "protected void populateStreamBlob ( int testId , $F96 baseContent , int requiredSize ) throws SQLException { \n\tfinal $F96 testBytes = generateBlobContent ( baseContent , requiredSize ) ; \n\ttry ( FbDatabase db = createDatabaseConnection ( ) ) { \n\t\tlistener = new SimpleStatementListener $F72 ; \n\t\ttransaction = getTransaction ( db ) ; \n\t\ttry { \n\t\t\tstatement = db . createStatement ( transaction ) ; \n\t\t\tstatement . addStatementListener ( listener ) ; \n\t\t\tfinal BlobParameterBuffer blobParameterBuffer = db . createBlobParameterBuffer ( ) ; \n\t\t\tblobParameterBuffer . addArgument ( BlobParameterBuffer . TYPE , BlobParameterBuffer . TYPE_STREAM ) ; \n\t\t\tfinal FbBlob blob = db . createBlobForOutput ( transaction , blobParameterBuffer ) ; \n\t\t\t$F5837 ( blob ) int bytesWritten = NUM00 ; \n\t\t\twhile ( bytesWritten < testBytes . length ) { \n\t\t\t\t$F96 buffer = new byte [ Math . min ( blob . getMaximumSegmentSize ( ) , testBytes . length - bytesWritten ) ] ; \n\t\t\t\t$F198866 ( System , testBytes , bytesWritten , buffer ) blob . putSegment ( buffer ) ; \n\t\t\t\tbytesWritten += buffer . length ; \n\t\t\t\t} \n\t\t\t$F59 ( blob ) statement . prepare ( INSERT_BLOB_TABLE ) ; \n\t\t\tfinal DatatypeCoder datatypeCoder = db . getDatatypeCoder ( ) ; \n\t\t\tFieldValue param1 = new FieldValue ( datatypeCoder . encodeInt ( testId ) ) ; \n\t\t\tFieldValue param2 = new FieldValue ( datatypeCoder . encodeLong ( blob . getBlobId ( ) ) ) ; \n\t\t\tstatement . execute ( RowValue . of ( param1 , param2 ) ) ; \n\t\t\t$F59 ( statement ) } \n\t\tfinally $F19092 ( transaction ) } \n\t} \n"}, {"code": "private static long signFromBit_antiCyclic ( final double value ) { \n\treturn Double . doubleToRawLongBits ( value ) > > NUM00 | NUM00 ; \n\t} \n"}, {"code": "public void addNearKey ( KeyCacheObject key , GridCacheSharedContext ctx ) throws IgniteCheckedException $F207 ( nearKeys , key ) "}, {"code": "private void analyzeClassFields ( String className , int action ) { \n\ttry { \n\t\t$F96883 ( dynamicClass , Class , className ) $F16273 ( fields , dynamicClass ) for ( Field field : fields ) { \n\t\t\tif ( isPrivateAndNonPrimitive ( field ) ) { \n\t\t\t\toneToAnyConditions ( className , field , action ) ; \n\t\t\t\tmanyToAnyConditions ( className , field , action ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( ClassNotFoundException ex ) { \n\t\t$F301 ( ex ) throw new DatabaseGenerateException ( DatabaseGenerateException . CLASS_NOT_FOUND + className ) ; \n\t\t} \n\t} \n"}, {"code": "protected boolean isLevelEnabled ( int logLevel ) { \n\treturn ( logLevel >= currentLogLevel ) ; \n\t} \n"}, {"code": "public static void loadAll ( final JFrame parent , final IDebugger debugger , final IAddress offset , final int size ) { \n\tcheckArguments ( parent , debugger , offset ) ; \n\tfinal CDumpAllWaiter waiter = new CDumpAllWaiter ( debugger , offset , size ) ; \n\tCProgressDialog . showEndless ( parent , NUM00 + NUM00 , waiter ) ; \n\tif ( waiter . getException ( ) != null ) { \n\t\tCUtilityFunctions . logException ( waiter . getException ( ) ) ; \n\t\t$F21899 ( innerMessage ) final String innerDescription = CUtilityFunctions . createDescription ( String . format ( NUM00 , offset . toHexString ( ) ) , $F21904 , $F21904 ) ; \n\t\tNaviErrorDialog . show ( parent , innerMessage , innerDescription , waiter . getException ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean deleteDirectory ( String directory , boolean useOSNativeDelete ) throws IOException { \n\tboolean result = _BOOL ; \n\tif ( ! useOSNativeDelete ) { \n\t\t$F1705 ( dir , directory ) for ( $F3445 ( file , dir ) ) { \n\t\t\tif $F220007 ( file ) { \n\t\t\t\tlog . debug ( $F20534 ( file ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tlog . debug ( $F20534 ( file ) ) ; \n\t\t\t\t$F60829 ( file ) } \n\t\t\tfile = null ; \n\t\t\t} \n\t\tif $F220007 ( dir ) { \n\t\t\t$F980 ( log ) result = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\t$F980 ( log ) $F60829 ( dir ) } \n\t\tdir = null ; \n\t\t} \n\telse { \n\t\tProcess p = null ; \n\t\tThread std = null ; \n\t\ttry { \n\t\t\t$F43316 ( runTime , Runtime ) $F980 ( log ) if ( File . separatorChar == NUM00 ) { \n\t\t\t\tp = runTime . exec ( $F139654 ( directory ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tp = runTime . exec ( NUM00 + $F79251 ( directory , File ) ) ; \n\t\t\t\t} \n\t\t\tstd = stdOut ( p ) ; \n\t\t\twhile $F44356 ( std ) { \n\t\t\t\t$F79821 ( Thread ) } \n\t\t\t$F980 ( log ) result = _BOOL ; \n\t\t\t} \n\t\t$F9877 ( log , e ) finally { \n\t\t\tif ( null != p ) { \n\t\t\t\t$F980 ( log ) $F17623 ( p ) p = null ; \n\t\t\t\t} \n\t\t\tstd = null ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public void testSetAttributeNodeNS1 $F72 throws Throwable { \n\tDocument doc ; \n\tElement element ; \n\tAttr attribute1 ; \n\tAttr attribute2 ; \n\tAttr attrNode ; \n\tString attrName ; \n\tString attrNS ; \n\tNamedNodeMap attributes ; \n\tint length ; \n\t$F236 ( doc , load , builder ) $F94892 ( element , doc ) $F89256 ( attribute1 , doc ) $F89256 ( attribute2 , doc ) $F187587 ( attribute2 ) element . setAttributeNodeNS ( attribute1 ) ; \n\telement . setAttributeNodeNS ( attribute2 ) ; \n\t$F296256 ( attrNode , element ) $F89257 ( attrName , attrNode ) $F89259 ( attrNS , attrNode ) assertEquals ( NUM00 , NUM00 , attrName ) ; \n\tassertEquals ( NUM00 , NUM00 , attrNS ) ; \n\t$F35323 ( attributes , element ) $F59131 ( length , attributes ) ; \n\tassertEquals ( NUM00 , NUM00 , length ) ; \n\t} \n"}, {"code": "$F38752 ( _BOOL ) "}, {"code": "public static String findEditTable ( String tables ) { \n\tif $F20899 ( StringUtils , tables ) { \n\t\t$F1384 ( spacepos , tables ) $F1384 ( commapos , tables ) if $F35297 ( spacepos , commapos ) $F35299 ( tables , spacepos ) else if $F35297 ( commapos , spacepos ) $F35299 ( tables , commapos ) return tables ; \n\t\t} \n\telse $F4639 } \n"}, {"code": "public void writeOperationsCarFile $F72 { \n\tmakeBackupFile ( defaultOperationsFilename ( ) ) ; \n\ttry { \n\t\tif ( ! checkFile ( defaultOperationsFilename ( ) ) ) { \n\t\t\t$F70659 file = new $F70659 ( defaultOperationsFilename ( ) ) ; \n\t\t\t$F70659 parentDir = file . getParentFile ( ) ; \n\t\t\tif $F1906 ( parentDir ) { \n\t\t\t\tif $F70667 ( parentDir ) $F21338 ( log ) } \n\t\t\tif ( file . createNewFile ( ) ) $F981 ( log ) } \n\t\twriteFile ( defaultOperationsFilename ( ) ) ; \n\t\t} \n\t$F70676 ( log , e ) } \n"}, {"code": "$F156045 ( msg , x , super , this ) "}, {"code": "private boolean hasNewFollowers ( List < Follower > followers ) { \n\treturn $F1030 ( followers ) && followers . get ( NUM00 ) . newFollower ; \n\t} \n"}, {"code": "private void onTrackPointElementStart ( Attributes attributes ) throws SAXException { \n\t$F62203 ( latitude , attributes , ATT_LAT ) $F62203 ( longitude , attributes , ATT_LON ) if ( latitude == null || longitude == null ) { \n\t\tthrow new SAXException ( createErrorMessage ( NUM00 ) ) ; \n\t\t} \n\ttry { \n\t\tlatitudeValue = Double . parseDouble ( latitude ) ; \n\t\tlongitudeValue = Double . parseDouble ( longitude ) ; \n\t\t} \n\tcatch ( NumberFormatException e ) { \n\t\tthrow new SAXException ( createErrorMessage ( NUM00 + latitude + NUM00 + longitude ) , e ) ; \n\t\t} \n\t} \n"}, {"code": "protected final void firePropertyChange ( PropertyChangeEvent evt ) { \n\tpcs . firePropertyChange ( evt ) ; \n\t} \n"}, {"code": "$F61920 ( desc , start , canBeVoid , index , checkDesc , _BOOL , checkInternalName ) "}, {"code": "public static void sortFields ( FieldBinding [ ] sortedFields , int left , int right ) { \n\tArrays . sort ( sortedFields , left , right , FIELD_COMPARATOR ) ; \n\t} \n"}, {"code": "private void drawBackground ( final Graphics g ) { \n\tg . setColor ( m_bgColorOffset ) ; \n\tg . fillRect ( - m_firstColumn * m_charWidth , NUM00 , m_offsetViewWidth , getHeight ( ) ) ; \n\t} \n"}, {"code": "public void addUniqueAttribute $F2236 ( elementName , attrName ) { \n\tif $F57241 ( elementName , attrName ) $F1717 ( _uniqueElementAttrMap , elementName , attrName ) } \n"}, {"code": "private static DeleteVmResponse checkDeleteVmResponse ( DeleteVmResponse deleteVmResponse ) throws RpcException { \n\t$F10635 ( logger , deleteVmResponse ) switch $F52729 ( deleteVmResponse ) { \n\t\tcase OK : $F597 $F52738 ( SYSTEM_ERROR , deleteVmResponse ) case VM_NOT_FOUND : throw new VmNotFoundException $F52730 ( deleteVmResponse ) ; \n\t\tcase VM_NOT_POWERED_OFF : throw new VmNotPoweredOffException $F52730 ( deleteVmResponse ) ; \n\t\t$F52745 ( String , deleteVmResponse ) } \n\treturn deleteVmResponse ; \n\t} \n"}, {"code": "public void runTest $F72 throws Throwable { \n\tDocument doc ; \n\tNodeList elementList ; \n\tNode nameNode ; \n\tCharacterData child ; \n\t$F236 ( doc , load , _BOOL ) $F237 ( elementList , doc ) $F238 ( nameNode , elementList ) $F241 ( child , nameNode ) { \n\t\tboolean success = _BOOL ; \n\t\ttry { \n\t\t\t$F4054 ( child ) } \n\t\t$F250 ( success , ex , DOMException ) assertTrue ( NUM00 , success ) ; \n\t\t} \n\t} \n"}, {"code": "public void limitTransAndScale ( Matrix matrix , RectF content ) { \n\t$F12457 ( vals ) matrix . getValues ( vals ) ; \n\t$F5797 ( curTransX , vals , Matrix ) float curScaleX = vals [ Matrix . MSCALE_X ] ; \n\tfloat curTransY = vals [ Matrix . MTRANS_Y ] ; \n\tfloat curScaleY = vals [ Matrix . MSCALE_Y ] ; \n\tmScaleX = Math . max ( mMinScaleX , curScaleX ) ; \n\tmScaleY = Math . max ( mMinScaleY , curScaleY ) ; \n\tfloat width = NUM00 ; \n\tfloat height = NUM00 ; \n\tif ( content != null ) { \n\t\t$F54171 ( width , content ) $F54171 ( height , content ) } \n\tfloat maxTransX = - width * ( mScaleX - NUM00 ) ; \n\tfloat newTransX = Math . min ( Math . max ( curTransX , maxTransX - mTransOffsetX ) , mTransOffsetX ) ; \n\tfloat maxTransY = height * ( mScaleY - NUM00 ) ; \n\tfloat newTransY = Math . max ( Math . min ( curTransY , maxTransY + mTransOffsetY ) , - mTransOffsetY ) ; \n\tvals [ Matrix . MTRANS_X ] = newTransX ; \n\tvals [ Matrix . MSCALE_X ] = mScaleX ; \n\tvals [ Matrix . MTRANS_Y ] = newTransY ; \n\tvals [ Matrix . MSCALE_Y ] = mScaleY ; \n\tmatrix . setValues ( vals ) ; \n\t} \n"}, {"code": "public BlazeValueFactory valueFactory $F72 { \n\treturn vf ; \n\t} \n"}, {"code": "public StatefulRefreshToken ( JsonValue token ) throws InvalidGrantException { \n\tsuper ( token ) ; \n\tif ( $F87355 ( OAUTH_REFRESH_TOKEN , getTokenName ) ) { \n\t\tthrow new InvalidGrantException ( NUM00 + getTokenId ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void putStyle ( String styleId , StyleSelector styleSelector ) { \n\ttry { \n\t\t$F27213 ( id , Integer , styleId ) $F19410 ( mMaxStyleId , Math , id ) } \n\t$F32668 mStyles . put ( styleId , styleSelector ) ; \n\t} \n"}, {"code": "private static String extractClientName ( String clientId , String host ) { \n\tString hostExcludedId = NUM00 ; \n\tif ( $F41536 ( isIPv6 , host , isIPv4 ) && clientId . startsWith ( host ) ) { \n\t\t$F94062 ( hostExcludedId , clientId , host ) } \n\telse { \n\t\t$F1384 ( firstDotIndex , host ) if ( firstDotIndex != - NUM00 ) { \n\t\t\t$F11991 ( hostShortName , host , firstDotIndex ) $F94062 ( hostExcludedId , clientId , hostShortName ) } \n\t\t} \n\tString vmPIDAndKindRegex = NUM00 ; \n\tString regex = NUM00 ; \n\tString name = NOT_AVAILABLE ; \n\tString temp = hostExcludedId ; \n\t$F1384 ( openIndex , temp ) if ( openIndex != - NUM00 ) { \n\t\tregex = vmPIDAndKindRegex + regex ; \n\t\t} \n\tif $F44202 ( temp , regex ) { \n\t\t$F6542 ( splitted , temp ) $F79270 ( name , splitted ) ; \n\t\t} \n\treturn name ; \n\t} \n"}, {"code": "public static $F4203 FastFuture $F4203 fromCompletableFuture ( final $F124768 cf ) { \n\tfinal FastFuture $F4203 f = new FastFuture $F200 $F72 ; \n\tcf . thenAccept ( null ) ; \n\tcf . exceptionally ( null ) ; \n\treturn f ; \n\t} \n"}, {"code": "public static boolean isPlaceAction ( InventoryAction action ) { \n\tswitch ( action ) { \n\t\tcase SWAP_WITH_CURSOR : case PLACE_ONE : case PLACE_ALL : case PLACE_SOME : return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void refreshMarkers $F72 { \n\tremoveAll ( ) ; \n\t$F28017 ( markerMap ) List notices = textArea . getParserNotices ( ) ; \n\tfor ( $F2774 ( i , notices ) ) { \n\t\tParserNotice notice = ( ParserNotice ) i . next ( ) ; \n\t\tif ( notice . getLevel ( ) <= levelThreshold || ( notice instanceof TaskNotice ) ) { \n\t\t\tInteger key = new Integer ( notice . getLine ( ) ) ; \n\t\t\tMarker m = ( Marker ) markerMap . get ( key ) ; \n\t\t\tif ( m == null ) { \n\t\t\t\tm = new Marker ( notice ) ; \n\t\t\t\tm . addMouseListener ( listener ) ; \n\t\t\t\tmarkerMap . put ( key , m ) ; \n\t\t\t\tadd ( m ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tm . addNotice ( notice ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( getShowMarkedOccurrences ( ) && textArea . getMarkOccurrences ( ) ) { \n\t\tList occurrences = textArea . getMarkedOccurrences ( ) ; \n\t\tfor ( $F2774 ( i , occurrences ) ) { \n\t\t\tDocumentRange range = ( DocumentRange ) i . next ( ) ; \n\t\t\tint line = NUM00 ; \n\t\t\ttry { \n\t\t\t\tline = textArea . getLineOfOffset ( range . getStartOffset ( ) ) ; \n\t\t\t\t} \n\t\t\tcatch ( BadLocationException ble ) $F1448 ParserNotice notice = new MarkedOccurrenceNotice ( range ) ; \n\t\t\t$F16747 ( key , line ) Marker m = ( Marker ) markerMap . get ( key ) ; \n\t\t\tif ( m == null ) { \n\t\t\t\tm = new Marker ( notice ) ; \n\t\t\t\tm . addMouseListener ( listener ) ; \n\t\t\t\tmarkerMap . put ( key , m ) ; \n\t\t\t\tadd ( m ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( ! m . containsMarkedOccurence ( ) ) { \n\t\t\t\t\tm . addNotice ( notice ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\trevalidate ( ) ; \n\trepaint ( ) ; \n\t} \n"}, {"code": "$F183298 ( view , cache ) "}, {"code": "public static $F96 readInputStream ( InputStream i ) throws IOException $F42436 ( b , copy , i ) "}, {"code": "public void playMedia ( boolean showPlayerWindow ) { \n\tString filename = stopAndPrepareFilename ( ) ; \n\tif $F4012 ( filename ) { \n\t\tMPlayerMediator mplayerMediator = MPlayerMediator . instance ( ) ; \n\t\tif ( mplayerMediator != null ) $F25910 ( mplayerMediator , showPlayerWindow ) mplayer . open ( filename , getAdjustedVolume ( ) ) ; \n\t\t} \n\tnotifyState ( getState ( ) ) ; \n\t} \n"}, {"code": "public static String toUTF8String ( String s ) { \n\treturn new String ( s . getBytes ( ) , Charset . forName ( PanboxConstants . STANDARD_CHARSET ) ) ; \n\t} \n"}, {"code": "public static int encodeCacheFlags ( Collection < GridClientCacheFlag > flagSet ) { \n\tint bits = NUM00 ; \n\tif ( flagSet . contains ( GridClientCacheFlag . SKIP_STORE ) ) bits |= NUM00 ; \n\treturn bits ; \n\t} \n"}, {"code": "public void add ( DataSource source , boolean visible ) { \n\tadd ( data . size ( ) , source , visible ) ; \n\t} \n"}, {"code": "$F1 public void addValue ( double value , double weight ) { \n\tm_WeightedSum += value * weight ; \n\tm_WeightedSumSquared += value * value * weight ; \n\tm_SumOfWeights += weight ; \n\tif $F4257 ( m_TM , value ) $F1717 ( m_TM , value , weight ) else { \n\t\tm_TM . put ( value , m_TM . get ( value ) + weight ) ; \n\t\t} \n\t} \n"}, {"code": "private JPanel buildRow ( final String string , final JCheckBox checkBox ) { \n\t$F40881 ( panel ) panel . add ( new JLabel ( string ) , BorderLayout . WEST ) ; \n\t$F40903 ( panel , checkBox , BorderLayout ) checkBox . addItemListener ( m_checkBoxListener ) ; \n\treturn panel ; \n\t} \n"}, {"code": "private static synchronized String formatAndParse ( SimpleDateFormat formatDate , SimpleDateFormat parseDate , String text ) { \n\ttry { \n\t\t$F126579 ( date , parseDate , text ) $F94422 ( result , formatDate , date ) return result ; \n\t\t} \n\tcatch ( ParseException e ) $F37856 ( logger , text ) $F1278 } \n"}, {"code": "public static boolean isChildGroup ( String group ) { \n\t$F36741 ( group , GROUP_DELIMITER ) } \n"}, {"code": "private void throwArrayIndexOutOfBoundsException ( int itemIndex ) { \n\tthrow new ArrayIndexOutOfBoundsException ( NUM00 + NUM00 + spaceItems . size ( ) + NUM00 + itemIndex ) ; \n\t} \n"}, {"code": "private LocusInfo createNextUncoveredLocusInfo ( final Locus stopBeforeLocus ) { \n\twhile ( lastReferenceSequence <= stopBeforeLocus . getSequenceIndex ( ) && lastReferenceSequence <= referenceSequenceMask . getMaxSequenceIndex ( ) ) { \n\t\tif ( lastReferenceSequence == stopBeforeLocus . getSequenceIndex ( ) && lastPosition + NUM00 >= stopBeforeLocus . getPosition ( ) ) $F1337 final int nextbit = referenceSequenceMask . nextPosition ( lastReferenceSequence , lastPosition ) ; \n\t\tif ( nextbit == - NUM00 ) { \n\t\t\tif ( lastReferenceSequence == stopBeforeLocus . getSequenceIndex ( ) ) { \n\t\t\t\tlastPosition = stopBeforeLocus . getPosition ( ) ; \n\t\t\t\t$F1274 } \n\t\t\tlastReferenceSequence ++ ; \n\t\t\tlastPosition = NUM00 ; \n\t\t\t} \n\t\telse if ( lastReferenceSequence < stopBeforeLocus . getSequenceIndex ( ) || nextbit < stopBeforeLocus . getPosition ( ) ) { \n\t\t\tlastPosition = nextbit ; \n\t\t\treturn new LocusInfo ( getReferenceSequence ( lastReferenceSequence ) , lastPosition ) ; \n\t\t\t} \n\t\telse if ( nextbit >= stopBeforeLocus . getPosition ( ) ) $F1337 } \n\t$F1274 } \n"}, {"code": "public void globalConfigChanged ( String serviceName , String version , String groupName , String serviceComponent , int changeType ) $F845 "}, {"code": "public static void launchEmailIntent ( final Activity activity , String addr , String text ) { \n\tLog . i ( LOG_TAG , NUM00 + activity . getLocalClassName ( ) ) ; \n\tIntent emailIntent = new Intent ( Intent . ACTION_SEND ) ; \n\temailIntent . putExtra ( Intent . EXTRA_EMAIL , $F8640 ( addr ) ) ; \n\t$F146148 ( emailIntent ) $F45547 ( emailpackageManager , activity ) $F45549 emailresolveInfos = emailpackageManager . queryIntentActivities ( emailIntent , NUM00 ) ; \n\tif $F3817 ( emailresolveInfos ) { \n\t\tactivity . startActivity ( emailIntent ) ; \n\t\t} \n\t} \n"}, {"code": "public int count $F72 { \n\treturn n ; \n\t} \n"}, {"code": "public void add ( int position , T item ) $F94473 ( mData , position , item , notifyItemInserted ) "}, {"code": "public void addTranslator ( ClassPool cp , Translator t ) throws NotFoundException , CannotCompileException { \n\tsource = cp ; \n\ttranslator = t ; \n\tt . start ( cp ) ; \n\t} \n"}, {"code": "private void onMainContentScrolled ( int currentY , int deltaY ) { \n\tif ( deltaY > mActionBarAutoHideSensivity ) { \n\t\tdeltaY = mActionBarAutoHideSensivity ; \n\t\t} \n\telse if ( deltaY < - mActionBarAutoHideSensivity ) { \n\t\tdeltaY = - mActionBarAutoHideSensivity ; \n\t\t} \n\tif ( Math . signum ( deltaY ) * Math . signum ( mActionBarAutoHideSignal ) < NUM00 ) { \n\t\tmActionBarAutoHideSignal = deltaY ; \n\t\t} \n\telse { \n\t\tmActionBarAutoHideSignal += deltaY ; \n\t\t} \n\tboolean shouldShow = currentY < mActionBarAutoHideMinY || ( mActionBarAutoHideSignal <= - mActionBarAutoHideSensivity ) ; \n\tautoShowOrHideActionBar ( shouldShow ) ; \n\t} \n"}, {"code": "public void writeLEChars ( String s ) throws IOException { \n\t$F115 ( length , s ) for ( $F119 ( i , length ) ) { \n\t\t$F8205 ( c , s , i ) $F88315 ( out , c ) $F88317 ( out , c ) } \n\twritten += length * NUM00 ; \n\t} \n"}, {"code": "public static String readLine $F72 { \n\tString line ; \n\ttry { \n\t\tline = scanner . nextLine ( ) ; \n\t\t} \n\tcatch ( NoSuchElementException e ) { \n\t\tline = null ; \n\t\t} \n\treturn line ; \n\t} \n"}, {"code": "$F1309 public boolean isValid ( String regex ) { \n\t$F1933 ( regex , _BOOL ) $F55449 ( pattern , Pattern , regex ) Matcher matcher = pattern . matcher ( getText ( ) ) ; \n\t$F36689 ( matcher ) } \n"}, {"code": "public void writeToFile ( String filename ) { \n\tGridUtils . writeSpatialGridTable ( this , filename ) ; \n\t} \n"}, {"code": "public void addFooterView $F123554 ( v , data , isSelectable ) { \n\t$F123559 ( info ) info . view = v ; \n\tinfo . data = data ; \n\tinfo . isSelectable = isSelectable ; \n\tmFooterViewInfos . add ( info ) ; \n\tif ( mAdapter != null && mDataSetObserver != null ) { \n\t\tmDataSetObserver . onChanged ( ) ; \n\t\t} \n\t} \n"}, {"code": "public void addCloseHook ( CloseHook hook ) $F23232 ( closeHooks , hook ) "}, {"code": "public void rejectedExecution ( Runnable r , ThreadPoolExecutor e ) { \n\tif $F210917 ( e ) $F21688 ( r ) } \n"}, {"code": "private void updateRange ( double x , double y ) { \n\t$F16700 ( mMinX , Math , x ) $F19410 ( mMaxX , Math , x ) $F16700 ( mMinY , Math , y ) $F19410 ( mMaxY , Math , y ) } \n"}, {"code": "$F146919 ( s , length , _BOOL , sum , i , digit , FormatException ) "}, {"code": "public void readConfig ( String filename ) throws FileNotFoundException { \n\tif $F3581 ( filename ) $F665 readConfig ( new FileReader ( filename ) ) ; \n\t} \n"}, {"code": "private void applyTradingBonus ( Player player ) { \n\tplayer . incrementTradescore ( ) ; \n\t} \n"}, {"code": "public static String slurpURLNoExceptions ( URL u ) { \n\ttry $F4915 ( slurpURL , u ) $F84580 ( e ) } \n"}, {"code": "private static void createCombinedTrace ( final TraceList newTrace , final List < TraceList > traces , $F99304 ( addresses ) ) { \n\tfinal $F99303 visitedAddresses = new LinkedHashSet < BreakpointAddress > $F72 ; \n\tfor ( final TraceList trace : traces ) { \n\t\tfor ( final ITraceEvent event : trace ) { \n\t\t\tfinal BreakpointAddress address = event . getOffset ( ) ; \n\t\t\t$F36398 ( addresses , address ) $F36399 ( visitedAddresses , address ) visitedAddresses . add ( address ) ; \n\t\t\tnewTrace . addEvent ( event ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void interruptAll $F72 { \n\tsynchronized ( knownActorTasks ) { \n\t\tfor ( $F8318 ft : knownActorTasks ) $F11437 ( ft , _BOOL ) threadGuard . interruptAll ( ) ; \n\t\t} \n\t} \n"}, {"code": "$F1431 public void registerDefaultDeviceTypes $F72 { \n\tfinal $F12078 devicesList = DefaultPlatform . getDeviceServiceMap ( ) ; \n\tfor ( HashMap . Entry $F2538 entry : devicesList . entrySet ( ) ) { \n\t\t$F3477 ( key , entry ) $F840 ( value , entry ) try { \n\t\t\tregisterDeviceService ( ( Class < DeviceService > ) Class . forName ( key ) , ( Class < DiscoveryProvider > ) Class . forName ( value ) ) ; \n\t\t\t} \n\t\tcatch ( ClassNotFoundException e ) $F302 ( e ) } \n\t} \n"}, {"code": "private static void removeDependencySubsets ( String swcLocation , $F24190 ( dependencyMap ) , SwcDependencyInfoImpl depInfo ) { \n\t$F2695 ( removeSet ) SwcExternalScriptInfo externalInfo = depInfo . getSwcExternalScriptInfo ( swcLocation ) ; \n\t$F10651 $F122365 ( externalsBySwc ) ; \n\tfor ( String swcDependLocation : dependencyMap . get ( swcLocation ) ) { \n\t\tfor ( String swcDependLocation2 : dependencyMap . get ( swcLocation ) ) { \n\t\t\tif $F1238 ( swcDependLocation , swcDependLocation2 ) $F598 $F48768 ( externalScripts , externalsBySwc , swcDependLocation ) $F48768 ( externalScripts2 , externalsBySwc , swcDependLocation2 ) if ( externalScripts == null ) { \n\t\t\t\texternalScripts = externalInfo . getExternalScripts ( swcDependLocation ) ; \n\t\t\t\texternalsBySwc . put ( swcDependLocation , externalScripts ) ; \n\t\t\t\t} \n\t\t\tif ( externalScripts2 == null ) { \n\t\t\t\texternalScripts2 = externalInfo . getExternalScripts ( swcDependLocation2 ) ; \n\t\t\t\texternalsBySwc . put ( swcDependLocation2 , externalScripts2 ) ; \n\t\t\t\t} \n\t\t\tif ( externalScripts2 . size ( ) > externalScripts . size ( ) && externalScripts2 . containsAll ( externalScripts ) ) $F97801 ( removeSet , swcDependLocation ) } \n\t\t} \n\t$F48768 ( dependencySet , dependencyMap , swcLocation ) dependencySet . removeAll ( removeSet ) ; \n\t} \n"}, {"code": "private void drawTicks ( Canvas canvas , double min , double max , double minAngle , double maxAngle , int centerX , int centerY , double longRadius , double shortRadius , double ticks , Paint paint , boolean labels ) { \n\tfor ( double i = min ; \n\ti <= max ; \n\ti += ticks ) { \n\t\tdouble angle = getAngleForValue ( i , minAngle , maxAngle , min , max ) ; \n\t\t$F33859 ( sinValue , Math , angle ) $F54226 ( cosValue , Math , angle ) $F175108 ( x1 , Math , centerX , shortRadius , sinValue ) $F175108 ( y1 , Math , centerY , shortRadius , cosValue ) $F175108 ( x2 , Math , centerX , longRadius , sinValue ) $F175108 ( y2 , Math , centerY , longRadius , cosValue ) canvas . drawLine ( x1 , y1 , x2 , y2 , paint ) ; \n\t\tif ( labels ) { \n\t\t\t$F175116 ( paint , Align ) if ( x1 <= x2 ) { \n\t\t\t\tpaint . setTextAlign ( Align . RIGHT ) ; \n\t\t\t\t} \n\t\t\tString text = i + NUM00 ; \n\t\t\tif ( Math . round ( i ) == ( long ) i ) { \n\t\t\t\ttext = ( long ) i + NUM00 ; \n\t\t\t\t} \n\t\t\tcanvas . drawText ( text , x1 , y1 , paint ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F30789 ( d , imageView , getImageView , viewWidth , viewHeight , drawableWidth , drawableHeight , mBaseMatrix , widthScale , heightScale , mScaleType , ScaleType , scale , Math , mTempSrc , mTempDst , FIT_CENTER , ScaleToFit , FIT_START , FIT_END , FIT_XY , resetMatrix ) "}, {"code": "public static < T , K , L extends $F5675 > BiFunction < Partition < T , K , L > , T , Boolean > alwaysInsert $F72 $F1337 "}, {"code": "public void testFindSpringOpenLdap $F72 { \n\tLdapProxy proxy = getLdapOpenLdap ( ) ; \n\tList result = null ; \n\ttry { \n\t\tresult = proxy . find ( getLdapSearchVO ( NUM00 , LdapConstants . NO_SEARCH_LIMIT , null , null , null , LdapScopeConstants . SCOPE_SUBTREE ) ) ; \n\t\t} \n\t$F3957 assertNotNull ( result ) ; \n\t$F70108 ( assertEquals , result ) } \n"}, {"code": "public void testConstructorStringRadix8 $F72 { \n\tString value = NUM00 ; \n\tint radix = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , value , radix ) $F3030 ( rBytes ) $F3031 ( resBytes , aNumber ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , aNumber ) } \n"}, {"code": "private static boolean inEncoding ( char ch , String encoding ) { \n\tboolean isInEncoding ; \n\ttry { \n\t\tchar cArray [ ] = $F11574 ; \n\t\tcArray [ NUM00 ] = ch ; \n\t\t$F605 ( s , cArray ) $F45669 ( bArray , s , encoding ) isInEncoding = inEncoding ( ch , bArray ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tisInEncoding = _BOOL ; \n\t\tif ( encoding == null ) isInEncoding = _BOOL ; \n\t\t} \n\treturn isInEncoding ; \n\t} \n"}, {"code": "public void delete ( SSOToken token , String dn ) throws $F16995 { \n\tfor ( String entry : subEntries ( token , dn , NUM00 , NUM00 , _BOOL , _BOOL ) ) { \n\t\tdebug . message ( NUM00 , entry ) ; \n\t\tdelete ( token , getNamingAttribute ( ) + NUM00 + entry + NUM00 + dn ) ; \n\t\t} \n\tfor ( String subOrg : searchSubOrgNames ( token , dn , NUM00 , NUM00 , _BOOL , _BOOL , _BOOL ) ) { \n\t\tdebug . message ( NUM00 , subOrg ) ; \n\t\tdelete ( token , subOrg ) ; \n\t\t} \n\tdelete ( token . getPrincipal ( ) , dn ) ; \n\tobjectChanged ( dn , DELETE ) ; \n\t} \n"}, {"code": "private void removeHighlights $F72 { \n\tif ( textArea != null ) { \n\t\tRSyntaxTextAreaHighlighter h = ( RSyntaxTextAreaHighlighter ) textArea . getHighlighter ( ) ; \n\t\tfor ( $F2277 ( i , tags ) ) { \n\t\t\th . removeMarkOccurrencesHighlight ( tags . get ( i ) ) ; \n\t\t\t} \n\t\t} \n\t$F725 ( tags ) } \n"}, {"code": "private static < T extends AbstractBlockBase $F4203 > void enqueueSuccessors ( T block , PriorityQueue $F4203 worklist , BitSet visitedBlocks ) { \n\tfor ( T successor : block . getSuccessors ( ) ) { \n\t\tif ( ! $F82336 ( visitedBlocks , successor ) ) { \n\t\t\tvisitedBlocks . set ( successor . getId ( ) ) ; \n\t\t\tworklist . add ( successor ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void addCommonComponent ( XMLComponent component ) $F42353 ( fCommonComponents , component , addRecognizedParamsAndSetDefaults ) "}, {"code": "public void addRole ( String role ) $F17651 ( role , roles ) "}, {"code": "public CModulesCheckBoxPanel ( final CModulesTableModel modulesTableModel ) { \n\t$F9898 ( super ) final JCheckBox checkBox = new JCheckBox $F580 ; \n\tcheckBox . addItemListener ( new InternalCheckboxListener $F72 ) ; \n\tadd ( checkBox ) ; \n\tm_modulesTableModel = modulesTableModel ; \n\t} \n"}, {"code": "public QDate $F72 { \n\tthis ( _gmtTimeZone ) ; \n\t} \n"}, {"code": "protected void responseSent ( StreamResponseMessage responseMessage ) { \n\tif ( syncProtocol != null ) syncProtocol . responseSent ( responseMessage ) ; \n\t} \n"}, {"code": "public final void append ( FastStringBuffer value ) { \n\t$F8249 ( value ) $F1749 ( strlen , value ) $F163790 ( strlen ) int copyfrom = NUM00 ; \n\t$F16051 ( chunk , m_array , m_lastChunk ) int available = m_chunkSize - m_firstFree ; \n\twhile ( strlen > NUM00 ) { \n\t\t$F46170 ( available , strlen ) int sourcechunk = ( copyfrom + value . m_chunkSize - NUM00 ) > > > value . m_chunkBits ; \n\t\tint sourcecolumn = copyfrom & value . m_chunkMask ; \n\t\tint runlength = value . m_chunkSize - sourcecolumn ; \n\t\t$F46170 ( runlength , available ) System . arraycopy ( value . m_array [ sourcechunk ] , sourcecolumn , m_array [ m_lastChunk ] , m_firstFree , runlength ) ; \n\t\tif ( runlength != available ) System . arraycopy ( value . m_array [ sourcechunk + NUM00 ] , NUM00 , m_array [ m_lastChunk ] , m_firstFree + runlength , available - runlength ) ; \n\t\tstrlen -= available ; \n\t\tcopyfrom += available ; \n\t\t$F163794 ( strlen , i , m_array , m_lastChunk , newarray , System , chunk , m_rebundleBits , m_chunkBits , m_maxChunkBits , m_innerFSB , this , m_chunkSize , available , m_firstFree ) } \n\tm_firstFree += available ; \n\t} \n"}, {"code": "protected Tuple < BlobStoreIndexShardSnapshots , Integer > buildBlobStoreIndexShardSnapshots ( Map < String , BlobMetaData > blobs ) { \n\tint latest = - NUM00 ; \n\tfor ( $F3465 ( name , blobs ) ) { \n\t\tif $F7311 ( name , SNAPSHOT_INDEX_PREFIX ) { \n\t\t\ttry { \n\t\t\t\tint gen = Integer . parseInt ( $F8182 ( name , SNAPSHOT_INDEX_PREFIX ) ) ; \n\t\t\t\t$F12283 ( gen , latest ) } \n\t\t\tcatch ( NumberFormatException ex ) $F23016 ( logger , name ) } \n\t\t} \n\tif ( latest >= NUM00 ) { \n\t\ttry { \n\t\t\treturn new Tuple $F200 ( indexShardSnapshotsFormat . read ( blobContainer , Integer . toString ( latest ) ) , latest ) ; \n\t\t\t} \n\t\tcatch ( IOException e ) { \n\t\t\tlogger . warn ( NUM00 , e , SNAPSHOT_INDEX_PREFIX + latest ) ; \n\t\t\t} \n\t\t} \n\tList < SnapshotFiles > $F204 ( snapshots ) ; \n\tfor ( $F3465 ( name , blobs ) ) { \n\t\ttry { \n\t\t\tBlobStoreIndexShardSnapshot snapshot = null ; \n\t\t\tif $F7311 ( name , SNAPSHOT_PREFIX ) { \n\t\t\t\tsnapshot = indexShardSnapshotFormat . readBlob ( blobContainer , name ) ; \n\t\t\t\t} \n\t\t\telse if $F7311 ( name , LEGACY_SNAPSHOT_PREFIX ) { \n\t\t\t\tsnapshot = indexShardSnapshotLegacyFormat . readBlob ( blobContainer , name ) ; \n\t\t\t\t} \n\t\t\tif ( snapshot != null ) { \n\t\t\t\tsnapshots . add ( new SnapshotFiles ( snapshot . snapshot ( ) , snapshot . indexFiles ( ) ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( IOException e ) $F66732 ( logger , e , name ) } \n\treturn new Tuple $F200 ( new BlobStoreIndexShardSnapshots ( snapshots ) , - NUM00 ) ; \n\t} \n"}, {"code": "protected MapleQuestRequirement ( MapleQuest quest , ReadBin data ) throws IOException { \n\tthis . quest = quest ; \n\tthis . dayByDay = data . readByte ( ) > NUM00 ; \n\tthis . normalAutoStart = data . readByte ( ) > NUM00 ; \n\tthis . lvmin = data . readShort ( ) ; \n\tthis . lvmax = data . readShort ( ) ; \n\tthis . mbmin = data . readShort ( ) ; \n\tthis . charismaMin = data . readShort ( ) ; \n\tthis . charmMin = data . readShort ( ) ; \n\tthis . craftMin = data . readShort ( ) ; \n\tthis . insightMin = data . readShort ( ) ; \n\tthis . senseMin = data . readShort ( ) ; \n\tthis . willMin = data . readShort ( ) ; \n\tthis . pop = data . readShort ( ) ; \n\tthis . pettamenessmin = data . readShort ( ) ; \n\tthis . subJobFlag = data . readShort ( ) ; \n\tthis . npc = data . readInt ( ) ; \n\tthis . interval = data . readInt ( ) ; \n\tthis . end = data . readString ( ) ; \n\tthis . startscript = data . readString ( ) ; \n\tthis . endscript = data . readString ( ) ; \n\t$F6632 ( size , data ) for ( $F119 ( i , size ) ) { \n\t\t$F5952 ( field , data ) fieldEnter . add ( field ) ; \n\t\t} \n\t$F11214 ( size , data ) for ( $F119 ( i , size ) ) { \n\t\t$F6632 ( job , data ) jobs . add ( job ) ; \n\t\t} \n\t$F11214 ( size , data ) for ( $F119 ( i , size ) ) { \n\t\t$F5952 ( id , data ) boolean acquire = data . readByte ( ) > NUM00 ; \n\t\tskills . put ( id , acquire ) ; \n\t\t} \n\t$F11214 ( size , data ) for ( $F119 ( i , size ) ) { \n\t\t$F5952 ( id , data ) $F1544 ( state , data ) $F1544 ( order , data ) quests . put ( id , state ) ; \n\t\t} \n\t$F11214 ( size , data ) for ( $F119 ( i , size ) ) { \n\t\t$F5952 ( id , data ) $F5952 ( count , data ) $F1544 ( order , data ) items . put ( id , count ) ; \n\t\t} \n\t$F11214 ( size , data ) for ( $F119 ( i , size ) ) { \n\t\t$F5952 ( id , data ) $F5952 ( count , data ) mobs . put ( id , count ) ; \n\t\t} \n\t$F11214 ( size , data ) for ( $F119 ( i , size ) ) { \n\t\t$F5952 ( id , data ) pets . add ( id ) ; \n\t\t} \n\t} \n"}, {"code": "public ForumPostConfig createReply ( ForumPostConfig config ) { \n\tconfig . addCredentials ( this ) ; \n\t$F77623 ( xml , POST , this , config ) Element root = parse ( xml ) ; \n\t$F1338 ( root ) try { \n\t\tForumPostConfig $F98634 ( reply ) ; \n\t\treply . parseXML ( root ) ; \n\t\treturn reply ; \n\t\t} \n\t$F77633 ( this , SDKException , exception ) } \n"}, {"code": "public boolean isArmed $F72 { \n\treturn other . isArmed ( ) ; \n\t} \n"}, {"code": "public static AttribKey forHtmlAttrib ( ElKey el , String localName ) { \n\treturn new AttribKey ( el , HTML_NS , localName ) ; \n\t} \n"}, {"code": "SparseArray ( Class $F105651 linearArrayType , $F2027 rowIndices , $F2027 colIndices , L realValues , L imagValues , int numRows , int numCols ) { \n\tvalidateUserSuppliedParameters ( linearArrayType , rowIndices , colIndices , realValues , imagValues ) ; \n\t$F83161 ( _baseComponentType , linearArrayType ) _outputArrayType = ( Class < L [ ] > ) ArrayUtils . getArrayClass ( _baseComponentType , NUM00 ) ; \n\tMap < SparseKey , SparseValue > sparseMap = createSparseMap ( linearArrayType , rowIndices , colIndices , realValues , imagValues , numRows , numCols ) ; \n\t_numRows = numRows ; \n\t_numCols = numCols ; \n\tArrayList < SparseKey > keys = new ArrayList < SparseKey > $F57797 ( sparseMap ) ; \n\tCollections . sort ( keys ) ; \n\t$F103411 ( _rowIndices , keys ) $F103411 ( _colIndices , keys ) $F103411 ( _linearIndices , keys ) _realValues = linearArrayType . cast ( Array . newInstance ( _baseComponentType , keys . size ( ) ) ) ; \n\t_imagValues = imagValues == null ? null : linearArrayType . cast ( Array . newInstance ( _baseComponentType , keys . size ( ) ) ) ; \n\tfor ( $F2277 ( i , keys ) ) { \n\t\tSparseKey key = keys . get ( i ) ; \n\t\t_rowIndices [ i ] = key . row ; \n\t\t_colIndices [ i ] = key . col ; \n\t\t_linearIndices [ i ] = key . linearIndex ; \n\t\tSparseValue value = sparseMap . get ( key ) ; \n\t\tsetSparseValue ( value , _realValues , _imagValues , i ) ; \n\t\t} \n\t} \n"}, {"code": "public static Tuple max ( TupleSet tuples , String field , Comparator cmp ) { \n\tif ( tuples instanceof Table ) { \n\t\tTable table = ( Table ) tuples ; \n\t\tColumnMetadata md = table . getMetadata ( field ) ; \n\t\treturn table . getTuple ( md . getMaximumRow ( ) ) ; \n\t\t} \n\telse { \n\t\treturn max ( tuples . tuples ( ) , field , cmp ) ; \n\t\t} \n\t} \n"}, {"code": "protected void updateRadioLinks $F72 { \n\tm_CVBut . setEnabled ( _BOOL ) ; \n\t$F84694 ( m_CVText , m_CVBut ) $F84694 ( m_CVLab , m_CVBut ) $F84694 ( m_SeedText , m_CVBut ) $F84694 ( m_SeedLab , m_CVBut ) if ( m_AttributeEvaluatorEditor . getValue ( ) instanceof AttributeTransformer ) { \n\t\tm_CVBut . setSelected ( _BOOL ) ; \n\t\tm_CVBut . setEnabled ( _BOOL ) ; \n\t\tm_CVText . setEnabled ( _BOOL ) ; \n\t\tm_CVLab . setEnabled ( _BOOL ) ; \n\t\tm_SeedText . setEnabled ( _BOOL ) ; \n\t\tm_SeedLab . setEnabled ( _BOOL ) ; \n\t\tm_TrainBut . setSelected ( _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "private String idString ( int id1 , int id2 ) { \n\treturn NUM00 + Integer . toHexString ( id2 & NUM00 ) + NUM00 + Integer . toHexString ( id1 & NUM00 ) + NUM00 + ( ( id2 & NUM00 ) * NUM00 + ( id1 & NUM00 ) ) + NUM00 ; \n\t} \n"}, {"code": "public EtagCache resetStats $F72 { \n\t$F3223 ( hits ) $F3223 ( misses ) return this ; \n\t} \n"}, {"code": "public void testOtherToStringDefault $F72 { \n\tNumberConverter converter = makeConverter ( ) ; \n\tassertEquals ( NUM00 , NUM00 , converter . convert ( $F10062 , new StringBuffer $F580 ) ) ; \n\t} \n"}, {"code": "private void removeItemAtInt ( int index , boolean updateChildrenOnMenuViews ) { \n\tif ( ( index < NUM00 ) || $F6389 ( index , mItems ) ) $F665 mItems . remove ( index ) ; \n\tif ( updateChildrenOnMenuViews ) onItemsChanged ( _BOOL ) ; \n\t} \n"}, {"code": "public void testShiftRight3 $F72 { \n\t$F17888 int aSign = NUM00 ; \n\tint number = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , NUM00 , - NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F86501 ( result , aNumber , number ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "private void showFilterDialog ( Filter filter ) { \n\tint sortOrder = mAdapter . getCount ( ) - NUM00 ; \n\tif ( filter == null ) { \n\t\tEditFilterActivity . createNewFilter ( getActivity ( ) , sortOrder ) ; \n\t\t} \n\telse { \n\t\tEditFilterActivity . editFilter ( getActivity ( ) , filter , sortOrder ) ; \n\t\t} \n\t} \n"}, {"code": "public static int numPixelsBetween $F2026 ( x1 , y1 , x2 , y2 ) { \n\treturn ( int ) Math . sqrt ( Math . pow ( $F250385 ( x1 , x2 ) , NUM00 ) + Math . pow ( $F250385 ( y1 , y2 ) , NUM00 ) ) ; \n\t} \n"}, {"code": "private KeyStore createKeys ( KeyStore keyStore , String keyAlgorithm , String publicAlias , String privateAlias , PrivateKeyEntry signer ) throws Exception { \n\tPrivateKey caKey ; \n\tX509Certificate caCert ; \n\t$F5958 caCertChain ; \n\tif ( signer == null ) { \n\t\tcaKey = null ; \n\t\tcaCert = null ; \n\t\tcaCertChain = null ; \n\t\t} \n\telse { \n\t\tcaKey = signer . getPrivateKey ( ) ; \n\t\tcaCert = ( X509Certificate ) signer . getCertificate ( ) ; \n\t\tcaCertChain = ( $F5958 ) signer . getCertificateChain ( ) ; \n\t\t} \n\tPrivateKey privateKey ; \n\tX509Certificate x509c ; \n\tif ( publicAlias == null && privateAlias == null ) $F39233 ( privateKey , x509c ) else { \n\t\tint keySize ; \n\t\tif $F3057 ( keyAlgorithm ) { \n\t\t\tkeySize = NUM00 ; \n\t\t\t} \n\t\telse if $F3057 ( keyAlgorithm ) { \n\t\t\tkeySize = NUM00 ; \n\t\t\t} \n\t\telse if $F3057 ( keyAlgorithm ) { \n\t\t\tkeySize = NUM00 ; \n\t\t\t} \n\t\telse if $F3057 ( keyAlgorithm ) { \n\t\t\tkeySize = NUM00 ; \n\t\t\tkeyAlgorithm = NUM00 ; \n\t\t\t} \n\t\telse $F18931 ( keyAlgorithm ) $F156 ( kpg , KeyPairGenerator , keyAlgorithm ) kpg . initialize ( keySize , $F5607 ) ; \n\t\t$F284653 ( kp , kpg ) privateKey = kp . getPrivate ( ) ; \n\t\tPublicKey publicKey = kp . getPublic ( ) ; \n\t\tX500Principal issuer = ( ( caCert != null ) ? caCert . getSubjectX500Principal ( ) : subject ) ; \n\t\tPrivateKey signingKey = ( caKey == null ) ? privateKey : caKey ; \n\t\tx509c = createCertificate ( publicKey , signingKey , subject , issuer , keyUsage , ca , extendedKeyUsages , criticalExtendedKeyUsages , subjectAltNames , permittedNameConstraints , excludedNameConstraints ) ; \n\t\t} \n\t$F5958 x509cc ; \n\tif ( privateAlias == null ) { \n\t\tx509cc = null ; \n\t\t} \n\telse if ( caCertChain == null ) { \n\t\tx509cc = new X509Certificate [ ] { \n\t\t\tx509c } \n\t\t; \n\t\t} \n\telse { \n\t\tx509cc = new X509Certificate $F22598 ( caCertChain ) ; \n\t\tx509cc [ NUM00 ] = x509c ; \n\t\t$F7057 ( System , caCertChain , x509cc ) } \n\tif ( privateAlias != null ) { \n\t\tkeyStore . setKeyEntry ( privateAlias , privateKey , keyPassword , x509cc ) ; \n\t\t} \n\tif ( publicAlias != null ) { \n\t\tkeyStore . setCertificateEntry ( publicAlias , x509c ) ; \n\t\t} \n\treturn keyStore ; \n\t} \n"}, {"code": "static boolean allowsPopup ( FormObject formObject ) { \n\tswitch ( formObject . getParameterConstant ( PdfDictionary . Subtype ) ) { \n\t\tcase PdfDictionary . Text : case PdfDictionary . Square : case PdfDictionary . Highlight : case PdfDictionary . Underline : case PdfDictionary . StrickOut : case PdfDictionary . Stamp : return _BOOL ; \n\t\t$F1267 return _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public static LocalGitRepo fromCurrentDir ( String remoteUrl ) throws ValidationException { \n\tGit git ; \n\t$F8809 ( gitDir ) try { \n\t\tgit = Git . open ( gitDir ) ; \n\t\t} \n\tcatch ( RepositoryNotFoundException rnfe ) { \n\t\tString fullPathOfCurrentDir = pathOf ( gitDir ) ; \n\t\tFile gitRoot = $F1250 ( getGitRootIfItExistsInOneOfTheParentDirectories , fullPathOfCurrentDir ) ; \n\t\tString summary ; \n\t\t$F10144 ( messages ) if ( gitRoot == null ) { \n\t\t\tsummary = NUM00 ; \n\t\t\tmessages . add ( summary ) ; \n\t\t\t$F31982 ( messages , fullPathOfCurrentDir ) } \n\t\telse { \n\t\t\tsummary = NUM00 ; \n\t\t\tmessages . add ( summary ) ; \n\t\t\t$F31982 ( messages , fullPathOfCurrentDir ) messages . add ( NUM00 + pathOf ( gitRoot ) ) ; \n\t\t\t} \n\t\tthrow new ValidationException ( summary , messages ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new ValidationException ( NUM00 + pathOf ( gitDir ) + NUM00 , Arrays . asList ( $F22435 ( e ) ) ) ; \n\t\t} \n\treturn new LocalGitRepo ( git , remoteUrl ) ; \n\t} \n"}, {"code": "public static Vector2 min ( Vector2 o1 , Vector2 o2 ) { \n\treturn new Vector2 ( $F150934 ( Math , o1 , o2 ) , Math . min ( o1 . z , o2 . z ) ) ; \n\t} \n"}, {"code": "public void addTestCall ( GenericAccessibleObject $F1011 call ) throws IllegalArgumentException { \n\tInputs . checkNull ( call ) ; \n\ttestMethods . add ( call ) ; \n\t} \n"}, {"code": "public void serialize ( KXmlSerializer serializer ) throws IOException { \n\tmDeviceInfo . serialize ( serializer ) ; \n\tserializeHostInfo ( serializer ) ; \n\tserializeTestSummary ( serializer ) ; \n\tmonkeyTag . serialize ( serializer ) ; \n\tList < TestPackageResult > pkgs = new ArrayList < TestPackageResult > $F6680 ( mPackageMap ) ; \n\tCollections . sort ( pkgs , new PkgComparator $F72 ) ; \n\tfor ( TestPackageResult r : pkgs ) { \n\t\tr . serialize ( serializer ) ; \n\t\t} \n\t} \n"}, {"code": "private void verifyBlockMirrorMigration $F72 throws Exception { \n\t$F973 ( log ) Iterator < BlockMirror > blockMirrorItr = _dbClient . queryIterativeObjects ( $F30624 , blockMirrorURIs ) ; \n\tList $F30635 blockObjects = new ArrayList $F30635 $F72 ; \n\t$F3536 ( blockMirrorItr , blockObjects ) verifyBlockObjects ( blockObjects ) ; \n\t} \n"}, {"code": "public LogFormatter ( Logger log ) { \n\tif ( log == null ) log = Logger . getLogger ( Logger . GLOBAL_LOGGER_NAME ) ; \n\tLevel lvl = null ; \n\twhile ( log != null ) { \n\t\tlvl = log . getLevel ( ) ; \n\t\tif ( lvl != null ) $F597 $F10337 ( log ) } \n\t; \n\tif ( lvl == null ) lvl = Level . WARNING ; \n\tthis . level = lvl ; \n\t} \n"}, {"code": "public synchronized void removeTextListener ( TextListener cl ) $F106 ( m_textListeners , cl ) "}, {"code": "$F120210 ( maximumPullScroll , getMaximumPullScroll , pLeft , getPaddingLeft , pTop , getPaddingTop , pRight , getPaddingRight , pBottom , getPaddingBottom , getPullToRefreshScrollDirection , HORIZONTAL , mMode , mHeaderLayout , mFooterLayout , VERTICAL , DEBUG , Log , LOG_TAG , String , setPadding ) "}, {"code": "private Element createIDPEntityDescriptor ( boolean exportPrivateData ) throws Exception { \n\tElement entEle = doc . createElementNS ( null , SAMLNames . ENTDESCRIPTOR ) ; \n\tString id = idmClient . getEntityID ( tenantName ) ; \n\tString alias = idmClient . getLocalIDPAlias ( tenantName ) ; \n\t$F13265 ( id , tenantName ) entEle . setAttribute ( SAMLNames . ENTID , id ) ; \n\tElement idpSSO = createIDPSSODescriptor ( exportPrivateData ) ; \n\tentEle . appendChild ( idpSSO ) ; \n\tif ( exportPrivateData ) { \n\t\tif $F4251 ( alias ) { \n\t\t\talias = id ; \n\t\t\t} \n\t\tElement orgEle = createOrganization ( tenantName , tenantName , alias , SAMLNames . ENGLISH ) ; \n\t\tentEle . appendChild ( orgEle ) ; \n\t\t} \n\treturn entEle ; \n\t} \n"}, {"code": "public void clear $F72 { \n\t$F725 ( infoQueue ) while $F5973 ( dataQueue ) { \n\t\tallocator . release ( dataQueue . remove ( ) ) ; \n\t\t} \n\ttotalBytesDropped = NUM00 ; \n\ttotalBytesWritten = NUM00 ; \n\tlastAllocation = null ; \n\tlastAllocationOffset = allocationLength ; \n\t} \n"}, {"code": "public void applyCamera ( GL2 gl ) { \n\tgl . glMatrixMode ( GL2 . GL_PROJECTION ) ; \n\tgl . glLoadIdentity ( ) ; \n\tglu . gluPerspective ( NUM00 , width / ( float ) height , NUM00 , NUM00 ) ; \n\teye [ NUM00 ] = $F148723 ( Math , theta ) * NUM00 ; \n\teye [ NUM00 ] = NUM00 ; \n\teye [ NUM00 ] = $F148722 ( Math , theta ) * NUM00 ; \n\tglu . gluLookAt ( eye [ NUM00 ] , eye [ NUM00 ] , eye [ NUM00 ] , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 ) ; \n\tgl . glMatrixMode ( GL2 . GL_MODELVIEW ) ; \n\tgl . glLoadIdentity ( ) ; \n\tgl . glViewport ( NUM00 , NUM00 , width , height ) ; \n\t} \n"}, {"code": "public static ResultSet pointTable ( double x , double y ) { \n\tGeometryFactory factory = new GeometryFactory $F72 ; \n\tSimpleResultSet rs = new SimpleResultSet $F72 ; \n\trs . addColumn ( NUM00 , Types . JAVA_OBJECT , NUM00 , NUM00 , NUM00 ) ; \n\trs . addRow ( factory . createPoint ( new Coordinate ( x , y ) ) ) ; \n\treturn rs ; \n\t} \n"}, {"code": "public void addToExistingVolumesIfAbsent ( $F59936 ( volumeWWNs ) ) { \n\tif ( _existingVolumes == null ) { \n\t\t_existingVolumes = new StringMap $F72 ; \n\t\t} \n\tfor ( $F3465 ( wwn , volumeWWNs ) ) { \n\t\tString normalizedWWN = BlockObject . normalizeWWN ( wwn ) ; \n\t\tif ( ! _existingVolumes . containsKey ( normalizedWWN ) && ( _userAddedVolumes == null || ! _userAddedVolumes . containsKey ( normalizedWWN ) ) ) { \n\t\t\tString hluStr = ExportGroup . LUN_UNASSIGNED_STR ; \n\t\t\t$F99426 ( hlu , volumeWWNs , normalizedWWN ) $F170091 ( hlu , hluStr ) _existingVolumes . put ( normalizedWWN , hluStr ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public PathImpl createTempFile ( String prefix , String suffix ) throws IOException { \n\tif $F6036 ( prefix ) prefix = NUM00 ; \n\t$F12553 ( suffix ) synchronized ( LOCK ) { \n\t\tfor ( $F6268 ( i ) ) { \n\t\t\tint r = Math . abs ( ( int ) RandomUtil . getRandomLong ( ) ) ; \n\t\t\tPathImpl file = lookup ( prefix + r + suffix ) ; \n\t\t\tif ( file . createNewFile ( ) ) return file ; \n\t\t\t} \n\t\t} \n\t$F3575 } \n"}, {"code": "static Map < TargetType , List < TypeCompound > > partitionByTargetType ( Collection < TypeCompound > annos , List < TypeCompound > unmatched , TargetType ... targetTypes ) { \n\tfinal Map < TargetType , List < TypeCompound > > $F8690 ( targetTypeToAnnos ) ; \n\tfor ( TargetType targetType : targetTypes ) { \n\t\ttargetTypeToAnnos . put ( targetType , new ArrayList < TypeCompound > $F989 ) ; \n\t\t} \n\tfor ( final TypeCompound anno : annos ) { \n\t\tfinal List < TypeCompound > annoSet = targetTypeToAnnos . get ( anno . getPosition ( ) . type ) ; \n\t\tif ( annoSet != null ) $F207 ( annoSet , anno ) else $F73441 ( unmatched , anno ) } \n\treturn targetTypeToAnnos ; \n\t} \n"}, {"code": "$F156045 ( msg , x , super , this ) "}, {"code": "public void load $F72 { \n\ttry { \n\t\tif ( fileChannel == null ) { \n\t\t\tfileChannel = FileChannel . open ( path , StandardOpenOption . READ ) ; \n\t\t\t} \n\t\t$F16709 ( fileChannel ) $F725 ( buffer ) $F725 ( tmp ) while ( fileChannel . read ( tmp ) > NUM00 ) { \n\t\t\t$F14257 ( tmp ) if ( tmp . remaining ( ) > buffer . capacity ( ) - buffer . position ( ) ) { \n\t\t\t\tfinal ByteBuffer next = ByteBuffer . allocateDirect ( Math . max ( $F5699 ( buffer ) , tmp . remaining ( ) ) ) ; \n\t\t\t\t$F14257 ( buffer ) next . put ( buffer ) ; \n\t\t\t\tbuffer = next ; \n\t\t\t\t} \n\t\t\tbuffer . put ( tmp ) ; \n\t\t\t$F725 ( tmp ) } \n\t\t$F14257 ( buffer ) } \n\tcatch ( final IOException e ) { \n\t\tthrow new UncheckedIOException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "private void onHPChange ( final int amount ) { \n\tif ( User . squaredDistanceTo ( x , y ) < HEARING_DISTANCE_SQ ) { \n\t\tif ( amount > NUM00 ) { \n\t\t\taddTextIndicator ( NUM00 + amount , NotificationType . POSITIVE ) ; \n\t\t\t} \n\t\telse { \n\t\t\taddTextIndicator ( String . valueOf ( amount ) , NotificationType . NEGATIVE ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1113 private File resolveName $F116884 ( name ) throws IOException { \n\tFile file ; \n\tif $F7311 ( name , ROOT ) { \n\t\tfile = new File ( myTemplateRootFolder , $F8182 ( name , ROOT ) ) ; \n\t\t} \n\telse if ( myLastTemplateFolders != null ) { \n\t\tfile = new File ( myLastTemplateFolders . peek ( ) , name ) ; \n\t\t} \n\telse { \n\t\t$F63508 ( file , myTemplateRootFolder , name ) } \n\treturn file . getCanonicalFile ( ) ; \n\t} \n"}, {"code": "public void initToolTip $F72 { \n\tif ( ttmanager == null ) { \n\t\tttmanager = ToolTipManager . sharedInstance ( ) ; \n\t\tttmanager . registerComponent ( map ) ; \n\t\tttmanager . setEnabled ( _BOOL ) ; \n\t\t$F665 } \n\tif ( map != null ) { \n\t\t$F51105 ( map ) } \n\t} \n"}, {"code": "public static $F806 decodeArray ( String encodedArray ) { \n\t$F6542 ( items , encodedArray ) $F8728 ( list ) for ( $F1139 ( i , items ) ) { \n\t\tString item = items [ i ] ; \n\t\titem = gsub ( NUM00 , NUM00 , item ) ; \n\t\tif $F1264 ( item ) $F207 ( list , item ) } \n\t$F14862 ( list ) } \n"}, {"code": "public boolean computeAngleOffset $F72 { \n\t$F9303 ( mFinished , _BOOL ) long systemClock = AnimationUtils . currentAnimationTimeMillis ( ) ; \n\tlong timePassed = systemClock - mStartTime ; \n\tif ( timePassed < mDuration ) { \n\t\tswitch ( mMode ) { \n\t\t\tcase SCROLL_MODE : $F5773 ( sc , timePassed , mDuration ) mCurrAngle = mStartAngle + Math . round ( mDeltaAngle * sc ) ; \n\t\t\t$F597 case FLING_MODE : float timePassedSeconds = timePassed / NUM00 ; \n\t\t\tfloat distance ; \n\t\t\tif ( mVelocity < NUM00 ) { \n\t\t\t\tdistance = mCoeffVelocity * mVelocity * timePassedSeconds - ( mDeceleration * timePassedSeconds * timePassedSeconds / NUM00 ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tdistance = - mCoeffVelocity * mVelocity * timePassedSeconds - ( mDeceleration * timePassedSeconds * timePassedSeconds / NUM00 ) ; \n\t\t\t\t} \n\t\t\tmCurrAngle = mStartAngle - Math . signum ( mVelocity ) * Math . round ( distance ) ; \n\t\t\t$F597 } \n\t\treturn _BOOL ; \n\t\t} \n\telse $F98813 ( mFinished , _BOOL ) } \n"}, {"code": "private void sendResource ( final UUID uuid , final Object resource , final long length , final InputStream is ) throws IOException { \n\tassert uuid != null ; \n\tassert resource != null ; \n\tassert length >= NUM00 ; \n\tassert is != null ; \n\tassert ! sentStatus ; \n\tlong bytesWritten = NUM00 ; \n\t$F132947 ( begin , System ) final OutputStream os = s . getOutputStream ( ) ; \n\ttry { \n\t\t{ \n\t\t\tfinal DataOutputStream dos = new DataOutputStream ( os ) ; \n\t\t\tdos . write ( new byte [ ] { \n\t\t\t\tStatusEnum . OK . get ( ) } \n\t\t\t) ; \n\t\t\tdos . writeLong ( length ) ; \n\t\t\t$F1206 ( dos ) bytesWritten += NUM00 + Bytes . SIZEOF_LONG ; \n\t\t\tsentStatus = _BOOL ; \n\t\t\t} \n\t\tfinal long checksum ; \n\t\t{ \n\t\t\tfinal int BUFSIZE = Bytes . kilobyte32 * NUM00 ; \n\t\t\tfinal CheckedInputStream cis = new CheckedInputStream ( new BufferedInputStream ( is ) , new Adler32 $F72 ) ; \n\t\t\t$F4727 ( buff , BUFSIZE ) while ( _BOOL ) { \n\t\t\t\tfinal int read = cis . read ( buff , NUM00 , BUFSIZE ) ; \n\t\t\t\t$F137919 ( read ) $F11584 ( os , buff , read ) bytesWritten += read ; \n\t\t\t\t} \n\t\t\tchecksum = cis . getChecksum ( ) . getValue ( ) ; \n\t\t\t} \n\t\t{ \n\t\t\tfinal DataOutputStream dos = new DataOutputStream ( os ) ; \n\t\t\tdos . writeLong ( checksum ) ; \n\t\t\tbytesWritten += Bytes . SIZEOF_LONG ; \n\t\t\t$F1206 ( dos ) } \n\t\t$F1206 ( os ) if $F17747 ( log ) log . info ( $F3905 ( uuid , resource , length , checksum ) + TimeUnit . NANOSECONDS . toMillis ( System . nanoTime ( ) - begin ) + NUM00 ) ; \n\t\t} \n\tfinally { \n\t\ttry $F881 ( os ) $F58785 counters . bytesWritten . add ( bytesWritten ) ; \n\t\tcounters . elapsedWriteNanos . add ( System . nanoTime ( ) - begin ) ; \n\t\tsynchronized ( counters . maxWriteSizeLock ) { \n\t\t\tcounters . maxWriteSize = Math . max ( counters . maxWriteSize , bytesWritten ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public long sigignore $F72 $F12907 ( Long , fields ) "}, {"code": "private static $F96 generateSeed $F72 { \n\ttry { \n\t\t$F99460 ( seedBuffer ) final DataOutputStream seedBufferOut = new DataOutputStream ( seedBuffer ) ; \n\t\tseedBufferOut . writeLong ( System . currentTimeMillis ( ) ) ; \n\t\tseedBufferOut . writeLong ( System . nanoTime ( ) ) ; \n\t\tseedBufferOut . writeInt ( Process . myPid ( ) ) ; \n\t\tseedBufferOut . writeInt ( Process . myUid ( ) ) ; \n\t\tseedBufferOut . write ( BUILD_FINGERPRINT_AND_DEVICE_SERIAL ) ; \n\t\t$F59 ( seedBufferOut ) $F11316 ( seedBuffer ) } \n\tcatch ( final IOException e ) { \n\t\tthrow new SecurityException ( NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public String render ( ValueExpr theExpr ) throws Exception { \n\ttheExpr . visit ( this ) ; \n\t$F92 ( mBuffer ) } \n"}, {"code": "public void stopSampling $F72 { \n\tif ( $F98948 ( mSamplingCounter ) ) { \n\t\tmHandler . stopSamplingThread ( ) ; \n\t\taddFinalSample ( ) ; \n\t\t} \n\t} \n"}, {"code": "public static final void reverseWinding ( $F77749 points ) { \n\t$F142232 ( points , Messages ) $F115 ( size , points ) if $F2862 ( size ) $F665 Collections . reverse ( points ) ; \n\t} \n"}, {"code": "public DSignCsr ( JFrame parent , PKCS10CertificationRequest pkcs10Csr , File csrFile , PrivateKey signPrivateKey , KeyPairType signKeyPairType , X509Certificate verificationCertificate , Provider provider ) throws CryptoException { \n\t$F36748 ( super , parent , Dialog ) this . pkcs10Csr = pkcs10Csr ; \n\tthis . csrFile = csrFile ; \n\tthis . signPrivateKey = signPrivateKey ; \n\tthis . signKeyPairType = signKeyPairType ; \n\tthis . verificationCertificate = verificationCertificate ; \n\tthis . provider = provider ; \n\t$F15426 ( setTitle , res ) initComponents ( ) ; \n\t} \n"}, {"code": "protected static void init $F72 { \n\tString notificationfactoryClassName = null ; \n\ttry $F10616 ( notificationfactoryClassName , System , NOTIFICATION_FACTORY_NAME ) catch ( SecurityException e ) $F9491 ( e ) if ( notificationfactoryClassName != null ) { \n\t\t$F33929 ( nfc ) try { \n\t\t\tnfc = Class . forName ( notificationfactoryClassName ) ; \n\t\t\tfactory = ( INotificationManagerFactory ) nfc . newInstance ( ) ; \n\t\t\t} \n\t\tcatch ( ClassNotFoundException | InstantiationException | IllegalAccessException e ) $F9491 ( e ) } \n\telse { \n\t\tfactory = new SyslogNotificationFactory $F72 ; \n\t\t} \n\t} \n"}, {"code": "private int awaitDone ( boolean timed , long nanos ) throws InterruptedException { \n\t$F74107 ( deadline , timed , System , nanos ) WaitNode q = null ; \n\tboolean queued = _BOOL ; \n\tfor ( $F589 ) { \n\t\tif $F2754 ( Thread ) { \n\t\t\tremoveWaiter ( q ) ; \n\t\t\t$F2757 } \n\t\tint s = state ; \n\t\tif ( s > COMPLETING ) { \n\t\t\tif ( q != null ) q . thread = null ; \n\t\t\treturn s ; \n\t\t\t} \n\t\telse if ( s == COMPLETING ) $F5756 ( Thread ) else if ( q == null ) q = new WaitNode $F72 ; \n\t\telse if ( ! queued ) queued = UNSAFE . compareAndSwapObject ( this , waitersOffset , q . next = waiters , q ) ; \n\t\telse if ( timed ) { \n\t\t\t$F27353 ( nanos , deadline , System ) if ( nanos <= NUM00 ) $F9278 ( removeWaiter , q , state ) LockSupport . parkNanos ( this , nanos ) ; \n\t\t\t} \n\t\telse LockSupport . park ( this ) ; \n\t\t} \n\t} \n"}, {"code": "$F65837 ( node , count , capacity , _BOOL , f , first , last , notEmpty ) "}, {"code": "public static double clamp $F7635 ( value , low , high ) { \n\treturn Math . min ( Math . max ( value , low ) , high ) ; \n\t} \n"}, {"code": "public static String parseVolumeHostDirectory ( String volume ) { \n\tif $F4329 ( StringUtils , volume ) { \n\t\treturn volume ; \n\t\t} \n\tif $F2200 ( volume , HOST_CONTAINER_DIR_DELIMITER ) { \n\t\treturn volume ; \n\t\t} \n\t$F35105 ( hostContainerDir , volume , HOST_CONTAINER_DIR_DELIMITER ) $F231344 ( hostContainerDir ) String hostDir = hostContainerDir [ NUM00 ] ; \n\treturn hostDir ; \n\t} \n"}, {"code": "private String fmtTime ( double time ) { \n\treturn Utilities . pad ( timeFormatter . format ( time ) + NUM00 , NUM00 ) ; \n\t} \n"}, {"code": "$F78476 ( result , elementCount , System , elementData ) "}, {"code": "public static String right $F41200 ( s , width , fillChar ) { \n\tif $F85574 ( s , width ) { \n\t\treturn s ; \n\t\t} \n\t$F1350 ( sb , width ) for ( $F135252 ( i , width , s ) ; \n\t-- i >= NUM00 ; \n\t) $F288 ( sb , fillChar ) sb . append ( s ) ; \n\t$F92 ( sb ) } \n"}, {"code": "public synchronized boolean addAll $F22451 ( c ) { \n\tmodCount ++ ; \n\t$F11326 ( a , c ) int numNew = a . length ; \n\tensureCapacityHelper ( elementCount + numNew ) ; \n\t$F6483 ( System , a , elementData , elementCount , numNew ) elementCount += numNew ; \n\treturn numNew != NUM00 ; \n\t} \n"}, {"code": "$F1 public void update ( DefaultApplicationState transState ) { \n\tnewCheckpoint ( transState . getState ( ) , transState . getStateHash ( ) , transState . getLastCheckpointCID ( ) ) ; \n\tsetLastCheckpointCID ( transState . getLastCheckpointCID ( ) ) ; \n\t} \n"}, {"code": "public static $F96 stringToUtf8Bytes ( String string ) { \n\t$F1749 ( len , string ) $F171903 ( bytes , len ) int outAt = NUM00 ; \n\tfor ( $F119 ( i , len ) ) { \n\t\t$F1280 ( c , string , i ) if ( ( c != NUM00 ) && ( c < NUM00 ) ) { \n\t\t\t$F8214 ( bytes , outAt , c ) outAt ++ ; \n\t\t\t} \n\t\telse if ( c < NUM00 ) { \n\t\t\tbytes [ outAt ] = $F476832 ( c ) ; \n\t\t\tbytes [ outAt + NUM00 ] = $F287679 ( c ) ; \n\t\t\toutAt += NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tbytes [ outAt ] = $F476832 ( c ) ; \n\t\t\tbytes [ outAt + NUM00 ] = $F476832 ( c ) ; \n\t\t\tbytes [ outAt + NUM00 ] = $F287679 ( c ) ; \n\t\t\toutAt += NUM00 ; \n\t\t\t} \n\t\t} \n\t$F2175 ( result , outAt ) $F135 ( System , bytes , result , outAt ) return result ; \n\t} \n"}, {"code": "private List < Pair $F528 > toPairList ( $F87266 ( bindings ) ) { \n\tfinal List < Pair $F528 > blist = new ArrayList < Pair $F528 > $F72 ; \n\tfor ( final $F21130 pair : bindings . entrySet ( ) ) { \n\t\tblist . add ( new Pair $F528 ( $F15245 ( pair ) ) ) ; \n\t\t} \n\treturn blist ; \n\t} \n"}, {"code": "$F1 public boolean validateLabel ( String label ) { \n\t$F10578 ( Objects , label ) $F78369 ( labels , label ) } \n"}, {"code": "public void addMessageObserver ( final MessageObserver observer ) { \n\tif ( observer == null ) $F18044 else $F113304 ( messageObservers , initMessageObserverList ) messageObservers . add ( observer ) ; \n\t} \n"}, {"code": "public void show ( char initialChar ) { \n\tinitialString = initialString . append ( initialChar ) ; \n\tshow ( ) ; \n\tif ( SWT . getPlatform ( ) != NUM00 ) $F94311 ( setEditText , initialString ) } \n"}, {"code": "private static void byte2hex ( byte b , StringBuffer buf ) { \n\tint $F84703 ( high , b ) ; \n\t$F74266 ( low , b ) $F6939 ( buf , HEX_DIGITS , high ) $F6939 ( buf , HEX_DIGITS , low ) } \n"}, {"code": "public E remove ( int index ) { \n\thashCodeUpToDate = _BOOL ; \n\tmodCount ++ ; \n\tE oldValue = elementData ( index ) ; \n\tint numMoved = size - index - NUM00 ; \n\tif ( numMoved > NUM00 ) $F173011 ( System , elementData , index , numMoved ) elementData [ -- size ] = null ; \n\treturn oldValue ; \n\t} \n"}, {"code": "public static DoubleVector rnorm ( int n , double mean , double sd , Random random ) { \n\t$F30465 ( sd ) if ( sd == NUM00 ) return new DoubleVector ( n , mean ) ; \n\tDoubleVector v = new DoubleVector ( n ) ; \n\tfor ( $F119 ( i , n ) ) v . set ( i , ( random . nextGaussian ( ) + mean ) / sd ) ; \n\treturn v ; \n\t} \n"}, {"code": "private PdfObject readCompressedStream ( PdfObject rootObj , int pointer , final PdfFileReader currentPdfFile , final ObjectReader objectReader , final PdfObject linearObj ) throws PdfException { \n\twhile ( pointer != - NUM00 ) { \n\t\tmovePointer ( pointer ) ; \n\t\tfinal $F96 raw = objectReader . readObjectData ( - NUM00 , null ) ; \n\t\t$F1121 ( objectName ) char current1 , last = NUM00 ; \n\t\tint matched = NUM00 , i1 = NUM00 ; \n\t\twhile ( i1 < raw . length ) { \n\t\t\tcurrent1 = ( char ) raw [ i1 ] ; \n\t\t\tif $F2862 ( current1 ) { \n\t\t\t\tcurrent1 = NUM00 ; \n\t\t\t\t} \n\t\t\tif ( current1 == NUM00 && last == NUM00 ) { \n\t\t\t\tmatched = NUM00 ; \n\t\t\t\t} \n\t\t\telse if ( current1 == pattern . charAt ( matched ) ) { \n\t\t\t\tmatched ++ ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tmatched = NUM00 ; \n\t\t\t\tobjectName . append ( current1 ) ; \n\t\t\t\t} \n\t\t\t$F7256 ( matched ) last = current1 ; \n\t\t\ti1 ++ ; \n\t\t\t} \n\t\t$F84 ( objectName ) final PdfObject pdfObject = new CompressedObject $F3362 ( objectName ) ; \n\t\tpdfObject . setCompressedStream ( _BOOL ) ; \n\t\tfinal ObjectDecoder objectDecoder = new ObjectDecoder ( currentPdfFile ) ; \n\t\tobjectDecoder . readDictionaryAsObject ( pdfObject , NUM00 , raw ) ; \n\t\tfinal $F2027 fieldSizes = pdfObject . getIntArray ( PdfDictionary . W ) ; \n\t\t$F96 xrefs = pdfObject . getDecodedStream ( ) ; \n\t\tif ( xrefs == null ) { \n\t\t\txrefs = currentPdfFile . readStream ( pdfObject , _BOOL , _BOOL , _BOOL , _BOOL , _BOOL , null ) ; \n\t\t\t} \n\t\tfinal $F2027 Index = pdfObject . getIntArray ( PdfDictionary . Index ) ; \n\t\tif ( Index == null ) { \n\t\t\tCompressedObjects . readCompressedOffsets ( NUM00 , NUM00 , pdfObject . getInt ( PdfDictionary . Size ) , fieldSizes , xrefs , offset , pdf_datafile ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F18832 ( count , Index ) int pntr = NUM00 ; \n\t\t\tfor ( $F6225 ( aa , count ) ) { \n\t\t\t\tpntr = CompressedObjects . readCompressedOffsets ( pntr , Index [ aa ] , Index [ aa + NUM00 ] , fieldSizes , xrefs , offset , pdf_datafile ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( rootObj == null ) { \n\t\t\trootObj = pdfObject . getDictionary ( PdfDictionary . Root ) ; \n\t\t\tencryptObj = pdfObject . getDictionary ( PdfDictionary . Encrypt ) ; \n\t\t\tif ( encryptObj != null ) { \n\t\t\t\tfinal $F30974 IDs = pdfObject . getStringArray ( PdfDictionary . ID ) ; \n\t\t\t\tif ( IDs != null && this . ID == null ) { \n\t\t\t\t\tthis . ID = IDs [ NUM00 ] ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tinfoObject = pdfObject . getDictionary ( PdfDictionary . Info ) ; \n\t\t\t} \n\t\tif ( linearObj != null ) $F44867 ( pointer ) else { \n\t\t\tpointer = pdfObject . getInt ( PdfDictionary . Prev ) ; \n\t\t\tif ( pointer != - NUM00 && ! isCompressedStream ( pointer , ( int ) eof ) ) { \n\t\t\t\treturn readLegacyReferenceTable ( rootObj , pointer , ( int ) eof , currentPdfFile ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn rootObj ; \n\t} \n"}, {"code": "protected void warningOccurred ( int code ) { \n\t$F8934 ( cbLock ) try { \n\t\tif $F74591 ( code , MAX_WARNING ) { \n\t\t\tthrow $F86636 ; \n\t\t\t} \n\t\t$F68359 ( processWarningOccurred , Integer , code ) ; \n\t\t} \n\t$F796 ( cbLock ) } \n"}, {"code": "public boolean isKnownSub ( String subName ) $F298 ( KNOWN_SUBS , subName ) "}, {"code": "public String diff_text1 $F68061 ( diffs ) { \n\t$F83 ( text ) for ( Diff aDiff : diffs ) { \n\t\tif ( aDiff . operation != Operation . INSERT ) $F68065 ( text , aDiff ) } \n\t$F92 ( text ) } \n"}, {"code": "public boolean isStored $F72 { \n\treturn Integer . signum ( id ) != - NUM00 ; \n\t} \n"}, {"code": "public static BigInteger sizeOfDirectoryAsBigInteger ( File directory ) { \n\tcheckDirectory ( directory ) ; \n\t$F44946 ( files , directory ) if ( files == null ) { \n\t\treturn BigInteger . ZERO ; \n\t\t} \n\tBigInteger size = BigInteger . ZERO ; \n\tfor ( final File file : files ) { \n\t\ttry { \n\t\t\tif ( ! isSymlink ( file ) ) { \n\t\t\t\tsize = size . add ( BigInteger . valueOf ( sizeOf ( file ) ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F62612 } \n\treturn size ; \n\t} \n"}, {"code": "public boolean isSearchLightBit ( int bit ) { \n\tif ( nodeType != SMINI ) { \n\t\t$F9464 ( log ) return ( _BOOL ) ; \n\t\t} \n\tif $F61157 ( bit ) { \n\t\tlog . error ( NUM00 + Integer . toString ( bit ) ) ; \n\t\treturn ( _BOOL ) ; \n\t\t} \n\tif ( locSearchLightBits [ bit ] == NUM00 ) $F3139 ( _BOOL ) return ( _BOOL ) ; \n\t} \n"}, {"code": "public AgeFileFilter ( Date cutoffDate , boolean acceptOlder ) { \n\tthis ( cutoffDate . getTime ( ) , acceptOlder ) ; \n\t} \n"}, {"code": "public void calcMajorTick $F72 { \n\tmajorTick = NUM00 ; \n\tmajorTickCount = ( int ) Math . round ( log10 ( maxTick / minTick ) ) + NUM00 ; \n\t} \n"}, {"code": "public boolean next $F72 throws GenericDataSourceException { \n\ttry $F43105 ( _rs ) catch ( SQLException sqle ) { \n\t\tthrow new GenericDataSourceException ( NUM00 + _sql , sqle ) ; \n\t\t} \n\t} \n"}, {"code": "public void put ( String sample , HiddenAttribute attribute , Object value ) { \n\tput ( sample , attribute . toString ( ) , value ) ; \n\t} \n"}, {"code": "void postMessage ( List < JetstreamMessage > msgs , DispatchQueueStats stats ) throws MessageServiceException { \n\tm_msgRcvCounter . addAndGet ( msgs . size ( ) ) ; \n\tif ( ( monitorUpstreamQueueAndPauseTraffic ( ) == UpstreamQueueState . FULL ) && $F27748 ( m_paused ) ) { \n\t\tif ( ! m_msgProcessor . hasAvailableCapacity ( m_twentyPercentCapacity ) ) { \n\t\t\t$F72375 ( m_totalMsgsDropped ) $F665 } \n\t\t} \n\tList $F24548 requests = new ArrayList $F24548 $F716 ( msgs ) ; \n\tfor ( $F62958 ( i , t , msgs ) ) { \n\t\tJetstreamMessage tm = msgs . get ( i ) ; \n\t\tif ( tm . getTopic ( ) == null ) { \n\t\t\t$F72375 ( m_totalMsgsDropped ) $F35060 ( LOGGER ) $F598 } \n\t\tMessageServiceRequest msr = new MessageServiceRequest ( tm ) ; \n\t\tmsr . setPriority ( tm . getPriority ( ) ) ; \n\t\tmsr . setSequenceid ( tm . getSequenceId ( ) ) ; \n\t\tif ( msr . getPriority ( ) == JetstreamMessage . INTERNAL_MSG_PRIORITY ) { \n\t\t\tif ( ! m_internalMsgProcessor . processRequest ( msr ) ) { \n\t\t\t\t$F72375 ( m_totalMsgsDropped ) throw new MessageServiceException ( MessageServiceException . BUFFER_FULL , NUM00 ) ; \n\t\t\t\t} \n\t\t\tif ( m_msgsRcvdPerSec . addAndGet ( NUM00 ) < NUM00 ) $F3223 ( m_msgsRcvdPerSec ) $F72375 ( m_totalMsgsRcvd ) } \n\t\telse $F207 ( requests , msr ) } \n\tif $F5973 ( requests ) { \n\t\t$F2199 ( batchsize , requests ) if ( ! m_msgProcessor . processBatch ( requests ) ) { \n\t\t\tm_totalMsgsDropped . addAndGet ( batchsize ) ; \n\t\t\tthrow new MessageServiceException ( MessageServiceException . BUFFER_FULL , NUM00 + NUM00 + batchsize + NUM00 + m_msgProcessor . getAvailableCapacity ( ) ) ; \n\t\t\t} \n\t\tm_avgMsgsRcvdPerSec . add ( batchsize ) ; \n\t\tm_totalMsgsRcvd . addAndGet ( batchsize ) ; \n\t\t} \n\tif ( stats != null ) { \n\t\tstats . setHighPriorityQueueDepth ( ( int ) m_msgProcessor . getPendingRequests ( ) ) ; \n\t\tstats . setLowPriorityQueueDepth ( ( int ) m_msgProcessor . getPendingRequests ( ) ) ; \n\t\tstats . setMaxQueueDepth ( ( int ) m_msgProcessor . getMaxQueueSz ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean unsetOrdering ( Object first , Object second ) { \n\tDigraphNode firstPONode = ( DigraphNode ) poNodes . get ( first ) ; \n\tDigraphNode secondPONode = ( DigraphNode ) poNodes . get ( second ) ; \n\treturn firstPONode . removeEdge ( secondPONode ) || secondPONode . removeEdge ( firstPONode ) ; \n\t} \n"}, {"code": "public String convertSWFToHTML ( InputStream in ) throws Exception { \n\t$F29429 ( out1 ) output = new PrintWriter ( out1 ) ; \n\tTagParser parser = new TagParser ( this ) ; \n\tSWFReader reader = new SWFReader ( parser , in ) ; \n\treader . readFile ( ) ; \n\t$F59 ( in ) sizeCount = reader . size ; \n\tfinal String ret = NUM00 + ( headerstr . isEmpty ( ) ? NUM00 : NUM00 + headerstr + NUM00 ) + out1 . toString ( ) + NUM00 ; \n\treturn ret ; \n\t} \n"}, {"code": "public void write ( ClassFile classFile , File f ) throws IOException { \n\t$F4649 ( f_out , f ) try { \n\t\twrite ( classFile , f_out ) ; \n\t\t} \n\t$F3229 ( f_out ) } \n"}, {"code": "public Shape greatCircleLineShape $F72 { \n\tGeneralPath path = null ; \n\tif ( llpts != null && llpts . length >= NUM00 && llpts . length % NUM00 == NUM00 ) { \n\t\tdouble y1 = llpts [ NUM00 ] ; \n\t\tdouble x1 = llpts [ NUM00 ] ; \n\t\tpath = new GeneralPath ( GeneralPath . WIND_EVEN_ODD , llpts . length / NUM00 ) ; \n\t\tboolean firstCoords = _BOOL ; \n\t\tfor ( $F24429 ( i , llpts ) ) { \n\t\t\tdouble y2 = llpts [ i ] ; \n\t\t\tdouble x2 = llpts [ i + NUM00 ] ; \n\t\t\tdouble radDist = GreatCircle . sphericalDistance ( y1 , x1 , y2 , x2 ) ; \n\t\t\tint nsegs = ( int ) ( ProjMath . radToDeg ( radDist ) * segsPerDeg ) ; \n\t\t\t$F85331 ( nsegs ) $F1986 coords = GreatCircle . greatCircle ( y1 , x1 , y2 , x2 , nsegs , _BOOL ) ; \n\t\t\tif ( returnDegrees ) { \n\t\t\t\tProjMath . arrayRadToDeg ( coords ) ; \n\t\t\t\t} \n\t\t\tfor ( int j = NUM00 ; \n\t\t\tj <= coords . length - NUM00 ; \n\t\t\tj += NUM00 ) { \n\t\t\t\tif ( firstCoords ) { \n\t\t\t\t\tpath . moveTo ( coords [ j + NUM00 ] , coords [ j ] ) ; \n\t\t\t\t\tfirstCoords = _BOOL ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tpath . lineTo ( coords [ j + NUM00 ] , coords [ j ] ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tx1 = x2 ; \n\t\t\ty1 = y2 ; \n\t\t\t} \n\t\tif ( returnDegrees ) { \n\t\t\tpath . lineTo ( ProjMath . radToDeg ( x1 ) , ProjMath . radToDeg ( y1 ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tpath . lineTo ( x1 , y1 ) ; \n\t\t\t} \n\t\t} \n\treturn path ; \n\t} \n"}, {"code": "public Connection ( final InetSocketAddress peerAddress ) { \n\tthis ( peerAddress , ( Handshaker ) null ) ; \n\t} \n"}, {"code": "protected static Vector convertToVector ( final $F131 anArray ) { \n\t$F1338 ( anArray ) final Vector v = new Vector ( anArray . length ) ; \n\tfor ( final Object element : anArray ) $F6659 ( v , element ) return v ; \n\t} \n"}, {"code": "protected synchronized void notifyVersion ( SprogVersion v ) { \n\tver = v ; \n\tfor ( SprogVersionListener listener : getCopyOfListeners ( ) ) { \n\t\ttry { \n\t\t\tlistener . notifyVersion ( ver ) ; \n\t\t\tversionListeners . remove ( listener ) ; \n\t\t\t} \n\t\tcatch ( Exception e ) $F63252 ( log , listener , e ) } \n\t} \n"}, {"code": "protected void acceptDrop ( int dropOperation ) { \n\tDropTargetContextPeer peer = getDropTargetContextPeer ( ) ; \n\tif ( peer != null ) { \n\t\tpeer . acceptDrop ( dropOperation ) ; \n\t\t} \n\t} \n"}, {"code": "$F3594 ( oredCriteria , orderByClause , distinct , _BOOL ) "}, {"code": "$F1 public String toString $F72 { \n\tString result ; \n\t$F6947 ( result , super ) if ( m_CapabilitiesFilter != null ) { \n\t\tinitCapabilities ( ) ; \n\t\tif ( m_Capabilities != null ) { \n\t\t\tif ( m_Capabilities . supportsMaybe ( m_CapabilitiesFilter ) && ! m_Capabilities . supports ( m_CapabilitiesFilter ) ) { \n\t\t\t\tresult = NUM00 + MAYBE_SUPPORT + NUM00 + result + NUM00 ; \n\t\t\t\t} \n\t\t\telse if ( ! m_Capabilities . supports ( m_CapabilitiesFilter ) ) { \n\t\t\t\tresult = NUM00 + NO_SUPPORT + NUM00 + result + NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F156045 ( msg , x , super , this ) "}, {"code": "public void splitNode ( KDTreeNode node , int numNodesCreated , $F28974 ( nodeRanges ) , $F28974 ( universe ) ) throws Exception { \n\tcorrectlyInitialized ( ) ; \n\tif ( node . m_NodesRectBounds == null ) { \n\t\tnode . m_NodesRectBounds = new double [ NUM00 ] [ node . m_NodeRanges . length ] ; \n\t\tfor ( int i = NUM00 ; \n\t\ti < node . m_NodeRanges . length ; \n\t\ti ++ ) { \n\t\t\tnode . m_NodesRectBounds [ MIN ] [ i ] = node . m_NodeRanges [ i ] [ MIN ] ; \n\t\t\tnode . m_NodesRectBounds [ MAX ] [ i ] = node . m_NodeRanges [ i ] [ MAX ] ; \n\t\t\t} \n\t\t} \n\tdouble maxRectWidth = Double . NEGATIVE_INFINITY , maxPtWidth = Double . NEGATIVE_INFINITY , tempval ; \n\tint splitDim = - NUM00 , classIdx = m_Instances . classIndex ( ) ; \n\tfor ( int i = NUM00 ; \n\ti < node . m_NodesRectBounds [ NUM00 ] . length ; \n\ti ++ ) { \n\t\t$F73688 ( i , classIdx ) tempval = node . m_NodesRectBounds [ MAX ] [ i ] - node . m_NodesRectBounds [ MIN ] [ i ] ; \n\t\tif ( m_NormalizeNodeWidth ) { \n\t\t\ttempval = tempval / universe [ i ] [ WIDTH ] ; \n\t\t\t} \n\t\tif ( tempval > maxRectWidth && node . m_NodeRanges [ i ] [ WIDTH ] > NUM00 ) maxRectWidth = tempval ; \n\t\t} \n\tfor ( int i = NUM00 ; \n\ti < node . m_NodesRectBounds [ NUM00 ] . length ; \n\ti ++ ) { \n\t\t$F73688 ( i , classIdx ) tempval = node . m_NodesRectBounds [ MAX ] [ i ] - node . m_NodesRectBounds [ MIN ] [ i ] ; \n\t\tif ( m_NormalizeNodeWidth ) { \n\t\t\ttempval = tempval / universe [ i ] [ WIDTH ] ; \n\t\t\t} \n\t\tif ( tempval >= maxRectWidth * ( NUM00 - ERR ) && node . m_NodeRanges [ i ] [ WIDTH ] > NUM00 ) { \n\t\t\tif ( node . m_NodeRanges [ i ] [ WIDTH ] > maxPtWidth ) { \n\t\t\t\tmaxPtWidth = node . m_NodeRanges [ i ] [ WIDTH ] ; \n\t\t\t\tif ( m_NormalizeNodeWidth ) maxPtWidth = maxPtWidth / universe [ i ] [ WIDTH ] ; \n\t\t\t\tsplitDim = i ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tdouble splitVal = node . m_NodesRectBounds [ MIN ] [ splitDim ] + ( node . m_NodesRectBounds [ MAX ] [ splitDim ] - node . m_NodesRectBounds [ MIN ] [ splitDim ] ) * NUM00 ; \n\tif ( splitVal < node . m_NodeRanges [ splitDim ] [ MIN ] ) splitVal = node . m_NodeRanges [ splitDim ] [ MIN ] ; \n\telse if ( splitVal >= node . m_NodeRanges [ splitDim ] [ MAX ] ) splitVal = node . m_NodeRanges [ splitDim ] [ MAX ] - node . m_NodeRanges [ splitDim ] [ WIDTH ] * NUM00 ; \n\tint rightStart = rearrangePoints ( m_InstList , node . m_Start , node . m_End , splitDim , splitVal ) ; \n\tif ( rightStart == node . m_Start || rightStart > node . m_End ) { \n\t\tif ( rightStart == node . m_Start ) throw new Exception ( NUM00 + node . m_NodeNumber + NUM00 + NUM00 + NUM00 ) ; \n\t\telse throw new Exception ( NUM00 + node . m_NodeNumber + NUM00 + NUM00 + NUM00 ) ; \n\t\t} \n\tnode . m_SplitDim = splitDim ; \n\tnode . m_SplitValue = splitVal ; \n\t$F3789 widths = new double [ NUM00 ] [ node . m_NodesRectBounds [ NUM00 ] . length ] ; \n\tSystem . arraycopy ( node . m_NodesRectBounds [ MIN ] , NUM00 , widths [ MIN ] , NUM00 , node . m_NodesRectBounds [ MIN ] . length ) ; \n\tSystem . arraycopy ( node . m_NodesRectBounds [ MAX ] , NUM00 , widths [ MAX ] , NUM00 , node . m_NodesRectBounds [ MAX ] . length ) ; \n\twidths [ MAX ] [ splitDim ] = splitVal ; \n\tnode . m_Left = new KDTreeNode ( numNodesCreated + NUM00 , node . m_Start , rightStart - NUM00 , m_EuclideanDistance . initializeRanges ( m_InstList , node . m_Start , rightStart - NUM00 ) , widths ) ; \n\twidths = new double [ NUM00 ] [ node . m_NodesRectBounds [ NUM00 ] . length ] ; \n\tSystem . arraycopy ( node . m_NodesRectBounds [ MIN ] , NUM00 , widths [ MIN ] , NUM00 , node . m_NodesRectBounds [ MIN ] . length ) ; \n\tSystem . arraycopy ( node . m_NodesRectBounds [ MAX ] , NUM00 , widths [ MAX ] , NUM00 , node . m_NodesRectBounds [ MAX ] . length ) ; \n\twidths [ MIN ] [ splitDim ] = splitVal ; \n\tnode . m_Right = new KDTreeNode ( numNodesCreated + NUM00 , rightStart , node . m_End , m_EuclideanDistance . initializeRanges ( m_InstList , rightStart , node . m_End ) , widths ) ; \n\t} \n"}, {"code": "public Date modifiedDate ( String path ) throws IllegalStateException , IOException , FTPIllegalReplyException , FTPException { \n\tsynchronized ( lock ) { \n\t\t$F34216 ( connected ) $F34216 ( authenticated ) $F158032 ( communication , path ) $F73871 ( r , communication ) touchAutoNoopTimer ( ) ; \n\t\t$F73876 ( r ) $F806 messages = r . getMessages ( ) ; \n\t\tif $F11845 ( messages ) { \n\t\t\tthrow new FTPIllegalReplyException $F72 ; \n\t\t\t} \n\t\telse { \n\t\t\ttry { \n\t\t\t\treturn MDTM_DATE_FORMAT . parse ( messages [ NUM00 ] ) ; \n\t\t\t\t} \n\t\t\tcatch ( ParseException e ) { \n\t\t\t\tthrow new FTPIllegalReplyException $F72 ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean importPkcs8 $F72 $F28110 ( jrbPkcs8 ) "}, {"code": "public ControlFlowGraph run ( CompilationUnitTree root , ProcessingEnvironment env , MethodTree tree , ClassTree classTree ) { \n\tUnderlyingAST underlyingAST = new CFGMethod ( tree , classTree ) ; \n\treturn run ( root , env , underlyingAST ) ; \n\t} \n"}, {"code": "private boolean isValidEngine $F72 { \n\tif ( hasFlag ( ~ ( CLAN_ENGINE | TANK_ENGINE | LARGE_ENGINE | SUPERHEAVY_ENGINE | SUPPORT_VEE_ENGINE ) ) ) { \n\t\t$F11030 ( problem , engineFlags ) return _BOOL ; \n\t\t} \n\tif ( hasFlag ( SUPPORT_VEE_ENGINE ) && ( engineType != STEAM ) && ( engineType != COMBUSTION_ENGINE ) && ( engineType != BATTERY ) && ( engineType != FUEL_CELL ) && ( engineType != SOLAR ) && ( engineType != FISSION ) && ( engineType != NORMAL_ENGINE ) && ( engineType != NONE ) ) $F117250 ( problem , _BOOL ) if ( ( ( $F96308 ( Math , engineRating ) > ENGINE_RATINGS . length ) || ( engineRating < NUM00 ) ) && ! hasFlag ( SUPPORT_VEE_ENGINE ) ) { \n\t\t$F11030 ( problem , engineRating ) return _BOOL ; \n\t\t} \n\tif ( ( engineRating > NUM00 ) && ! hasFlag ( SUPPORT_VEE_ENGINE ) ) { \n\t\tengineFlags |= LARGE_ENGINE ; \n\t\t} \n\tswitch ( engineType ) { \n\t\tcase COMBUSTION_ENGINE : case NORMAL_ENGINE : case XL_ENGINE : case XXL_ENGINE : case FUEL_CELL : case NONE : case MAGLEV : case BATTERY : case SOLAR : $F597 case COMPACT_ENGINE : if ( hasFlag ( LARGE_ENGINE ) ) { \n\t\t\t$F189165 ( problem , Messages ) return _BOOL ; \n\t\t\t} \n\t\t$F597 case LIGHT_ENGINE : case FISSION : if ( hasFlag ( CLAN_ENGINE ) ) { \n\t\t\t$F189165 ( problem , Messages ) return _BOOL ; \n\t\t\t} \n\t\t$F597 $F1267 $F11030 ( problem , engineType ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "static public void assertEquals ( String message , float expected , float actual , float delta ) $F62540 ( Float , expected , actual , failNotEquals , message , Math , delta ) "}, {"code": "private void calculateD $F9830 ( b ) { \n\t$F40484 ( length , mExtremalIndices ) $F10254 ( mD , length ) for ( $F119 ( k , length ) ) { \n\t\tmD [ k ] = b [ k ] * ( mGrid . getCosineFrequencyGrid ( ) [ mExtremalIndices . get ( k ) ] - mGrid . getCosineFrequencyGrid ( ) [ mExtremalIndices . get ( length ) ] ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F96 base64decode ( String coded ) { \n\tif ( null == coded ) $F1274 $F39526 ( src , coded ) int len = src . length ; \n\tint dlen = len - ( len / NUM00 ) ; \n\tdlen = $F14870 ( dlen ) + $F14870 ( dlen ) ; \n\tint rem = NUM00 ; \n\tif ( NUM00 == src [ len - NUM00 ] ) rem ++ ; \n\tif ( NUM00 == src [ len - NUM00 ] ) rem ++ ; \n\tdlen -= rem ; \n\t$F2175 ( dst , dlen ) int pos = NUM00 ; \n\tint dpos = NUM00 ; \n\tint col = NUM00 ; \n\tlen -= NUM00 ; \n\twhile ( pos < len ) { \n\t\tbyte b0 = _base64de [ src [ pos ++ ] ] ; \n\t\tbyte b1 = _base64de [ src [ pos ++ ] ] ; \n\t\tbyte b2 = _base64de [ src [ pos ++ ] ] ; \n\t\tbyte b3 = _base64de [ src [ pos ++ ] ] ; \n\t\tif ( B64INV == b0 || B64INV == b1 || B64INV == b2 || B64INV == b3 ) $F1665 ( pos ) dst [ dpos ++ ] = ( byte ) ( ( b0 < < NUM00 ) | $F97528 ( b1 ) ) ; \n\t\tdst [ dpos ++ ] = ( byte ) ( ( b1 < < NUM00 ) | $F97528 ( b2 ) ) ; \n\t\tdst [ dpos ++ ] = ( byte ) ( ( b2 < < NUM00 ) | ( b3 & NUM00 ) ) ; \n\t\tcol += NUM00 ; \n\t\tif ( NUM00 == col ) { \n\t\t\tif ( NUM00 != src [ pos ++ ] ) throw new RuntimeException ( NUM00 + ( pos - NUM00 ) ) ; \n\t\t\tcol = NUM00 ; \n\t\t\t} \n\t\t} \n\tbyte b0 = _base64de [ src [ pos ++ ] ] ; \n\tbyte b1 = _base64de [ src [ pos ++ ] ] ; \n\tbyte b2 = _base64de [ src [ pos ++ ] ] ; \n\tbyte b3 = _base64de [ src [ pos ++ ] ] ; \n\tif ( B64INV == b0 || B64INV == b1 || B64INV == b2 || B64INV == b3 ) $F1665 ( pos ) dst [ dpos ++ ] = ( byte ) ( ( b0 < < NUM00 ) | $F97528 ( b1 ) ) ; \n\tif ( NUM00 == rem ) return dst ; \n\tdst [ dpos ++ ] = ( byte ) ( ( b1 < < NUM00 ) | $F97528 ( b2 ) ) ; \n\tif ( NUM00 == rem ) return dst ; \n\tdst [ dpos ++ ] = ( byte ) ( ( b2 < < NUM00 ) | ( b3 & NUM00 ) ) ; \n\treturn dst ; \n\t} \n"}, {"code": "private static Properties loadProperties ( String propertiesFile ) { \n\t$F2697 ( properties ) try ( $F24408 ( is , propertiesFile ) ) $F46567 ( properties , is ) $F7078 ( e ) return properties ; \n\t} \n"}, {"code": "public TextEditor replaceAll ( Pattern pattern , Replacement replacement ) { \n\t$F1150 ( m , pattern , text ) int lastIndex = NUM00 ; \n\t$F83 ( sb ) while $F281 ( m ) { \n\t\tsb . append ( text . subSequence ( lastIndex , m . start ( ) ) ) ; \n\t\tsb . append ( replacement . replacement ( m ) ) ; \n\t\t$F204945 ( lastIndex , m ) } \n\tsb . append ( text . subSequence ( lastIndex , text . length ( ) ) ) ; \n\ttext = sb ; \n\treturn this ; \n\t} \n"}, {"code": "public Map < String , $F2539 > list ( String serviceName ) { \n\tMap < String , $F2539 > results = new HashMap < String , $F2539 > $F72 ; \n\tServiceInfo [ ] infos = jmdns . list ( NUM00 + serviceName + NUM00 ) ; \n\tfor ( ServiceInfo info : infos ) { \n\t\t_log . info ( NUM00 , info ) ; \n\t\tfinal $F806 hostAddrs = info . getHostAddresses ( ) ; \n\t\t$F3239 ( buf ) for ( String hostAddr : hostAddrs ) $F444 ( buf , hostAddr ) $F52199 ( key , buf ) $F10635 ( _log , key ) final $F2539 values = $F12080 ; \n\t\tfor ( $F14937 e = info . getPropertyNames ( ) ; \n\t\te . hasMoreElements ( ) ; \n\t\t) { \n\t\t\tfinal String prop = e . nextElement ( ) ; \n\t\t\tfinal String value = new String ( info . getPropertyBytes ( prop ) ) ; \n\t\t\t$F21153 ( _log , prop , value ) values . put ( prop , value ) ; \n\t\t\t} \n\t\tif $F2979 ( values ) $F23016 ( _log , key ) results . put ( key , values . isEmpty ( ) ? null : values ) ; \n\t\t} \n\treturn results ; \n\t} \n"}, {"code": "$F22330 $F1 default LazyFutureStream $F30939 concat ( final Stream < ? extends U > other ) { \n\treturn fromStream ( Stream . concat ( StreamSupport . stream ( Spliterators . spliteratorUnknownSize ( iterator ( ) , Spliterator . ORDERED ) , _BOOL ) , StreamSupport . stream ( Spliterators . spliteratorUnknownSize ( other . iterator ( ) , Spliterator . ORDERED ) , _BOOL ) ) ) ; \n\t} \n"}, {"code": "private int moveComponents ( Container target , int x , int y , int width , int height , int rowStart , int rowEnd , boolean ltr , boolean useBaseline , $F2027 ascent , $F2027 descent ) { \n\tswitch ( newAlign ) { \n\t\tcase LEFT : x += ltr ? NUM00 : width ; \n\t\t$F597 case CENTER : x += width / NUM00 ; \n\t\t$F597 case RIGHT : x += ltr ? width : NUM00 ; \n\t\t$F597 case LEADING : $F597 case TRAILING : x += width ; \n\t\t$F597 } \n\tint maxAscent = NUM00 ; \n\tint nonbaselineHeight = NUM00 ; \n\tint baselineOffset = NUM00 ; \n\tif ( useBaseline ) { \n\t\tint maxDescent = NUM00 ; \n\t\tfor ( int i = rowStart ; \n\t\ti < rowEnd ; \n\t\ti ++ ) { \n\t\t\t$F201892 ( m , target , i ) if ( m . visible ) { \n\t\t\t\tif ( ascent [ i ] >= NUM00 ) { \n\t\t\t\t\tmaxAscent = Math . max ( maxAscent , ascent [ i ] ) ; \n\t\t\t\t\tmaxDescent = Math . max ( maxDescent , descent [ i ] ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tnonbaselineHeight = Math . max ( m . getHeight ( ) , nonbaselineHeight ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\theight = Math . max ( maxAscent + maxDescent , nonbaselineHeight ) ; \n\t\tbaselineOffset = ( height - maxAscent - maxDescent ) / NUM00 ; \n\t\t} \n\tfor ( int i = rowStart ; \n\ti < rowEnd ; \n\ti ++ ) { \n\t\t$F201892 ( m , target , i ) if $F201893 ( m ) { \n\t\t\tint cy ; \n\t\t\tif ( useBaseline && ascent [ i ] >= NUM00 ) { \n\t\t\t\tcy = y + baselineOffset + maxAscent - ascent [ i ] ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tcy = y + ( height - m . height ) / NUM00 ; \n\t\t\t\t} \n\t\t\tif ( ltr ) { \n\t\t\t\tm . setLocation ( x , cy ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tm . setLocation ( target . width - x - m . width , cy ) ; \n\t\t\t\t} \n\t\t\tx += m . width + hgap ; \n\t\t\t} \n\t\t} \n\treturn height ; \n\t} \n"}, {"code": "$F1 public void readExternal ( ObjectInput in ) throws IOException { \n\tpath = IgfsUtils . readPath ( in ) ; \n\t$F5961 ( blockSize , in ) $F33039 ( grpBlockSize , in ) $F33039 ( len , in ) props = U . readStringMap ( in ) ; \n\t$F33039 ( accessTime , in ) $F33039 ( modificationTime , in ) $F1643 ( flags , in ) } \n"}, {"code": "public StandardXYItemLabelGenerator $F72 { \n\tthis ( DEFAULT_ITEM_LABEL_FORMAT , NumberFormat . getNumberInstance ( ) , NumberFormat . getNumberInstance ( ) ) ; \n\t} \n"}, {"code": "public Vector2 ( double direction ) { \n\tthis . x = Math . cos ( direction ) ; \n\tthis . y = Math . sin ( direction ) ; \n\t} \n"}, {"code": "public static $F529 convertDocumentFileToFile $F71242 ( dctx , context ) { \n\tXMultiComponentFactory xmulticomponentfactory = null ; \n\t$F28495 ( stringUrl , context ) $F28495 ( stringConvertedFile , context ) $F28495 ( inputMimeType , context ) $F28495 ( outputMimeType , context ) $F28495 ( oooHost , context ) $F28495 ( oooPort , context ) try { \n\t\txmulticomponentfactory = OpenOfficeWorker . getRemoteServer ( oooHost , oooPort ) ; \n\t\t$F1705 ( inputFile , stringUrl ) $F6466 ( fileSize , inputFile ) $F4647 ( fis , inputFile ) ByteArrayOutputStream baos = new ByteArrayOutputStream $F1047 ( fileSize ) ; \n\t\tint c ; \n\t\t$F254305 ( c , fis , baos ) OpenOfficeByteArrayInputStream oobais = new OpenOfficeByteArrayInputStream $F87573 ( baos ) ; \n\t\tOpenOfficeByteArrayOutputStream oobaos = OpenOfficeWorker . convertOODocByteStreamToByteStream ( xmulticomponentfactory , oobais , inputMimeType , outputMimeType ) ; \n\t\t$F4649 ( fos , stringConvertedFile ) $F1569 ( fos , oobaos ) $F59 ( fos ) $F59 ( fis ) $F59 ( oobais ) $F59 ( oobaos ) $F254313 ( results , ServiceUtil ) return results ; \n\t\t} \n\t$F108926 ( Debug , e , module , ServiceUtil ) $F254315 ( Debug , e , module , ServiceUtil ) } \n"}, {"code": "public double adjustedPow10 ( double val ) { \n\tboolean negFlag = ( val < NUM00 ) ; \n\t$F96183 ( negFlag , val ) double res ; \n\tif ( val < NUM00 ) { \n\t\tres = ( Math . pow ( NUM00 , val + NUM00 ) - NUM00 ) / NUM00 ; \n\t\t} \n\telse { \n\t\tres = Math . pow ( NUM00 , val ) ; \n\t\t} \n\treturn negFlag ? ( - res ) : res ; \n\t} \n"}, {"code": "$F1 public void clear $F72 $F115274 ( columnList ) "}, {"code": "public boolean isLastInvoice $F72 $F115042 ( cm , getCostingMethod , COSTINGMETHOD_LastInvoice ) "}, {"code": "public static void proxyPort ( final int port ) { \n\tfinal String portValue = Integer . toString ( port ) ; \n\tsetProperty ( NUM00 , portValue ) ; \n\tsetProperty ( NUM00 , portValue ) ; \n\t} \n"}, {"code": "public static String fetchClusterName ( String clusterCgName ) { \n\tString clusterName = null ; \n\tif $F1032 ( clusterCgName ) { \n\t\t$F35105 ( tmp , clusterCgName , SPLITTER ) clusterName = tmp [ NUM00 ] ; \n\t\t} \n\treturn clusterName ; \n\t} \n"}, {"code": "private void fetchMyServiceCardsFromServer $F72 { \n\tRetroCallback retroCallback ; \n\tretroCallback = new RetroCallback ( this ) ; \n\tretroCallback . setRequestId ( HttpConstants . ApiResponseCodes . GET_MY_SERVICES ) ; \n\tretroCallbackList . add ( retroCallback ) ; \n\tmYeloApi . getMyServiceCards ( retroCallback ) ; \n\t} \n"}, {"code": "public DViewAsymmetricKeyFields ( JDialog parent , String title , RSAPublicKey rsaPublicKey ) { \n\tsuper ( parent , title , Dialog . ModalityType . DOCUMENT_MODAL ) ; \n\tkey = rsaPublicKey ; \n\tinitFields ( ) ; \n\t} \n"}, {"code": "public List < ColourChange > sampleConditionalMigrationEvents2 ( int parentColour , double parentHeight , int childColour , double childHeight , $F1986 m ) { \n\tList < ColourChange > colourChanges = new ArrayList < ColourChange > $F72 ; \n\tif ( parentHeight < childHeight ) $F60154 ( parentHeight , childHeight ) try { \n\t\tint currentColour = parentColour ; \n\t\tdouble currentHeight = parentHeight ; \n\t\twhile ( _BOOL ) { \n\t\t\tColourChange nextEvent = randomConditionalMigrationEvent ( currentColour , currentHeight , childColour , childHeight , m ) ; \n\t\t\t$F36868 ( currentHeight , nextEvent ) currentColour = nextEvent . getColourAbove ( ) ; \n\t\t\tcolourChanges . add ( nextEvent ) ; \n\t\t\t} \n\t\t} \n\tcatch ( NoEventException nee ) $F845 reverseColourChangeList ( colourChanges , parentColour ) ; \n\treturn colourChanges ; \n\t} \n"}, {"code": "public static boolean isAttribute ( Object objValue ) { \n\tif ( objValue instanceof String ) { \n\t\t$F71197 ( stringValue , objValue ) if ( stringValue . startsWith ( ATTRIBUTE_START ) && stringValue . endsWith ( ATTRIBUTE_END ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static String decodeASCII $F41456 ( key , off , len ) { \n\t$F4727 ( b , len ) $F21535 ( System , key , off , b , len ) for ( $F119 ( i , len ) ) { \n\t\tb [ i ] = decodeByte ( b [ i ] ) ; \n\t\t} \n\ttry { \n\t\t$F34259 ( b ) } \n\t$F91725 ( e ) } \n"}, {"code": "$F1 public void valueChanged ( TreeSelectionEvent e ) { \n\t$F7254 ( preventEvent ) if ( mainFrame != null ) { \n\t\tList < Operator > selectedOperators = getSelectedOperators ( ) ; \n\t\tif $F1032 ( selectedOperators ) { \n\t\t\tmainFrame . selectOperators ( selectedOperators ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public synchronized void removePropertyChangeListener ( PropertyChangeListener listener ) $F106 ( listeners , listener ) "}, {"code": "final boolean transferAfterCancelledWait ( Node node ) { \n\tif ( compareAndSetWaitStatus ( node , Node . CONDITION , NUM00 ) ) $F9278 ( enq , node , _BOOL ) while ( ! isOnSyncQueue ( node ) ) $F5756 ( Thread ) return _BOOL ; \n\t} \n"}, {"code": "private static Intent createShareIntent ( Context context , final String shareText ) { \n\tfinal Intent shareIntent = new Intent ( Intent . ACTION_SEND ) ; \n\tshareIntent . putExtra ( android . content . Intent . EXTRA_SUBJECT , context . getString ( R . string . share_subject ) ) ; \n\tshareIntent . putExtra ( android . content . Intent . EXTRA_TEXT , shareText ) ; \n\t$F146148 ( shareIntent ) return shareIntent ; \n\t} \n"}, {"code": "public static $F30939 AtomicIntegerFieldUpdater $F30939 newUpdater ( Class $F30939 tclass , String fieldName ) { \n\tif ( UnsafeHolder . isAvailable ( ) ) { \n\t\treturn new AtomicIntegerFieldUpdaterImpl $F30939 ( tclass , fieldName ) ; \n\t\t} \n\treturn AtomicIntegerFieldUpdater . newUpdater ( tclass , fieldName ) ; \n\t} \n"}, {"code": "private boolean tryStep ( final double t0 , final $F1986 y0 , final double step , final int k , final $F1986 scale , final $F3789 f , final $F1986 yMiddle , final $F1986 yEnd ) throws MathIllegalArgumentException , MathIllegalStateException { \n\tfinal int n = sequence [ k ] ; \n\tfinal double subStep = step / n ; \n\tfinal double subStep2 = NUM00 * subStep ; \n\tdouble t = t0 + subStep ; \n\tfor ( $F9808 ( i , y0 ) ) { \n\t\tyEnd [ i ] = y0 [ i ] + subStep * f [ NUM00 ] [ i ] ; \n\t\t} \n\tf [ NUM00 ] = computeDerivatives ( t , yEnd ) ; \n\tfinal $F1986 yTmp = y0 . clone ( ) ; \n\tfor ( $F1316 ( j , n ) ) { \n\t\tif ( NUM00 * j == n ) { \n\t\t\tSystem . arraycopy ( yEnd , NUM00 , yMiddle , NUM00 , y0 . length ) ; \n\t\t\t} \n\t\tt += subStep ; \n\t\tfor ( $F9808 ( i , y0 ) ) { \n\t\t\tfinal double middle = yEnd [ i ] ; \n\t\t\tyEnd [ i ] = yTmp [ i ] + subStep2 * f [ j ] [ i ] ; \n\t\t\tyTmp [ i ] = middle ; \n\t\t\t} \n\t\tf [ j + NUM00 ] = computeDerivatives ( t , yEnd ) ; \n\t\tif ( performTest && ( j <= maxChecks ) && ( k < maxIter ) ) { \n\t\t\tdouble initialNorm = NUM00 ; \n\t\t\tfor ( $F9808 ( l , scale ) ) { \n\t\t\t\tfinal double ratio = f [ NUM00 ] [ l ] / scale [ l ] ; \n\t\t\t\tinitialNorm += ratio * ratio ; \n\t\t\t\t} \n\t\t\tdouble deltaNorm = NUM00 ; \n\t\t\tfor ( $F9808 ( l , scale ) ) { \n\t\t\t\tfinal double ratio = ( f [ j + NUM00 ] [ l ] - f [ NUM00 ] [ l ] ) / scale [ l ] ; \n\t\t\t\tdeltaNorm += ratio * ratio ; \n\t\t\t\t} \n\t\t\tif ( deltaNorm > NUM00 * FastMath . max ( NUM00 , initialNorm ) ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tfor ( $F9808 ( i , y0 ) ) { \n\t\tyEnd [ i ] = NUM00 * ( yTmp [ i ] + yEnd [ i ] + subStep * f [ n ] [ i ] ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F103859 ( data , results , key ) "}, {"code": "private static $F7329 offsetLSR $F68514 ( offset , environment , instructions , registerNodeValue1 , registerNodeValue2 , immediateNodeValue ) { \n\t$F7336 ( address , environment ) $F7336 ( tmpVar1 , environment ) $F7336 ( tmpVar2 , environment ) $F7336 ( index , environment ) long baseOffset = offset ; \n\tinstructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dw , registerNodeValue2 , dw , NUM00 + immediateNodeValue , qw , tmpVar1 ) ) ; \n\t$F7364 ( instructions , ReilHelpers , baseOffset , qw , tmpVar1 , dw , dWordBitMask , index ) $F43828 ( instructions , ReilHelpers , baseOffset , dw , registerNodeValue1 , index , tmpVar2 ) $F7341 ( instructions , ReilHelpers , baseOffset , dw , tmpVar2 , dWordBitMask , address ) $F7348 ( address , registerNodeValue1 ) } \n"}, {"code": "public static RowLimitSpec buildRowLimitSpec ( EsperEPL2GrammarParser . RowLimitContext ctx ) { \n\tObject numRows ; \n\tObject offset ; \n\tif ( ctx . o != null ) { \n\t\tnumRows = parseNumOrVariableIdent ( ctx . n1 , ctx . i1 ) ; \n\t\toffset = parseNumOrVariableIdent ( ctx . n2 , ctx . i2 ) ; \n\t\t} \n\telse if ( ctx . c != null ) { \n\t\toffset = parseNumOrVariableIdent ( ctx . n1 , ctx . i1 ) ; \n\t\tnumRows = parseNumOrVariableIdent ( ctx . n2 , ctx . i2 ) ; \n\t\t} \n\telse { \n\t\tnumRows = parseNumOrVariableIdent ( ctx . n1 , ctx . i1 ) ; \n\t\toffset = null ; \n\t\t} \n\tInteger numRowsInt = null ; \n\tString numRowsVariable = null ; \n\tif ( numRows instanceof String ) $F80631 ( numRowsVariable , numRows ) else { \n\t\tnumRowsInt = ( Integer ) numRows ; \n\t\t} \n\tInteger offsetInt = null ; \n\tString offsetVariable = null ; \n\tif ( offset instanceof String ) $F80631 ( offsetVariable , offset ) else { \n\t\toffsetInt = ( Integer ) offset ; \n\t\t} \n\treturn new RowLimitSpec ( numRowsInt , offsetInt , numRowsVariable , offsetVariable ) ; \n\t} \n"}, {"code": "public final int first_common_layer ( BrdItem p_other ) { \n\tint max_first_layer = Math . max ( $F120503 ( first_layer , p_other ) ) ; \n\tint min_last_layer = $F203679 ( Math , last_layer , p_other ) ; \n\t$F81007 ( max_first_layer , min_last_layer ) return max_first_layer ; \n\t} \n"}, {"code": "public ItemStack removeItems ( ItemStack drive , ItemStack stack , int amountWanted ) { \n\tif ( getMaxKilobits ( drive ) == - NUM00 ) $F1274 int stored = getAmountStored ( drive , stack ) ; \n\t$F17565 ( amountGiven , Math , amountWanted , stored ) if ( amountGiven > NUM00 ) { \n\t\tsetAmountStored ( drive , stack , stored - amountGiven ) ; \n\t\tstack . stackSize += amountGiven ; \n\t\tmarkDirty ( drive ) ; \n\t\t} \n\treturn stack ; \n\t} \n"}, {"code": "public void saveIndexes $F72 { \n\t$F12181 ( toSave ) synchronized ( this ) { \n\t\t$F131 valueTable = this . indexes . valueTable ; \n\t\tfor ( $F151668 ( i , l , valueTable ) ) { \n\t\t\tIndex index = ( Index ) valueTable [ i ] ; \n\t\t\t$F67023 ( index , toSave ) } \n\t\t} \n\tboolean allSaved = _BOOL ; \n\tfor ( $F62958 ( i , length , toSave ) ) { \n\t\tIndex index = ( Index ) toSave . get ( i ) ; \n\t\tReadWriteMonitor monitor = index . monitor ; \n\t\t$F45557 ( monitor ) try { \n\t\t\tmonitor . enterRead ( ) ; \n\t\t\tif ( index . hasChanged ( ) ) { \n\t\t\t\tif ( monitor . exitReadEnterWrite ( ) ) { \n\t\t\t\t\ttry { \n\t\t\t\t\t\tsaveIndex ( index ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\tcatch ( IOException e ) { \n\t\t\t\t\t\tif ( JobManager . VERBOSE ) { \n\t\t\t\t\t\t\tUtil . verbose ( NUM00 , System . err ) ; \n\t\t\t\t\t\t\t$F301 ( e ) } \n\t\t\t\t\t\tallSaved = _BOOL ; \n\t\t\t\t\t\t} \n\t\t\t\t\tfinally { \n\t\t\t\t\t\tmonitor . exitWriteEnterRead ( ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tallSaved = _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tfinally { \n\t\t\tmonitor . exitRead ( ) ; \n\t\t\t} \n\t\t} \n\tif ( this . participantsContainers != null && this . participantUpdated ) { \n\t\twriteParticipantsIndexNamesFile ( ) ; \n\t\tthis . participantUpdated = _BOOL ; \n\t\t} \n\tthis . needToSave = ! allSaved ; \n\t} \n"}, {"code": "public void addItem ( Artist artist , int position ) { \n\t$F1149 ( artist ) if ( position < getItemCount ( ) || position > getItemCount ( ) ) $F824 artists . add ( position , artist ) ; \n\tnotifyItemInserted ( position ) ; \n\t} \n"}, {"code": "public Process executeAsync ( final CommandLine command , $F2540 ( environment ) ) throws IOException { \n\tif $F271542 ( workingDirectory ) $F124393 ( workingDirectory ) return executeInternal ( command , environment , workingDirectory , streamHandler , null ) ; \n\t} \n"}, {"code": "public void expandAndSelectIfExists ( RepositoryLocation location ) { \n\tif ( location . parent ( ) != null ) { \n\t\texpandIfExists ( location . parent ( ) , location . getName ( ) ) ; \n\t\t} \n\telse $F11707 ( expandIfExists , location ) scrollPathToVisible ( getSelectionPath ( ) ) ; \n\t} \n"}, {"code": "public void nextToken $F72 { \n\tpreviousLine = line ; \n\tpreviousColumn = column ; \n\twhile ( pos < matcher . regionStart ( ) ) { \n\t\tif $F11983 ( text , pos ) { \n\t\t\t++ line ; \n\t\t\tcolumn = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\t++ column ; \n\t\t\t} \n\t\t++ pos ; \n\t\t} \n\tif ( matcher . regionStart ( ) == matcher . regionEnd ( ) ) { \n\t\tcurrentToken = NUM00 ; \n\t\t} \n\telse { \n\t\tmatcher . usePattern ( TOKEN ) ; \n\t\tif $F54321 ( matcher ) { \n\t\t\tcurrentToken = matcher . group ( ) ; \n\t\t\tmatcher . region ( matcher . end ( ) , matcher . regionEnd ( ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tcurrentToken = $F54327 ( String , text , pos ) ; \n\t\t\tmatcher . region ( pos + NUM00 , matcher . regionEnd ( ) ) ; \n\t\t\t} \n\t\tskipWhitespace ( ) ; \n\t\t} \n\t} \n"}, {"code": "public static void saveProvisioningValidity ( Context context , long validity ) { \n\t$F36109 ( validity ) $F52855 ( next , System , validity ) SharedPreferences preferences = context . getSharedPreferences ( AndroidRegistryFactory . RCS_PREFS_NAME , Activity . MODE_PRIVATE ) ; \n\t$F37526 ( editor , preferences ) editor . putLong ( REGISTRY_PROVISIONING_VALIDITY , validity ) ; \n\teditor . putLong ( REGISTRY_PROVISIONING_EXPIRATION , next ) ; \n\t$F17621 ( editor ) } \n"}, {"code": "public void encode ( OutputStream out ) throws IOException { \n\t$F19904 ( tmp ) if $F73719 ( this ) { \n\t\tthis . extensionId = PKIXExtensions . ReasonCode_Id ; \n\t\tthis . critical = _BOOL ; \n\t\tencodeThis ( ) ; \n\t\t} \n\tsuper . encode ( tmp ) ; \n\t$F1569 ( out , tmp ) } \n"}, {"code": "public DriverTask unexportVolumesFromInitiators ( $F15661 initiators , List < StorageVolume > volumes ) { \n\t$F973 ( LOG ) DriverTask task = new DellSCDriverTask $F580 ; \n\tScServer server = null ; \n\t$F83 ( errBuffer ) int volumesUnmapped = NUM00 ; \n\tfor ( StorageVolume volume : volumes ) { \n\t\tString ssn = volume . getStorageSystemId ( ) ; \n\t\tboolean isSnapshot = StringUtils . countMatches ( volume . getNativeId ( ) , NUM00 ) == NUM00 ; \n\t\ttry { \n\t\t\tStorageCenterAPI api = connectionManager . getConnection ( ssn ) ; \n\t\t\tScVolume scVol = null ; \n\t\t\tif ( isSnapshot ) { \n\t\t\t\tscVol = api . findReplayView ( volume . getNativeId ( ) ) ; \n\t\t\t\tif ( scVol != null ) { \n\t\t\t\t\tapi . deleteVolume ( scVol . instanceId ) ; \n\t\t\t\t\tvolumesUnmapped ++ ; \n\t\t\t\t\t$F598 } \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tscVol = api . getVolume ( volume . getNativeId ( ) ) ; \n\t\t\t\t} \n\t\t\tif ( scVol == null ) { \n\t\t\t\tthrow new DellSCDriverException ( String . format ( NUM00 , volume . getNativeId ( ) ) ) ; \n\t\t\t\t} \n\t\t\t$F63621 ( server , findScServer , api , ssn , initiators ) if ( server == null ) { \n\t\t\t\tthrow new DellSCDriverException ( SERVER_CREATE_FAIL_MSG ) ; \n\t\t\t\t} \n\t\t\tScMappingProfile [ ] mappingProfiles = api . findMappingProfiles ( server . instanceId , scVol . instanceId ) ; \n\t\t\tfor ( ScMappingProfile mappingProfile : mappingProfiles ) { \n\t\t\t\tapi . deleteMappingProfile ( mappingProfile . instanceId ) ; \n\t\t\t\t} \n\t\t\tvolumesUnmapped ++ ; \n\t\t\tLOG . info ( NUM00 , scVol . name , server . name ) ; \n\t\t\t} \n\t\tcatch ( $F193202 dex ) { \n\t\t\tString error = String . format ( NUM00 , volume . getDisplayName ( ) , dex ) ; \n\t\t\tLOG . error ( error ) ; \n\t\t\t$F64611 ( errBuffer , String , error ) if ( SERVER_CREATE_FAIL_MSG . equals ( dex . getMessage ( ) ) ) $F5153 } \n\t\t} \n\ttask . setMessage ( errBuffer . toString ( ) ) ; \n\tif $F25745 ( volumesUnmapped , volumes ) $F193217 ( task , TaskStatus ) else if ( volumesUnmapped == NUM00 ) { \n\t\t$F193219 ( task , TaskStatus ) } \n\telse $F193223 ( task , TaskStatus ) return task ; \n\t} \n"}, {"code": "public void createClusterAsync ( final String projectId , final ClusterCreateSpec clusterCreateSpec , $F67201 ( responseCallback ) ) throws IOException { \n\t$F67207 ( path , String , getBasePath , projectId ) createObjectAsync ( path , serializeObjectAsJson ( clusterCreateSpec ) , responseCallback ) ; \n\t} \n"}, {"code": "public static DereferenceAliasesPolicy valueOf ( final int intValue ) { \n\tif $F41457 ( intValue , ELEMENTS ) $F1337 return ELEMENTS [ intValue ] ; \n\t} \n"}, {"code": "public void testGetNamedItemNS2 $F72 throws Throwable { \n\tDocument doc ; \n\tNamedNodeMap attributes ; \n\tNode element ; \n\tAttr attribute ; \n\tNodeList elementList ; \n\tString attrName ; \n\t$F236 ( doc , load , builder ) $F103343 ( elementList , doc ) $F238 ( element , elementList ) $F35323 ( attributes , element ) attribute = ( Attr ) $F186021 ( attributes ) ; \n\t$F89257 ( attrName , attribute ) assertEquals ( NUM00 , NUM00 , attrName ) ; \n\t} \n"}, {"code": "public static void writeUnsafe ( PacketOutputStream out , String value , boolean noBackslashEscapes ) throws IOException { \n\t$F151317 ( bytes , value ) out . writeUnsafe ( QUOTE ) ; \n\twriteBytesEscapedUnsafe ( out , bytes , bytes . length , noBackslashEscapes ) ; \n\tout . writeUnsafe ( QUOTE ) ; \n\t} \n"}, {"code": "public void add ( final SAMRecord read , final int position ) { \n\trecordAndOffsets . add ( new RecordAndOffset ( read , position ) ) ; \n\t} \n"}, {"code": "private Sha256Hash calculateHash $F72 { \n\ttry { \n\t\tByteArrayOutputStream bos = new UnsafeByteArrayOutputStream ( HEADER_SIZE ) ; \n\t\twriteHeader ( bos ) ; \n\t\treturn new Sha256Hash ( Utils . reverseBytes ( doubleDigest ( bos . toByteArray ( ) ) ) ) ; \n\t\t} \n\t$F12153 ( e ) } \n"}, {"code": "private void addPropertyType ( URI p , Resource t ) { \n\tOwlProperty prop = getProperty ( p ) ; \n\tif ( t . equals ( OWL . TRANSITIVEPROPERTY ) ) { \n\t\tprop . setTransitive ( ) ; \n\t\t} \n\telse if ( t . equals ( OWL . SYMMETRICPROPERTY ) ) { \n\t\tprop . setSymmetric ( ) ; \n\t\t} \n\telse if ( t . equals ( OWL2 . ASYMMETRICPROPERTY ) ) { \n\t\tprop . setAsymmetric ( ) ; \n\t\t} \n\telse if ( t . equals ( OWL . FUNCTIONALPROPERTY ) ) { \n\t\tprop . setFunctional ( ) ; \n\t\t} \n\telse if ( t . equals ( OWL . INVERSEFUNCTIONALPROPERTY ) ) { \n\t\tprop . setInverseFunctional ( ) ; \n\t\t} \n\telse if ( t . equals ( OWL2 . IRREFLEXIVEPROPERTY ) ) { \n\t\tprop . setIrreflexive ( ) ; \n\t\t} \n\t} \n"}, {"code": "public static void equals ( Object object1 , Object object2 ) { \n\tcheckAssertion ( object1 . equals ( object2 ) , null ) ; \n\t} \n"}, {"code": "public static String writeActionsToString ( OFInstructionWriteActions inst , Logger log ) throws Exception { \n\treturn ActionUtils . actionsToString ( inst . getActions ( ) , log ) ; \n\t} \n"}, {"code": "protected void preAddInterruptibly ( Object o ) throws InterruptedException $F845 "}, {"code": "public static String encodeLines ( $F96 in , int iOff , int iLen , int lineLen , String lineSeparator ) { \n\tint blockLen = ( lineLen * NUM00 ) / NUM00 ; \n\t$F61934 ( blockLen ) $F61936 ( lines , iLen , blockLen ) int bufLen = $F61937 ( iLen ) * NUM00 + lines * lineSeparator . length ( ) ; \n\t$F7542 ( buf , bufLen ) int ip = NUM00 ; \n\twhile ( ip < iLen ) { \n\t\t$F55158 ( l , Math , iLen , ip , blockLen ) buf . append ( encode ( in , iOff + ip , l ) ) ; \n\t\tbuf . append ( lineSeparator ) ; \n\t\tip += l ; \n\t\t} \n\t$F92 ( buf ) } \n"}, {"code": "private ODataFeed readFeedLogPerf $F5805 ( query , params ) throws IOException , ODataException { \n\t$F657 ( delta_time , System ) ODataFeed feed = client . readFeed ( query , params ) ; \n\tlog ( Level . DEBUG , NUM00 + query + NUM00 + delta_time + NUM00 ) ; \n\treturn feed ; \n\t} \n"}, {"code": "final int rllong ( DataInputStream dis ) throws IOException { \n\tint b1 , b2 , b3 , b4 ; \n\tint i = NUM00 ; \n\t$F5961 ( i , dis ) $F3252 ( b1 , i ) $F3252 ( b2 , i ) $F145783 ( b3 , i ) ; \n\tb4 = ( i & NUM00 ) > > > NUM00 ; \n\ti = ( b1 | b2 | b3 | b4 ) ; \n\treturn i ; \n\t} \n"}, {"code": "public void testShiftRight4 $F72 { \n\t$F17888 int aSign = NUM00 ; \n\tint number = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , NUM00 , - NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F86501 ( result , aNumber , number ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public Dependencies resolveFromFile ( File file , String className , SootClass sc ) { \n\tDexlibWrapper wrapper = cache . get ( file ) ; \n\tif ( wrapper == null ) { \n\t\twrapper = new DexlibWrapper ( file ) ; \n\t\tcache . put ( file , wrapper ) ; \n\t\t$F21883 ( wrapper ) } \n\tDependencies deps = wrapper . makeSootClass ( sc , className ) ; \n\taddSourceFileTag ( $F71108 ( sc , file ) ) ; \n\treturn deps ; \n\t} \n"}, {"code": "public static String buildResponseUrl ( String tenant , LogoutState logoutState ) { \n\tString retval = null ; \n\tLogoutResponse samlResponse = logoutState . generateResponseForTenant ( tenant , logoutState . getMessageSource ( ) , logoutState . getLocale ( ) ) ; \n\tif ( samlResponse != null ) { \n\t\t$F209111 ( log , samlResponse ) retval = logoutState . generateResponseUrlForTenant ( samlResponse , tenant ) ; \n\t\t} \n\treturn retval ; \n\t} \n"}, {"code": "public static void assertLabel ( $F2027 path , String text ) { \n\tif ( verbose ) { \n\t\tlog ( NUM00 + toString ( path ) + NUM00 + text + NUM00 ) ; \n\t\t} \n\tLabel l = ( Label ) getComponentByPath ( path ) ; \n\tassertBool ( l != null , NUM00 + text ) ; \n\tassertBool ( text == l . getText ( ) || text . equals ( l . getText ( ) ) , ( NUM00 + l . getText ( ) ) + NUM00 + text ) ; \n\t} \n"}, {"code": "private void interpolateResultList ( ArrayList < $F190112 > list ) { \n\tif $F186678 ( list ) $F665 $F101632 listPenPos = PathNodeUtils . calculatePenPosition ( list ) ; \n\tArrayList < $F190112 > $F204 ( subList ) ; \n\t$F115 ( size , list ) $F190112 currentNode = null ; \n\tint i = NUM00 ; \n\twhile ( i < size - NUM00 ) { \n\t\tcurrentNode = list . get ( i ) ; \n\t\tif ( ! isInterpolatableCommand ( currentNode . mType ) ) $F118993 ( i ) boolean validSequence = _BOOL ; \n\t\tint k = i ; \n\t\tfor ( int j = i ; \n\t\tj < size && validSequence ; \n\t\tj ++ ) { \n\t\t\tif ( currentNode . mType == list . get ( j ) . mType ) { \n\t\t\t\tk = j ; \n\t\t\t\tif ( ! Arrays . equals ( currentNode . mParams , list . get ( j ) . mParams ) ) $F597 } \n\t\t\telse validSequence = _BOOL ; \n\t\t\t} \n\t\tif ( k - i > NUM00 ) { \n\t\t\tinterpolateSubList ( list . subList ( i , k + NUM00 ) ) ; \n\t\t\t} \n\t\ti ++ ; \n\t\t} \n\t} \n"}, {"code": "private void initTokenizer ( StreamTokenizer tokenizer ) { \n\t$F61733 ( tokenizer ) tokenizer . whitespaceChars ( NUM00 , ( NUM00 - NUM00 ) ) ; \n\t$F33902 ( tokenizer ) tokenizer . whitespaceChars ( NUM00 , NUM00 ) ; \n\ttokenizer . whitespaceChars ( NUM00 , NUM00 ) ; \n\ttokenizer . commentChar ( NUM00 ) ; \n\ttokenizer . whitespaceChars ( NUM00 , NUM00 ) ; \n\t$F70966 ( tokenizer ) $F70966 ( tokenizer ) tokenizer . eolIsSignificant ( _BOOL ) ; \n\t} \n"}, {"code": "protected void illegalMessageReceived ( OFMessage m ) { \n\tString msg = getSwitchStateMessage ( m , NUM00 ) ; \n\tthrow new SwitchStateException ( msg ) ; \n\t} \n"}, {"code": "protected void run_ThreadSizeLoop $F72 throws Exception { \n\tfor ( int i = NUM00 ; \n\ti <= NUM00 ; \n\ti += NUM00 ) { \n\t\tsetNumWorkers ( i ) ; \n\t\ttry { \n\t\t\t$F165308 ( Thread ) } \n\t\t$F887 } \n\t} \n"}, {"code": "protected boolean read $F72 { \n\tif ( ! nReuseHeader ) { \n\t\t$F36253 ( Debug ) return readHeader ( ) ; \n\t\t} \n\t$F277754 ( tempData , nDataSize , nFieldOffset ) int $F18803 ( nReadBytes , poModule , tempData ) ; \n\t$F198866 ( System , pachData , nFieldOffset , tempData ) if ( nReadBytes != $F15690 ( nDataSize , nFieldOffset ) && nReadBytes == - NUM00 ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse if ( nReadBytes != $F15690 ( nDataSize , nFieldOffset ) ) $F24275 ( Debug , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "$F1 public boolean lock $F72 { \n\ttry { \n\t\tif ( ! FileFactory . isFileExist ( location , FileFactory . getFileType ( tmpPath ) ) ) { \n\t\t\tFileFactory . mkdirs ( location , FileFactory . getFileType ( tmpPath ) ) ; \n\t\t\t} \n\t\tString lockFilePath = location + CarbonCommonConstants . FILE_SEPARATOR + lockFile ; \n\t\tif ( ! FileFactory . isFileExist ( lockFilePath , FileFactory . getFileType ( location ) ) ) { \n\t\t\tFileFactory . createNewLockFile ( lockFilePath , FileFactory . getFileType ( location ) ) ; \n\t\t\t} \n\t\t$F10893 ( fileOutputStream , lockFilePath ) $F42861 ( channel , fileOutputStream ) try { \n\t\t\tfileLock = channel . tryLock ( ) ; \n\t\t\t} \n\t\tcatch ( OverlappingFileLockException e ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( null != fileLock ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\t$F3092 ( _BOOL ) } \n"}, {"code": "public void open ( int port ) throws IOException { \n\tconnection = new DatagramSocket ( port ) ; \n\tconnection . setSoTimeout ( timeout ) ; \n\t} \n"}, {"code": "public String globalInfo $F72 $F11287 "}, {"code": "public MLResults execute ( Script script ) { \n\tScriptExecutor scriptExecutor = new ScriptExecutor ( sparkMonitoringUtil ) ; \n\tscriptExecutor . setExplain ( explain ) ; \n\tscriptExecutor . setExplainLevel ( explainLevel ) ; \n\tscriptExecutor . setStatistics ( statistics ) ; \n\tscriptExecutor . setInit ( scriptHistoryStrings . isEmpty ( ) ) ; \n\treturn execute ( script , scriptExecutor ) ; \n\t} \n"}, {"code": "public void disable ( RichFormatterFeature feature ) $F106 ( features , feature ) "}, {"code": "public void removeEventListener ( ZWaveEventListener eventListener ) $F23075 ( zwaveEventListeners , eventListener ) "}, {"code": "private static double pythonTime $F72 { \n\treturn $F165576 ( System ) ; \n\t} \n"}, {"code": "$F28183 public final void add ( T ... newItems ) $F81861 ( add , Arrays , newItems ) "}, {"code": "public static String quoteIfJavaKeyword ( String name ) { \n\treturn JVMModuleUtil . quoteIfJavaKeyword ( name ) ; \n\t} \n"}, {"code": "public static Recipe fromCursor ( Cursor cursor ) { \n\tRecipe recipe = new Recipe $F8320 ; \n\tfor ( $F90183 ( c , cursor ) ) { \n\t\t$F43881 ( columnName , cursor , c ) if ( columnName . equals ( RecipeTable . ID_COLUMN ) ) { \n\t\t\trecipe . id = cursor . getString ( c ) ; \n\t\t\t} \n\t\telse if ( columnName . equals ( RecipeTable . TITLE_COLUMN ) ) { \n\t\t\trecipe . setTitle ( cursor . getString ( c ) ) ; \n\t\t\t} \n\t\telse if $F197257 ( columnName , RecipeTable ) $F197260 ( recipe , cursor , c ) else if ( columnName . equals ( RecipeTable . PHOTO_COLUMN ) ) { \n\t\t\trecipe . setPhoto ( cursor . getString ( c ) ) ; \n\t\t\t} \n\t\telse if ( columnName . equals ( RecipeTable . PREP_TIME_COLUMN ) ) { \n\t\t\trecipe . setPrepTime ( cursor . getString ( c ) ) ; \n\t\t\t} \n\t\t} \n\treturn recipe ; \n\t} \n"}, {"code": "public static void checkState ( boolean expression , $F5466 Object errorMessage ) { \n\tif ( ! expression ) { \n\t\tthrow new IllegalStateException $F45942 ( String , errorMessage ) ; \n\t\t} \n\t} \n"}, {"code": "private static < T , ID > void addDropTableStatements ( DatabaseType databaseType , TableInfo < T , ID > tableInfo , $F3803 statements ) { \n\t$F10144 ( statementsBefore ) $F10144 ( statementsAfter ) for ( FieldType fieldType : tableInfo . getFieldTypes ( ) ) { \n\t\tdatabaseType . dropColumnArg ( fieldType , statementsBefore , statementsAfter ) ; \n\t\t} \n\t$F20818 ( sb ) $F84 ( sb ) databaseType . appendEscapedEntityName ( sb , tableInfo . getTableName ( ) ) ; \n\t$F84 ( sb ) statements . addAll ( statementsBefore ) ; \n\t$F40018 ( statements , sb ) statements . addAll ( statementsAfter ) ; \n\t} \n"}, {"code": "public boolean isLocked $F72 $F3387 ( queue ) "}, {"code": "public long cguest_time $F72 $F12907 ( Long , fields ) "}, {"code": "private static ClassInfo findOrCreateClass ( String t ) { \n\tif $F2364 ( t ) { \n\t\treturn ClassInfo . findOrCreateClass ( t ) ; \n\t\t} \n\telse { \n\t\t$F172220 ( baseType , t ) int level = ( t . length ( ) - t . indexOf ( NUM00 ) ) / NUM00 ; \n\t\tString s = NUM00 ; \n\t\tfor ( $F1316 ( i , level ) ) s += NUM00 ; \n\t\tif $F3057 ( baseType ) s += NUM00 ; \n\t\telse if $F3057 ( baseType ) s += NUM00 ; \n\t\telse s += NUM00 + baseType + NUM00 ; \n\t\treturn ClassInfo . findOrCreateClass ( s ) ; \n\t\t} \n\t} \n"}, {"code": "$F106801 ( errorInStatus1 , editMode , statusText1 , editStatus1 , stdStatus1 , _BOOL , resetNotes2 ) "}, {"code": "$F79740 public int sceRtcSetTick ( TPointer timeAddr , TPointer64 ticksAddr ) { \n\tlong ticks = ticksAddr . getValue ( ) - rtcMagicOffset ; \n\tScePspDateTime time = ScePspDateTime . fromMicros ( ticks ) ; \n\ttime . write ( timeAddr ) ; \n\t$F1082 } \n"}, {"code": "public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { \n\tString str = $F48364 ( data ) ; \n\twriteStringToFile ( file , str , encoding , append ) ; \n\t} \n"}, {"code": "private void populateNavDrawer $F72 { \n\t$F725 ( mNavDrawerItems ) mNavDrawerItems . add ( NAVDRAWER_ITEM_HOME ) ; \n\tmNavDrawerItems . add ( NAVDRAWER_ITEM_SEPARATOR ) ; \n\tmNavDrawerItems . add ( NAVDRAWER_ITEM_MY_FOLLOWING ) ; \n\tmNavDrawerItems . add ( NAVDRAWER_ITEM_MY_SHOTS ) ; \n\tmNavDrawerItems . add ( NAVDRAWER_ITEM_MY_BUCKETS ) ; \n\tmNavDrawerItems . add ( NAVDRAWER_ITEM_MY_PROJECTS ) ; \n\tmNavDrawerItems . add ( NAVDRAWER_ITEM_MY_TEAMS ) ; \n\tmNavDrawerItems . add ( NAVDRAWER_ITEM_MY_LIKES ) ; \n\tmNavDrawerItems . add ( NAVDRAWER_ITEM_SEPARATOR_SPECIAL ) ; \n\tmNavDrawerItems . add ( NAVDRAWER_ITEM_SETTINGS ) ; \n\tcreateNavDrawerItems ( ) ; \n\t} \n"}, {"code": "private BigInteger oddModPow ( BigInteger y , BigInteger z ) { \n\t$F9506 ( y , ONE , this ) $F116 ( signum , ZERO ) $F2027 base = mag . clone ( ) ; \n\t$F2027 exp = y . mag ; \n\t$F2027 mod = z . mag ; \n\tint modLen = mod . length ; \n\tif $F69047 ( modLen ) { \n\t\t$F65716 ( x , modLen ) $F135 ( System , mod , x , modLen ) mod = x ; \n\t\tmodLen ++ ; \n\t\t} \n\tint wbits = NUM00 ; \n\tint ebits = bitLength ( exp , exp . length ) ; \n\tif ( ( ebits != NUM00 ) || ( exp [ NUM00 ] != NUM00 ) ) { \n\t\twhile ( ebits > bnExpModThreshTable [ wbits ] ) { \n\t\t\twbits ++ ; \n\t\t\t} \n\t\t} \n\tint tblmask = NUM00 < < wbits ; \n\t$F26352 table = new int [ tblmask ] [ ] ; \n\tfor ( $F119 ( i , tblmask ) ) $F134093 ( table , i , modLen ) long n0 = ( mod [ modLen - NUM00 ] & LONG_MASK ) + ( ( mod [ modLen - NUM00 ] & LONG_MASK ) < < NUM00 ) ; \n\tlong inv = - MutableBigInteger . inverseMod64 ( n0 ) ; \n\t$F2027 a = leftShift ( base , base . length , modLen < < NUM00 ) ; \n\tMutableBigInteger q = new MutableBigInteger $F72 , a2 = new MutableBigInteger ( a ) , b2 = new MutableBigInteger ( mod ) ; \n\t$F5896 ( b2 ) MutableBigInteger r = a2 . divide ( b2 , q ) ; \n\ttable [ NUM00 ] = r . toIntArray ( ) ; \n\tif ( table [ NUM00 ] . length < modLen ) { \n\t\tint offset = modLen - table [ NUM00 ] . length ; \n\t\t$F4120 ( t2 , modLen ) System . arraycopy ( table [ NUM00 ] , NUM00 , t2 , offset , table [ NUM00 ] . length ) ; \n\t\ttable [ NUM00 ] = t2 ; \n\t\t} \n\t$F2027 b = montgomerySquare ( table [ NUM00 ] , mod , modLen , inv , null ) ; \n\t$F2027 t = Arrays . copyOf ( b , modLen ) ; \n\tfor ( $F119 ( i , tblmask ) ) { \n\t\ttable [ i ] = montgomeryMultiply ( t , table [ i - NUM00 ] , mod , modLen , inv , null ) ; \n\t\t} \n\tint bitpos = NUM00 < < ( ( ebits - NUM00 ) & $F34182 ) ; \n\tint buf = NUM00 ; \n\tint elen = exp . length ; \n\tint eIndex = NUM00 ; \n\tfor ( $F9993 ( i , wbits ) ) { \n\t\tbuf = ( buf < < NUM00 ) | ( ( ( exp [ eIndex ] & bitpos ) != NUM00 ) ? NUM00 : NUM00 ) ; \n\t\tbitpos >>>= NUM00 ; \n\t\tif ( bitpos == NUM00 ) { \n\t\t\teIndex ++ ; \n\t\t\tbitpos = NUM00 < < $F34182 ; \n\t\t\telen -- ; \n\t\t\t} \n\t\t} \n\tint multpos = ebits ; \n\tebits -- ; \n\tboolean isone = _BOOL ; \n\tmultpos = ebits - wbits ; \n\twhile $F14827 ( buf ) { \n\t\tbuf >>>= NUM00 ; \n\t\tmultpos ++ ; \n\t\t} \n\t$F2027 mult = table [ buf > > > NUM00 ] ; \n\tbuf = NUM00 ; \n\tif ( multpos == ebits ) isone = _BOOL ; \n\twhile ( _BOOL ) { \n\t\tebits -- ; \n\t\tbuf <<= NUM00 ; \n\t\tif ( elen != NUM00 ) { \n\t\t\tbuf |= ( ( exp [ eIndex ] & bitpos ) != NUM00 ) ? NUM00 : NUM00 ; \n\t\t\tbitpos >>>= NUM00 ; \n\t\t\tif ( bitpos == NUM00 ) { \n\t\t\t\teIndex ++ ; \n\t\t\t\tbitpos = NUM00 < < $F34182 ; \n\t\t\t\telen -- ; \n\t\t\t\t} \n\t\t\t} \n\t\tif $F18594 ( buf , tblmask ) { \n\t\t\tmultpos = ebits - wbits ; \n\t\t\twhile $F14827 ( buf ) { \n\t\t\t\tbuf >>>= NUM00 ; \n\t\t\t\tmultpos ++ ; \n\t\t\t\t} \n\t\t\tmult = table [ buf > > > NUM00 ] ; \n\t\t\tbuf = NUM00 ; \n\t\t\t} \n\t\tif ( ebits == multpos ) { \n\t\t\tif ( isone ) { \n\t\t\t\t$F154779 ( b , mult ) isone = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tt = b ; \n\t\t\t\ta = montgomeryMultiply ( t , mult , mod , modLen , inv , a ) ; \n\t\t\t\tt = a ; \n\t\t\t\ta = b ; \n\t\t\t\tb = t ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( ebits == NUM00 ) $F597 if ( ! isone ) { \n\t\t\tt = b ; \n\t\t\ta = montgomerySquare ( t , mod , modLen , inv , a ) ; \n\t\t\tt = a ; \n\t\t\ta = b ; \n\t\t\tb = t ; \n\t\t\t} \n\t\t} \n\t$F2027 t2 = new int [ NUM00 * modLen ] ; \n\tSystem . arraycopy ( b , NUM00 , t2 , modLen , modLen ) ; \n\tb = montReduce ( t2 , mod , modLen , ( int ) inv ) ; \n\tt2 = Arrays . copyOf ( b , modLen ) ; \n\treturn $F105487 ( t2 ) ; \n\t} \n"}, {"code": "public void runTest $F72 throws Throwable { \n\tDocument doc ; \n\tNodeList elementList ; \n\tNode nameNode ; \n\tCharacterData child ; \n\tString childValue ; \n\tint childLength ; \n\t$F236 ( doc , load , _BOOL ) $F237 ( elementList , doc ) $F238 ( nameNode , elementList ) $F241 ( child , nameNode ) $F4055 ( childValue , child ) $F3935 ( childLength , childValue ) assertEquals ( NUM00 , NUM00 , childLength ) ; \n\t} \n"}, {"code": "public int nextToken $F72 { \n\twhile ( index < length && Character . isWhitespace ( expr [ index ] ) ) { \n\t\tindex ++ ; \n\t\t} \n\ttokenVal = null ; \n\tif ( index == length ) return TOKEN_END ; \n\tint start = index ; \n\tchar currentChar = expr [ index ] ; \n\tchar nextChar = $F2858 ; \n\tindex ++ ; \n\tif ( index < length ) nextChar = expr [ index ] ; \n\tswitch ( currentChar ) { \n\t\t$F1262 return TOKEN_LBRACE ; \n\t\t$F1262 return TOKEN_RBRACE ; \n\t\t$F1262 return TOKEN_EQ ; \n\t\t$F1262 if ( nextChar == NUM00 ) { \n\t\t\tindex ++ ; \n\t\t\treturn TOKEN_NOT_EQ ; \n\t\t\t} \n\t\treturn TOKEN_NOT ; \n\t\t$F1262 if ( nextChar == NUM00 ) { \n\t\t\tindex ++ ; \n\t\t\treturn TOKEN_OR ; \n\t\t\t} \n\t\t$F597 $F1262 if ( nextChar == NUM00 ) { \n\t\t\tindex ++ ; \n\t\t\treturn TOKEN_AND ; \n\t\t\t} \n\t\t$F597 $F1262 if ( nextChar == NUM00 ) { \n\t\t\tindex ++ ; \n\t\t\treturn TOKEN_GE ; \n\t\t\t} \n\t\treturn TOKEN_GT ; \n\t\t$F1262 if ( nextChar == NUM00 ) { \n\t\t\tindex ++ ; \n\t\t\treturn TOKEN_LE ; \n\t\t\t} \n\t\treturn TOKEN_LT ; \n\t\t$F2448 } \n\tint end = index ; \n\tif $F37111 ( currentChar ) { \n\t\tchar endChar = currentChar ; \n\t\tboolean escaped = _BOOL ; \n\t\tstart ++ ; \n\t\tfor ( ; \n\t\tindex < length ; \n\t\tindex ++ ) { \n\t\t\tif ( expr [ index ] == NUM00 && ! escaped ) $F34544 ( escaped , _BOOL ) if ( expr [ index ] == endChar && ! escaped ) $F597 escaped = _BOOL ; \n\t\t\t} \n\t\tend = index ; \n\t\tindex ++ ; \n\t\t} \n\telse if ( currentChar == NUM00 ) { \n\t\tchar endChar = currentChar ; \n\t\tboolean escaped = _BOOL ; \n\t\tfor ( ; \n\t\tindex < length ; \n\t\tindex ++ ) { \n\t\t\tif ( expr [ index ] == NUM00 && ! escaped ) $F34544 ( escaped , _BOOL ) if ( expr [ index ] == endChar && ! escaped ) $F597 escaped = _BOOL ; \n\t\t\t} \n\t\tend = ++ index ; \n\t\t} \n\telse { \n\t\tfor ( ; \n\t\tindex < length ; \n\t\tindex ++ ) { \n\t\t\tif ( isMetaChar ( expr [ index ] ) ) $F597 } \n\t\tend = index ; \n\t\t} \n\tthis . tokenVal = new String ( expr , start , end - start ) ; \n\treturn TOKEN_ \"STRING\" ; \n\t} \n"}, {"code": "public static Byte [ ] valuesOf $F97 ( array ) { \n\tByte [ ] dest = new Byte [ array . length ] ; \n\tfor ( $F1139 ( i , array ) ) $F11856 ( dest , i , Byte , array ) return dest ; \n\t} \n"}, {"code": "public void auditCallhome ( OperationTypeEnum auditType , String operationalStatus , String description , Object ... descparams ) { \n\t_auditMgr . recordAuditLog ( null , null , EVENT_SERVICE_TYPE , auditType , System . currentTimeMillis ( ) , operationalStatus , description , descparams ) ; \n\t} \n"}, {"code": "public static float mean $F11671 ( data , startIndex , endIndex ) { \n\tfloat mean = NUM00 ; \n\tint total = NUM00 ; \n\t$F89002 ( startIndex , Math ) startIndex = Math . min ( startIndex , data . length - NUM00 ) ; \n\t$F89002 ( endIndex , Math ) endIndex = Math . min ( endIndex , data . length - NUM00 ) ; \n\t$F46170 ( startIndex , endIndex ) for ( int i = startIndex ; \n\ti <= endIndex ; \n\ti ++ ) { \n\t\tif $F1998 ( Float , data , i ) $F824 mean += data [ i ] ; \n\t\ttotal ++ ; \n\t\t} \n\tmean /= total ; \n\treturn mean ; \n\t} \n"}, {"code": "public static String constructNTPtime ( long date ) { \n\tlong ntpTime = NUM00 ; \n\tlong startTime = ( date / SECONDS_TO_MILLISECONDS_CONVERSION_RATE ) + ntpTime ; \n\t$F33236 ( String , startTime ) } \n"}, {"code": "protected MediaType selectMediaType ( ServerWebExchange exchange , List < MediaType > producibleTypes ) { \n\tList < MediaType > acceptableTypes = getAcceptableTypes ( exchange ) ; \n\tproducibleTypes = getProducibleTypes ( exchange , producibleTypes ) ; \n\tSet < MediaType > $F22304 ( compatibleMediaTypes ) ; \n\tfor ( MediaType acceptable : acceptableTypes ) { \n\t\tfor ( MediaType producible : producibleTypes ) { \n\t\t\tif ( acceptable . isCompatibleWith ( producible ) ) $F18351 ( compatibleMediaTypes , selectMoreSpecificMediaType , acceptable , producible ) } \n\t\t} \n\tList < MediaType > $F10252 ( result , compatibleMediaTypes ) ; \n\tMediaType . sortBySpecificityAndQuality ( result ) ; \n\tfor ( MediaType mediaType : compatibleMediaTypes ) { \n\t\tif ( mediaType . isConcrete ( ) ) { \n\t\t\treturn mediaType ; \n\t\t\t} \n\t\telse if ( mediaType . equals ( MediaType . ALL ) || mediaType . equals ( MEDIA_TYPE_APPLICATION_ALL ) ) { \n\t\t\treturn MediaType . APPLICATION_OCTET_STREAM ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public void paintBorder $F6065 ( c , g , x , y , width , height ) { \n\tif ( ! ( c instanceof JPopupMenu ) ) $F932 $F58112 ( origFont , g ) $F86453 ( origColor , g ) JPopupMenu popup = ( JPopupMenu ) c ; \n\t$F10771 ( title , popup ) $F2329 ( title ) g . setFont ( font ) ; \n\tFontMetrics fm = SwingUtilities2 . getFontMetrics ( popup , g , font ) ; \n\t$F2047 ( fontHeight , fm ) int descent = fm . getDescent ( ) ; \n\tint ascent = fm . getAscent ( ) ; \n\t$F101628 ( textLoc ) int stringWidth = SwingUtilities2 . stringWidth ( popup , fm , title ) ; \n\ttextLoc . y = y + ascent + TEXT_SPACING ; \n\ttextLoc . x = x + $F70329 ( width , stringWidth ) ; \n\tg . setColor ( background ) ; \n\tg . fillRect ( textLoc . x - TEXT_SPACING , textLoc . y - ( fontHeight - descent ) , stringWidth + ( NUM00 * TEXT_SPACING ) , fontHeight - descent ) ; \n\tg . setColor ( foreground ) ; \n\tSwingUtilities2 . drawString ( popup , g , title , textLoc . x , textLoc . y ) ; \n\tMotifGraphicsUtils . drawGroove ( g , x , textLoc . y + TEXT_SPACING , width , GROOVE_HEIGHT , shadowColor , highlightColor ) ; \n\tg . setFont ( origFont ) ; \n\tg . setColor ( origColor ) ; \n\t} \n"}, {"code": "public void ensureCapacity ( int mincap ) { \n\tif ( mincap > array . length ) { \n\t\tint newcap = ( $F28143 ( array ) > > NUM00 ) + NUM00 ; \n\t\t$F2027 olddata = array ; \n\t\tarray = new int [ newcap < mincap ? mincap : newcap ] ; \n\t\t$F135 ( System , olddata , array , size ) } \n\t} \n"}, {"code": "public void invalidateAndUnmap ( ByteBuffer ... bufs ) throws IOException { \n\tif ( cleaner != null ) { \n\t\tinvalidated = _BOOL ; \n\t\tbarrier . lazySet ( NUM00 ) ; \n\t\t$F5756 ( Thread ) for ( ByteBuffer b : bufs ) { \n\t\t\tcleaner . freeBuffer ( resourceDescription , b ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public int addDir ( File file ) { \n\tif $F1906 ( file ) $F1083 $F806 names = getNames ( getFiles ( file , NUM00 ) ) ; \n\tloadClass ( file , names ) ; \n\t$F1082 } \n"}, {"code": "$F32357 ( Class , _BOOL ) "}, {"code": "$F1 public boolean equals ( Object obj ) { \n\t$F3627 ( obj , this , _BOOL ) if ( ! ( obj instanceof BubbleXYItemLabelGenerator ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F3067 ( super , obj , _BOOL ) BubbleXYItemLabelGenerator that = ( BubbleXYItemLabelGenerator ) obj ; \n\tif ( ! ObjectUtilities . equal ( this . zFormat , that . zFormat ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( ! ObjectUtilities . equal ( this . zDateFormat , that . zDateFormat ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static boolean hasElementChild ( Node node ) { \n\t$F9040 ( nl , node ) Node child = null ; \n\t$F19322 ( length , nl ) for ( $F119 ( i , length ) ) { \n\t\tchild = nl . item ( i ) ; \n\t\tif $F61358 ( child , Node ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void delItem ( int index ) { \n\tsynchronized ( getMenuTreeLock ( ) ) { \n\t\tif ( selectedIndex == index ) $F99517 ( selectItem , _BOOL ) else if ( selectedIndex > index ) { \n\t\t\tselectedIndex -- ; \n\t\t\t} \n\t\tif $F1765 ( index , items ) $F106 ( items , index ) else { \n\t\t\tif $F58998 ( log , PlatformLogger ) { \n\t\t\t\tlog . fine ( $F57675 ( index , items ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tupdateSize ( ) ; \n\t} \n"}, {"code": "public static int countCSSPrimitiveNames $F72 $F1652 ( ALL_PRIMITIVE_PROPERTY_NAMES ) "}, {"code": "$F109836 ( v , printString ) "}, {"code": "private void checkPermission ( Object object , NamespacePermissionEnum [ ] permissions , List < AccessDeniedException > accessDeniedExceptions ) { \n\tif ( object != null ) { \n\t\tif ( object instanceof Collection ) { \n\t\t\t$F7922 $F7924 ( collection , object ) ; \n\t\t\tfor ( Object element : collection ) { \n\t\t\t\tcheckPermission ( element , permissions , accessDeniedExceptions ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( object instanceof String ) { \n\t\t\ttry { \n\t\t\t\tcheckPermission ( ( String ) object , permissions ) ; \n\t\t\t\t} \n\t\t\tcatch ( AccessDeniedException accessDeniedException ) $F207 ( accessDeniedExceptions , accessDeniedException ) } \n\t\telse { \n\t\t\tthrow new IllegalStateException ( String . format ( NUM00 , $F10062 , Collection . class , object . getClass ( ) ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void displayAllStringDefinedInStringXml $F72 { \n\tSimpleIconFontTextView textView = ( SimpleIconFontTextView ) findViewById ( R . id . text_view_2 ) ; \n\t$F24645 ( list ) list . add ( getString ( R . string . cubeicon_gems_logo ) ) ; \n\tlist . add ( getString ( R . string . cubeicon_android ) ) ; \n\tlist . add ( getString ( R . string . cubeicon_heart ) ) ; \n\tString text = TextUtils . join ( NUM00 , list ) ; \n\ttextView . setText ( text ) ; \n\t} \n"}, {"code": "private static Intent createMapActivityIntent ( Context context , URLSpan [ ] urlSpans ) { \n\tfor ( $F1139 ( span_i , urlSpans ) ) { \n\t\tURLSpan urlSpan = urlSpans [ span_i ] ; \n\t\tString urlString = urlSpan . getURL ( ) ; \n\t\tif $F7311 ( urlString , GEO_PREFIX ) { \n\t\t\tIntent geoIntent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( urlString ) ) ; \n\t\t\t$F111932 ( geoIntent , Intent ) return geoIntent ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "private StringBuilder generateParameters $F72 { \n\t$F83 ( parameters ) if ( filterMap == null && expandParameters == null ) { \n\t\treturn parameters ; \n\t\t} \n\t$F84 ( parameters ) int filterParameterCounter = NUM00 ; \n\tif $F1032 ( filterMap ) { \n\t\tparameters . append ( FILTER_PREFIX ) ; \n\t\tfor ( $F19318 ( filterEntry , filterMap ) ) { \n\t\t\tparameters . append ( String . format ( NUM00 , filterEntry . getKey ( ) , filterEntry . getValue ( ) ) ) ; \n\t\t\tif ( ++ filterParameterCounter < filterMap . size ( ) ) $F86 ( parameters ) } \n\t\tif ( expandParameters != null ) $F86 ( parameters ) } \n\tif ( expandParameters != null ) { \n\t\tparameters . append ( EXPAND_PREFIX ) ; \n\t\t$F19402 ( iterator , expandParameters ) parameters . append ( String . format ( NUM00 , iterator . next ( ) ) ) ; \n\t\twhile $F2921 ( iterator ) { \n\t\t\tparameters . append ( String . format ( NUM00 , iterator . next ( ) ) ) ; \n\t\t\t} \n\t\t} \n\treturn parameters ; \n\t} \n"}, {"code": "public void writeExif ( Bitmap bmap , OutputStream exifOutStream ) throws IOException { \n\t$F26831 ( bmap , exifOutStream , NULL_ARGUMENT_ ) OutputStream s = getExifWriterStream ( exifOutStream ) ; \n\t$F26834 ( bmap , Bitmap , s ) $F1206 ( s ) } \n"}, {"code": "$F187098 ( index , length , System , data , badIndex ) "}, {"code": "public static $F147000 @ SlashedClassName String fromFieldSignature ( String signature ) { \n\tif $F4435 ( signature ) $F1337 $F16082 ( signature ) } \n"}, {"code": "private void paintPreview ( int dx , int dy , float zoomfactor ) { \n\tif ( image != null ) { \n\t\tGraphics2D g2 = ( Graphics2D ) getGraphics ( ) ; \n\t\tUColor bg = renderer . getBackgroundColor ( ) ; \n\t\tg2 . setBackground ( new Color ( bg . getRed ( ) , bg . getGreen ( ) , bg . getBlue ( ) , bg . getAlpha ( ) ) ) ; \n\t\tint newWidth = Math . round ( image . getWidth ( null ) * zoomfactor ) ; \n\t\tint newHeight = ( int ) Math . round ( image . getHeight ( null ) * zoomfactor ) ; \n\t\tg2 . drawImage ( image , dx , dy , newWidth , newHeight , null ) ; \n\t\tif ( dx > NUM00 ) g2 . clearRect ( NUM00 , NUM00 , dx , getHeight ( ) ) ; \n\t\telse g2 . clearRect ( getWidth ( ) + dx , NUM00 , getWidth ( ) , getHeight ( ) ) ; \n\t\tif ( dy > NUM00 ) g2 . clearRect ( NUM00 , NUM00 , getWidth ( ) , dy ) ; \n\t\telse g2 . clearRect ( NUM00 , getHeight ( ) + dy , getWidth ( ) , getHeight ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "@ RequiresPermission ( Manifest . permission . CAMERA ) public CameraSource start $F72 throws IOException { \n\tsynchronized ( mCameraLock ) { \n\t\t$F20092 ( mCamera , this ) mCamera = createCamera ( ) ; \n\t\tif ( $F20093 ( Build ) ) { \n\t\t\tmDummySurfaceTexture = new SurfaceTexture ( DUMMY_TEXTURE_NAME ) ; \n\t\t\tmCamera . setPreviewTexture ( mDummySurfaceTexture ) ; \n\t\t\t} \n\t\telse { \n\t\t\tmDummySurfaceView = new SurfaceView ( mContext ) ; \n\t\t\tmCamera . setPreviewDisplay ( mDummySurfaceView . getHolder ( ) ) ; \n\t\t\t} \n\t\tmCamera . startPreview ( ) ; \n\t\t$F20103 ( mProcessingThread , mFrameProcessor ) mFrameProcessor . setActive ( _BOOL ) ; \n\t\t$F2346 ( mProcessingThread ) } \n\treturn this ; \n\t} \n"}, {"code": "$F52361 ( mCategories , mValues ) "}, {"code": "public static List < $F31488 > partitionVariable ( $F31488 arr , int chunk ) { \n\tint count = NUM00 ; \n\tList < $F31488 > ret = new ArrayList < $F31488 > $F72 ; \n\twhile $F1765 ( count , arr ) { \n\t\t$F31488 sublist = arr . subList ( count , count + chunk ) ; \n\t\tcount += chunk ; \n\t\tret . add ( sublist ) ; \n\t\t} \n\tfor ( $F31488 lists : ret ) { \n\t\tif $F10255 ( lists , chunk ) ret . remove ( lists ) ; \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "private static void updateWindowUI ( Window window ) { \n\tSwingUtilities . updateComponentTreeUI ( window ) ; \n\tWindow ownedWins [ ] = window . getOwnedWindows ( ) ; \n\tfor ( Window ownedWin : ownedWins ) { \n\t\tupdateWindowUI ( ownedWin ) ; \n\t\t} \n\t} \n"}, {"code": "public void clearResults $F72 { \n\tif ( resultList != null ) { \n\t\t$F725 ( resultList ) $F4176 ( mAdapter ) } \n\tlistener . onSearchCleared ( ) ; \n\t} \n"}, {"code": "public ArrayList < ConstraintWidget > findWidgets ( WidgetContainer container , int x , int y , int width , int height ) { \n\tArrayList < ConstraintWidget > $F204 ( found ) ; \n\tRectangle area = new Rectangle ( x , y , width , height ) ; \n\tfor ( ConstraintWidget widget : container . getChildren ( ) ) { \n\t\tWidgetCompanion companion = ( WidgetCompanion ) widget . getCompanionWidget ( ) ; \n\t\tWidgetDecorator decorator = companion . getWidgetDecorator ( WidgetDecorator . BLUEPRINT_STYLE ) ; \n\t\tif ( $F181253 ( decorator ) ) $F1448 Rectangle bounds = new Rectangle ( widget . getDrawX ( ) , widget . getDrawY ( ) , widget . getWidth ( ) , widget . getHeight ( ) ) ; \n\t\tif $F82382 ( area , bounds ) $F207 ( found , widget ) } \n\treturn found ; \n\t} \n"}, {"code": "public final void printSymbol ( CharSequence text ) throws IOException { \n\tif ( text == null ) $F1210 ( appendAscii ) else if $F1277 ( text ) { \n\t\tthrow new EmptySymbolException $F72 ; \n\t\t} \n\telse if ( symbolNeedsQuoting ( text , _BOOL ) ) { \n\t\tappendAscii ( NUM00 ) ; \n\t\tprintCodePoints ( text , SYMBOL_ESCAPE_CODES ) ; \n\t\tappendAscii ( NUM00 ) ; \n\t\t} \n\telse { \n\t\tappendAscii ( text ) ; \n\t\t} \n\t} \n"}, {"code": "public static ShoppingCartItem makeItem ( Integer cartLocation , GenericValue product , BigDecimal selectedAmount , BigDecimal quantity , BigDecimal unitPrice , Timestamp reservStart , BigDecimal reservLength , BigDecimal reservPersons , Timestamp shipBeforeDate , Timestamp shipAfterDate , $F128868 additionalProductFeatureAndAppls , $F2100 ( attributes ) , String prodCatalogId , ProductConfigWrapper configWrapper , String itemType , ShoppingCart . ShoppingCartItemGroup itemGroup , LocalDispatcher dispatcher , ShoppingCart cart , Boolean triggerExternalOpsBool , Boolean triggerPriceRulesBool , GenericValue parentProduct , Boolean skipInventoryChecks , Boolean skipProductChecks ) throws CartItemModifyException { \n\treturn makeItem ( cartLocation , product , selectedAmount , quantity , unitPrice , reservStart , reservLength , reservPersons , null , null , shipBeforeDate , shipAfterDate , additionalProductFeatureAndAppls , attributes , prodCatalogId , configWrapper , itemType , itemGroup , dispatcher , cart , triggerExternalOpsBool , triggerPriceRulesBool , parentProduct , skipInventoryChecks , skipProductChecks ) ; \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\tMap $F120448 sortedTable = InferenceUtils . getNBest ( table , Math . max ( $F33338 ( table ) ) ) ; \n\tString str = NUM00 ; \n\tfor ( Entry $F120448 entry : sortedTable . entrySet ( ) ) { \n\t\tString prob = StringUtils . getShortForm ( entry . getValue ( ) ) ; \n\t\tstr += $F25954 ( entry ) + prob + NUM00 ; \n\t\t} \n\treturn $F4012 ( str ) ? $F4019 ( str ) : str ; \n\t} \n"}, {"code": "protected final void updateBorderText ( final String text ) { \n\t$F1832 ( Preconditions , text ) m_titledBorder . setTitle ( text ) ; \n\tupdateUI ( ) ; \n\t} \n"}, {"code": "private void addClasses ( $F63826 ( classes ) , HashSet $F69669 result , String fieldName ) { \n\tif $F12414 ( classes ) Error . classesAbsent ( fieldName , configuredClass ) ; \n\tfor ( $F6969 classe : classes ) result . add ( classe ) ; \n\t} \n"}, {"code": "public void resetReferences $F72 { \n\t$F10834 ( _refs ) } \n"}, {"code": "public static BigInteger decodeMPI $F75287 ( mpi , hasLength ) { \n\t$F96 buf ; \n\tif ( hasLength ) { \n\t\tint length = ( int ) readUint32BE ( mpi , NUM00 ) ; \n\t\t$F1325 ( buf , length ) $F135 ( System , mpi , buf , length ) } \n\telse buf = mpi ; \n\tif $F9634 ( buf ) return BigInteger . ZERO ; \n\tboolean isNegative = $F117560 ( buf ) ; \n\tif ( isNegative ) buf [ NUM00 ] &= NUM00 ; \n\t$F9144 ( result , buf ) return isNegative ? result . negate ( ) : result ; \n\t} \n"}, {"code": "public void schemaChanged ( String serviceName , String version ) $F23075 ( mapRealmToFormat , ROOT ) "}, {"code": "public void sort ( DTMIterator v , Vector keys , XPathContext support ) throws $F1872 { \n\tm_keys = keys ; \n\t$F19322 ( n , v ) $F6518 ( nodes ) for ( $F119 ( i , n ) ) { \n\t\tNodeCompareElem elem = new NodeCompareElem ( v . item ( i ) ) ; \n\t\tnodes . addElement ( elem ) ; \n\t\t} \n\t$F6518 ( scratchVector ) mergesort ( nodes , scratchVector , NUM00 , n - NUM00 , support ) ; \n\tfor ( $F119 ( i , n ) ) { \n\t\tv . setItem ( ( $F82324 ( nodes , i ) ) . m_node , i ) ; \n\t\t} \n\tv . setCurrentPos ( NUM00 ) ; \n\t} \n"}, {"code": "protected DateTimeData parse ( String str ) throws SchemaDateTimeException { \n\tDateTimeData date = new DateTimeData ( str , this ) ; \n\t$F1749 ( len , str ) date . year = YEAR ; \n\tdate . day = DAY ; \n\tif ( $F4434 ( str ) || $F4434 ( str ) ) { \n\t\tthrow new SchemaDateTimeException ( NUM00 + str ) ; \n\t\t} \n\tint stop = NUM00 ; \n\tdate . month = parseInt ( str , NUM00 , stop ) ; \n\tif ( str . length ( ) >= stop + NUM00 && str . charAt ( stop ) == NUM00 && $F10825 ( str , stop ) ) { \n\t\tstop += NUM00 ; \n\t\t} \n\tif ( stop < len ) { \n\t\tif ( ! isNextCharUTCSign ( str , stop , len ) ) { \n\t\t\tthrow new SchemaDateTimeException ( NUM00 + str ) ; \n\t\t\t} \n\t\telse { \n\t\t\tgetTimeZone ( str , date , stop , len ) ; \n\t\t\t} \n\t\t} \n\tvalidateDateTime ( date ) ; \n\tsaveUnnormalized ( date ) ; \n\tif ( date . utc != NUM00 && date . utc != NUM00 ) { \n\t\tnormalize ( date ) ; \n\t\t} \n\tdate . position = NUM00 ; \n\treturn date ; \n\t} \n"}, {"code": "private void addToQueue ( SerialMessage serialMessage ) { \n\t$F2329 ( serialMessage ) if ( ! msgQueue . contains ( serialMessage ) && msgQueue . remainingCapacity ( ) > NUM00 ) $F207 ( msgQueue , serialMessage ) sendMessage ( ) ; \n\t} \n"}, {"code": "private DBID stringToDBID ( String query ) { \n\treturn DBIDUtil . importInteger ( Integer . valueOf ( query ) ) ; \n\t} \n"}, {"code": "$F1 public final void writeShort ( int v ) throws IOException { \n\t$F68873 ( work , v ) $F8045 ( work , v ) $F105801 ( dis , work ) } \n"}, {"code": "final public void println ( long v ) { \n\tWriter out = this . out ; \n\t$F8249 ( out ) print ( v ) ; \n\ttry $F53422 ( out , _newline ) $F53427 ( log , Level , e ) } \n"}, {"code": "public ThriftServiceMetadata $F60993 ( serviceType ) { \n\trequireNonNull ( serviceType , NUM00 ) ; \n\tinterfaces = init ( null , Collections . singleton ( serviceType ) ) ; \n\t} \n"}, {"code": "public WritableRaster createCompatibleWritableRaster ( int w , int h ) { \n\tif ( w <= NUM00 || h <= NUM00 ) { \n\t\tthrow new RasterFormatException ( NUM00 + ( ( w <= NUM00 ) ? NUM00 : NUM00 ) ) ; \n\t\t} \n\tSampleModel sm = sampleModel . createCompatibleSampleModel ( w , h ) ; \n\treturn new BytePackedRaster ( sm , $F69159 ) ; \n\t} \n"}, {"code": "public static Response invalidEntity ( ConstraintViolationException e ) { \n\t$F83 ( errorMessage ) boolean firstPass = _BOOL ; \n\tfor ( ConstraintViolation error : e . getConstraintViolations ( ) ) { \n\t\t$F48750 ( firstPass , errorMessage ) errorMessage . append ( String . format ( NUM00 , error . getPropertyPath ( ) , error . getMessage ( ) , error . getInvalidValue ( ) ) ) ; \n\t\tfirstPass = _BOOL ; \n\t\t} \n\tExternalException externalException = new ExternalException ( ErrorCode . INVALID_ENTITY , errorMessage . toString ( ) , null ) ; \n\treturn externalException ( externalException ) ; \n\t} \n"}, {"code": "public String checkStartBlock ( int mode ) { \n\tif $F585 ( log ) log . debug ( NUM00 + getDisplayName ( ) + NUM00 ) ; \n\tBlockOrder bo = _orders . get ( NUM00 ) ; \n\tOBlock block = bo . getBlock ( ) ; \n\tString msg = block . allocate ( this ) ; \n\t$F21525 ( msg ) msg = bo . setPath ( this ) ; \n\t$F21525 ( msg ) int state = block . getState ( ) ; \n\tif ( ( state & OBlock . DARK ) != NUM00 || _tempRunBlind ) { \n\t\tmsg = Bundle . getMessage ( NUM00 , block . getDisplayName ( ) ) ; \n\t\t} \n\telse if ( ( state & OBlock . OCCUPIED ) == NUM00 ) { \n\t\tif ( mode == MODE_LEARN ) { \n\t\t\tmsg = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tmsg = NUM00 ; \n\t\t\t} \n\t\tmsg = Bundle . getMessage ( msg , getTrainName ( ) , block . getDisplayName ( ) ) ; \n\t\t} \n\telse { \n\t\tTrackerTableAction . stopTrackerIn ( block ) ; \n\t\t} \n\treturn msg ; \n\t} \n"}, {"code": "private void parseSwitch ( int indent , boolean firstContent , String header , Layout layout , List < Elem > elems ) { \n\tTokenStream tokens = new TokenStream ( header ) ; \n\tElem selector = parseExpr ( tokens ) ; \n\ttokens . checkAtEnd ( ) ; \n\tImmutableList . Builder < Case > cases = ImmutableList . builder ( ) ; \n\tList < Elem > defaultElems = null ; \n\tboolean done ; \n\tString line = getNextLine ( ) ; \n\t$F275 ( matcher , COMMAND_LINE , line ) String command ; \n\tString rest ; \n\tif $F281 ( matcher ) { \n\t\tcommand = matcher . group ( COMMAND_NAME_GROUP ) ; \n\t\trest = line . substring ( matcher . end ( ) ) ; \n\t\tdone = _BOOL ; \n\t\t} \n\telse { \n\t\terror ( NUM00 ) ; \n\t\tdone = _BOOL ; \n\t\tcommand = null ; \n\t\trest = null ; \n\t\t} \n\twhile ( ! done ) { \n\t\tswitch ( command ) { \n\t\t\tcase END_COMMAND : checkHeaderEmpty ( command , rest ) ; \n\t\t\tdone = _BOOL ; \n\t\t\t$F597 case DEFAULT_COMMAND : checkHeaderEmpty ( command , rest ) ; \n\t\t\tif ( defaultElems != null ) $F1210 ( error ) defaultElems = parseUntil ( indent , layout , END_COMMAND ) ; \n\t\t\tcommand = lastTerminator ; \n\t\t\trest = lastTerminatorHeader ; \n\t\t\tdone = lastTerminator == null ; \n\t\t\t$F597 case CASE_COMMAND : tokens = new TokenStream ( rest ) ; \n\t\t\tElem value = parseExpr ( tokens ) ; \n\t\t\ttokens . checkAtEnd ( ) ; \n\t\t\tList < Elem > caseElems = parseUntil ( indent , layout , END_COMMAND , CASE_COMMAND , DEFAULT_COMMAND ) ; \n\t\t\tif ( value != null ) { \n\t\t\t\tcases . add ( Case . create ( value , caseElems ) ) ; \n\t\t\t\t} \n\t\t\tcommand = lastTerminator ; \n\t\t\trest = lastTerminatorHeader ; \n\t\t\tdone = lastTerminator == null ; \n\t\t\t$F597 $F1267 unexpectedCommandError ( command ) ; \n\t\t\tdone = _BOOL ; \n\t\t\t$F597 } \n\t\t} \n\tif ( selector != null ) { \n\t\telems . add ( Block . create ( ! firstContent , Switch . create ( input . location ( ) , selector , cases . build ( ) , defaultElems ) ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void init ( String prefix , $F267681 url ) { \n\ttry { \n\t\tjava . io . InputStream in = url . openStream ( ) ; \n\t\t$F2697 ( props ) props . load ( in ) ; \n\t\tinit ( getLayers ( prefix , props ) ) ; \n\t\t} \n\tcatch ( java . net . MalformedURLException murle ) { \n\t\t$F30524 ( logger , url ) } \n\tcatch ( $F3258 e ) $F18144 ( logger ) } \n"}, {"code": "boolean suppressedBy ( DNSIncoming msg ) { \n\ttry { \n\t\tfor ( DNSRecord answer : msg . getAllAnswers ( ) ) $F283363 ( suppressedBy , answer , _BOOL ) return _BOOL ; \n\t\t} \n\tcatch ( ArrayIndexOutOfBoundsException e ) { \n\t\tlogger . log ( Level . WARNING , NUM00 + msg + NUM00 , e ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public static Properties createProperties ( $F27504 ( map ) ) { \n\t$F2697 ( properties ) if ( ! $F4251 ( map ) ) { \n\t\tfor ( $F3475 ( entry , map ) ) { \n\t\t\tproperties . setProperty ( $F15245 ( entry ) ) ; \n\t\t\t} \n\t\t} \n\treturn properties ; \n\t} \n"}, {"code": "public Node selectFirst ( String query ) { \n\t$F27878 selectedNodes = select ( query ) ; \n\t$F4892 ( selectedNodes ) $F38159 ( selectedNodes ) } \n"}, {"code": "public static $F806 stringArrayFromProperties ( Properties p , String propName , String tok ) { \n\t$F10127 ( ret ) $F7601 ( raw , p , propName ) if $F22 ( raw ) { \n\t\ttry { \n\t\t\t$F14497 ( token , raw , tok ) $F17729 ( numPaths , token ) $F58180 ( ret , numPaths ) for ( $F119 ( i , numPaths ) ) { \n\t\t\t\tret [ i ] = token . nextToken ( ) ; \n\t\t\t\t} \n\t\t\treturn ret ; \n\t\t\t} \n\t\tcatch ( $F104572 e ) $F302 ( e ) } \n\treturn ret ; \n\t} \n"}, {"code": "public void generate $F2026 ( x1 , y1 , x2 , y2 ) { \n\t$F101628 ( midPoint ) $F101628 ( arcCenter ) Point2D $F13619 ( peakPoint ) ; \n\tdouble distance = Math . sqrt ( Math . pow ( Math . abs ( y2 - y1 ) , NUM00 ) + Math . pow ( Math . abs ( x2 - x1 ) , NUM00 ) ) ; \n\tdouble straightLineSlope = Math . atan ( $F250385 ( y2 , y1 ) / $F250385 ( x2 , x1 ) ) ; \n\tdouble inverseSlope = straightLineSlope - ( Math . PI / NUM00 ) ; \n\tif $F22503 ( Debug ) { \n\t\tDebug . output ( NUM00 + Math . toDegrees ( straightLineSlope ) + NUM00 + distance + NUM00 ) ; \n\t\t} \n\tmidPoint . setLocation ( x1 + $F70329 ( x2 , x1 ) , y1 + $F70329 ( y2 , y1 ) ) ; \n\tif $F22503 ( Debug ) { \n\t\tDebug . output ( $F3905 ( x1 , y1 , x2 , y2 ) + midPoint . x + NUM00 + midPoint . y + NUM00 ) ; \n\t\t} \n\t$F54226 ( arccos , Math , arcAngle ) double arcRadius ; \n\tif ( arccos != NUM00 ) { \n\t\tarcRadius = distance / Math . sqrt ( NUM00 * ( NUM00 - Math . cos ( arcAngle ) ) ) ; \n\t\t} \n\telse { \n\t\tarcRadius = distance / Math . sqrt ( NUM00 ) ; \n\t\t} \n\t$F32927 ( Debug , arcRadius ) double x = arcRadius - arcRadius * Math . cos ( arcAngle ) ; \n\tdouble rPrime = ( distance / NUM00 ) * ( Math . sqrt ( NUM00 - Math . pow ( x / distance , NUM00 ) ) ) / Math . sin ( arcAngle / NUM00 ) ; \n\t$F32927 ( Debug , rPrime ) int direction = NUM00 ; \n\tif ( arcUp ) direction = - NUM00 ; \n\tarcCenter . x = midPoint . x + ( direction * ( int ) $F68927 ( rPrime , Math , inverseSlope ) ) ; \n\tarcCenter . y = midPoint . y + ( direction * ( int ) $F68922 ( rPrime , Math , inverseSlope ) ) ; \n\tif $F22503 ( Debug ) { \n\t\t$F18535 ( Debug ) arcGraphics = new OMGraphicList $F72 ; \n\t\tdouble dist1 = Math . sqrt ( Math . pow ( ( double ) ( arcCenter . x - x1 ) , NUM00 ) + Math . pow ( ( double ) ( arcCenter . y - y1 ) , NUM00 ) ) ; \n\t\tdouble dist2 = Math . sqrt ( Math . pow ( ( double ) ( arcCenter . x - x2 ) , NUM00 ) + Math . pow ( ( double ) ( arcCenter . y - y2 ) , NUM00 ) ) ; \n\t\tDebug . output ( NUM00 + arcCenter . x + NUM00 + arcCenter . y + NUM00 + Math . toDegrees ( inverseSlope ) + NUM00 ) ; \n\t\tDebug . output ( NUM00 + dist1 + NUM00 + dist2 ) ; \n\t\tOMRect point1 = new OMRect ( x1 - NUM00 , y1 - NUM00 , x1 + NUM00 , y1 + NUM00 ) ; \n\t\tOMRect point2 = new OMRect ( x2 - NUM00 , y2 - NUM00 , x2 + NUM00 , y2 + NUM00 ) ; \n\t\tOMRect arcPoint = new OMRect ( arcCenter . x - NUM00 , arcCenter . y - NUM00 , arcCenter . x + NUM00 , arcCenter . y + NUM00 ) ; \n\t\tpoint1 . setLinePaint ( OMColor . red ) ; \n\t\tpoint2 . setLinePaint ( OMColor . red ) ; \n\t\tarcPoint . setLinePaint ( OMColor . blue ) ; \n\t\tarcGraphics . add ( point1 ) ; \n\t\tarcGraphics . add ( point2 ) ; \n\t\tarcGraphics . add ( arcPoint ) ; \n\t\tOMLine line1 = new OMLine ( x1 , y1 , x2 , y2 ) ; \n\t\tOMLine line2 = new OMLine ( midPoint . x , midPoint . y , arcCenter . x , arcCenter . y ) ; \n\t\tarcGraphics . add ( line1 ) ; \n\t\tarcGraphics . add ( line2 ) ; \n\t\t} \n\tint realCount = NUM00 ; \n\tdouble startSlope = getRealAngle ( $F10740 ( arcCenter ) , $F10783 ( arcCenter ) , x1 , y1 ) ; \n\tdouble endSlope = getRealAngle ( $F10740 ( arcCenter ) , $F10783 ( arcCenter ) , x2 , y2 ) ; \n\tdouble smallSlope , largeSlope ; \n\tdouble angleIncrement ; \n\tsmallSlope = ( startSlope > endSlope ) ? endSlope : startSlope ; \n\tlargeSlope = ( smallSlope == startSlope ) ? endSlope : startSlope ; \n\twhile ( Math . abs ( smallSlope - largeSlope ) > Math . PI ) { \n\t\tif ( Math . abs ( largeSlope - smallSlope - Math . PI ) < NUM00 ) $F5153 $F36253 ( Debug ) double tmpSlope = smallSlope + MoreMath . TWO_PI ; \n\t\tsmallSlope = largeSlope ; \n\t\tlargeSlope = tmpSlope ; \n\t\t} \n\tif ( MoreMath . approximately_equal ( arcAngle , Math . PI ) && arcUp ) { \n\t\t$F36253 ( Debug ) double tmpSlope = smallSlope + MoreMath . TWO_PI ; \n\t\tsmallSlope = largeSlope ; \n\t\tlargeSlope = tmpSlope ; \n\t\t} \n\tif ( Math . abs ( y2 - y1 ) < Math . abs ( x2 - x1 ) ) { \n\t\tangleIncrement = Math . PI / Math . abs ( x2 - x1 ) ; \n\t\t} \n\telse { \n\t\tangleIncrement = Math . PI / Math . abs ( y2 - y1 ) ; \n\t\t} \n\tint numPoints = ( int ) ( Math . abs ( smallSlope - largeSlope ) / angleIncrement + NUM00 ) ; \n\t$F25850 ( xPoints , numPoints ) $F25850 ( yPoints , numPoints ) if $F22503 ( Debug ) { \n\t\tDebug . output ( NUM00 + startSlope + NUM00 + Math . toDegrees ( startSlope ) + NUM00 + endSlope + NUM00 + Math . toDegrees ( endSlope ) + NUM00 ) ; \n\t\tDebug . output ( NUM00 + smallSlope + NUM00 + Math . toDegrees ( smallSlope ) + NUM00 + largeSlope + NUM00 + Math . toDegrees ( largeSlope ) + NUM00 + angleIncrement + NUM00 + Math . toDegrees ( angleIncrement ) + NUM00 ) ; \n\t\t} \n\treversed = _BOOL ; \n\twhile ( smallSlope < largeSlope && realCount < numPoints ) { \n\t\txPoints [ realCount ] = arcCenter . x + ( int ) $F68927 ( arcRadius , Math , smallSlope ) ; \n\t\tyPoints [ realCount ] = arcCenter . y + ( int ) $F68922 ( arcRadius , Math , smallSlope ) ; \n\t\tif ( realCount == NUM00 && xPoints [ realCount ] == x2 ) { \n\t\t\t$F36253 ( Debug ) reversed = _BOOL ; \n\t\t\t} \n\t\tif ( Debug . debugging ( NUM00 ) && realCount == NUM00 ) { \n\t\t\tOMLine startLine = new OMLine ( arcCenter . x , arcCenter . y , $F42446 ( xPoints ) , $F42446 ( yPoints ) ) ; \n\t\t\tstartLine . setLinePaint ( OMColor . white ) ; \n\t\t\tarcGraphics . add ( startLine ) ; \n\t\t\t} \n\t\telse if $F22503 ( Debug ) { \n\t\t\tDebug . output ( NUM00 + smallSlope + NUM00 + smallSlope * NUM00 / Math . PI + NUM00 + xPoints [ realCount ] + NUM00 + yPoints [ realCount ] ) ; \n\t\t\t} \n\t\tif ( Math . abs ( largeSlope - smallSlope - ( arcAngle / NUM00 ) ) < angleIncrement ) { \n\t\t\tpeakPoint . setLocation ( xPoints [ realCount ] , yPoints [ realCount ] ) ; \n\t\t\t$F36253 ( Debug ) } \n\t\tsmallSlope += angleIncrement ; \n\t\trealCount ++ ; \n\t\t} \n\t$F189191 ( xpoints , realCount ) $F189191 ( ypoints , realCount ) $F135 ( System , xPoints , xpoints , realCount ) $F135 ( System , yPoints , ypoints , realCount ) } \n"}, {"code": "private static int compareLocales ( Locale primary , Locale other ) { \n\tfinal String lang = primary . getLanguage ( ) ; \n\tif ( ( lang == null ) || ! lang . equals ( other . getLanguage ( ) ) ) $F1083 final String country = primary . getCountry ( ) ; \n\tif ( ( country == null ) || ! country . equals ( other . getCountry ( ) ) ) $F1083 final String variant = primary . getVariant ( ) ; \n\tif ( ( variant == null ) || ! variant . equals ( other . getVariant ( ) ) ) $F1083 $F1082 } \n"}, {"code": "void queryReadResult ( PreparedStatement prep ) throws SQLException { \n\t$F49 ( rs , prep ) $F19097 ( meta , rs ) $F16742 ( columnCount , meta ) while $F1682 ( rs ) { \n\t\tfor ( $F119 ( i , columnCount ) ) { \n\t\t\trs . getString ( i + NUM00 ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F188545 ( sourceList , entry , _BOOL ) "}, {"code": "public boolean equals ( Object obj ) { \n\tif ( obj instanceof MSort ) { \n\t\tMSort ms = ( MSort ) obj ; \n\t\tif ( data == ms . data ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void endTransaction ( final CConnection connection ) throws SQLException { \n\tendTransaction ( connection . getConnection ( ) ) ; \n\t} \n"}, {"code": "public CCrossReferencesPanel $F72 { \n\t$F9898 ( super ) m_table . setSelectionMode ( ListSelectionModel . SINGLE_SELECTION ) ; \n\tadd ( new JScrollPane ( m_table ) ) ; \n\tm_table . addMouseListener ( new InternalMouseListener $F72 ) ; \n\t} \n"}, {"code": "private void doubleCapacity $F72 { \n\tint p = head ; \n\tint n = elements . length ; \n\tint r = n - p ; \n\tint newCapacity = n < < NUM00 ; \n\tif ( newCapacity < NUM00 ) $F4638 $F133 ( a , newCapacity ) $F21535 ( System , elements , p , a , r ) $F6483 ( System , elements , a , r , p ) elements = a ; \n\thead = NUM00 ; \n\ttail = n ; \n\t} \n"}, {"code": "private void changeOpenAMDebugFolder ( String newOpenAMDebugFolder ) { \n\tSystemPropertiesManager . initializeProperties ( DebugConstants . CONFIG_DEBUG_DIRECTORY , newOpenAMDebugFolder ) ; \n\t} \n"}, {"code": "protected String computeFullUrl ( URL baseUrl , String link ) { \n\t$F26918 ( link ) if $F14943 ( link ) { \n\t\tif $F3106 ( link ) { \n\t\t\tlink = baseUrl . getProtocol ( ) + NUM00 + baseUrl . getAuthority ( ) + link ; \n\t\t\t} \n\t\telse { \n\t\t\tif $F3578 ( link ) $F1337 $F14393 ( path , baseUrl ) if $F2364 ( path ) { \n\t\t\t\t$F24867 ( sep , path ) $F36289 ( file , path , sep ) if $F80721 ( file ) $F45799 ( path , sep ) } \n\t\t\tlink = baseUrl . getProtocol ( ) + NUM00 + baseUrl . getAuthority ( ) + path + NUM00 + link ; \n\t\t\t} \n\t\t} \n\tlink = normalizeUrlEnding ( link ) ; \n\tString l = $F131081 ( link , Locale ) ; \n\tif ( $F65411 ( l ) ) $F1337 return link ; \n\t} \n"}, {"code": "private void loadManifest $F72 { \n\t$F5453 ( _isManifestRead ) synchronized ( this ) { \n\t\t$F5453 ( _isManifestRead ) try { \n\t\t\t_manifest = _jarPath . getManifest ( ) ; \n\t\t\t$F8249 ( _manifest ) Attributes attr = _manifest . getMainAttributes ( ) ; \n\t\t\tif ( attr != null ) addManifestPackage ( NUM00 , attr ) ; \n\t\t\tMap < String , Attributes > entries = _manifest . getEntries ( ) ; \n\t\t\tfor ( Map . Entry < String , Attributes > entry : entries . entrySet ( ) ) { \n\t\t\t\t$F3477 ( pkg , entry ) $F37891 ( attr , entry ) $F45557 ( attr ) addManifestPackage ( pkg , attr ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( IOException e ) $F173189 ( log , Level , e ) finally { \n\t\t\t_isManifestRead = _BOOL ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public $F262544 convertToRawTypes ( $F262544 originalTypes , boolean forceErasure , boolean forceRawEnclosingType ) { \n\t$F1275 ( originalTypes ) $F262544 convertedTypes = originalTypes ; \n\tfor ( $F21059 ( i , length , originalTypes ) ) { \n\t\tReferenceBinding originalType = originalTypes [ i ] ; \n\t\tReferenceBinding convertedType = ( ReferenceBinding ) convertToRawType ( forceErasure ? originalType . erasure ( ) : originalType , forceRawEnclosingType ) ; \n\t\tif ( convertedType != originalType ) { \n\t\t\tif ( convertedTypes == originalTypes ) { \n\t\t\t\tSystem . arraycopy ( originalTypes , NUM00 , convertedTypes = new ReferenceBinding [ length ] , NUM00 , i ) ; \n\t\t\t\t} \n\t\t\tconvertedTypes [ i ] = convertedType ; \n\t\t\t} \n\t\telse if ( convertedTypes != originalTypes ) { \n\t\t\tconvertedTypes [ i ] = originalType ; \n\t\t\t} \n\t\t} \n\treturn convertedTypes ; \n\t} \n"}, {"code": "public void addColumn ( int idx , Column column ) { \n\tif ( column != null ) $F42308 ( columns , idx , column ) } \n"}, {"code": "public void readData ( DataInput din ) throws IOException { \n\t$F89921 ( reference , din ) $F89921 ( andMask , din ) $F89921 ( orMask , din ) } \n"}, {"code": "boolean removeDisplay ( Display display ) $F20067 ( m_displays , display ) "}, {"code": "public double nextGaussian $F72 { \n\tif ( mHaveNextNextGaussian ) { \n\t\tmHaveNextNextGaussian = _BOOL ; \n\t\treturn mNextNextGaussian ; \n\t\t} \n\telse { \n\t\tdouble v1 , v2 , s ; \n\t\tdo { \n\t\t\tv1 = NUM00 * nextDouble ( ) - NUM00 ; \n\t\t\tv2 = NUM00 * nextDouble ( ) - NUM00 ; \n\t\t\ts = v1 * v1 + v2 * v2 ; \n\t\t\t} \n\t\twhile ( s >= NUM00 || s == NUM00 ) ; \n\t\tfinal double multiplier = StrictMath . sqrt ( $F130364 ( StrictMath , s ) / s ) ; \n\t\tmNextNextGaussian = v2 * multiplier ; \n\t\tmHaveNextNextGaussian = _BOOL ; \n\t\treturn v1 * multiplier ; \n\t\t} \n\t} \n"}, {"code": "private void fireEvent ( final IRunningQuery q ) { \n\t$F10057 ( q ) $F19233 ( listeners ) final IRunningQueryListener [ ] a = listeners . toArray ( new IRunningQueryListener $F380 ) ; \n\tfor ( IRunningQueryListener l : a ) { \n\t\tfinal IRunningQueryListener listener = l ; \n\t\ttry { \n\t\t\tlistener . notify ( q ) ; \n\t\t\t} \n\t\tcatch ( Throwable t ) { \n\t\t\tif ( InnerCause . isInnerCause ( t , InterruptedException . class ) ) $F9491 ( t ) log . error ( t , t ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void updateContactHeaderPort ( int localPort , SIPMessage message ) { \n\tif ( message != null && message . getContactHeader ( ) != null ) { \n\t\tContactHeader contactHeader = message . getContactHeader ( ) ; \n\t\tAddress contactAddress = contactHeader . getAddress ( ) ; \n\t\tcontactAddress . setPort ( localPort ) ; \n\t\t} \n\t} \n"}, {"code": "public static AndroidHttpClient newInstance ( String userAgent ) $F13736 ( newInstance , userAgent ) "}, {"code": "$F5466 GridCacheMvccCandidate addEntry ( GridLocalCacheEntry entry ) throws GridCacheEntryRemovedException { \n\tGridCacheMvccCandidate c = entry . addLocal ( threadId , lockVer , null , null , timeout , ! inTx ( ) , inTx ( ) , implicitSingle ( ) , _BOOL ) ; \n\tentries . add ( entry ) ; \n\tif ( c == null && timeout < NUM00 ) { \n\t\t$F51620 ( log , entry ) onFailed ( ) ; \n\t\t$F1274 } \n\tif ( c != null ) { \n\t\tentry . readyLocal ( c ) ; \n\t\t} \n\treturn c ; \n\t} \n"}, {"code": "$F1 public void visitVertex ( StreetRouter . State state ) { \n\tInteger edgeIdx = state . backEdge ; \n\tif ( ! ( edgeIdx == null || edgeIdx == - NUM00 ) ) { \n\t\tEdgeStore . Edge edge = edgeStore . getCursor ( edgeIdx ) ; \n\t\tGeoJsonFeature feature = new GeoJsonFeature ( edge . getGeometry ( ) ) ; \n\t\tfeature . addProperty ( NUM00 , state . weight ) ; \n\t\tfeature . addProperty ( NUM00 , state . streetMode ) ; \n\t\tfeature . addProperty ( NUM00 , state . backEdge ) ; \n\t\tfeatures . add ( feature ) ; \n\t\t} \n\t} \n"}, {"code": "public void test_BSBM_Q1_noSolutions $F72 throws Exception { \n\tfinal TestHelper helper = new TestHelper ( NUM00 , NUM00 , $F58906 , NUM00 ) ; \n\tassertSameJoinOrder ( new int [ ] { \n\t\tNUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t, helper ) ; \n\t} \n"}, {"code": "public static void deleteFileOrLog ( File file ) { \n\tif $F7119 ( file ) { \n\t\tlogger . warn ( FAILED_DELETING_FILE + file . getPath ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F233307 ( index , super , mMaxValues ) "}, {"code": "public GitlabGroupMember addGroupMember ( GitlabGroup group , GitlabUser user , GitlabAccessLevel accessLevel ) throws IOException { \n\treturn addGroupMember ( group . getId ( ) , user . getId ( ) , accessLevel ) ; \n\t} \n"}, {"code": "protected Logger ( String name , String resourceBundleName ) { \n\tsuper ( name , resourceBundleName ) ; \n\t} \n"}, {"code": "$F1 public void increment ( double coord , short val ) { \n\tint bin = getBinNr ( coord ) ; \n\tif ( bin < NUM00 ) { \n\t\tif ( size - bin > data . length ) { \n\t\t\t$F5078 tmpdata = new short [ growSize ( data . length , size - bin ) ] ; \n\t\t\tSystem . arraycopy ( data , NUM00 , tmpdata , - bin , size ) ; \n\t\t\tdata = tmpdata ; \n\t\t\t} \n\t\telse { \n\t\t\tSystem . arraycopy ( data , NUM00 , data , - bin , size ) ; \n\t\t\tArrays . fill ( data , NUM00 , - bin , $F15211 ) ; \n\t\t\t} \n\t\tdata [ NUM00 ] = val ; \n\t\tassert ( data . length >= size - bin ) ; \n\t\toffset -= bin ; \n\t\tsize -= bin ; \n\t\t} \n\telse if ( bin >= data . length ) { \n\t\t$F5078 tmpdata = new short [ growSize ( data . length , bin + NUM00 ) ] ; \n\t\t$F135 ( System , data , tmpdata , size ) tmpdata [ bin ] = val ; \n\t\tdata = tmpdata ; \n\t\tsize = bin + NUM00 ; \n\t\tmax = Double . MAX_VALUE ; \n\t\t} \n\telse { \n\t\tif ( bin >= size ) { \n\t\t\tsize = bin + NUM00 ; \n\t\t\t} \n\t\tdata [ bin ] += val ; \n\t\t} \n\t} \n"}, {"code": "$F82267 ( expression , errorMessage , String ) "}, {"code": "default Document putAll ( Map < ? extends CharSequence , Object > fields ) { \n\tif ( fields != null ) { \n\t\tfor ( Map . Entry < ? extends CharSequence , Object > entry : fields . entrySet ( ) ) { \n\t\t\t$F151386 ( set , entry ) } \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "private boolean containsIgnoreCase $F72133 ( stringlist , match ) { \n\tfor ( String s : stringlist ) $F72434 ( s , match , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "public static double computeMAD $F280936 ( x , median ) { \n\tfor ( $F1139 ( i , x ) ) { \n\t\tx [ i ] = Math . abs ( x [ i ] - median ) ; \n\t\t} \n\tdouble mad = QuickSelect . median ( x ) ; \n\tif $F102905 ( mad ) { \n\t\tdouble min = Double . POSITIVE_INFINITY ; \n\t\tfor ( double xi : x ) { \n\t\t\tif ( xi > NUM00 && xi < min ) { \n\t\t\t\tmin = xi ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( min < Double . POSITIVE_INFINITY ) { \n\t\t\tmad = min ; \n\t\t\t} \n\t\telse { \n\t\t\tmad = NUM00 ; \n\t\t\t} \n\t\t} \n\treturn mad ; \n\t} \n"}, {"code": "private static $F4203 void initializeKnownPlugins ( final T pluginInterface , final IPluginRegistry < IPlugin $F4203 > registry , final List < PluginConfigItem > xmlPluginOrder , final List < Pair < IPlugin $F4203 , PluginStatus > > validatedPlugins , final List < Pair < IPlugin $F4203 , Exception > > initializedPlugins , final $F60758 processedPlugins ) { \n\tfor ( final PluginConfigItem pt : xmlPluginOrder ) { \n\t\tprocessedPlugins . add ( pt . getGUID ( ) ) ; \n\t\tfinal IPlugin $F4203 plugin = findPlugin ( validatedPlugins , pt . getGUID ( ) ) ; \n\t\tif ( plugin != null ) { \n\t\t\tif ( pt . isLoad ( ) ) { \n\t\t\t\tinitializePlugin ( plugin , pluginInterface , registry , initializedPlugins ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tregistry . addDisabledPlugin ( plugin , DisabledPluginReason . NotLoaded ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static void sessionStop $F72 { \n\t$F8249 ( mProcess ) $F17623 ( mProcess ) mProcess = null ; \n\t} \n"}, {"code": "public static void keepAlive ( final boolean keepAlive ) { \n\t$F68359 ( setProperty , Boolean , keepAlive ) ; \n\t} \n"}, {"code": "public static Request newUploadVideoRequest ( Session session , File file , Callback callback ) throws FileNotFoundException { \n\tParcelFileDescriptor descriptor = ParcelFileDescriptor . open ( file , ParcelFileDescriptor . MODE_READ_ONLY ) ; \n\tBundle parameters = new Bundle $F989 ; \n\tparameters . putParcelable ( file . getName ( ) , descriptor ) ; \n\treturn new Request ( session , MY_VIDEOS , parameters , HttpMethod . POST , callback ) ; \n\t} \n"}, {"code": "private static $F96 readCheckedBytes $F5474 ( buffer , dataSize ) throws InvalidProtocolBufferNanoException { \n\tCheckedMessage wrapper = new CheckedMessage $F72 ; \n\tMessageNano . mergeFrom ( wrapper , buffer , NUM00 , dataSize ) ; \n\t$F64750 ( checksum ) $F64752 ( checksum , wrapper ) if ( wrapper . checksum != checksum . getValue ( ) ) { \n\t\tthrow new InvalidProtocolBufferNanoException $F580 ; \n\t\t} \n\treturn wrapper . payload ; \n\t} \n"}, {"code": "private MulticastSocket createSocket $F72 throws IOException { \n\tMulticastSocket sock = new MulticastSocket ( mcastPort ) ; \n\tsock . setLoopbackMode ( _BOOL ) ; \n\tif ( sockItf != null ) sock . setInterface ( sockItf ) ; \n\tif ( sock . getLoopbackMode ( ) ) U . warn ( log , NUM00 + NUM00 ) ; \n\tsock . joinGroup ( mcastGrp ) ; \n\tif ( ttl != - NUM00 ) sock . setTimeToLive ( ttl ) ; \n\treturn sock ; \n\t} \n"}, {"code": "void copyNodeStructure ( $F93424 destination ) { \n\twhile $F45088 ( destination , nodes ) destination . add ( new Node $F72 ) ; \n\twhile $F92752 ( destination , nodes ) $F86372 ( destination ) $F2199 ( n , nodes ) for ( $F119 ( i , n ) ) { \n\t\t$F22142 ( node0 , nodes , i ) $F22142 ( node1 , destination , i ) node1 . heightParameter = node0 . heightParameter ; \n\t\tnode1 . rateParameter = node0 . rateParameter ; \n\t\tnode1 . traitParameter = node0 . traitParameter ; \n\t\tnode1 . partitioning = node0 . partitioning ; \n\t\tnode1 . taxon = node0 . taxon ; \n\t\tnode1 . bifurcation = node0 . bifurcation ; \n\t\tnode1 . number = node0 . number ; \n\t\tnode1 . myHashCode = node0 . myHashCode ; \n\t\tif ( node0 . leftParent != null ) { \n\t\t\tnode1 . leftParent = storedNodes . get ( nodes . indexOf ( node0 . leftParent ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tnode1 . leftParent = null ; \n\t\t\t} \n\t\tif ( node0 . rightParent != null ) { \n\t\t\tnode1 . rightParent = storedNodes . get ( nodes . indexOf ( node0 . rightParent ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tnode1 . rightParent = null ; \n\t\t\t} \n\t\tif ( node0 . leftChild != null ) { \n\t\t\tnode1 . leftChild = storedNodes . get ( nodes . indexOf ( node0 . leftChild ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tnode1 . leftChild = null ; \n\t\t\t} \n\t\tif ( node0 . rightChild != null ) { \n\t\t\tnode1 . rightChild = storedNodes . get ( nodes . indexOf ( node0 . rightChild ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tnode1 . rightChild = null ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void checkSelectedSubsetMetaData ( ExampleSetMetaData subsetMetaData ) $F845 "}, {"code": "private void validateWill ( String dest , Object payload ) { \n\tif $F54923 ( dest , payload ) $F26853 MqttTopic . validate ( dest , _BOOL ) ; \n\t} \n"}, {"code": "public BerInputStream ( InputStream in , int initialSize ) throws IOException { \n\tthis . in = in ; \n\t$F1325 ( buffer , initialSize ) next ( ) ; \n\tif ( length != INDEFINIT_LENGTH ) { \n\t\tif ( buffer . length < ( length + offset ) ) { \n\t\t\t$F112445 ( newBuffer , length , offset ) $F135 ( System , buffer , newBuffer , offset ) buffer = newBuffer ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tisIndefinedLength = _BOOL ; \n\t\tthrow new ASN1Exception $F580 ; \n\t\t} \n\t} \n"}, {"code": "private Member nextMember ( Member . Type type ) { \n\treturn new TestMember ( type , new Address ( NUM00 , ++ port ) , new Address ( NUM00 , port + NUM00 ) ) ; \n\t} \n"}, {"code": "protected void encodeLineSuffix ( OutputStream aStream ) throws IOException $F46210 ( pStream ) "}, {"code": "boolean isSystemFont $F72 { \n\treturn systemFont ; \n\t} \n"}, {"code": "public void addToBeLoaded ( final String url ) { \n\t$F30647 ( toBeLoaded ) if $F16093 ( StringUtils , url ) $F207 ( toBeLoaded , url ) } \n"}, {"code": "default Document putAll ( Iterator < Field > fields ) { \n\twhile $F2921 ( fields ) { \n\t\tField field = fields . next ( ) ; \n\t\tsetValue ( field . getName ( ) , field . getValue ( ) ) ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "public AppraiseGitReviewClient ( Repository repo ) { \n\tthis . repo = repo ; \n\tthis . author = new PersonIdent ( repo ) ; \n\t} \n"}, {"code": "public RootBlockView ( final boolean rootBlock0 , final ByteBuffer buf , final ChecksumUtility checker ) throws RootBlockException { \n\t$F10057 ( buf ) if ( buf . remaining ( ) != SIZEOF_ROOT_BLOCK ) { \n\t\tthrow new IllegalArgumentException ( NUM00 + SIZEOF_ROOT_BLOCK + NUM00 + buf . remaining ( ) ) ; \n\t\t} \n\tthis . buf = buf . asReadOnlyBuffer ( ) ; \n\tthis . rootBlock0 = rootBlock0 ; \n\tswitch ( getStoreType ( ) ) { \n\t\tcase RW : { \n\t\t\tam = new RWAddressManager $F8320 ; \n\t\t\t$F597 } \n\t\tcase WORM : { \n\t\t\t$F3666 ( offsetBits , getOffsetBits ) am = new WormAddressManager ( offsetBits ) ; \n\t\t\t$F597 } \n\t\t$F1267 throw new RootBlockException ( NUM00 + getStoreType ( ) ) ; \n\t\t} \n\tif ( checker == null ) $F10911 ( log ) this . checker = checker ; \n\tvalid ( ) ; \n\t} \n"}, {"code": "protected SOAPRequest createSOAPRequest ( final String methodName , final SOAPMethodRequestWriter requestWriter ) { \n\tfinal PostMethod method = new PostMethod $F3362 ( endpoint ) ; \n\tmethod . setContentChunked ( _BOOL ) ; \n\tsetRequestHeaders ( method , methodName ) ; \n\tfinal SOAPRequestEntity requestEntity = buildRequestEntity ( methodName , requestWriter ) ; \n\trequestEntity . setSOAPHeaderProvider ( soapHeaderProvider ) ; \n\tfinal BufferedSOAPRequestEntity bufferedEntity = new BufferedSOAPRequestEntity ( requestEntity ) ; \n\tmethod . setRequestEntity ( bufferedEntity ) ; \n\treturn new SOAPRequest ( method , requestEntity ) ; \n\t} \n"}, {"code": "$F1431 $F32043 public void innerEnum $F72 { \n\t$F6969 pc = PlayingCard . class ; \n\tList < $F40588 > $F204 ( include ) ; \n\tList < $F40588 > $F204 ( exclude ) ; \n\tfor ( $F6969 c : pc . getDeclaredClasses ( ) ) { \n\t\t$F23165 ( mods , c ) if ( c . isEnum ( ) ) { \n\t\t\tif ( Modifier . isPublic ( mods ) ) { \n\t\t\t\tinclude . addAll ( asList ( c . getEnumConstants ( ) ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\texclude . addAll ( asList ( c . getEnumConstants ( ) ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tSet < TypedOperation > actual = getConcreteOperations ( pc ) ; \n\tassertEquals ( NUM00 , $F2958 ( include ) , actual . size ( ) ) ; \n\tfor ( $F40588 e : include ) { \n\t\tassertTrue ( $F106222 ( e ) , actual . contains ( createEnumOperation ( e ) ) ) ; \n\t\t} \n\tfor ( $F40588 e : exclude ) { \n\t\tassertFalse ( $F106222 ( e ) , actual . contains ( createEnumOperation ( e ) ) ) ; \n\t\t} \n\t} \n"}, {"code": "public String toURI $F72 { \n\t$F126634 ( buffer ) buffer . append ( this . schemeName ) ; \n\t$F84 ( buffer ) buffer . append ( this . hostname ) ; \n\tif ( this . port != - NUM00 ) { \n\t\t$F84 ( buffer ) buffer . append ( Integer . toString ( this . port ) ) ; \n\t\t} \n\t$F92 ( buffer ) } \n"}, {"code": "public void testWildcardsDoesNotNeedTwoDots $F72 throws Exception { \n\tString cert = $F40645 ; \n\t$F5348 ( cf , CertificateFactory ) InputStream $F21318 ( in , cert ) ; \n\t$F77786 ( x509 , cf , in ) mySSLSession session = new mySSLSession ( new X509Certificate [ ] { \n\t\tx509 } \n\t) ; \n\tHostnameVerifier verifier = HttpsURLConnection . getDefaultHostnameVerifier ( ) ; \n\tassertTrue ( verifier . verify ( NUM00 , session ) ) ; \n\t} \n"}, {"code": "public static boolean inTargetDir ( File file ) { \n\treturn inTargetDir ( file . toPath ( ) ) ; \n\t} \n"}, {"code": "public final boolean skipAny ( char c , CharSequence csq ) { \n\tint i = index ; \n\t$F1749 ( n , csq ) for ( ; \n\t( i < n ) && $F44927 ( csq , i , c ) ; \n\ti ++ ) $F845 if ( i == index ) return _BOOL ; \n\tindex = i ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void generateUniformIntegerExamples ( Instances format , int numInstances , SubspaceClusterDefinition cl , String cName ) { \n\tInstance example = null ; \n\tint numAtts = m_NumAttributes ; \n\tif ( getClassFlag ( ) ) { \n\t\tnumAtts ++ ; \n\t\t} \n\texample = new DenseInstance ( numAtts ) ; \n\texample . setDataset ( format ) ; \n\t$F8748 attributes = cl . getAttributes ( ) ; \n\t$F1986 minValue = cl . getMinValue ( ) ; \n\t$F1986 maxValue = cl . getMaxValue ( ) ; \n\t$F22974 ( minInt , minValue ) $F22974 ( maxInt , maxValue ) $F22974 ( intValue , maxValue ) $F22974 ( numInt , minValue ) int num = NUM00 ; \n\tfor ( $F1139 ( i , minValue ) ) { \n\t\tminInt [ i ] = ( int ) Math . ceil ( minValue [ i ] ) ; \n\t\tmaxInt [ i ] = ( int ) Math . floor ( maxValue [ i ] ) ; \n\t\tnumInt [ i ] = ( maxInt [ i ] - minInt [ i ] + NUM00 ) ; \n\t\tnum = num * numInt [ i ] ; \n\t\t} \n\tint numEach = numInstances / num ; \n\tint rest = numInstances - numEach * num ; \n\tfor ( $F119 ( i , m_NumAttributes ) ) { \n\t\tif ( attributes [ i ] ) { \n\t\t\texample . setValue ( i , minInt [ i ] ) ; \n\t\t\tintValue [ i ] = minInt [ i ] ; \n\t\t\t} \n\t\telse { \n\t\t\texample . setMissing ( i ) ; \n\t\t\t} \n\t\t} \n\tif ( getClassFlag ( ) ) { \n\t\texample . setClassValue ( cName ) ; \n\t\t} \n\tint added = NUM00 ; \n\tint attr = NUM00 ; \n\tdo { \n\t\tfor ( $F119 ( k , numEach ) ) { \n\t\t\tformat . add ( example ) ; \n\t\t\texample = $F69871 ( example ) ; \n\t\t\tadded ++ ; \n\t\t\t} \n\t\tif ( rest > NUM00 ) { \n\t\t\tformat . add ( example ) ; \n\t\t\texample = $F69871 ( example ) ; \n\t\t\tadded ++ ; \n\t\t\trest -- ; \n\t\t\t} \n\t\t$F66497 ( added , numInstances ) boolean done = _BOOL ; \n\t\tdo { \n\t\t\tif ( attributes [ attr ] && ( intValue [ attr ] + NUM00 <= maxInt [ attr ] ) ) { \n\t\t\t\tintValue [ attr ] ++ ; \n\t\t\t\tdone = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tattr ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\twhile ( ! done ) ; \n\t\texample . setValue ( attr , intValue [ attr ] ) ; \n\t\t} \n\twhile ( added < numInstances ) ; \n\t} \n"}, {"code": "public synchronized boolean removeAll ( Collection c ) { \n\t$F8867 ( elements , getArray ) int len = elements . length ; \n\tif ( len != NUM00 ) { \n\t\tint newlen = NUM00 ; \n\t\t$F133 ( temp , len ) for ( $F1316 ( i , len ) ) { \n\t\t\tObject element = elements [ i ] ; \n\t\t\tif $F2200 ( c , element ) temp [ newlen ++ ] = element ; \n\t\t\t} \n\t\tif ( newlen != len ) { \n\t\t\tsetArray ( copyOfRange ( temp , NUM00 , newlen , $F22453 ) ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F278301 ( expect , update , unsafe , this , tailOffset ) "}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public Phone createPhone ( String value ) { \n\tPhoneField phoneImpl = new PhoneField $F72 ; \n\ttry $F18283 ( phoneImpl , value ) $F18284 ( s ) return phoneImpl ; \n\t} \n"}, {"code": "private ListResourceBundle loadResourceBundle ( String resourceBundle ) throws MissingResourceException { \n\tm_resourceBundleName = resourceBundle ; \n\tLocale locale = getLocale ( ) ; \n\tListResourceBundle lrb ; \n\ttry { \n\t\tResourceBundle rb = ResourceBundle . getBundle ( m_resourceBundleName , locale ) ; \n\t\tlrb = ( ListResourceBundle ) rb ; \n\t\t} \n\tcatch ( MissingResourceException e ) { \n\t\ttry { \n\t\t\tlrb = ( ListResourceBundle ) $F9125 ( ResourceBundle , m_resourceBundleName ) ; \n\t\t\t} \n\t\tcatch ( MissingResourceException e2 ) { \n\t\t\tthrow new MissingResourceException ( NUM00 + m_resourceBundleName , m_resourceBundleName , NUM00 ) ; \n\t\t\t} \n\t\t} \n\tm_resourceBundle = lrb ; \n\treturn lrb ; \n\t} \n"}, {"code": "private $F2689 returnRemotePoolsAssociatedWithRemoteCopySettings ( $F224310 ( remoteCopySettings ) , $F2689 poolUris ) { \n\t$F2695 ( remotePoolUris ) for ( $F164545 ( entry , remoteCopySettings ) ) { \n\t\tVirtualPool vPool = _objectCache . queryObject ( $F81883 , URI . create ( entry . getKey ( ) ) ) ; \n\t\tif ( null == vPool ) $F21926 ( remotePoolUris , poolUris ) else if ( null != vPool . getUseMatchedPools ( ) && vPool . getUseMatchedPools ( ) ) { \n\t\t\tif ( null != vPool . getMatchedStoragePools ( ) ) { \n\t\t\t\tremotePoolUris . addAll ( vPool . getMatchedStoragePools ( ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( null != vPool . getAssignedStoragePools ( ) ) { \n\t\t\tremotePoolUris . addAll ( vPool . getAssignedStoragePools ( ) ) ; \n\t\t\t} \n\t\t} \n\treturn remotePoolUris ; \n\t} \n"}, {"code": "private String convertToHtml ( final String string ) { \n\treturn $F37742 ( string ) + NUM00 ; \n\t} \n"}, {"code": "private synchronized void addLock ( FileLock lock ) throws OverlappingFileLockException { \n\tlong lockEnd = lock . position ( ) + lock . size ( ) ; \n\tfor ( FileLock existingLock : locks ) { \n\t\tif ( existingLock . position ( ) > lockEnd ) $F5153 if ( existingLock . overlaps ( lock . position ( ) , lock . size ( ) ) ) { \n\t\t\tthrow new OverlappingFileLockException $F72 ; \n\t\t\t} \n\t\t} \n\tlocks . add ( lock ) ; \n\t} \n"}, {"code": "public static void UF7 $F93381 ( x , f , nx ) { \n\tint count1 = NUM00 ; \n\tint count2 = NUM00 ; \n\tdouble sum1 = NUM00 ; \n\tdouble sum2 = NUM00 ; \n\tdouble yj ; \n\tfor ( $F9993 ( j , nx ) ) { \n\t\t$F94025 ( yj , x , j , Math , PI , nx ) if ( j % NUM00 == NUM00 ) { \n\t\t\tsum2 += yj * yj ; \n\t\t\tcount2 ++ ; \n\t\t\t} \n\t\telse { \n\t\t\tsum1 += yj * yj ; \n\t\t\tcount1 ++ ; \n\t\t\t} \n\t\t} \n\tyj = Math . pow ( x [ NUM00 ] , NUM00 ) ; \n\tf [ NUM00 ] = yj + NUM00 * sum1 / ( double ) count1 ; \n\tf [ NUM00 ] = NUM00 - yj + NUM00 * sum2 / ( double ) count2 ; \n\t} \n"}, {"code": "private void reloadModelWithNewValue ( final Long newValue ) { \n\tfinal long newValueAsPrimitive = newValue == null ? getModelUpdatePeriod ( ) : newValue ; \n\tfor ( final PropertyChangeListener listener : modelUpdatePeriodListeners ) { \n\t\tfinal PropertyChangeEvent event = new PropertyChangeEvent ( this , NUM00 , getModelUpdatePeriod ( ) , newValueAsPrimitive ) ; \n\t\tlistener . propertyChange ( event ) ; \n\t\t} \n\t} \n"}, {"code": "public static final String moveToUCIString ( Move m ) { \n\tString ret = squareToString ( m . from ) ; \n\tret += squareToString ( m . to ) ; \n\tswitch ( m . promoteTo ) { \n\t\tcase Piece . WQUEEN : case Piece . BQUEEN : ret += NUM00 ; \n\t\t$F597 case Piece . WROOK : case Piece . BROOK : ret += NUM00 ; \n\t\t$F597 case Piece . WBISHOP : case Piece . BBISHOP : ret += NUM00 ; \n\t\t$F597 case Piece . WKNIGHT : case Piece . BKNIGHT : ret += NUM00 ; \n\t\t$F597 $F2448 } \n\treturn ret ; \n\t} \n"}, {"code": "public Image createAcceleratedImage ( Component target , int width , int height ) { \n\tColorModel model = getColorModel ( Transparency . OPAQUE ) ; \n\tWritableRaster wr = model . createCompatibleWritableRaster ( width , height ) ; \n\treturn new OffScreenImage ( target , model , wr , model . isAlphaPremultiplied ( ) ) ; \n\t} \n"}, {"code": "public void displayState $F72 { \n\tPrintWriter xout = context . get ( Log . outKey ) ; \n\t$F7957 ( xout , fileObjectHistory ) $F7957 ( xout , openTypeNames ) $F7957 ( xout , generatedSourceNames ) xout . println ( NUM00 + generatedClasses . keySet ( ) ) ; \n\t$F7957 ( xout , aggregateGeneratedSourceNames ) $F7957 ( xout , aggregateGeneratedClassNames ) } \n"}, {"code": "public static void writeStringToWriter ( String string , Writer writer ) throws IOException { \n\t$F5172 ( bw , writer ) $F40754 ( bw , string ) } \n"}, {"code": "$F326023 ( n , max , data , length , System , newData ) "}, {"code": "public final void decRef $F72 throws IOException { \n\tensureOpen ( ) ; \n\tfinal int rc = refCount . decrementAndGet ( ) ; \n\tif ( rc == NUM00 ) { \n\t\tboolean success = _BOOL ; \n\t\ttry { \n\t\t\tdoClose ( ) ; \n\t\t\tclosed = _BOOL ; \n\t\t\tsuccess = _BOOL ; \n\t\t\t} \n\t\tfinally { \n\t\t\tif ( ! success ) $F16878 ( refCount ) } \n\t\t} \n\telse if ( rc < NUM00 ) $F322689 ( rc ) } \n"}, {"code": "public static X500Name x500PrincipalToX500Name ( X500Principal principal ) { \n\treturn X500Name . getInstance ( KseX500NameStyle . INSTANCE , principal . getEncoded ( ) ) ; \n\t} \n"}, {"code": "private void assertDescribedResource ( final BigdataValue describedResource , final IDescribeCache describeCache , final TestHelper h ) { \n\tfinal Graph actualGraph = describeCache . lookup ( describedResource . getIV ( ) ) ; \n\tassertNotNull ( actualGraph ) ; \n\tfinal $F12622 expectedGraph = getExpectedDescription ( describedResource , h ) ; \n\th . compareGraphs ( new HashSet $F12621 ( actualGraph ) , expectedGraph ) ; \n\tfor ( Statement stmt : actualGraph ) { \n\t\tassertTrue ( stmt instanceof BigdataStatement ) ; \n\t\tfinal BigdataStatement st = ( BigdataStatement ) stmt ; \n\t\tassertNotNull ( st . s ( ) ) ; \n\t\tassertNotNull ( st . p ( ) ) ; \n\t\tassertNotNull ( st . o ( ) ) ; \n\t\tif ( st . getContext ( ) != null ) { \n\t\t\tassertNotNull ( st . c ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean isFlat $F72 { \n\treturn $F19068 ( TYPE_FLAT , getType ) ; \n\t} \n"}, {"code": "$F1309 private List $F11616 buildLimitedNetworksList $F72 { \n\tfinal Context context = getActivity ( ) ; \n\tfinal ArrayList $F11616 limited = Lists . newArrayList ( ) ; \n\tif ( hasSubscription ( context ) ) { \n\t\tfinal String subscriberId = getActiveSubscriberId ( context ) ; \n\t\tif ( mPolicyEditor . hasLimitedPolicy ( buildTemplateMobileAll ( subscriberId ) ) ) { \n\t\t\tlimited . add ( getText ( R . string . data_usage_list_mobile ) ) ; \n\t\t\t} \n\t\tif ( mPolicyEditor . hasLimitedPolicy ( buildTemplateMobile3gLower ( subscriberId ) ) ) { \n\t\t\tlimited . add ( getText ( R . string . data_usage_tab_3g ) ) ; \n\t\t\t} \n\t\tif ( mPolicyEditor . hasLimitedPolicy ( buildTemplateMobile4g ( subscriberId ) ) ) { \n\t\t\tlimited . add ( getText ( R . string . data_usage_tab_4g ) ) ; \n\t\t\t} \n\t\t} \n\tif ( mPolicyEditor . hasLimitedPolicy ( buildTemplateWifiWildcard ( ) ) ) { \n\t\tlimited . add ( getText ( R . string . data_usage_tab_wifi ) ) ; \n\t\t} \n\tif ( mPolicyEditor . hasLimitedPolicy ( buildTemplateEthernet ( ) ) ) { \n\t\tlimited . add ( getText ( R . string . data_usage_tab_ethernet ) ) ; \n\t\t} \n\treturn limited ; \n\t} \n"}, {"code": "public int evalRPN $F4374 ( tokens ) { \n\tif $F12414 ( tokens ) $F1082 Stack $F4 s = new Stack $F4 $F72 ; \n\tint len = tokens . length ; \n\tfor ( $F119 ( i , len ) ) { \n\t\tString cur = tokens [ i ] ; \n\t\tif ( isOperator ( cur ) ) { \n\t\t\tint t2 = Integer . parseInt ( s . pop ( ) ) ; \n\t\t\tint t1 = Integer . parseInt ( s . pop ( ) ) ; \n\t\t\tint res = calculate ( t1 , t2 , cur ) ; \n\t\t\ts . push ( Integer . toString ( res ) ) ; \n\t\t\t} \n\t\telse s . push ( cur ) ; \n\t\t} \n\treturn Integer . valueOf ( s . peek ( ) ) ; \n\t} \n"}, {"code": "public synchronized void addAllSeries ( List < XYSeries > series ) $F21926 ( mSeries , series ) "}, {"code": "private static void exit ( String errMsg , Options options , int exitCode ) { \n\tif ( errMsg != null ) echo ( NUM00 + errMsg ) ; \n\tString runner = System . getProperty ( IGNITE_PROG_NAME , NUM00 ) ; \n\t$F1384 ( space , runner ) runner = runner . substring ( NUM00 , space == - NUM00 ? runner . length ( ) : space ) ; \n\tif ( options != null ) { \n\t\tHelpFormatter formatter = new HelpFormatter $F72 ; \n\t\tformatter . printHelp ( runner , options ) ; \n\t\t} \n\tSystem . exit ( exitCode ) ; \n\t} \n"}, {"code": "$F1 public int compare ( NewSplitEmittedTerm term1 , NewSplitEmittedTerm term2 ) $F128741 ( term1 , term2 ) "}, {"code": "public AABB merge ( AABB other ) { \n\t$F36071 ( minX , Math , other ) $F36074 ( maxX , Math , other ) $F36071 ( minY , Math , other ) $F36074 ( maxY , Math , other ) $F36071 ( minZ , Math , other ) $F36074 ( maxZ , Math , other ) return this ; \n\t} \n"}, {"code": "public static String generateAutoTag ( int stackOffset ) { \n\t$F11340 currentStack = getCurrentStack ( ) ; \n\tStackTraceElement element = currentStack [ stackOffset ] ; \n\tString className = element . getClassName ( ) ; \n\tString pkgPath [ ] = className . split ( NUM00 ) ; \n\tif $F3305 ( pkgPath ) { \n\t\t$F79270 ( className , pkgPath ) ; \n\t\t} \n\t$F83 ( sbInnerClass ) int index ; \n\tString strLoop = className ; \n\twhile ( ( index = strLoop . lastIndexOf ( NUM00 ) ) != - NUM00 ) { \n\t\t$F36289 ( piece , strLoop , index ) $F34005 ( sbInnerClass , piece ) if $F48318 ( piece ) $F5153 $F2864 ( sbInnerClass ) $F45799 ( strLoop , index ) } \n\tif ( $F15506 ( sbInnerClass ) ) $F74607 ( sbInnerClass ) $F1822 ( innerClassName , sbInnerClass ) if ( TextUtils . isDigitsOnly ( innerClassName ) ) { \n\t\tinnerClassName = null ; \n\t\t} \n\treturn TextUtils . isEmpty ( innerClassName ) ? className : innerClassName ; \n\t} \n"}, {"code": "public void flushPending $F72 throws SAXException { \n\t$F62355 ( m_needToCallStartDocument , startDocumentInternal , _BOOL ) if ( m_elemContext . m_startTagOpen ) $F42845 ( closeStartTag , m_elemContext , _BOOL ) $F62355 ( m_cdataTagOpen , closeCDATA , _BOOL ) if ( m_writer != null ) { \n\t\ttry $F29882 ( m_writer ) $F29052 } \n\t} \n"}, {"code": "private void handleSubscribe $F4374 ( args ) { \n\tswitch ( args [ NUM00 ] ) { \n\t\t$F1262 TestSubscriber < Payload > rrsub = new TestSubscriber $F200 $F989 ; \n\t\tpayloadSubscribers . put ( args [ NUM00 ] , rrsub ) ; \n\t\t$F266434 ( idToType , args ) ReactiveSocket rrclient = createClient . get ( ) ; \n\t\tPublisher < Payload > rrpub = rrclient . requestResponse ( new PayloadImpl $F76125 ( args ) ) ; \n\t\trrpub . subscribe ( rrsub ) ; \n\t\t$F597 $F1262 TestSubscriber < Payload > rssub = new TestSubscriber $F200 $F989 ; \n\t\tpayloadSubscribers . put ( args [ NUM00 ] , rssub ) ; \n\t\t$F266434 ( idToType , args ) ReactiveSocket rsclient = createClient . get ( ) ; \n\t\tPublisher < Payload > rspub = rsclient . requestStream ( new PayloadImpl $F76125 ( args ) ) ; \n\t\trspub . subscribe ( rssub ) ; \n\t\t$F597 $F1262 TestSubscriber < Payload > rsubsub = new TestSubscriber $F200 $F989 ; \n\t\tpayloadSubscribers . put ( args [ NUM00 ] , rsubsub ) ; \n\t\t$F266434 ( idToType , args ) ReactiveSocket rsubclient = createClient . get ( ) ; \n\t\tPublisher < Payload > rsubpub = rsubclient . requestSubscription ( new PayloadImpl $F76125 ( args ) ) ; \n\t\trsubpub . subscribe ( rsubsub ) ; \n\t\t$F597 $F1262 TestSubscriber $F8317 fnfsub = new TestSubscriber $F200 $F989 ; \n\t\tfnfSubscribers . put ( args [ NUM00 ] , fnfsub ) ; \n\t\t$F266434 ( idToType , args ) ReactiveSocket fnfclient = createClient . get ( ) ; \n\t\tPublisher $F8317 fnfpub = fnfclient . fireAndForget ( new PayloadImpl $F76125 ( args ) ) ; \n\t\tfnfpub . subscribe ( fnfsub ) ; \n\t\t$F597 $F2448 } \n\t} \n"}, {"code": "@ PostConstruct public void init $F72 { \n\tconfigurationViews . add ( defaultDistributionSetTypeLayout ) ; \n\tconfigurationViews . add ( authenticationConfigurationView ) ; \n\tconfigurationViews . add ( pollingConfigurationView ) ; \n\t} \n"}, {"code": "public ExtendedType $F103468 ( nodetype , namespace , localName ) { \n\tthis . nodetype = nodetype ; \n\tthis . namespace = namespace ; \n\tthis . localName = localName ; \n\tthis . hash = nodetype + namespace . hashCode ( ) + localName . hashCode ( ) ; \n\t} \n"}, {"code": "private static void validateNewAddition ( Vector paths , ExpressionOwner owner , LocPathIterator path ) throws RuntimeException { \n\tassertion ( owner . getExpression ( ) == path , NUM00 ) ; \n\t$F2199 ( n , paths ) for ( $F119 ( i , n ) ) { \n\t\t$F55733 ( ew , paths , i ) assertion ( ew != owner , NUM00 ) ; \n\t\tassertion ( ew . getExpression ( ) != path , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void start $F72 { \n\tfor ( $F1316 ( i , threadCount ) ) { \n\t\tSet < SystemStreamPartition > threadSsps = new HashSet < SystemStreamPartition > $F72 ; \n\t\tfor ( SystemStreamPartition ssp : ssps ) { \n\t\t\tif ( Math . abs ( ssp . hashCode ( ) ) % threadCount == i ) $F207 ( threadSsps , ssp ) } \n\t\tThread thread = new Thread ( new MockSystemConsumerRunnable ( threadSsps ) , NUM00 + i ) ; \n\t\tthread . setDaemon ( _BOOL ) ; \n\t\tthreads . add ( thread ) ; \n\t\t$F2346 ( thread ) } \n\t} \n"}, {"code": "private List $F42619 initializeWeightsND $F72 { \n\tint N = NUM00 ; \n\tList $F42619 candidates = new $F302683 ( numberOfPoints * N ) ; \n\tfor ( int i = NUM00 ; \n\ti < numberOfPoints * N ; \n\ti ++ ) { \n\t\t$F9662 ( weight , numberOfObjectives ) for ( $F119 ( j , numberOfObjectives ) ) { \n\t\t\t$F44646 ( weight , j , PRNG ) } \n\t\t$F55455 ( sum , StatUtils , weight ) for ( $F119 ( j , numberOfObjectives ) ) { \n\t\t\tweight [ j ] /= sum ; \n\t\t\t} \n\t\tcandidates . add ( weight ) ; \n\t\t} \n\tList $F42619 weights = new $F302683 ( numberOfPoints * N ) ; \n\tfor ( $F119 ( i , numberOfObjectives ) ) { \n\t\t$F9662 ( weight , numberOfObjectives ) weight [ i ] = NUM00 ; \n\t\tweights . add ( weight ) ; \n\t\t} \n\twhile $F10255 ( weights , numberOfPoints ) { \n\t\t$F69807 ( weight ) double distance = Double . NEGATIVE_INFINITY ; \n\t\tfor ( $F2277 ( i , candidates ) ) { \n\t\t\tdouble d = Double . POSITIVE_INFINITY ; \n\t\t\tfor ( $F2277 ( j , weights ) ) { \n\t\t\t\td = Math . min ( d , MathArrays . distance ( candidates . get ( i ) , weights . get ( j ) ) ) ; \n\t\t\t\t} \n\t\t\tif ( d > distance ) { \n\t\t\t\tweight = candidates . get ( i ) ; \n\t\t\t\tdistance = d ; \n\t\t\t\t} \n\t\t\t} \n\t\tweights . add ( weight ) ; \n\t\tcandidates . remove ( weight ) ; \n\t\t} \n\treturn weights ; \n\t} \n"}, {"code": "public void undo $F72 { \n\ttry { \n\t\tif ( undoManager != null ) undoManager . undoOrRedo ( ) ; \n\t\t} \n\tcatch ( CannotUndoException ignored ) $F845 catch ( CannotRedoException ignored ) $F845 } \n"}, {"code": "public void removeColumn ( Column column ) $F275325 ( column , columns ) "}, {"code": "public String info $F72 { \n\tStringBuilder sb = new StringBuilder ( NUM00 + tableSize + NUM00 + elements + NUM00 + loadFactor + NUM00 + threshold ) ; \n\t$F11030 ( sb , numEmpty ) int size = NUM00 ; \n\tint min = elements ; \n\tint max = - NUM00 ; \n\tfor ( $F119 ( i , tableSize ) ) { \n\t\t$F28830 list = bins [ i ] ; \n\t\tif ( list != null ) { \n\t\t\t$F2199 ( sz , list ) size += sz ; \n\t\t\t$F45132 ( sz , min ) $F12283 ( sz , max ) } \n\t\t} \n\tfloat avg = size ; \n\tint base = ( tableSize - numEmpty ) ; \n\tif ( base == NUM00 ) { \n\t\t$F84 ( sb ) $F84 ( sb ) $F84 ( sb ) } \n\telse { \n\t\tavg /= base ; \n\t\t$F11030 ( sb , avg ) $F11030 ( sb , min ) $F11030 ( sb , max ) } \n\t$F92 ( sb ) } \n"}, {"code": "public boolean peekSample ( MediaCodec . BufferInfo out_bufferInfo ) { \n\tupdate ( ) ; \n\tboolean result = _BOOL ; \n\tif $F5973 ( mAvailableOutputBuffers ) { \n\t\tint index = mAvailableOutputBuffers . peek ( ) ; \n\t\tMediaCodec . BufferInfo info = mOutputBufferInfo [ index ] ; \n\t\tout_bufferInfo . set ( info . offset , info . size , info . presentationTimeUs , info . flags ) ; \n\t\tresult = _BOOL ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F1 public AbstractScannedResult scanBlocklet ( BlocksChunkHolder blocksChunkHolder ) throws QueryExecutionException { \n\ttry { \n\t\tfillScannedResult ( blocksChunkHolder ) ; \n\t\t} \n\tcatch ( FilterUnsupportedException e ) { \n\t\tthrow new QueryExecutionException $F1783 ( e ) ; \n\t\t} \n\treturn scannedResult ; \n\t} \n"}, {"code": "$F1 public int hashCode $F72 { \n\treturn subconditions . hashCode ( ) - operator . hashCode ( ) ; \n\t} \n"}, {"code": "public void balanceSegments $F72 { \n\tMAcctSchemaElement [ ] elements = m_acctSchema . getAcctSchemaElements ( ) ; \n\tfor ( $F1139 ( i , elements ) ) { \n\t\tMAcctSchemaElement ase = elements [ i ] ; \n\t\tif ( ase . isBalanced ( ) ) balanceSegment ( ase . getElementType ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public AnnotationDrawer ( final AnnotationsModel model , final ProcessRendererModel rendererModel ) { \n\tthis . model = model ; \n\tthis . rendererModel = rendererModel ; \n\tthis . displayCache = $F4190 ; \n\tthis . cachedID = $F4190 ; \n\tpane = new JEditorPane $F6600 ; \n\t$F55355 ( pane ) pane . setOpaque ( _BOOL ) ; \n\t} \n"}, {"code": "public boolean hasUserPartitions $F72 $F3387 ( userOutput ) "}, {"code": "$F1 public void insertString ( final int offs , final String str , final AttributeSet attr ) { \n\t$F44858 ( offs ) if $F4012 ( str ) { \n\t\tint i ; \n\t\tfor ( $F23302 ( i , str ) ) { \n\t\t\tif $F11983 ( str , i ) { \n\t\t\t\t$F4571 ( remainingTextString , str , i ) remainingTextAttr = attr ; \n\t\t\t\tinputKeyListener . keyPressed ( new KeyEvent ( new Container $F72 , KeyEvent . KEY_PRESSED , NUM00 , NUM00 , KeyEvent . VK_ENTER , NUM00 ) ) ; \n\t\t\t\t$F597 } \n\t\t\telse { \n\t\t\t\tinsertChar ( offs + i , NUM00 + str . charAt ( i ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse if $F1277 ( str ) { \n\t\tinsertChar ( offs , str ) ; \n\t\t} \n\t} \n"}, {"code": "protected int readCodePoint $F72 throws IOException { \n\t$F7468 ( next , reader ) if ( Character . isHighSurrogate ( ( char ) next ) ) { \n\t\tnext = Character . toCodePoint ( ( char ) next , ( char ) reader . read ( ) ) ; \n\t\t} \n\treturn next ; \n\t} \n"}, {"code": "public static int putInt $F24576 ( bytes , offset , val ) { \n\tif ( littleEndian ) { \n\t\t$F410031 ( val , Integer ) } \n\ttheUnsafe . putInt ( bytes , offset + BYTE_ARRAY_BASE_OFFSET , val ) ; \n\treturn offset + Bytes . SIZEOF_INT ; \n\t} \n"}, {"code": "public Item ( Drawable symbol , String labelText , Font font ) { \n\tdouble fontSize = font . getSize2D ( ) ; \n\tsetLayout ( new EdgeLayout ( fontSize , NUM00 ) ) ; \n\tthis . symbol = symbol ; \n\tadd ( symbol , Location . WEST ) ; \n\tlabel = new Label ( labelText ) ; \n\tlabel . setFont ( font ) ; \n\tlabel . setAlignmentX ( NUM00 ) ; \n\tlabel . setAlignmentY ( NUM00 ) ; \n\tadd ( label , Location . CENTER ) ; \n\t} \n"}, {"code": "void tag ( String tag ) ; \n"}, {"code": "public int consume $F72 { \n\tint consumedAmount ; \n\tif ( Math . abs ( left ) < $F59687 ( Math , getRegen ) ) { \n\t\tconsumedAmount = left ; \n\t\tleft = NUM00 ; \n\t\t} \n\telse { \n\t\tconsumedAmount = getRegen ( ) ; \n\t\tleft -= getRegen ( ) ; \n\t\t} \n\treturn consumedAmount ; \n\t} \n"}, {"code": "private Delegate delegate $F72 throws HadoopIgfsCommunicationException { \n\tException errShmem = null ; \n\tException errTcp = null ; \n\tDelegate curDelegate = delegateRef . get ( ) ; \n\t$F60730 ( curDelegate ) boolean skipInProc = parameter ( conf , PARAM_IGFS_ENDPOINT_NO_EMBED , authority , _BOOL ) ; \n\tif ( ! skipInProc ) { \n\t\tIgfsEx igfs = getIgfsEx ( endpoint . grid ( ) , endpoint . igfs ( ) ) ; \n\t\tif ( igfs != null ) { \n\t\t\tHadoopIgfsEx hadoop = null ; \n\t\t\ttry { \n\t\t\t\thadoop = new HadoopIgfsInProc ( igfs , log , userName ) ; \n\t\t\t\tcurDelegate = new Delegate ( hadoop , hadoop . handshake ( logDir ) ) ; \n\t\t\t\t} \n\t\t\tcatch ( IOException | IgniteCheckedException e ) { \n\t\t\t\tif ( e instanceof HadoopIgfsCommunicationException ) if ( hadoop != null ) hadoop . close ( _BOOL ) ; \n\t\t\t\tif $F585 ( log ) $F7028 ( log , e ) } \n\t\t\t} \n\t\t} \n\tboolean skipLocShmem = parameter ( conf , PARAM_IGFS_ENDPOINT_NO_LOCAL_SHMEM , authority , _BOOL ) ; \n\tif ( curDelegate == null && ! skipLocShmem && ! U . isWindows ( ) ) { \n\t\tHadoopIgfsEx hadoop = null ; \n\t\ttry { \n\t\t\thadoop = new HadoopIgfsOutProc ( endpoint . port ( ) , endpoint . grid ( ) , endpoint . igfs ( ) , log , userName ) ; \n\t\t\tcurDelegate = new Delegate ( hadoop , hadoop . handshake ( logDir ) ) ; \n\t\t\t} \n\t\tcatch ( IOException | IgniteCheckedException e ) { \n\t\t\tif ( e instanceof HadoopIgfsCommunicationException ) hadoop . close ( _BOOL ) ; \n\t\t\tif $F585 ( log ) log . debug ( NUM00 + endpoint . port ( ) + NUM00 , e ) ; \n\t\t\terrShmem = e ; \n\t\t\t} \n\t\t} \n\tboolean skipLocTcp = parameter ( conf , PARAM_IGFS_ENDPOINT_NO_LOCAL_TCP , authority , _BOOL ) ; \n\tif ( curDelegate == null && ! skipLocTcp ) { \n\t\tHadoopIgfsEx hadoop = null ; \n\t\ttry { \n\t\t\thadoop = new HadoopIgfsOutProc ( LOCALHOST , endpoint . port ( ) , endpoint . grid ( ) , endpoint . igfs ( ) , log , userName ) ; \n\t\t\tcurDelegate = new Delegate ( hadoop , hadoop . handshake ( logDir ) ) ; \n\t\t\t} \n\t\tcatch ( IOException | IgniteCheckedException e ) { \n\t\t\tif ( e instanceof HadoopIgfsCommunicationException ) hadoop . close ( _BOOL ) ; \n\t\t\tif $F585 ( log ) log . debug ( NUM00 + endpoint . host ( ) + NUM00 + endpoint . port ( ) + NUM00 , e ) ; \n\t\t\terrTcp = e ; \n\t\t\t} \n\t\t} \n\tif ( curDelegate == null && ( skipLocTcp || ! F . eq ( LOCALHOST , endpoint . host ( ) ) ) ) { \n\t\tHadoopIgfsEx hadoop = null ; \n\t\ttry { \n\t\t\thadoop = new HadoopIgfsOutProc ( endpoint . host ( ) , endpoint . port ( ) , endpoint . grid ( ) , endpoint . igfs ( ) , log , userName ) ; \n\t\t\tcurDelegate = new Delegate ( hadoop , hadoop . handshake ( logDir ) ) ; \n\t\t\t} \n\t\tcatch ( IOException | IgniteCheckedException e ) { \n\t\t\tif ( e instanceof HadoopIgfsCommunicationException ) hadoop . close ( _BOOL ) ; \n\t\t\tif $F585 ( log ) log . debug ( NUM00 + endpoint . host ( ) + NUM00 + endpoint . port ( ) + NUM00 , e ) ; \n\t\t\terrTcp = e ; \n\t\t\t} \n\t\t} \n\tif ( curDelegate != null ) { \n\t\tif ( ! delegateRef . compareAndSet ( null , curDelegate ) ) curDelegate . doomed = _BOOL ; \n\t\treturn curDelegate ; \n\t\t} \n\telse { \n\t\tSB errMsg = new SB ( NUM00 + authority + NUM00 ) ; \n\t\tif ( errShmem != null ) errMsg . a ( NUM00 + endpoint . port ( ) + NUM00 + errShmem + NUM00 ) ; \n\t\terrMsg . a ( NUM00 + endpoint . host ( ) + NUM00 + endpoint . port ( ) + NUM00 + errTcp + NUM00 ) ; \n\t\terrMsg . a ( NUM00 + NUM00 ) ; \n\t\tthrow new HadoopIgfsCommunicationException $F3362 ( errMsg ) ; \n\t\t} \n\t} \n"}, {"code": "public FromClause add ( OuterJoinQualifier outerJoinQualifier ) $F18637 ( outerJoinQualifiers , outerJoinQualifier , this ) "}, {"code": "private static final $F5237 encode ( String src ) { \n\tif $F6036 ( src ) { \n\t\treturn ( new File $F380 ) ; \n\t\t} \n\t$F17727 ( tokenizer , src ) $F5237 dirs = new File $F49889 ( tokenizer ) ; \n\tfor ( $F1139 ( i , dirs ) ) { \n\t\tdirs [ i ] = new File $F52332 ( tokenizer ) ; \n\t\t} \n\treturn dirs ; \n\t} \n"}, {"code": "$F25527 ( redundantOpCompactThreshold , redundantOpCount , lruEntries ) "}, {"code": "public E poll ( long timeout , TimeUnit unit ) throws InterruptedException { \n\t$F194979 ( nanos , unit , timeout ) $F677 ( lock , this ) $F678 ( lock ) long t = now ( ) ; \n\tTenantQueue . Item item = null ; \n\ttry { \n\t\tfor ( $F589 ) { \n\t\t\tTenantQueue q = nextQueue ( t ) ; \n\t\t\tif ( q == null ) { \n\t\t\t\tif ( nanos <= NUM00 ) $F1274 else $F194980 ( nanos , available ) } \n\t\t\telse { \n\t\t\t\tlong delay = q . next - t ; \n\t\t\t\tif ( delay <= NUM00 ) { \n\t\t\t\t\titem = q . poll ( t ) ; \n\t\t\t\t\treturn item == null ? null : item . element ; \n\t\t\t\t\t} \n\t\t\t\t$F89986 ( nanos ) if ( nanos < delay || leader != null ) $F194980 ( nanos , available ) else { \n\t\t\t\t\t$F686 ( thisThread , Thread ) leader = thisThread ; \n\t\t\t\t\ttry { \n\t\t\t\t\t\tlong timeLeft = available . awaitNanos ( delay ) ; \n\t\t\t\t\t\tnanos -= delay - timeLeft ; \n\t\t\t\t\t\t} \n\t\t\t\t\t$F690 ( leader , thisThread ) } \n\t\t\t\t} \n\t\t\t$F101251 ( t , System ) } \n\t\t} \n\tfinally { \n\t\tif ( leader == null && hasNext ( ) ) $F702 ( available ) $F704 ( lock ) done ( item , t ) ; \n\t\t} \n\t} \n"}, {"code": "$F83977 ( listener , mListeners ) "}, {"code": "$F1654 ( patterns ) "}, {"code": "private SublimeBaseMenuItem addInternal ( int pivotID , Positioned positioned , SublimeBaseMenuItem newItem ) { \n\tint newItemGroupId = newItem . getGroupId ( ) ; \n\tcheckExistenceOfGroup ( newItemGroupId ) ; \n\tint pivotIndex = findItemIndex ( pivotID ) ; \n\tSublimeBaseMenuItem pivot = mItems . get ( pivotIndex ) ; \n\tif ( newItem . getItemType ( ) == SublimeBaseMenuItem . ItemType . GROUP_HEADER ) { \n\t\tcheckIfGroupHeaderAlreadyExistsForGroup ( newItemGroupId ) ; \n\t\tint index = findGroupIndex ( newItemGroupId ) ; \n\t\tif ( index >= NUM00 ) $F42308 ( mItems , index , newItem ) else { \n\t\t\tif ( positioned == Positioned . BEFORE ) { \n\t\t\t\tif ( pivot . getGroupId ( ) == NO_GROUP_ID || pivot . getItemType ( ) == SublimeBaseMenuItem . ItemType . GROUP_HEADER ) $F42308 ( mItems , pivotIndex , newItem ) else $F207 ( mItems , newItem ) } \n\t\t\telse if ( positioned == Positioned . AFTER ) { \n\t\t\t\tif ( pivot . getGroupId ( ) == NO_GROUP_ID || pivotIndex == findLastGroupIndex ( newItemGroupId ) ) { \n\t\t\t\t\t$F57027 ( mItems , pivotIndex , newItem ) } \n\t\t\t\telse $F207 ( mItems , newItem ) } \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( newItemGroupId != NO_GROUP_ID ) { \n\t\t\tint lastGroupIndex = findLastGroupIndex ( newItemGroupId ) ; \n\t\t\tif $F25745 ( lastGroupIndex , mItems ) { \n\t\t\t\tif ( positioned == Positioned . BEFORE ) { \n\t\t\t\t\tif ( pivot . getGroupId ( ) == NO_GROUP_ID || pivotIndex == findGroupIndex ( pivot . getGroupId ( ) ) ) $F42308 ( mItems , pivotIndex , newItem ) else $F207 ( mItems , newItem ) } \n\t\t\t\telse if ( positioned == Positioned . AFTER ) { \n\t\t\t\t\tif ( pivot . getGroupId ( ) == NO_GROUP_ID || pivotIndex == findLastGroupIndex ( pivot . getGroupId ( ) ) ) { \n\t\t\t\t\t\t$F57027 ( mItems , pivotIndex , newItem ) } \n\t\t\t\t\telse $F207 ( mItems , newItem ) } \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( newItemGroupId == pivot . getGroupId ( ) ) { \n\t\t\t\t\tif ( positioned == Positioned . BEFORE ) { \n\t\t\t\t\t\tif ( pivot . getItemType ( ) != SublimeBaseMenuItem . ItemType . GROUP_HEADER ) $F42308 ( mItems , pivotIndex , newItem ) else { \n\t\t\t\t\t\t\t$F57027 ( mItems , lastGroupIndex , newItem ) } \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( positioned == Positioned . AFTER ) { \n\t\t\t\t\t\t$F57027 ( mItems , pivotIndex , newItem ) } \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\t$F57027 ( mItems , lastGroupIndex , newItem ) } \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( positioned == Positioned . BEFORE ) { \n\t\t\t\tif ( pivot . getGroupId ( ) == NO_GROUP_ID || findGroupIndex ( pivot . getGroupId ( ) ) == pivotIndex ) $F42308 ( mItems , pivotIndex , newItem ) else $F207 ( mItems , newItem ) } \n\t\t\telse if ( positioned == Positioned . AFTER ) { \n\t\t\t\tif ( pivot . getGroupId ( ) == NO_GROUP_ID || pivotIndex == findLastGroupIndex ( pivot . getGroupId ( ) ) ) { \n\t\t\t\t\t$F57027 ( mItems , pivotIndex , newItem ) } \n\t\t\t\telse $F207 ( mItems , newItem ) } \n\t\t\t} \n\t\t} \n\tonItemsChanged ( ) ; \n\treturn newItem ; \n\t} \n"}, {"code": "public static void writeUint8 ( OutputStream theOs , int theValue ) throws IOException $F4050 ( theOs , theValue ) "}, {"code": "$F108235 ( f , first , n , item , last , count , notFull ) "}, {"code": "public void testCase11 $F72 { \n\t$F70249 $F10679 int aSign = NUM00 ; \n\tint bSign = - NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F3024 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "$F1 public void addHeader $F2236 ( header , value ) { \n\tmHeadersOptions . add ( new HeaderOption ( header , value ) ) ; \n\t} \n"}, {"code": "public void store $F72 throws SAMLException { \n\ttry { \n\t\t$F13765 ( keyProvider ) } \n\tcatch ( KeyStoreException e ) { \n\t\tthrow new SAMLException $F1783 ( e ) ; \n\t\t} \n\tcatch ( CertificateException e ) { \n\t\tthrow new SAMLException $F1783 ( e ) ; \n\t\t} \n\tcatch ( NoSuchAlgorithmException e ) { \n\t\tthrow new SAMLException $F1783 ( e ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tthrow new SAMLException $F1783 ( e ) ; \n\t\t} \n\t} \n"}, {"code": "static void appendToPointerHierarchy ( final BaseType type , final BaseType pointer ) { \n\t$F1832 ( Preconditions , type ) $F1832 ( Preconditions , pointer ) Preconditions . checkArgument ( type != pointer , NUM00 ) ; \n\tPreconditions . checkArgument ( pointer . pointedToBy != type , NUM00 ) ; \n\tPreconditions . checkArgument ( type . pointsTo != pointer , NUM00 ) ; \n\tpointer . pointsTo = type ; \n\ttype . pointedToBy = pointer ; \n\t} \n"}, {"code": "public static void sort $F101011 ( a ) { \n\t$F166454 ( doSort , a ) ; \n\t} \n"}, {"code": "public String toString $F72 { \n\treturn NUM00 + String . format ( NUM00 , ValueSimilarity * NUM00 ) + NUM00 + String . format ( NUM00 , ContainmentSimilarity * NUM00 ) + NUM00 + String . format ( NUM00 , SizeSimilarity * NUM00 ) ; \n\t} \n"}, {"code": "public $F19288 last $F72 { \n\t$F13085 iterator = iterator ( ) ; \n\tT value = null ; \n\twhile $F2921 ( iterator ) $F45366 ( value , iterator ) $F122628 ( Optional , value ) } \n"}, {"code": "public static void threadSleep ( long millis ) { \n\ttry $F7595 ( Thread , millis ) catch ( InterruptedException ex ) { \n\t\tLog . e ( NUM00 , StringUtils . exceptionStackTraceToString ( ex ) ) ; \n\t\t} \n\t} \n"}, {"code": "public int indexOf ( Node elem , int index ) { \n\trunTo ( - NUM00 ) ; \n\tif ( null == m_map ) $F150 for ( int i = index ; \n\ti < m_firstFree ; \n\ti ++ ) { \n\t\tNode node = m_map [ i ] ; \n\t\tif ( ( null != node ) && node . equals ( elem ) ) return i ; \n\t\t} \n\t$F150 } \n"}, {"code": "static boolean isPackageAccess ( final int modifiers ) { \n\treturn ( modifiers & ACCESS_TEST ) == NUM00 ; \n\t} \n"}, {"code": "public void write ( final String filename ) { \n\tPrintStream stream ; \n\ttry { \n\t\tstream = $F198100 ( filename ) ; \n\t\t} \n\tcatch ( FileNotFoundException e ) { \n\t\t$F301 ( e ) $F665 } \n\twrite ( stream ) ; \n\t$F59 ( stream ) } \n"}, {"code": "ManagedWindowDecorator ( Window window , String windowId ) { \n\tthis . window = window ; \n\tname = NUM00 + windowId ; \n\t} \n"}, {"code": "$F1 public void write $F24576 ( b , off , len ) throws IOException { \n\twhile ( len > NUM00 ) { \n\t\tint c = Math . min ( len , decoderIn . remaining ( ) ) ; \n\t\tdecoderIn . put ( b , off , c ) ; \n\t\tprocessInput ( _BOOL ) ; \n\t\tlen -= c ; \n\t\toff += c ; \n\t\t} \n\t$F8801 ( writeImmediately , flushOutput ) } \n"}, {"code": "public static void log $F4353 ( message , args ) { \n\tif ( loggingEnabled ) { \n\t\tLog . d ( TAG , args . length == NUM00 ? message : String . format ( message , args ) ) ; \n\t\t} \n\t} \n"}, {"code": "protected void processUpdates ( Queue < DeviceUpdate > updates ) { \n\t$F8249 ( updates ) DeviceUpdate update = null ; \n\twhile ( null != ( update = updates . poll ( ) ) ) { \n\t\t$F57901 ( logger , update ) if ( update . change == DeviceUpdate . Change . DELETE ) { \n\t\t\tdeviceSyncManager . removeDevice ( update . device ) ; \n\t\t\t} \n\t\telse { \n\t\t\tdeviceSyncManager . storeDevice ( update . device ) ; \n\t\t\t} \n\t\tList < IDeviceListener > listeners = deviceListeners . getOrderedListeners ( ) ; \n\t\tnotifyListeners ( listeners , update ) ; \n\t\t} \n\t} \n"}, {"code": "boolean handleRemoteCanRebalance ( long size ) { \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static File toSLDFile ( final File file ) { \n\tfinal String path = file . getAbsolutePath ( ) ; \n\tfinal String base = $F4019 ( path ) ; \n\tString newPath = base + NUM00 ; \n\t$F1705 ( sld , newPath ) if $F3428 ( sld ) { \n\t\treturn sld ; \n\t\t} \n\tnewPath = base + NUM00 ; \n\t$F24661 ( sld , newPath ) if $F3428 ( sld ) { \n\t\treturn sld ; \n\t\t} \n\t$F1274 } \n"}, {"code": "private String insertProperties $F5805 ( template , properties ) { \n\tfor ( $F3475 ( entry , properties ) ) { \n\t\ttemplate = template . replace ( $F15245 ( entry ) ) ; \n\t\t} \n\treturn template ; \n\t} \n"}, {"code": "public static void changeFont ( JComponent comp , int style ) { \n\t$F58112 ( font , comp ) comp . setFont ( font . deriveFont ( style ) ) ; \n\t} \n"}, {"code": "public void drawContours ( Mat img , Color color ) { \n\tDrawing . drawContours ( img , contours , color ) ; \n\t} \n"}, {"code": "public static void saveX509Cert ( String certStr , File certFile ) throws IOException { \n\t$F1764 ( writer , certFile ) writer . write ( BEGIN_CERT ) ; \n\t$F1769 ( writer ) writer . write ( certStr ) ; \n\t$F1769 ( writer ) writer . write ( END_CERT ) ; \n\t$F1769 ( writer ) $F59 ( writer ) } \n"}, {"code": "public void clearOnCentralPositionChangedListener $F72 $F9096 ( mOnCentralPositionChangedListeners ) "}, {"code": "public static Object invokeStatic ( Class clazz , String methodName ) throws NoSuchMethodException { \n\ttry { \n\t\tMethod method = clazz . getMethod ( methodName , $F33934 ) ; \n\t\tObject result = $F48029 ( method ) ; \n\t\treturn result ; \n\t\t} \n\tcatch ( IllegalAccessException e ) { \n\t\tthrow new NoSuchMethodException ( methodName + NUM00 ) ; \n\t\t} \n\tcatch ( InvocationTargetException e ) { \n\t\tthrow $F399670 ( e ) ; \n\t\t} \n\t} \n"}, {"code": "$F1309 public boolean isFillBelowLine $F72 $F32878 ( mFillBelowLine ) "}, {"code": "public void onPatchServiceResult ( boolean isUpgradePatch ) { \n\tif ( ! isRetryEnable ) $F13518 ( TinkerLog , TAG ) if ( ! isUpgradePatch ) $F13518 ( TinkerLog , TAG ) if $F3428 ( retryInfoFile ) { \n\t\tSharePatchFileUtil . safeDeleteFile ( retryInfoFile ) ; \n\t\t} \n\tif $F3428 ( tempPatchFile ) { \n\t\tSharePatchFileUtil . safeDeleteFile ( tempPatchFile ) ; \n\t\t} \n\t} \n"}, {"code": "$F183285 ( fieldId , NOTE_ID , CLASS_NAME , INTERPRETER_CONTEXT ) "}, {"code": "public static boolean isStanza ( Packet packet ) { \n\tif ( packet instanceof Message ) return _BOOL ; \n\tif ( packet instanceof IQ ) return _BOOL ; \n\tif ( packet instanceof Presence ) return _BOOL ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public int execute ( final FormObject form , final int type , final String code , final int eventType , final char keyPressed ) { \n\tint messageCode = ActionHandler . NOMESSAGE ; \n\tif ( code instanceof String ) { \n\t\tfinal String js = code ; \n\t\tfinal $F806 args = JSFunction . convertToArray ( js ) ; \n\t\t$F244765 ( command , args ) if $F3106 ( command ) { \n\t\t\tmessageCode = handleAFCommands ( form , command , js , args , eventType , keyPressed ) ; \n\t\t\t} \n\t\t} \n\treturn messageCode ; \n\t} \n"}, {"code": "private boolean needsUpdate ( Long bundleVersion , String beanVersion ) { \n\tif $F3578 ( beanVersion ) { \n\t\t$F26334 ( Log , TAG , bundleVersion ) $F26334 ( Log , TAG , beanVersion ) return _BOOL ; \n\t\t} \n\telse { \n\t\ttry { \n\t\t\tlong parsedVersion = Long . parseLong ( $F43978 ( beanVersion ) ) ; \n\t\t\t$F26334 ( Log , TAG , bundleVersion ) $F26334 ( Log , TAG , parsedVersion ) if ( bundleVersion > parsedVersion ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F1594 ( Log , TAG ) } \n\t\t\t} \n\t\tcatch ( NumberFormatException e ) { \n\t\t\t$F110901 ( Log , TAG , beanVersion ) fail ( BeanError . UNPARSABLE_FW_VERSION ) ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void clear ( FacesContext facesContext , $F2100 ( viewMap ) ) { \n\tif $F14148 ( LOGGER , Level ) { \n\t\tLOGGER . log ( Level . FINEST , NUM00 ) ; \n\t\t} \n\tMap < String , ViewScopeContextObject > contextMap = getContextMap ( facesContext , viewMap ) ; \n\t$F12099 ( contextMap , destroyBeans , viewMap ) } \n"}, {"code": "public void loadLogicalTablesWithGranularities ( Map < String , TableGroup > nameGroupMap , Set < ? extends Granularity > validGrains , ResourceDictionaries dictionaries ) { \n\tfor ( Map . Entry < String , TableGroup > entry : nameGroupMap . entrySet ( ) ) { \n\t\t$F3477 ( logicalTableName , entry ) TableGroup group = entry . getValue ( ) ; \n\t\tloadLogicalTableWithGranularities ( logicalTableName , group , validGrains , dictionaries ) ; \n\t\t} \n\t} \n"}, {"code": "protected int readBlock $F72 { \n\tblockSize = read ( ) ; \n\tint n = NUM00 ; \n\tif ( blockSize > NUM00 ) { \n\t\ttry { \n\t\t\tint count = NUM00 ; \n\t\t\twhile ( n < blockSize ) { \n\t\t\t\tcount = in . read ( block , n , blockSize - n ) ; \n\t\t\t\t$F167039 ( count ) n += count ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F29052 if ( n < blockSize ) { \n\t\t\tstatus = STATUS_FORMAT_ERROR ; \n\t\t\t} \n\t\t} \n\treturn n ; \n\t} \n"}, {"code": "$F1 public void addNewSubscription ( final Subscription newSubscription ) { \n\tfinal String clientID = newSubscription . getClientId ( ) ; \n\tList < ClientTopicCouple > clientSubscriptions = subscriptions . get ( clientID ) ; \n\t$F64950 ( clientSubscriptions , subscriptions , clientID ) clientSubscriptions . add ( newSubscription . asClientTopicCouple ( ) ) ; \n\t} \n"}, {"code": "public X509CertPathImpl ( List < ? extends $F132633 > certs ) throws CertificateException { \n\tsuper ( NUM00 ) ; \n\t$F11550 ( size , certs ) certificates = new $F92729 ( size ) ; \n\tfor ( $F119 ( i , size ) ) { \n\t\tfinal $F132633 cert = certs . get ( i ) ; \n\t\tif ( ! ( cert instanceof X509Certificate ) ) { \n\t\t\tthrow new CertificateException ( NUM00 + i + NUM00 ) ; \n\t\t\t} \n\t\tcertificates . add ( ( X509Certificate ) cert ) ; \n\t\t} \n\t} \n"}, {"code": "public Process ( final String xmlString ) throws IOException , XMLException { \n\tinitContext ( ) ; \n\t$F161688 ( in , xmlString ) readProcess ( in ) ; \n\t$F59 ( in ) } \n"}, {"code": "public ConsulTopologyFraction $F72 { \n\tthis . url = DEFAULT_URL ; \n\t} \n"}, {"code": "protected String buildQualifierRegex ( String qualifierValue ) { \n\t$F83 ( sb ) $F84 ( sb ) sb . append ( qualifierValue ) ; \n\t$F84 ( sb ) $F92 ( sb ) } \n"}, {"code": "public String shortenName ( String name , int desiredLength ) { \n\t$F1749 ( originalLength , name ) if ( ( desiredLength <= NUM00 ) || ( originalLength <= desiredLength ) ) { \n\t\treturn name ; \n\t\t} \n\tint delta = originalLength - desiredLength ; \n\tint startCut = desiredLength / NUM00 ; \n\t$F280 ( result ) $F6937 ( result , name , startCut ) if ( ( ( startCut == NUM00 ) || ( $F17486 ( name , startCut ) ) ) && ( ( startCut + delta + NUM00 == originalLength ) || ( name . charAt ( startCut + delta + NUM00 ) != NUM00 ) ) ) $F86 ( result ) result . append ( name . substring ( startCut + delta + NUM00 , originalLength ) ) ; \n\t$F92 ( result ) } \n"}, {"code": "public static Color blend ( Color color1 , Color color2 , double weight ) { \n\tdouble w2 = MathUtils . limit ( weight , NUM00 , NUM00 ) ; \n\tdouble w1 = NUM00 - w2 ; \n\tint r = ( int ) Math . round ( w1 * color1 . getRed ( ) + w2 * color2 . getRed ( ) ) ; \n\tint g = ( int ) Math . round ( w1 * color1 . getGreen ( ) + w2 * color2 . getGreen ( ) ) ; \n\tint b = ( int ) Math . round ( w1 * color1 . getBlue ( ) + w2 * color2 . getBlue ( ) ) ; \n\tint a = ( int ) Math . round ( w1 * color1 . getAlpha ( ) + w2 * color2 . getAlpha ( ) ) ; \n\treturn new Color ( r , g , b , a ) ; \n\t} \n"}, {"code": "public long kstkeip $F72 $F12907 ( Long , fields ) "}, {"code": "private void decideUILookAndFeel ( MainOptions options ) { \n\ttry { \n\t\tboolean systemPlaf = _BOOL ; \n\t\tsystemPlaf = options . system_plaf ; \n\t\tString systemPlafReq = System . getenv ( NUM00 ) ; \n\t\tif $F153572 ( systemPlafReq ) systemPlaf = _BOOL ; \n\t\tif ( systemPlaf ) UIManager . setLookAndFeel ( UIManager . getSystemLookAndFeelClassName ( ) ) ; \n\t\t} \n\t$F1516 ( exc ) } \n"}, {"code": "public static BufferedImage toBufferedImage ( Image img , int type ) { \n\tif ( img instanceof BufferedImage ) { \n\t\treturn ( BufferedImage ) img ; \n\t\t} \n\tBufferedImage bimage = new BufferedImage ( img . getWidth ( null ) , img . getHeight ( null ) , type ) ; \n\t$F5115 ( bGr , bimage ) $F37616 ( bGr , img ) $F355 ( bGr ) return bimage ; \n\t} \n"}, {"code": "private JSONArray readArray $F72 throws JSONException { \n\t$F19928 ( result ) boolean hasTrailingSeparator = _BOOL ; \n\twhile ( _BOOL ) { \n\t\tswitch ( nextCleanInternal ( ) ) { \n\t\t\t$F52533 throw syntaxError ( NUM00 ) ; \n\t\t\t$F1262 if ( hasTrailingSeparator ) { \n\t\t\t\t$F318227 ( result ) } \n\t\t\treturn result ; \n\t\t\t$F1262 $F1262 $F318227 ( result ) hasTrailingSeparator = _BOOL ; \n\t\t\t$F598 $F1267 pos -- ; \n\t\t\t} \n\t\t$F318234 ( result , nextValue ) switch ( nextCleanInternal ( ) ) { \n\t\t\t$F1262 return result ; \n\t\t\t$F1262 $F1262 hasTrailingSeparator = _BOOL ; \n\t\t\t$F598 $F248192 ( syntaxError ) } \n\t\t} \n\t} \n"}, {"code": "public static $F96 hexStringToByteArray ( String strA ) { \n\t$F1538 ( result ) byte sum = $F19905 ; \n\tboolean nextCharIsUpper = _BOOL ; \n\tfor ( $F1088 ( i , strA ) ) { \n\t\t$F1280 ( c , strA , i ) switch ( Character . toUpperCase ( c ) ) { \n\t\t\t$F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 if ( nextCharIsUpper ) { \n\t\t\t\t$F121208 ( sum ) nextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum |= $F19905 ; \n\t\t\t\tresult . write ( sum ) ; \n\t\t\t\tnextCharIsUpper = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 $F2448 } \n\t\t} \n\tif ( ! nextCharIsUpper ) $F11389 $F11316 ( result ) } \n"}, {"code": "public $F27878 listAvailableTerminals $F60993 ( type ) { \n\t$F207421 ( result ) for ( Node node : availableNodes ) { \n\t\tif ( ( node . getNumberOfArguments ( ) == NUM00 ) && $F207424 ( type , node ) ) $F207 ( result , node ) } \n\treturn result ; \n\t} \n"}, {"code": "public void removeSensorSelectionListener ( SensorSelectionListener listener ) { \n\tlistenerList . remove ( SensorSelectionListener . class , listener ) ; \n\t} \n"}, {"code": "public void write ( int c ) throws IOException { \n\t$F3576 ( _output ) $F36813 ( _output , c ) } \n"}, {"code": "private static void testDexClassLoader $F72 { \n\tClassLoader dexClassLoader = getDexClassLoader ( ) ; \n\tClass anotherClass ; \n\ttry { \n\t\tanotherClass = dexClassLoader . loadClass ( NUM00 ) ; \n\t\t} \n\tcatch ( ClassNotFoundException cnfe ) $F11389 Object another ; \n\ttry $F108917 ( another , anotherClass ) catch ( IllegalAccessException ie ) $F7077 ( ie ) catch ( InstantiationException ie ) $F7077 ( ie ) dexClassLoader . getResource ( NUM00 ) ; \n\t} \n"}, {"code": "public void register ( GridCacheTtlManager mgr ) { \n\tsynchronized ( mux ) { \n\t\t$F21009 ( cleanupWorker , startCleanupWorker ) mgrs . add ( mgr ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F80742 toSqlTime $F14337 ( hour , minute , second ) { \n\t$F22273 newDate = toDate ( NUM00 , NUM00 , NUM00 , hour , minute , second ) ; \n\tif ( newDate != null ) { \n\t\treturn new $F80742 $F16810 ( newDate ) ; \n\t\t} \n\telse $F1337 } \n"}, {"code": "public void initializeKeyStore $F72 { \n\ttry { \n\t\tLogger logger = ( $F476277 ) Logger . getLogger ( logName ) ; \n\t\tresetCurrentFileList ( logName ) ; \n\t\taddToCurrentFileList ( logName , logName , logName ) ; \n\t\tString logPath = lmanager . getProperty ( LogConstants . LOG_LOCATION ) ; \n\t\tif $F2364 ( logPath ) logPath += NUM00 ; \n\t\tString fileName = logName ; \n\t\tString loggerFileName = logPath + PREFIX + NUM00 + fileName ; \n\t\tString verifierFileName = logPath + PREFIX + NUM00 + fileName ; \n\t\t$F69245 ( Debug , logName , loggerFileName ) $F69245 ( Debug , logName , verifierFileName ) helper . initializeSecureLogHelper ( loggerFileName , logPassword , verifierFileName , logPassword ) ; \n\t\tDebug . message ( logName + NUM00 ) ; \n\t\thelper . initializeVerifier ( verifierFileName , logPassword , verPassword ) ; \n\t\tDebug . message ( logName + NUM00 ) ; \n\t\t} \n\tcatch ( Exception e ) $F69256 ( Debug , logName , e ) } \n"}, {"code": "private native $F96 imageDataToPlatformImageBytes ( $F96 imageData , int width , int height , long format ) ; \n"}, {"code": "public void writeExif ( Bitmap bmap , OutputStream exifOutStream ) throws IOException { \n\t$F26831 ( bmap , exifOutStream , NULL_ARGUMENT_ ) OutputStream s = getExifWriterStream ( exifOutStream ) ; \n\t$F26834 ( bmap , Bitmap , s ) $F1206 ( s ) } \n"}, {"code": "public static String cleanFolderStackingMarkers ( String filename ) { \n\tif $F20899 ( StringUtils , filename ) { \n\t\t$F1150 ( m , folderStackingPattern , filename ) if $F24133 ( m ) { \n\t\t\treturn m . group ( NUM00 ) + m . group ( NUM00 ) ; \n\t\t\t} \n\t\t} \n\treturn filename ; \n\t} \n"}, {"code": "public void discard ( ServiceRegistrar reg ) { \n\tsynchronized ( registrars ) { \n\t\t$F4640 ( terminated ) $F8249 ( reg ) sendDiscarded ( reg , null ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean isFinalState ( int state ) { \n\treturn ( state < NUM00 ) ? _BOOL : fFinalStateFlags [ state ] ; \n\t} \n"}, {"code": "public static String generateScaleMarkers ( int proteinLength , int maxNumScaleMarkers ) { \n\t$F17370 ( maxNumScaleMarkers ) int scale = calcScale ( proteinLength , maxNumScaleMarkers ) ; \n\t$F4000 ( sb ) int index = NUM00 ; \n\tint numRemaining = proteinLength ; \n\twhile ( index <= proteinLength ) { \n\t\tindex += scale ; \n\t\tnumRemaining -= scale ; \n\t\t$F84 ( sb ) if ( ( numRemaining > NUM00 ) && ( numRemaining < scale ) ) { \n\t\t\tif ( numRemaining < ( scale / NUM00 ) ) $F111804 ( sb , proteinLength ) } \n\t\tif ( index >= proteinLength ) $F288 ( sb , proteinLength ) else $F288 ( sb , index ) } \n\t$F92 ( sb ) } \n"}, {"code": "public void writeFigTreeBlock $F4673 ( settings ) throws IOException { \n\t$F8438 ( writer ) for ( $F3465 ( key , settings ) ) { \n\t\t$F16628 ( value , settings , key ) writer . println ( NUM00 + key + NUM00 + createString ( value ) + NUM00 ) ; \n\t\t} \n\t$F8438 ( writer ) } \n"}, {"code": "public int hashCode $F72 { \n\treturn font . hashCode ( ) ^ glyphs . length ; \n\t} \n"}, {"code": "public boolean equals ( Object obj ) { \n\t$F3627 ( obj , this , _BOOL ) if ( obj instanceof Map == _BOOL ) { \n\t\treturn _BOOL ; \n\t\t} \n\tMap map = ( Map ) obj ; \n\t$F33517 ( map , size , _BOOL ) MapIterator it = mapIterator ( ) ; \n\ttry { \n\t\twhile $F2921 ( it ) { \n\t\t\t$F8877 ( key , it ) $F21137 ( value , it ) if ( value == null ) { \n\t\t\t\tif ( map . get ( key ) != null || map . containsKey ( key ) == _BOOL ) { \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( $F115302 ( value , map , key ) == _BOOL ) { \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( ClassCastException ignored ) { \n\t\treturn _BOOL ; \n\t\t} \n\tcatch ( NullPointerException ignored ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public void doctypeDecl ( String rootElement , String publicId , String systemId , Augmentations augs ) throws XNIException { \n\tfInDTD = _BOOL ; \n\ttry { \n\t\tif ( fLexicalHandler != null ) { \n\t\t\tfLexicalHandler . startDTD ( rootElement , publicId , systemId ) ; \n\t\t\t} \n\t\t} \n\t$F122277 ( e ) if ( fDeclHandler != null ) { \n\t\tfDeclaredAttrs = new SymbolHash $F72 ; \n\t\t} \n\t} \n"}, {"code": "public void writeExif $F27539 ( jpeg , exifOutFileName ) throws $F27136 { \n\t$F26831 ( jpeg , exifOutFileName , NULL_ARGUMENT_ ) OutputStream s = null ; \n\ttry { \n\t\ts = getExifWriterStream ( exifOutFileName ) ; \n\t\t$F17918 ( s , jpeg ) $F1206 ( s ) } \n\t$F27615 ( closeSilently , s , e ) $F59 ( s ) } \n"}, {"code": "public void cleanStart $F72 { \n\tConnection conn = getConnection ( _BOOL , _BOOL ) ; \n\tif ( conn == null ) $F4638 dropDatabase ( conn ) ; \n\tcreateUser ( conn ) ; \n\tcreateDatabase ( conn ) ; \n\ttry $F1823 ( conn ) catch ( SQLException e2 ) $F81306 ( log , Level , e2 ) conn = null ; \n\t} \n"}, {"code": "static TemplateModelException newMethodArgInvalidValueException ( String methodName , int argIdx , Object ... details ) { \n\treturn new _TemplateModelException ( methodName , NUM00 , Integer . valueOf ( argIdx + NUM00 ) , NUM00 , details ) ; \n\t} \n"}, {"code": "public static $F96 compressForZlib ( String stringToCompress ) { \n\t$F5475 ( returnValues ) try { \n\t\treturnValues = compressForZlib ( stringToCompress . getBytes ( NUM00 ) ) ; \n\t\t} \n\t$F55768 ( uee ) return returnValues ; \n\t} \n"}, {"code": "private void loadMap ( String extension , String mimeType ) { \n\tif $F15257 ( mimeTypeToExtensionMap , mimeType ) $F1717 ( mimeTypeToExtensionMap , mimeType , extension ) extensionToMimeTypeMap . put ( extension , mimeType ) ; \n\t$F192176 ( isImageType , mimeType , imageMimeTypeSet ) } \n"}, {"code": "$F281033 ( name , publicId , systemId ) "}, {"code": "private String convertTimestamp $F72 { \n\tString result = timestampFormat . replaceAll ( VALID_DATEFORMAT_CHAR_PATTERN + NUM00 , NUM00 ) ; \n\t$F389236 ( result , Pattern ) return result ; \n\t} \n"}, {"code": "public static String encode $F97 ( bytes ) { \n\tint len = bytes . length ; \n\tfinal StringBuffer encoded = new StringBuffer ( ( len + NUM00 ) / NUM00 * NUM00 ) ; \n\tint i = NUM00 ; \n\tint j = len ; \n\twhile ( j >= NUM00 ) { \n\t\tencoded . append ( to64 ( ( $F528005 ( bytes , i ) | ( int ) $F38343 ( bytes , i ) | ( int ) $F21296 ( bytes , i ) ) , NUM00 ) ) ; \n\t\ti += NUM00 ; \n\t\tj -= NUM00 ; \n\t\t} \n\tif ( j == NUM00 ) { \n\t\tencoded . append ( to64 ( $F528005 ( bytes , i ) | ( $F21296 ( bytes , i ) ) , NUM00 ) ) ; \n\t\t} \n\tif ( j == NUM00 ) { \n\t\tencoded . append ( to64 ( ( ( bytes [ i ] & NUM00 ) ) , NUM00 ) ) ; \n\t\t} \n\t$F92 ( encoded ) } \n"}, {"code": "final public void print ( double v ) { \n\tWriter out = this . out ; \n\t$F8249 ( out ) try { \n\t\t$F2544 ( s , String , v ) $F170077 ( out , s ) } \n\t$F53427 ( log , Level , e ) } \n"}, {"code": "public String toString $F72 { \n\tStringBuffer result = $F80120 ( ipAddress ) ; \n\t$F84 ( result ) result . append ( extendedNetworkPrefix ) ; \n\t$F92 ( result ) } \n"}, {"code": "private static boolean containsChroot ( String zkHost ) $F132975 ( zkHost ) "}, {"code": "public static void onDatabase ( MongoClient client , String dbName , Consumer < MongoDatabase > dbOperation ) { \n\tif ( contains ( client . listDatabaseNames ( ) , dbName ) ) { \n\t\tdbOperation . accept ( client . getDatabase ( dbName ) ) ; \n\t\t} \n\t} \n"}, {"code": "protected int createHashCode $F72 { \n\tint result = uri . hashCode ( ) ^ prefix . hashCode ( ) ; \n\t$F85331 ( result ) return result ; \n\t} \n"}, {"code": "$F30789 ( d , imageView , getImageView , viewWidth , viewHeight , drawableWidth , drawableHeight , mBaseMatrix , widthScale , heightScale , mScaleType , ScaleType , scale , Math , mTempSrc , mTempDst , FIT_CENTER , ScaleToFit , FIT_START , FIT_END , FIT_XY , resetMatrix ) "}, {"code": "public static PlaceholderFragment newInstance ( int sectionNumber ) { \n\tPlaceholderFragment fragment = new PlaceholderFragment $F72 ; \n\t$F53033 ( args ) args . putInt ( ARG_SECTION1BER , sectionNumber ) ; \n\tfragment . setArguments ( args ) ; \n\treturn fragment ; \n\t} \n"}, {"code": "public String importTrl ( String directory , int AD_Client_ID , String AD_Language , String Trl_Table ) { \n\tString fileName = directory + File . separator + Trl_Table + NUM00 + AD_Language + NUM00 ; \n\tlog . info ( fileName ) ; \n\t$F1705 ( in , fileName ) if $F1906 ( in ) { \n\t\tString msg = NUM00 + fileName ; \n\t\tlog . log ( Level . SEVERE , msg ) ; \n\t\treturn msg ; \n\t\t} \n\ttry { \n\t\tTranslationHandler handler = new TranslationHandler ( AD_Client_ID ) ; \n\t\t$F2218 ( factory , SAXParserFactory ) $F49819 ( parser , factory ) parser . parse ( in , handler ) ; \n\t\tlog . info ( NUM00 + handler . getUpdateCount ( ) ) ; \n\t\treturn Msg . getMsg ( m_ctx , NUM00 ) + NUM00 + handler . getUpdateCount ( ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F65048 ( log , Level , e ) $F92 ( e ) } \n\t} \n"}, {"code": "public ResultFileReader ( Problem problem , File file ) throws IOException { \n\tsuper ( ) ; \n\tthis . problem = problem ; \n\t$F438 ( reader , file ) $F36243 ( line , reader ) } \n"}, {"code": "$F1 public void onFailure ( IMqttToken asyncActionToken , Throwable exception ) { \n\t$F301 ( exception ) Log . e ( NUM00 , $F5351 ( exception ) ) ; \n\tonDisconnect ( _BOOL ) ; \n\t} \n"}, {"code": "$F1 public boolean exclude ( String identifier ) $F298 ( blacklist , identifier ) "}, {"code": "public static boolean checkCommunicationError ( Exception exc ) { \n\tThrowable rootCause = SolrException . getRootCause ( exc ) ; \n\tboolean wasCommError = ( rootCause instanceof ConnectException || rootCause instanceof ConnectTimeoutException || rootCause instanceof NoHttpResponseException || rootCause instanceof SocketException ) ; \n\treturn wasCommError ; \n\t} \n"}, {"code": "public boolean isReliable $F72 { \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F4486 ( type , outputStack , n , outputStackTop , t , Math , System , top , owner ) "}, {"code": "static private String SHORT_Max_Plus $F72 { \n\tlong tempValue = Short . MAX_VALUE + NUM00 ; \n\t$F33236 ( String , tempValue ) } \n"}, {"code": "public void firePropertyChange $F109214 ( name , oldValue , newValue ) { \n\tbeanContextChildSupport . firePropertyChange ( name , oldValue , newValue ) ; \n\t} \n"}, {"code": "public static String encode ( String value ) { \n\t$F2936 ( value ) $F2936 ( value ) $F2936 ( value ) $F2936 ( value ) $F2936 ( value ) $F2936 ( value ) return value ; \n\t} \n"}, {"code": "public void createDatabaseEntitiesForStoragePolicyTesting $F72 { \n\tcreateDatabaseEntitiesForStoragePolicyTesting ( AbstractServiceTest . STORAGE_POLICY_NAMESPACE_CD , Arrays . asList ( AbstractServiceTest . STORAGE_POLICY_RULE_TYPE ) , AbstractServiceTest . BDEF_NAMESPACE , AbstractServiceTest . BDEF_NAME , Arrays . asList ( AbstractServiceTest . FORMAT_FILE_TYPE_CODE ) , Arrays . asList ( AbstractServiceTest . STORAGE_NAME ) , Arrays . asList ( AbstractServiceTest . STORAGE_NAME_2 ) ) ; \n\t} \n"}, {"code": "private PDFPage createPage ( int pagenum , PDFObject pageObj ) throws IOException { \n\tint rotation = NUM00 ; \n\tRectF mediabox = null ; \n\tRectF cropbox = null ; \n\tPDFObject mediaboxObj = getInheritedValue ( pageObj , NUM00 ) ; \n\tif ( mediaboxObj != null ) { \n\t\tmediabox = parseRect ( mediaboxObj ) ; \n\t\t} \n\tPDFObject cropboxObj = getInheritedValue ( pageObj , NUM00 ) ; \n\tif ( cropboxObj != null ) { \n\t\tcropbox = parseRect ( cropboxObj ) ; \n\t\t} \n\tPDFObject rotateObj = getInheritedValue ( pageObj , NUM00 ) ; \n\tif ( rotateObj != null ) { \n\t\trotation = rotateObj . getIntValue ( ) ; \n\t\t} \n\tRectF bbox = ( ( cropbox == null ) ? mediabox : cropbox ) ; \n\treturn new PDFPage ( pagenum , bbox , rotation , cache ) ; \n\t} \n"}, {"code": "static Map addElementToMap ( String key , Set values , Map toMap ) { \n\tif $F57241 ( key , toMap ) $F1717 ( toMap , key , values ) return toMap ; \n\t} \n"}, {"code": "public void saveBootProp $F72 throws IOException { \n\tif $F2137 ( bootProp , bootPropOrg ) { \n\t\tfinal String propFile = jarFolder + NUM00 ; \n\t\tfinal OutputStream os = new FileOutputStream ( propFile ) ; \n\t\ttry { \n\t\t\tbootProp . store ( os , NUM00 ) ; \n\t\t\t} \n\t\t$F3229 ( os ) } \n\t} \n"}, {"code": "private int append ( FileSystem fs , Configuration conf , Path src , PrintWriter writer , int currentRecordNumber ) throws IOException { \n\tBufferedReader reader = new BufferedReader ( new InputStreamReader ( fs . open ( src ) ) ) ; \n\ttry { \n\t\t$F27015 ( line , reader ) while ( line != null ) { \n\t\t\tif $F3106 ( line ) { \n\t\t\t\tline = NUM00 + currentRecordNumber ++ ; \n\t\t\t\t} \n\t\t\twriter . println ( line ) ; \n\t\t\t$F36243 ( line , reader ) } \n\t\treturn currentRecordNumber ; \n\t\t} \n\t$F3229 ( reader ) } \n"}, {"code": "public PacketOutputStream writeTimestampLength ( final Calendar calendar , Timestamp ts , boolean fractionalSeconds ) { \n\tassureBufferCapacity ( fractionalSeconds ? NUM00 : NUM00 ) ; \n\tbuffer . put ( ( byte ) ( fractionalSeconds ? NUM00 : NUM00 ) ) ; \n\tbuffer . putShort ( ( short ) $F21621 ( calendar , Calendar ) ) ; \n\tbuffer . put ( ( byte ) ( ( $F21623 ( calendar , Calendar ) + NUM00 ) & NUM00 ) ) ; \n\tbuffer . put ( ( byte ) ( $F21625 ( calendar , Calendar ) & NUM00 ) ) ; \n\tbuffer . put ( $F34510 ( calendar , Calendar ) ) ; \n\tbuffer . put ( ( byte ) $F21629 ( calendar , Calendar ) ) ; \n\tbuffer . put ( ( byte ) $F21631 ( calendar , Calendar ) ) ; \n\tif ( fractionalSeconds ) { \n\t\tbuffer . putInt ( ts . getNanos ( ) / NUM00 ) ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "public int difference ( String s1 , String s2 ) throws EncoderException { \n\treturn SoundexUtils . difference ( this , s1 , s2 ) ; \n\t} \n"}, {"code": "public static String morpha ( String text , boolean tags ) { \n\tif $F2979 ( text ) $F2455 $F35105 ( textParts , whitespace , text ) $F83 ( result ) try { \n\t\tfor ( String textPart : textParts ) { \n\t\t\tMorpha morpha = new Morpha ( new StringReader ( textPart ) , tags ) ; \n\t\t\tif $F35625 ( result ) $F86 ( result ) $F45691 ( result , morpha ) } \n\t\t} \n\tcatch ( Error e ) { \n\t\treturn text ; \n\t\t} \n\tcatch ( $F3258 e ) { \n\t\treturn text ; \n\t\t} \n\t$F92 ( result ) } \n"}, {"code": "public static void deleteFile ( File file ) throws AdeUsageException { \n\tif $F7119 ( file ) { \n\t\tthrow new AdeUsageException ( FAILED_DELETING_FILE + file . getPath ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public Shape createCheckMark ( final int x , final int y , final int w , final int h ) { \n\tdouble xf = w / NUM00 ; \n\tdouble hf = h / NUM00 ; \n\t$F2268 ( path ) path . moveTo ( x , y + NUM00 * hf ) ; \n\tpath . lineTo ( x + NUM00 * xf , y + NUM00 * hf ) ; \n\tpath . lineTo ( x + NUM00 * xf , y + NUM00 * hf ) ; \n\tpath . lineTo ( x + NUM00 * xf , y ) ; \n\tpath . lineTo ( x + NUM00 * xf , y ) ; \n\tpath . lineTo ( x + NUM00 * xf , y + NUM00 * hf ) ; \n\t$F2272 ( path ) return path ; \n\t} \n"}, {"code": "$F202347 ( mRootDirectory , VolleyLog , files , file , fis , entry , CacheHeader , putEntry ) "}, {"code": "public TCPChannelClient ( ExecutorService executor , TCPChannelEvents eventListener , String ip , int port ) { \n\tthis . executor = executor ; \n\texecutorThreadCheck = new ThreadUtils . ThreadChecker $F72 ; \n\texecutorThreadCheck . detachThread ( ) ; \n\tthis . eventListener = eventListener ; \n\tInetAddress address ; \n\ttry { \n\t\taddress = InetAddress . getByName ( ip ) ; \n\t\t} \n\tcatch ( UnknownHostException e ) $F3602 ( reportError ) if ( address . isAnyLocalAddress ( ) ) { \n\t\tsocket = new TCPSocketServer ( address , port ) ; \n\t\t} \n\telse { \n\t\tsocket = new TCPSocketClient ( address , port ) ; \n\t\t} \n\t$F2346 ( socket ) } \n"}, {"code": "protected void cutSelectedBean $F72 { \n\tif $F22503 ( Debug ) $F18535 ( Debug ) if ( selectedBean == null || selectedBeanLocation == null ) { \n\t\tif $F22503 ( Debug ) $F32925 ( Debug , selectedBean ) if $F22503 ( Debug ) $F32925 ( Debug , selectedBeanLocation ) clearSelection ( ) ; \n\t\t$F665 } \n\ttry { \n\t\t$F1659 ( serBean ) $F7054 ( oos , serBean ) oos . writeObject ( selectedBean ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F301 ( e ) clearSelection ( ) ; \n\t\tif $F22503 ( Debug ) $F18535 ( Debug ) $F665 } \n\tcutBean = selectedBean ; \n\tselectedBeanBox . showCut ( selectedBean ) ; \n\tif $F22503 ( Debug ) $F18535 ( Debug ) } \n"}, {"code": "public RemoverManager track ( Remover remover ) $F17642 ( handlers , remover , this ) "}, {"code": "public void actionPerformed $F72385 ( e ) { \n\t$F35561 ( source , e ) if ( ! ( source instanceof JMenuItem ) ) $F665 JMenuItem mi = ( JMenuItem ) source ; \n\t$F45667 ( name , mi ) OMGraphicHandlerLayer targetLayer = ( OMGraphicHandlerLayer ) layers . get ( name ) ; \n\tif ( targetLayer == null ) { \n\t\tDebug . message ( NUM00 , NUM00 + NUM00 + name ) ; \n\t\t$F665 } \n\ttargetLayer . doAction ( ( OMGraphic ) transferData , new OMAction ( OMAction . UPDATE_GRAPHIC_MASK ) ) ; \n\t} \n"}, {"code": "private void addEntry $F72 { \n\tmodel . addNewEntry ( ) ; \n\tremoveButton . setEnabled ( _BOOL ) ; \n\t} \n"}, {"code": "private void ensureSize $F72 { \n\tif ( children == EMPTY_CHILDREN ) { \n\t\tchildren = new FPNode $F380 ; \n\t\t$F665 } \n\tint newsize = children . length == NUM00 ? INITIAL_SIZE : ( children . length < < NUM00 ) ; \n\t$F8003 ( children , Arrays , newsize ) } \n"}, {"code": "public UUID ( long mostSigBits , long leastSigBits ) { \n\tthis . mostSigBits = mostSigBits ; \n\tthis . leastSigBits = leastSigBits ; \n\tinit ( ) ; \n\t} \n"}, {"code": "public static PrettyPrint indentWithSpaces ( int number ) { \n\t$F6853 ( number ) $F18064 ( chars , number ) $F21017 ( Arrays , chars ) return new PrettyPrint ( chars ) ; \n\t} \n"}, {"code": "private static void renderHandler ( FacesContext context , UIComponent component , Collection < ClientBehaviorContext . Parameter > params , String handlerName , Object handlerValue , String behaviorEventName , String submitTarget , boolean needsSubmit , boolean includeExec ) throws IOException { \n\tResponseWriter writer = context . getResponseWriter ( ) ; \n\tString userHandler = getNonEmptyUserHandler ( handlerValue ) ; \n\tList < ClientBehavior > behaviors = getClientBehaviors ( component , behaviorEventName ) ; \n\tif ( ( null != behaviors ) && $F3817 ( behaviors ) && Util . componentIsDisabled ( component ) ) { \n\t\tbehaviors = null ; \n\t\t} \n\tif ( params == null ) $F254727 ( params , Collections ) String handler = null ; \n\tswitch ( getHandlerType ( behaviors , params , userHandler , needsSubmit , includeExec ) ) { \n\t\tcase USER_HANDLER_ONLY : handler = userHandler ; \n\t\t$F597 case SINGLE_BEHAVIOR_ONLY : handler = getSingleBehaviorHandler ( context , component , behaviors . get ( NUM00 ) , params , behaviorEventName , submitTarget , needsSubmit ) ; \n\t\t$F597 case SUBMIT_ONLY : handler = getSubmitHandler ( context , component , params , submitTarget , _BOOL ) ; \n\t\t$F597 case CHAIN : handler = getChainedHandler ( context , component , behaviors , params , behaviorEventName , userHandler , submitTarget , needsSubmit ) ; \n\t\t$F597 $F1267 assert ( _BOOL ) ; \n\t\t} \n\twriter . writeAttribute ( handlerName , handler , null ) ; \n\t} \n"}, {"code": "public String constructTSDBMetricName $F72 { \n\tStringBuilder sb = new StringBuilder ( getScope ( ) ) ; \n\tif $F1032 ( _namespace ) $F39640 ( sb , getNamespace ) $F92 ( sb ) } \n"}, {"code": "$F1 protected void registerNewSelector $F72 throws IOException { \n\tsynchronized ( selector ) { \n\t\t$F16910 keys = selector . keys ( ) ; \n\t\tSelector newSelector = null ; \n\t\tif ( selectorProvider == null ) { \n\t\t\t$F81052 ( newSelector , Selector ) } \n\t\telse { \n\t\t\tnewSelector = selectorProvider . openSelector ( ) ; \n\t\t\t} \n\t\tfor ( SelectionKey key : keys ) { \n\t\t\tSelectableChannel ch = key . channel ( ) ; \n\t\t\tNioSession session = ( NioSession ) key . attachment ( ) ; \n\t\t\tSelectionKey newKey = ch . register ( newSelector , key . interestOps ( ) , session ) ; \n\t\t\tsession . setSelectionKey ( newKey ) ; \n\t\t\t} \n\t\t$F59 ( selector ) selector = newSelector ; \n\t\t} \n\t} \n"}, {"code": "public void testCase4 $F72 { \n\t$F7829 byte $F3014 = { \n\t\tNUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\tint aSign = NUM00 ; \n\tint bSign = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , NUM00 , NUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , - NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F7838 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "protected synchronized void received $F103468 ( responseCode , stream , json ) { \n\tFollowerInfo result = parseFollowers ( stream , json ) ; \n\tif ( result != null ) { \n\t\tnoError ( stream ) ; \n\t\tcached . put ( stream , result ) ; \n\t\tif ( type == Follower . Type . FOLLOWER ) { \n\t\t\tlistener . receivedFollowers ( result ) ; \n\t\t\tif ( hasNewFollowers ( result . followers ) ) { \n\t\t\t\tlistener . newFollowers ( result ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( type == Follower . Type . SUBSCRIBER ) { \n\t\t\tlistener . receivedSubscribers ( result ) ; \n\t\t\t} \n\t\trequested . add ( stream ) ; \n\t\t} \n\telse { \n\t\tString errorMessage = NUM00 ; \n\t\tif ( responseCode == NUM00 ) { \n\t\t\terrorMessage = NUM00 ; \n\t\t\terror ( stream , NUM00 ) ; \n\t\t\t} \n\t\telse if ( responseCode == NUM00 ) { \n\t\t\terrorMessage = NUM00 ; \n\t\t\terror ( stream , NUM00 ) ; \n\t\t\t} \n\t\telse if $F2862 ( responseCode ) { \n\t\t\terrorMessage = NUM00 ; \n\t\t\terror ( stream , NUM00 ) ; \n\t\t\t} \n\t\telse if ( responseCode == NUM00 ) { \n\t\t\terrorMessage = NUM00 ; \n\t\t\terror ( stream , NUM00 ) ; \n\t\t\t} \n\t\telse { \n\t\t\terrorMessage = NUM00 ; \n\t\t\terror ( stream , NUM00 ) ; \n\t\t\t} \n\t\tFollowerInfo errorResult = new FollowerInfo ( type , stream , errorMessage ) ; \n\t\tcached . put ( stream , errorResult ) ; \n\t\tif ( type == Follower . Type . FOLLOWER ) { \n\t\t\tlistener . receivedFollowers ( errorResult ) ; \n\t\t\t} \n\t\telse if ( type == Follower . Type . SUBSCRIBER ) { \n\t\t\tlistener . receivedSubscribers ( errorResult ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static $F4203 $F5675 select ( Connection connection , String rawSqlQuery , RowProcessor $F4203 rowProcessor , Object ... parameters ) throws IOException , SQLException { \n\tPreparedStatement stmt = null ; \n\tResultSet rs = null ; \n\ttry { \n\t\tstmt = connection . prepareStatement ( rawSqlQuery ) ; \n\t\tfor ( $F1139 ( index , parameters ) ) { \n\t\t\tJdbcUtils . bindParameter ( stmt , index + NUM00 , parameters [ index ] ) ; \n\t\t\t} \n\t\t$F47578 ( rs , stmt ) $F5675 result = Lists . newLinkedList ( ) ; \n\t\twhile $F1682 ( rs ) { \n\t\t\tresult . add ( rowProcessor . process ( rs ) ) ; \n\t\t\t} \n\t\treturn result ; \n\t\t} \n\tfinally { \n\t\tJdbcUtils . closeResultSet ( rs ) ; \n\t\tJdbcUtils . closeStatement ( stmt ) ; \n\t\t} \n\t} \n"}, {"code": "public static long nowInNanos $F72 { \n\treturn System . nanoTime ( ) ; \n\t} \n"}, {"code": "public void test_clone $F72 { \n\tFormat fm = new MockFormat $F72 ; \n\tFormat fmc = ( Format ) fm . clone ( ) ; \n\tassertEquals ( fm . getClass ( ) , fmc . getClass ( ) ) ; \n\t} \n"}, {"code": "public Future < SyncReply > sendRequest ( int xid , SyncMessage request ) throws RemoteStoreException { \n\tensureConnected ( ) ; \n\tRemoteSyncFuture future = new RemoteSyncFuture ( xid , connectionGeneration ) ; \n\t$F124940 ( futureMap , Integer , xid , future ) if $F60125 ( futureMap , MAX_PENDING_REQUESTS ) { \n\t\tsynchronized ( futureNotify ) { \n\t\t\twhile $F60125 ( futureMap , MAX_PENDING_REQUESTS ) { \n\t\t\t\ttry $F28646 ( futureNotify ) catch ( InterruptedException e ) { \n\t\t\t\t\tthrow new RemoteStoreException ( NUM00 , e ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tchannel . writeAndFlush ( request ) ; \n\treturn future ; \n\t} \n"}, {"code": "public static boolean isEmpty ( String str ) { \n\treturn ( null == str || NUM00 == str . length ( ) ) ; \n\t} \n"}, {"code": "private static final boolean compareAndSetWaitStatus ( Node node , int expect , int update ) { \n\treturn unsafe . compareAndSwapInt ( node , waitStatusOffset , expect , update ) ; \n\t} \n"}, {"code": "public void enableDependency ( Capability c ) { \n\t$F84963 ( doNotCheckCapabilities ) if ( c == Capability . NOMINAL_ATTRIBUTES ) { \n\t\tenableDependency ( Capability . BINARY_ATTRIBUTES ) ; \n\t\t} \n\telse if ( c == Capability . BINARY_ATTRIBUTES ) { \n\t\tenableDependency ( Capability . UNARY_ATTRIBUTES ) ; \n\t\t} \n\telse if ( c == Capability . UNARY_ATTRIBUTES ) { \n\t\tenableDependency ( Capability . EMPTY_NOMINAL_ATTRIBUTES ) ; \n\t\t} \n\telse if ( c == Capability . NOMINAL_CLASS ) { \n\t\tenableDependency ( Capability . BINARY_CLASS ) ; \n\t\t} \n\tm_Dependencies . add ( c ) ; \n\t} \n"}, {"code": "public IVariable [ ] extractRobotDebugVariables ( final int stackTraceId , $F87266 ( newVariables ) ) { \n\tfinal RobotDebugVariablesContext currentVariablesContext = findCurrentVariablesContext ( stackTraceId ) ; \n\tMap < String , IVariable > previousVariablesMap = initPreviousVariablesState ( currentVariablesContext ) ; \n\tfinal Map < String , IVariable > $F161023 ( nonGlobalVariablesMap ) ; \n\tif ( previousVariablesMap == null ) { \n\t\tinitNewNonGlobalVariables ( newVariables , nonGlobalVariablesMap ) ; \n\t\t} \n\telse { \n\t\tinitVariablesComparingWithPreviousState ( newVariables , previousVariablesMap , nonGlobalVariablesMap ) ; \n\t\t} \n\tfinal LinkedList < IVariable > currentVariablesList = createCurrentVariablesList ( nonGlobalVariablesMap ) ; \n\tsaveCurrentVariablesState ( stackTraceId , currentVariablesContext , nonGlobalVariablesMap ) ; \n\treturn currentVariablesList . toArray ( new IVariable $F2313 ( currentVariablesList ) ) ; \n\t} \n"}, {"code": "public ResourcesPoet addInteger ( String name , String value ) { \n\t$F8382 ( bool , document ) $F34765 ( bool , name ) bool . appendChild ( document . createTextNode ( String . valueOf ( value ) ) ) ; \n\tresourceElement . appendChild ( bool ) ; \n\treturn this ; \n\t} \n"}, {"code": "$F146919 ( s , length , _BOOL , sum , i , digit , FormatException ) "}, {"code": "public static String mapFullWidthLetterToHalfWidth ( String text ) $F845 "}, {"code": "private static $F4203 void assertCollectionEqualsNoOrder ( $F9884 expected , $F9884 actual ) { \n\tString msg = String . format ( $F168487 ( expected , actual ) ) ; \n\tassertEquals ( msg , expected . size ( ) , actual . size ( ) ) ; \n\tfor ( T e : expected ) { \n\t\tif $F2200 ( actual , e ) { \n\t\t\tmsg = String . format ( NUM00 + NUM00 , e , expected , actual ) ; \n\t\t\tfail ( msg ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F26560 ( requestMethod , responseCode , Request , HttpStatus ) "}, {"code": "public int availableInProcess $F72 { \n\treturn Math . max ( NUM00 , maxInProcess - pending . size ( ) ) ; \n\t} \n"}, {"code": "public void add ( double x ) { \n\t$F198570 as ; \n\tlong b , v ; \n\tint m ; \n\tCell a ; \n\tif ( ( as = cells ) != null || ! casBase ( b = base , Double . doubleToRawLongBits ( Double . longBitsToDouble ( b ) + x ) ) ) { \n\t\tboolean uncontended = _BOOL ; \n\t\tif ( as == null || $F198579 ( m , as ) || ( a = as [ getProbe ( ) & m ] ) == null || ! ( uncontended = a . cas ( v = a . value , Double . doubleToRawLongBits ( Double . longBitsToDouble ( v ) + x ) ) ) ) doubleAccumulate ( x , null , uncontended ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean shouldExecuteAction $F72 { \n\t$F18806 ( delay , _BOOL ) $F5740 ( timePassed , System , lastActionExecuted ) if ( timePassed > delay * NUM00 ) { \n\t\t$F3224 ( lastActionExecuted , System ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static int moveByWord ( String text , int column , boolean forward , boolean returnCursorAtEnd ) { \n\tint curColumn = column ; \n\t$F115 ( length , text ) int direction = forward ? NUM00 : - NUM00 ; \n\tboolean farWordEnd = ( ( direction == NUM00 && returnCursorAtEnd ) || ( direction == - NUM00 && ! returnCursorAtEnd ) ) ; \n\tboolean foundEarlyMatch = _BOOL ; \n\tif $F11994 ( UnicodeUtils , text , curColumn ) { \n\t\tcurColumn = skipNonwhitespaceSimilar ( text , curColumn , forward ) ; \n\t\tif ( farWordEnd && curColumn - direction != column ) { \n\t\t\tcurColumn -= direction ; \n\t\t\tfoundEarlyMatch = _BOOL ; \n\t\t\t} \n\t\t} \n\tif ( ! foundEarlyMatch && curColumn >= NUM00 && curColumn < length ) { \n\t\tcurColumn = skipWhitespace ( text , curColumn , forward ) ; \n\t\tif ( farWordEnd && curColumn >= NUM00 && curColumn < length ) { \n\t\t\tcurColumn = skipNonwhitespaceSimilar ( text , curColumn , forward ) - direction ; \n\t\t\t} \n\t\t} \n\tif ( curColumn < NUM00 || curColumn >= length ) $F7629 return curColumn ; \n\t} \n"}, {"code": "protected void handleOrDeferMessage ( DistributionMessage msg ) { \n\tsynchronized ( startupLock ) { \n\t\tif ( beingSick || playingDead ) { \n\t\t\tif ( msg . containsRegionContentChange ( ) || msg instanceof PartitionMessageWithDirectReply ) { \n\t\t\t\tstartupMessages . add ( new StartupEvent ( msg ) ) ; \n\t\t\t\t$F665 } \n\t\t\t} \n\t\tif ( ! processingEvents ) { \n\t\t\tstartupMessages . add ( new StartupEvent ( msg ) ) ; \n\t\t\t$F665 } \n\t\t} \n\tdispatchMessage ( msg ) ; \n\t} \n"}, {"code": "public boolean zoneExportRemoveVolumes ( List < NetworkZoningParam > zoningParams , $F46217 volumeURIs , String stepId ) { \n\tNetworkZoningParam zoningParam = zoningParams . get ( NUM00 ) ; \n\t_log . info ( String . format ( NUM00 , zoningParam . getExportGroupDisplay ( ) , volumeURIs . toString ( ) ) ) ; \n\treturn doZoneExportMasksDelete ( zoningParams , volumeURIs , stepId ) ; \n\t} \n"}, {"code": "private void shutdown $F72 { \n\tif ( nbestListWriter != null ) { \n\t\t$F973 ( logger ) $F59 ( nbestListWriter ) } \n\tif ( alignmentWriter != null ) { \n\t\t$F973 ( logger ) $F59 ( alignmentWriter ) } \n\t} \n"}, {"code": "$F1 public void paintIcon ( Component c , Graphics g , int x , int y ) { \n\tPainter painter = ( Painter ) UIManager . get ( prefix + NUM00 + key ) ; \n\tif ( painter != null ) { \n\t\tJComponent jc = ( c instanceof JComponent ) ? ( JComponent ) c : null ; \n\t\t$F20230 ( gfx , g ) gfx . translate ( x , y ) ; \n\t\tpainter . paint ( gfx , jc , width , height ) ; \n\t\t$F86480 ( gfx , x , y ) } \n\t} \n"}, {"code": "protected void zoomImageToPosition $F39758 ( scale , centerX , centerY , durationMs ) { \n\tif ( scale > getMaxScale ( ) ) $F20182 ( scale , getMaxScale ) $F39760 ( oldScale , getCurrentScale ) final float deltaScale = scale - oldScale ; \n\tpost ( mZoomImageToPositionRunnable = new ZoomImageToPosition ( CropImageView . this , durationMs , oldScale , deltaScale , centerX , centerY ) ) ; \n\t} \n"}, {"code": "public List $F158545 list ( Database conn ) throws SQLException { \n\tResultSet rs = null ; \n\t$F11282 ( statement , conn ) List $F158545 shardToChannels = new ArrayList $F158545 $F72 ; \n\ttry { \n\t\trs = statement . executeQuery ( select ) ; \n\t\twhile $F1682 ( rs ) { \n\t\t\t$F13404 ( shard ) shard . put ( ShardChannelTable . SHARD_ID_COL , rs . getString ( ShardChannelTable . SHARD_ID_COL ) ) ; \n\t\t\tshard . put ( ShardChannelTable . CHANNEL_COL , rs . getString ( ShardChannelTable . CHANNEL_COL ) ) ; \n\t\t\tshardToChannels . add ( shard ) ; \n\t\t\t} \n\t\t} \n\t$F15722 ( close , rs , statement ) return shardToChannels ; \n\t} \n"}, {"code": "public Boolean isHidden ( File f ) { \n\t$F20605 ( name , f ) if ( ( name != null ) && $F1263 ( name ) && $F4432 ( name ) ) $F29943 ( Boolean ) else { \n\t\treturn Boolean . FALSE ; \n\t\t} \n\t} \n"}, {"code": "private boolean scrollViewCanScrollVertically ( ScrollView scrollView , int direction ) { \n\tfinal int offset = Math . max ( NUM00 , scrollView . getScrollY ( ) ) ; \n\tfinal int range = computeVerticalScrollRange ( scrollView ) - scrollView . getHeight ( ) ; \n\t$F116 ( range , _BOOL ) if ( direction < NUM00 ) { \n\t\treturn offset > NUM00 ; \n\t\t} \n\telse { \n\t\treturn offset < range - NUM00 ; \n\t\t} \n\t} \n"}, {"code": "public JarInfo loadJar $F72 throws IOException { \n\tZipInputStream zis = null ; \n\tManifest mf = null ; \n\tboolean empty = _BOOL ; \n\ttry { \n\t\tzis = new ZipInputStream ( jarStream ) ; \n\t\tZipEntry ent = null ; \n\t\twhile $F78823 ( ent , zis ) { \n\t\t\tempty = _BOOL ; \n\t\t\t$F20605 ( name , ent ) if ( Manifest . isManifestName ( name ) ) { \n\t\t\t\t$F1538 ( baos ) byte $F76061 = $F10314 ; \n\t\t\t\tfor ( $F589 ) { \n\t\t\t\t\t$F83249 ( len , zis , buffer ) $F29432 ( len ) $F11584 ( baos , buffer , len ) } \n\t\t\t\t$F1208 ( buf , baos ) mf = new Manifest ( buf ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F8012 ( ex ) catch ( Throwable th ) { \n\t\t$F301 ( th ) $F3495 ( th ) } \n\tfinally { \n\t\tif ( zis != null ) $F40297 ( zis ) } \n\t$F40600 ( empty ) JarInfo ji = createJarInfo ( mf ) ; \n\treturn ji ; \n\t} \n"}, {"code": "public void invalidateTitleSortable $F72 { \n\tfor ( Movie movie : $F7044 ( movieList ) ) { \n\t\tmovie . clearTitleSortable ( ) ; \n\t\t} \n\t} \n"}, {"code": "public void addRow ( Assignment head , double prob ) { \n\tif $F19274 ( prob ) $F932 headVars . addAll ( head . getVariables ( ) ) ; \n\ttable . put ( head , prob ) ; \n\t} \n"}, {"code": "public $F96 createJarFromFileContent $F2236 ( fileName , content ) throws IOException { \n\t$F1538 ( byteArrayOutputStream ) JarOutputStream jarOutputStream = new JarOutputStream ( byteArrayOutputStream ) ; \n\tJarEntry entry = new JarEntry ( fileName ) ; \n\t$F13533 ( entry , System ) jarOutputStream . putNextEntry ( entry ) ; \n\t$F60813 ( jarOutputStream , content ) $F22108 ( jarOutputStream ) $F59 ( jarOutputStream ) $F11316 ( byteArrayOutputStream ) } \n"}, {"code": "private boolean goTo ( long day , boolean animate , boolean setSelected , boolean forceScroll ) { \n\tif ( setSelected ) { \n\t\tmSelectedDay . setTimeInMillis ( day ) ; \n\t\t} \n\tmTempDay . setTimeInMillis ( day ) ; \n\tfinal int position = getPositionFromDay ( day ) ; \n\tView child ; \n\tint i = NUM00 ; \n\tint top = NUM00 ; \n\tdo { \n\t\tchild = getChildAt ( i ++ ) ; \n\t\t$F32472 ( child ) top = child . getTop ( ) ; \n\t\t} \n\twhile ( top < NUM00 ) ; \n\tint selectedPosition ; \n\tif ( child != null ) { \n\t\tselectedPosition = getPositionForView ( child ) ; \n\t\t} \n\telse { \n\t\tselectedPosition = NUM00 ; \n\t\t} \n\tif ( setSelected ) { \n\t\tmAdapter . setSelectedDay ( mSelectedDay ) ; \n\t\t} \n\tif ( position != selectedPosition || forceScroll ) { \n\t\tsetMonthDisplayed ( mTempDay ) ; \n\t\tmPreviousScrollState = OnScrollListener . SCROLL_STATE_FLING ; \n\t\tif ( animate ) $F135051 ( smoothScrollToPositionFromTop , position , LIST_TOP_OFFSET , GOTO_SCROLL_DURATION , _BOOL ) else { \n\t\t\tpostSetSelection ( position ) ; \n\t\t\t} \n\t\t} \n\telse $F72524 ( setSelected , setMonthDisplayed , mSelectedDay ) return _BOOL ; \n\t} \n"}, {"code": "public boolean search ( V v ) { \n\tint h = hashMethod . hash ( v ) ; \n\tLinkedList $F2193 list = ( LinkedList $F2193 ) table [ h ] ; \n\t$F1933 ( list , _BOOL ) $F297 ( list , v ) } \n"}, {"code": "public void closeJDBCConnection ( Connection conn ) { \n\ttry $F6399 ( conn ) $F47553 ( subclassLogWrapper ) } \n"}, {"code": "$F1 public void messageItemDetails ( String strClass , String item , String description , $F806 msgOption , $F2027 msgNumber , int defaultOption ) { \n\t$F397346 options = new $F4188 ( msgOption . length ) ; \n\tfor ( $F1139 ( i , msgOption ) ) { \n\t\toptions . put ( msgNumber [ i ] , msgOption [ i ] ) ; \n\t\t} \n\tmessageItemDetails ( strClass , description , item , options , defaultOption ) ; \n\t} \n"}, {"code": "public void addListener ( ColorMapListener listener ) $F207 ( listeners , listener ) "}, {"code": "protected void computePDists ( $F65332 relation , $F95002 knn , WritableDoubleDataStore pdists ) { \n\tFiniteProgress $F192797 ( prdsProgress , LOG , relation ) ; \n\tfor ( $F42632 ( iditer , relation ) ) { \n\t\tfinal KNNList neighbors = knn . getKNNForDBID ( iditer , kreach + NUM00 ) ; \n\t\tint ks = NUM00 ; \n\t\tdouble ssum = NUM00 ; \n\t\tfor ( DoubleDBIDListIter neighbor = neighbors . iter ( ) ; \n\t\tneighbor . valid ( ) && ks < kreach ; \n\t\tneighbor . advance ( ) ) { \n\t\t\t$F95009 ( DBIDUtil , neighbor , iditer ) final double d = neighbor . doubleValue ( ) ; \n\t\t\tssum += d * d ; \n\t\t\tks ++ ; \n\t\t\t} \n\t\tdouble pdist = ks > NUM00 ? Math . sqrt ( ssum / ks ) : NUM00 ; \n\t\tpdists . putDouble ( iditer , pdist ) ; \n\t\tLOG . incrementProcessed ( prdsProgress ) ; \n\t\t} \n\tLOG . ensureCompleted ( prdsProgress ) ; \n\t} \n"}, {"code": "private static String appendIfMissing ( final String str , final CharSequence suffix , final boolean ignoreCase , final CharSequence ... suffixes ) { \n\tif ( str == null || isEmpty ( suffix ) || endsWith ( str , suffix , ignoreCase ) ) { \n\t\treturn str ; \n\t\t} \n\tif $F22195 ( suffixes ) { \n\t\tfor ( final CharSequence s : suffixes ) { \n\t\t\tif ( endsWith ( str , s , ignoreCase ) ) { \n\t\t\t\treturn str ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn str + suffix . toString ( ) ; \n\t} \n"}, {"code": "private JSONArray requestAllFileSystems $F72 throws IOException , JSONException { \n\t$F19928 ( ret ) for ( Filesystem fs : filesystems ) { \n\t\tret . put ( fs . getRootEntry ( ) ) ; \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "ExternalProblem ( Process process ) { \n\tthis ( process . getInputStream ( ) , process . getOutputStream ( ) ) ; \n\tRedirectStream . redirect ( process . getErrorStream ( ) , System . err ) ; \n\t} \n"}, {"code": "protected static boolean networkMonitorExist ( String nwMonName ) { \n\tString classMethod = NUM00 ; \n\t$F75014 ( debug , classMethod , nwMonName ) if $F38892 ( nwMonName ) { \n\t\tif $F12866 ( debug ) $F49159 ( debug , classMethod ) return _BOOL ; \n\t\t} \n\t$F2689 ntwStats = NetworkMonitor . getInstanceNames ( ) ; \n\t$F7876 ( ss , nwMonName ) if $F105 ( ntwStats , ss ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "protected boolean error_recovery ( boolean debug ) throws $F34430 { \n\t$F10954 ( debug , debug_message ) if ( ! find_recovery_config ( debug ) ) { \n\t\t$F10954 ( debug , debug_message ) return _BOOL ; \n\t\t} \n\tread_lookahead ( ) ; \n\tfor ( $F589 ) { \n\t\t$F10954 ( debug , debug_message ) $F47216 ( try_parse_ahead , debug ) if ( lookahead [ NUM00 ] . sym == EOF_sym ( ) ) { \n\t\t\t$F10954 ( debug , debug_message ) return _BOOL ; \n\t\t\t} \n\t\tif ( debug ) debug_message ( NUM00 + lookahead [ NUM00 ] . sym ) ; \n\t\trestart_lookahead ( ) ; \n\t\t} \n\t$F10954 ( debug , debug_message ) parse_lookahead ( debug ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void andWith ( List < QueryPredicate > predicates ) $F21926 ( children , predicates ) "}, {"code": "public void addRoll ( MMRandom rng ) { \n\tint result = rng . randomInt ( this . faces ) + this . min ; \n\tall . addElement ( new Integer ( result ) ) ; \n\tthis . total += result ; \n\tif ( keep != - NUM00 && all . size ( ) >= keep ) { \n\t\tthis . total = NUM00 ; \n\t\tCollections . sort ( all , Collections . reverseOrder ( ) ) ; \n\t\tfor ( $F119 ( i , keep ) ) { \n\t\t\tthis . total += all . get ( i ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean checkCanonicalUserOptions $F72 { \n\tboolean result ; \n\tOptionHandler handler ; \n\t$F806 userOptions ; \n\t$F806 userOptionsCheck ; \n\tprint ( NUM00 ) ; \n\ttry { \n\t\thandler = getDefaultHandler ( ) ; \n\t\thandler . setOptions ( getUserOptions ( ) ) ; \n\t\tif ( getDebug ( ) ) $F1210 ( print ) userOptions = handler . getOptions ( ) ; \n\t\tif ( getDebug ( ) ) $F14373 ( println , printOptions , userOptions ) if ( getDebug ( ) ) $F1210 ( println ) handler . setOptions ( userOptions . clone ( ) ) ; \n\t\tif ( getDebug ( ) ) $F1210 ( println ) userOptionsCheck = handler . getOptions ( ) ; \n\t\tcompareOptions ( userOptions , userOptionsCheck ) ; \n\t\tprintln ( NUM00 ) ; \n\t\tresult = _BOOL ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tprintln ( NUM00 ) ; \n\t\tresult = _BOOL ; \n\t\t$F121010 ( getDebug , println , e ) } \n\treturn result ; \n\t} \n"}, {"code": "public static void closeQuietly ( final Closeable closeable ) { \n\tif ( closeable != null ) { \n\t\ttry $F881 ( closeable ) catch ( final RuntimeException rethrown ) { \n\t\t\tthrow rethrown ; \n\t\t\t} \n\t\tcatch ( final Exception ignored ) $F845 } \n\t} \n"}, {"code": "public static void pushEncryptedMessage ( final TextSecureEnvelope envelope ) { \n\twhile ( _BOOL ) { \n\t\ttry { \n\t\t\tqueue . put ( envelope ) ; \n\t\t\t$F665 } \n\t\tcatch ( final InterruptedException e ) $F845 } \n\t} \n"}, {"code": "public static int randomRangeInt ( int min , int max ) { \n\treturn ( int ) ( Math . random ( ) < NUM00 ? ( ( NUM00 - Math . random ( ) ) * ( max - min ) + min ) : ( Math . random ( ) * ( max - min ) + min ) ) ; \n\t} \n"}, {"code": "public void test_simplePrematureClose $F72 { \n\tStriterator iter = new Striterator $F49666 ( m_data ) ; \n\tint i = NUM00 ; \n\twhile $F2921 ( iter ) { \n\t\t$F24630 ( iter ) if ( ++ i == NUM00 ) { \n\t\t\t$F59 ( iter ) assertTrue ( $F41112 ( iter ) ) ; \n\t\t\t} \n\t\t} \n\tassertTrue ( ! iter . isOpen ( ) ) ; \n\tassertTrue ( i == NUM00 ) ; \n\t} \n"}, {"code": "public void pushDrawList ( PspGeList list ) $F9232 ( drawListQueue , list ) "}, {"code": "private void populateTaskList ( Volume source , Map < BlockMirror , Volume > groupMirrorSourceMap , TaskList taskList , String taskId , ResourceOperationTypeEnum operationType ) { \n\t$F66346 ( groupSet ) addTask ( taskList , source , taskId , operationType ) ; \n\tfor ( Entry < BlockMirror , Volume > entry : groupMirrorSourceMap . entrySet ( ) ) { \n\t\tBlockMirror mirror = entry . getKey ( ) ; \n\t\tVolume mirrorSource = entry . getValue ( ) ; \n\t\tif ( source . isInCG ( ) && null != taskList . getTaskList ( ) ) { \n\t\t\tgroupSet . add ( mirrorSource . getConsistencyGroup ( ) ) ; \n\t\t\t} \n\t\t} \n\tList < BlockConsistencyGroup > groups = _dbClient . queryObject ( BlockConsistencyGroup . class , groupSet ) ; \n\tfor ( BlockConsistencyGroup group : groups ) { \n\t\taddTask ( taskList , group , taskId , operationType ) ; \n\t\t} \n\t} \n"}, {"code": "public static Tuple max ( Iterator tuples , String field , Comparator cmp ) { \n\tTuple t = null , tmp ; \n\tObject min = null ; \n\tif $F2921 ( tuples ) { \n\t\t$F199603 ( t , tuples ) min = t . get ( field ) ; \n\t\t} \n\twhile $F2921 ( tuples ) { \n\t\t$F199603 ( tmp , tuples ) $F16628 ( obj , tmp , field ) if $F230914 ( cmp , obj , min ) { \n\t\t\tt = tmp ; \n\t\t\tmin = obj ; \n\t\t\t} \n\t\t} \n\treturn t ; \n\t} \n"}, {"code": "public String clusterDefinitionsTipText $F72 $F2455 "}, {"code": "public void testConstructorSignBytesPositive1 $F72 { \n\t$F103294 int aSign = NUM00 ; \n\t$F89724 $F3023 ( aNumber , aSign , aBytes ) $F3030 ( rBytes ) $F3031 ( resBytes , aNumber ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , aNumber ) } \n"}, {"code": "public void fling ( int startX , int startY , int velocityX , int velocityY , int minX , int maxX , int minY , int maxY , int overX , int overY ) { \n\tif $F125676 ( mFlywheel , isFinished ) { \n\t\tfloat oldVelocityX = mScrollerX . mCurrVelocity ; \n\t\tfloat oldVelocityY = mScrollerY . mCurrVelocity ; \n\t\t$F118179 ( Math , velocityX , oldVelocityX , velocityY , oldVelocityY ) } \n\tmMode = FLING_MODE ; \n\tmScrollerX . fling ( startX , velocityX , minX , maxX , overX ) ; \n\tmScrollerY . fling ( startY , velocityY , minY , maxY , overY ) ; \n\t} \n"}, {"code": "$F103859 ( data , results , key ) "}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "public void addListener ( NavigatorListener listener ) $F207 ( listeners , listener ) "}, {"code": "public void closeStream $F72 { \n\tCarbonUtil . closeStreams ( stream ) ; \n\t$F733 ( executorService ) } \n"}, {"code": "public double patience ( int k , F f , int N ) { \n\tdouble pf = p ( f ) ; \n\tBinomialDistribution dist = new BinomialDistribution ( null , N , pf ) ; \n\tdouble p0 = Math . pow ( NUM00 - pf , N ) ; \n\treturn NUM00 - ( dist . cumulativeProbability ( k - NUM00 ) - p0 ) / ( NUM00 - p0 ) ; \n\t} \n"}, {"code": "public static List seriesNameListFromDataArray ( $F29684 data ) { \n\tint seriesCount = data . length ; \n\tList seriesNameList = new $F59124 ( seriesCount ) ; \n\tfor ( $F119 ( i , seriesCount ) ) { \n\t\tseriesNameList . add ( NUM00 + ( i + NUM00 ) ) ; \n\t\t} \n\treturn seriesNameList ; \n\t} \n"}, {"code": "$F1 public int read ( char $F1310 , int off , int len ) throws IOException { \n\tensureOpen ( ) ; \n\tif ( ( off < NUM00 ) || ( off > b . length ) || ( len < NUM00 ) || ( ( off + len ) > b . length ) || ( ( off + len ) < NUM00 ) ) $F81129 else $F14826 ( len ) $F55825 ( pos , count ) if ( pos + len > count ) { \n\t\tlen = count - pos ; \n\t\t} \n\t$F14825 ( len ) System . arraycopy ( buf , pos , b , off , len ) ; \n\tpos += len ; \n\treturn len ; \n\t} \n"}, {"code": "public static void CF6 $F50490 ( x , f , c , nx ) { \n\tdouble sum1 = NUM00 ; \n\tdouble sum2 = NUM00 ; \n\tdouble yj ; \n\tfor ( $F9993 ( j , nx ) ) { \n\t\tif ( j % NUM00 == NUM00 ) { \n\t\t\tyj = x [ j - NUM00 ] - NUM00 * x [ NUM00 ] * Math . cos ( NUM00 * PI * x [ NUM00 ] + j * PI / nx ) ; \n\t\t\tsum1 += yj * yj ; \n\t\t\t} \n\t\telse { \n\t\t\t$F63531 ( yj , x , j , Math , PI , nx ) sum2 += yj * yj ; \n\t\t\t} \n\t\t} \n\tf [ NUM00 ] = x [ NUM00 ] + sum1 ; \n\tf [ NUM00 ] = $F247205 ( x ) * $F247205 ( x ) + sum2 ; \n\tc [ NUM00 ] = x [ NUM00 ] - NUM00 * x [ NUM00 ] * Math . sin ( NUM00 * x [ NUM00 ] * PI + NUM00 * PI / nx ) - MYSIGN ( ( x [ NUM00 ] - NUM00 ) * $F247205 ( x ) ) * Math . sqrt ( Math . abs ( ( x [ NUM00 ] - NUM00 ) * $F247205 ( x ) ) ) ; \n\tc [ NUM00 ] = x [ NUM00 ] - NUM00 * x [ NUM00 ] * Math . sin ( NUM00 * x [ NUM00 ] * PI + NUM00 * PI / nx ) - MYSIGN ( NUM00 * Math . sqrt ( NUM00 - x [ NUM00 ] ) - NUM00 * $F247205 ( x ) ) * Math . sqrt ( Math . abs ( NUM00 * Math . sqrt ( NUM00 - x [ NUM00 ] ) - NUM00 * $F247205 ( x ) ) ) ; \n\t} \n"}, {"code": "$F37597 ( tag , msg , args , sLevel , LEVEL_FATAL , String , Log ) "}, {"code": "private static void expandNumberAt ( String numberString , int startIndex , WordRelation wordRelation ) { \n\texpandNumber ( $F83851 ( numberString , startIndex ) , wordRelation ) ; \n\t} \n"}, {"code": "public static boolean nullEquals ( String s1 , String s2 ) $F66007 ( s1 , s2 ) "}, {"code": "$F1 public void run $F72 { \n\tMultipleObjectsBundle data = generator . loadData ( ) ; \n\tif ( LOG . isVerbose ( ) ) { \n\t\tLOG . verbose ( NUM00 ) ; \n\t\t} \n\ttry { \n\t\tif ( outputFile . exists ( ) && LOG . isVerbose ( ) ) { \n\t\t\tLOG . verbose ( NUM00 + outputFile + NUM00 + NUM00 ) ; \n\t\t\t} \n\t\ttry ( OutputStreamWriter outStream = new FileWriter ( outputFile , _BOOL ) ) { \n\t\t\twriteClusters ( outStream , data ) ; \n\t\t\t} \n\t\t} \n\t$F283758 ( e ) if ( LOG . isVerbose ( ) ) { \n\t\tLOG . verbose ( NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private boolean usedAllRule17Directors ( $F2689 allocatedDirectors , PortAllocationContext context ) { \n\t$F47059 ( rule17Directors , getRule17Directors , context ) $F96731 ( director , allocatedDirectors , rule17Directors ) $F18904 ( rule17Directors ) } \n"}, {"code": "public void stop $F72 { \n\tsynchronized ( privateInstanceLock ) { \n\t\t$F2329 ( connectionAcceptThread ) } \n\tisStopped . set ( _BOOL ) ; \n\ttry { \n\t\t$F7589 ( connectionAcceptThread ) $F14454 ( connectionAcceptThread ) } \n\t$F887 $F29053 ( serverSocket ) } \n"}, {"code": "private static String expandSystemIdStrictOn ( String systemId , String baseSystemId ) throws URI . MalformedURIException { \n\tURI systemURI = new URI ( systemId , _BOOL ) ; \n\tif ( systemURI . isAbsoluteURI ( ) ) { \n\t\treturn systemId ; \n\t\t} \n\tURI baseURI = null ; \n\tif $F6036 ( baseSystemId ) $F20182 ( baseURI , getUserDir ) else { \n\t\tbaseURI = new URI ( baseSystemId , _BOOL ) ; \n\t\tif ( ! baseURI . isAbsoluteURI ( ) ) { \n\t\t\tbaseURI . absolutize ( getUserDir ( ) ) ; \n\t\t\t} \n\t\t} \n\tsystemURI . absolutize ( baseURI ) ; \n\t$F92 ( systemURI ) } \n"}, {"code": "public static void free ( DMessage msg ) { \n\tint index = size2Index ( msg . getSize ( ) ) ; \n\t$F725 ( msg ) if ( index < NUM00 ) ; \n\telse if ( m_cache [ index ] != null ) ; \n\telse m_cache [ index ] = msg ; \n\t} \n"}, {"code": "public boolean equalsIgnoreCase ( final StrBuilder other ) { \n\t$F3627 ( this , other , _BOOL ) if ( this . size != other . size ) { \n\t\treturn _BOOL ; \n\t\t} \n\tfinal char thisBuf [ ] = this . buffer ; \n\tfinal char otherBuf [ ] = other . buffer ; \n\tfor ( $F18298 ( i , size ) ) { \n\t\tfinal char c1 = thisBuf [ i ] ; \n\t\tfinal char c2 = otherBuf [ i ] ; \n\t\tif ( c1 != c2 && Character . toUpperCase ( c1 ) != Character . toUpperCase ( c2 ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected static Long convertUuidToLong ( UUID uuid ) { \n\t$F1338 ( uuid ) Long convertedUuid ; \n\tif ( uuid . version ( ) == NUM00 ) { \n\t\tconvertedUuid = uuid . timestamp ( ) ; \n\t\t} \n\telse { \n\t\tconvertedUuid = uuid . getMostSignificantBits ( ) ; \n\t\t} \n\treturn convertedUuid ; \n\t} \n"}, {"code": "public void addVMArguments ( String vmArgumentName , String vmArgumentValue ) { \n\tVmArgumentData vmArg = new VmArgumentData ( vmArgumentName , vmArgumentValue ) ; \n\tvmSet . add ( vmArg ) ; \n\t} \n"}, {"code": "private void applyTo ( ClassVisitor v , Field f ) { \n\tif $F187400 ( Log ) { \n\t\tLog . logLine ( String . format ( NUM00 , f . toGenericString ( ) ) ) ; \n\t\t} \n\tv . visit ( f ) ; \n\t} \n"}, {"code": "public void testCompareToEqualNeg $F72 { \n\t$F67214 $F79258 int aSign = - NUM00 ; \n\tint bSign = - NUM00 ; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F79260 ( assertEquals , aNumber , bNumber ) } \n"}, {"code": "public void testScreenshot $F72 throws Exception { \n\t$F13527 ( Log , LOG_TAG ) ScreenshotStubActivity activity = getActivity ( ) ; \n\tassertNotNull ( activity ) ; \n\tFile screenshotDir = getScreenshotDir ( ) ; \n\tNewScreenshotObserver observer = new NewScreenshotObserver $F89450 ( screenshotDir ) ; \n\tobserver . startWatching ( ) ; \n\ttakeScreenshot ( ) ; \n\tif ( observer . getCreatedPath ( ) == null ) { \n\t\tsynchronized ( observer ) { \n\t\t\tobserver . wait ( SCREEN_WAIT_TIME_SEC * NUM00 ) ; \n\t\t\t} \n\t\t} \n\tassertNotNull ( String . format ( NUM00 , SCREEN_WAIT_TIME_SEC ) , observer . getCreatedPath ( ) ) ; \n\tFile screenshotFile = new File ( screenshotDir , observer . getCreatedPath ( ) ) ; \n\ttry { \n\t\tassertTrue ( $F21900 ( String , screenshotFile ) , screenshotFile . isFile ( ) ) ; \n\t\tassertTrue ( $F21900 ( String , screenshotFile ) , isValidImage ( screenshotFile ) ) ; \n\t\t} \n\t$F105993 ( screenshotFile ) } \n"}, {"code": "public TaskResourceRep unlinkTargetVolumesFromSnapshotSession ( URI snapSessionURI , SnapshotSessionUnlinkTargetsParam param ) { \n\treturn unlinkTargetVolumesFromSnapshotSession ( snapSessionURI , param , OperationTypeEnum . UNLINK_SNAPSHOT_SESSION_TARGET ) ; \n\t} \n"}, {"code": "private List reverse ( List seq ) { \n\t$F52981 ( newSeq ) for ( $F2774 ( i , seq ) ) { \n\t\tDirectedEdge de = ( DirectedEdge ) i . next ( ) ; \n\t\tnewSeq . addFirst ( de . getSym ( ) ) ; \n\t\t} \n\treturn newSeq ; \n\t} \n"}, {"code": "protected LocPathIterator changePartToRef ( final QName uniquePseudoVarName , WalkingIterator wi , final int numSteps , final boolean isGlobal ) { \n\tVariable var = new Variable $F72 ; \n\tvar . setQName ( uniquePseudoVarName ) ; \n\tvar . setIsGlobal ( isGlobal ) ; \n\tif ( isGlobal ) { \n\t\tElemTemplateElement elem = getElemFromExpression ( wi ) ; \n\t\tStylesheetRoot root = elem . getStylesheetRoot ( ) ; \n\t\t$F64276 ( vars , root ) var . setIndex ( $F2281 ( vars ) ) ; \n\t\t} \n\tAxesWalker walker = wi . getFirstWalker ( ) ; \n\tfor ( $F119 ( i , numSteps ) ) { \n\t\tassertion ( null != walker , NUM00 ) ; \n\t\twalker = walker . getNextWalker ( ) ; \n\t\t} \n\tif ( null != walker ) { \n\t\tFilterExprWalker few = new FilterExprWalker ( wi ) ; \n\t\tfew . setInnerExpression ( var ) ; \n\t\tfew . exprSetParent ( wi ) ; \n\t\tfew . setNextWalker ( walker ) ; \n\t\twalker . setPrevWalker ( few ) ; \n\t\twi . setFirstWalker ( few ) ; \n\t\treturn wi ; \n\t\t} \n\telse { \n\t\tFilterExprIteratorSimple feis = new FilterExprIteratorSimple ( var ) ; \n\t\tfeis . exprSetParent ( wi . exprGetParent ( ) ) ; \n\t\treturn feis ; \n\t\t} \n\t} \n"}, {"code": "$F1309 $F1 public String readLine $F72 throws IOException { \n\t$F20818 ( b ) int chr ; \n\twhile $F61411 ( chr , read ) { \n\t\tif ( chr != NUM00 ) $F46352 ( b , chr ) else $F2495 ( b ) } \n\t$F92 ( b ) } \n"}, {"code": "private void addToScene ( final Node items ) $F207 ( collection , items ) "}, {"code": "public String documentationHomePageUrl $F72 $F16566 ( properties ) "}, {"code": "public static boolean hasTaxonomyInfo ( SequencesReader reader ) { \n\tfinal File taxonFile = new File ( reader . path ( ) , TAXONOMY_FILE ) ; \n\tfinal File mappingFile = new File ( reader . path ( ) , TAXONOMY_TO_SEQUENCE_FILE ) ; \n\tif ( taxonFile . exists ( ) && mappingFile . exists ( ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse if ( taxonFile . exists ( ) || mappingFile . exists ( ) ) { \n\t\tthrow new NoTalkbackSlimException $F580 ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public void removeSelectionListener ( final SelectionListener listener ) { \n\tcheckWidget ( ) ; \n\t$F234144 ( listener , SWT ) listOfSelectionListeners . remove ( listener ) ; \n\t} \n"}, {"code": "public void replace ( ClassNode type , int n ) $F19517 ( remove , n , push , type ) "}, {"code": "public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { \n\tsubmitCycle = _BOOL ; \n\tEntitiesModel model = ( EntitiesModel ) getModel ( ) ; \n\t$F123284 ( prop , getChild , PROPERTY_ATTRIBUTE ) $F59547 ( universalId , getPageSessionAttribute , UNIVERSAL_ID ) try { \n\t\tMap oldValues = model . getAttributeValues ( universalId , _BOOL ) ; \n\t\tMap values = prop . getAttributeValues ( oldValues , _BOOL , model ) ; \n\t\tString curRealm = ( String ) getPageSessionAttribute ( AMAdminConstants . CURRENT_REALM ) ; \n\t\tmodel . modifyEntity ( curRealm , universalId , values ) ; \n\t\t$F252709 ( setInlineAlertMessage , CCAlert ) } \n\t$F50339 ( setInlineAlertMessage , CCAlert , e ) forwardTo ( ) ; \n\t} \n"}, {"code": "private static Boolean isInsidePolygon ( final GeoPoint point , final List < GeoPoint > polyPoints ) { \n\tfinal double latitude = point . getLatitude ( ) ; \n\tfinal double longitude = point . getLongitude ( ) ; \n\tfinal double sinLatitude = Math . sin ( latitude ) ; \n\tfinal double cosLatitude = Math . cos ( latitude ) ; \n\tfinal double sinLongitude = Math . sin ( longitude ) ; \n\tfinal double cosLongitude = Math . cos ( longitude ) ; \n\tdouble arcDistance = NUM00 ; \n\tDouble prevAngle = null ; \n\tfor ( final GeoPoint polyPoint : polyPoints ) { \n\t\tfinal Double angle = computeAngle ( polyPoint , sinLatitude , cosLatitude , sinLongitude , cosLongitude ) ; \n\t\t$F1338 ( angle ) if ( prevAngle != null ) { \n\t\t\tdouble angleDelta = angle - prevAngle ; \n\t\t\tif ( angleDelta < - Math . PI ) { \n\t\t\t\tangleDelta += Math . PI * NUM00 ; \n\t\t\t\t} \n\t\t\tif ( angleDelta > Math . PI ) { \n\t\t\t\tangleDelta -= Math . PI * NUM00 ; \n\t\t\t\t} \n\t\t\tif ( Math . abs ( angleDelta - Math . PI ) < Vector . MINIMUM_RESOLUTION ) $F1337 arcDistance += angleDelta ; \n\t\t\t} \n\t\tprevAngle = angle ; \n\t\t} \n\tif ( prevAngle != null ) { \n\t\tfinal Double lastAngle = computeAngle ( polyPoints . get ( NUM00 ) , sinLatitude , cosLatitude , sinLongitude , cosLongitude ) ; \n\t\t$F1338 ( lastAngle ) double angleDelta = lastAngle - prevAngle ; \n\t\tif ( angleDelta < - Math . PI ) { \n\t\t\tangleDelta += Math . PI * NUM00 ; \n\t\t\t} \n\t\tif ( angleDelta > Math . PI ) { \n\t\t\tangleDelta -= Math . PI * NUM00 ; \n\t\t\t} \n\t\tif ( Math . abs ( angleDelta - Math . PI ) < Vector . MINIMUM_RESOLUTION ) $F1337 arcDistance += angleDelta ; \n\t\t} \n\tif ( Math . abs ( arcDistance ) < Vector . MINIMUM_RESOLUTION ) $F1337 return arcDistance > NUM00 ; \n\t} \n"}, {"code": "private Node deleteMax ( Node x ) { \n\tif ( x . right == null ) return x . left ; \n\tx . right = deleteMax ( x . right ) ; \n\tx . size = NUM00 + size ( x . left ) + size ( x . right ) ; \n\tx . height = NUM00 + Math . max ( height ( x . left ) , height ( x . right ) ) ; \n\treturn balance ( x ) ; \n\t} \n"}, {"code": "$F84990 ( lock , this , f , first , n , last , count , notFull ) "}, {"code": "protected void onProgress ( int itemcount , int size ) $F845 "}, {"code": "private TreeNode ( long nodeValue , SnmpMibAgent agent , TreeNode sup ) { \n\tthis . nodeValue = nodeValue ; \n\tthis . parent = sup ; \n\tagents . addElement ( agent ) ; \n\t} \n"}, {"code": "public Week ( Date time ) { \n\t$F139512 ( this , time , TimeZone , Locale ) ; \n\t} \n"}, {"code": "public CodeAttribute createCode $F72 { \n\tCodeAttribute code = new CodeAttribute $F72 ; \n\tfor ( $F2277 ( i , _attributes ) ) { \n\t\tAttribute attr = _attributes . get ( i ) ; \n\t\tif ( attr instanceof CodeAttribute ) return ( CodeAttribute ) attr ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public BinaryOut ( String filename ) { \n\ttry { \n\t\t$F12015 ( os , filename ) out = new BufferedOutputStream ( os ) ; \n\t\t} \n\t$F12241 ( e ) } \n"}, {"code": "protected ObjectStreamClass readClassDescriptor $F72 throws $F6427 { \n\tObjectStreamClass newClassDesc = new ObjectStreamClass $F72 ; \n\t$F1540 ( name , input ) if $F1277 ( name ) $F14525 newClassDesc . setName ( name ) ; \n\tnewClassDesc . setSerialVersionUID ( input . readLong ( ) ) ; \n\tnewClassDesc . setFlags ( input . readByte ( ) ) ; \n\tif ( descriptorHandle == - NUM00 ) $F20182 ( descriptorHandle , nextHandle ) registerObjectRead ( newClassDesc , descriptorHandle , _BOOL ) ; \n\treadFieldDescriptors ( newClassDesc ) ; \n\treturn newClassDesc ; \n\t} \n"}, {"code": "public static boolean createNewFile ( File targetFile ) { \n\t$F81294 ( targetFile ) try { \n\t\treturn targetFile . createNewFile ( ) ; \n\t\t} \n\t$F3092 ( _BOOL ) } \n"}, {"code": "public void testZeroOne $F72 { \n\t$F45030 $F45033 int aSign = NUM00 ; \n\tint bSign = NUM00 ; \n\t$F15143 $F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F45034 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "protected int executePrepareStatement ( $F100709 columns , PreparedStatement statement ) throws SQLException { \n\tint bindNo = NUM00 ; \n\tfor ( Column c : columns ) { \n\t\tsetColumnValue ( statement , bindNo , c ) ; \n\t\tbindNo ++ ; \n\t\t} \n\treturn statement . executeUpdate ( ) ; \n\t} \n"}, {"code": "public Config ( SamlAuthorityConfiguration samlAuthorityConfig , TokenRestrictions tokenRestrictions , Collection < List $F65938 > validCerts , long clockTolerance , Collection < IDPConfig > inExternalIdps ) { \n\tValidate . notNull ( samlAuthorityConfig ) ; \n\tValidate . notNull ( tokenRestrictions ) ; \n\tValidate . notEmpty ( validCerts ) ; \n\tList $F65938 authorityCert = samlAuthorityConfig . getSigningCertificateChain ( ) ; \n\tboolean authorityCertInValidCerts = _BOOL ; \n\tfor ( List $F65938 currentChain : validCerts ) { \n\t\tValidate . notEmpty ( currentChain ) ; \n\t\tValidate . noNullElements ( currentChain ) ; \n\t\tif ( ! authorityCertInValidCerts && currentChain . equals ( authorityCert ) ) { \n\t\t\tauthorityCertInValidCerts = _BOOL ; \n\t\t\t} \n\t\t} \n\tValidate . isTrue ( authorityCertInValidCerts , NUM00 ) ; \n\tValidate . isTrue ( clockTolerance >= NUM00 ) ; \n\tthis . samlAuthorityConfig = samlAuthorityConfig ; \n\tthis . validCerts = validCerts ; \n\tthis . clockTolerance = clockTolerance ; \n\tthis . tokenRestrictions = tokenRestrictions ; \n\tHashMap < String , IDPConfig > idpsSet = new HashMap < String , IDPConfig > $F72 ; \n\tif ( inExternalIdps != null ) { \n\t\tfor ( IDPConfig conf : inExternalIdps ) { \n\t\t\tif ( conf != null ) { \n\t\t\t\tidpsSet . put ( conf . getEntityID ( ) , conf ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tthis . externalIdps = Collections . unmodifiableMap ( idpsSet ) ; \n\t} \n"}, {"code": "public static void checkNotEmpty ( String string ) { \n\tif $F2979 ( string ) $F18044 } \n"}, {"code": "protected void addCommonComponent ( XMLComponent component ) $F42353 ( fCommonComponents , component , addRecognizedParamsAndSetDefaults ) "}, {"code": "public void cancelUnnamedTasks $F72 { \n\t$F79150 ( unnamedTaskExecutor ) } \n"}, {"code": "public static $F1986 minmax $F44092 ( values ) { \n\tif $F10471 ( values ) { \n\t\treturn $F1990 ; \n\t\t} \n\tdouble min = values . get ( NUM00 ) ; \n\tdouble max = min ; \n\t$F2199 ( length , values ) for ( $F119 ( i , length ) ) { \n\t\t$F28095 ( value , values , i ) $F46000 ( min , Math , value ) $F46000 ( max , Math , value ) } \n\t$F264542 ( min , max ) } \n"}, {"code": "$F32632 ( criteria , createCriteriaInternal , oredCriteria ) "}, {"code": "private char readEscapeCharacter $F72 throws IOException { \n\tif ( pos == limit && ! fillBuffer ( NUM00 ) ) $F25983 ( syntaxError ) char escaped = buffer [ pos ++ ] ; \n\tswitch ( escaped ) { \n\t\t$F1262 if ( pos + NUM00 > limit && ! fillBuffer ( NUM00 ) ) $F25983 ( syntaxError ) char result = NUM00 ; \n\t\tfor ( int i = pos , end = i + NUM00 ; \n\t\ti < end ; \n\t\ti ++ ) { \n\t\t\tchar c = buffer [ i ] ; \n\t\t\tresult <<= NUM00 ; \n\t\t\tif $F19295 ( c ) { \n\t\t\t\tresult += ( c - NUM00 ) ; \n\t\t\t\t} \n\t\t\telse if $F19295 ( c ) { \n\t\t\t\tresult += ( c - NUM00 + NUM00 ) ; \n\t\t\t\t} \n\t\t\telse if $F19295 ( c ) { \n\t\t\t\tresult += ( c - NUM00 + NUM00 ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tthrow new NumberFormatException ( NUM00 + new String ( buffer , pos , NUM00 ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tpos += NUM00 ; \n\t\treturn result ; \n\t\t$F12596 $F12596 $F12596 $F12596 $F12596 $F1262 lineNumber ++ ; \n\t\tlineStart = pos ; \n\t\t$F1262 $F1262 $F1262 $F1262 return escaped ; \n\t\t$F248192 ( syntaxError ) } \n\t} \n"}, {"code": "private void updateParamsForAuth ( $F806 authNames , List $F44885 queryParams , $F2540 ( headerParams ) ) { \n\tfor ( String authName : authNames ) { \n\t\tAuthentication auth = authentications . get ( authName ) ; \n\t\tif ( auth == null ) $F1665 ( authName ) auth . applyToParams ( queryParams , headerParams ) ; \n\t\t} \n\t} \n"}, {"code": "private void fixSpannedWithSpaces ( SpannableStringBuilder builder , int widthMeasureSpec , int heightMeasureSpec ) { \n\t$F657 ( startFix , System ) FixingResult result = addSpacesAroundSpansUntilFixed ( builder , widthMeasureSpec , heightMeasureSpec ) ; \n\tif ( result . fixed ) { \n\t\tremoveUnneededSpaces ( widthMeasureSpec , heightMeasureSpec , builder , result ) ; \n\t\t} \n\telse { \n\t\tfallbackToString ( widthMeasureSpec , heightMeasureSpec ) ; \n\t\t} \n\t$F5740 ( fixDuration , System , startFix ) $F12258 ( Logger , TAG , fixDuration ) } \n"}, {"code": "public EventsIntegrationTest $F72 { \n\tsetResponseLogLengthLimit ( NUM00 ) ; \n\t$F165755 ( dateFormat ) $F4377 ( cal , Calendar ) $F139114 ( cal , Calendar ) $F165757 ( yesterday , dateFormat , cal ) yesterday += NUM00 ; \n\t$F90333 ( cal , Calendar ) $F113057 ( cal , Calendar ) $F165757 ( today , dateFormat , cal ) today += NUM00 ; \n\t$F90333 ( cal , Calendar ) $F113057 ( cal , Calendar ) $F165757 ( tomorrow , dateFormat , cal ) tomorrow += NUM00 ; \n\t$F90333 ( cal , Calendar ) $F113057 ( cal , Calendar ) $F165757 ( tomorrowPlus3 , dateFormat , cal ) tomorrowPlus3 += NUM00 ; \n\t$F90333 ( cal , Calendar ) $F139114 ( cal , Calendar ) $F165757 ( yesterdayMinus3 , dateFormat , cal ) yesterdayMinus3 += NUM00 ; \n\t$F90333 ( cal , Calendar ) $F113057 ( cal , Calendar ) $F165757 ( tomorrowPlus5 , dateFormat , cal ) tomorrowPlus5 += NUM00 ; \n\t$F90333 ( cal , Calendar ) $F139114 ( cal , Calendar ) $F165757 ( yesterdayMinus5 , dateFormat , cal ) yesterdayMinus5 += NUM00 ; \n\t$F165758 ( experiment , ExperimentFactory ) experiment . startTime = yesterdayMinus3 ; \n\texperiment . endTime = tomorrowPlus3 ; \n\texperiment . samplingPercent = NUM00 ; \n\texperiment . label = NUM00 ; \n\texperiment . applicationName = QBO + UUID . randomUUID ( ) ; \n\t$F165765 ( experimentComparisonStrategy ) experiment . setSerializationStrategy ( experimentComparisonStrategy ) ; \n\t} \n"}, {"code": "private void removeBookmarkTrackingIcons $F72 { \n\tif ( trackingIcons != null ) { \n\t\tfor ( $F2774 ( i , trackingIcons ) ) { \n\t\t\tGutterIconImpl ti = ( GutterIconImpl ) i . next ( ) ; \n\t\t\tif ( ti . getIcon ( ) == bookmarkIcon ) $F38599 ( i ) } \n\t\t} \n\t} \n"}, {"code": "public SimpleMetricGroup ( GroupName name , Stream < ? extends Metric > i ) { \n\tthis ( name , i . collect ( Collectors . < Metric > toList $F72 ) ) ; \n\t} \n"}, {"code": "public boolean isInside ( Point point ) $F298 ( bounds , point ) "}, {"code": "private void resolveProtocols ( ClassLoader loader ) { \n\tServiceLoader < ProtocolManagerFactory > serviceLoader = ServiceLoader . load ( ProtocolManagerFactory . class , loader ) ; \n\tloadProtocolManagerFactories ( serviceLoader ) ; \n\t} \n"}, {"code": "public static List < InetAddress > hostAddresses $F72 { \n\tList < InetAddress > $F204 ( addrList ) ; \n\tEnumeration $F149690 IFCs = null ; \n\ttry { \n\t\tIFCs = NetworkInterface . getNetworkInterfaces ( ) ; \n\t\t} \n\tcatch ( SocketException ex ) $F5198 ( log , ex ) if ( IFCs != null ) { \n\t\twhile $F1444 ( IFCs ) { \n\t\t\tNetworkInterface IFC = IFCs . nextElement ( ) ; \n\t\t\ttry { \n\t\t\t\tif ( IFC . isUp ( ) ) { \n\t\t\t\t\tEnumeration < InetAddress > addresses = IFC . getInetAddresses ( ) ; \n\t\t\t\t\twhile $F1444 ( addresses ) { \n\t\t\t\t\t\tInetAddress address = addresses . nextElement ( ) ; \n\t\t\t\t\t\tif ( ! address . isLoopbackAddress ( ) && ! address . isLinkLocalAddress ( ) ) $F207 ( addrList , address ) } \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tcatch ( SocketException ex ) { \n\t\t\t\tlog . error ( $F89018 ( IFC , ex ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn addrList ; \n\t} \n"}, {"code": "public final static int caculateInSampleSize ( $F56525 options , int rqsW , int rqsH ) { \n\tfinal int height = options . outHeight ; \n\tfinal int width = options . outWidth ; \n\tint inSampleSize = NUM00 ; \n\tif ( rqsW == NUM00 || rqsH == NUM00 ) $F1082 if ( height > rqsH || width > rqsW ) { \n\t\tfinal int heightRatio = Math . round ( $F65168 ( height , rqsH ) ) ; \n\t\tfinal int widthRatio = Math . round ( $F65168 ( width , rqsW ) ) ; \n\t\tinSampleSize = heightRatio < widthRatio ? heightRatio : widthRatio ; \n\t\t} \n\treturn inSampleSize ; \n\t} \n"}, {"code": "public boolean hasStatus ( final StatusID status ) $F298 ( statuses , status ) "}, {"code": "$F1 public String toString $F72 { \n\treturn $F263731 ( instanceList , outcomeList , weightList ) + sequenceIds + NUM00 + sequencePositions + NUM00 + addingAnotherInstancesAllowed + NUM00 + totalNonNullFeaturesCount + NUM00 ; \n\t} \n"}, {"code": "static synchronized void computePRF_SSLv3 $F55962 ( out , secret , seed ) { \n\t$F113304 ( sha , init ) int pos = NUM00 ; \n\tint iteration = NUM00 ; \n\t$F96 digest ; \n\twhile ( pos < out . length ) { \n\t\t$F2175 ( pref , iteration ) Arrays . fill ( pref , ( byte ) ( NUM00 + iteration ++ ) ) ; \n\t\tsha . update ( pref ) ; \n\t\tsha . update ( secret ) ; \n\t\tsha . update ( seed ) ; \n\t\tmd5 . update ( secret ) ; \n\t\tmd5 . update ( sha . digest ( ) ) ; \n\t\t$F54171 ( digest , md5 ) if ( pos + NUM00 > out . length ) { \n\t\t\tSystem . arraycopy ( digest , NUM00 , out , pos , out . length - pos ) ; \n\t\t\tpos = out . length ; \n\t\t\t} \n\t\telse { \n\t\t\t$F66840 ( System , digest , out , pos ) pos += NUM00 ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void addChannelMap ( ChannelMap channelMap ) { \n\tif $F2200 ( mChannelMaps , channelMap ) { \n\t\tmChannelMaps . add ( channelMap ) ; \n\t\t$F12747 ( index , mChannelMaps , channelMap ) fireIntervalAdded ( this , index , index ) ; \n\t\tbroadcast ( new ChannelMapEvent ( channelMap , Event . ADD ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public boolean add ( E o ) { \n\t$F160092 ( o ) $F46660 ( offer , o , _BOOL ) $F8675 } \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public Object putResource ( Object key , Object value ) { \n\treturn ( objectCache . put ( key , value ) ) ; \n\t} \n"}, {"code": "public UidRange [ ] parseUidRange $F72 throws DecodingException { \n\tCharacterValidator validator = new MessageSetCharValidator $F72 ; \n\tString nextWord = consumeWord ( validator , _BOOL ) ; \n\t$F1384 ( commaPos , nextWord ) if ( commaPos == - NUM00 ) { \n\t\treturn new UidRange [ ] { \n\t\t\tparseUidRange ( nextWord ) } \n\t\t; \n\t\t} \n\tArrayList < UidRange > rangeList = new ArrayList < UidRange > $F72 ; \n\tint pos = NUM00 ; \n\twhile ( commaPos != - NUM00 ) { \n\t\t$F12715 ( range , nextWord , pos , commaPos ) UidRange set = parseUidRange ( range ) ; \n\t\trangeList . add ( set ) ; \n\t\tpos = commaPos + NUM00 ; \n\t\t$F61909 ( commaPos , nextWord , pos ) } \n\t$F12716 ( range , nextWord , pos ) $F3761 ( rangeList , parseUidRange , range ) List < UidRange > merged = UidRange . mergeRanges ( rangeList ) ; \n\treturn merged . toArray ( new UidRange $F2313 ( merged ) ) ; \n\t} \n"}, {"code": "private String replaceSuffix $F1947 ( value , toReplace , changeTo ) { \n\tString vvalue ; \n\tif ( $F51374 ( value , toReplace ) || ( changeTo == null ) ) { \n\t\treturn value ; \n\t\t} \n\tvvalue = removeSuffix ( value , toReplace ) ; \n\tif $F1238 ( value , vvalue ) { \n\t\treturn value ; \n\t\t} \n\telse { \n\t\treturn vvalue + changeTo ; \n\t\t} \n\t} \n"}, {"code": "private void executeClaimedTask ( ClaimedTask claimedTask ) { \n\tif ( ! claimedTask . setStartTime ( $F4094 ) ) { \n\t\t_log . info ( NUM00 , claimedTask . getTask ( ) ) ; \n\t\t$F665 } \n\tScanRangeTask task = claimedTask . getTask ( ) ; \n\tboolean releaseTask = _BOOL ; \n\ttry { \n\t\t_scanWorkflow . renewScanRangeTasks ( ImmutableList . of ( task ) , QUEUE_RENEW_TTL ) ; \n\t\treleaseTask = asyncRangeScan ( task ) ; \n\t\t} \n\tfinally { \n\t\tunclaimTask ( claimedTask , releaseTask ) ; \n\t\t_backgroundService . submit ( _startScansIfAvailableRunnable ) ; \n\t\t} \n\t} \n"}, {"code": "private static boolean createNaviDirectory $F72 { \n\tfinal File dir = new File ( ConfigHelper . getConfigurationDirectory ( Constants . COMPANY_NAME , Constants . PROJECT_NAME ) ) ; \n\treturn dir . exists ( ) || dir . mkdir ( ) ; \n\t} \n"}, {"code": "public void updateButtonActionPerformed $F72 { \n\t$F933 ( readReceiveDelay ) $F933 ( readPulseWidth ) $F933 ( checkConsistency ) if ( curNode . getNodeType ( ) != nodeType ) { \n\t\tcurNode . setNodeType ( nodeType ) ; \n\t\t} \n\tsetNodeParameters ( ) ; \n\tchangedNode = _BOOL ; \n\teditMode = _BOOL ; \n\tcurNode = null ; \n\taddButton . setVisible ( _BOOL ) ; \n\teditButton . setVisible ( _BOOL ) ; \n\tdeleteButton . setVisible ( _BOOL ) ; \n\tdoneButton . setVisible ( _BOOL ) ; \n\tupdateButton . setVisible ( _BOOL ) ; \n\tcancelButton . setVisible ( _BOOL ) ; \n\tnodeAddrField . setVisible ( _BOOL ) ; \n\tnodeAddrStatic . setVisible ( _BOOL ) ; \n\tstatusText2 . setText ( stdStatus2 ) ; \n\tstatusText3 . setText ( stdStatus3 ) ; \n\tstatusText1 . setText ( $F241237 ( rb ) + Integer . toString ( nodeAddress ) ) ; \n\terrorInStatus1 = _BOOL ; \n\t} \n"}, {"code": "public static Class toClass ( ClassFile cf , ClassLoader loader , ProtectionDomain domain ) throws CannotCompileException { \n\ttry { \n\t\t$F12490 ( b , toBytecode , cf ) Method method ; \n\t\t$F131 args ; \n\t\tif ( domain == null ) { \n\t\t\tmethod = defineClass1 ; \n\t\t\targs = new Object [ ] { \n\t\t\t\tcf . getName ( ) , b , $F13791 , $F59092 ( b ) } \n\t\t\t; \n\t\t\t} \n\t\telse { \n\t\t\tmethod = defineClass2 ; \n\t\t\targs = new Object [ ] { \n\t\t\t\tcf . getName ( ) , b , $F13791 , $F59092 ( b ) , domain } \n\t\t\t; \n\t\t\t} \n\t\treturn toClass2 ( method , loader , args ) ; \n\t\t} \n\t$F41337 ( e ) catch ( java . lang . reflect . InvocationTargetException e ) { \n\t\tthrow new CannotCompileException ( e . getTargetException ( ) ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new CannotCompileException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public Iterator < Target > targetIterator $F72 $F16048 ( targetList ) "}, {"code": "private void fitSizeOfScrolledContent $F72 { \n\tPoint p = scrollComposite . getSize ( ) ; \n\tmain . setSize ( main . computeSize ( p . x , SWT . DEFAULT ) ) ; \n\t} \n"}, {"code": "$F60268 ( name ) "}, {"code": "private static Map < String , SnmpOid > buildPoolIndexMap ( SnmpCachedData cached ) { \n\tif ( cached == null ) $F83144 ( Collections ) final SnmpOid [ ] indexes = cached . indexes ; \n\t$F48385 ( datas , cached ) $F18832 ( len , indexes ) final Map < String , SnmpOid > $F26694 ( m , len ) ; \n\tfor ( $F119 ( i , len ) ) { \n\t\tfinal SnmpOid index = indexes [ i ] ; \n\t\t$F45557 ( index ) final MemoryPoolMXBean mpm = ( MemoryPoolMXBean ) datas [ i ] ; \n\t\t$F45557 ( mpm ) $F127007 ( name , mpm ) $F45557 ( name ) m . put ( name , index ) ; \n\t\t} \n\treturn m ; \n\t} \n"}, {"code": "public DCryptoStrength ( JFrame parent ) throws CryptoException { \n\tsuper ( parent , res . getString ( NUM00 ) , ModalityType . DOCUMENT_MODAL ) ; \n\tinitComponents ( ) ; \n\t} \n"}, {"code": "private Component createSeparator $F72 { \n\tJSeparator sep = new JSeparator ( SwingConstants . VERTICAL ) ; \n\t$F114439 ( sep ) $F167982 ( sep ) return sep ; \n\t} \n"}, {"code": "public void add ( final T object ) $F250537 ( mLock , mList , object , notifyDataSetChanged ) "}, {"code": "public void build ( RealmResults $F4203 results ) { \n\tint xIndex = NUM00 ; \n\tfor ( T object : results ) { \n\t\tmValues . add ( buildEntryFromResultObject ( object , xIndex ++ ) ) ; \n\t\t} \n\t} \n"}, {"code": "public $F96 generateSignature $F72 throws CryptoException , DataLengthException { \n\tcontentDigest . doFinal ( mDash , mDash . length - hLen - sLen ) ; \n\tif ( sLen != NUM00 ) { \n\t\trandom . nextBytes ( salt ) ; \n\t\tSystem . arraycopy ( salt , NUM00 , mDash , mDash . length - sLen , sLen ) ; \n\t\t} \n\t$F2175 ( h , hLen ) $F6163 ( contentDigest , mDash ) $F137382 ( contentDigest , h ) block [ block . length - sLen - NUM00 - hLen - NUM00 ] = NUM00 ; \n\tSystem . arraycopy ( salt , NUM00 , block , block . length - sLen - hLen - NUM00 , sLen ) ; \n\t$F96 dbMask = maskGeneratorFunction1 ( h , NUM00 , h . length , block . length - hLen - NUM00 ) ; \n\tfor ( $F15868 ( i , dbMask ) ) { \n\t\tblock [ i ] ^= dbMask [ i ] ; \n\t\t} \n\tblock [ NUM00 ] &= ( NUM00 > > ( $F28143 ( block ) - emBits ) ) ; \n\tSystem . arraycopy ( h , NUM00 , block , block . length - hLen - NUM00 , hLen ) ; \n\t$F41606 ( block , trailer ) $F96 b = cipher . processBlock ( block , NUM00 , block . length ) ; \n\tclearBlock ( block ) ; \n\treturn b ; \n\t} \n"}, {"code": "public static $F3789 computeWeightMatrix ( final int quanth , final int quants , final int quantb ) { \n\tfinal int dim = quanth * quants * quantb ; \n\tassert ( dim > NUM00 ) ; \n\tfinal $F3789 m = new double [ dim ] [ dim ] ; \n\tfor ( $F119 ( x , dim ) ) { \n\t\tfinal int hx = x / ( quantb * quants ) ; \n\t\tfinal int sx = ( x / quantb ) % quants ; \n\t\tfinal int bx = x % quantb ; \n\t\tfor ( int y = x ; \n\t\ty < dim ; \n\t\ty ++ ) { \n\t\t\tfinal int hy = y / ( quantb * quants ) ; \n\t\t\tfinal int sy = ( y / quantb ) % quants ; \n\t\t\tfinal int by = y % quantb ; \n\t\t\tfinal double chx = Math . cos ( ( hx + NUM00 ) / quanth * MathUtil . TWOPI ) ; \n\t\t\tfinal double chy = Math . cos ( ( hy + NUM00 ) / quanth * MathUtil . TWOPI ) ; \n\t\t\tfinal double shx = MathUtil . cosToSin ( ( hx + NUM00 ) / quanth * MathUtil . TWOPI , chx ) ; \n\t\t\tfinal double shy = MathUtil . cosToSin ( ( hy + NUM00 ) / quanth * MathUtil . TWOPI , chy ) ; \n\t\t\tfinal double cos = chx * ( sx + NUM00 ) / quants - chy * ( sy + NUM00 ) / quants ; \n\t\t\tfinal double sin = shx * ( sx + NUM00 ) / quants - shy * ( sy + NUM00 ) / quants ; \n\t\t\tfinal double db = ( bx - by ) / ( double ) quantb ; \n\t\t\tfinal double val = NUM00 - Math . sqrt ( ( db * db + sin * sin + cos * cos ) / NUM00 ) ; \n\t\t\tm [ x ] [ y ] = m [ y ] [ x ] = val ; \n\t\t\t} \n\t\t} \n\treturn m ; \n\t} \n"}, {"code": "public void testNegPosFirstLonger $F72 { \n\t$F37335 $F37339 int aSign = - NUM00 ; \n\tint bSign = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F37344 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "$F92963 ( b , off , len , this , newcount , count , remaining , inBufferPos , filledBufferSum , part , Math , currentBuffer , System , needNewBuffer ) "}, {"code": "public static void openFileIntent ( Context context , File openFile ) { \n\tif ( context != null && openFile . exists ( ) ) { \n\t\ttry { \n\t\t\tIntent intent = getFileIntent ( context , openFile ) ; \n\t\t\tcontext . startActivity ( intent ) ; \n\t\t\t} \n\t\tcatch ( Exception e ) { \n\t\t\tGlobalUtils . logThis ( TAG , NUM00 , e ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static $F212479 toSqlDate ( String date ) { \n\t$F22273 newDate = toDate ( date , NUM00 ) ; \n\tif ( newDate != null ) { \n\t\treturn new $F212479 $F16810 ( newDate ) ; \n\t\t} \n\telse $F1337 } \n"}, {"code": "$F3441 ( journalWriter , writer , journalFileTmp , Util , MAGIC , VERSION_1 , Integer , appVersion , valueCount , entry , lruEntries , DIRTY , CLEAN , journalFile , renameTo , journalFileBackup , _BOOL ) "}, {"code": "public static int round ( final float value ) { \n\tfinal int bits = Float . floatToRawIntBits ( value ) ; \n\tfinal int biasedExp = bits > > NUM00 & NUM00 ; \n\tfinal int shift = NUM00 - NUM00 + MAX_FLOAT_EXPONENT - biasedExp ; \n\tif ( ( shift & - NUM00 ) == NUM00 ) { \n\t\tint extendedMantissa = NUM00 | bits & NUM00 ; \n\t\t$F52811 ( bits , extendedMantissa ) return ( extendedMantissa > > shift ) + NUM00 > > NUM00 ; \n\t\t} \n\telse $F23220 ( value ) } \n"}, {"code": "public static PlainText plain ( short text ) $F21034 ( plain , Integer , text ) "}, {"code": "public AttributeInfo copy ( ConstPool newCp , Map classnames ) { \n\tCopier copier = new Copier ( info , constPool , newCp , classnames ) ; \n\ttry { \n\t\tcopier . parameters ( ) ; \n\t\treturn new ParameterAnnotationsAttribute ( newCp , getName ( ) , copier . close ( ) ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new RuntimeException $F3362 ( e ) ; \n\t\t} \n\t} \n"}, {"code": "private String createComponentChanges $F72 { \n\t$F83 ( builder ) for ( ServiceCatalogDiff serviceCatalogDiff : diffList ) $F9821 ( builder , createApiChanges , serviceCatalogDiff ) $F92 ( builder ) } \n"}, {"code": "public static synchronized void it ( String description , UnsafeBlock block ) { \n\tit ( description , identity ( ) , block ) ; \n\t} \n"}, {"code": "public static boolean isWritable ( final File file , final boolean makeDirs ) { \n\tif ( file == null ) $F277465 ( Log , _BOOL ) final String fileParentDir = file . getParent ( ) ; \n\tif $F20899 ( TextUtils , fileParentDir ) { \n\t\t$F15885 ( fileDir , fileParentDir ) if $F1906 ( fileDir ) { \n\t\t\tif ( makeDirs ) return makeDirsForFile ( file ) ; \n\t\t\telse return _BOOL ; \n\t\t\t} \n\t\t} \n\tboolean isWritable = _BOOL ; \n\tif $F3428 ( file ) isWritable = file . canWrite ( ) ; \n\telse { \n\t\ttry { \n\t\t\tisWritable = file . createNewFile ( ) ; \n\t\t\t} \n\t\t$F29052 if ( isWritable ) $F7111 ( isWritable , file ) } \n\treturn isWritable ; \n\t} \n"}, {"code": "$F112299 ( oid ) "}, {"code": "private static void createOrgAuthConfig ( String realmName ) throws Exception { \n\tString classMethod = NUM00 ; \n\tOrganizationConfigManager org = new OrganizationConfigManager ( ssoToken , realmName ) ; \n\tServiceConfig orgConfig = org . getServiceConfig ( AUTH_SERVICE_NAME ) ; \n\tif ( orgConfig != null ) { \n\t\tMap aa = orgConfig . getAttributes ( ) ; \n\t\tif $F6299 ( debug ) { \n\t\t\t$F69245 ( debug , classMethod , realmName ) $F69245 ( debug , classMethod , aa ) } \n\t\tString orgName = realmName ; \n\t\tif ( LDAPUtils . isDN ( realmName ) ) { \n\t\t\torgName = LDAPUtils . rdnValueFromDn ( realmName ) ; \n\t\t\t} \n\t\tString authConfigName = orgName + NUM00 ; \n\t\tString adminAuthConfigName = orgName + NUM00 ; \n\t\t$F125374 ( authConfigAttrValue , aa , ATTR_ORG_AUTH_MODULE ) $F75014 ( debug , classMethod , authConfigAttrValue ) $F19850 ( newVal ) if ( $F6886 ( authConfigAttrValue ) && ! authConfigAttrValue . contains ( authConfigName ) ) { \n\t\t\tnewVal . add ( authConfigName ) ; \n\t\t\torgConfig . replaceAttributeValues ( ATTR_ORG_AUTH_MODULE , authConfigAttrValue , newVal ) ; \n\t\t\t} \n\t\t$F125374 ( adminConfigAttrValue , aa , ATTR_ADMIN_AUTH_MODULE ) $F19232 ( debug , adminConfigAttrValue ) if ( $F6886 ( adminConfigAttrValue ) && ! adminConfigAttrValue . contains ( adminAuthConfigName ) ) { \n\t\t\t$F725 ( newVal ) newVal . add ( adminAuthConfigName ) ; \n\t\t\torgConfig . replaceAttributeValues ( ATTR_ADMIN_AUTH_MODULE , adminConfigAttrValue , newVal ) ; \n\t\t\t} \n\t\t$F35323 ( aa , orgConfig ) ServiceConfig s = org . getServiceConfig ( AUTH_CONFIG_SERVICE ) ; \n\t\t$F105642 ( authConfig , s , NAMED_CONFIG ) if ( authConfig == null ) { \n\t\t\ts . addSubConfig ( NAMED_CONFIG , null , NUM00 , null ) ; \n\t\t\tauthConfig = s . getSubConfig ( NAMED_CONFIG ) ; \n\t\t\t} \n\t\t$F28017 ( aMap ) aMap . put ( ATTR_AUTH_CONFIG , authConfigAttrValue ) ; \n\t\tauthConfig . addSubConfig ( authConfigName , SUB_NAMED_CONFIG , NUM00 , aMap ) ; \n\t\t$F725 ( aMap ) aMap . put ( ATTR_AUTH_CONFIG , adminConfigAttrValue ) ; \n\t\tauthConfig . addSubConfig ( adminAuthConfigName , SUB_NAMED_CONFIG , NUM00 , aMap ) ; \n\t\t} \n\t} \n"}, {"code": "public void read ( ByteCodeParser in ) throws IOException { \n\t$F5952 ( length , in ) $F11214 ( _maxStack , in ) $F11214 ( _maxLocals , in ) $F5952 ( codeLength , in ) $F1325 ( _code , codeLength ) $F23504 ( in , _code , codeLength ) $F11213 ( exnCount , in ) for ( $F119 ( i , exnCount ) ) { \n\t\tExceptionItem exn = new ExceptionItem $F72 ; \n\t\texn . setStart ( in . readShort ( ) & NUM00 ) ; \n\t\texn . setEnd ( in . readShort ( ) & NUM00 ) ; \n\t\texn . setHandler ( in . readShort ( ) & NUM00 ) ; \n\t\texn . setType ( in . readShort ( ) & NUM00 ) ; \n\t\t_exceptions . add ( exn ) ; \n\t\t} \n\t$F11213 ( attrCount , in ) for ( $F119 ( i , attrCount ) ) { \n\t\tAttribute attr = in . parseAttribute ( ) ; \n\t\t_attributes . add ( attr ) ; \n\t\t} \n\t} \n"}, {"code": "public void testSkip $F72 throws Exception { \n\t$F1191 ( data ) $F45652 ( tis , data ) $F45657 ( cis , tis ) int expected = data . length ; \n\t$F2175 ( result , expected ) int skipped = ( int ) cis . skip ( NUM00 ) ; \n\tint ind = skipped ; \n\tint got = skipped + $F3259 ( cis , result ) ; \n\twhile ( _BOOL ) { \n\t\tfor ( $F8122 ( j , got , ind ) ) { \n\t\t\tif $F118498 ( result , j , data , ind ) { \n\t\t\t\tfail ( NUM00 + NUM00 + data [ ind + j ] + NUM00 + result [ j ] ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( got == expected ) $F5153 else if ( got > expected ) { \n\t\t\tfail ( $F38 ) ; \n\t\t\t} \n\t\telse { \n\t\t\tind = got ; \n\t\t\tgot += $F3259 ( cis , result ) ; \n\t\t\t} \n\t\t} \n\tif ( ( got = $F3259 ( cis , result ) ) != - NUM00 ) { \n\t\tfail ( NUM00 + NUM00 + got + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "void addString ( int c ) { \n\tif ( strpos == str . length ) { \n\t\tchar newstr [ ] = new char $F22598 ( str ) ; \n\t\t$F7057 ( System , str , newstr ) str = newstr ; \n\t\t} \n\t$F1479 ( str , strpos , c ) } \n"}, {"code": "$F16587 ( oid ) "}, {"code": "public CholeskyDecomposition ( Matrix Arg ) { \n\t$F3791 ( A , Arg ) $F323738 ( n , Arg ) $F10226 ( L , n ) isspd = ( Arg . getColumnDimension ( ) == n ) ; \n\tfor ( $F119 ( j , n ) ) { \n\t\t$F42658 ( Lrowj , L , j ) double d = NUM00 ; \n\t\tfor ( $F119 ( k , j ) ) { \n\t\t\t$F42658 ( Lrowk , L , k ) double s = NUM00 ; \n\t\t\tfor ( $F119 ( i , k ) ) $F323742 ( s , Lrowk , i , Lrowj ) Lrowj [ k ] = s = ( A [ j ] [ k ] - s ) / L [ k ] [ k ] ; \n\t\t\td = d + s * s ; \n\t\t\tisspd = isspd & ( A [ k ] [ j ] == A [ j ] [ k ] ) ; \n\t\t\t} \n\t\td = A [ j ] [ j ] - d ; \n\t\tisspd = isspd & ( d > NUM00 ) ; \n\t\tL [ j ] [ j ] = Math . sqrt ( Math . max ( d , NUM00 ) ) ; \n\t\tfor ( $F2634 ( k , j , n ) ) $F211213 ( L , j , k ) } \n\t} \n"}, {"code": "protected void findCandidateCrossings ( S2Point a , S2Point b , $F3807 candidateCrossings ) { \n\tPreconditions . checkState ( indexComputed ) ; \n\t$F17427 cover = Lists . newArrayList ( ) ; \n\tgetCovering ( a , b , _BOOL , cover ) ; \n\t$F87079 ( uniqueSet ) getEdgesInParentCells ( cover , uniqueSet ) ; \n\tgetEdgesInChildrenCells ( a , b , cover , uniqueSet ) ; \n\t$F725 ( candidateCrossings ) candidateCrossings . addAll ( uniqueSet ) ; \n\t} \n"}, {"code": "$F183285 ( fieldId , TRUE_AS_OF_SECS , SOURCE , SYSTEM ) "}, {"code": "public RepositoryLocation $F8306 ( repositoryName , pathComponents ) throws MalformedRepositoryLocationException { \n\tif $F4251 ( repositoryName ) { \n\t\tthrow new MalformedRepositoryLocationException $F580 ; \n\t\t} \n\tif ( pathComponents == null ) { \n\t\tthrow new MalformedRepositoryLocationException $F580 ; \n\t\t} \n\tfor ( String pathComp : pathComponents ) { \n\t\tif $F4251 ( pathComp ) { \n\t\t\tthrow new MalformedRepositoryLocationException $F580 ; \n\t\t\t} \n\t\t} \n\tthis . repositoryName = repositoryName ; \n\tthis . path = pathComponents ; \n\t} \n"}, {"code": "public void addProperty ( String key , String value ) $F206184 ( carbonProperties , key , value ) "}, {"code": "protected JavaElementDelta createDeltaTree ( IJavaElement element , JavaElementDelta delta ) { \n\tJavaElementDelta childDelta = delta ; \n\tArrayList ancestors = getAncestors ( element ) ; \n\tif ( ancestors == null ) { \n\t\tif ( equalsAndSameParent ( delta . getElement ( ) , getElement ( ) ) ) { \n\t\t\tthis . kind = delta . kind ; \n\t\t\tthis . changeFlags = delta . changeFlags ; \n\t\t\tthis . movedToHandle = delta . movedToHandle ; \n\t\t\tthis . movedFromHandle = delta . movedFromHandle ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tfor ( $F12534 ( i , size , ancestors ) ) { \n\t\t\tIJavaElement ancestor = ( IJavaElement ) ancestors . get ( i ) ; \n\t\t\tJavaElementDelta ancestorDelta = new JavaElementDelta ( ancestor ) ; \n\t\t\tancestorDelta . addAffectedChild ( childDelta ) ; \n\t\t\tchildDelta = ancestorDelta ; \n\t\t\t} \n\t\t} \n\treturn childDelta ; \n\t} \n"}, {"code": "$F1 public String toString $F72 $F2905 ( getTitle ) "}, {"code": "public int size $F72 { \n\t$F1084 ( hmap ) $F1651 ( hmap ) } \n"}, {"code": "public static String replace $F1947 ( inString , oldPattern , newPattern ) { \n\tif ( ! hasLength ( inString ) || ! hasLength ( oldPattern ) || newPattern == null ) { \n\t\treturn inString ; \n\t\t} \n\t$F83 ( sb ) int pos = NUM00 ; \n\t$F12747 ( index , inString , oldPattern ) $F1749 ( patLen , oldPattern ) while ( index >= NUM00 ) { \n\t\t$F13037 ( sb , inString , pos , index ) sb . append ( newPattern ) ; \n\t\tpos = index + patLen ; \n\t\tindex = inString . indexOf ( oldPattern , pos ) ; \n\t\t} \n\t$F13047 ( sb , inString , pos ) $F92 ( sb ) } \n"}, {"code": "public boolean coordinateInZone ( Id < ActivityFacility > zoneID , Coord coordinate ) { \n\tPoint point = MGC . xy2Point ( $F5048 ( coordinate ) ) ; \n\treturn pointInZone ( zoneID , point ) ; \n\t} \n"}, {"code": "public String associatorTipText $F72 $F2455 "}, {"code": "public XwavesLabelfileReader ( Reader reader ) throws IOException { \n\tthis . reader = new BufferedReader ( reader ) ; \n\tparseLabels ( ) ; \n\t$F59 ( reader ) } \n"}, {"code": "public static double parseDoubleDefault ( String s , double def ) { \n\t$F1933 ( s , def ) try $F2404 ( Double , s ) $F8835 ( def ) } \n"}, {"code": "public static void registerApp ( int application , String appName ) throws AppIDException { \n\tif ( ( application & APP_ID_MASK ) != application ) { \n\t\tthrow new InvalidAppIDValueException ( application ) ; \n\t\t} \n\tString oldApp = appIdMap . putIfAbsent ( application , appName ) ; \n\tif $F10335 ( oldApp , appName ) { \n\t\tthrow new AppIDInUseException ( application , oldApp , appName ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean putProfile ( Profile profile ) $F8587 ( putProfile , profile , _BOOL ) "}, {"code": "public void print ( char c ) $F91838 ( writer , c ) "}, {"code": "public void initBlockViews $F72 { \n\tif ( mWorkspaceView != null ) { \n\t\t$F40168 rootBlocks = mWorkspace . getRootBlocks ( ) ; \n\t\tConnectionManager connManager = mWorkspace . getConnectionManager ( ) ; \n\t\tfor ( $F2277 ( i , rootBlocks ) ) { \n\t\t\tBlockGroup bg = mViewFactory . buildBlockGroupTree ( rootBlocks . get ( i ) , connManager , mTouchHandler ) ; \n\t\t\tmWorkspaceView . addView ( bg ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void clearAllTrails ( SSOTokenID tokenID ) { \n\tboolean removed = _BOOL ; \n\t$F1822 ( key , tokenID ) synchronized ( mapTokenIDs ) { \n\t\tremoved = ( mapTokenIDs . remove ( key ) != null ) ; \n\t\t} \n\t} \n"}, {"code": "public DNetscapeCaRevocationUrl $F157465 ( parent , value ) throws IOException $F157466 ( super , parent , setTitle , res , initComponents , prepopulateWithValue , value ) "}, {"code": "$F13735 ( prefix , namespace , attName , attValue , xmlWriter ) "}, {"code": "public static $F2027 parseNumberList $F25022 ( listStr , minVal , maxVal , allowZero ) { \n\t$F2027 values ; \n\tif $F1731 ( listStr ) { \n\t\t$F4470 ( values ) values [ NUM00 ] = parseIntRange ( listStr , minVal , maxVal , allowZero ) ; \n\t\t} \n\telse { \n\t\t$F6542 ( valueStrs , listStr ) int len = valueStrs . length ; \n\t\t$F3936 ( values , len ) for ( $F119 ( i , len ) ) { \n\t\t\tvalues [ i ] = parseIntRange ( valueStrs [ i ] , minVal , maxVal , allowZero ) ; \n\t\t\t} \n\t\t} \n\treturn values ; \n\t} \n"}, {"code": "public DirectoryOrFileNotFoundException ( String entity , String name ) { \n\tsuper ( String . format ( _errorMessage , entity , name ) ) ; \n\t} \n"}, {"code": "public void closeStream $F72 { \n\tCarbonUtil . closeStreams ( stream ) ; \n\t$F733 ( executorService ) } \n"}, {"code": "void scramble $F72 { \n\tinitialSize = getSize ( ) ; \n\tint $F26223 = new int [ initialSize . height / NUM00 ] ; \n\tdouble f = initialSize . width / $F111967 ( a ) ; \n\tfor ( $F45516 ( i , a ) ) { \n\t\ta [ i ] = $F2354 ( i , f ) ; \n\t\t} \n\tfor ( $F45516 ( i , a ) ) { \n\t\tint j = ( int ) ( i * Math . random ( ) ) ; \n\t\tint t = a [ i ] ; \n\t\ta [ i ] = a [ j ] ; \n\t\ta [ j ] = t ; \n\t\t} \n\tarr = a ; \n\t} \n"}, {"code": "private int readAnnotationValue ( int v , final $F1469 buf , final String name , final AnnotationVisitor av ) { \n\tint i ; \n\tif ( av == null ) { \n\t\tswitch ( b [ v ] & NUM00 ) { \n\t\t\t$F1262 return v + NUM00 ; \n\t\t\t$F1262 return readAnnotationValues ( v + NUM00 , buf , _BOOL , null ) ; \n\t\t\t$F1262 return readAnnotationValues ( v + NUM00 , buf , _BOOL , null ) ; \n\t\t\t$F1267 return v + NUM00 ; \n\t\t\t} \n\t\t} \n\tswitch $F44579 ( b , v ) { \n\t\t$F1262 $F1262 $F1262 $F1262 av . visit ( name , readConst ( readUnsignedShort ( v ) , buf ) ) ; \n\t\tv += NUM00 ; \n\t\t$F597 $F1262 av . visit ( name , new Byte ( ( byte ) readInt ( items [ readUnsignedShort ( v ) ] ) ) ) ; \n\t\tv += NUM00 ; \n\t\t$F597 $F1262 av . visit ( name , readInt ( items [ readUnsignedShort ( v ) ] ) == NUM00 ? Boolean . FALSE : Boolean . TRUE ) ; \n\t\tv += NUM00 ; \n\t\t$F597 $F1262 av . visit ( name , new Short ( ( short ) readInt ( items [ readUnsignedShort ( v ) ] ) ) ) ; \n\t\tv += NUM00 ; \n\t\t$F597 $F1262 av . visit ( name , new Character ( ( char ) readInt ( items [ readUnsignedShort ( v ) ] ) ) ) ; \n\t\tv += NUM00 ; \n\t\t$F597 $F1262 av . visit ( name , readUTF8 ( v , buf ) ) ; \n\t\tv += NUM00 ; \n\t\t$F597 $F1262 av . visitEnum ( name , readUTF8 ( v , buf ) , readUTF8 ( v + NUM00 , buf ) ) ; \n\t\tv += NUM00 ; \n\t\t$F597 $F1262 av . visit ( name , Type . getType ( readUTF8 ( v , buf ) ) ) ; \n\t\tv += NUM00 ; \n\t\t$F597 $F1262 v = readAnnotationValues ( v + NUM00 , buf , _BOOL , av . visitAnnotation ( name , readUTF8 ( v , buf ) ) ) ; \n\t\t$F597 $F1262 int size = readUnsignedShort ( v ) ; \n\t\tv += NUM00 ; \n\t\tif ( size == NUM00 ) { \n\t\t\treturn readAnnotationValues ( v - NUM00 , buf , _BOOL , av . visitArray ( name ) ) ; \n\t\t\t} \n\t\tswitch ( this . b [ v ++ ] & NUM00 ) { \n\t\t\t$F1262 $F2175 ( bv , size ) for ( i = NUM00 ; \n\t\t\ti < size ; \n\t\t\ti ++ ) { \n\t\t\t\tbv [ i ] = ( byte ) readInt ( items [ readUnsignedShort ( v ) ] ) ; \n\t\t\t\tv += NUM00 ; \n\t\t\t\t} \n\t\t\tav . visit ( name , bv ) ; \n\t\t\t-- v ; \n\t\t\t$F597 $F1262 $F57515 ( zv , size ) for ( i = NUM00 ; \n\t\t\ti < size ; \n\t\t\ti ++ ) { \n\t\t\t\tzv [ i ] = readInt ( items [ readUnsignedShort ( v ) ] ) != NUM00 ; \n\t\t\t\tv += NUM00 ; \n\t\t\t\t} \n\t\t\tav . visit ( name , zv ) ; \n\t\t\t-- v ; \n\t\t\t$F597 $F1262 $F5099 ( sv , size ) for ( i = NUM00 ; \n\t\t\ti < size ; \n\t\t\ti ++ ) { \n\t\t\t\tsv [ i ] = ( short ) readInt ( items [ readUnsignedShort ( v ) ] ) ; \n\t\t\t\tv += NUM00 ; \n\t\t\t\t} \n\t\t\tav . visit ( name , sv ) ; \n\t\t\t-- v ; \n\t\t\t$F597 $F1262 $F18064 ( cv , size ) for ( i = NUM00 ; \n\t\t\ti < size ; \n\t\t\ti ++ ) { \n\t\t\t\tcv [ i ] = ( char ) readInt ( items [ readUnsignedShort ( v ) ] ) ; \n\t\t\t\tv += NUM00 ; \n\t\t\t\t} \n\t\t\tav . visit ( name , cv ) ; \n\t\t\t-- v ; \n\t\t\t$F597 $F1262 $F4120 ( iv , size ) for ( i = NUM00 ; \n\t\t\ti < size ; \n\t\t\ti ++ ) { \n\t\t\t\tiv [ i ] = readInt ( items [ readUnsignedShort ( v ) ] ) ; \n\t\t\t\tv += NUM00 ; \n\t\t\t\t} \n\t\t\tav . visit ( name , iv ) ; \n\t\t\t-- v ; \n\t\t\t$F597 $F1262 $F12300 ( lv , size ) for ( i = NUM00 ; \n\t\t\ti < size ; \n\t\t\ti ++ ) { \n\t\t\t\tlv [ i ] = readLong ( items [ readUnsignedShort ( v ) ] ) ; \n\t\t\t\tv += NUM00 ; \n\t\t\t\t} \n\t\t\tav . visit ( name , lv ) ; \n\t\t\t-- v ; \n\t\t\t$F597 $F1262 $F25850 ( fv , size ) for ( i = NUM00 ; \n\t\t\ti < size ; \n\t\t\ti ++ ) { \n\t\t\t\tfv [ i ] = Float . intBitsToFloat ( readInt ( items [ readUnsignedShort ( v ) ] ) ) ; \n\t\t\t\tv += NUM00 ; \n\t\t\t\t} \n\t\t\tav . visit ( name , fv ) ; \n\t\t\t-- v ; \n\t\t\t$F597 $F1262 $F9662 ( dv , size ) for ( i = NUM00 ; \n\t\t\ti < size ; \n\t\t\ti ++ ) { \n\t\t\t\tdv [ i ] = Double . longBitsToDouble ( readLong ( items [ readUnsignedShort ( v ) ] ) ) ; \n\t\t\t\tv += NUM00 ; \n\t\t\t\t} \n\t\t\tav . visit ( name , dv ) ; \n\t\t\t-- v ; \n\t\t\t$F597 $F1267 v = readAnnotationValues ( v - NUM00 , buf , _BOOL , av . visitArray ( name ) ) ; \n\t\t\t} \n\t\t} \n\treturn v ; \n\t} \n"}, {"code": "public static SIPHeader parseSIPHeader ( String header ) throws ParseException { \n\tint start = NUM00 ; \n\t$F22867 ( end , header ) try { \n\t\twhile ( header . charAt ( start ) <= NUM00 ) start ++ ; \n\t\twhile ( header . charAt ( end ) <= NUM00 ) end -- ; \n\t\t} \n\tcatch ( ArrayIndexOutOfBoundsException e ) $F191935 StringBuilder buffer = new StringBuilder ( end + NUM00 ) ; \n\tint i = start ; \n\tint lineStart = start ; \n\tboolean endOfLine = _BOOL ; \n\twhile ( i <= end ) { \n\t\t$F1280 ( c , header , i ) if $F37111 ( c ) { \n\t\t\tif ( ! endOfLine ) { \n\t\t\t\t$F13037 ( buffer , header , lineStart , i ) endOfLine = _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( endOfLine ) { \n\t\t\t\tendOfLine = _BOOL ; \n\t\t\t\tif $F37111 ( c ) { \n\t\t\t\t\t$F84 ( buffer ) lineStart = i + NUM00 ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tlineStart = i ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\ti ++ ; \n\t\t} \n\t$F13037 ( buffer , header , lineStart , i ) $F84 ( buffer ) HeaderParser hp = ParserFactory . createParser ( buffer . toString ( ) ) ; \n\tif ( hp == null ) throw new ParseException $F163565 ; \n\treturn hp . parse ( ) ; \n\t} \n"}, {"code": "private static int convertSRGBtoLinearRGB ( int color ) { \n\tfloat input , output ; \n\tinput = color / NUM00 ; \n\tif ( input <= NUM00 ) { \n\t\toutput = input / NUM00 ; \n\t\t} \n\telse { \n\t\toutput = ( float ) Math . pow ( ( input + NUM00 ) / NUM00 , NUM00 ) ; \n\t\t} \n\treturn Math . round ( output * NUM00 ) ; \n\t} \n"}, {"code": "public void recordBeginning $F72 { \n\tfinal String msg = NUM00 + mModuleName + NUM00 + mRunId ; \n\tmUsageMessages . add ( msg ) ; \n\tDiagnostic . developerLog ( msg ) ; \n\tmClient . recordBeginning ( mModuleName , mRunId ) ; \n\t} \n"}, {"code": "static float rotateY $F780 ( pX , pY , cX , cY , angleInDegrees ) { \n\t$F9291 ( angle , Math , angleInDegrees ) return ( float ) ( Math . sin ( angle ) * ( pX - cX ) + Math . cos ( angle ) * ( pY - cY ) + cY ) ; \n\t} \n"}, {"code": "public boolean isPronounceable ( String word ) { \n\t$F7876 ( lowerCaseWord , word ) return ( prefixFSM . accept ( lowerCaseWord ) && suffixFSM . accept ( lowerCaseWord ) ) ; \n\t} \n"}, {"code": "public void addSplitEdges ( List edgeList ) { \n\taddEndpoints ( ) ; \n\tIterator it = iterator ( ) ; \n\tEdgeIntersection eiPrev = ( EdgeIntersection ) it . next ( ) ; \n\twhile $F2921 ( it ) { \n\t\tEdgeIntersection ei = ( EdgeIntersection ) it . next ( ) ; \n\t\tEdge newEdge = createSplitEdge ( eiPrev , ei ) ; \n\t\tedgeList . add ( newEdge ) ; \n\t\teiPrev = ei ; \n\t\t} \n\t} \n"}, {"code": "public IOUtils $F72 $F5795 ( super ) "}, {"code": "public MemBasedCache ( int maxCacheSizeInBytes ) { \n\tmMaxCacheSizeInBytes = maxCacheSizeInBytes ; \n\tmDataEntries = new LinkedHashMap < String , CacheHeader > ( NUM00 , NUM00 , _BOOL ) ; \n\t} \n"}, {"code": "public void updateMaxTextWidths ( float requiredWidth , float matchContentsWidth ) { \n\t$F19410 ( mMaxRequiredWidth , Math , requiredWidth ) $F19410 ( mMaxMatchContentsWidth , Math , matchContentsWidth ) } \n"}, {"code": "public void enableOverview ( boolean b ) { \n\tif ( overviewItem != null ) $F7728 ( overviewItem , b ) } \n"}, {"code": "public void mouseEntered ( MouseEvent e ) { \n\tif $F22503 ( Debug ) { \n\t\tDebug . output ( getID ( ) + NUM00 ) ; \n\t\t} \n\tsuper . mouseEntered ( e ) ; \n\tautoZoom = _BOOL ; \n\t} \n"}, {"code": "public PageOfCollections fetchPage ( PageOfCollections page , SolrZkClient zkClient ) throws $F80658 { \n\t$F43655 ( children , getCollections , zkClient ) page . selected = children ; \n\tif ( page . start == NUM00 && page . rows == - NUM00 && page . filter == null && $F3816 ( children ) ) { \n\t\tpage . rows = NUM00 ; \n\t\tpage . start = NUM00 ; \n\t\t} \n\tif ( page . filterType == FilterType . name && page . filter != null ) children = page . applyNameFilter ( children ) ; \n\tif ( page . filterType != FilterType . status ) page . selectPage ( children ) ; \n\treturn page ; \n\t} \n"}, {"code": "public void accept ( final AnnotationVisitor av ) { \n\tif ( av != null ) { \n\t\tif ( values != null ) { \n\t\t\tfor ( $F48125 ( i , values ) ) { \n\t\t\t\t$F123 ( name , values , i ) Object value = values . get ( i + NUM00 ) ; \n\t\t\t\taccept ( av , name , value ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F110334 ( av ) } \n\t} \n"}, {"code": "public IdsQueryBuilder addIds ( String ... ids ) $F73474 ( values , Arrays , ids , this ) "}, {"code": "private void stop ( HttpServletRequest request , HttpServletResponse response ) throws IOException { \n\t$F70095 ( out , response ) $F10362 ( label , request ) Monitor mon = removeMon ( label , null , DEFAULT_UNITS ) ; \n\tif ( mon == null ) $F122935 ( out , ERROR ) else { \n\t\t$F5191 ( mon ) out . println ( OK + NUM00 + mon ) ; \n\t\t} \n\t} \n"}, {"code": "public static String normalizeUrl ( String requestUrl ) throws OAuthException { \n\tif $F38892 ( requestUrl ) { \n\t\tthrow new OAuthException $F580 ; \n\t\t} \n\tURI uri ; \n\ttry { \n\t\turi = new URI ( requestUrl ) ; \n\t\t} \n\tcatch ( URISyntaxException e ) { \n\t\tthrow new OAuthException ( e ) ; \n\t\t} \n\tString authority = uri . getAuthority ( ) ; \n\t$F149248 ( scheme , uri ) if ( authority == null || scheme == null ) { \n\t\tthrow new OAuthException $F580 ; \n\t\t} \n\t$F37156 ( authority ) $F37156 ( scheme ) if ( ( scheme . equals ( NUM00 ) && uri . getPort ( ) == NUM00 ) || ( scheme . equals ( NUM00 ) && uri . getPort ( ) == NUM00 ) ) { \n\t\t$F24867 ( index , authority ) $F384188 ( index , authority ) } \n\treturn scheme + NUM00 + authority + uri . getRawPath ( ) ; \n\t} \n"}, {"code": "public void invoke ( InputStream is , OutputStream os , SerializerFactory serializerFactory ) throws Exception { \n\tboolean isDebug = _BOOL ; \n\tif ( isDebugInvoke ( ) ) { \n\t\tisDebug = _BOOL ; \n\t\tPrintWriter dbg = createDebugPrintWriter ( ) ; \n\t\tHessianDebugInputStream dIs = new HessianDebugInputStream ( is , dbg ) ; \n\t\tdIs . startTop2 ( ) ; \n\t\tis = dIs ; \n\t\tHessianDebugOutputStream dOs = new HessianDebugOutputStream ( os , dbg ) ; \n\t\tdOs . startTop2 ( ) ; \n\t\tos = dOs ; \n\t\t} \n\tHessianInputFactory . HeaderType header = _inputFactory . readHeader ( is ) ; \n\tAbstractHessianInput in ; \n\tAbstractHessianOutput out ; \n\tswitch ( header ) { \n\t\tcase CALL_1_REPLY_1 : in = _hessianFactory . createHessianInput ( is ) ; \n\t\tout = _hessianFactory . createHessianOutput ( os ) ; \n\t\t$F597 case CALL_1_REPLY_2 : in = _hessianFactory . createHessianInput ( is ) ; \n\t\tout = _hessianFactory . createHessian2Output ( os ) ; \n\t\t$F597 case HESSIAN_2 : in = _hessianFactory . createHessian2Input ( is ) ; \n\t\tin . readCall ( ) ; \n\t\tout = _hessianFactory . createHessian2Output ( os ) ; \n\t\t$F597 $F1267 throw new IllegalStateException ( header + NUM00 ) ; \n\t\t} \n\tif ( serializerFactory != null ) { \n\t\tin . setSerializerFactory ( serializerFactory ) ; \n\t\tout . setSerializerFactory ( serializerFactory ) ; \n\t\t} \n\ttry { \n\t\tinvoke ( _service , in , out ) ; \n\t\t} \n\tfinally { \n\t\t$F59 ( in ) $F59 ( out ) if ( isDebug ) $F59 ( os ) } \n\t} \n"}, {"code": "private void commitLocalTransaction $F72 throws CommitFailedException { \n\t$F2329 ( _tx ) if $F14148 ( _logger , Level ) { \n\t\t_logger . log ( Level . FINEST , NUM00 + _tx ) ; \n\t\t} \n\ttry $F19092 ( _tx ) catch ( Exception e ) { \n\t\tif $F68674 ( _logger , Level ) $F68681 ( _logger , Level , _tx , e ) throw new CommitFailedException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public static Entry addObjectClass ( Entry entry ) { \n\tAttribute attribute = entry . getAttribute ( CoreTokenConstants . OBJECT_CLASS ) ; \n\tif ( attribute == null ) { \n\t\tentry . addAttribute ( CoreTokenConstants . OBJECT_CLASS , CoreTokenConstants . FR_CORE_TOKEN ) ; \n\t\t} \n\treturn entry ; \n\t} \n"}, {"code": "$F1431 public List < Boundary > populateArea ( final Long wardId ) { \n\tHierarchyType hType = heirarchyTypeService . getHierarchyTypeByName ( hierarchyTypeName ) ; \n\t; \n\tList < Boundary > areaList = new LinkedList < Boundary > $F72 ; \n\tfinal BoundaryType childBoundaryType = boundaryTypeService . getBoundaryTypeByNameAndHierarchyType ( NUM00 , hType ) ; \n\tfinal Boundary parentBoundary = boundaryService . getBoundaryById ( wardId ) ; \n\tareaList = new LinkedList ( crossHeirarchyService . getCrossHierarchyChildrens ( parentBoundary , childBoundaryType ) ) ; \n\t$F209111 ( LOGGER , areaList ) return areaList ; \n\t} \n"}, {"code": "private static String readName ( DataInputStream dis , $F97523 ) throws IOException { \n\t$F34181 ( c , dis ) if $F14827 ( c ) { \n\t\tc = $F74254 ( c ) + dis . readUnsignedByte ( ) ; \n\t\t$F87074 $F87077 ( jumps ) ; \n\t\tjumps . add ( c ) ; \n\t\treturn readName ( data , c , jumps ) ; \n\t\t} \n\t$F40722 ( c ) byte $F1310 = new byte [ c ] ; \n\tdis . readFully ( b ) ; \n\tString s = IDN . toUnicode ( new String ( b ) ) ; \n\tString t = readName ( dis , data ) ; \n\tif $F4012 ( t ) $F15894 ( s , t ) return s ; \n\t} \n"}, {"code": "public SimpleString concat ( final char c ) { \n\t$F64222 ( bytes , data ) $F7057 ( System , data , bytes ) bytes [ data . length ] = $F8046 ( c ) ; \n\tbytes [ data . length + NUM00 ] = ( byte ) ( c > > NUM00 & NUM00 ) ; \n\treturn new SimpleString ( bytes ) ; \n\t} \n"}, {"code": "public static double probToLogOdds ( double prob ) { \n\tif ( gr ( prob , NUM00 ) || ( sm ( prob , NUM00 ) ) ) $F275480 ( prob ) double p = SMALL + ( NUM00 - NUM00 * SMALL ) * prob ; \n\treturn Math . log ( p / ( NUM00 - p ) ) ; \n\t} \n"}, {"code": "$F9538 ( takeLock , this , notEmpty ) "}, {"code": "public void deepFill ( MaryNode specTree ) { \n\ttree = specTree ; \n\tnumberOfLeaves = NUM00 ; \n\tsortNode ( NUM00 , tree ) ; \n\t} \n"}, {"code": "public int nodeCount $F72 { \n\treturn $F2908 ( nodes ) ; \n\t} \n"}, {"code": "public void addToGlobalBlacklist ( String host ) { \n\taddToGlobalBlacklist ( host , System . currentTimeMillis ( ) + this . globalBlacklistTimeout ) ; \n\t} \n"}, {"code": "public boolean addNode ( Lop node ) { \n\t$F12651 ( nodes , node , _BOOL ) nodes . add ( node ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private JSONArray requestAllFileSystems $F72 throws IOException , JSONException { \n\t$F19928 ( ret ) for ( Filesystem fs : filesystems ) { \n\t\tret . put ( fs . getRootEntry ( ) ) ; \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "private void writeObject $F9338 ( s ) throws $F3258 { \n\t$F9339 ( s ) for ( $F9341 n = findFirst ( ) ; \n\tn != null ; \n\tn = n . next ) { \n\t\tV v = n . getValidValue ( ) ; \n\t\tif ( v != null ) { \n\t\t\ts . writeObject ( n . key ) ; \n\t\t\ts . writeObject ( v ) ; \n\t\t\t} \n\t\t} \n\t$F9352 ( s ) } \n"}, {"code": "public static final double sigma ( double a ) { \n\treturn NUM00 / ( NUM00 + Math . exp ( - a ) ) ; \n\t} \n"}, {"code": "public void insertOrRefresh ( final KBucketEntry newEntry ) { \n\t$F8249 ( newEntry ) List < KBucketEntry > entriesRef = entries ; \n\tfor ( KBucketEntry existing : entriesRef ) { \n\t\tif $F1238 ( existing , newEntry ) { \n\t\t\texisting . mergeInTimestamps ( newEntry ) ; \n\t\t\t$F665 } \n\t\tif ( existing . matchIPorID ( newEntry ) ) { \n\t\t\tDHT . logInfo ( NUM00 + newEntry + NUM00 + existing + NUM00 ) ; \n\t\t\t$F665 } \n\t\t} \n\tif ( newEntry . verifiedReachable ( ) ) { \n\t\tif ( entriesRef . size ( ) < DHTConstants . MAX_ENTRIES_PER_BUCKET ) { \n\t\t\tmodifyMainBucket ( null , newEntry ) ; \n\t\t\t$F665 } \n\t\tif ( replaceBadEntry ( newEntry ) ) $F665 KBucketEntry $F7662 ( youngest , entriesRef ) ; \n\t\tif ( youngest . getCreationTime ( ) > newEntry . getCreationTime ( ) || newEntry . getRTT ( ) * NUM00 < youngest . getRTT ( ) ) { \n\t\t\tmodifyMainBucket ( youngest , newEntry ) ; \n\t\t\tinsertInReplacementBucket ( youngest ) ; \n\t\t\t$F665 } \n\t\t} \n\tinsertInReplacementBucket ( newEntry ) ; \n\t} \n"}, {"code": "public void translate ( double x , double y ) { \n\tcurrentTransform . translate ( x , y ) ; \n\ttry { \n\t\twriteTransform ( new AffineTransform ( NUM00 , NUM00 , NUM00 , NUM00 , x , y ) ) ; \n\t\t} \n\t$F52544 ( handleException , e ) } \n"}, {"code": "public static boolean isSupportedAddRPProtectionVirtualPoolChange ( Volume volume , VirtualPool currentVpool , VirtualPool newVpool , DbClient dbClient , StringBuffer notSuppReasonBuff ) { \n\ts_logger . info ( String . format ( $F17177 ( currentVpool , newVpool ) ) ) ; \n\t$F24922 ( isSameVirtualPool , currentVpool , newVpool , notSuppReasonBuff , _BOOL ) if ( volume . checkForRp ( ) || VirtualPool . vPoolSpecifiesProtection ( currentVpool ) ) $F117250 ( notSuppReasonBuff , _BOOL ) if ( ! VirtualPool . vPoolSpecifiesHighAvailability ( currentVpool ) && VirtualPool . vPoolSpecifiesRPVPlex ( newVpool ) ) $F117250 ( notSuppReasonBuff , _BOOL ) if ( VirtualPool . vPoolSpecifiesHighAvailability ( currentVpool ) && ! VirtualPool . vPoolSpecifiesHighAvailabilityDistributed ( currentVpool ) && VirtualPool . vPoolSpecifiesMetroPoint ( newVpool ) ) { \n\t\t$F144868 ( notSuppReasonBuff ) return _BOOL ; \n\t\t} \n\t$F806 include = new String [ ] { \n\t\tTYPE , VARRAYS , REF_VPOOL , MIRROR_VPOOL , FAST_EXPANSION , ACLS , INACTIVE , PROTOCOLS , PROVISIONING_TYPE , USE_MATCHED_POOLS , ARRAY_INFO , DRIVE_TYPE , AUTO_TIER_POLICY_NAME , HOST_IO_LIMIT_IOPS , HOST_IO_LIMIT_BANDWIDTH , VMAX_COMPRESSION_ENABLED , IS_THIN_VOLUME_PRE_ALLOCATION_ENABLED , ASSIGNED_STORAGE_POOLS } \n\t; \n\tMap $F17195 changes = analyzeChanges ( currentVpool , newVpool , include , null , null ) ; \n\tif $F5973 ( changes ) { \n\t\t$F84 ( notSuppReasonBuff ) fillInNotSupportedReasons ( changes , notSuppReasonBuff ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tinclude = $F8640 ( PROTECTION_VARRAY_SETTINGS ) ; \n\tchanges = analyzeChanges ( currentVpool , newVpool , include , null , null ) ; \n\tif $F2979 ( changes ) { \n\t\t$F84 ( notSuppReasonBuff ) fillInNotSupportedReasons ( changes , notSuppReasonBuff ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tif ( VirtualPool . vPoolSpecifiesHighAvailability ( currentVpool ) && ( VirtualPool . vPoolSpecifiesRPVPlex ( newVpool ) || VirtualPool . vPoolSpecifiesMetroPoint ( newVpool ) ) ) { \n\t\tVirtualPoolChangeOperationEnum op = vplexCommonChecks ( volume , currentVpool , newVpool , dbClient , notSuppReasonBuff , include ) ; \n\t\tif ( op == null || ! op . equals ( VirtualPoolChangeOperationEnum . RP_PROTECTED ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void writeObject ( ObjectOutputStream oos ) throws IOException { \n\t$F9339 ( oos ) boolean writeFont = ( f != OMText . DEFAULT_FONT ) ; \n\toos . writeBoolean ( writeFont ) ; \n\tif ( writeFont ) { \n\t\toos . writeObject ( f . getName ( ) ) ; \n\t\toos . writeInt ( f . getSize ( ) ) ; \n\t\toos . writeInt ( f . getStyle ( ) ) ; \n\t\t} \n\twriteStroke ( oos , stroke , OMGraphic . BASIC_STROKE ) ; \n\twriteStroke ( oos , textMatteStroke , DEFAULT_TEXT_MATTE_STROKE ) ; \n\t} \n"}, {"code": "private static void writeSpaces ( Writer out , int amt ) throws IOException { \n\twhile ( amt > NUM00 ) { \n\t\t$F3410 ( out ) amt -- ; \n\t\t} \n\t} \n"}, {"code": "public static double relativeOverlap ( SpatialComparable box1 , SpatialComparable box2 ) { \n\tfinal int dim = assertSameDimensionality ( box1 , box2 ) ; \n\tdouble overlap = NUM00 ; \n\tdouble vol1 = NUM00 ; \n\tdouble vol2 = NUM00 ; \n\tfor ( $F119 ( i , dim ) ) { \n\t\tfinal double box1min = box1 . getMin ( i ) ; \n\t\tfinal double box1max = box1 . getMax ( i ) ; \n\t\tfinal double box2min = box2 . getMin ( i ) ; \n\t\tfinal double box2max = box2 . getMax ( i ) ; \n\t\tfinal double omax = Math . min ( box1max , box2max ) ; \n\t\tfinal double omin = Math . max ( box1min , box2min ) ; \n\t\tif ( omax <= omin ) $F1083 overlap *= omax - omin ; \n\t\tvol1 *= box1max - box1min ; \n\t\tvol2 *= box2max - box2min ; \n\t\t} \n\treturn overlap / ( vol1 + vol2 ) ; \n\t} \n"}, {"code": "protected void handleAutoDraw $F72 { \n\tif ( isToolItemSelected ( ToolBarItemKey . AUTO_DRAW ) ) $F5795 ( onAutoDraw ) } \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "protected final void _loadToHaveAtLeast ( int minAvailable ) throws IOException { \n\tif ( _inputStream == null ) { \n\t\tthrow _constructError ( NUM00 + minAvailable + NUM00 ) ; \n\t\t} \n\tint amount = _inputEnd - _inputPtr ; \n\t_currInputProcessed += _inputPtr ; \n\tif ( amount > NUM00 && _inputPtr > NUM00 ) { \n\t\t$F51886 ( System , _inputBuffer , _inputPtr , amount ) _inputEnd = amount ; \n\t\t} \n\telse { \n\t\t_inputEnd = NUM00 ; \n\t\t} \n\t_inputPtr = NUM00 ; \n\twhile ( _inputEnd < minAvailable ) { \n\t\t$F7994 ( count , _inputStream , _inputBuffer , _inputEnd ) if ( count < NUM00 ) { \n\t\t\t_closeInput ( ) ; \n\t\t\tif ( count == NUM00 ) $F5244 ( amount ) throw _constructError ( NUM00 + minAvailable + NUM00 + minAvailable + NUM00 ) ; \n\t\t\t} \n\t\t_inputEnd += count ; \n\t\t} \n\t} \n"}, {"code": "public Z21Message $F5474 ( a , l ) { \n\t$F31730 ( super , String , a ) setBinary ( _BOOL ) ; \n\t} \n"}, {"code": "private MethodDescriptor [ ] sortMethodDescriptors ( MethodDescriptor [ ] methodDescriptors ) { \n\treturn methodSorter != null ? methodSorter . sortMethodDescriptors ( methodDescriptors ) : methodDescriptors ; \n\t} \n"}, {"code": "public static Properties parsePropertyList ( String list ) throws PropertyStringFormatException $F19580 ( parsePropertyList , list , propertySeparators , keyValueSeparators ) "}, {"code": "public boolean packageHasAnnotation ( Annotation annotation ) { \n\ttry { \n\t\tPackage pkg = type . getPackage ( ) ; \n\t\t$F1933 ( pkg , _BOOL ) String className = $F43113 ( pkg ) ; \n\t\t$F96883 ( packageType , Class , className ) AnnotationAccessor accessor = new AnnotationAccessor ( supportedAnnotations , packageType , ignoreAnnotationFailure ) ; \n\t\treturn accessor . typeHas ( annotation ) ; \n\t\t} \n\t$F17063 ( _BOOL ) } \n"}, {"code": "private String buildToolTip ( final CTaggedGraphNodesContainerNode node ) { \n\t$F64605 ( tooltip ) boolean first = _BOOL ; \n\tfor ( final NaviNode graphnode : node . getGraphNodes ( ) ) { \n\t\t$F48750 ( first , tooltip ) tooltip . append ( CNodesDisplayString . getDisplayString ( graphnode ) ) ; \n\t\tfirst = _BOOL ; \n\t\t} \n\treturn tooltip + NUM00 ; \n\t} \n"}, {"code": "public void makeGraph ( File linkGraph ) throws Exception { \n\tString temp212 ; \n\tint rowNum = NUM00 ; \n\tBufferedReader $F60628 ( br , linkGraph ) ; \n\twhile $F443 ( temp212 , br ) { \n\t\t$F6542 ( strs , temp212 ) for ( $F1139 ( i , strs ) ) { \n\t\t\tgraph [ rowNum ] [ i ] = Double . parseDouble ( strs [ i ] ) ; \n\t\t\t} \n\t\trowNum ++ ; \n\t\t} \n\tfor ( $F119 ( i , dataNum ) ) { \n\t\tfor ( $F119 ( j , dimension ) ) { \n\t\t\tW [ i ] [ j ] = r . nextDouble ( ) ; \n\t\t\tH [ j ] [ i ] = r . nextDouble ( ) ; \n\t\t\t} \n\t\t} \n\tfor ( $F119 ( i , dataNum ) ) { \n\t\tdouble sumW = NUM00 ; \n\t\tdouble sumH = NUM00 ; \n\t\tfor ( $F119 ( j , dimension ) ) { \n\t\t\tsumW += W [ i ] [ j ] * W [ i ] [ j ] ; \n\t\t\tsumH += H [ j ] [ i ] * H [ j ] [ i ] ; \n\t\t\t} \n\t\t$F84202 ( sumW , Math ) $F84202 ( sumH , Math ) for ( $F119 ( j , dimension ) ) { \n\t\t\tW [ i ] [ j ] /= sumW ; \n\t\t\tH [ j ] [ i ] /= sumH ; \n\t\t\t} \n\t\t} \n\ttrainW ( ) ; \n\tinit = _BOOL ; \n\t} \n"}, {"code": "$F43277 ( listener , mListeners ) "}, {"code": "public boolean removeOnItemClickListener ( OnItemClickListener itemClickListener ) $F20067 ( clickListeners , itemClickListener ) "}, {"code": "$F1 protected int lookForSelectablePosition ( int position , boolean lookDown ) { \n\tfinal ListAdapter adapter = mAdapter ; \n\tif ( adapter == null || isInTouchMode ( ) ) { \n\t\treturn INVALID_POSITION ; \n\t\t} \n\tfinal int count = adapter . getCount ( ) ; \n\tif ( ! mAreAllItemsSelectable ) { \n\t\tif ( lookDown ) { \n\t\t\t$F34970 ( position , Math ) while ( position < count && ! adapter . isEnabled ( position ) ) { \n\t\t\t\tposition ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\t$F72086 ( position , Math , count ) while ( position >= NUM00 && ! adapter . isEnabled ( position ) ) { \n\t\t\t\tposition -- ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( position < NUM00 || position >= count ) { \n\t\t\treturn INVALID_POSITION ; \n\t\t\t} \n\t\treturn position ; \n\t\t} \n\telse { \n\t\tif ( position < NUM00 || position >= count ) { \n\t\t\treturn INVALID_POSITION ; \n\t\t\t} \n\t\treturn position ; \n\t\t} \n\t} \n"}, {"code": "public static String padRight $F16495 ( s , length ) { \n\tfinal int pad = length - s . length ( ) ; \n\treturn pad > NUM00 ? s + getSpaceString ( pad ) : s ; \n\t} \n"}, {"code": "private static $F806 collationMatchingRuleNames ( $F20109 ( localeNames ) , final int numSuffix , final String symbolicSuffix ) { \n\t$F67013 ( names ) for ( String localeName : localeNames ) { \n\t\tif $F2979 ( symbolicSuffix ) $F207 ( names , localeName ) else { \n\t\t\tnames . add ( localeName + NUM00 + numSuffix ) ; \n\t\t\tnames . add ( localeName + NUM00 + symbolicSuffix ) ; \n\t\t\t} \n\t\t} \n\t$F14862 ( names ) } \n"}, {"code": "public static boolean isCacheSafe ( $F6969 clazz , ClassLoader classLoader ) { \n\t$F18062 ( Assert , clazz ) ClassLoader target = clazz . getClassLoader ( ) ; \n\t$F1933 ( target , _BOOL ) ClassLoader cur = classLoader ; \n\t$F3627 ( cur , target , _BOOL ) while ( cur != null ) { \n\t\t$F10337 ( cur ) $F3627 ( cur , target , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void write ( PrintStream out ) { \n\twrite ( out , table ) ; \n\t} \n"}, {"code": "static Part from ( String encoded , String decoded ) { \n\t$F1933 ( encoded , NULL ) $F25111 ( encoded , EMPTY ) $F1933 ( decoded , NULL ) $F25111 ( decoded , EMPTY ) return new Part ( encoded , decoded ) ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "private $F2027 createEpochMonths ( int epochDay , int minYear , int maxYear , Map < Integer , $F2027 > years ) { \n\tint numMonths = ( maxYear - minYear + NUM00 ) * NUM00 + NUM00 ; \n\tint epochMonth = NUM00 ; \n\t$F4120 ( epochMonths , numMonths ) minMonthLength = Integer . MAX_VALUE ; \n\tmaxMonthLength = Integer . MIN_VALUE ; \n\tfor ( int year = minYear ; \n\tyear <= maxYear ; \n\tyear ++ ) { \n\t\t$F2027 months = years . get ( year ) ; \n\t\tfor ( $F6268 ( month ) ) { \n\t\t\tint length = months [ month ] ; \n\t\t\tepochMonths [ epochMonth ++ ] = epochDay ; \n\t\t\tif $F19274 ( length ) $F18931 ( minYear ) epochDay += length ; \n\t\t\t$F16700 ( minMonthLength , Math , length ) $F19410 ( maxMonthLength , Math , length ) } \n\t\t} \n\tepochMonths [ epochMonth ++ ] = epochDay ; \n\tif ( epochMonth != epochMonths . length ) { \n\t\tthrow new IllegalStateException ( NUM00 + epochMonth + NUM00 + epochMonths . length ) ; \n\t\t} \n\treturn epochMonths ; \n\t} \n"}, {"code": "private static String descriptorToInternalName ( String descriptor ) { \n\tswitch $F49313 ( descriptor ) { \n\t\t$F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 return descriptor ; \n\t\t$F1262 return classDescriptorToInternalName ( descriptor ) ; \n\t\t$F61916 ( descriptor ) } \n\t} \n"}, {"code": "public Subscription register ( Object mBean , MBeanDescription description ) { \n\treturn register ( mBean , description . getMBeanName ( getNextId ( ) ) ) ; \n\t} \n"}, {"code": "void checkAfterUnmarshalled $F72 { \n\tassertEquals ( shortVal . shortValue ( ) , NUM00 ) ; \n\tassertEquals ( longVal , NUM00 ) ; \n\tassertNull ( aArr ) ; \n\tassertNull ( strVal ) ; \n\tassertEquals ( doubleVal , NUM00 ) ; \n\t} \n"}, {"code": "public void put ( int key , E value ) { \n\tint i = ContainerHelpers . binarySearch ( mKeys , mSize , key ) ; \n\tif ( i >= NUM00 ) { \n\t\tmValues [ i ] = value ; \n\t\t} \n\telse { \n\t\ti = ~ i ; \n\t\t$F27086 ( i , mSize , mValues , DELETED , mKeys , key , value ) if ( mGarbage && mSize >= mKeys . length ) { \n\t\t\tgc ( ) ; \n\t\t\ti = ~ ContainerHelpers . binarySearch ( mKeys , mSize , key ) ; \n\t\t\t} \n\t\tif ( mSize >= mKeys . length ) { \n\t\t\t$F49493 ( n , ContainerHelpers , mSize ) $F4120 ( nkeys , n ) $F133 ( nvalues , n ) $F7057 ( System , mKeys , nkeys ) $F7057 ( System , mValues , nvalues ) mKeys = nkeys ; \n\t\t\tmValues = nvalues ; \n\t\t\t} \n\t\t$F27098 ( mSize , i , System , mKeys , mValues ) mKeys [ i ] = key ; \n\t\tmValues [ i ] = value ; \n\t\tmSize ++ ; \n\t\t} \n\t} \n"}, {"code": "$F1 public $F23350 CompletableFuture $F23350 collect ( final Supplier $F23350 supplier , final BiConsumer < R , $F11631 > accumulator , final BiConsumer < R , R > combiner ) $F19292 ( CompletableFuture , exec ) "}, {"code": "$F1431 protected Object fromReflectionType ( final Object value ) { \n\tFieldDescriptor descriptor = getDescriptor ( ) ; \n\tif $F102310 ( descriptor ) { \n\t\tif ( descriptor . getJavaType ( ) == FieldDescriptor . JavaType . MESSAGE || descriptor . getJavaType ( ) == FieldDescriptor . JavaType . ENUM ) { \n\t\t\t$F102316 ( result ) for ( final Object element : ( List ) value ) $F3762 ( result , singularFromReflectionType , element ) return result ; \n\t\t\t} \n\t\telse { \n\t\t\treturn value ; \n\t\t\t} \n\t\t} \n\telse $F4915 ( singularFromReflectionType , value ) } \n"}, {"code": "public void registerManufacturerSpecificBuilder ( int companyId , ADManufacturerSpecificBuilder builder ) { \n\tif ( companyId < NUM00 || NUM00 < companyId ) { \n\t\t$F574 ( message , String , companyId ) $F29415 ( message ) } \n\t$F2329 ( builder ) $F2544 ( key , Integer , companyId ) List < ADManufacturerSpecificBuilder > builders = mMSBuilders . get ( key ) ; \n\tif ( builders == null ) { \n\t\tbuilders = new ArrayList < ADManufacturerSpecificBuilder > $F72 ; \n\t\tmMSBuilders . put ( key , builders ) ; \n\t\t} \n\t$F6965 ( builders , builder ) } \n"}, {"code": "public static ReilGraph copyReilCode ( final Window parent , final INaviCodeNode node ) { \n\tfinal ReilTranslator $F44365 translator = new ReilTranslator $F44365 $F72 ; \n\ttry { \n\t\treturn translator . translate ( new StandardEnvironment $F72 , node ) ; \n\t\t} \n\tcatch ( final InternalTranslationException e ) { \n\t\tCUtilityFunctions . logException ( e ) ; \n\t\t$F21899 ( message ) final String description = CUtilityFunctions . createDescription ( String . format ( NUM00 , node . getAddress ( ) ) , $F21904 , new String [ ] { \n\t\t\tNUM00 + NUM00 } \n\t\t) ; \n\t\tNaviErrorDialog . show ( parent , message , description , e ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "private static void applyOverrides $F72 { \n\tInputStream stream = getContentTypesPropertiesStream ( ) ; \n\t$F2329 ( stream ) try { \n\t\ttry { \n\t\t\t$F2697 ( overrides ) overrides . load ( stream ) ; \n\t\t\tfor ( $F261788 ( entry , overrides ) ) { \n\t\t\t\tString $F167509 ( extension , entry ) ; \n\t\t\t\t$F189249 ( mimeType , entry ) add ( mimeType , extension ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F3229 ( stream ) } \n\t$F20287 } \n"}, {"code": "public static String toString ( Reader reader , long timeout ) throws IOException { \n\tStringWriter sw = new StringWriter $F989 ; \n\tcopy ( toBufferedReader ( reader ) , sw , timeout ) ; \n\t$F59 ( sw ) $F92 ( sw ) } \n"}, {"code": "private static float computeSimilarity ( Lane a , Lane b ) { \n\tint same = NUM00 ; \n\tint diff = NUM00 ; \n\tint firstCoordinate = Math . max ( a . getFirstNonGapPosition ( ) , b . getFirstNonGapPosition ( ) ) ; \n\tint lastCoordinate = Math . min ( a . getLastNonGapPosition ( ) , b . getLastNonGapPosition ( ) ) ; \n\tfor ( int i = firstCoordinate ; \n\ti <= lastCoordinate ; \n\ti ++ ) { \n\t\t$F1280 ( cha , a , i ) $F1280 ( chb , b , i ) if ( Character . isLetter ( cha ) && Character . isLetter ( chb ) ) { \n\t\t\tif ( Character . toLowerCase ( cha ) == Character . toLowerCase ( ( chb ) ) ) same ++ ; \n\t\t\telse diff ++ ; \n\t\t\t} \n\t\t} \n\treturn Math . max ( same > NUM00 ? NUM00 : NUM00 , same - NUM00 * diff ) ; \n\t} \n"}, {"code": "private void forceOverflow $F72 $F5795 ( forceOverflow ) "}, {"code": "public int find ( String string ) { \n\t$F14469 ( string ) for ( int i = NUM00 ; \n\ti != m_stringOffsets . length ; \n\t++ i ) { \n\t\tint offset = m_stringOffsets [ i ] ; \n\t\tint length = getShort ( m_strings , offset ) ; \n\t\tif ( length != string . length ( ) ) $F1448 int j = NUM00 ; \n\t\tfor ( ; \n\t\tj != length ; \n\t\t++ j ) { \n\t\t\toffset += NUM00 ; \n\t\t\tif ( string . charAt ( j ) != getShort ( m_strings , offset ) ) $F5153 } \n\t\t$F3627 ( j , length , i ) } \n\t$F150 } \n"}, {"code": "public String prepOperand ( String label , DataType dt , ValueType vt , boolean literal ) { \n\t$F83 ( sb ) sb . append ( label ) ; \n\tsb . append ( Lop . DATATYPE_PREFIX ) ; \n\tsb . append ( dt ) ; \n\tsb . append ( Lop . VALUETYPE_PREFIX ) ; \n\tsb . append ( vt ) ; \n\tsb . append ( Lop . LITERAL_PREFIX ) ; \n\tsb . append ( literal ) ; \n\t$F92 ( sb ) } \n"}, {"code": "public static List < SpaceTime > divideConquerBrownianBridge ( MultivariateNormalDistribution normal , SpaceTime start , SpaceTime end , int depth , int maxTries , SpaceTimeRejector rejector ) { \n\tList < SpaceTime > points = new LinkedList < SpaceTime > $F72 ; \n\tpoints . add ( start ) ; \n\tpoints . add ( end ) ; \n\tstop = _BOOL ; \n\tif ( divideConquerBrownianBridge ( normal , NUM00 , points , depth , maxTries , rejector ) == ( NUM00 < < ( depth - NUM00 ) ) ) { \n\t\treturn points ; \n\t\t} \n\tstop = _BOOL ; \n\t$F1274 } \n"}, {"code": "public static EjbJarXmlVersion valueOf ( DocumentType docType ) throws NullPointerException { \n\treturn valueOf ( docType . getPublicId ( ) ) ; \n\t} \n"}, {"code": "private boolean matchStrings $F22381 ( pattern , str , caseSensitive ) { \n\t$F7782 ( patArr , pattern ) $F7782 ( strArr , str ) int patIdxStart = NUM00 ; \n\t$F40997 ( patIdxEnd , patArr ) int strIdxStart = NUM00 ; \n\t$F40997 ( strIdxEnd , strArr ) char ch ; \n\tboolean containsStar = _BOOL ; \n\tfor ( char c : patArr ) { \n\t\tif ( c == NUM00 ) $F3468 ( containsStar , _BOOL ) } \n\tif ( ! containsStar ) { \n\t\t$F35938 ( patIdxEnd , strIdxEnd , _BOOL ) for ( $F9993 ( i , patIdxEnd ) ) { \n\t\t\tch = patArr [ i ] ; \n\t\t\t$F233103 ( ch , different , caseSensitive , strArr , i , _BOOL ) } \n\t\treturn _BOOL ; \n\t\t} \n\t$F6482 ( patIdxEnd , _BOOL ) while $F118980 ( ch , patArr , patIdxStart , strIdxStart , strIdxEnd ) { \n\t\t$F233103 ( ch , different , caseSensitive , strArr , strIdxStart , _BOOL ) patIdxStart ++ ; \n\t\tstrIdxStart ++ ; \n\t\t} \n\t$F118987 ( strIdxStart , strIdxEnd , i , patIdxStart , patIdxEnd , patArr , _BOOL ) while $F118980 ( ch , patArr , patIdxEnd , strIdxStart , strIdxEnd ) { \n\t\t$F233103 ( ch , different , caseSensitive , strArr , strIdxEnd , _BOOL ) patIdxEnd -- ; \n\t\tstrIdxEnd -- ; \n\t\t} \n\t$F118987 ( strIdxStart , strIdxEnd , i , patIdxStart , patIdxEnd , patArr , _BOOL ) while ( patIdxStart != patIdxEnd && strIdxStart <= strIdxEnd ) { \n\t\tint patIdxTmp = - NUM00 ; \n\t\tfor ( $F28096 ( i , patIdxStart , patIdxEnd ) ) $F118991 ( patArr , i , patIdxTmp ) if ( patIdxTmp == patIdxStart + NUM00 ) $F118993 ( patIdxStart ) int patLength = patIdxTmp - patIdxStart - NUM00 ; \n\t\tint strLength = strIdxEnd - strIdxStart + NUM00 ; \n\t\tint foundIdx = - NUM00 ; \n\t\tstrLoop : for ( int i = NUM00 ; \n\t\ti <= strLength - patLength ; \n\t\ti ++ ) { \n\t\t\tfor ( $F119 ( j , patLength ) ) { \n\t\t\t\tch = patArr [ patIdxStart + j + NUM00 ] ; \n\t\t\t\tif ( ch != NUM00 ) { \n\t\t\t\t\tif ( different ( caseSensitive , ch , strArr [ strIdxStart + i + j ] ) ) { \n\t\t\t\t\t\tcontinue strLoop ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tfoundIdx = strIdxStart + i ; \n\t\t\t$F597 } \n\t\t$F5881 ( foundIdx , _BOOL ) patIdxStart = patIdxTmp ; \n\t\tstrIdxStart = foundIdx + patLength ; \n\t\t} \n\tfor ( int i = patIdxStart ; \n\ti <= patIdxEnd ; \n\ti ++ ) { \n\t\tif ( patArr [ i ] != NUM00 ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static $F31488 mergeCoords ( $F31488 x , $F31488 y ) { \n\tif $F15256 ( x , y ) $F824 $F31488 $F204 ( ret ) ; \n\tfor ( $F2277 ( i , x ) ) { \n\t\t$F18208 ( ret , x , i ) $F18208 ( ret , y , i ) } \n\treturn ret ; \n\t} \n"}, {"code": "public static void print ( int x ) $F7523 ( out , x ) "}, {"code": "public void copyText $F72 { \n\tint end , start ; \n\tend = selectedCharField . getSelectionEnd ( ) ; \n\tstart = selectedCharField . getSelectionStart ( ) ; \n\tselectedCharField . selectAll ( ) ; \n\tselectedCharField . copy ( ) ; \n\tselectedCharField . select ( start , end ) ; \n\t} \n"}, {"code": "public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { \n\ttry { \n\t\tAuthPropertiesModel model = ( AuthPropertiesModel ) getModel ( ) ; \n\t\tMap original = model . getValues ( ) ; \n\t\t$F123284 ( ps , getChild , PROPERTY_ATTRIBUTE ) model . setValues ( ps . getAttributeValues ( original , _BOOL , model ) ) ; \n\t\t$F252709 ( setInlineAlertMessage , CCAlert ) } \n\t$F50339 ( setInlineAlertMessage , CCAlert , a ) forwardTo ( ) ; \n\t} \n"}, {"code": "private void buildDescriptionPanel ( final Composite parent ) { \n\tdescriptionLabel = new StyledText ( parent , SWT . READ_ONLY ) ; \n\t$F15121 ( descriptionLabel ) descriptionLabel . setLayoutData ( new GridData ( GridData . FILL , GridData . FILL , _BOOL , _BOOL , NUM00 , NUM00 ) ) ; \n\t} \n"}, {"code": "public HttpMethodClient $F72 { \n\tthis ( NUM00 , NUM00 , NUM00 * NUM00 ) ; \n\t} \n"}, {"code": "public ISO9796d2PSSSigner ( AsymmetricBlockCipher cipher , Digest digest , int saltLength , boolean implicit ) { \n\tthis . cipher = cipher ; \n\tthis . digest = digest ; \n\tthis . hLen = digest . getDigestSize ( ) ; \n\tthis . saltLength = saltLength ; \n\tif ( implicit ) { \n\t\ttrailer = TRAILER_IMPLICIT ; \n\t\t} \n\telse { \n\t\tInteger trailerObj = ( Integer ) trailerMap . get ( digest . getAlgorithmName ( ) ) ; \n\t\tif ( trailerObj != null ) $F276383 ( trailer , trailerObj ) else $F825 } \n\t} \n"}, {"code": "String decodeTextValue $F97 ( data ) throws IOException { \n\tboolean isCompressed = ( $F3305 ( data ) && ( data [ NUM00 ] == TEXT_COMPRESSION_HEADER [ NUM00 ] ) && ( data [ NUM00 ] == TEXT_COMPRESSION_HEADER [ NUM00 ] ) ) ; \n\tif ( isCompressed ) { \n\t\tStringBuilder $F144303 ( textBuf , data ) ; \n\t\tint dataStart = TEXT_COMPRESSION_HEADER . length ; \n\t\tint dataEnd = dataStart ; \n\t\tboolean inCompressedMode = _BOOL ; \n\t\twhile ( dataEnd < data . length ) { \n\t\t\tif ( data [ dataEnd ] == $F19905 ) { \n\t\t\t\tdecodeTextSegment ( data , dataStart , dataEnd , inCompressedMode , textBuf ) ; \n\t\t\t\tinCompressedMode = ! inCompressedMode ; \n\t\t\t\t++ dataEnd ; \n\t\t\t\tdataStart = dataEnd ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t++ dataEnd ; \n\t\t\t\t} \n\t\t\t} \n\t\tdecodeTextSegment ( data , dataStart , dataEnd , inCompressedMode , textBuf ) ; \n\t\t$F92 ( textBuf ) } \n\treturn decodeUncompressedText ( data , getCharset ( ) ) ; \n\t} \n"}, {"code": "private < S , T > $F28904 extract ( final Collection $F50398 collection , final Extractor < S , T > extractor ) { \n\tfinal $F28904 values = new $F48740 $F716 ( collection ) ; \n\tfor ( final S instance : collection ) { \n\t\tvalues . add ( extractor . getValue ( instance ) ) ; \n\t\t} \n\treturn values ; \n\t} \n"}, {"code": "public static boolean isZTE $F72 $F75994 ( sBuildModel ) "}, {"code": "static public String normalizeToEncoding ( String origString_ , Charset encoding_ ) { \n\tString normString = origString_ ; \n\tCharsetEncoder encoder = encoding_ . newEncoder ( ) ; \n\tif ( ! encoder . canEncode ( origString_ ) ) { \n\t\t$F11550 ( length , origString_ ) $F1469 normSeq = new char [ $F45530 ( origString_ ) ] ; \n\t\tint charNum = NUM00 ; \n\t\tfor ( int offset = NUM00 ; \n\t\toffset < length ; \n\t\t) { \n\t\t\tPair < Character , Integer > replacement = normalizeCodepoint ( origString_ , encoding_ , offset ) ; \n\t\t\tCharacter replacedChar = replacement . getFirst ( ) ; \n\t\t\tint codepoint = replacement . getSecond ( ) ; \n\t\t\tif ( null != replacedChar ) $F2319 ( normSeq , charNum , replacedChar ) offset += Character . charCount ( codepoint ) ; \n\t\t\t} \n\t\t$F84838 ( normString , normSeq ) } \n\treturn normString ; \n\t} \n"}, {"code": "private FastConcurrentSkipListMap . Node $F9340 loNode $F72 { \n\tif ( lo == null ) return m . findFirst ( ) ; \n\telse if ( loInclusive ) return m . findNear ( lo , m . GT | m . EQ ) ; \n\telse return m . findNear ( lo , m . GT ) ; \n\t} \n"}, {"code": "$F1654 ( m_sets ) "}, {"code": "public Line3D ( Stack < Vector3 > points , float thickness , $F2027 colors , boolean createVBOs ) { \n\tsuper ( ) ; \n\tmPoints = points ; \n\tmLineThickness = thickness ; \n\tmColors = colors ; \n\tif ( colors != null && colors . length != points . size ( ) ) $F11388 init ( createVBOs ) ; \n\t} \n"}, {"code": "public static $F96 asUnsignedByteArray ( BigInteger value ) { \n\t$F1208 ( bytes , value ) if $F41780 ( bytes ) $F41781 ( tmp , bytes , System ) return bytes ; \n\t} \n"}, {"code": "public static float approximateLength ( float controlPoints [ ] [ ] ) { \n\tfloat length = NUM00 ; \n\tfor ( $F21583 ( i , controlPoints ) ) { \n\t\tfloat xDif = controlPoints [ i + NUM00 ] [ NUM00 ] - controlPoints [ i ] [ NUM00 ] ; \n\t\tfloat yDif = controlPoints [ i + NUM00 ] [ NUM00 ] - controlPoints [ i ] [ NUM00 ] ; \n\t\tfloat zDif = controlPoints [ i + NUM00 ] [ NUM00 ] - controlPoints [ i ] [ NUM00 ] ; \n\t\tlength += $F16206 ( Math , xDif , yDif , zDif ) ; \n\t\t} \n\treturn length ; \n\t} \n"}, {"code": "protected int mapDragOperationFromModifiers ( MouseEvent e ) { \n\tint mods = e . getModifiersEx ( ) ; \n\tint btns = mods & ButtonMask ; \n\tif ( ! ( btns == InputEvent . BUTTON1_DOWN_MASK || btns == InputEvent . BUTTON2_DOWN_MASK ) ) { \n\t\treturn DnDConstants . ACTION_NONE ; \n\t\t} \n\treturn SunDragSourceContextPeer . convertModifiersToDropAction ( mods , getSourceActions ( ) ) ; \n\t} \n"}, {"code": "public UpdateClause addAssignment ( Expression expression ) { \n\tassignments . add ( new Assignment ( expression ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "private boolean stepValue $F72 { \n\twhile ( _BOOL ) { \n\t\tif ( iter != null && iter . hasNext ( ) ) { \n\t\t\tsvcs = ( ArrayList ) iter . next ( ) ; \n\t\t\t$F8935 ( svcidx , svcs ) return _BOOL ; \n\t\t\t} \n\t\t$F18937 ( stepClass , _BOOL ) $F397 ( iter , _BOOL ) } \n\t} \n"}, {"code": "private ArrayList < IconMarker > createIconMarkers $F72 { \n\tfinal ArrayList < IconMarker > $F2086 ( iconMarkers , LOCATIONS ) ; \n\ticonMarkers . add ( new IconMarker ( LOCATIONS [ NUM00 ] , R . drawable . bread , R . drawable . bread_c ) ) ; \n\ticonMarkers . add ( new IconMarker ( LOCATIONS [ NUM00 ] , R . drawable . butcher , R . drawable . butcher_c ) ) ; \n\ticonMarkers . add ( new IconMarker ( LOCATIONS [ NUM00 ] , R . drawable . fruits , R . drawable . fruits_c ) ) ; \n\ticonMarkers . add ( new IconMarker ( LOCATIONS [ NUM00 ] , R . drawable . grocery , R . drawable . grocery_c ) ) ; \n\ticonMarkers . add ( new IconMarker ( LOCATIONS [ NUM00 ] , R . drawable . patisserie , R . drawable . patisserie_c ) ) ; \n\treturn iconMarkers ; \n\t} \n"}, {"code": "public void hasNetworkConnection ( NetworkRequestCheckListener listener ) { \n\tif ( hasNetworkConnection ( ) ) { \n\t\ttestNetworkRequest ( listener ) ; \n\t\t} \n\telse { \n\t\tlistener . onNoResponse ( ) ; \n\t\t} \n\t} \n"}, {"code": "public void assignThreadForSubscriber ( $F4170 Object subscriber ) { \n\tLooper looper = Looper . myLooper ( ) ; \n\tif ( looper != null ) { \n\t\tmSubscribersDefaultThreads . put ( new IdentityWeakReferenceKey $F200 ( subscriber ) , looper != Looper . getMainLooper ( ) ? new Handler ( looper ) : mUiThreadHandler ) ; \n\t\t} \n\telse { \n\t\tmSubscribersDefaultThreads . remove ( new IdentityWeakReferenceKey $F200 ( subscriber ) ) ; \n\t\t} \n\t} \n"}, {"code": "private void validateDynamicAttribute ( Set dynamicSet ) throws PolicyException { \n\t$F36310 ( DEBUG , dynamicSet ) $F266988 ( responseAttrNames ) $F266988 ( repoAttrNames ) $F12775 ( responseAttrToRepoAttr ) $F36310 ( DEBUG , validDynamicAttrNames ) Set dynamicAttrs = ( ( Set ) properties . get ( DYNAMIC_ATTRIBUTE ) ) ; \n\t$F36310 ( DEBUG , dynamicAttrs ) $F10531 ( dynamicAttrsIter , dynamicAttrs ) while $F2921 ( dynamicAttrsIter ) { \n\t\t$F2778 ( attr , dynamicAttrsIter ) if $F2200 ( validDynamicAttrNames , attr ) { \n\t\t\tif $F12866 ( DEBUG ) { \n\t\t\t\tDEBUG . warning ( $F38 + attr ) ; \n\t\t\t\t} \n\t\t\t$F598 } \n\t\t$F91090 ( attrNames , parseDynamicAttrName , attr ) String responseAttrName = attrNames [ NUM00 ] ; \n\t\tString repoAttrName = attrNames [ NUM00 ] ; \n\t\tresponseAttrNames . add ( responseAttrName ) ; \n\t\trepoAttrNames . add ( repoAttrName ) ; \n\t\taddToResponseAttrToRepoAttrMap ( responseAttrName , repoAttrName ) ; \n\t\tif $F6299 ( DEBUG ) { \n\t\t\tDEBUG . message ( $F38 + responseAttrName + NUM00 + repoAttrName ) ; \n\t\t\t} \n\t\t} \n\tif $F6299 ( DEBUG ) { \n\t\tDEBUG . message ( NUM00 + NUM00 + responseAttrToRepoAttr ) ; \n\t\tDEBUG . message ( NUM00 + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean typeCheck ( Class type , Object instance ) { \n\treturn $F39078 ( type , instance ) || isWrapperInstance ( type , instance ) ; \n\t} \n"}, {"code": "public synchronized void init $F72 { \n\tArrayList < Warrant > tempList = new ArrayList < Warrant > $F72 ; \n\t$F3803 systemNameList = _manager . getSystemNameList ( ) ; \n\t$F13712 ( iter , systemNameList ) while $F2921 ( iter ) { \n\t\tWarrant w = _manager . getBySystemName ( iter . next ( ) ) ; \n\t\tif $F2200 ( _warList , w ) { \n\t\t\tw . addPropertyChangeListener ( this ) ; \n\t\t\t} \n\t\telse $F106 ( _warList , w ) tempList . add ( w ) ; \n\t\t} \n\tfor ( $F2277 ( i , _warList ) ) { \n\t\tWarrant w = _warList . get ( i ) ; \n\t\tif $F2200 ( _warNX , w ) $F9106 ( w , this ) } \n\tfor ( $F2277 ( i , _warNX ) ) $F62006 ( tempList , _warNX , i ) _warList = tempList ; \n\t} \n"}, {"code": "public void addCommand ( Command cmd , int offset ) { \n\tmenuBar . addCommand ( cmd , offset ) ; \n\t} \n"}, {"code": "public boolean connect ( final String address ) { \n\tif ( mBluetoothAdapter == null || address == null ) $F35336 ( Log , TAG , _BOOL ) if ( mBluetoothDeviceAddress != null && address . equals ( mBluetoothDeviceAddress ) && mBluetoothGatt != null ) { \n\t\t$F13527 ( Log , TAG ) if ( mBluetoothGatt . connect ( ) ) { \n\t\t\tmConnectionState = STATE_CONNECTING ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\tfinal BluetoothDevice device = mBluetoothAdapter . getRemoteDevice ( address ) ; \n\tif ( device == null ) $F35336 ( Log , TAG , _BOOL ) mBluetoothGatt = device . connectGatt ( this , _BOOL , mGattCallback ) ; \n\t$F13527 ( Log , TAG ) mBluetoothDeviceAddress = address ; \n\tmConnectionState = STATE_CONNECTING ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private double normalDens $F7635 ( x , mean , stdDev ) { \n\tdouble diff = x - mean ; \n\treturn ( NUM00 / ( m_normConst * stdDev ) ) * Math . exp ( - ( diff * diff / ( NUM00 * stdDev * stdDev ) ) ) ; \n\t} \n"}, {"code": "private static void drawShape ( GL2 gl , Shape s ) { \n\tPathIterator it = s . getPathIterator ( new AffineTransform $F72 , shapeFlatness ) ; \n\t$F12457 ( lastMoveTo ) $F12457 ( f ) while $F38402 ( it ) { \n\t\t$F38403 ( res , it , f ) switch ( res ) { \n\t\t\tcase PathIterator . SEG_CLOSE : GLPanel . V ( $F156480 ( gl , lastMoveTo ) ) ; \n\t\t\t$F597 case PathIterator . SEG_MOVETO : GLPanel . V ( $F156480 ( gl , f ) ) ; \n\t\t\t$F10319 ( System , f , lastMoveTo ) $F597 case PathIterator . SEG_LINETO : GLPanel . V ( $F156480 ( gl , f ) ) ; \n\t\t\t$F597 case PathIterator . SEG_CUBICTO : CubicCurve2D c = new CubicCurve2D . Float ( lastMoveTo [ NUM00 ] , lastMoveTo [ NUM00 ] , f [ NUM00 ] , f [ NUM00 ] , f [ NUM00 ] , f [ NUM00 ] , f [ NUM00 ] , f [ NUM00 ] ) ; \n\t\t\tdrawShape ( gl , c ) ; \n\t\t\t$F597 $F1267 throw new Error ( NUM00 + NUM00 + res ) ; \n\t\t\t} \n\t\t$F24630 ( it ) } \n\t} \n"}, {"code": "$F1 protected void tearDown $F72 throws NamingException , JMSException { \n\tNamingEnumeration < Binding > iter = context . listBindings ( NUM00 ) ; \n\twhile ( iter . hasMore ( ) ) { \n\t\tBinding binding = iter . next ( ) ; \n\t\tObject connFactory = binding . getObject ( ) ; \n\t\tif ( connFactory instanceof ActiveMQConnectionFactory ) $F845 } \n\t} \n"}, {"code": "protected $F28584 load ( final InputStream in ) throws $F55616 { \n\tSAXParser saxParser ; \n\t$F58203 ( factory , SAXParserFactory ) try { \n\t\tsaxParser = factory . newSAXParser ( ) ; \n\t\t} \n\tcatch ( final ParserConfigurationException ex ) { \n\t\t$F6287 ( ex ) } \n\tgroups = new LinkedList < URI > $F72 ; \n\tsaxParser . parse ( in , this ) ; \n\treturn groups ; \n\t} \n"}, {"code": "public final void lazySet ( long newValue ) $F171056 ( unsafe , this , valueOffset , newValue ) "}, {"code": "private static $F6689 createEqualityKey ( Node node ) { \n\t$F6691 ( values ) values . add ( node . getNodeType ( ) ) ; \n\tvalues . add ( node . getNodeName ( ) ) ; \n\tvalues . add ( node . getLocalName ( ) ) ; \n\tvalues . add ( node . getNamespaceURI ( ) ) ; \n\tvalues . add ( node . getPrefix ( ) ) ; \n\tvalues . add ( node . getNodeValue ( ) ) ; \n\tfor ( Node child = node . getFirstChild ( ) ; \n\tchild != null ; \n\tchild = child . getNextSibling ( ) ) $F207 ( values , child ) switch $F6708 ( node ) { \n\t\tcase DOCUMENT_TYPE_NODE : DocumentTypeImpl doctype = ( DocumentTypeImpl ) node ; \n\t\tvalues . add ( doctype . getPublicId ( ) ) ; \n\t\tvalues . add ( doctype . getSystemId ( ) ) ; \n\t\tvalues . add ( doctype . getInternalSubset ( ) ) ; \n\t\tvalues . add ( doctype . getEntities ( ) ) ; \n\t\tvalues . add ( doctype . getNotations ( ) ) ; \n\t\t$F597 case ELEMENT_NODE : $F6721 ( element , node ) values . add ( element . getAttributes ( ) ) ; \n\t\t$F597 } \n\treturn values ; \n\t} \n"}, {"code": "$F1309 public static String Collection2String ( $F7922 in , String separator ) { \n\t$F1338 ( in ) return Iterator2String ( in . iterator ( ) , separator ) ; \n\t} \n"}, {"code": "public static $F96 decodeBase64 ( String base64Str ) { \n\treturn DatatypeConverter . parseBase64Binary ( base64Str ) ; \n\t} \n"}, {"code": "protected void removeAllPremoveDrops $F72 { \n\tfor ( PremoveInfo info : premoves . toArray ( new PremoveInfo $F380 ) ) { \n\t\tif ( info . isPremoveDrop ) $F106 ( premoves , info ) } \n\t} \n"}, {"code": "public void testClearBitZero $F72 { \n\t$F45030 int aSign = NUM00 ; \n\tint number = NUM00 ; \n\t$F15143 $F3023 ( aNumber , aSign , aBytes ) $F32957 ( result , aNumber , number ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public static String sayNumber ( StringBuffer appendTo , double number ) throws IllegalArgumentException { \n\tif ( number == Double . MIN_VALUE ) $F825 $F2854 ( number , appendTo ) $F55455 ( abs , Math , number ) if ( abs < POWER_THREE ) { \n\t\tsaySimpleNumber ( appendTo , ( int ) abs ) ; \n\t\t} \n\telse if ( abs < NUM00 ) { \n\t\tint $F303969 ( thousand , abs , POWER_THREE ) ; \n\t\t$F84 ( appendTo ) saySimpleNumber ( appendTo , thousand ) ; \n\t\t} \n\telse if ( abs < POWER_SIX ) { \n\t\tint thousand = ( int ) ( abs % POWER_SIX / POWER_THREE ) ; \n\t\tsaySimpleNumber ( appendTo , thousand ) ; \n\t\t$F84 ( appendTo ) double remainder = abs - thousand * POWER_THREE ; \n\t\tif ( remainder > NUM00 ) { \n\t\t\t$F84 ( appendTo ) sayNumber ( appendTo , remainder ) ; \n\t\t\t} \n\t\t} \n\telse if ( abs < POWER_NINE ) { \n\t\tint million = ( int ) ( abs % POWER_NINE / POWER_SIX ) ; \n\t\tsaySimpleNumber ( appendTo , million ) ; \n\t\t$F84 ( appendTo ) double remainder = abs - million * POWER_SIX ; \n\t\tif ( remainder > NUM00 ) { \n\t\t\t$F84 ( appendTo ) sayNumber ( appendTo , remainder ) ; \n\t\t\t} \n\t\t} \n\telse if ( abs < POWER_TWELVE ) { \n\t\tint billion = ( int ) ( abs % POWER_TWELVE / POWER_NINE ) ; \n\t\tsaySimpleNumber ( appendTo , billion ) ; \n\t\t$F84 ( appendTo ) double remainder = abs - billion * POWER_NINE ; \n\t\tif ( remainder > NUM00 ) { \n\t\t\t$F84 ( appendTo ) sayNumber ( appendTo , remainder ) ; \n\t\t\t} \n\t\t} \n\telse if ( abs < POWER_FIFTEEN ) { \n\t\tint trillion = ( int ) ( abs % POWER_FIFTEEN / POWER_TWELVE ) ; \n\t\tsaySimpleNumber ( appendTo , trillion ) ; \n\t\t$F84 ( appendTo ) double remainder = abs - trillion * POWER_TWELVE ; \n\t\tif ( remainder > NUM00 ) { \n\t\t\t$F84 ( appendTo ) sayNumber ( appendTo , remainder ) ; \n\t\t\t} \n\t\t} \n\telse $F86 ( appendTo ) $F92 ( appendTo ) } \n"}, {"code": "public void stop $F72 { \n\t_throttle . setSpeedSetting ( - NUM00 ) ; \n\t_throttle . setSpeedSetting ( NUM00 ) ; \n\tstopLabel . setIcon ( stopIcon ) ; \n\tstopLabel . setIconTextGap ( _gap ) ; \n\tpack ( ) ; \n\t} \n"}, {"code": "public void encode ( OutputStream out ) throws IOException { \n\t$F19904 ( tmp ) dnName . encode ( tmp ) ; \n\t$F1569 ( out , tmp ) } \n"}, {"code": "public void makeDirty $F72 { \n\tbetaChanged = _BOOL ; \n\tnewMode = _BOOL ; \n\tprecisionChanged = _BOOL ; \n\tregressionInterface . makeDirty ( instance ) ; \n\t} \n"}, {"code": "private $F84864 toArrayList $F72 { \n\t$F91915 ( list ) $F91919 ( p , first , succ , item , list ) return list ; \n\t} \n"}, {"code": "public boolean remove ( HttpConnection connection ) { \n\tTimeValues times = connectionToTimes . remove ( connection ) ; \n\tif ( times == null ) $F95123 ( log , _BOOL ) else { \n\t\treturn System . currentTimeMillis ( ) <= times . timeExpires ; \n\t\t} \n\t} \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F994 ( newVector ) $F1000 ( newVector ) $F9007 ( newVector ) $F1000 ( newVector ) $F1007 ( newVector ) } \n"}, {"code": "private $F3803 split ( String prefix ) { \n\t$F10144 ( parts ) int bracketCount = NUM00 ; \n\tboolean inquotes = _BOOL ; \n\tint lastIndex = NUM00 ; \n\tfor ( $F1088 ( i , prefix ) ) { \n\t\t$F1280 ( c , prefix , i ) if ( c == NUM00 ) $F118993 ( bracketCount ) else if ( c == NUM00 ) { \n\t\t\tinquotes = ! inquotes ; \n\t\t\t$F598 } \n\t\telse if ( c == NUM00 ) { \n\t\t\tbracketCount -- ; \n\t\t\tif ( bracketCount < NUM00 ) $F1666 ( prefix ) $F598 } \n\t\tif ( c == NUM00 && ! inquotes && bracketCount == NUM00 ) { \n\t\t\t$F56997 ( parts , prefix , lastIndex , i ) lastIndex = i + NUM00 ; \n\t\t\t} \n\t\t} \n\tif ( $F1093 ( lastIndex , prefix ) && ! inquotes && bracketCount == NUM00 ) { \n\t\t$F204948 ( parts , prefix , lastIndex ) } \n\treturn parts ; \n\t} \n"}, {"code": "public static long lowerHexToUnsignedLong ( String lowerHex ) { \n\t$F115 ( length , lowerHex ) if $F19274 ( length ) throw isntLowerHexLong ( lowerHex ) ; \n\tint i = length > NUM00 ? length - NUM00 : NUM00 ; \n\tlong result = NUM00 ; \n\tfor ( ; \n\ti < length ; \n\ti ++ ) { \n\t\t$F1280 ( c , lowerHex , i ) result <<= NUM00 ; \n\t\tif $F19295 ( c ) { \n\t\t\tresult |= c - NUM00 ; \n\t\t\t} \n\t\telse if $F19295 ( c ) { \n\t\t\tresult |= c - NUM00 + NUM00 ; \n\t\t\t} \n\t\telse $F34850 ( isntLowerHexLong , lowerHex ) } \n\treturn result ; \n\t} \n"}, {"code": "public static double sampleSkewStandardError ( int size ) { \n\tint n = size ; \n\treturn Math . sqrt ( NUM00 * n * ( n - NUM00 ) / ( ( n - NUM00 ) * ( n + NUM00 ) * ( n + NUM00 ) ) ) ; \n\t} \n"}, {"code": "public void load ( List < PolicyQualifierInfo > policyQualifierInfo ) { \n\tPolicyQualifierInfo [ ] policyQualifierInfoArray = policyQualifierInfo . toArray ( new PolicyQualifierInfo $F2313 ( policyQualifierInfo ) ) ; \n\tArrays . sort ( policyQualifierInfoArray , new PolicyQualifierInfoComparator $F72 ) ; \n\tdata = new Object [ policyQualifierInfoArray . length ] [ NUM00 ] ; \n\tint i = NUM00 ; \n\tfor ( PolicyQualifierInfo policyQualInfo : policyQualifierInfoArray ) { \n\t\tdata [ i ] [ NUM00 ] = policyQualInfo ; \n\t\ti ++ ; \n\t\t} \n\tfireTableDataChanged ( ) ; \n\t} \n"}, {"code": "public void runScript ( Reader reader ) throws IOException , SQLException { \n\ttry { \n\t\tboolean originalAutoCommit = connection . getAutoCommit ( ) ; \n\t\ttry { \n\t\t\tif ( originalAutoCommit != this . autoCommit ) { \n\t\t\t\tconnection . setAutoCommit ( this . autoCommit ) ; \n\t\t\t\t} \n\t\t\trunScript ( connection , reader ) ; \n\t\t\t} \n\t\tfinally { \n\t\t\tconnection . setAutoCommit ( originalAutoCommit ) ; \n\t\t\t} \n\t\t} \n\tcatch ( IOException | SQLException e ) { \n\t\tthrow e ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new RuntimeException ( NUM00 + e , e ) ; \n\t\t} \n\t} \n"}, {"code": "public double doOperation $F72 throws OperatorFailedException { \n\tdouble logq ; \n\tfinal NodeRef root = tree . getRoot ( ) ; \n\tfinal double oldTreeHeight = tree . getNodeHeight ( root ) ; \n\tNodeRef i ; \n\tdo { \n\t\ti = tree . getNode ( MathUtils . nextInt ( tree . getNodeCount ( ) ) ) ; \n\t\t} \n\twhile ( root == i ) ; \n\tfinal NodeRef iP = tree . getParent ( i ) ; \n\tfinal NodeRef CiP = getOtherChild ( tree , iP , i ) ; \n\tfinal NodeRef PiP = tree . getParent ( iP ) ; \n\t$F59591 ( delta , getDelta ) final double oldHeight = tree . getNodeHeight ( iP ) ; \n\tfinal double newHeight = oldHeight + delta ; \n\tif ( delta > NUM00 ) { \n\t\tif ( PiP != null && tree . getNodeHeight ( PiP ) < newHeight ) { \n\t\t\tNodeRef newParent = PiP ; \n\t\t\tNodeRef newChild = iP ; \n\t\t\twhile ( tree . getNodeHeight ( newParent ) < newHeight ) { \n\t\t\t\tnewChild = newParent ; \n\t\t\t\tnewParent = tree . getParent ( newParent ) ; \n\t\t\t\t$F12576 ( newParent ) } \n\t\t\ttree . beginTreeEdit ( ) ; \n\t\t\tif ( tree . isRoot ( newChild ) ) { \n\t\t\t\ttree . removeChild ( iP , CiP ) ; \n\t\t\t\ttree . removeChild ( PiP , iP ) ; \n\t\t\t\ttree . addChild ( iP , newChild ) ; \n\t\t\t\ttree . addChild ( PiP , CiP ) ; \n\t\t\t\ttree . setRoot ( iP ) ; \n\t\t\t\tif ( tree . hasNodeTraits ( ) ) { \n\t\t\t\t\ttree . swapAllTraits ( newChild , iP ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( tree . hasRates ( ) ) { \n\t\t\t\t\tfinal double rootNodeRate = tree . getNodeRate ( newChild ) ; \n\t\t\t\t\ttree . setNodeRate ( newChild , tree . getNodeRate ( iP ) ) ; \n\t\t\t\t\ttree . setNodeRate ( iP , rootNodeRate ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\ttree . removeChild ( iP , CiP ) ; \n\t\t\t\ttree . removeChild ( PiP , iP ) ; \n\t\t\t\ttree . removeChild ( newParent , newChild ) ; \n\t\t\t\ttree . addChild ( iP , newChild ) ; \n\t\t\t\ttree . addChild ( PiP , CiP ) ; \n\t\t\t\ttree . addChild ( newParent , iP ) ; \n\t\t\t\t} \n\t\t\ttree . setNodeHeight ( iP , newHeight ) ; \n\t\t\ttree . endTreeEdit ( ) ; \n\t\t\tfinal int possibleSources = intersectingEdges ( tree , newChild , oldHeight , null ) ; \n\t\t\tlogq = - Math . log ( possibleSources ) ; \n\t\t\t} \n\t\telse { \n\t\t\ttree . setNodeHeight ( iP , newHeight ) ; \n\t\t\tlogq = NUM00 ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( tree . getNodeHeight ( i ) > newHeight ) $F86429 ( Double ) if ( tree . getNodeHeight ( CiP ) > newHeight ) { \n\t\t\t$F59606 newChildren = new ArrayList $F5905 $F72 ; \n\t\t\tfinal int possibleDestinations = intersectingEdges ( tree , CiP , newHeight , newChildren ) ; \n\t\t\tif $F10471 ( newChildren ) $F86429 ( Double ) final int childIndex = MathUtils . nextInt ( newChildren . size ( ) ) ; \n\t\t\tNodeRef newChild = newChildren . get ( childIndex ) ; \n\t\t\t$F59939 ( newParent , tree , newChild ) tree . beginTreeEdit ( ) ; \n\t\t\tif ( tree . isRoot ( iP ) ) { \n\t\t\t\ttree . removeChild ( iP , CiP ) ; \n\t\t\t\ttree . removeChild ( newParent , newChild ) ; \n\t\t\t\ttree . addChild ( iP , newChild ) ; \n\t\t\t\ttree . addChild ( newParent , iP ) ; \n\t\t\t\ttree . setRoot ( CiP ) ; \n\t\t\t\tif ( tree . hasNodeTraits ( ) ) { \n\t\t\t\t\ttree . swapAllTraits ( iP , CiP ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( tree . hasRates ( ) ) { \n\t\t\t\t\tfinal double rootNodeRate = tree . getNodeRate ( iP ) ; \n\t\t\t\t\ttree . setNodeRate ( iP , tree . getNodeRate ( CiP ) ) ; \n\t\t\t\t\ttree . setNodeRate ( CiP , rootNodeRate ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\ttree . removeChild ( iP , CiP ) ; \n\t\t\t\ttree . removeChild ( PiP , iP ) ; \n\t\t\t\ttree . removeChild ( newParent , newChild ) ; \n\t\t\t\ttree . addChild ( iP , newChild ) ; \n\t\t\t\ttree . addChild ( PiP , CiP ) ; \n\t\t\t\ttree . addChild ( newParent , iP ) ; \n\t\t\t\t} \n\t\t\ttree . setNodeHeight ( iP , newHeight ) ; \n\t\t\ttree . endTreeEdit ( ) ; \n\t\t\tlogq = Math . log ( possibleDestinations ) ; \n\t\t\t} \n\t\telse { \n\t\t\ttree . setNodeHeight ( iP , newHeight ) ; \n\t\t\tlogq = NUM00 ; \n\t\t\t} \n\t\t} \n\tif ( swapInRandomRate ) { \n\t\tfinal NodeRef j = tree . getNode ( MathUtils . nextInt ( tree . getNodeCount ( ) ) ) ; \n\t\tif ( j != i ) { \n\t\t\tfinal double tmp = tree . getNodeRate ( i ) ; \n\t\t\ttree . setNodeRate ( i , tree . getNodeRate ( j ) ) ; \n\t\t\ttree . setNodeRate ( j , tmp ) ; \n\t\t\t} \n\t\t} \n\tif ( swapInRandomTrait ) { \n\t\tfinal NodeRef j = tree . getNode ( MathUtils . nextInt ( tree . getNodeCount ( ) ) ) ; \n\t\tif ( j != i ) { \n\t\t\ttree . swapAllTraits ( i , j ) ; \n\t\t\t} \n\t\t} \n\tif ( logq == Double . NEGATIVE_INFINITY ) throw new OperatorFailedException $F580 ; \n\tif ( scaledDirichletBranches ) { \n\t\tif ( oldTreeHeight != tree . getNodeHeight ( tree . getRoot ( ) ) ) throw new OperatorFailedException $F580 ; \n\t\t} \n\treturn logq ; \n\t} \n"}, {"code": "MarkerSegment findMarkerSegment ( Class cls , boolean first ) { \n\tif ( first ) { \n\t\t$F10531 ( iter , markerSequence ) while $F2921 ( iter ) { \n\t\t\tMarkerSegment seg = ( MarkerSegment ) iter . next ( ) ; \n\t\t\tif $F38790 ( cls , seg ) { \n\t\t\t\treturn seg ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tListIterator $F30104 ( iter , markerSequence ) ; \n\t\twhile $F90239 ( iter ) { \n\t\t\tMarkerSegment seg = ( MarkerSegment ) iter . previous ( ) ; \n\t\t\tif $F38790 ( cls , seg ) { \n\t\t\t\treturn seg ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "default Filterable $F4203 removeAll ( final T ... values ) { \n\treturn removeAll ( Stream . of ( values ) ) ; \n\t} \n"}, {"code": "public static $F529 createContentAssocMethod $F71242 ( dctx , rcontext ) throws GenericServiceException , GenericEntityException { \n\t$F118334 ( context , UtilMisc , rcontext ) $F3803 targetOperationList = ContentWorker . prepTargetOperationList ( context , NUM00 ) ; \n\t$F3803 contentPurposeList = ContentWorker . prepContentPurposeList ( context ) ; \n\t$F545 ( context , targetOperationList ) $F545 ( context , contentPurposeList ) $F28491 ( locale , context ) $F6257 ( delegator , dctx ) $F28487 ( dispatcher , dctx ) $F34733 ( result , FastMap ) $F28495 ( contentIdFrom , context ) $F28495 ( contentIdTo , context ) $F28495 ( contentId , context ) int contentIdCount = NUM00 ; \n\tif $F35028 ( UtilValidate , contentIdFrom ) contentIdCount ++ ; \n\tif $F35028 ( UtilValidate , contentIdTo ) contentIdCount ++ ; \n\tif $F35028 ( UtilValidate , contentId ) contentIdCount ++ ; \n\tif ( contentIdCount < NUM00 ) { \n\t\tDebug . logError ( NUM00 , NUM00 ) ; \n\t\t$F34767 ( ServiceUtil , UtilProperties , resource , locale ) } \n\tif $F35028 ( UtilValidate , contentIdFrom ) { \n\t\tif $F4329 ( UtilValidate , contentIdTo ) contentIdTo = contentId ; \n\t\t} \n\tif $F35028 ( UtilValidate , contentIdTo ) { \n\t\tif $F4329 ( UtilValidate , contentIdFrom ) contentIdFrom = contentId ; \n\t\t} \n\tGenericValue contentAssoc = delegator . makeValue ( NUM00 , FastMap . newInstance ( ) ) ; \n\t$F545 ( contentAssoc , contentIdFrom ) $F545 ( contentAssoc , contentIdTo ) $F28502 ( contentAssoc , context ) $F28502 ( contentAssoc , context ) $F28502 ( contentAssoc , context ) Timestamp fromDate = ( Timestamp ) context . get ( NUM00 ) ; \n\tif ( fromDate == null ) { \n\t\tcontentAssoc . put ( NUM00 , UtilDateTime . nowTimestamp ( ) ) ; \n\t\t} \n\telse $F70195 ( contentAssoc , fromDate ) Timestamp thruDate = ( Timestamp ) context . get ( NUM00 ) ; \n\tif ( thruDate == null ) { \n\t\t$F91191 ( contentAssoc ) } \n\telse $F70195 ( contentAssoc , thruDate ) $F28502 ( contentAssoc , context ) $F28502 ( contentAssoc , context ) $F28495 ( upperCoordinateStr , context ) if $F4329 ( UtilValidate , upperCoordinateStr ) { \n\t\t$F91191 ( contentAssoc ) } \n\telse $F70195 ( contentAssoc , upperCoordinateStr ) $F28495 ( leftCoordinateStr , context ) if $F4329 ( UtilValidate , leftCoordinateStr ) { \n\t\t$F91191 ( contentAssoc ) } \n\telse $F70195 ( contentAssoc , leftCoordinateStr ) $F108907 ( userLogin , context ) $F28495 ( userLoginId , userLogin ) String createdByUserLogin = userLoginId ; \n\tString lastModifiedByUserLogin = userLoginId ; \n\tTimestamp createdDate = UtilDateTime . nowTimestamp ( ) ; \n\tTimestamp lastModifiedDate = UtilDateTime . nowTimestamp ( ) ; \n\t$F545 ( contentAssoc , createdByUserLogin ) $F545 ( contentAssoc , lastModifiedByUserLogin ) $F545 ( contentAssoc , createdDate ) $F545 ( contentAssoc , lastModifiedDate ) $F34733 ( serviceInMap , FastMap ) String permissionStatus = null ; \n\t$F28502 ( serviceInMap , context ) $F545 ( serviceInMap , targetOperationList ) $F545 ( serviceInMap , contentPurposeList ) $F28502 ( serviceInMap , context ) $F28502 ( serviceInMap , context ) $F545 ( serviceInMap , contentIdTo ) $F545 ( serviceInMap , contentIdFrom ) $F28502 ( serviceInMap , context ) $F28502 ( serviceInMap , context ) $F28502 ( serviceInMap , context ) $F28502 ( serviceInMap , context ) $F67631 ( permResults ) permResults = dispatcher . runSync ( NUM00 , serviceInMap ) ; \n\t$F68570 ( permissionStatus , permResults ) if $F85112 ( permissionStatus ) { \n\t\t$F52723 ( contentAssoc ) } \n\telse { \n\t\tString errorMsg = ( String ) $F101497 ( permResults , ModelService ) ; \n\t\tresult . put ( ModelService . ERROR_MESSAGE , errorMsg ) ; \n\t\treturn ServiceUtil . returnFailure ( errorMsg ) ; \n\t\t} \n\t$F545 ( result , contentIdTo ) $F545 ( result , contentIdFrom ) $F28502 ( result , contentAssoc ) $F28502 ( result , contentAssoc ) return result ; \n\t} \n"}, {"code": "public void reset ( boolean clear ) { \n\tgotVersion = _BOOL ; \n\tgotHeaderLength = _BOOL ; \n\tgotHeader = _BOOL ; \n\tgotBody = _BOOL ; \n\tgotBodyBoundary = _BOOL ; \n\theaderLength = NUM00 ; \n\tbodyLength = NUM00 ; \n\tbodyBytesReceived = NUM00 ; \n\tif ( clear ) { \n\t\tbufferOffset = NUM00 ; \n\t\t$F725 ( buffer ) bodyFile = null ; \n\t\tif ( bodyStream != null ) { \n\t\t\t$F88744 ( bodyStream , e ) bodyStream = null ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "void removeAt ( final int removeIndex ) { \n\t$F48385 ( items , this ) if ( removeIndex == takeIndex ) { \n\t\titems [ takeIndex ] = null ; \n\t\ttakeIndex = inc ( takeIndex ) ; \n\t\tcount -- ; \n\t\tif ( itrs != null ) itrs . elementDequeued ( ) ; \n\t\t} \n\telse { \n\t\t$F4711 ( putIndex , this ) for ( int i = removeIndex ; \n\t\t; \n\t\t) { \n\t\t\tint next = inc ( i ) ; \n\t\t\tif ( next != putIndex ) { \n\t\t\t\titems [ i ] = items [ next ] ; \n\t\t\t\ti = next ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\titems [ i ] = null ; \n\t\t\t\tthis . putIndex = i ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\tcount -- ; \n\t\tif ( itrs != null ) itrs . removedAt ( removeIndex ) ; \n\t\t} \n\t$F702 ( notFull ) } \n"}, {"code": "private void saveAndClose ( boolean save ) { \n\tcontent . setEnabled ( _BOOL ) ; \n\t$F134511 ( timer ) $F134511 ( timerNextSync ) if ( save ) { \n\t\t$F13527 ( Log , LOG_TAG ) saveData ( null ) ; \n\t\t} \n\telse $F13573 ( Log , LOG_TAG ) Intent $F192736 ( data ) ; \n\tdata . setAction ( Intent . ACTION_VIEW ) ; \n\tdata . putExtra ( PARAM_NOTE , note ) ; \n\tdata . putExtra ( PARAM_NOTE_POSITION , notePosition ) ; \n\tsetResult ( RESULT_OK , data ) ; \n\tfinish ( ) ; \n\t} \n"}, {"code": "public static Uri addMessage ( ContentResolver resolver , String address , String body , String subject , Long date , boolean deliveryReport , long threadId ) { \n\tfinal Uri CONTENT_URI = Uri . parse ( NUM00 ) ; \n\treturn addMessageToUri ( resolver , CONTENT_URI , address , body , subject , date , _BOOL , deliveryReport , threadId ) ; \n\t} \n"}, {"code": "public static $F4203 void blockingSubscribePrint ( Observable $F4203 observable , String name ) { \n\tCountDownLatch latch = new CountDownLatch $F989 ; \n\tsubscribePrint ( observable . finallyDo ( null ) , name ) ; \n\ttry $F24081 ( latch ) $F887 } \n"}, {"code": "public static final double calcNiceNumber ( final double RANGE , final boolean ROUND ) { \n\tdouble niceFraction ; \n\tdouble exponent = Math . floor ( Math . log10 ( RANGE ) ) ; \n\tdouble fraction = RANGE / Math . pow ( NUM00 , exponent ) ; \n\tif ( ROUND ) { \n\t\tif ( Double . compare ( fraction , NUM00 ) < NUM00 ) { \n\t\t\tniceFraction = NUM00 ; \n\t\t\t} \n\t\telse if ( Double . compare ( fraction , NUM00 ) < NUM00 ) { \n\t\t\tniceFraction = NUM00 ; \n\t\t\t} \n\t\telse if ( Double . compare ( fraction , NUM00 ) < NUM00 ) { \n\t\t\tniceFraction = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tniceFraction = NUM00 ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( Double . compare ( fraction , NUM00 ) <= NUM00 ) { \n\t\t\tniceFraction = NUM00 ; \n\t\t\t} \n\t\telse if ( Double . compare ( fraction , NUM00 ) <= NUM00 ) { \n\t\t\tniceFraction = NUM00 ; \n\t\t\t} \n\t\telse if ( Double . compare ( fraction , NUM00 ) <= NUM00 ) { \n\t\t\tniceFraction = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tniceFraction = NUM00 ; \n\t\t\t} \n\t\t} \n\treturn niceFraction * Math . pow ( NUM00 , exponent ) ; \n\t} \n"}, {"code": "private final Object internalReplace ( Object k , Object v , Object cv ) { \n\t$F35151 ( h , spread , k ) Object oldVal = null ; \n\tfor ( $F46551 tab = table ; \n\t; \n\t) { \n\t\tNode f ; \n\t\tint i , fh ; \n\t\tObject fk ; \n\t\tif ( tab == null || ( f = tabAt ( tab , i = $F33765 ( tab ) & h ) ) == null ) $F597 else if $F35162 ( fh , f , MOVED ) { \n\t\t\tif ( ( fk = f . key ) instanceof TreeBin ) { \n\t\t\t\tTreeBin t = ( TreeBin ) fk ; \n\t\t\t\tboolean validated = _BOOL ; \n\t\t\t\tboolean deleted = _BOOL ; \n\t\t\t\tt . acquire ( NUM00 ) ; \n\t\t\t\ttry { \n\t\t\t\t\tif ( tabAt ( tab , i ) == f ) { \n\t\t\t\t\t\tvalidated = _BOOL ; \n\t\t\t\t\t\tTreeNode p = t . getTreeNode ( h , k , t . root ) ; \n\t\t\t\t\t\tif ( p != null ) { \n\t\t\t\t\t\t\tObject pv = p . val ; \n\t\t\t\t\t\t\tif ( cv == null || cv == pv || cv . equals ( pv ) ) { \n\t\t\t\t\t\t\t\toldVal = pv ; \n\t\t\t\t\t\t\t\tif ( ( p . val = v ) == null ) { \n\t\t\t\t\t\t\t\t\tdeleted = _BOOL ; \n\t\t\t\t\t\t\t\t\tt . deleteTreeNode ( p ) ; \n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\tfinally { \n\t\t\t\t\tt . release ( NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( validated ) { \n\t\t\t\t\tif ( deleted ) counter . add ( - NUM00 ) ; \n\t\t\t\t\t$F597 } \n\t\t\t\t} \n\t\t\telse tab = ( $F46551 ) fk ; \n\t\t\t} \n\t\telse if ( ( fh & HASH_BITS ) != h && f . next == null ) $F597 else if $F18594 ( fh , LOCKED ) { \n\t\t\tcheckForResize ( ) ; \n\t\t\tf . tryAwaitLock ( tab , i ) ; \n\t\t\t} \n\t\telse if ( f . casHash ( fh , fh | LOCKED ) ) { \n\t\t\tboolean validated = _BOOL ; \n\t\t\tboolean deleted = _BOOL ; \n\t\t\ttry { \n\t\t\t\tif ( tabAt ( tab , i ) == f ) { \n\t\t\t\t\tvalidated = _BOOL ; \n\t\t\t\t\tfor ( Node e = f , pred = null ; \n\t\t\t\t\t; \n\t\t\t\t\t) { \n\t\t\t\t\t\tObject ek , ev ; \n\t\t\t\t\t\tif ( ( e . hash & HASH_BITS ) == h && ( ( ev = e . val ) != null ) && ( ( ek = e . key ) == k || k . equals ( ek ) ) ) { \n\t\t\t\t\t\t\tif ( cv == null || cv == ev || cv . equals ( ev ) ) { \n\t\t\t\t\t\t\t\toldVal = ev ; \n\t\t\t\t\t\t\t\tif ( ( e . val = v ) == null ) { \n\t\t\t\t\t\t\t\t\tdeleted = _BOOL ; \n\t\t\t\t\t\t\t\t\tNode en = e . next ; \n\t\t\t\t\t\t\t\t\tif ( pred != null ) pred . next = en ; \n\t\t\t\t\t\t\t\t\telse setTabAt ( tab , i , en ) ; \n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t$F597 } \n\t\t\t\t\t\tpred = e ; \n\t\t\t\t\t\t$F35184 ( e ) } \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tfinally { \n\t\t\t\tif ( ! f . casHash ( fh | LOCKED , fh ) ) { \n\t\t\t\t\tf . hash = fh ; \n\t\t\t\t\t$F30292 ( f ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( validated ) { \n\t\t\t\tif ( deleted ) counter . add ( - NUM00 ) ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t} \n\treturn oldVal ; \n\t} \n"}, {"code": "private static final boolean copyHeader ( String name , String fromReq , StringBuffer buf ) { \n\t$F12747 ( start , fromReq , name ) if ( start != - NUM00 ) { \n\t\t$F12712 ( end , fromReq , start ) if ( end != - NUM00 ) { \n\t\t\tbuf . append ( fromReq . subSequence ( start - NUM00 , end ) ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void sendMetric ( final String name , final double value ) { \n\tlogger . debug ( String . format ( NUM00 , name , value ) ) ; \n\tif ( telemetryClient != null ) { \n\t\ttelemetryClient . trackMetric ( name , value ) ; \n\t\t} \n\t} \n"}, {"code": "default Document putAll ( Iterable < Field > fields , Predicate $F11616 acceptableFieldNames ) { \n\tfor ( Field field : fields ) { \n\t\tif ( acceptableFieldNames . test ( field . getName ( ) ) ) { \n\t\t\tsetValue ( field . getName ( ) , field . getValue ( ) ) ; \n\t\t\t} \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "public static URL findResourceBase ( String baseResource , ClassLoader loader ) { \n\tURL url = loader . getResource ( baseResource ) ; \n\treturn findResourceBase ( url , baseResource ) ; \n\t} \n"}, {"code": "public String toEPL ( EPStatementFormatter formatter ) { \n\t$F29429 ( writer ) toEPL ( formatter , writer ) ; \n\t$F92 ( writer ) } \n"}, {"code": "public boolean isSpecified ( int index ) { \n\tif ( ( index < NUM00 ) || ( index >= mLength ) ) $F8224 String str = $F107987 ( mItems , index ) ; \n\treturn ( ( str != null ) ? $F4432 ( str ) : _BOOL ) ; \n\t} \n"}, {"code": "public StatArchiveReader ( String archiveName ) throws IOException { \n\tthis ( new File [ ] { \n\t\tnew File ( archiveName ) } \n\t, null , _BOOL ) ; \n\t} \n"}, {"code": "private static void initAdbSocketAddr $F72 { \n\ttry { \n\t\tsAdbServerPort = getAdbServerPort ( ) ; \n\t\t$F123267 ( hostAddr , InetAddress , DEFAULT_ADB_HOST ) sSocketAddr = new InetSocketAddress ( hostAddr , sAdbServerPort ) ; \n\t\t} \n\tcatch ( UnknownHostException e ) $F845 } \n"}, {"code": "public int read $F139836 ( fileOffset , buffer , offset , length ) throws IOException { \n\t_file . seek ( fileOffset ) ; \n\treturn _file . read ( buffer , offset , length ) ; \n\t} \n"}, {"code": "private boolean matchesAnyTag ( String tagName ) $F298 ( tagNames , tagName ) "}, {"code": "default void shutdown $F72 { \n\tPlatform . exit ( ) ; \n\t} \n"}, {"code": "public boolean isExpanded ( int row ) { \n\tTreeUI tree = getUI ( ) ; \n\tif ( tree != null ) { \n\t\tTreePath path = tree . getPathForRow ( this , row ) ; \n\t\tif ( path != null ) { \n\t\t\t$F45979 ( value , expandedState , path ) return ( value != null && value . booleanValue ( ) ) ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private static int labelEnd ( String s ) { \n\t$F1384 ( colonIndex , s ) $F1384 ( semicolonIndex , s ) if ( ( semicolonIndex == - NUM00 ) || ( colonIndex < semicolonIndex ) ) { \n\t\treturn colonIndex ; \n\t\t} \n\telse $F7629 } \n"}, {"code": "$F120605 ( listener , mListeners ) "}, {"code": "public HttpMethodInfo ( Method method , Object handler , $F131 args , MultivaluedMap $F528 formParameters , Response responder ) { \n\tthis . method = method ; \n\tthis . handler = handler ; \n\t$F17879 ( this , Arrays , args ) this . formParameters = formParameters ; \n\tthis . responder = responder ; \n\t} \n"}, {"code": "public static boolean equals ( $F31427 ( field1 ) , $F31427 ( field2 ) ) { \n\tint index1 = NUM00 ; \n\t$F180531 ( length1 , field1 ) int index2 = NUM00 ; \n\t$F180531 ( length2 , field2 ) while ( _BOOL ) { \n\t\twhile ( index1 < length1 && field1 [ index1 ] == null ) { \n\t\t\tindex1 ++ ; \n\t\t\t} \n\t\twhile ( index2 < length2 && field2 [ index2 ] == null ) { \n\t\t\tindex2 ++ ; \n\t\t\t} \n\t\tboolean atEndOf1 = index1 >= length1 ; \n\t\tboolean atEndOf2 = index2 >= length2 ; \n\t\tif ( atEndOf1 && atEndOf2 ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse if ( atEndOf1 != atEndOf2 ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse if ( ! Arrays . equals ( field1 [ index1 ] , field2 [ index2 ] ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tindex1 ++ ; \n\t\tindex2 ++ ; \n\t\t} \n\t} \n"}, {"code": "private void drawText ( int x1 , int y1 , int s , boolean e_or_n , Graphics g ) { \n\t$F86453 ( oldColor , g ) $F58295 ( g ) if ( m_FontColor == null ) { \n\t\t$F129587 ( g , Color ) } \n\telse $F158293 ( g , m_FontColor ) String st ; \n\tif ( e_or_n ) { \n\t\tEdge e = m_edges [ s ] . m_edge ; \n\t\tfor ( int noa = NUM00 ; \n\t\t( st = e . getLine ( noa ) ) != null ; \n\t\tnoa ++ ) { \n\t\t\tg . drawString ( st , ( m_edges [ s ] . m_width - m_fontSize . stringWidth ( st ) ) / NUM00 + x1 , y1 + ( noa + NUM00 ) * m_fontSize . getHeight ( ) ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tNode e = m_nodes [ s ] . m_node ; \n\t\tfor ( int noa = NUM00 ; \n\t\t( st = e . getLine ( noa ) ) != null ; \n\t\tnoa ++ ) { \n\t\t\tg . drawString ( st , ( m_nodes [ s ] . m_width - m_fontSize . stringWidth ( st ) ) / NUM00 + x1 , y1 + ( noa + NUM00 ) * m_fontSize . getHeight ( ) ) ; \n\t\t\t} \n\t\t} \n\tg . setColor ( oldColor ) ; \n\t} \n"}, {"code": "public void update ( List < Race > races ) { \n\t$F2329 ( currentRace ) if $F105 ( races , currentRace ) { \n\t\tsetRace ( races . get ( races . indexOf ( currentRace ) ) ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean required $F72 { \n\treturn _parameterMetadata . contains ( Metadata . REQUIRED ) ; \n\t} \n"}, {"code": "protected void sendDataToReceiver ( ResultReceiver receiver , Intent originalIntent , Serializable data ) { \n\tif ( receiver != null && data != null ) { \n\t\t$F53033 ( bundle ) bundle . putParcelable ( ServiceReceiver . EXTRA_ORIGINAL_INTENT , originalIntent ) ; \n\t\tbundle . putSerializable ( ServiceReceiver . EXTRA_DATA , data ) ; \n\t\treceiver . send ( ServiceReceiver . STATUS_DATA , bundle ) ; \n\t\t} \n\t} \n"}, {"code": "private static Object matchOrReplace ( Context cx , Scriptable scope , Scriptable thisObj , $F131 args , RegExpImpl reImpl , GlobData data , boolean forceFlat ) { \n\tNativeRegExp re ; \n\t$F4074 ( str , ScriptRuntime , thisObj ) data . str = str ; \n\tScriptable topScope = ScriptableObject . getTopLevelScope ( scope ) ; \n\tif $F9634 ( args ) { \n\t\tObject compiled = NativeRegExp . compileRE ( cx , NUM00 , NUM00 , _BOOL ) ; \n\t\tre = new NativeRegExp ( topScope , compiled ) ; \n\t\t} \n\telse if ( args [ NUM00 ] instanceof NativeRegExp ) { \n\t\tre = ( NativeRegExp ) args [ NUM00 ] ; \n\t\t} \n\telse { \n\t\tString src = ScriptRuntime . toString ( args [ NUM00 ] ) ; \n\t\tString opt ; \n\t\tif ( data . optarg < args . length ) { \n\t\t\targs [ NUM00 ] = src ; \n\t\t\topt = ScriptRuntime . toString ( args [ data . optarg ] ) ; \n\t\t\t} \n\t\telse { \n\t\t\topt = null ; \n\t\t\t} \n\t\tObject compiled = NativeRegExp . compileRE ( cx , src , opt , forceFlat ) ; \n\t\tre = new NativeRegExp ( topScope , compiled ) ; \n\t\t} \n\tdata . global = ( re . getFlags ( ) & NativeRegExp . JSREG_GLOB ) != NUM00 ; \n\t$F2027 indexp = $F15140 ; \n\tObject result = null ; \n\tif ( data . mode == RA_SEARCH ) { \n\t\tresult = re . executeRegExp ( cx , scope , reImpl , str , indexp , NativeRegExp . TEST ) ; \n\t\tif ( result != null && result . equals ( Boolean . TRUE ) ) result = Integer . valueOf ( reImpl . leftContext . length ) ; \n\t\telse result = $F43818 ( Integer ) ; \n\t\t} \n\telse if ( data . global ) { \n\t\tre . lastIndex = NUM00 ; \n\t\tfor ( int count = NUM00 ; \n\t\tindexp [ NUM00 ] <= str . length ( ) ; \n\t\tcount ++ ) { \n\t\t\tresult = re . executeRegExp ( cx , scope , reImpl , str , indexp , NativeRegExp . TEST ) ; \n\t\t\tif ( result == null || ! result . equals ( Boolean . TRUE ) ) $F597 if ( data . mode == RA_MATCH ) { \n\t\t\t\tmatch_glob ( data , cx , scope , count , reImpl ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( data . mode != RA_REPLACE ) Kit . codeBug ( ) ; \n\t\t\t\tSubString lastMatch = reImpl . lastMatch ; \n\t\t\t\tint leftIndex = data . leftIndex ; \n\t\t\t\tint leftlen = lastMatch . index - leftIndex ; \n\t\t\t\tdata . leftIndex = lastMatch . index + lastMatch . length ; \n\t\t\t\treplace_glob ( data , cx , scope , reImpl , leftIndex , leftlen ) ; \n\t\t\t\t} \n\t\t\tif ( reImpl . lastMatch . length == NUM00 ) { \n\t\t\t\tif ( indexp [ NUM00 ] == str . length ( ) ) $F597 indexp [ NUM00 ] ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tresult = re . executeRegExp ( cx , scope , reImpl , str , indexp , ( ( data . mode == RA_REPLACE ) ? NativeRegExp . TEST : NativeRegExp . MATCH ) ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public void tableSwitch ( final $F2027 keys , final TableSwitchGenerator generator , final boolean useTable ) { \n\tfor ( $F9808 ( i , keys ) ) { \n\t\tif $F15531 ( keys , i ) $F825 } \n\tLabel def = newLabel ( ) ; \n\tLabel end = newLabel ( ) ; \n\tif $F3305 ( keys ) { \n\t\tint len = keys . length ; \n\t\tint min = keys [ NUM00 ] ; \n\t\tint max = keys [ len - NUM00 ] ; \n\t\tint range = max - min + NUM00 ; \n\t\tif ( useTable ) { \n\t\t\t$F15537 ( labels , range ) Arrays . fill ( labels , def ) ; \n\t\t\tfor ( $F1316 ( i , len ) ) { \n\t\t\t\tlabels [ keys [ i ] - min ] = newLabel ( ) ; \n\t\t\t\t} \n\t\t\tmv . visitTableSwitchInsn ( min , max , def , labels ) ; \n\t\t\tfor ( $F1316 ( i , range ) ) { \n\t\t\t\tLabel label = labels [ i ] ; \n\t\t\t\tif ( label != def ) { \n\t\t\t\t\tmark ( label ) ; \n\t\t\t\t\tgenerator . generateCase ( i + min , end ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\t$F15537 ( labels , len ) for ( $F1316 ( i , len ) ) $F15546 ( labels , i , newLabel ) mv . visitLookupSwitchInsn ( def , keys , labels ) ; \n\t\t\tfor ( $F1316 ( i , len ) ) { \n\t\t\t\tmark ( labels [ i ] ) ; \n\t\t\t\tgenerator . generateCase ( keys [ i ] , end ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tmark ( def ) ; \n\tgenerator . generateDefault ( ) ; \n\tmark ( end ) ; \n\t} \n"}, {"code": "public void print ( PrintWriter output , int w , int d ) { \n\t$F125026 ( format ) $F196676 ( format , Locale ) $F196677 ( format ) format . setMaximumFractionDigits ( d ) ; \n\tformat . setMinimumFractionDigits ( d ) ; \n\tformat . setGroupingUsed ( _BOOL ) ; \n\tprint ( output , format , w + NUM00 ) ; \n\t} \n"}, {"code": "public static $F11685 $F144321 newSetFromMap ( Map < E , Boolean > map ) { \n\tif $F2979 ( map ) { \n\t\treturn new SetFromMap $F11685 ( map ) ; \n\t\t} \n\t$F10056 } \n"}, {"code": "public void removeBiomeType ( BiomeDictionary . Type type ) { \n\tArrayList $F153543 entryList = new ArrayList $F153543 $F72 ; \n\tentryList . addAll ( Arrays . asList ( BiomeDictionary . getBiomesForType ( type ) ) ) ; \n\tfor ( BiomeGenBase biome : entryList ) { \n\t\tIterator < BiomeEntry > iterator = allowedBiomes . iterator ( ) ; \n\t\twhile $F2921 ( iterator ) { \n\t\t\tif ( BiomeDictionary . areBiomesEquivalent ( iterator . next ( ) . biome , biome ) ) $F7042 ( iterator ) } \n\t\t} \n\t} \n"}, {"code": "static SizeRequirements calculateTiledRequirements ( LayoutIterator iter , SizeRequirements r ) { \n\tlong minimum = NUM00 ; \n\tlong maximum = NUM00 ; \n\tlong preferred = NUM00 ; \n\tint lastMargin = NUM00 ; \n\tint totalSpacing = NUM00 ; \n\t$F23386 ( n , iter ) for ( $F119 ( i , n ) ) { \n\t\titer . setIndex ( i ) ; \n\t\tint margin0 = lastMargin ; \n\t\tint margin1 = ( int ) iter . getLeadingCollapseSpan ( ) ; \n\t\ttotalSpacing += Math . max ( margin0 , margin1 ) ; \n\t\tpreferred += ( int ) iter . getPreferredSpan ( NUM00 ) ; \n\t\tminimum += iter . getMinimumSpan ( NUM00 ) ; \n\t\tmaximum += iter . getMaximumSpan ( NUM00 ) ; \n\t\tlastMargin = ( int ) iter . getTrailingCollapseSpan ( ) ; \n\t\t} \n\ttotalSpacing += lastMargin ; \n\ttotalSpacing += NUM00 * iter . getBorderWidth ( ) ; \n\tminimum += totalSpacing ; \n\tpreferred += totalSpacing ; \n\tmaximum += totalSpacing ; \n\tif ( r == null ) { \n\t\tr = new SizeRequirements $F72 ; \n\t\t} \n\tr . minimum = ( minimum > Integer . MAX_VALUE ) ? Integer . MAX_VALUE : ( int ) minimum ; \n\tr . preferred = ( preferred > Integer . MAX_VALUE ) ? Integer . MAX_VALUE : ( int ) preferred ; \n\tr . maximum = ( maximum > Integer . MAX_VALUE ) ? Integer . MAX_VALUE : ( int ) maximum ; \n\treturn r ; \n\t} \n"}, {"code": "public static void writePaddedInteger ( Writer out , long value , int size ) throws IOException { \n\t$F29204 ( intValue , value ) if ( intValue == value ) { \n\t\twritePaddedInteger ( out , intValue , size ) ; \n\t\t} \n\telse if ( size <= NUM00 ) { \n\t\t$F3412 ( out , Long , value ) } \n\telse { \n\t\tif ( value < NUM00 ) { \n\t\t\t$F3410 ( out ) if ( value != Long . MIN_VALUE ) $F52810 ( value ) else { \n\t\t\t\tfor ( ; \n\t\t\t\tsize > NUM00 ; \n\t\t\t\tsize -- ) $F12032 ( out ) $F3410 ( out ) $F665 } \n\t\t\t} \n\t\tint digits = ( int ) $F159551 ( Math , value , LOG_10 ) + NUM00 ; \n\t\tfor ( ; \n\t\tsize > digits ; \n\t\tsize -- ) $F12032 ( out ) $F3412 ( out , Long , value ) } \n\t} \n"}, {"code": "private static LDAPFilter createORFilter ( FilterSet filterSet ) throws LDAPException , IOException { \n\tList < JAXBElement $F1011 > list = filterSet . getFilterGroup ( ) ; \n\tArrayList < RawFilter > $F719 ( filters , list ) ; \n\tfor ( JAXBElement $F1011 filter : list ) $F3762 ( filters , createFilter , filter ) return LDAPFilter . createORFilter ( filters ) ; \n\t} \n"}, {"code": "private void sendBlob $F84589 ( index , blob ) { \n\tsendInstruction ( new GuacamoleInstruction ( NUM00 , index , DatatypeConverter . printBase64Binary ( blob ) ) ) ; \n\t} \n"}, {"code": "protected void defineLabels $F72 { \n\tlabelsValues = calcLabels ( ) ; \n\tif ( handleValues ) labels = getLabelsFromValues ( ) ; \n\telse labels = getLabelsFromData ( ) ; \n\t$F8935 ( nLabels , labels ) } \n"}, {"code": "public static Set < Interval > mergeIntervalToSet ( Set < Interval > intervals , Interval intervalToMerge ) { \n\tLinkedHashSet < Interval > copyOfOriginalSet = new $F22301 ( intervals ) ; \n\tcopyOfOriginalSet . add ( intervalToMerge ) ; \n\treturn mergeIntervalSet ( copyOfOriginalSet ) ; \n\t} \n"}, {"code": "public static String dropWhile ( GString self , @ ClosureParams ( $F158693 , conflictResolutionStrategy = PickFirstResolver . class , $F158694 ) Closure condition ) $F38748 ( dropWhile , self , condition ) "}, {"code": "public void addNode ( TopologicalNode node ) $F207 ( nodeList , node ) "}, {"code": "public void printText ( String text ) { \n\tview . print ( text , text . endsWith ( NUM00 ) ) ; \n\tfor ( ActionDelegate actionDelegate : actionDelegates ) { \n\t\tactionDelegate . onConsoleOutput ( this ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void trim $F72 { \n\tif ( counter < x . length ) { \n\t\t$F4120 ( y , counter ) $F135 ( System , x , y , counter ) x = y ; \n\t\tresizeValues ( counter ) ; \n\t\t} \n\t} \n"}, {"code": "private void divide ( $F2027 idx , $F1986 data , ArrayList $F9183 ret , int start , int end , int depth ) { \n\tif ( depth == NUM00 ) { \n\t\t$F2027 a = Arrays . copyOfRange ( idx , start , end ) ; \n\t\tArrays . sort ( a ) ; \n\t\tret . add ( a ) ; \n\t\t$F665 } \n\tfinal int count = end - start ; \n\tif ( count == NUM00 ) { \n\t\tfor ( int j = NUM00 < < depth ; \n\t\tj > NUM00 ; \n\t\t-- j ) { \n\t\t\tret . add ( $F4468 ) ; \n\t\t\t} \n\t\t$F665 } \n\tdouble m = NUM00 ; \n\tfor ( int i = start ; \n\ti < end ; \n\ti ++ ) { \n\t\tm += data [ i ] ; \n\t\t} \n\tm /= count ; \n\tint pos = Arrays . binarySearch ( data , start , end , m ) ; \n\tif ( pos >= NUM00 ) { \n\t\tfinal int opt = ( start + end ) > > NUM00 ; \n\t\twhile ( data [ pos ] == m ) { \n\t\t\tif ( pos < opt ) { \n\t\t\t\tpos ++ ; \n\t\t\t\t} \n\t\t\telse if ( pos > opt ) { \n\t\t\t\tpos -- ; \n\t\t\t\t} \n\t\t\telse $F5153 } \n\t\t} \n\telse { \n\t\tpos = ( - pos - NUM00 ) ; \n\t\t} \n\tdivide ( idx , data , ret , start , pos , depth - NUM00 ) ; \n\tdivide ( idx , data , ret , pos , end , depth - NUM00 ) ; \n\t} \n"}, {"code": "void assertThreadsStayAlive ( long millis , Thread ... threads ) { \n\ttry { \n\t\tdelay ( millis ) ; \n\t\tfor ( Thread thread : threads ) assertTrue ( thread . isAlive ( ) ) ; \n\t\t} \n\tcatch ( InterruptedException fail ) $F1210 ( threadFail ) } \n"}, {"code": "public AbstractWorkerManager ( String id ) { \n\t_id = id ; \n\t_status = new WorkerManagerStatus $F72 ; \n\tsetExecutionMode ( EXECUTION_MODE . NON_SERIAL ) ; \n\tsetupExecutor ( ) ; \n\t} \n"}, {"code": "$F1 public void applyInline $F196672 ( data , pos , len ) { \n\tint i ; \n\t$F9662 ( dataOut , len ) if ( len > real . length ) $F825 int middle = len / NUM00 + len % NUM00 ; \n\t$F135 ( System , data , dataOut , len ) System . arraycopy ( dataOut , pos + middle , real , NUM00 , len - middle ) ; \n\tSystem . arraycopy ( dataOut , pos , real , real . length - middle , middle ) ; \n\tif ( real . length > len ) Arrays . fill ( real , len - middle , real . length - middle , NUM00 ) ; \n\tArrays . fill ( imag , NUM00 , imag . length , NUM00 ) ; \n\tFFT . transform ( real , imag , _BOOL ) ; \n\tprocess ( real , imag ) ; \n\tFFT . transform ( real , imag , _BOOL ) ; \n\tSystem . arraycopy ( real , NUM00 , dataOut , pos + middle , len - middle ) ; \n\tSystem . arraycopy ( real , real . length - middle , dataOut , pos , middle ) ; \n\tdouble origAvgEnergy = SignalProcUtils . getAverageSampleEnergy ( data , len ) ; \n\tfor ( i = NUM00 ; \n\ti < len ; \n\ti ++ ) data [ i ] = amount * dataOut [ i ] + oneMinusAmount * data [ i ] ; \n\tdouble newAvgEnergy = SignalProcUtils . getAverageSampleEnergy ( data , len ) ; \n\tdouble scale = origAvgEnergy / newAvgEnergy ; \n\tfor ( i = NUM00 ; \n\ti < len ; \n\ti ++ ) data [ i ] *= NUM00 * scale ; \n\t} \n"}, {"code": "@ OnMessage public void onMessage ( String message , Session session ) $F228450 ( callInternal , session , message ) "}, {"code": "public final boolean insert_via ( BrdViaInfo p_via_info , PlaPointInt p_location , NetNosList p_net_no_arr , int p_trace_clearance_class_no , $F2027 p_trace_pen_halfwidth_arr , int p_max_recursion_depth , int p_max_via_recursion_depth , int p_pull_tight_accuracy , int p_pull_tight_time_limit ) { \n\tshove_fail_clear ( ) ; \n\tchanged_area_clear ( ) ; \n\tboolean r_ok = shove_via_algo . shove_via_insert ( p_via_info , p_location , p_net_no_arr , p_trace_clearance_class_no , p_trace_pen_halfwidth_arr , p_max_recursion_depth , p_max_via_recursion_depth ) ; \n\t$F25096 ( r_ok , _BOOL ) NetNosList opt_net_no_arr = p_max_recursion_depth <= NUM00 ? p_net_no_arr : NetNosList . EMPTY ; \n\tTimeLimitStoppable t_limit = new TimeLimitStoppable ( s_PREVENT_ENDLESS_LOOP ) ; \n\tchanged_area_optimize ( opt_net_no_arr , p_pull_tight_accuracy , null , t_limit , null ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "boolean thresholdExceeded ( final Set < IBindingSet > distinctProjectionBuffer , final int distinctProjectionBufferThreshold , final List < IBindingSet > incomingBindingsBuffer , final int incomingBindingsBufferThreshold ) { \n\treturn distinctProjectionBuffer . size ( ) >= distinctProjectionBufferThreshold || incomingBindingsBuffer . size ( ) >= incomingBindingsBufferThreshold ; \n\t} \n"}, {"code": "public static $F96 toByteArray ( String str ) { \n\t$F1749 ( len , str ) $F17727 ( st , str ) $F806 newStrArray = new String $F49889 ( st ) ; \n\tint j = NUM00 ; \n\twhile $F14498 ( st ) { \n\t\tnewStrArray [ j ] = st . nextToken ( ) ; \n\t\tj ++ ; \n\t\t} \n\t$F82619 ( ret , newStrArray ) int tmp ; \n\tfor ( $F1139 ( i , newStrArray ) ) { \n\t\ttmp = Integer . parseInt ( newStrArray [ i ] , NUM00 ) ; \n\t\tret [ i ] = ( byte ) ( tmp - NUM00 ) ; \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "public static boolean nullEquals ( String s1 , String s2 ) $F66007 ( s1 , s2 ) "}, {"code": "private $F1469 fFormatDigits ( final double x ) { \n\tString sx ; \n\tint i , j , k ; \n\tfinal int n1In ; \n\tfinal int n2In ; \n\tint expon = NUM00 ; \n\tboolean minusSign = _BOOL ; \n\tif ( x > NUM00 ) $F216901 ( sx , Double , x ) else if ( x < NUM00 ) { \n\t\tsx = Double . toString ( - x ) ; \n\t\tminusSign = _BOOL ; \n\t\t} \n\telse { \n\t\tsx = Double . toString ( x ) ; \n\t\tif $F4432 ( sx ) { \n\t\t\tminusSign = _BOOL ; \n\t\t\t$F3108 ( sx ) } \n\t\t} \n\t$F46662 ( ePos , sx ) $F46662 ( rPos , sx ) if ( rPos != - NUM00 ) { \n\t\tn1In = rPos ; \n\t\t} \n\telse if ( ePos != - NUM00 ) { \n\t\tn1In = ePos ; \n\t\t} \n\telse $F12713 ( n1In , sx ) if ( rPos != - NUM00 ) { \n\t\tif ( ePos != - NUM00 ) { \n\t\t\tn2In = ePos - rPos - NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tn2In = sx . length ( ) - rPos - NUM00 ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tn2In = NUM00 ; \n\t\t} \n\tif ( ePos != - NUM00 ) { \n\t\tint ie = ePos + NUM00 ; \n\t\texpon = NUM00 ; \n\t\tif $F11983 ( sx , ie ) { \n\t\t\tfor ( ++ ie ; \n\t\t\tie < sx . length ( ) ; \n\t\t\tie ++ ) { \n\t\t\t\tif $F20317 ( sx , ie ) $F5153 } \n\t\t\tif $F7007 ( ie , sx ) { \n\t\t\t\texpon = - Integer . parseInt ( sx . substring ( ie ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif $F11983 ( sx , ie ) { \n\t\t\t\t++ ie ; \n\t\t\t\t} \n\t\t\tfor ( $F93943 ( ie , sx ) ) { \n\t\t\t\tif $F20317 ( sx , ie ) $F5153 } \n\t\t\tif $F7007 ( ie , sx ) { \n\t\t\t\texpon = Integer . parseInt ( sx . substring ( ie ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tfinal int p ; \n\tif ( precisionSet ) { \n\t\tp = precision ; \n\t\t} \n\telse { \n\t\tp = defaultDigits - NUM00 ; \n\t\t} \n\t$F9609 ( ca1 , sx ) final $F1469 ca2 = new char [ n1In + n2In ] ; \n\tfinal $F1469 ca3 ; \n\tfinal $F1469 ca4 ; \n\tfinal $F1469 ca5 ; \n\tfor ( j = NUM00 ; \n\tj < n1In ; \n\tj ++ ) $F15086 ( ca2 , j , ca1 ) i = j + NUM00 ; \n\tfor ( k = NUM00 ; \n\tk < n2In ; \n\tj ++ , i ++ , k ++ ) $F20651 ( ca2 , j , ca1 , i ) if ( n1In + expon <= NUM00 ) { \n\t\tca3 = new char [ - expon + n2In ] ; \n\t\tfor ( j = NUM00 , k = NUM00 ; \n\t\tk < ( - n1In - expon ) ; \n\t\tk ++ , j ++ ) $F114344 ( ca3 , j ) for ( i = NUM00 ; \n\t\ti < ( n1In + n2In ) ; \n\t\ti ++ , j ++ ) $F20651 ( ca3 , j , ca2 , i ) } \n\telse { \n\t\tca3 = ca2 ; \n\t\t} \n\tboolean carry = _BOOL ; \n\tif ( p < - expon + n2In ) { \n\t\tif ( expon < NUM00 ) { \n\t\t\ti = p ; \n\t\t\t} \n\t\telse { \n\t\t\ti = p + n1In ; \n\t\t\t} \n\t\tcarry = checkForCarry ( ca3 , i ) ; \n\t\tif ( carry ) { \n\t\t\tcarry = startSymbolicCarry ( ca3 , i - NUM00 , NUM00 ) ; \n\t\t\t} \n\t\t} \n\tif ( n1In + expon <= NUM00 ) { \n\t\tca4 = new char [ NUM00 + p ] ; \n\t\tif ( ! carry ) { \n\t\t\tca4 [ NUM00 ] = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tca4 [ NUM00 ] = NUM00 ; \n\t\t\t} \n\t\tif ( alternateForm || ! precisionSet || precision != NUM00 ) { \n\t\t\tca4 [ NUM00 ] = NUM00 ; \n\t\t\tfor ( i = NUM00 , j = NUM00 ; \n\t\t\ti < $F56147 ( Math , p , ca3 ) ; \n\t\t\ti ++ , j ++ ) $F20651 ( ca4 , j , ca3 , i ) for ( $F255681 ( j , ca4 ) ) $F114344 ( ca4 , j ) } \n\t\t} \n\telse { \n\t\tif ( ! carry ) { \n\t\t\tif ( alternateForm || ! precisionSet || precision != NUM00 ) { \n\t\t\t\tca4 = new char [ n1In + expon + p + NUM00 ] ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tca4 = new char [ n1In + expon ] ; \n\t\t\t\t} \n\t\t\tj = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( alternateForm || ! precisionSet || precision != NUM00 ) { \n\t\t\t\tca4 = new char [ n1In + expon + p + NUM00 ] ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tca4 = new char [ n1In + expon + NUM00 ] ; \n\t\t\t\t} \n\t\t\tca4 [ NUM00 ] = NUM00 ; \n\t\t\tj = NUM00 ; \n\t\t\t} \n\t\tfor ( i = NUM00 ; \n\t\ti < Math . min ( n1In + expon , ca3 . length ) ; \n\t\ti ++ , j ++ ) $F20651 ( ca4 , j , ca3 , i ) for ( ; \n\t\ti < n1In + expon ; \n\t\ti ++ , j ++ ) $F114344 ( ca4 , j ) if ( alternateForm || ! precisionSet || precision != NUM00 ) { \n\t\t\tca4 [ j ] = NUM00 ; \n\t\t\tj ++ ; \n\t\t\tfor ( k = NUM00 ; \n\t\t\ti < ca3 . length && k < p ; \n\t\t\ti ++ , j ++ , k ++ ) $F20651 ( ca4 , j , ca3 , i ) for ( $F255681 ( j , ca4 ) ) $F114344 ( ca4 , j ) } \n\t\t} \n\tint nZeros = NUM00 ; \n\tif ( ! leftJustify && leadingZeros ) { \n\t\tint xThousands = NUM00 ; \n\t\tif ( thousands ) { \n\t\t\tint xlead = NUM00 ; \n\t\t\tif ( ca4 [ NUM00 ] == NUM00 || ca4 [ NUM00 ] == NUM00 || ca4 [ NUM00 ] == NUM00 ) { \n\t\t\t\txlead = NUM00 ; \n\t\t\t\t} \n\t\t\tint xdp = xlead ; \n\t\t\tfor ( $F255681 ( xdp , ca4 ) ) { \n\t\t\t\tif ( ca4 [ xdp ] == NUM00 ) $F5153 } \n\t\t\txThousands = ( xdp - xlead ) / NUM00 ; \n\t\t\t} \n\t\tif ( fieldWidthSet ) { \n\t\t\tnZeros = fieldWidth - ca4 . length ; \n\t\t\t} \n\t\tif ( ( ! minusSign && ( leadingSign || leadingSpace ) ) || minusSign ) { \n\t\t\tnZeros -- ; \n\t\t\t} \n\t\tnZeros -= xThousands ; \n\t\t$F17370 ( nZeros ) } \n\tj = NUM00 ; \n\tif ( ( ! minusSign && ( leadingSign || leadingSpace ) ) || minusSign ) { \n\t\tca5 = new char [ ca4 . length + nZeros + NUM00 ] ; \n\t\tj ++ ; \n\t\t} \n\telse { \n\t\tca5 = new char [ ca4 . length + nZeros ] ; \n\t\t} \n\tif ( ! minusSign ) { \n\t\tif ( leadingSign ) { \n\t\t\tca5 [ NUM00 ] = NUM00 ; \n\t\t\t} \n\t\tif ( leadingSpace ) { \n\t\t\tca5 [ NUM00 ] = NUM00 ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tca5 [ NUM00 ] = NUM00 ; \n\t\t} \n\tfor ( i = NUM00 ; \n\ti < nZeros ; \n\ti ++ , j ++ ) $F114344 ( ca5 , j ) for ( i = NUM00 ; \n\ti < ca4 . length ; \n\ti ++ , j ++ ) $F20651 ( ca5 , j , ca4 , i ) int lead = NUM00 ; \n\tif ( ca5 [ NUM00 ] == NUM00 || ca5 [ NUM00 ] == NUM00 || ca5 [ NUM00 ] == NUM00 ) { \n\t\tlead = NUM00 ; \n\t\t} \n\tint dp = lead ; \n\tfor ( $F255681 ( dp , ca5 ) ) { \n\t\tif ( ca5 [ dp ] == NUM00 ) $F5153 } \n\tfinal int nThousands = ( dp - lead ) / NUM00 ; \n\tif ( dp < ca5 . length ) { \n\t\tca5 [ dp ] = dfs . getDecimalSeparator ( ) ; \n\t\t} \n\t$F1469 ca6 = ca5 ; \n\tif ( thousands && nThousands > NUM00 ) { \n\t\tca6 = new char [ ca5 . length + nThousands + lead ] ; \n\t\t$F603 ( ca6 , ca5 ) for ( i = lead , k = lead ; \n\t\ti < dp ; \n\t\ti ++ ) { \n\t\t\tif ( i > NUM00 && ( dp - i ) % NUM00 == NUM00 ) { \n\t\t\t\tca6 [ k ] = dfs . getGroupingSeparator ( ) ; \n\t\t\t\tca6 [ k + NUM00 ] = ca5 [ i ] ; \n\t\t\t\tk += NUM00 ; \n\t\t\t\t} \n\t\t\telse $F169975 ( ca6 , k , ca5 , i ) } \n\t\tfor ( ; \n\t\ti < ca5 . length ; \n\t\ti ++ , k ++ ) $F20651 ( ca6 , k , ca5 , i ) } \n\treturn ca6 ; \n\t} \n"}, {"code": "int maxLength $F72 { \n\tFontMetrics fm = getFontMetrics ( getFont ( ) ) ; \n\tint m = NUM00 ; \n\t$F2199 ( end , items ) for ( $F119 ( i , end ) ) { \n\t\tint l = fm . stringWidth ( ( $F1766 ( items , i ) ) ) ; \n\t\t$F19410 ( m , Math , l ) } \n\treturn m ; \n\t} \n"}, {"code": "public void write ( final char $F75414 , final int start , final int length ) throws $F3258 { \n\tif ( m_writer != null ) m_writer . write ( chars , start , length ) ; \n\tint lengthx3 = ( length < < NUM00 ) + length ; \n\tif ( lengthx3 >= buf_length ) { \n\t\tflushBuffer ( ) ; \n\t\tsetBufferSize ( NUM00 * lengthx3 ) ; \n\t\t} \n\tif ( lengthx3 > buf_length - count ) $F5795 ( flushBuffer ) final int n = length + start ; \n\tfor ( int i = start ; \n\ti < n ; \n\ti ++ ) { \n\t\tfinal char c = chars [ i ] ; \n\t\tif ( c < NUM00 ) $F260231 ( buf , count , c ) else if ( c < NUM00 ) { \n\t\t\t$F264145 ( buf , count , c ) $F264148 ( buf , count , c ) } \n\t\telse { \n\t\t\t$F264145 ( buf , count , c ) $F264152 ( buf , count , c ) $F264148 ( buf , count , c ) } \n\t\t} \n\t} \n"}, {"code": "public PlaPointInt round_to_the_left ( PlaDirection p_dir ) { \n\tPlaPointFloat dir = p_dir . to_float ( ) ; \n\tdouble rounded_x ; \n\tif ( dir . v_y > NUM00 ) { \n\t\trounded_x = Math . floor ( v_x ) ; \n\t\t} \n\telse if ( dir . v_y < NUM00 ) { \n\t\trounded_x = Math . ceil ( v_x ) ; \n\t\t} \n\telse { \n\t\trounded_x = Math . round ( v_x ) ; \n\t\t} \n\tdouble rounded_y ; \n\tif ( dir . v_x > NUM00 ) { \n\t\trounded_y = Math . ceil ( v_y ) ; \n\t\t} \n\telse if ( dir . v_x < NUM00 ) { \n\t\trounded_y = Math . floor ( v_y ) ; \n\t\t} \n\telse { \n\t\trounded_y = Math . round ( v_y ) ; \n\t\t} \n\treturn new PlaPointInt ( rounded_x , rounded_y ) ; \n\t} \n"}, {"code": "protected HttpHost determineProxy ( HttpHost target , HttpRequest request , HttpContext context ) throws HttpException { \n\tProxySelector psel = this . proxySelector ; \n\tif ( psel == null ) $F39044 ( psel , ProxySelector ) $F1275 ( psel ) URI targetURI = null ; \n\ttry { \n\t\ttargetURI = new URI $F119716 ( target ) ; \n\t\t} \n\tcatch ( URISyntaxException usx ) { \n\t\tthrow new HttpException ( NUM00 + target , usx ) ; \n\t\t} \n\tList $F134025 proxies = psel . select ( targetURI ) ; \n\tProxy p = chooseProxy ( proxies , target , request , context ) ; \n\tHttpHost result = null ; \n\tif ( p . type ( ) == Proxy . Type . HTTP ) { \n\t\tif ( ! ( p . address ( ) instanceof InetSocketAddress ) ) { \n\t\t\tthrow new HttpException ( NUM00 + p . address ( ) ) ; \n\t\t\t} \n\t\tfinal InetSocketAddress isa = ( InetSocketAddress ) p . address ( ) ; \n\t\tresult = new HttpHost ( getHost ( isa ) , isa . getPort ( ) ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F32797 ( sourcePosition , referencePosition , srcAndRefPositions , referenceCount , a , System ) "}, {"code": "public $F131 toArray $F72 $F54348 ( Arrays , elementData , size ) "}, {"code": "$F49921 ( mThread ) "}, {"code": "public static $F96 unwrapVCF ( File sourceFile , File tmpFile ) throws $F27136 { \n\tZipArchiveInputStream in = null ; \n\tFileOutputStream fos = null ; \n\tString hmacString = null ; \n\ttry { \n\t\tin = new ZipArchiveInputStream $F18079 ( sourceFile ) ; \n\t\tArchiveEntry entry ; \n\t\tin . getNextEntry ( ) ; \n\t\t$F10893 ( fos , tmpFile ) IOUtils . copy ( in , fos ) ; \n\t\tentry = in . getNextEntry ( ) ; \n\t\t$F32928 ( hmacString , entry ) return Utils . hexToBytes ( hmacString ) ; \n\t\t} \n\tcatch ( StringIndexOutOfBoundsException e ) { \n\t\t$F186360 ( logger , hmacString , e ) throw e ; \n\t\t} \n\tcatch ( Exception e ) $F526539 ( logger , e ) finally { \n\t\t$F12239 ( fos ) $F2727 ( in ) } \n\t} \n"}, {"code": "public boolean registerUser $F1947 ( username , password , uri ) throws DataAccessException { \n\t$F46660 ( checkUsernameExists , username , _BOOL ) storeUser ( username , password , uri ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public SELECT ( $F4170 String ... columns ) { \n\t$F896 ( columns ) if $F9634 ( columns ) $F824 $F4000 ( builder ) for ( $F1139 ( i , columns ) ) { \n\t\t$F6939 ( builder , columns , i ) if ( i != $F33765 ( columns ) ) $F84 ( builder ) } \n\t$F6947 ( sql , builder ) } \n"}, {"code": "public static synchronized MBeanInfo testCompliance ( $F6970 ( baseClass ) , $F6969 mbeanInterface ) throws NotCompliantMBeanException { \n\t$F192589 ( mbeanInterface , getStandardMBeanInterface , baseClass ) ReflectUtil . checkPackageAccess ( mbeanInterface ) ; \n\tMBeanIntrospector $F1011 introspector = StandardMBeanIntrospector . getInstance ( ) ; \n\treturn getClassMBeanInfo ( introspector , baseClass , mbeanInterface ) ; \n\t} \n"}, {"code": "public static $F2689 toStringSet ( TemplateSequenceModel seqModel ) throws TemplateModelException { \n\t$F2695 ( set ) for ( $F2277 ( i , seqModel ) ) { \n\t\tset . add ( getAsStringNonEscaping ( ( TemplateScalarModel ) seqModel . get ( i ) ) ) ; \n\t\t} \n\treturn set ; \n\t} \n"}, {"code": "public JKSSignatureToken ( InputStream ksStream , String ksPassword ) { \n\ttry { \n\t\tkeyStore = KeyStore . getInstance ( KeyStore . getDefaultType ( ) ) ; \n\t\tpassword = ( ksPassword == null ) ? null : ksPassword . toCharArray ( ) ; \n\t\tkeyStore . load ( ksStream , password ) ; \n\t\t} \n\tcatch ( Exception e ) $F36611 ( e ) finally { \n\t\tif ( ksStream != null ) { \n\t\t\ttry $F881 ( ksStream ) catch ( IOException e ) $F14108 ( logger , e ) } \n\t\t} \n\t} \n"}, {"code": "protected void writeLocation ( String loc ) throws IOException { \n\thadAnnotations |= ( loc != null ) ; \n\tlocOut . writeObject ( loc ) ; \n\t} \n"}, {"code": "protected int __offset ( int vtable_offset ) { \n\tint vtable = bb_pos - bb . getInt ( bb_pos ) ; \n\treturn vtable_offset < bb . getShort ( vtable ) ? bb . getShort ( vtable + vtable_offset ) : NUM00 ; \n\t} \n"}, {"code": "public static String selectText ( XPathExpression expr , Node context ) { \n\ttry { \n\t\treturn ( String ) expr . evaluate ( context , XPathConstants <missing ')'> . <missing ';'> $F50952 } \n\tcatch ( XPathExpressionException e ) { \n\t\tthrow new XmlException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public static HttpHeaders toArmeria ( io . netty . handler . codec . http . HttpHeaders inHeaders ) { \n\tif $F2979 ( inHeaders ) { \n\t\treturn HttpHeaders . EMPTY_HEADERS ; \n\t\t} \n\tfinal HttpHeaders out = new DefaultHttpHeaders ( _BOOL , inHeaders . size ( ) ) ; \n\ttoArmeria ( inHeaders , out ) ; \n\treturn out ; \n\t} \n"}, {"code": "public static int calculateRMSLevel ( $F5078 audioData , int numframes ) { \n\tlong lSum = NUM00 ; \n\tint numread = NUM00 ; \n\tfor ( short s : audioData ) { \n\t\tlSum = lSum + s ; \n\t\tnumread ++ ; \n\t\t$F67767 ( numread , numframes ) } \n\tdouble dAvg = lSum / numframes ; \n\tdouble sumMeanSquare = NUM00 ; \n\tnumread = NUM00 ; \n\tfor ( short anAudioData : audioData ) { \n\t\tsumMeanSquare = sumMeanSquare + Math . pow ( anAudioData - dAvg , NUM00 ) ; \n\t\tnumread ++ ; \n\t\t$F67767 ( numread , numframes ) } \n\tdouble averageMeanSquare = sumMeanSquare / numframes ; \n\treturn ( int ) ( Math . pow ( averageMeanSquare , NUM00 ) + NUM00 ) ; \n\t} \n"}, {"code": "private void initProgram $F72 { \n\tglUseProgram ( this . program ) ; \n\tvec3ArrayUniform = glGetUniformLocation ( this . program , NUM00 ) ; \n\tchosenUniform = glGetUniformLocation ( this . program , NUM00 ) ; \n\tglUseProgram ( NUM00 ) ; \n\t} \n"}, {"code": "public boolean engineContainsAlias ( String alias ) { \n\treturn entries . containsKey ( $F91593 ( alias , Locale ) ) ; \n\t} \n"}, {"code": "public void invertSelectedRelations $F72 { \n\t$F359183 ( selection , viewer ) if ( ! ( selection instanceof IStructuredSelection ) ) $F932 IStructuredSelection structuredSelection = ( IStructuredSelection ) selection ; \n\tCollection < Relation > inverse = computeInverseRelations ( getTableRelations ( ) , structuredSelection ) ; \n\tStructuredSelection nextSelection = new StructuredSelection ( inverse . toArray ( ) ) ; \n\tviewer . setSelection ( nextSelection , _BOOL ) ; \n\t} \n"}, {"code": "public void testFloatValueNeg $F72 { \n\tString a = NUM00 ; \n\t$F12208 ( aNumber , a ) float result = - NUM00 ; \n\t$F229387 ( assertTrue , aNumber , result ) } \n"}, {"code": "public void bindKeyStore ( final KeyStoreService keyStoreService ) { \n\tthis . keyStore = keyStoreService ; \n\t} \n"}, {"code": "protected void drawConnectorCenters ( Canvas c ) { \n\tList $F238202 connections = mBlock . getAllConnections ( ) ; \n\t$F98511 ( paint ) $F22950 ( paint , Paint ) for ( $F2277 ( i , connections ) ) { \n\t\tConnection conn = connections . get ( i ) ; \n\t\tif ( conn . inDragMode ( ) ) { \n\t\t\tif $F104255 ( conn ) { \n\t\t\t\t$F348 ( paint , Color ) } \n\t\t\telse { \n\t\t\t\tpaint . setColor ( Color . MAGENTA ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif $F104255 ( conn ) { \n\t\t\t\tpaint . setColor ( Color . GREEN ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tpaint . setColor ( Color . CYAN ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tmTempWorkspacePoint . set ( conn . getPosition ( ) . x - mBlock . getPosition ( ) . x , conn . getPosition ( ) . y - mBlock . getPosition ( ) . y ) ; \n\t\tmHelper . workspaceToVirtualViewDelta ( mTempWorkspacePoint , mTempConnectionPosition ) ; \n\t\tif ( mHelper . useRtl ( ) ) { \n\t\t\tmTempConnectionPosition . x += mBlockViewSize . x ; \n\t\t\t} \n\t\tc . drawCircle ( mTempConnectionPosition . x , mTempConnectionPosition . y , NUM00 , paint ) ; \n\t\t} \n\t} \n"}, {"code": "private static boolean isMerge ( InstructionHandle handle ) { \n\tif ( handle . hasTargeters ( ) ) { \n\t\tInstructionTargeter [ ] targeterList = handle . getTargeters ( ) ; \n\t\tfor ( InstructionTargeter targeter : targeterList ) { \n\t\t\tif ( targeter instanceof BranchInstruction ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private synchronized void loadTrustManager $F72 { \n\ttry { \n\t\t$F156 ( tmf , TrustManagerFactory , X509_ALGORITHM ) tmf . init ( keystore ) ; \n\t\tfor ( TrustManager trustManager : tmf . getTrustManagers ( ) ) { \n\t\t\tif ( trustManager instanceof X509TrustManager ) { \n\t\t\t\tdefaultViPRTrustManager = ( X509TrustManager ) trustManager ; \n\t\t\t\t$F980 ( log ) $F597 } \n\t\t\t} \n\t\tlog . info ( NUM00 , defaultViPRTrustManager . getAcceptedIssuers ( ) . length ) ; \n\t\t} \n\tcatch ( GeneralSecurityException e ) $F14108 ( log , e ) } \n"}, {"code": "private boolean isOutsideDocElem $F72 { \n\treturn ( null == m_docFrag ) && $F10470 ( m_elemStack ) && ( null == m_currentNode || m_currentNode . getNodeType ( ) == Node . DOCUMENT_NODE ) ; \n\t} \n"}, {"code": "public ThreadPool ( String name , int poolSize ) { \n\tthis . poolSize = poolSize ; \n\tthis . poolName = name ; \n\ttaskList = new LinkedList $F24548 $F72 ; \n\tthreads = new WorkerThread [ poolSize ] ; \n\tcreateThreads ( ) ; \n\t} \n"}, {"code": "private static Object invokeOrDie ( final Method method , final Object object , final Object ... params ) { \n\ttry { \n\t\t$F89561 ( method , object , params ) } \n\tcatch ( IllegalAccessException e ) { \n\t\tthrow new RuntimeException ( NUM00 + NUM00 , e ) ; \n\t\t} \n\tcatch ( InvocationTargetException e ) { \n\t\tfinal Throwable cause = e . getCause ( ) ; \n\t\tif ( cause instanceof RuntimeException ) $F220831 ( cause ) else if ( cause instanceof Error ) { \n\t\t\t$F106249 ( cause ) } \n\t\telse $F7077 ( cause ) } \n\t} \n"}, {"code": "public void clear $F72 { \n\tthis . normal = null ; \n\tthis . depth = NUM00 ; \n\t} \n"}, {"code": "public String name $F72 { \n\treturn theName ; \n\t} \n"}, {"code": "public final void addHelperTextColor ( @ ColorInt final int color ) { \n\tif $F2200 ( helperTextColors , color ) $F36131 ( helperTextColors , color , verifyPasswordStrength ) } \n"}, {"code": "public void advanceToNextMinute $F72 $F845 "}, {"code": "ListBasedTokenStream ( AttributeSource attributeSource , List < AttributeSource > tokens ) { \n\tsuper ( attributeSource . getAttributeFactory ( ) ) ; \n\tthis . tokens = tokens ; \n\taddAttributes ( attributeSource ) ; \n\t} \n"}, {"code": "$F1431 protected Class resolveClass ( ObjectStreamClass classDesc ) throws $F6427 { \n\t$F20605 ( cname , classDesc ) return ClassFinder . resolveClass ( cname , this . loader ) ; \n\t} \n"}, {"code": "public $F529 makeValid ( $F42010 ( source ) , String mode ) $F31637 ( makeValid , source , mode , _BOOL ) "}, {"code": "public static int find ( $F96 a , int fromIndex , int toIndex , $F96 key ) { \n\tint result = - NUM00 ; \n\tint sublen = key . length ; \n\tint maxpos , first , sp = NUM00 ; \n\tmaxpos = $F56147 ( Math , toIndex , a ) - sublen ; \n\tfor ( first = fromIndex ; \n\tsp != sublen && first <= maxpos ; \n\tfirst ++ ) { \n\t\tfirst = find ( a , first , maxpos , key [ NUM00 ] ) ; \n\t\tif $F74591 ( first , maxpos ) $F5153 for ( sp = NUM00 ; \n\t\tsp < sublen ; \n\t\tsp ++ ) { \n\t\t\tif $F219258 ( a , first , sp , key ) { \n\t\t\t\tsp = sublen ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( sublen == NUM00 ) { \n\t\tresult = NUM00 ; \n\t\t} \n\telse if ( sp == sublen ) { \n\t\tresult = ( first - NUM00 ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private void addSyntheticEdge ( Collection < GraphEdge > result , GraphEdge original , GraphNode head , GraphNode tail ) { \n\tresult . add ( new GraphEdge ( head , tail , original . getRelation ( ) ) ) ; \n\t} \n"}, {"code": "public void addStates ( State [ ] s ) { \n\tfor ( $F1139 ( i , s ) ) $F15869 ( states , s , i ) } \n"}, {"code": "private synchronized void readObject $F154558 ( s ) throws $F6427 { \n\t$F6428 ( s ) init ( getMask ( actions ) ) ; \n\t} \n"}, {"code": "private static $F96 WindowsRegEnumKeyEx1 $F14337 ( hKey , subKeyIndex , maxKeyLength ) { \n\t$F7237 ( result , WindowsRegEnumKeyEx , hKey , subKeyIndex , maxKeyLength ) if ( result != null ) { \n\t\treturn result ; \n\t\t} \n\telse { \n\t\tlong sleepTime = INIT_SLEEP_TIME ; \n\t\tfor ( $F119 ( i , MAX_ATTEMPTS ) ) { \n\t\t\ttry $F7595 ( Thread , sleepTime ) $F42359 ( result ) sleepTime *= NUM00 ; \n\t\t\tresult = WindowsRegEnumKeyEx ( hKey , subKeyIndex , maxKeyLength ) ; \n\t\t\t$F21525 ( result ) } \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public Tasker addTask ( Task task ) { \n\ttasks . add ( task ) ; \n\tlastAddedTask = task ; \n\treturn this ; \n\t} \n"}, {"code": "private void initComputeProgram $F72 { \n\tglUseProgram ( computeProgram ) ; \n\t$F130812 ( workGroupSize , BufferUtils ) glGetProgramiv ( computeProgram , GL_COMPUTE_WORK_GROUP_SIZE , workGroupSize ) ; \n\t$F36986 ( workGroupSizeX , workGroupSize ) $F36986 ( workGroupSizeY , workGroupSize ) timeUniform = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\tblendFactorUniform = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\tbounceCountUniform = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\t$F130812 ( params , BufferUtils ) int loc = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\tglGetUniformiv ( computeProgram , loc , params ) ; \n\t$F36986 ( framebufferImageBinding , params ) loc = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\tglGetUniformiv ( computeProgram , loc , params ) ; \n\t$F36986 ( worldPositionImageBinding , params ) loc = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\tglGetUniformiv ( computeProgram , loc , params ) ; \n\t$F36986 ( worldNormalImageBinding , params ) glUseProgram ( NUM00 ) ; \n\t} \n"}, {"code": "public void sort $F72 { \n\tthrowIfImmutable ( ) ; \n\tif ( ! sorted ) { \n\t\tArrays . sort ( values , NUM00 , size ) ; \n\t\tsorted = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public static Object objectFromByteBuffer $F97 ( buffer ) throws Exception { \n\t$F1275 ( buffer ) $F5950 ( inStream , buffer ) ObjectInputStream in = new ObjectInputStreamExt ( inStream ) ; \n\t$F67404 ( retval , in ) $F59 ( in ) return retval ; \n\t} \n"}, {"code": "public String generateGroupName ( String policyName , $F2689 existingGroupNames , String parentGroupName ) { \n\tint count = NUM00 ; \n\tString format = null ; \n\twhile ( count <= existingGroupNames . size ( ) ) { \n\t\tif ( NUM00 == count ) { \n\t\t\tformat = String . format ( NUM00 , policyName ) ; \n\t\t\t} \n\t\telse { \n\t\t\tformat = String . format ( NUM00 , policyName , count ) ; \n\t\t\t} \n\t\tString generatedGroupName = generate ( parentGroupName , format , SmisConstants . MASK_NAME_DELIMITER , SmisConstants . MAX_STORAGE_GROUP_NAME_LENGTH ) ; \n\t\tif $F2200 ( existingGroupNames , generatedGroupName ) { \n\t\t\treturn generatedGroupName ; \n\t\t\t} \n\t\tcount ++ ; \n\t\t} \n\treturn generate ( parentGroupName , String . format ( NUM00 , policyName ) , SmisConstants . MASK_NAME_DELIMITER , SmisConstants . MAX_STORAGE_GROUP_NAME_LENGTH ) ; \n\t} \n"}, {"code": "public static void assertColumnTypes ( ResultSet rs , $F2027 expectedTypes ) throws SQLException { \n\t$F19097 ( rsmd , rs ) $F16742 ( actualCols , rsmd ) assertEquals ( NUM00 , expectedTypes . length , rsmd . getColumnCount ( ) ) ; \n\tfor ( $F119 ( i , actualCols ) ) { \n\t\tassertEquals ( NUM00 + ( i + NUM00 ) , expectedTypes [ i ] , rsmd . getColumnType ( i + NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "public DefaultActionGroup ( $F1113 AnAction ... actions ) $F81861 ( this , Arrays , actions ) "}, {"code": "public int add ( T dl , int row ) { \n\t_list . add ( row , dl ) ; \n\tfireTableRowsInserted ( row , row ) ; \n\treturn row ; \n\t} \n"}, {"code": "private void pushTerm ( BytesRef text ) throws IOException { \n\tint limit = Math . min ( lastTerm . length ( ) , text . length ) ; \n\tint pos = NUM00 ; \n\twhile ( pos < limit && lastTerm . byteAt ( pos ) == text . bytes [ text . offset + pos ] ) { \n\t\tpos ++ ; \n\t\t} \n\tfor ( $F22866 ( i , lastTerm ) ; \n\ti >= pos ; \n\ti -- ) { \n\t\tint prefixTopSize = pending . size ( ) - prefixStarts [ i ] ; \n\t\tif ( prefixTopSize >= minItemsInBlock ) { \n\t\t\twriteBlocks ( i + NUM00 , prefixTopSize ) ; \n\t\t\tprefixStarts [ i ] -= prefixTopSize - NUM00 ; \n\t\t\t} \n\t\t} \n\tif $F5624 ( prefixStarts , text ) { \n\t\tprefixStarts = ArrayUtil . grow ( prefixStarts , text . length ) ; \n\t\t} \n\tfor ( $F9958 ( i , pos , text ) ) { \n\t\tprefixStarts [ i ] = pending . size ( ) ; \n\t\t} \n\tlastTerm . copyBytes ( text ) ; \n\t} \n"}, {"code": "public NumericLiteral ( Object x ) { \n\tif ( x instanceof Number ) { \n\t\tm_number = ( Number ) x ; \n\t\tm_type = TypeLib . getPrimitiveType ( m_number . getClass ( ) ) ; \n\t\t} \n\telse $F825 } \n"}, {"code": "$F32357 ( Class , _BOOL ) "}, {"code": "$F20664 $F1 protected void onMeasure ( int widthMeasureSpec , int heightMeasureSpec ) { \n\t$F20444 ( widthMode , MeasureSpec , widthMeasureSpec ) $F20444 ( heightMode , MeasureSpec , heightMeasureSpec ) $F23132 ( maxWidth , MeasureSpec , widthMeasureSpec ) $F23132 ( maxHeight , MeasureSpec , heightMeasureSpec ) if ( widthMode == MeasureSpec . UNSPECIFIED ) maxWidth = Integer . MAX_VALUE ; \n\tif ( heightMode == MeasureSpec . UNSPECIFIED ) maxHeight = Integer . MAX_VALUE ; \n\tint paddingLeft = getPaddingLeft ( ) ; \n\tint paddingTop = getPaddingTop ( ) ; \n\tint paddingRight = getPaddingRight ( ) ; \n\tint paddingBottom = getPaddingBottom ( ) ; \n\tint maxRightBound = maxWidth - paddingRight ; \n\tint maxBottomBound = maxHeight - paddingBottom ; \n\tint left ; \n\tint top ; \n\tint right ; \n\tint bottom ; \n\tint rightBound = paddingLeft ; \n\tint maxRightNoPadding = rightBound ; \n\tint bottomBound ; \n\tint lastMaxBottom = paddingTop ; \n\tint maxBottom = lastMaxBottom ; \n\tint childWidth ; \n\tint childHeight ; \n\tint lineStartIndex = NUM00 ; \n\tint lineEndIndex ; \n\t$F725 ( rectList ) int childCount = getChildCount ( ) ; \n\tfor ( $F119 ( index , childCount ) ) { \n\t\tfinal View child = getChildAt ( index ) ; \n\t\tchild . measure ( MeasureSpec . UNSPECIFIED , MeasureSpec . UNSPECIFIED ) ; \n\t\tif ( child . getVisibility ( ) == View . GONE ) $F598 $F3670 ( lp , child ) childWidth = child . getMeasuredWidth ( ) ; \n\t\tchildHeight = child . getMeasuredHeight ( ) ; \n\t\tleft = rightBound + lp . leftMargin ; \n\t\tright = left + childWidth ; \n\t\trightBound = right + lp . rightMargin ; \n\t\tif ( rightBound > maxRightBound ) { \n\t\t\tlineEndIndex = index ; \n\t\t\tadjustBaseLine ( maxBottom - lastMaxBottom , lineStartIndex , lineEndIndex ) ; \n\t\t\t$F612 ( maxBottom , maxBottomBound ) if ( lineEndIndex == lineStartIndex ) { \n\t\t\t\tchild . measure ( MeasureSpec . makeMeasureSpec ( maxWidth - paddingLeft - paddingRight - lp . leftMargin - lp . rightMargin , MeasureSpec . AT_MOST ) , MeasureSpec . UNSPECIFIED ) ; \n\t\t\t\tchildWidth = child . getMeasuredWidth ( ) ; \n\t\t\t\tchildHeight = child . getMeasuredHeight ( ) ; \n\t\t\t\t} \n\t\t\tleft = paddingLeft + lp . leftMargin ; \n\t\t\tright = left + childWidth ; \n\t\t\trightBound = right + lp . rightMargin ; \n\t\t\tlastMaxBottom = maxBottom ; \n\t\t\ttop = lastMaxBottom + lp . topMargin ; \n\t\t\tbottom = top + childHeight ; \n\t\t\tbottomBound = bottom + lp . bottomMargin ; \n\t\t\tlineStartIndex = index ; \n\t\t\t} \n\t\telse { \n\t\t\ttop = lastMaxBottom + lp . topMargin ; \n\t\t\tbottom = top + childHeight ; \n\t\t\tbottomBound = bottom + lp . bottomMargin ; \n\t\t\t} \n\t\t$F15468 ( rightBound , maxRightNoPadding ) $F15468 ( bottomBound , maxBottom ) $F28883 ( rect ) rect . left = left ; \n\t\trect . top = top ; \n\t\trect . right = right ; \n\t\trect . bottom = bottom ; \n\t\trectList . add ( rect ) ; \n\t\t} \n\tadjustBaseLine ( maxBottom - lastMaxBottom , lineStartIndex , rectList . size ( ) ) ; \n\tint measuredWidth ; \n\tint measuredHeight ; \n\tif ( widthMode == MeasureSpec . EXACTLY ) measuredWidth = maxWidth ; \n\telse measuredWidth = maxRightNoPadding + paddingRight ; \n\tif ( heightMode == MeasureSpec . EXACTLY ) measuredHeight = maxHeight ; \n\telse { \n\t\tmeasuredHeight = maxBottom + paddingBottom ; \n\t\tif ( heightMode == MeasureSpec . AT_MOST ) measuredHeight = measuredHeight > maxHeight ? maxHeight : measuredHeight ; \n\t\t} \n\tsetMeasuredDimension ( measuredWidth , measuredHeight ) ; \n\t} \n"}, {"code": "$F39742 ( update , unsafe , this , headOffset ) "}, {"code": "private void ensureBufferCapacity ( int desiredCapacity ) { \n\tint capacity = pixelBuffer . length ; \n\twhile ( capacity < desiredCapacity ) { \n\t\tcapacity *= NUM00 ; \n\t\t} \n\tif ( capacity > pixelBuffer . length ) $F75474 ( pixelBuffer , capacity ) } \n"}, {"code": "protected Set < DependencyKind > removeDependency ( Node n ) { \n\tSet < DependencyKind > $F9626 ( removedKinds ) ; \n\tfor ( $F40424 ( dk , DependencyKind ) ) { \n\t\t$F6870 depsByKind = deps . get ( dk ) ; \n\t\t$F45557 ( depsByKind ) if $F16914 ( depsByKind , n ) $F207 ( removedKinds , dk ) } \n\treturn removedKinds ; \n\t} \n"}, {"code": "public static $F9340 ConcurrentMap $F9340 newConcurrentMapWithAggressiveConcurrency $F72 { \n\treturn new $F400431 ( NUM00 , NUM00 , aggressiveConcurrencyLevel ) ; \n\t} \n"}, {"code": "$F1 public boolean connectionAllowed ( String eventName ) { \n\tif ( m_listenee != null || $F1263 ( eventName ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected char skipAllWhitespace ( Reader r ) throws IOException { \n\tchar c ; \n\tdo { \n\t\tc = ( char ) r . read ( ) ; \n\t\t} \n\twhile ( Character . isWhitespace ( c ) && c != $F117344 ) ; \n\treturn c ; \n\t} \n"}, {"code": "public Iterator enumerateLiteralResultAttributes $F72 { \n\treturn ( null == m_avts ) ? null : m_avts . iterator ( ) ; \n\t} \n"}, {"code": "public $F2539 parse ( final String str , char separator ) { \n\tif ( str == null ) { \n\t\treturn $F4190 ; \n\t\t} \n\treturn parse ( str . toCharArray ( ) , separator ) ; \n\t} \n"}, {"code": "public PriorityQueue $F22451 ( c ) { \n\tif ( c instanceof PriorityQueue ) { \n\t\tgetFromPriorityQueue ( ( PriorityQueue $F22448 ) c ) ; \n\t\t} \n\telse if ( c instanceof SortedSet ) { \n\t\tgetFromSortedSet ( ( SortedSet $F22448 ) c ) ; \n\t\t} \n\telse $F86383 ( initSize , c , addAll ) } \n"}, {"code": "private String resourceId $F72 { \n\treturn subSchemaPath . isEmpty ( ) ? null : lastSchemaNodeName ( ) ; \n\t} \n"}, {"code": "private long acquireWrite ( boolean interruptible , long deadline ) { \n\tWNode node = null , p ; \n\tfor ( int spins = - NUM00 ; \n\t; \n\t) { \n\t\tlong m , s , ns ; \n\t\tif ( ( m = ( s = state ) & ABITS ) == NUM00 ) { \n\t\t\tif ( U . compareAndSwapLong ( this , STATE , s , ns = s + WBIT ) ) return ns ; \n\t\t\t} \n\t\telse if ( spins < NUM00 ) spins = ( m == WBIT && wtail == whead ) ? SPINS : NUM00 ; \n\t\telse if ( spins > NUM00 ) { \n\t\t\tif ( LockSupport . nextSecondarySeed ( ) >= NUM00 ) -- spins ; \n\t\t\t} \n\t\telse if ( ( p = wtail ) == null ) { \n\t\t\tWNode hd = new WNode ( WMODE , null ) ; \n\t\t\tif $F200476 ( U , this , WHEAD , hd ) wtail = hd ; \n\t\t\t} \n\t\telse if ( node == null ) node = new WNode ( WMODE , p ) ; \n\t\telse if ( node . prev != p ) node . prev = p ; \n\t\telse if ( U . compareAndSwapObject ( this , WTAIL , p , node ) ) { \n\t\t\tp . next = node ; \n\t\t\t$F597 } \n\t\t} \n\tfor ( int spins = - NUM00 ; \n\t; \n\t) { \n\t\tWNode h , np , pp ; \n\t\tint ps ; \n\t\tif ( ( h = whead ) == p ) { \n\t\t\tif ( spins < NUM00 ) spins = HEAD_SPINS ; \n\t\t\telse if ( spins < MAX_HEAD_SPINS ) spins <<= NUM00 ; \n\t\t\tfor ( int k = spins ; \n\t\t\t; \n\t\t\t) { \n\t\t\t\tlong s , ns ; \n\t\t\t\tif $F72344 ( s , state , ABITS ) { \n\t\t\t\t\tif ( U . compareAndSwapLong ( this , STATE , s , ns = s + WBIT ) ) { \n\t\t\t\t\t\twhead = node ; \n\t\t\t\t\t\tnode . prev = null ; \n\t\t\t\t\t\treturn ns ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\telse if ( LockSupport . nextSecondarySeed ( ) >= NUM00 && -- k <= NUM00 ) $F597 } \n\t\t\t} \n\t\telse if ( h != null ) { \n\t\t\tWNode c ; \n\t\t\tThread w ; \n\t\t\twhile ( ( c = h . cowait ) != null ) { \n\t\t\t\tif ( U . compareAndSwapObject ( h , WCOWAIT , c , c . cowait ) && $F43539 ( w , c ) ) U . unpark ( w ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( whead == h ) { \n\t\t\tif ( ( np = node . prev ) != p ) { \n\t\t\t\tif ( np != null ) ( p = np ) . next = node ; \n\t\t\t\t} \n\t\t\telse if ( ( ps = p . status ) == NUM00 ) U . compareAndSwapInt ( p , WSTATUS , NUM00 , WAITING ) ; \n\t\t\telse if ( ps == CANCELLED ) { \n\t\t\t\tif ( ( pp = p . prev ) != null ) { \n\t\t\t\t\tnode . prev = pp ; \n\t\t\t\t\tpp . next = node ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tlong time ; \n\t\t\t\tif ( deadline == NUM00 ) time = NUM00 ; \n\t\t\t\telse if ( ( time = deadline - System . nanoTime ( ) ) <= NUM00 ) return cancelWaiter ( node , node , _BOOL ) ; \n\t\t\t\t$F686 ( wt , Thread ) U . putObject ( wt , PARKBLOCKER , this ) ; \n\t\t\t\tnode . thread = wt ; \n\t\t\t\tif ( p . status < NUM00 && ( p != h || ( state & ABITS ) != NUM00 ) && whead == h && node . prev == p ) U . park ( _BOOL , time ) ; \n\t\t\t\tnode . thread = null ; \n\t\t\t\t$F200511 ( U , wt , PARKBLOCKER ) if ( interruptible && Thread . interrupted ( ) ) return cancelWaiter ( node , node , _BOOL ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public boolean isInitial $F72 { \n\treturn init ; \n\t} \n"}, {"code": "public static String denormalize ( final CharSequence self ) { \n\tif ( lineSeparator == null ) { \n\t\tfinal StringWriter sw = new StringWriter $F989 ; \n\t\ttry { \n\t\t\tfinal BufferedWriter bw = new BufferedWriter ( sw ) ; \n\t\t\t$F1769 ( bw ) $F1206 ( bw ) $F6947 ( lineSeparator , sw ) } \n\t\tcatch ( IOException ioe ) { \n\t\t\tlineSeparator = NUM00 ; \n\t\t\t} \n\t\t} \n\t$F22998 ( len , self ) if ( len < NUM00 ) $F2495 ( self ) final StringBuilder sb = new StringBuilder ( ( NUM00 * len ) / NUM00 ) ; \n\tint i = NUM00 ; \n\tCharSequence cs = ( self instanceof GString ) ? self . toString ( ) : self ; \n\twhile ( i < len ) { \n\t\tfinal char ch = cs . charAt ( i ++ ) ; \n\t\tswitch ( ch ) { \n\t\t\t$F1262 sb . append ( lineSeparator ) ; \n\t\t\tif ( ( i < len ) && $F11983 ( cs , i ) ) { \n\t\t\t\t++ i ; \n\t\t\t\t} \n\t\t\t$F597 $F1262 sb . append ( lineSeparator ) ; \n\t\t\t$F597 $F3000 ( sb , ch ) } \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "public static void performSaveAs ( String schemaPrefixFileName , String selFilePath , ContainerConfig containerConfig ) { \n\ttry { \n\t\tFile fileWithDefaultConfiguration = createContainerSchemaFile ( schemaPrefixFileName , selFilePath ) ; \n\t\tupdateFile ( containerConfig , fileWithDefaultConfiguration . getPath ( ) , schemaPrefixFileName ) ; \n\t\t} \n\t$F1516 ( e ) } \n"}, {"code": "public boolean isAborted $F72 $F1522 ( isAborted ) "}, {"code": "public void append ( int key , E value ) { \n\t$F49491 ( mSize , key , mKeys , put , value ) $F143594 ( mGarbage , mSize , mKeys , gc ) int pos = mSize ; \n\tif ( pos >= mKeys . length ) { \n\t\tint n = idealIntArraySize ( pos + NUM00 ) ; \n\t\t$F4120 ( nkeys , n ) $F133 ( nvalues , n ) $F7057 ( System , mKeys , nkeys ) $F7057 ( System , mValues , nvalues ) mKeys = nkeys ; \n\t\tmValues = nvalues ; \n\t\t} \n\tmKeys [ pos ] = key ; \n\tmValues [ pos ] = value ; \n\tmSize = pos + NUM00 ; \n\t} \n"}, {"code": "public void testSkip $F72 throws IOException { \n\t$F47960 ( data ) $F96 gzipped = GZIPOutputStreamTest . gzip ( data ) ; \n\tGZIPInputStream in = new GZIPInputStream $F24702 ( gzipped ) ; \n\tlong totalSkipped = NUM00 ; \n\tlong count ; \n\tdo { \n\t\tcount = in . skip ( Long . MAX_VALUE ) ; \n\t\ttotalSkipped += count ; \n\t\t} \n\twhile ( count > NUM00 ) ; \n\tassertEquals ( data . length , totalSkipped ) ; \n\t$F59 ( in ) } \n"}, {"code": "private Support_TestWebData ( String path , String type ) { \n\t$F1705 ( file , path ) $F3935 ( testLength , file ) testLastModified = file . lastModified ( ) ; \n\t$F32928 ( testName , file ) testType = type ; \n\ttestDir = file . isDirectory ( ) ; \n\t$F1538 ( out ) FileInputStream in = null ; \n\ttry { \n\t\t$F5335 ( in , file ) while $F2892 ( in ) { \n\t\t\tout . write ( in . read ( ) ) ; \n\t\t\t} \n\t\t$F59 ( in ) $F1206 ( out ) $F3031 ( test0Data , out ) $F59 ( out ) test0DataAvailable = _BOOL ; \n\t\t$F665 } \n\t$F1516 ( e ) finally { \n\t\ttry $F23818 ( in , out ) $F29052 } \n\t} \n"}, {"code": "public static void print ( boolean x ) $F7523 ( out , x ) "}, {"code": "public IpcSharedMemorySpace ( String tokFileName , int writerPid , int readerPid , int size , boolean reader , IgniteLogger parent ) throws IgniteCheckedException { \n\tassert size > NUM00 : NUM00 ; \n\tlog = parent . getLogger ( IpcSharedMemorySpace . class ) ; \n\topSize = size ; \n\tshmemPtr = IpcSharedMemoryUtils . allocateSystemResources ( tokFileName , size , DEBUG && log . isDebugEnabled ( ) ) ; \n\tshmemId = IpcSharedMemoryUtils . sharedMemoryId ( shmemPtr ) ; \n\tsemId = IpcSharedMemoryUtils . semaphoreId ( shmemPtr ) ; \n\tisReader = reader ; \n\tthis . tokFileName = tokFileName ; \n\tthis . readerPid = readerPid ; \n\tthis . writerPid = writerPid ; \n\tif $F7383 ( DEBUG , log ) $F586 ( log , this ) } \n"}, {"code": "$F1 public void close $F72 { \n\ttry $F6399 ( connection ) catch ( SQLException e ) $F302 ( e ) } \n"}, {"code": "public Version addQualifier ( String qualifier ) { \n\t$F3803 newQualifiers = new $F201 ( this . qualifiers ) ; \n\tnewQualifiers . add ( qualifier ) ; \n\treturn new Version ( major , minor , patch , $F10148 ( newQualifiers ) ) ; \n\t} \n"}, {"code": "public int loadSigned16 ( int addr ) { \n\treturn loadSigned16 ( addr , AccessSource . CODE ) ; \n\t} \n"}, {"code": "public static String arrayToHexString $F97 ( array ) { \n\treturn $F39529 ( arrayToHexString , array ) ; \n\t} \n"}, {"code": "public static void unregisterBaggageHandler ( BaggageHandler handler ) $F106 ( handlers , handler ) "}, {"code": "public DefaultHeatMapDataset ( int xSamples , int ySamples , double minX , double maxX , double minY , double maxY ) { \n\t$F6853 ( xSamples ) $F6853 ( ySamples ) if ( Double . isInfinite ( minX ) || Double . isNaN ( minX ) ) $F825 if ( Double . isInfinite ( maxX ) || Double . isNaN ( maxX ) ) $F825 if ( Double . isInfinite ( minY ) || Double . isNaN ( minY ) ) $F825 if ( Double . isInfinite ( maxY ) || Double . isNaN ( maxY ) ) $F825 this . xSamples = xSamples ; \n\tthis . ySamples = ySamples ; \n\tthis . minX = minX ; \n\tthis . maxX = maxX ; \n\tthis . minY = minY ; \n\tthis . maxY = maxY ; \n\tthis . zValues = new double [ xSamples ] [ ] ; \n\tfor ( $F119 ( x , xSamples ) ) { \n\t\tthis . zValues [ x ] = new double [ ySamples ] ; \n\t\t} \n\t} \n"}, {"code": "public static void assertEqualsAnyOrder ( EventBean [ ] [ ] expected , EventBean [ ] [ ] actual ) { \n\t$F153093 ( compareArraySize , expected , actual ) int numMatches = NUM00 ; \n\t$F24314 ( foundReceived , actual ) for ( $F80820 expectedObject : expected ) { \n\t\tboolean found = _BOOL ; \n\t\tfor ( $F1139 ( i , actual ) ) { \n\t\t\tif ( foundReceived [ i ] ) $F1448 boolean match = compareEqualsExactOrder ( actual [ i ] , expectedObject ) ; \n\t\t\tif ( match ) { \n\t\t\t\tfound = _BOOL ; \n\t\t\t\tnumMatches ++ ; \n\t\t\t\tfoundReceived [ i ] = _BOOL ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\tif ( ! found ) { \n\t\t\tlog . error ( NUM00 + Arrays . toString ( expectedObject ) ) ; \n\t\t\tlog . error ( NUM00 + Arrays . toString ( actual ) ) ; \n\t\t\t} \n\t\tScopeTestHelper . assertTrue ( found ) ; \n\t\t} \n\tScopeTestHelper . assertEquals ( numMatches , expected . length ) ; \n\t} \n"}, {"code": "private void collectText $F72 { \n\tif ( textNodeCount > NUM00 ) { \n\t\t$F39858 ( firstTextNode , textBuffer ) } \n\ttextNodeCount = NUM00 ; \n\t} \n"}, {"code": "$F45923 public static < T extends Annotation > T unproxy ( T annotation ) { \n\tFunction unproxyFunction = getUnproxyFunction ( annotation . annotationType ( ) ) ; \n\treturn ( T ) unproxyFunction . apply ( annotation ) ; \n\t} \n"}, {"code": "public static $F27878 parseExpression ( Context context , $F2690 configNamespaces , String text ) { \n\treturn parseExpression ( context , configNamespaces , text , NUM00 , _BOOL ) ; \n\t} \n"}, {"code": "public void addTickMarkSection ( final Section SECTION ) { \n\t$F77681 ( SECTION ) tickMarkSections . add ( SECTION ) ; \n\tCollections . sort ( tickMarkSections , new SectionComparator $F72 ) ; \n\tfireUpdateEvent ( REDRAW_EVENT ) ; \n\t} \n"}, {"code": "protected static double calcQ_i ( double f , double lambda ) { \n\treturn lambda * Math . exp ( - lambda * f ) ; \n\t} \n"}, {"code": "void flush $F72 $F29882 ( printStream ) "}, {"code": "public CharBuffer delete ( int start , int end ) { \n\t$F29168 ( length ) if ( start < NUM00 || end < start || length < start ) $F232827 $F106734 ( end , Math , length ) int tail = length - end ; \n\t$F1469 buffer = buffer ( ) ; \n\tfor ( $F119 ( i , tail ) ) { \n\t\tbuffer [ start + i ] = buffer [ end + i ] ; \n\t\t} \n\tlength ( length - ( end - start ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "public void addPlotter ( final Plotter plotter ) $F207 ( plotters , plotter ) "}, {"code": "$F9341 findNear ( K kkey , int rel ) { \n\t$F45430 ( key , comparable , kkey ) for ( $F589 ) { \n\t\t$F45432 ( b , findPredecessor , key ) $F35175 ( n , b ) for ( $F589 ) { \n\t\t\tif ( n == null ) return ( ( rel & LT ) == NUM00 || b . isBaseHeader ( ) ) ? null : b ; \n\t\t\t$F35175 ( f , n ) $F45438 ( n , b ) Object v = n . value ; \n\t\t\t$F45440 ( v , n , b , f ) $F45442 ( v , n , b ) $F45446 ( c , key , n ) if ( ( c == NUM00 && ( rel & EQ ) != NUM00 ) || ( c < NUM00 && ( rel & LT ) == NUM00 ) ) return n ; \n\t\t\tif ( c <= NUM00 && ( rel & LT ) != NUM00 ) $F45454 ( b ) b = n ; \n\t\t\tn = f ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void addListener ( SpeedrunsLiveListener listener ) $F207 ( listeners , listener ) "}, {"code": "public void writeExif ( Bitmap bmap , OutputStream exifOutStream ) throws IOException { \n\t$F26831 ( bmap , exifOutStream , NULL_ARGUMENT_ ) OutputStream s = getExifWriterStream ( exifOutStream ) ; \n\t$F26834 ( bmap , Bitmap , s ) $F1206 ( s ) } \n"}, {"code": "public boolean find ( int start ) { \n\tif ( start < NUM00 || start > input . length ( ) ) { \n\t\tthrow new IndexOutOfBoundsException ( NUM00 + start + NUM00 + input . length ( ) ) ; \n\t\t} \n\tsynchronized ( this ) { \n\t\tmatchFound = findImpl ( address , input , start , matchOffsets ) ; \n\t\t} \n\treturn matchFound ; \n\t} \n"}, {"code": "public int action ( String fault , String action ) { \n\tInteger current = get ( fault ) ; \n\tif ( current == null ) $F29415 ( fault ) boolean no = action . startsWith ( NUM00 ) ; \n\tif ( no ) $F3108 ( action ) Integer bit = getAction ( action ) ; \n\tif ( bit == null ) $F29415 ( action ) $F79839 ( old , current ) $F79839 ( mask , bit ) int n = ( old & ( ~ mask ) ) ; \n\tn = ( no ) ? n : ( n | mask ) ; \n\tput ( fault , new Integer ( n ) ) ; \n\treturn n ; \n\t} \n"}, {"code": "public static boolean containsWhitespace ( CharSequence str ) { \n\t$F38676 ( hasLength , str , _BOOL ) $F1749 ( strLen , str ) for ( $F119 ( i , strLen ) ) { \n\t\tif $F11974 ( Character , str , i ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean hasUnsupportedCriticalExtension $F72 { \n\tSet extns = getCriticalExtensionOIDs ( ) ; \n\t$F1933 ( extns , _BOOL ) extns . remove ( RFC3280CertPathUtilities . ISSUING_DISTRIBUTION_POINT ) ; \n\textns . remove ( RFC3280CertPathUtilities . DELTA_CRL_INDICATOR ) ; \n\t$F3386 ( extns ) } \n"}, {"code": "public static $F4203 T decodeFromBase64 ( Coder $F4203 coder , String encodedValue ) throws CoderException { \n\treturn decodeFromSafeStream ( coder , new ByteArrayInputStream ( Base64 . decodeBase64 ( encodedValue ) ) , Coder . Context . OUTER ) ; \n\t} \n"}, {"code": "public void validate ( Set setData ) throws ValidationException { \n\tfor ( $F2774 ( iter , setData ) ) { \n\t\tperformValidation ( $F2775 ( iter ) ) ; \n\t\t} \n\t} \n"}, {"code": "public String add ( Object ... values ) { \n\tdouble result = NUM00 ; \n\tfor ( $F1139 ( i , values ) ) { \n\t\tresult += FunctionHandler . getDouble ( values [ i ] ) ; \n\t\t} \n\t$F23209 ( Double , result ) } \n"}, {"code": "public $F3803 listMyDBs ( String owner , boolean restricted ) { \n\tConnection conn = null ; \n\ttry { \n\t\tconn = getConnection ( ) ; \n\t\treturn listMyDBs ( conn , owner , restricted ) ; \n\t\t} \n\t$F427956 ( logger , Level , ex ) $F19458 ( DBUtils , conn ) $F1274 } \n"}, {"code": "protected void doFunction ( $F5415 inputs , int inputOffset , $F5415 outputs , int outputOffset ) { \n\tfloat input = inputs [ inputOffset ] ; \n\tfor ( $F50810 ( i , getNumOutputs ) ) { \n\t\toutputs [ i + outputOffset ] = getC0 ( i ) + ( float ) ( Math . pow ( input , getN ( ) ) * ( getC1 ( i ) - getC0 ( i ) ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void put ( String key , long value ) $F233270 ( key , urlParams , String , value ) "}, {"code": "public int compare ( Object o1 , Object o2 ) { \n\treturn comparator . compare ( o1 , o2 ) ; \n\t} \n"}, {"code": "public void addCheckBoxActionListener ( ActionListener al ) $F42183 ( m_enableDistributedExperiment , al ) "}, {"code": "$F28896 ( index , paint , bounds , title , getTitle ) "}, {"code": "GF256Poly addOrSubtract ( GF256Poly other ) { \n\tif $F45204 ( field , other ) $F825 $F58185 ( isZero , other ) if ( other . isZero ( ) ) { \n\t\treturn this ; \n\t\t} \n\t$F2027 smallerCoefficients = this . coefficients ; \n\t$F2027 largerCoefficients = other . coefficients ; \n\tif ( smallerCoefficients . length > largerCoefficients . length ) { \n\t\t$F2027 temp = smallerCoefficients ; \n\t\tsmallerCoefficients = largerCoefficients ; \n\t\tlargerCoefficients = temp ; \n\t\t} \n\t$F22974 ( sumDiff , largerCoefficients ) int lengthDiff = largerCoefficients . length - smallerCoefficients . length ; \n\t$F135 ( System , largerCoefficients , sumDiff , lengthDiff ) for ( $F9958 ( i , lengthDiff , largerCoefficients ) ) { \n\t\tsumDiff [ i ] = GF256 . addOrSubtract ( smallerCoefficients [ i - lengthDiff ] , largerCoefficients [ i ] ) ; \n\t\t} \n\treturn new GF256Poly ( field , sumDiff ) ; \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\t$F280 ( sb ) sb . append ( type ) ; \n\t$F84 ( sb ) sb . append ( subType ) ; \n\tfor ( $F3465 ( name , attributes ) ) { \n\t\tif ( inferredCharset && ATTR_CHARSET . equals ( name ) ) $F1448 $F84 ( sb ) sb . append ( name ) ; \n\t\t$F84 ( sb ) $F1729 ( value , attributes , name ) $F1150 ( tokenMatcher , TOKEN_PATTERN , value ) if $F24133 ( tokenMatcher ) $F288 ( sb , value ) else $F287 ( sb , value ) } \n\t$F92 ( sb ) } \n"}, {"code": "public static long firstFieldOffset ( Class clazz ) { \n\tlong minSize = roundUpTo8 ( headerSize ( clazz ) ) ; \n\twhile ( clazz != $F12222 ) { \n\t\tfor ( $F128325 ( f , clazz ) ) { \n\t\t\tif ( ( f . getModifiers ( ) & Modifier . STATIC ) == NUM00 ) { \n\t\t\t\tlong offset = unsafe . objectFieldOffset ( f ) ; \n\t\t\t\t$F45132 ( offset , minSize ) } \n\t\t\t} \n\t\t$F7852 ( clazz ) } \n\treturn minSize ; \n\t} \n"}, {"code": "$F5803 ( drawable , getDrawable , matrix , prevMatrix , drawableWidth , drawableHeight , scaleX , viewWidth , scaleY , viewHeight , mScaleType , CENTER , CENTER_CROP , Math , CENTER_INSIDE , FIT_CENTER , FIT_XY , redundantXSpace , redundantYSpace , matchViewWidth , matchViewHeight , isZoomed , imageRenderedAtLeastOnce , normalizedScale , prevMatchViewWidth , prevMatchViewHeight , savePreviousImageValues , m , Matrix , transX , transY , prevActualWidth , actualWidth , getImageWidth , translateMatrixAfterRotate , prevViewWidth , prevActualHeight , actualHeight , getImageHeight , prevViewHeight , fixTrans , setImageMatrix ) "}, {"code": "$F52428 ( tag , msg , args , sLevel , LEVEL_WARNING , String , Log ) "}, {"code": "private int processPollFds $F72 throws IOException { \n\tif ( pollFds . get ( NUM00 ) . revents == POLLIN ) { \n\t\t$F12496 ( buffer ) while ( IoBridge . read ( wakeupIn , buffer , NUM00 , NUM00 ) > NUM00 ) $F845 } \n\tint readyKeyCount = NUM00 ; \n\tfor ( $F3836 ( i , pollFds ) ) { \n\t\tStructPollfd pollFd = pollFds . get ( i ) ; \n\t\tif ( pollFd . revents == NUM00 ) $F1448 if ( pollFd . fd == null ) $F5153 SelectionKeyImpl key = ( SelectionKeyImpl ) pollFd . userData ; \n\t\tpollFd . fd = null ; \n\t\tpollFd . userData = null ; \n\t\tint ops = key . interestOpsNoCheck ( ) ; \n\t\tint selectedOps = NUM00 ; \n\t\tif ( ( pollFd . revents & POLLHUP ) != NUM00 ) { \n\t\t\tselectedOps |= ops ; \n\t\t\t} \n\t\tif ( ( pollFd . revents & POLLIN ) != NUM00 ) { \n\t\t\tselectedOps |= ops & ( OP_ACCEPT | OP_READ ) ; \n\t\t\t} \n\t\tif ( ( pollFd . revents & POLLOUT ) != NUM00 ) { \n\t\t\tif $F104255 ( key ) { \n\t\t\t\tselectedOps |= ops & OP_WRITE ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tselectedOps |= ops & OP_CONNECT ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( selectedOps != NUM00 ) { \n\t\t\tboolean wasSelected = mutableSelectedKeys . contains ( key ) ; \n\t\t\tif ( wasSelected && key . readyOps ( ) != selectedOps ) { \n\t\t\t\tkey . setReadyOps ( key . readyOps ( ) | selectedOps ) ; \n\t\t\t\t++ readyKeyCount ; \n\t\t\t\t} \n\t\t\telse if ( ! wasSelected ) { \n\t\t\t\tkey . setReadyOps ( selectedOps ) ; \n\t\t\t\tmutableSelectedKeys . add ( key ) ; \n\t\t\t\t++ readyKeyCount ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn readyKeyCount ; \n\t} \n"}, {"code": "public final V extractFirst $F72 { \n\tif $F44803 ( size ) { \n\t\tif ( GWT . isScript ( ) ) { \n\t\t\tV ret = jsArray . get ( NUM00 ) ; \n\t\t\t$F86372 ( jsArray ) return ret ; \n\t\t\t} \n\t\telse { \n\t\t\treturn javaArray . remove ( NUM00 ) ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "$F1 public void actionPerformed ( ActionEvent event ) { \n\t$F35563 ( command , event ) if $F3057 ( command ) $F5795 ( attemptLabelFontSelection ) else if $F3057 ( command ) $F5795 ( attemptModifyLabelPaint ) else if $F3057 ( command ) $F5795 ( attemptTickLabelFontSelection ) } \n"}, {"code": "$F30902 public void test_unwrap_ByteBuffer$ByteBuffer_04 $F72 { \n\tString host = NUM00 ; \n\tint port = NUM00 ; \n\t$F30909 ( bbs , ByteBuffer ) $F30907 ( bbd , ByteBuffer ) SSLEngine sse = getEngine ( host , port ) ; \n\ttry { \n\t\tsse . unwrap ( bbs , bbd ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F30913 $F30915 ( fail , e ) } \n"}, {"code": "public static void upgradeServerInstance ( SSOToken ssoToken , String instanceName , String instanceId , $F2540 ( upgradedValues ) ) throws SMSException , SSOException , ConfigurationException , IOException { \n\tServiceConfig sc = getServerConfig ( ssoToken , instanceName ) ; \n\tif ( sc != null ) { \n\t\tMap map = sc . getAttributes ( ) ; \n\t\tmap . remove ( ATTR_PARENT_SITE_ID ) ; \n\t\tSet newSet = getPropertiesSet ( upgradedValues ) ; \n\t\tmap . put ( ATTR_SERVER_CONFIG , newSet ) ; \n\t\tsc . setAttributes ( map ) ; \n\t\t} \n\telse { \n\t\tthrow new ConfigurationException $F3487 ; \n\t\t} \n\t} \n"}, {"code": "public static $F4203 T instance $F38789 ( clazz ) { \n\ttry $F171631 ( clazz ) catch ( InstantiationException | IllegalAccessException e ) $F48927 ( e ) } \n"}, {"code": "$F73603 ( desc , c , pop , Type ) "}, {"code": "public GenericSipMsrpSession createMsrpSession ( ContactId contact , String featureTag , $F806 acceptTypes , $F806 acceptWrappedTypes ) { \n\tif $F1374 ( sLogger ) $F10090 ( sLogger , contact ) return new OriginatingSipMsrpSession ( this , contact , featureTag , mRcsSettings , System . currentTimeMillis ( ) , mContactManager , acceptTypes , acceptWrappedTypes ) ; \n\t} \n"}, {"code": "public ForumPostConfig create ( ForumPostConfig config ) { \n\tconfig . addCredentials ( this ) ; \n\t$F77623 ( xml , POST , this , config ) Element root = parse ( xml ) ; \n\t$F1338 ( root ) try { \n\t\tForumPostConfig $F98634 ( post ) ; \n\t\tpost . parseXML ( root ) ; \n\t\treturn post ; \n\t\t} \n\t$F77633 ( this , SDKException , exception ) } \n"}, {"code": "protected void drawMark ( Graphics2D g2 , float x , float y , Color color ) { \n\t$F104030 ( bounds , mark ) float w = $F52896 ( bounds ) ; \n\tfloat h = $F52899 ( bounds ) ; \n\tx = x - ( w / NUM00 ) ; \n\ty = y - ( h / NUM00 ) ; \n\tg2 . translate ( x , y ) ; \n\tif ( color == null ) { \n\t\tif ( markFillPaint != null ) { \n\t\t\tg2 . setPaint ( markFillPaint ) ; \n\t\t\tg2 . fill ( mark ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tg2 . setPaint ( color ) ; \n\t\tg2 . fill ( mark ) ; \n\t\t} \n\tg2 . setPaint ( markPaint ) ; \n\tg2 . setStroke ( markStroke ) ; \n\tg2 . draw ( mark ) ; \n\t$F86480 ( g2 , x , y ) Rectangle2D rect = new $F186398 ( x , y , w , h ) ; \n\tmarkBounds . add ( rect ) ; \n\t} \n"}, {"code": "public void componentResized ( ComponentEvent e ) { \n\tif $F6456 ( logger , Level ) { \n\t\tlogger . fine ( NUM00 + getWidth ( ) + NUM00 + getHeight ( ) ) ; \n\t\t} \n\tprojection . setWidth ( getWidth ( ) ) ; \n\tprojection . setHeight ( getHeight ( ) ) ; \n\tfireProjectionChanged ( ) ; \n\t} \n"}, {"code": "public String toString $F72 { \n\t$F280 ( buf ) for ( StepPattern pat = this ; \n\tpat != null ; \n\tpat = pat . m_relativePathPattern ) { \n\t\tif ( pat != this ) $F84 ( buf ) buf . append ( Axis . getNames ( pat . m_axis ) ) ; \n\t\t$F84 ( buf ) if ( NUM00 == pat . m_whatToShow ) $F86 ( buf ) else if ( DTMFilter . SHOW_BYFUNCTION == pat . m_whatToShow ) $F86 ( buf ) else if ( DTMFilter . SHOW_ALL == pat . m_whatToShow ) $F86 ( buf ) else if ( DTMFilter . SHOW_TEXT == pat . m_whatToShow ) $F86 ( buf ) else if ( DTMFilter . SHOW_PROCESSING_INSTRUCTION == pat . m_whatToShow ) { \n\t\t\t$F84 ( buf ) if ( null != pat . m_name ) { \n\t\t\t\tbuf . append ( pat . m_name ) ; \n\t\t\t\t} \n\t\t\t$F84 ( buf ) } \n\t\telse if ( DTMFilter . SHOW_COMMENT == pat . m_whatToShow ) $F86 ( buf ) else if ( null != pat . m_name ) { \n\t\t\tif ( DTMFilter . SHOW_ATTRIBUTE == pat . m_whatToShow ) $F86 ( buf ) if ( null != pat . m_namespace ) { \n\t\t\t\t$F84 ( buf ) buf . append ( pat . m_namespace ) ; \n\t\t\t\t$F84 ( buf ) } \n\t\t\tbuf . append ( pat . m_name ) ; \n\t\t\t} \n\t\telse if ( DTMFilter . SHOW_ATTRIBUTE == pat . m_whatToShow ) $F86 ( buf ) else if ( ( DTMFilter . SHOW_DOCUMENT | DTMFilter . SHOW_DOCUMENT_FRAGMENT ) == pat . m_whatToShow ) $F86 ( buf ) else { \n\t\t\tbuf . append ( NUM00 + Integer . toHexString ( pat . m_whatToShow ) ) ; \n\t\t\t} \n\t\tif ( null != pat . m_predicates ) { \n\t\t\tfor ( int i = NUM00 ; \n\t\t\ti < pat . m_predicates . length ; \n\t\t\ti ++ ) { \n\t\t\t\t$F84 ( buf ) buf . append ( pat . m_predicates [ i ] ) ; \n\t\t\t\t$F84 ( buf ) } \n\t\t\t} \n\t\t} \n\t$F92 ( buf ) } \n"}, {"code": "public static String byteArrayToHexString $F24576 ( block , offset , length ) { \n\t$F280 ( buf ) int len = block . length ; \n\tlength = length + offset ; \n\tif ( ( len < length ) ) { \n\t\tlength = len ; \n\t\t} \n\tfor ( int i = NUM00 + offset ; \n\ti < length ; \n\ti ++ ) { \n\t\tbyte2hex ( block [ i ] , buf ) ; \n\t\t$F24364 ( i , length , buf ) } \n\t$F92 ( buf ) } \n"}, {"code": "private void changeValue ( AbstractStorageLabel $F1432 label , Object newValue ) { \n\tif ( ! Objects . equals ( label . getValue ( ) , newValue ) ) { \n\t\tsynchronized ( labelEditListeners ) { \n\t\t\tfor ( LabelEditListener listener : labelEditListeners ) { \n\t\t\t\tlistener . preLabelValueChange ( label ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tlabel . setValue ( newValue ) ; \n\t\tsynchronized ( labelEditListeners ) { \n\t\t\tfor ( LabelEditListener listener : labelEditListeners ) { \n\t\t\t\tlistener . postLabelValueChange ( label ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void write $F24576 ( b , offset , length ) throws IOException { \n\tif ( entry . getMethod ( ) == DEFLATED ) { \n\t\tif ( length > NUM00 ) { \n\t\t\tif $F197883 ( def ) { \n\t\t\t\tdef . setInput ( b , offset , length ) ; \n\t\t\t\twhile ( ! def . needsInput ( ) ) $F5795 ( deflate ) } \n\t\t\t} \n\t\t} \n\telse { \n\t\twriteOut ( b , offset , length ) ; \n\t\twritten += length ; \n\t\t} \n\tcrc . update ( b , offset , length ) ; \n\t} \n"}, {"code": "public void updatePoint ( float x , float y ) { \n\tif ( $F25556 ( Math , x , y ) > NUM00 ) if ( listener != null ) { \n\t\tlistener . onAngleChangedListener ( getAngle ( x , - y ) ) ; \n\t\t} \n\t} \n"}, {"code": "public final void quietlyJoin $F72 $F5795 ( doJoin ) "}, {"code": "$F1 public int clampViewPositionHorizontal $F2432 ( child , left , dx ) { \n\t$F1084 ( mDraggedView ) final int leftBound = NUM00 - MAX_OVERFLOW - ( mColumnSizeSide / NUM00 ) ; \n\tfinal int rightBound = getWidth ( ) + MAX_OVERFLOW + ( mColumnSizeSide / NUM00 ) ; \n\treturn Math . min ( Math . max ( left , leftBound ) , rightBound ) ; \n\t} \n"}, {"code": "HttpRequestWrapper ( HttpServletRequest request ) { \n\tsuper ( request ) ; \n\t} \n"}, {"code": "private int convertToPanelX ( double xval ) { \n\tdouble temp = ( xval - m_minX ) / m_rangeX ; \n\ttemp = temp * m_panelWidth ; \n\t$F23219 ( temp ) } \n"}, {"code": "public void forward ( HttpServerRequest request ) $F11707 ( forward , request ) "}, {"code": "private $F2689 primaryKeys ( PreparedStatement stmt , String owner , String tbl ) throws SQLException { \n\t$F13750 ( pkCols ) $F3916 ( stmt , owner ) $F3916 ( stmt , tbl ) try ( ResultSet pkRs = stmt . executeQuery ( ) ) { \n\t\twhile $F1682 ( pkRs ) pkCols . add ( pkRs . getString ( NUM00 ) ) ; \n\t\t} \n\treturn pkCols ; \n\t} \n"}, {"code": "public static long readUINT32 ( InputStream stream ) throws IOException { \n\tlong result = NUM00 ; \n\tfor ( int i = NUM00 ; \n\ti <= NUM00 ; \n\ti += NUM00 ) { \n\t\tresult |= $F116968 ( stream ) < < i ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private Token toPrefixToken ( ILeafNode leaf ) { \n\tLexer lexer = new InternalN4JSLexer $F72 ; \n\t$F45667 ( text , leaf ) String prefix = text . substring ( NUM00 , endOffset - leaf . getTotalOffset ( ) ) ; \n\tANTLRStringStream stream = new ANTLRStringStream ( prefix ) ; \n\tlexer . setCharStream ( stream ) ; \n\tToken nextToken = lexer . nextToken ( ) ; \n\treturn new CommonToken ( nextToken . getType ( ) , nextToken . getText ( ) ) ; \n\t} \n"}, {"code": "protected void add ( CSVRecord record ) { \n\trecords . add ( Objects . requireNonNull ( record ) ) ; \n\t} \n"}, {"code": "private void scheduledEnqueueSend $F72 { \n\t$F15856 ( schedulerQueueSize ) scheduled . set ( _BOOL ) ; \n\tenqueueSendWithErrorLogging ( ) ; \n\t} \n"}, {"code": "private E awaitMatch ( Node s , Node pred , E e , boolean timed , long nanos ) { \n\t$F74107 ( deadline , timed , System , nanos ) $F686 ( w , Thread ) int spins = - NUM00 ; \n\tThreadLocalRandom randomYields = null ; \n\tfor ( $F589 ) { \n\t\tObject item = s . item ; \n\t\tif ( item != e ) { \n\t\t\ts . forgetContents ( ) ; \n\t\t\t$F74111 ( LinkedTransferQueue , item ) } \n\t\tif ( ( w . isInterrupted ( ) || ( timed && nanos <= NUM00 ) ) && s . casItem ( e , s ) ) $F74118 ( unsplice , pred , s , e ) if ( spins < NUM00 ) { \n\t\t\tif ( ( spins = spinsFor ( pred , s . isData ) ) > NUM00 ) randomYields = ThreadLocalRandom . current ( ) ; \n\t\t\t} \n\t\telse if ( spins > NUM00 ) { \n\t\t\t-- spins ; \n\t\t\tif ( randomYields . nextInt ( CHAINED_SPINS ) == NUM00 ) $F5756 ( Thread ) } \n\t\telse if $F74129 ( s ) { \n\t\t\ts . waiter = w ; \n\t\t\t} \n\t\telse if ( timed ) { \n\t\t\t$F27353 ( nanos , deadline , System ) if ( nanos > NUM00 ) LockSupport . parkNanos ( this , nanos ) ; \n\t\t\t} \n\t\telse $F74133 ( LockSupport , this ) } \n\t} \n"}, {"code": "public static String join ( $F1469 self , String separator ) { \n\t$F83 ( buffer ) boolean first = _BOOL ; \n\t$F12553 ( separator ) for ( char next : self ) $F98972 ( first , _BOOL , buffer , separator , next ) $F92 ( buffer ) } \n"}, {"code": "private $F4203 BindingAmp $F4203 findObjectBinding ( $F205906 key ) { \n\tObjects . requireNonNull ( key ) ; \n\tif ( key . qualifiers ( ) . length != NUM00 ) $F26853 return ( BindingAmp ) findBinding ( Key . of ( $F12222 , key . qualifiers ( ) [ NUM00 ] ) ) ; \n\t} \n"}, {"code": "private void initComputeProgram $F72 { \n\tglUseProgram ( computeProgram ) ; \n\t$F130812 ( workGroupSize , BufferUtils ) glGetProgramiv ( computeProgram , GL_COMPUTE_WORK_GROUP_SIZE , workGroupSize ) ; \n\t$F36986 ( workGroupSizeX , workGroupSize ) $F36986 ( workGroupSizeY , workGroupSize ) timeUniform = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\tblendFactorUniform = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\tlightRadiusUniform = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\t$F130812 ( props , BufferUtils ) $F130812 ( params , BufferUtils ) $F130813 ( props , GL_BUFFER_BINDING ) int objectsResourceIndex = glGetProgramResourceIndex ( computeProgram , GL_SHADER_STORAGE_BLOCK , NUM00 ) ; \n\tglGetProgramResourceiv ( computeProgram , GL_SHADER_STORAGE_BLOCK , objectsResourceIndex , props , null , params ) ; \n\t$F36986 ( objectsSsboBinding , params ) int trianglesResourceIndex = glGetProgramResourceIndex ( computeProgram , GL_SHADER_STORAGE_BLOCK , NUM00 ) ; \n\tglGetProgramResourceiv ( computeProgram , GL_SHADER_STORAGE_BLOCK , trianglesResourceIndex , props , null , params ) ; \n\t$F36986 ( trianglesSsboBinding , params ) int loc = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\tglGetUniformiv ( computeProgram , loc , params ) ; \n\t$F36986 ( framebufferImageBinding , params ) loc = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\tglGetUniformiv ( computeProgram , loc , params ) ; \n\t$F36986 ( worldPositionImageBinding , params ) loc = glGetUniformLocation ( computeProgram , NUM00 ) ; \n\tglGetUniformiv ( computeProgram , loc , params ) ; \n\t$F36986 ( worldNormalImageBinding , params ) glUseProgram ( NUM00 ) ; \n\t} \n"}, {"code": "public boolean ifTaskCompletedSuccessOrFailureFromResponse ( ResponseOnSingeRequest myResponse ) { \n\tboolean isCompleted = _BOOL ; \n\ttry { \n\t\tif ( myResponse == null || myResponse . isFailObtainResponse ( ) ) { \n\t\t\treturn isCompleted ; \n\t\t\t} \n\t\tString responseBody = myResponse . getResponseBody ( ) ; \n\t\tif ( responseBody . matches ( successRegex ) || responseBody . matches ( failureRegex ) ) { \n\t\t\tisCompleted = _BOOL ; \n\t\t\t} \n\t\t} \n\t$F70676 ( logger , t ) return isCompleted ; \n\t} \n"}, {"code": "public void centerHorizontal $F96672 ( nodes ) { \n\tif ( m_bNeedsUndoAction ) { \n\t\taddUndoAction ( new centerHorizontalAction ( nodes ) ) ; \n\t\t} \n\tint nMinY = - NUM00 ; \n\tint nMaxY = - NUM00 ; \n\tfor ( $F2277 ( iNode , nodes ) ) { \n\t\t$F96678 ( nY , getPositionY , nodes , iNode ) if ( nY < nMinY || iNode == NUM00 ) { \n\t\t\tnMinY = nY ; \n\t\t\t} \n\t\tif ( nY > nMaxY || iNode == NUM00 ) { \n\t\t\tnMaxY = nY ; \n\t\t\t} \n\t\t} \n\tfor ( $F2277 ( iNode , nodes ) ) { \n\t\t$F85651 ( nNode , nodes , iNode ) m_nPositionY . set ( nNode , ( nMinY + nMaxY ) / NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "protected void appendText ( final String text ) { \n\t$F13324 ( text , textBody ) } \n"}, {"code": "public void onRestoreInstanceState ( Bundle savedInstanceState ) { \n\tmSelectedPositions . addAll ( savedInstanceState . getIntegerArrayList ( TAG ) ) ; \n\t$F12258 ( Log , TAG , mSelectedPositions ) } \n"}, {"code": "public Hour ( int hour , Day day ) { \n\t$F19400 ( ParamChecks , day ) this . hour = ( byte ) hour ; \n\tthis . day = day ; \n\t$F53414 ( peg , Calendar ) } \n"}, {"code": "public void undo $F72 { \n\tif ( -- m_tempUndoIndex < NUM00 ) $F65461 ( m_tempUndoIndex , m_tempUndoFiles ) if ( m_tempUndoFiles [ m_tempUndoIndex ] != null ) { \n\t\tAbstractFileLoader loader = ConverterUtils . getLoaderForFile ( m_tempUndoFiles [ m_tempUndoIndex ] ) ; \n\t\ttry { \n\t\t\tloader . setFile ( m_tempUndoFiles [ m_tempUndoIndex ] ) ; \n\t\t\tsetInstancesFromFile ( loader ) ; \n\t\t\t} \n\t\tcatch ( Exception e ) { \n\t\t\t$F301 ( e ) m_Log . logMessage ( e . toString ( ) ) ; \n\t\t\tJOptionPane . showMessageDialog ( PreprocessPanel . this , $F368 ( e ) , NUM00 , JOptionPane . ERROR_MESSAGE ) ; \n\t\t\t} \n\t\tm_tempUndoFiles [ m_tempUndoIndex ] = null ; \n\t\t} \n\tint temp = m_tempUndoIndex - NUM00 ; \n\tif ( temp < NUM00 ) $F65461 ( temp , m_tempUndoFiles ) m_UndoBut . setEnabled ( m_tempUndoFiles [ temp ] != null ) ; \n\t} \n"}, {"code": "public static boolean isConnectedUsingWifi $F72 { \n\tContext context = FeApp . getAppContext ( ) ; \n\t$F40395 ( cm , context , Context ) $F40397 ( ni , cm ) return ni != null && ni . isConnected ( ) == _BOOL && ni . getType ( ) == ConnectivityManager . TYPE_WIFI ; \n\t} \n"}, {"code": "public void close $F72 throws IOException { \n\tif ( writer != null ) writer . flushBuffer ( ) ; \n\t} \n"}, {"code": "$F18907 ( extOrdering ) "}, {"code": "public Process ( final File file , final ProgressListener progressListener ) throws IOException , XMLException { \n\tthis . processLocation = new FileProcessLocation ( file ) ; \n\tinitContext ( ) ; \n\tReader in = null ; \n\ttry { \n\t\tin = new InputStreamReader ( new FileInputStream ( file ) , NUM00 ) ; \n\t\treadProcess ( in , progressListener ) ; \n\t\t} \n\t$F8012 ( e ) $F14364 ( in ) } \n"}, {"code": "public static String extractMusicIDFromMediaID $F20574 ( mediaID ) { \n\t$F12747 ( pos , mediaID , LEAF_SEPARATOR ) if ( pos >= NUM00 ) $F26088 ( mediaID , pos ) $F1274 } \n"}, {"code": "public void testGetScope $F72 throws Exception { \n\t$F63182 ( i ) assertNull ( i . getScope ( ) ) ; \n\tIdentityScope s = IdentityScope . getSystemScope ( ) ; \n\tIdentity i2 = new IdentityStub ( NUM00 , s ) ; \n\tassertSame ( s , i2 . getScope ( ) ) ; \n\t} \n"}, {"code": "public $F131 buildParameters ( $F131 firstParameters , Method method , $F26426 ( annotationType ) ) { \n\tint parametersLength = $F36180 ( method ) ; \n\tif ( firstParameters . length > NUM00 && parametersLength < NUM00 ) { \n\t\tthrow new RepositoryMethodException $F10797 ( String , annotationType ) ; \n\t\t} \n\tint parametersToResolve = parametersLength - firstParameters . length ; \n\t$F133 ( additionalParameters , parametersToResolve ) for ( int i = firstParameters . length ; \n\ti < parametersLength ; \n\ti ++ ) { \n\t\tadditionalParameters [ i - firstParameters . length ] = parameterProvider . provide ( method , i ) ; \n\t\t} \n\treturn concatenate ( firstParameters , additionalParameters ) ; \n\t} \n"}, {"code": "$F1 public boolean contains ( S2Cell cell ) { \n\treturn contains ( cell . id ( ) ) ; \n\t} \n"}, {"code": "public SimplexNoiseGenerator ( Random rand ) { \n\tsuper ( rand ) ; \n\toffsetW = $F32605 ( rand ) ; \n\t} \n"}, {"code": "public static $F2469 values ( Long [ ] array ) { \n\t$F19280 ( dest , array ) for ( $F1139 ( i , array ) ) { \n\t\tLong v = array [ i ] ; \n\t\tif ( v != null ) { \n\t\t\tdest [ i ] = v . longValue ( ) ; \n\t\t\t} \n\t\t} \n\treturn dest ; \n\t} \n"}, {"code": "$F1 public void processNewLines $F4374 ( lines ) { \n\tfor ( String line : lines ) { \n\t\tif $F3106 ( line ) $F1448 if $F3578 ( line ) $F24818 ( myIsFileMissing , _BOOL ) $F35105 ( values , line , LINE_SPLIT_REGEX ) if ( values . length < INDEX_OF_TX_BYTES ) $F1448 try { \n\t\t\tint lineUid = Integer . parseInt ( values [ INDEX_OF_UID ] ) ; \n\t\t\tif ( myUid == lineUid ) { \n\t\t\t\tint tempRxBytes = Integer . parseInt ( values [ INDEX_OF_RX_BYTES ] ) ; \n\t\t\t\tint tempTxBytes = Integer . parseInt ( values [ INDEX_OF_TX_BYTES ] ) ; \n\t\t\t\tif ( tempRxBytes < NUM00 || tempTxBytes < NUM00 ) { \n\t\t\t\t\tLOG . warning ( String . format ( NUM00 , tempRxBytes , tempTxBytes , line ) ) ; \n\t\t\t\t\t$F598 } \n\t\t\t\tmyRxBytes += tempRxBytes ; \n\t\t\t\tmyTxBytes += tempTxBytes ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( NumberFormatException e ) { \n\t\t\tLOG . warning ( String . format ( NUM00 , values [ INDEX_OF_UID ] , values [ INDEX_OF_RX_BYTES ] , values [ INDEX_OF_TX_BYTES ] , line ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void initLookup $F72 { \n\t$F12775 ( m_lookup ) for ( $F9808 ( i , m_names ) ) { \n\t\tm_lookup . put ( m_names [ i ] , new Integer ( i ) ) ; \n\t\t} \n\t} \n"}, {"code": "public String toString $F72 { \n\tString str = NUM00 ; \n\tString followedBy = NUM00 ; \n\tint lastType = - NUM00 ; \n\tString lastString = NUM00 ; \n\tint singlesCount = NUM00 ; \n\tfor ( $F44696 ( e , formatConstraints ) ) { \n\t\tFormatConstraint constraint = ( FormatConstraint ) e . nextElement ( ) ; \n\t\tif ( constraint . count == FormatConstraint . COUNT_EXACTLY_ONE ) { \n\t\t\tif ( lastType != - NUM00 ) { \n\t\t\t\tif ( lastType != constraint . type ) { \n\t\t\t\t\tstr += followedBy + singlesCount + lastString ; \n\t\t\t\t\tfollowedBy = NUM00 ; \n\t\t\t\t\tsinglesCount = NUM00 ; \n\t\t\t\t\tlastType = constraint . type ; \n\t\t\t\t\t$F6947 ( lastString , constraint ) } \n\t\t\t\telse { \n\t\t\t\t\tsinglesCount ++ ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tlastType = constraint . type ; \n\t\t\t\t$F6947 ( lastString , constraint ) singlesCount = NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( lastType != - NUM00 ) { \n\t\t\t\tstr += followedBy + singlesCount + lastString ; \n\t\t\t\tfollowedBy = NUM00 ; \n\t\t\t\tlastType = - NUM00 ; \n\t\t\t\tsinglesCount = NUM00 ; \n\t\t\t\tlastString = NUM00 ; \n\t\t\t\t} \n\t\t\tstr += followedBy + constraint . toString ( ) ; \n\t\t\tfollowedBy = NUM00 ; \n\t\t\t} \n\t\t} \n\tif ( lastType != - NUM00 ) { \n\t\tstr += followedBy + singlesCount + lastString ; \n\t\t} \n\treturn str ; \n\t} \n"}, {"code": "public void readData ( DataInput din ) throws IOException { \n\tdin . readShort ( ) ; \n\t$F89921 ( count , din ) registers = new InputRegister [ count ] ; \n\tfor ( $F119 ( i , count ) ) { \n\t\tregisters [ i ] = new SimpleInputRegister ( din . readShort ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void adjustIndentation ( int delta ) { \n\tif ( delta < NUM00 ) { \n\t\tindentationLevel = Math . max ( NUM00 , indentationLevel + delta ) ; \n\t\t} \n\telse { \n\t\tindentationLevel += delta ; \n\t\t} \n\t} \n"}, {"code": "public int capacity $F72 $F1522 ( capacity ) "}, {"code": "protected static token do_code_string $F72 throws $F3258 { \n\t$F280 ( result ) advance ( ) ; \n\tadvance ( ) ; \n\twhile ( ! ( next_char == NUM00 && next_char2 == NUM00 ) ) { \n\t\tif ( next_char == EOF_CHAR ) { \n\t\t\temit_error ( NUM00 ) ; \n\t\t\t$F597 } \n\t\tresult . append ( new Character $F339155 ( next_char ) ) ; \n\t\tadvance ( ) ; \n\t\t} \n\tadvance ( ) ; \n\tadvance ( ) ; \n\treturn new str_token ( sym . CODE_ <missing ';'> NUM00 , result . toString ( ) ) ; \n\t} \n"}, {"code": "public String random ( Object omin , Object omax ) { \n\t$F41834 ( min , FunctionHandler , omin ) $F41834 ( max , FunctionHandler , omax ) if ( max > min ) { \n\t\treturn Integer . toString ( rnd . nextInt ( max - min ) + min ) ; \n\t\t} \n\t$F1278 } \n"}, {"code": "public void test_reopen01 $F72 { \n\tfinal IRawStore store = $F137694 ; \n\tfinal BTree btree ; \n\t{ \n\t\t$F87561 ( md , UUID ) md . setBranchingFactor ( NUM00 ) ; \n\t\tbtree = BTree . create ( store , md ) ; \n\t\t} \n\t$F110726 ( assertTrue , btree ) $F59 ( btree ) $F110726 ( assertFalse , btree ) try { \n\t\t$F59 ( btree ) fail ( NUM00 + IllegalStateException . class ) ; \n\t\t} \n\tcatch ( IllegalStateException ex ) { \n\t\t$F38209 ( log , ex ) } \n\tassertNotNull ( btree . getRoot ( ) ) ; \n\t$F110726 ( assertTrue , btree ) } \n"}, {"code": "public static File searchPaths ( Iterable < ? extends File > paths , String relFile ) { \n\tfor ( File path : paths ) { \n\t\t$F4453 ( f , path , relFile ) if $F3428 ( f ) { \n\t\t\treturn path ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public boolean hasUnsupportedCriticalExtension $F72 { \n\tSet extns = getCriticalExtensionOIDs ( ) ; \n\t$F6441 ( extns ) } \n"}, {"code": "$F62319 ( filename , separator , keepSeparator , size , prefix , getPrefixLength , array , otherSeparator , SYSTEM_SEPARATOR , OTHER_SEPARATOR , i , lastIsDirectory , _BOOL , System , j ) "}, {"code": "$F1 public StringBuffer format ( double value , StringBuffer buffer , FieldPosition field ) { \n\tfor ( $F26259 ( i , choiceLimits ) ) { \n\t\tif ( choiceLimits [ i ] <= value ) { \n\t\t\treturn buffer . append ( choiceFormats [ i ] ) ; \n\t\t\t} \n\t\t} \n\treturn choiceFormats . length == NUM00 ? buffer : buffer . append ( choiceFormats [ NUM00 ] ) ; \n\t} \n"}, {"code": "private void loadConfigurationFromJvmParameters $F72 { \n\t$F7601 ( repositoryProperty , System , REPOSITORY_PROPERTY ) if ( null != repositoryProperty ) { \n\t\t$F6542 ( repositoryIpHost , repositoryProperty ) if $F9634 ( repositoryIpHost ) { \n\t\t\tString repositoryIp = repositoryIpHost [ NUM00 ] ; \n\t\t\tString repositoryPort = repositoryIpHost [ NUM00 ] ; \n\t\t\tif ( StringUtils . isNotBlank ( repositoryIp ) && StringUtils . isNotBlank ( repositoryPort ) ) { \n\t\t\t\t$F21448 ( log , repositoryIp , repositoryPort ) try { \n\t\t\t\t\t$F27213 ( port , Integer , repositoryPort ) setRepository ( repositoryIp , port ) ; \n\t\t\t\t\t} \n\t\t\t\t$F92403 ( log , e ) } \n\t\t\t} \n\t\t} \n\t$F7601 ( agentName , System , AGENT_NAME_PROPERTY ) if $F16093 ( StringUtils , agentName ) { \n\t\ttry { \n\t\t\t$F556 ( log , agentName ) setAgentName ( agentName ) ; \n\t\t\t} \n\t\t$F92403 ( log , e ) } \n\telse { \n\t\ttry { \n\t\t\tsetAgentName ( DEFAULT_AGENT_NAME ) ; \n\t\t\t} \n\t\tcatch ( StorageException e ) $F23016 ( log , e ) } \n\t} \n"}, {"code": "public boolean softSignin $F72 throws IOException { \n\t$F77087 ( url ) checkResolveHost ( ) ; \n\tif ( sessionId != null ) { \n\t\tif ( checkAuthorized ( getAuthCheckUrl ( sessionId ) ) ) { \n\t\t\t$F35577 ( LOGGER , sessionId ) return _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\tsessionId = null ; \n\t\t\t} \n\t\t} \n\tlong id = loadSessionId ( ) ; \n\t$F6482 ( id , _BOOL ) boolean authorized = checkAuthorized ( getAuthCheckUrl ( id ) ) ; \n\tif ( authorized ) { \n\t\t$F556 ( LOGGER , id ) this . sessionId = id ; \n\t\t} \n\treturn authorized ; \n\t} \n"}, {"code": "private void testViewAlterAndCommandCache $F72 throws SQLException { \n\tdeleteDb ( NUM00 ) ; \n\tConnection conn = getConnection ( NUM00 ) ; \n\t$F11282 ( stat , conn ) $F131050 ( stat ) $F131050 ( stat ) $F131050 ( stat ) $F131050 ( stat ) $F131050 ( stat ) $F75096 ( rs , stat ) $F7683 ( assertTrue , rs ) assertEquals ( NUM00 , rs . getInt ( NUM00 ) ) ; \n\t$F131050 ( stat ) $F264240 ( rs , stat ) $F7683 ( assertTrue , rs ) assertEquals ( NUM00 , rs . getInt ( NUM00 ) ) ; \n\t$F59 ( conn ) deleteDb ( NUM00 ) ; \n\t} \n"}, {"code": "protected static boolean approxUnit ( final StringBuilder sbuf , final int amount , final int size , final String name ) { \n\tint count = amount / size ; \n\tint remainder ; \n\t$F6482 ( count , _BOOL ) remainder = amount - ( count * size ) ; \n\tif ( remainder >= ( size * NUM00 / NUM00 ) ) { \n\t\tcount ++ ; \n\t\tsbuf . append ( count ) ; \n\t\t} \n\telse if ( remainder >= ( size * NUM00 / NUM00 ) ) { \n\t\tcount ++ ; \n\t\t$F84 ( sbuf ) sbuf . append ( count ) ; \n\t\t} \n\telse if ( remainder >= ( size * NUM00 / NUM00 ) ) { \n\t\t$F84 ( sbuf ) sbuf . append ( count ) ; \n\t\t$F84 ( sbuf ) count = NUM00 ; \n\t\t} \n\telse if ( remainder >= ( size * NUM00 / NUM00 ) ) $F20352 ( sbuf , count ) else $F288 ( sbuf , count ) $F84 ( sbuf ) sbuf . append ( Grammar . plnoun ( count , name ) ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static Element createElement ( Document doc , String tag , String nsURI , String prefix ) { \n\tString qName = $F6036 ( prefix ) ? tag : prefix + NUM00 + tag ; \n\treturn doc . createElementNS ( nsURI , qName ) ; \n\t} \n"}, {"code": "public static void modifyFile ( File file , Function $F2538 modifier ) throws IOException { \n\tString content = new String ( Files . toByteArray ( file ) , StandardCharsets . UTF_8 ) ; \n\tString result = modifier . apply ( content ) ; \n\tFiles . write ( $F43004 ( result , StandardCharsets ) , file ) ; \n\t} \n"}, {"code": "private void state2 $F72 throws IOException { \n\t$F2027 selectionIds = readList ( $F33731 ( filePrefix ) ) ; \n\t$F2027 archivedIds = readList ( $F33731 ( filePrefix ) ) ; \n\t$F4120 ( variationIds , lambda ) if ( selectionIds . length != mu ) $F14525 updatePopulation ( archivedIds ) ; \n\tclearFile ( $F33731 ( filePrefix ) ) ; \n\tclearFile ( $F33731 ( filePrefix ) ) ; \n\t$F41144 ( offspring ) for ( int i = NUM00 ; \n\ti < mu ; \n\ti += variation . getArity ( ) ) { \n\t\tSolution [ ] parents = new Solution [ variation . getArity ( ) ] ; \n\t\tfor ( int j = NUM00 ; \n\t\tj < variation . getArity ( ) ; \n\t\tj ++ ) { \n\t\t\tparents [ j ] = solutions . get ( selectionIds [ i + j ] ) ; \n\t\t\t} \n\t\toffspring . addAll ( Arrays . asList ( variation . evolve ( parents ) ) ) ; \n\t\t} \n\tif $F111943 ( offspring , lambda ) $F14525 evaluateAll ( offspring ) ; \n\tfor ( $F119 ( i , lambda ) ) { \n\t\tvariationIds [ i ] = addToPopulation ( offspring . get ( i ) ) ; \n\t\t} \n\twritePopulation ( $F33731 ( filePrefix ) , variationIds ) ; \n\t} \n"}, {"code": "public void testListOptions $F72 { \n\tif ( m_OptionTester . getOptionHandler ( ) != null ) { \n\t\tif $F43642 ( m_OptionTester ) fail ( NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "protected double LLToWorldReturningLon ( double lat , double lon , Point2D lp ) { \n\tdouble phi_deg = lat ; \n\tdouble phi = ProjMath . degToRad ( phi_deg ) ; \n\tdouble lamba_deg = lon ; \n\tdouble lamba = ProjMath . degToRad ( lamba_deg ) ; \n\tdouble dlamda = lamba - lamdaf ; \n\tif ( dlamda > Math . PI ) { \n\t\tdlamda -= MoreMath . TWO_PI_D ; \n\t\t} \n\telse if ( dlamda < - Math . PI ) { \n\t\tdlamda += MoreMath . TWO_PI_D ; \n\t\t} \n\tdouble e = ellps . ecc ; \n\tdouble r = NUM00 ; \n\tif ( ! MoreMath . approximately_equal ( Math . abs ( phi ) , MoreMath . HALF_PI , EPS10 ) ) { \n\t\tdouble t = lambTsfn ( phi , Math . sin ( phi ) , e ) ; \n\t\tr = ellps . radius * F * Math . pow ( t , n ) ; \n\t\t} \n\tdouble theta = n * dlamda ; \n\tdouble easting = falseEasting + r * Math . sin ( theta - alpha ) ; \n\tdouble northing = falseNorthing + rf - r * Math . cos ( theta - alpha ) ; \n\tlp . setLocation ( easting , northing ) ; \n\treturn dlamda ; \n\t} \n"}, {"code": "protected void notifySizeChanged ( float width , float height , int orientation ) $F845 "}, {"code": "protected boolean removeTurntable ( LayoutTurntable o ) { \n\tif ( ! noWarnTurntable ) { \n\t\tint selectedValue = JOptionPane . showOptionDialog ( this , rb . getString ( NUM00 ) , Bundle . getMessage ( NUM00 ) , JOptionPane . YES_NO_CANCEL_OPTION , JOptionPane . QUESTION_MESSAGE , null , new Object [ ] { \n\t\t\tBundle . getMessage ( NUM00 ) , Bundle . getMessage ( NUM00 ) , rb . getString ( NUM00 ) } \n\t\t, Bundle . getMessage ( NUM00 ) ) ; \n\t\tif ( selectedValue == NUM00 ) $F3139 ( _BOOL ) $F126526 ( selectedValue , noWarnTurntable , _BOOL ) } \n\t$F99516 ( selectedObject , o ) $F99516 ( prevSelectedObject , o ) for ( int j = NUM00 ; \n\tj < o . getNumberRays ( ) ; \n\tj ++ ) { \n\t\tTrackSegment t = o . getRayConnectOrdered ( j ) ; \n\t\tif ( t != null ) { \n\t\t\tsubstituteAnchor ( o . getRayCoordsIndexed ( j ) , o , t ) ; \n\t\t\t} \n\t\t} \n\tfor ( $F2277 ( i , turntableList ) ) { \n\t\tLayoutTurntable lx = turntableList . get ( i ) ; \n\t\tif ( lx == o ) { \n\t\t\tturntableList . remove ( i ) ; \n\t\t\t$F7042 ( o ) setDirty ( _BOOL ) ; \n\t\t\trepaint ( ) ; \n\t\t\treturn ( _BOOL ) ; \n\t\t\t} \n\t\t} \n\treturn ( _BOOL ) ; \n\t} \n"}, {"code": "$F1 public final void endElement $F360 ( ns , lName , qName ) throws SAXException { \n\t$F89266 ( name , lName , qName ) $F89270 ( r , RULES , match ) if ( r != null ) { \n\t\tr . end ( name ) ; \n\t\t} \n\t$F24867 ( slash , match ) if ( slash >= NUM00 ) $F45800 ( match , slash ) else { \n\t\tmatch = NUM00 ; \n\t\t} \n\t} \n"}, {"code": "public INDArray asMatrix ( BufferedImage image ) { \n\tif ( channels == NUM00 ) $F4915 ( toBgr , image ) else { \n\t\timage = scalingIfNeed ( image , _BOOL ) ; \n\t\t$F2049 ( w , image ) $F2047 ( h , image ) INDArray ret = Nd4j . create ( h , w ) ; \n\t\tfor ( $F119 ( i , h ) ) { \n\t\t\tfor ( $F119 ( j , w ) ) { \n\t\t\t\tret . putScalar ( $F10511 ( i , j ) , image . getRGB ( i , j ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn ret ; \n\t\t} \n\t} \n"}, {"code": "public FileSystemUtils $F72 $F5795 ( super ) "}, {"code": "public int scheduledQueueSize $F72 $F1522 ( schedulerQueueSize ) "}, {"code": "public DGeneralNameChooser ( JFrame parent , String title , GeneralName generalName ) $F313840 ( super , parent , title , ModalityType , initComponents , generalName ) "}, {"code": "public void destroyScene $F72 { \n\tclearAnimations ( ) ; \n\tclearCameras ( ) ; \n\tclearLights ( ) ; \n\tclearPlugins ( ) ; \n\tclearChildren ( ) ; \n\tclearFrameCallbacks ( ) ; \n\t} \n"}, {"code": "private static Platform findPlatform $F72 { \n\ttry { \n\t\ttry { \n\t\t\t$F32352 ( Class ) } \n\t\tcatch ( ClassNotFoundException e ) { \n\t\t\t$F32352 ( Class ) } \n\t\tOptionalMethod < Socket > setUseSessionTickets = new OptionalMethod $F200 ( null , NUM00 , $F41254 ) ; \n\t\tOptionalMethod < Socket > setHostname = new OptionalMethod $F200 ( null , NUM00 , $F10062 ) ; \n\t\tMethod trafficStatsTagSocket = null ; \n\t\tMethod trafficStatsUntagSocket = null ; \n\t\tOptionalMethod < Socket > getAlpnSelectedProtocol = null ; \n\t\tOptionalMethod < Socket > setAlpnProtocols = null ; \n\t\ttry { \n\t\t\t$F109041 ( trafficStats , Class ) trafficStatsTagSocket = trafficStats . getMethod ( NUM00 , $F43259 ) ; \n\t\t\ttrafficStatsUntagSocket = trafficStats . getMethod ( NUM00 , $F43259 ) ; \n\t\t\ttry { \n\t\t\t\t$F32352 ( Class ) getAlpnSelectedProtocol = new OptionalMethod $F200 ( $F144055 , NUM00 ) ; \n\t\t\t\tsetAlpnProtocols = new OptionalMethod $F200 ( null , NUM00 , $F144055 ) ; \n\t\t\t\t} \n\t\t\tcatch ( ClassNotFoundException ignored ) $F845 } \n\t\tcatch ( ClassNotFoundException | NoSuchMethodException ignored ) $F845 return new Android ( setUseSessionTickets , setHostname , trafficStatsTagSocket , trafficStatsUntagSocket , getAlpnSelectedProtocol , setAlpnProtocols ) ; \n\t\t} \n\tcatch ( ClassNotFoundException ignored ) $F845 try { \n\t\tString negoClassName = NUM00 ; \n\t\t$F96883 ( negoClass , Class , negoClassName ) $F248719 ( providerClass , Class , negoClassName ) $F248719 ( clientProviderClass , Class , negoClassName ) $F248719 ( serverProviderClass , Class , negoClassName ) Method putMethod = negoClass . getMethod ( NUM00 , SSLSocket . class , providerClass ) ; \n\t\tMethod getMethod = negoClass . getMethod ( NUM00 , SSLSocket . class ) ; \n\t\tMethod removeMethod = negoClass . getMethod ( NUM00 , SSLSocket . class ) ; \n\t\treturn new JdkWithJettyBootPlatform ( putMethod , getMethod , removeMethod , clientProviderClass , serverProviderClass ) ; \n\t\t} \n\tcatch ( ClassNotFoundException | NoSuchMethodException ignored ) $F845 return new Platform $F72 ; \n\t} \n"}, {"code": "private void addLimitedMitreJoin ( LineSegment offset0 , LineSegment offset1 , double distance , double mitreLimit ) { \n\tCoordinate basePt = seg0 . p1 ; \n\tdouble ang0 = Angle . angle ( basePt , seg0 . p0 ) ; \n\tdouble ang1 = Angle . angle ( basePt , seg1 . p1 ) ; \n\tdouble angDiff = Angle . angleBetweenOriented ( seg0 . p0 , basePt , seg1 . p1 ) ; \n\tdouble angDiffHalf = angDiff / NUM00 ; \n\tdouble midAng = Angle . normalize ( ang0 + angDiffHalf ) ; \n\tdouble mitreMidAng = Angle . normalize ( midAng + Math . PI ) ; \n\tdouble mitreDist = mitreLimit * distance ; \n\tdouble bevelDelta = mitreDist * Math . abs ( Math . sin ( angDiffHalf ) ) ; \n\tdouble bevelHalfLen = distance - bevelDelta ; \n\tdouble bevelMidX = basePt . x + mitreDist * Math . cos ( mitreMidAng ) ; \n\tdouble bevelMidY = basePt . y + mitreDist * Math . sin ( mitreMidAng ) ; \n\tCoordinate bevelMidPt = new Coordinate ( bevelMidX , bevelMidY ) ; \n\tLineSegment mitreMidLine = new LineSegment ( basePt , bevelMidPt ) ; \n\tCoordinate bevelEndLeft = mitreMidLine . pointAlongOffset ( NUM00 , bevelHalfLen ) ; \n\tCoordinate bevelEndRight = mitreMidLine . pointAlongOffset ( NUM00 , - bevelHalfLen ) ; \n\tif ( side == Position . LEFT ) { \n\t\tsegList . addPt ( bevelEndLeft ) ; \n\t\tsegList . addPt ( bevelEndRight ) ; \n\t\t} \n\telse { \n\t\tsegList . addPt ( bevelEndRight ) ; \n\t\tsegList . addPt ( bevelEndLeft ) ; \n\t\t} \n\t} \n"}, {"code": "static $F49228 ( data , bytesCopied , i , isBase64 , groomedData , System , packedData ) "}, {"code": "public void testMultiplyDiffScalePosNeg $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\tString b = NUM00 ; \n\tint bScale = - NUM00 ; \n\tString c = NUM00 ; \n\tint cScale = NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) $F1918 ( bNumber , b , bScale ) $F168802 ( result , aNumber , bNumber ) $F1925 ( assertEquals , c , result ) $F1928 ( assertEquals , cScale , result ) } \n"}, {"code": "private static long limitDuration ( long leaseDuration , long limit ) { \n\tif ( leaseDuration == Lease . ANY || leaseDuration > limit ) leaseDuration = limit ; \n\telse $F30465 ( leaseDuration ) return leaseDuration ; \n\t} \n"}, {"code": "static String pathToCookiePath ( String path ) { \n\t$F4158 ( path ) $F24867 ( lastSlash , path ) return $F1399 ( path , lastSlash ) ; \n\t} \n"}, {"code": "public static String formatSimpleDecimal ( double d ) $F35907 ( simpleFormat , d ) "}, {"code": "protected AbstractCategoryItemLabelGenerator ( String labelFormat , DateFormat formatter ) { \n\t$F19400 ( ParamChecks , labelFormat ) $F19400 ( ParamChecks , formatter ) this . labelFormat = labelFormat ; \n\tthis . numberFormat = null ; \n\tthis . percentFormat = NumberFormat . getPercentInstance ( ) ; \n\tthis . dateFormat = formatter ; \n\tthis . nullValueString = NUM00 ; \n\t} \n"}, {"code": "public void delItems ( int s , int e ) { \n\tboolean hsbWasVisible = hsbVis ; \n\tboolean vsbWasVisible = vsbVis ; \n\tint oldLastDisplayed = lastItemDisplayed ( ) ; \n\tif $F58998 ( log , PlatformLogger ) { \n\t\t$F21516 ( log , s , e ) } \n\tif ( log . isLoggable ( PlatformLogger . Level . FINEST ) ) { \n\t\tlog . finest ( $F90567 ( oldLastDisplayed , itemsInWindow ) + items . size ( ) ) ; \n\t\t} \n\t$F110977 ( items ) $F63332 ( s , e , tmp ) $F17370 ( s ) if $F6389 ( e , items ) $F114853 ( e , items ) boolean repaintNeeded = ( s >= getFirstVisibleItem ( ) && s <= getLastVisibleItem ( ) ) ; \n\tfor ( int i = s ; \n\ti <= e ; \n\ti ++ ) { \n\t\titems . removeElementAt ( s ) ; \n\t\tint j = posInSel ( i ) ; \n\t\tif ( j != - NUM00 ) { \n\t\t\tint newsel [ ] = new int $F12500 ( selected ) ; \n\t\t\t$F135 ( System , selected , newsel , j ) System . arraycopy ( selected , j + NUM00 , newsel , j , selected . length - ( j + NUM00 ) ) ; \n\t\t\tselected = newsel ; \n\t\t\t} \n\t\t} \n\tint diff = ( e - s ) + NUM00 ; \n\tfor ( $F1139 ( i , selected ) ) { \n\t\tif ( selected [ i ] > e ) { \n\t\t\tselected [ i ] -= diff ; \n\t\t\t} \n\t\t} \n\tint options = PAINT_VSCROLL ; \n\tif ( getFocusIndex ( ) > e ) { \n\t\tsetFocusIndex ( getFocusIndex ( ) - ( e - s + NUM00 ) ) ; \n\t\toptions |= PAINT_FOCUS ; \n\t\t} \n\telse if ( getFocusIndex ( ) >= s && getFocusIndex ( ) <= e ) { \n\t\tint focusBound = $F3817 ( items ) ? NUM00 : - NUM00 ; \n\t\tsetFocusIndex ( Math . max ( s - NUM00 , focusBound ) ) ; \n\t\toptions |= PAINT_FOCUS ; \n\t\t} \n\tif ( log . isLoggable ( PlatformLogger . Level . FINEST ) ) { \n\t\t$F150605 ( log , multipleSelections ) } \n\tif ( vsb . getValue ( ) >= s ) { \n\t\tif ( vsb . getValue ( ) <= e ) { \n\t\t\tvsb . setValue ( e + NUM00 - diff ) ; \n\t\t\t} \n\t\telse { \n\t\t\tvsb . setValue ( vsb . getValue ( ) - diff ) ; \n\t\t\t} \n\t\t} \n\tint oldMaxLength = maxLength ; \n\tmaxLength = maxLength ( ) ; \n\tif ( maxLength != oldMaxLength ) { \n\t\toptions |= PAINT_HSCROLL ; \n\t\t} \n\tlayout ( ) ; \n\trepaintNeeded |= ( vsbWasVisible ^ vsbVis ) || ( hsbWasVisible ^ hsbVis ) ; \n\t$F576652 ( repaintNeeded , options , PAINT_ALL ) repaint ( s , oldLastDisplayed , options ) ; \n\t} \n"}, {"code": "static long makeId ( SnmpOid oid ) { \n\tlong id = NUM00 ; \n\t$F2469 arcs = oid . longValue ( _BOOL ) ; \n\tid |= arcs [ NUM00 ] < < NUM00 ; \n\tid |= arcs [ NUM00 ] < < NUM00 ; \n\tid |= arcs [ NUM00 ] < < NUM00 ; \n\tid |= arcs [ NUM00 ] < < NUM00 ; \n\tid |= arcs [ NUM00 ] < < NUM00 ; \n\tid |= arcs [ NUM00 ] < < NUM00 ; \n\tid |= arcs [ NUM00 ] < < NUM00 ; \n\tid |= arcs [ NUM00 ] ; \n\treturn id ; \n\t} \n"}, {"code": "private void cacheAttribute ( String attrId , $F31427 ( values ) ) { \n\tString cacheKey = name + NUM00 + attrId ; \n\tvalueCache . put ( cacheKey , values ) ; \n\t} \n"}, {"code": "void read ( Reader policy ) throws ParsingException , IOException { \n\tif ( ! ( policy instanceof BufferedReader ) ) { \n\t\tpolicy = new BufferedReader ( policy ) ; \n\t\t} \n\tst = new StreamTokenizer ( policy ) ; \n\t$F61733 ( st ) $F33902 ( st ) $F33902 ( st ) $F33902 ( st ) $F33902 ( st ) $F33902 ( st ) $F33902 ( st ) st . wordChars ( NUM00 + NUM00 , NUM00 ) ; \n\tst . whitespaceChars ( NUM00 , NUM00 ) ; \n\tst . commentChar ( NUM00 ) ; \n\t$F70966 ( st ) $F70966 ( st ) st . lowerCaseMode ( _BOOL ) ; \n\t$F33903 ( st ) st . slashSlashComments ( _BOOL ) ; \n\tst . slashStarComments ( _BOOL ) ; \n\tst . parseNumbers ( ) ; \n\tHashtable < String , $F11968 > processedPermissions = null ; \n\t$F39710 ( lookahead , st ) while ( lookahead != StreamTokenizer . TT_EOF ) { \n\t\tif ( peek ( NUM00 ) ) { \n\t\t\tGrantEntry ge = parseGrantEntry ( processedPermissions ) ; \n\t\t\tif ( ge != null ) grantEntries . addElement ( ge ) ; \n\t\t\t} \n\t\telse { \n\t\t\tthrow new ParsingException ( st . lineno ( ) , NUM00 + NUM00 ) ; \n\t\t\t} \n\t\tmatch ( NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "protected void injectIntoVolumeInformationContainer ( Map < String , StringSet > volumeInformation , String infoKey , String altKey , CIMInstance volumeInstance ) { \n\tObject value = getCIMPropertyValue ( volumeInstance , infoKey ) ; \n\tif ( null == value ) { \n\t\tvalue = getCIMPropertyValue ( volumeInstance , altKey ) ; \n\t\t} \n\tString charactersticName = SupportedVolumeInformation . getVolumeInformation ( infoKey ) ; \n\tif ( null != value && null != charactersticName ) { \n\t\t$F69100 ( valueSet ) if ( value instanceof String ) $F40035 ( valueSet , value ) else if $F103253 ( value ) { \n\t\t\tvalueSet . addAll ( Arrays . asList ( $F103254 ( value ) ) ) ; \n\t\t\t} \n\t\tvolumeInformation . put ( charactersticName , valueSet ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void onDetachedFromRecyclerView ( RecyclerView recyclerView ) { \n\tsuper . onDetachedFromRecyclerView ( recyclerView ) ; \n\tmAttachedRecyclerViewPool . remove ( recyclerView ) ; \n\t} \n"}, {"code": "private void loadFile ( String filename , AbstractFileLoader ... loaders ) { \n\tArffSortedTableModel model ; \n\tthis . m_Filename = filename ; \n\tcreateTitle ( ) ; \n\tif $F3057 ( filename ) { \n\t\tmodel = null ; \n\t\t} \n\telse { \n\t\tmodel = new ArffSortedTableModel ( filename , loaders ) ; \n\t\tmodel . setShowAttributeIndex ( getShowAttributeIndex ( ) ) ; \n\t\t} \n\tm_TableArff . setModel ( model ) ; \n\tsetChanged ( _BOOL ) ; \n\tcreateName ( ) ; \n\t} \n"}, {"code": "private void destinationTypeChanged $F72 { \n\t$F8249 ( m_Exp ) String str = NUM00 ; \n\tif ( m_ResultsDestinationCBox . getSelectedItem ( ) == DEST_DATABASE_TEXT ) { \n\t\t$F15121 ( m_ResultsDestinationPathLabel ) str = m_destinationDatabaseURL ; \n\t\tm_BrowseDestinationButton . setEnabled ( _BOOL ) ; \n\t\t$F15121 ( m_BrowseDestinationButton ) } \n\telse { \n\t\t$F15121 ( m_ResultsDestinationPathLabel ) if ( m_ResultsDestinationCBox . getSelectedItem ( ) == DEST_ARFF_TEXT ) { \n\t\t\t$F24867 ( ind , m_destinationFilename ) if ( ind > - NUM00 ) { \n\t\t\t\tm_destinationFilename = $F30497 ( m_destinationFilename , ind ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( m_ResultsDestinationCBox . getSelectedItem ( ) == DEST_CSV_TEXT ) { \n\t\t\t$F24867 ( ind , m_destinationFilename ) if ( ind > - NUM00 ) { \n\t\t\t\tm_destinationFilename = $F30497 ( m_destinationFilename , ind ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tstr = m_destinationFilename ; \n\t\tif ( m_ResultsDestinationCBox . getSelectedItem ( ) == DEST_ARFF_TEXT ) { \n\t\t\t$F24867 ( ind , str ) if ( ind > - NUM00 ) { \n\t\t\t\tstr = $F30497 ( str , ind ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( m_ResultsDestinationCBox . getSelectedItem ( ) == DEST_CSV_TEXT ) { \n\t\t\t$F24867 ( ind , str ) if ( ind > - NUM00 ) { \n\t\t\t\tstr = $F30497 ( str , ind ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tm_BrowseDestinationButton . setEnabled ( _BOOL ) ; \n\t\t$F15121 ( m_BrowseDestinationButton ) } \n\tif ( m_ResultsDestinationCBox . getSelectedItem ( ) == DEST_DATABASE_TEXT ) { \n\t\tDatabaseResultListener drl = null ; \n\t\ttry { \n\t\t\tdrl = new DatabaseResultListener $F72 ; \n\t\t\t} \n\t\t$F1516 ( e ) drl . setDatabaseURL ( m_destinationDatabaseURL ) ; \n\t\tm_Exp . setResultListener ( drl ) ; \n\t\t} \n\telse { \n\t\tif ( m_ResultsDestinationCBox . getSelectedItem ( ) == DEST_ARFF_TEXT ) { \n\t\t\tInstancesResultListener irl = new InstancesResultListener $F72 ; \n\t\t\tif $F1264 ( m_destinationFilename ) { \n\t\t\t\tirl . setOutputFile ( new File ( m_destinationFilename ) ) ; \n\t\t\t\t} \n\t\t\tm_Exp . setResultListener ( irl ) ; \n\t\t\t} \n\t\telse if ( m_ResultsDestinationCBox . getSelectedItem ( ) == DEST_CSV_TEXT ) { \n\t\t\tCSVResultListener crl = new CSVResultListener $F72 ; \n\t\t\tif $F1264 ( m_destinationFilename ) { \n\t\t\t\tcrl . setOutputFile ( new File ( m_destinationFilename ) ) ; \n\t\t\t\t} \n\t\t\tm_Exp . setResultListener ( crl ) ; \n\t\t\t} \n\t\t} \n\tm_ResultsDestinationPathTField . setText ( str ) ; \n\tm_Support . firePropertyChange ( $F244022 ) ; \n\t} \n"}, {"code": "public static InputStream tryGzipInput ( InputStream in ) throws IOException { \n\tif $F71795 ( in ) { \n\t\tPushbackInputStream pb = new PushbackInputStream ( in , NUM00 ) ; \n\t\tin = pb ; \n\t\t$F96 magic = $F104535 ; \n\t\tpb . read ( magic ) ; \n\t\tpb . unread ( magic ) ; \n\t\tif ( magic [ NUM00 ] == NUM00 && magic [ NUM00 ] == - NUM00 ) { \n\t\t\treturn new GZIPInputStream ( pb ) ; \n\t\t\t} \n\t\treturn in ; \n\t\t} \n\t$F46282 ( in ) boolean isgzip = ( in . read ( ) == NUM00 && in . read ( ) == - NUM00 ) ; \n\t$F2268 ( in ) if ( isgzip ) { \n\t\tin = new GZIPInputStream ( in ) ; \n\t\t} \n\treturn in ; \n\t} \n"}, {"code": "$F1 public int hashCode $F72 { \n\tif ( location != null ) $F16584 ( location ) else $F1082 } \n"}, {"code": "public static Query newPrefixQuery ( String field , InetAddress value , int prefixLength ) { \n\t$F826 ( value ) if ( prefixLength < NUM00 || prefixLength > NUM00 * value . getAddress ( ) . length ) $F29526 ( prefixLength ) byte lower [ ] = value . getAddress ( ) ; \n\tbyte upper [ ] = value . getAddress ( ) ; \n\tfor ( int i = prefixLength ; \n\ti < NUM00 * lower . length ; \n\ti ++ ) { \n\t\tint m = NUM00 < < ( NUM00 - ( i & NUM00 ) ) ; \n\t\tlower [ i > > NUM00 ] &= ~ m ; \n\t\tupper [ i > > NUM00 ] |= m ; \n\t\t} \n\ttry { \n\t\treturn newRangeQuery ( field , InetAddress . getByAddress ( lower ) , InetAddress . getByAddress ( upper ) ) ; \n\t\t} \n\tcatch ( UnknownHostException e ) $F27253 ( e ) } \n"}, {"code": "public static Subject createAMIdentitySubject ( PolicyManager pm , AMIdentity user ) throws PolicyException { \n\tSubjectTypeManager mgr = pm . getSubjectTypeManager ( ) ; \n\tSubject subject = mgr . getSubject ( NUM00 ) ; \n\t$F2695 ( set ) set . add ( user . getUniversalId ( ) ) ; \n\tsubject . setValues ( set ) ; \n\treturn subject ; \n\t} \n"}, {"code": "protected void expandFor ( int index , double d ) { \n\t$F87249 ( index , size ) int oldSize = size , capacity = vector . length ; \n\tsize = index + NUM00 ; \n\tif ( capacity >= size ) $F665 while ( capacity < size ) capacity *= NUM00 ; \n\t$F9662 ( t , capacity ) $F135 ( System , vector , t , oldSize ) if ( d != NUM00 ) Arrays . fill ( t , oldSize , size , d ) ; \n\tvector = t ; \n\t} \n"}, {"code": "private void doNormalCommandLineList ( $F3803 commandLineList , $F3803 jointOptions , Path classpath ) { \n\t$F18793 ( commandLineList ) $F40018 ( commandLineList , classpath ) if ( jointCompilation ) { \n\t\t$F18793 ( commandLineList ) commandLineList . addAll ( jointOptions ) ; \n\t\t} \n\tif ( destDir != null ) { \n\t\t$F18793 ( commandLineList ) commandLineList . add ( destDir . getPath ( ) ) ; \n\t\t} \n\tif ( encoding != null ) { \n\t\t$F18793 ( commandLineList ) commandLineList . add ( encoding ) ; \n\t\t} \n\tif ( stacktrace ) $F71145 ( commandLineList ) if ( parameters ) $F71145 ( commandLineList ) if ( useIndy ) $F71145 ( commandLineList ) if ( scriptBaseClass != null ) { \n\t\t$F18793 ( commandLineList ) commandLineList . add ( scriptBaseClass ) ; \n\t\t} \n\tif ( configscript != null ) { \n\t\t$F18793 ( commandLineList ) commandLineList . add ( configscript ) ; \n\t\t} \n\t} \n"}, {"code": "private synchronized void loadHexImage ( IHex hex ) { \n\thexTileset . assignMatch ( hex , boardview ) ; \n\thexTileset . trackHexImages ( hex , tracker ) ; \n\t} \n"}, {"code": "public void triangulate ( PointSet ps ) { \n\t$F725 ( _triangulations ) _triangulations . add ( ps ) ; \n\tstart ( ) ; \n\t} \n"}, {"code": "public String base64UrlEncode $F97 ( data ) { \n\tString encodedData = new String ( Base64 . encode ( data , Base64 . URL_SAFE ) ) ; \n\t$F2936 ( encodedData ) $F2936 ( encodedData ) return encodedData ; \n\t} \n"}, {"code": "private void writeJavaFieldSpec ( JavaFieldSpec spec , Document document , Element parentElement ) { \n\t$F8382 ( parameter , document ) parameter . appendChild ( parentElement ) ; \n\tparameter . setAttribute ( NUM00 , spec . getPackageName ( ) ) ; \n\tparameter . setAttribute ( NUM00 , spec . getClassName ( ) ) ; \n\tparameter . setAttribute ( NUM00 , spec . getFieldName ( ) ) ; \n\t} \n"}, {"code": "private void readObject ( ObjectInputStream s ) throws $F6427 { \n\t$F6428 ( s ) init ( getMask ( actions ) ) ; \n\t} \n"}, {"code": "$F1 public synchronized void parse ( Reader reader , String baseURI ) throws IOException , RDFParseException , RDFHandlerException { \n\t$F826 ( reader ) $F826 ( baseURI ) $F77995 ( inputSource , reader ) inputSource . setSystemId ( baseURI ) ; \n\tparse ( inputSource ) ; \n\t} \n"}, {"code": "private String excludeDestinationStatement ( String text ) { \n\tint idx = - NUM00 ; \n\tif $F48458 ( idx , text ) $F45800 ( text , idx ) return text ; \n\t} \n"}, {"code": "static $F49228 ( data , bytesCopied , i , isBase64 , groomedData , System , packedData ) "}, {"code": "protected static final String addEscapes ( String str ) { \n\t$F83 ( retval ) char ch ; \n\tfor ( $F1088 ( i , str ) ) { \n\t\tswitch $F31372 ( str , i ) { \n\t\t\t$F3366 $F598 $F31374 ( retval ) $F31374 ( retval ) $F31374 ( retval ) $F31374 ( retval ) $F31374 ( retval ) $F31374 ( retval ) $F31374 ( retval ) $F31374 ( retval ) $F1267 if ( $F31375 ( ch , str , i ) < NUM00 || ch > NUM00 ) { \n\t\t\t\tString s = NUM00 + Integer . toString ( ch , NUM00 ) ; \n\t\t\t\tretval . append ( NUM00 + s . substring ( $F1092 ( s ) , s . length ( ) ) ) ; \n\t\t\t\t} \n\t\t\telse $F288 ( retval , ch ) $F598 } \n\t\t} \n\t$F92 ( retval ) } \n"}, {"code": "public static void addFile ( String s ) throws IOException { \n\t$F1705 ( f , s ) addFile ( f ) ; \n\t} \n"}, {"code": "$F28183 public final void insert ( int rowIndex , T ... newItems ) $F254297 ( insert , rowIndex , Arrays , newItems ) "}, {"code": "$F1309 public void put ( $F2306 data ) { \n\tfor ( Integer value : data ) { \n\t\tfinal int val = value . intValue ( ) ; \n\t\tmin = val < min ? val : min ; \n\t\tmax = val > max ? val : max ; \n\t\t} \n\t} \n"}, {"code": "public IntBuffer majorVersionBuffer $F72 { \n\t$F11844 ( holder ) $F320194 ( holder , getMajorVersion ) $F23500 ( ib , IntBuffer , holder ) ib . limit ( NUM00 ) ; \n\treturn ib ; \n\t} \n"}, {"code": "public CreateIndexRequest source ( XContentBuilder source ) { \n\treturn source ( source . bytes ( ) ) ; \n\t} \n"}, {"code": "public static $F96 createDataToSign $F97 ( digest ) { \n\t$F12490 ( prefix , getDigestInfoPrefix , digest ) $F148496 ( digestInfo , prefix , digest ) $F7057 ( System , prefix , digestInfo ) $F11244 ( System , digest , digestInfo , prefix ) return digestInfo ; \n\t} \n"}, {"code": "public HttpRequest ifModifiedSince ( final long value ) { \n\tconnection . setIfModifiedSince ( value ) ; \n\treturn this ; \n\t} \n"}, {"code": "public static String tmpJournal $F72 { \n\tfinal File file = Code . wrapThrow ( null ) ; \n\t$F60829 ( file ) $F33744 ( file ) } \n"}, {"code": "public void push ( final float value ) { \n\t$F31338 ( bits , Float , value ) if $F31340 ( bits ) { \n\t\tmv . visitInsn ( Opcodes . FCONST_0 + ( int ) value ) ; \n\t\t} \n\telse $F31345 ( mv , value ) } \n"}, {"code": "public static Object newInstance ( $F6969 cl , $F2027 dims ) { \n\tif $F9634 ( dims ) { \n\t\tdims = $F96424 ; \n\t\t} \n\t$F29130 ( Array , cl , dims ) } \n"}, {"code": "private static void decodeAnsiX12Segment ( BitSource bits , StringBuilder result ) throws FormatException { \n\t$F11844 ( cValues ) do { \n\t\t$F46340 ( bits ) $F2847 ( firstByte , bits ) $F32905 ( firstByte ) $F46342 ( parseTwoBytes , firstByte , bits , cValues ) for ( $F6268 ( i ) ) { \n\t\t\tint cValue = cValues [ i ] ; \n\t\t\tif ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue < NUM00 ) $F46359 ( result , cValue ) else if ( cValue < NUM00 ) $F46359 ( result , cValue ) else $F2172 ( FormatException ) } \n\t\t} \n\twhile $F2892 ( bits ) ; \n\t} \n"}, {"code": "public void playTogether ( Collection $F113170 items ) { \n\tif $F8841 ( items ) { \n\t\tmNeedsSort = _BOOL ; \n\t\tBuilder builder = null ; \n\t\tfor ( Animator anim : items ) { \n\t\t\tif ( builder == null ) { \n\t\t\t\tbuilder = play ( anim ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tbuilder . with ( anim ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected static void printErrorMessage ( Exception e ) { \n\tif ( e instanceof AbortException ) { \n\t\tLoggingConfiguration . setVerbose ( Level . VERBOSE ) ; \n\t\tLOG . verbose ( e . getMessage ( ) ) ; \n\t\t} \n\telse if ( e instanceof UnspecifiedParameterException ) $F27824 ( LOG , e ) else if ( e instanceof ParameterException ) $F27824 ( LOG , e ) else { \n\t\tLOG . exception ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public String requestStatistics $F72 { \n\t$F4910 ( sb ) makeStringBuffer ( sb ) ; \n\t$F92 ( sb ) } \n"}, {"code": "private void applyL1Reg ( final double eta_t , Vec x ) { \n\tif ( lambda1 > NUM00 ) { \n\t\tl1U += eta_t * lambda1 ; \n\t\tfor ( $F1139 ( k , ws ) ) { \n\t\t\tfinal Vec w_k = ws [ k ] ; \n\t\t\t$F10228 ( l1Q_k , l1Q , k ) for ( IndexValue iv : x ) { \n\t\t\t\tfinal int i = iv . getIndex ( ) ; \n\t\t\t\tfinal double z = w_k . get ( i ) ; \n\t\t\t\tdouble newW_i = NUM00 ; \n\t\t\t\tif ( z > NUM00 ) newW_i = Math . max ( NUM00 , z - ( l1U + l1Q_k [ i ] ) ) ; \n\t\t\t\telse if ( z < NUM00 ) newW_i = Math . min ( NUM00 , z + ( l1U - l1Q_k [ i ] ) ) ; \n\t\t\t\tl1Q_k [ i ] += ( newW_i - z ) ; \n\t\t\t\tw_k . set ( i , newW_i ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public void keyPressed ( KeyEvent e ) { \n\tsynchronized ( keyLock ) { \n\t\tkeysDown . add ( e . getKeyCode ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static String slurpURLNoExceptions ( URL u , String encoding ) { \n\ttry $F8587 ( slurpURL , u , encoding ) $F84580 ( e ) } \n"}, {"code": "public static MoveParticipant [ ] loadMoveParticipants ( RefactoringStatus status , RefactoringProcessor processor , Object element , MoveArguments arguments , IParticipantDescriptorFilter filter , $F806 affectedNatures , SharableParticipants shared ) { \n\tRefactoringParticipant [ ] participants = fgMoveExtensions . getParticipants ( status , processor , element , arguments , filter , affectedNatures , shared ) ; \n\tMoveParticipant [ ] result = new MoveParticipant [ participants . length ] ; \n\t$F7057 ( System , participants , result ) return result ; \n\t} \n"}, {"code": "private $F2469 determinePreferenceVector ( $F42616 relation , ModifiableDBIDs [ ] neighborIDs , StringBuilder msg ) { \n\tif ( strategy . equals ( Strategy . APRIORI ) ) $F19580 ( determinePreferenceVectorByApriori , relation , neighborIDs , msg ) else if ( strategy . equals ( Strategy . MAX_INTERSECTION ) ) $F8587 ( determinePreferenceVectorByMaxIntersection , neighborIDs , msg ) else $F4639 } \n"}, {"code": "private void paintForegroundDisabled $F269611 ( g , width , height ) { \n\tShape s = decodeArrowPath ( width , height ) ; \n\tg . setPaint ( disabledColor ) ; \n\tg . fill ( s ) ; \n\t} \n"}, {"code": "public void testFlipBitNegativeInside1 $F72 { \n\t$F17888 int aSign = - NUM00 ; \n\tint number = NUM00 ; \n\tbyte $F3018 = { \n\t\t- NUM00 , NUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F103435 ( result , aNumber , number ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F7841 ( assertEquals , result ) } \n"}, {"code": "private void onUser ( $F1113 TLAbsUser absUser ) { \n\tUser currentUser = null ; \n\tUser user = null ; \n\tif ( absUser instanceof TLUser ) { \n\t\tfinal TLUser tlUser = ( TLUser ) absUser ; \n\t\tif ( tlUser . isMutualContact ( ) ) { \n\t\t\tcurrentUser = ( User ) databaseManager . getUserById ( tlUser . getId ( ) ) ; \n\t\t\tuser = onUserContact ( currentUser , tlUser ) ; \n\t\t\t} \n\t\telse if ( tlUser . isDeleted ( ) ) { \n\t\t\tcurrentUser = ( User ) databaseManager . getUserById ( tlUser . getId ( ) ) ; \n\t\t\tuser = onUserDelete ( currentUser , tlUser ) ; \n\t\t\t} \n\t\telse if ( tlUser . isContact ( ) ) { \n\t\t\tcurrentUser = ( User ) databaseManager . getUserById ( tlUser . getId ( ) ) ; \n\t\t\tuser = onUserRequest ( currentUser , tlUser ) ; \n\t\t\t} \n\t\telse if ( tlUser . isSelf ( ) || ! tlUser . isBot ( ) ) { \n\t\t\tcurrentUser = ( User ) databaseManager . getUserById ( tlUser . getId ( ) ) ; \n\t\t\tuser = onUserForeign ( currentUser , tlUser ) ; \n\t\t\t} \n\t\telse { \n\t\t\tBotLogger . info ( LOGTAG , NUM00 ) ; \n\t\t\t} \n\t\t} \n\tif ( ( currentUser == null ) && ( user != null ) ) { \n\t\tdatabaseManager . addUser ( user ) ; \n\t\t} \n\telse if ( user != null ) { \n\t\tdatabaseManager . updateUser ( user ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public boolean hasNext $F72 { \n\t$F37599 ( log , Level ) boolean result = ( nextEvent != null ) ; \n\tlog . log ( Level . FINE , NUM00 , result ) ; \n\treturn result ; \n\t} \n"}, {"code": "$F1 public void close $F72 { \n\ttry $F6399 ( connection ) catch ( SQLException e ) $F302 ( e ) } \n"}, {"code": "public static XMPMeta extractXMPMeta ( InputStream is ) { \n\t$F128075 sections = parse ( is , _BOOL ) ; \n\t$F1338 ( sections ) for ( Section section : sections ) { \n\t\tif ( hasXMPHeader ( section . data ) ) { \n\t\t\tint end = getXMPContentEnd ( section . data ) ; \n\t\t\t$F277754 ( buffer , end , XMP_HEADER_SIZE ) System . arraycopy ( section . data , XMP_HEADER_SIZE , buffer , NUM00 , buffer . length ) ; \n\t\t\ttry { \n\t\t\t\tXMPMeta result = XMPMetaFactory . parseFromBuffer ( buffer ) ; \n\t\t\t\treturn result ; \n\t\t\t\t} \n\t\t\tcatch ( XMPException e ) { \n\t\t\t\t$F96563 ( Log , TAG , e ) $F1274 } \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "private void initialize ( ModelValidator validator , MClient client ) { \n\tif ( client == null ) m_globalValidators . add ( validator ) ; \n\tm_validators . add ( validator ) ; \n\tvalidator . initialize ( this , client ) ; \n\t} \n"}, {"code": "void crossOver ( BayesNetRepresentation other ) { \n\t$F24314 ( bits , m_bits ) for ( $F1139 ( i , m_bits ) ) $F15086 ( bits , i , m_bits ) int iCrossOverPoint = m_bits . length ; \n\tdo { \n\t\tfor ( $F9958 ( i , iCrossOverPoint , m_bits ) ) $F15086 ( m_bits , i , bits ) iCrossOverPoint = m_random . nextInt ( m_bits . length ) ; \n\t\tfor ( $F9958 ( i , iCrossOverPoint , m_bits ) ) { \n\t\t\t$F439467 ( m_bits , i , other ) } \n\t\t} \n\twhile ( hasCycles ( ) ) ; \n\tcalcGlobalScore ( ) ; \n\t} \n"}, {"code": "public void reset $F72 $F62354 ( engineReset , state , INITIAL ) "}, {"code": "public Perspective createUserPerspective $F4708 ( name , show ) { \n\tPerspective perspective = model . addPerspective ( name , _BOOL ) ; \n\tperspective . store ( context ) ; \n\t$F72524 ( show , showPerspective , name ) return perspective ; \n\t} \n"}, {"code": "public static double phred ( double error ) { \n\treturn - NUM00 * Math . log10 ( error ) ; \n\t} \n"}, {"code": "public static String of ( CtClass type ) { \n\t$F280 ( sbuf ) toDescriptor ( sbuf , type ) ; \n\t$F92 ( sbuf ) } \n"}, {"code": "public abstract String encode $F72 ; \n"}, {"code": "$F28183 public final Token < TokenType > expect ( TokenType ... expected ) throws SimpleParserException { \n\t$F7450 ( hasType , expected , this ) throw new SimpleParserException ( line , column , $F11846 ( Arrays , expected ) + toString ( ) ) ; \n\t} \n"}, {"code": "public void testUpdate3 $F72 { \n\tint newValue1 = - NUM00 ; \n\tint newValue2 = - NUM00 ; \n\tString updateQuery = $F103214 ( DatabaseCreator , newValue1 ) + newValue2 ; \n\ttry { \n\t\t$F32305 ( num , statement , updateQuery ) assertEquals ( NUM00 , numberOfRecords , num ) ; \n\t\t$F32306 ( selectQuery , DatabaseCreator ) $F15328 ( result , statement , selectQuery ) $F32307 ( result ) $F59 ( result ) } \n\t$F32310 ( fail , e ) } \n"}, {"code": "public void testSetNull $F72 throws Exception { \n\t$F151311 ( stmt , connection ) try { \n\t\t$F270830 ( stmt ) stmt . setBytes ( NUM00 , null ) ; \n\t\t$F3917 ( stmt ) $F270830 ( stmt ) stmt . setBinaryStream ( NUM00 , null , NUM00 ) ; \n\t\t$F3917 ( stmt ) $F270830 ( stmt ) stmt . setString ( NUM00 , null ) ; \n\t\t$F3917 ( stmt ) } \n\t$F3229 ( stmt ) } \n"}, {"code": "$F1309 public boolean isAssignableFrom ( Type from ) { \n\t$F1933 ( from , _BOOL ) $F12418 ( type , from , _BOOL ) if ( type instanceof $F6969 ) { \n\t\treturn rawType . isAssignableFrom ( $Gson$Types . getRawType ( from ) ) ; \n\t\t} \n\telse if ( type instanceof ParameterizedType ) { \n\t\treturn isAssignableFrom ( from , ( ParameterizedType ) type , new HashMap < String , Type > $F72 ) ; \n\t\t} \n\telse if ( type instanceof GenericArrayType ) { \n\t\treturn rawType . isAssignableFrom ( $Gson$Types . getRawType ( from ) ) && isAssignableFrom ( from , ( GenericArrayType ) type ) ; \n\t\t} \n\telse { \n\t\tthrow buildUnexpectedTypeError ( type , Class . class , ParameterizedType . class , GenericArrayType . class ) ; \n\t\t} \n\t} \n"}, {"code": "EgDemandDetails insertPenalty ( final BigDecimal chqBouncePenalty , final Module module ) { \n\tEgDemandDetails demandDetail = null ; \n\tif ( chqBouncePenalty != null && $F17645 ( chqBouncePenalty , BigDecimal ) > NUM00 ) { \n\t\tfinal Installment currInstallment = getCurrentInstallment ( module ) ; \n\t\tfinal EgDemandReasonMaster egDemandReasonMaster = demandGenericDao . getDemandReasonMasterByCode ( DEMANDRSN_CODE_CHQ_BOUNCE_PENALTY , module ) ; \n\t\tif ( egDemandReasonMaster == null ) $F311734 final EgDemandReason egDemandReason = demandGenericDao . getDmdReasonByDmdReasonMsterInstallAndMod ( egDemandReasonMaster , currInstallment , module ) ; \n\t\tif ( egDemandReason == null ) $F311734 demandDetail = EgDemandDetails . fromReasonAndAmounts ( chqBouncePenalty , egDemandReason , BigDecimal . ZERO ) ; \n\t\t} \n\treturn demandDetail ; \n\t} \n"}, {"code": "public SampleInfo ( ByteBuffer bb ) throws IOException { \n\t$F128713 ( numberOfChannels , bb ) $F128713 ( sampleRate , bb ) coeffMin = bb . getFloat ( ) ; \n\tcoeffRange = bb . getFloat ( ) ; \n\tpostEmphasis = bb . getFloat ( ) ; \n\t$F128713 ( residualFold , bb ) } \n"}, {"code": "public void handleMaintenance ( Operation maintOp ) { \n\tperformPendingRequestMaintenance ( ) ; \n\tcheckAndScheduleSynchronization ( this . cachedGroupState . membershipUpdateTimeMicros ) ; \n\t$F168274 ( maintOp ) } \n"}, {"code": "$F3594 ( oredCriteria , orderByClause , distinct , _BOOL ) "}, {"code": "public $F4203 T time $F41334 ( event ) throws Exception { \n\tfinal long startTime = clock . tick ( ) ; \n\ttry $F41336 ( event ) finally { \n\t\tupdate ( clock . tick ( ) - startTime ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isPostJDK7 ( String bytecodeVersion ) { \n\t$F273158 ( JDK7 , bytecodeVersion , JDK8 ) } \n"}, {"code": "public PutIndexTemplateRequest mapping $F4353 ( type , source ) { \n\tmapping ( type , PutMappingRequest . buildFromSimplifiedDef ( type , source ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "private InputStream findTemplate ( String path , String template ) { \n\ttry { \n\t\t$F4453 ( file , path , template ) if $F351048 ( file ) { \n\t\t\treturn new BufferedInputStream ( new FileInputStream $F89450 ( file ) ) ; \n\t\t\t} \n\t\telse $F1337 } \n\tcatch ( FileNotFoundException fnfe ) $F1337 } \n"}, {"code": "$F20296 ( mRootDirectory , VolleyLog , files , file , fis , entry , CacheHeader , putEntry ) "}, {"code": "public void addListener ( CircularProgressViewListener listener ) { \n\t$F67023 ( listener , listeners ) } \n"}, {"code": "public SiteStatusCheckThreadImpl $F72 { \n\tsuper ( ) ; \n\t$F12775 ( urlCheckers ) } \n"}, {"code": "$F1 public void render ( final int type , final Graphics2D g2 , final float scaling , final boolean isFormGlyph ) { \n\tglyphDisplay . setScalingValues ( NUM00 , NUM00 , scaling ) ; \n\tfinal float OLDglyphScale = glyphScale ; \n\tif ( isFormGlyph ) { \n\t\tglyphScale = scaling * glyphScale ; \n\t\t} \n\tAffineTransform aff = null ; \n\tif ( glyphScale != NUM00 ) { \n\t\taff = g2 . getTransform ( ) ; \n\t\tg2 . scale ( glyphScale , glyphScale ) ; \n\t\t} \n\tglyphDisplay . setG2 ( g2 ) ; \n\tglyphDisplay . paint ( $F32718 ) ; \n\tif ( aff != null ) { \n\t\tg2 . setTransform ( aff ) ; \n\t\t} \n\tglyphScale = OLDglyphScale ; \n\t} \n"}, {"code": "$F166447 ( propertyName , in_vcl , beanContextChildSupport ) "}, {"code": "$F13735 ( prefix , namespace , attName , attValue , xmlWriter ) "}, {"code": "public $F3803 reset $F24643 ( replace ) { \n\t$F5 $F37973 ( copy , retainedVars ) ; \n\tcopy . addAll ( retainedVars ) ; \n\t$F725 ( retainedVars ) $F36447 ( replace , retainedVars ) return copy ; \n\t} \n"}, {"code": "protected void release $F72 { \n\tAppContext tempAppContext = null ; \n\tsynchronized ( grabReleaseSynchronizer ) { \n\t\tif ( usageCount > NUM00 ) { \n\t\t\t-- usageCount ; \n\t\t\t} \n\t\telse { \n\t\t\tsynchronized ( threadGroupSynchronizer ) $F20182 ( tempAppContext , resetAppContext ) } \n\t\t} \n\tif ( tempAppContext != null ) { \n\t\ttry $F47532 ( tempAppContext ) catch ( IllegalThreadStateException e ) $F845 } \n\t} \n"}, {"code": "public synchronized void deleteAllTables $F72 { \n\t$F3803 tableNames = new $F5 $F57797 ( tableLookup ) ; \n\tfor ( String s : tableNames ) { \n\t\tdeleteTable ( s ) ; \n\t\t} \n\t} \n"}, {"code": "public PetCategory findOne ( String id ) { \n\t$F7028 ( log , id ) PetCategory petCategory = petCategoryRepository . findOne ( UUID . fromString ( id ) ) ; \n\treturn petCategory ; \n\t} \n"}, {"code": "private void markRemovedDefaultSessionToken ( String site , String token ) { \n\tif ( removedDefaultTokens == null ) removedDefaultTokens = new $F4188 $F989 ; \n\t$F2690 removedSet = removedDefaultTokens . get ( site ) ; \n\tif ( removedSet == null ) { \n\t\tremovedSet = new $F9623 $F989 ; \n\t\tremovedDefaultTokens . put ( site , removedSet ) ; \n\t\t} \n\tremovedSet . add ( token ) ; \n\t} \n"}, {"code": "private Map < URI , Map < URI , Map $F159997 > > createDeviceToCGMapFromDescriptors ( $F81867 addDescriptors , $F81867 removeDescriptors ) { \n\tMap < URI , Map < URI , Map $F159997 > > deviceToCGMap = new HashMap < URI , Map < URI , Map $F159997 > > $F72 ; \n\tfor ( VolumeDescriptor descr : addDescriptors ) { \n\t\tURI deviceURI = descr . getDeviceURI ( ) ; \n\t\tMap < URI , Map $F159997 > volumesToUpdateByCG = deviceToCGMap . get ( deviceURI ) ; \n\t\tif ( volumesToUpdateByCG == null ) { \n\t\t\tvolumesToUpdateByCG = new HashMap < URI , Map $F159997 > $F72 ; \n\t\t\tdeviceToCGMap . put ( deviceURI , volumesToUpdateByCG ) ; \n\t\t\t} \n\t\tURI consistencyGroupURI = descr . getConsistencyGroupURI ( ) ; \n\t\tMap $F159997 volumesToUpdate = volumesToUpdateByCG . get ( consistencyGroupURI ) ; \n\t\tif ( volumesToUpdate == null ) { \n\t\t\tvolumesToUpdate = new HashMap $F159997 $F72 ; \n\t\t\tvolumesToUpdateByCG . put ( consistencyGroupURI , volumesToUpdate ) ; \n\t\t\t} \n\t\t$F28584 volumesToAdd = volumesToUpdate . get ( ADD_VOLUMES_TO_CG_KEY ) ; \n\t\tif ( volumesToAdd == null ) { \n\t\t\tvolumesToAdd = new ArrayList < URI > $F72 ; \n\t\t\tvolumesToUpdate . put ( ADD_VOLUMES_TO_CG_KEY , volumesToAdd ) ; \n\t\t\t} \n\t\tvolumesToAdd . add ( descr . getVolumeURI ( ) ) ; \n\t\t} \n\tfor ( VolumeDescriptor descr : removeDescriptors ) { \n\t\tURI deviceURI = descr . getDeviceURI ( ) ; \n\t\tMap < URI , Map $F159997 > volumesToUpdateByCG = deviceToCGMap . get ( deviceURI ) ; \n\t\tif ( volumesToUpdateByCG == null ) { \n\t\t\tvolumesToUpdateByCG = new HashMap < URI , Map $F159997 > $F72 ; \n\t\t\tdeviceToCGMap . put ( deviceURI , volumesToUpdateByCG ) ; \n\t\t\t} \n\t\tURI consistencyGroupURI = descr . getConsistencyGroupURI ( ) ; \n\t\tMap $F159997 volumesToUpdate = volumesToUpdateByCG . get ( consistencyGroupURI ) ; \n\t\tif ( volumesToUpdate == null ) { \n\t\t\tvolumesToUpdate = new HashMap $F159997 $F72 ; \n\t\t\tvolumesToUpdateByCG . put ( consistencyGroupURI , volumesToUpdate ) ; \n\t\t\t} \n\t\t$F28584 volumesToRemove = volumesToUpdate . get ( REMOVE_VOLUMES_FROM_CG_KEY ) ; \n\t\tif ( volumesToRemove == null ) { \n\t\t\tvolumesToRemove = new ArrayList < URI > $F72 ; \n\t\t\tvolumesToUpdate . put ( REMOVE_VOLUMES_FROM_CG_KEY , volumesToRemove ) ; \n\t\t\t} \n\t\tvolumesToRemove . add ( descr . getVolumeURI ( ) ) ; \n\t\t} \n\treturn deviceToCGMap ; \n\t} \n"}, {"code": "public Exchange ( final Request request , final Origin origin ) { \n\tthis . currentRequest = request ; \n\tthis . origin = origin ; \n\tthis . timestamp = System . currentTimeMillis ( ) ; \n\t} \n"}, {"code": "public static float computeDiscardAlpha ( float amount , float range ) { \n\tif $F20932 ( Math , amount ) $F1082 float t = amount / range ; \n\tt = MathUtils . clamp ( t , - NUM00 , NUM00 ) ; \n\treturn NUM00 - Math . abs ( t ) ; \n\t} \n"}, {"code": "public static final FileTime unixTimeToFileTime ( long utime ) { \n\treturn FileTime . from ( utime , TimeUnit . SECONDS ) ; \n\t} \n"}, {"code": "public static CipherTextIvMac encrypt ( String plaintext , SecretKeys secretKeys , String encoding ) throws UnsupportedEncodingException , GeneralSecurityException { \n\treturn encrypt ( plaintext . getBytes ( encoding ) , secretKeys ) ; \n\t} \n"}, {"code": "public void removeAddress ( AddressEntity address ) $F106 ( addresses , address ) "}, {"code": "$F1 protected void onMeasure ( int widthMeasureSpec , int heightMeasureSpec ) { \n\t$F20444 ( widthSpecMode , MeasureSpec , widthMeasureSpec ) $F20444 ( heightSpecMode , MeasureSpec , heightMeasureSpec ) $F23132 ( parentWidth , MeasureSpec , widthMeasureSpec ) $F23132 ( parentHeight , MeasureSpec , heightMeasureSpec ) boolean resizeWidth = widthSpecMode != MeasureSpec . EXACTLY ; \n\tboolean resizeHeight = heightSpecMode != MeasureSpec . EXACTLY ; \n\tint width = parentWidth ; \n\tint height = parentHeight ; \n\tif ( sWidth > NUM00 && sHeight > NUM00 ) { \n\t\tif ( resizeWidth && resizeHeight ) { \n\t\t\twidth = sWidth ( ) ; \n\t\t\theight = sHeight ( ) ; \n\t\t\t} \n\t\telse if ( resizeHeight ) { \n\t\t\theight = ( int ) ( ( ( $F69510 ( sHeight ) / $F69510 ( sWidth ) ) * width ) ) ; \n\t\t\t} \n\t\telse if ( resizeWidth ) { \n\t\t\twidth = ( int ) ( ( ( $F69510 ( sWidth ) / $F69510 ( sHeight ) ) * height ) ) ; \n\t\t\t} \n\t\t} \n\t$F53909 ( width , Math , getSuggestedMinimumWidth ) $F53909 ( height , Math , getSuggestedMinimumHeight ) setMeasuredDimension ( width , height ) ; \n\t} \n"}, {"code": "protected void fireEndElem ( String name ) throws $F2253 { \n\tif ( m_tracer != null ) { \n\t\tflushMyWriter ( ) ; \n\t\tm_tracer . fireGenerateEvent ( SerializerTrace . EVENTTYPE_ENDELEMENT , name , ( Attributes ) null ) ; \n\t\t} \n\t} \n"}, {"code": "private boolean verifyMigrateFromProductHome ( String migrateFromProductHome ) throws InstallException { \n\tif $F6036 ( migrateFromProductHome ) { \n\t\tDebug . log ( NUM00 + NUM00 ) ; \n\t\tConsole . println ( LocalizedMessage . get ( LOC_HR_MSG_MIGRATE_NONE_FOUND ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tif ( ! migrateFromProductHome . equals ( ConfigUtil . getHomePath ( ) ) ) { \n\t\tDebug . log ( NUM00 + NUM00 + migrateFromProductHome + NUM00 + ConfigUtil . getHomePath ( ) ) ; \n\t\tString translateFile = migrateFromProductHome + MigrateFromInstFinderStore . getRelativeTranslateFile ( ) ; \n\t\tif ( ! FileUtils . isFileValid ( translateFile ) ) { \n\t\t\tConsole . println ( LocalizedMessage . get ( LOC_HR_MSG_MIGRATE_NONE_FOUND ) ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tDebug . log ( NUM00 + NUM00 ) ; \n\t\tthrow new InstallException $F73204 ( LocalizedMessage , LOC_DR_ERR_PRODUCT_ALREADY_MIGRATED ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public Spanned [ ] history $F72 { \n\tint i = NUM00 ; \n\tSpanned [ ] array = new Spanned $F2313 ( history ) ; \n\tfor ( String s : history ) { \n\t\tif ( s != null ) { \n\t\t\tarray [ i ] = Html . fromHtml ( s ) ; \n\t\t\ti ++ ; \n\t\t\t} \n\t\t} \n\treturn array ; \n\t} \n"}, {"code": "public static String format $F13180 ( message , arguments ) { \n\t$F27028 ( MessageFormat , message , arguments ) } \n"}, {"code": "private void insertProsodySettings ( Utterance utterance , Element element ) { \n\tElement prosody = ( Element ) DomUtils . getAncestor ( element , MaryXML . PROSODY ) ; \n\t$F2329 ( prosody ) Element voice = ( Element ) DomUtils . getAncestor ( element , MaryXML . VOICE ) ; \n\tif ( voice != null && DomUtils . isAncestor ( prosody , voice ) ) $F932 Element paragraph = ( Element ) DomUtils . getAncestor ( element , MaryXML . PARAGRAPH ) ; \n\tif ( paragraph != null && DomUtils . isAncestor ( prosody , paragraph ) ) $F932 for ( String att : PROSODY_ATTRIBUTES ) { \n\t\t$F57219 ( val , prosody , att ) if $F1264 ( val ) { \n\t\t\tutterance . setString ( att , val ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static boolean createFolder ( $F1431 Context mContext , String path , String folderName ) { \n\t$F4453 ( SDCardRoot , path , folderName ) if $F1906 ( SDCardRoot ) { \n\t\treturn SDCardRoot . mkdir ( ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F73303 ( axis , trans , prevImageSize , imageSize , prevViewSize , viewSize , drawableSize , m , Matrix , percentage , Math ) "}, {"code": "private CharSequence createTickerText ( String title , String body ) { \n\tSpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder $F72 ; \n\tspannableStringBuilder . append ( title ) ; \n\t$F84 ( spannableStringBuilder ) spannableStringBuilder . append ( body ) ; \n\tspannableStringBuilder . setSpan ( new StyleSpan ( android . graphics . Typeface . BOLD ) , NUM00 , title . length ( ) , Spannable . SPAN_INCLUSIVE_INCLUSIVE ) ; \n\treturn spannableStringBuilder ; \n\t} \n"}, {"code": "private void addProtocolIfNotExists $F73675 ( protocols , protocolType ) $F2202 ( protocols , protocolType ) "}, {"code": "public String toString $F72 { \n\t$F83 ( result ) $F84 ( result ) $F167270 ( result , klazz ) $F84 ( result ) for ( $F9808 ( i , elements ) ) { \n\t\t$F63265 ( i , result ) $F6939 ( result , elements , i ) } \n\t$F84 ( result ) $F92 ( result ) } \n"}, {"code": "void add ( Object key ) $F48801 ( table , key ) "}, {"code": "public Configuration loadConfigFromResource ( Resource resource ) { \n\tPropertiesConfiguration result = new PropertiesConfiguration $F72 ; \n\ttry { \n\t\tresult . load ( resource . getInputStream ( ) ) ; \n\t\treturn result ; \n\t\t} \n\tcatch ( ConfigurationException | IOException e ) { \n\t\tLOG . error ( CONFIGURATION_LOAD_ERROR . format ( resource . getFilename ( ) ) , e ) ; \n\t\tthrow new SystemConfigException ( CONFIGURATION_LOAD_ERROR . format ( resource . getFilename ( ) ) , e ) ; \n\t\t} \n\t} \n"}, {"code": "public final void log ( String filename , int lineNumber , String method , String tag , int level , String message ) { \n\tfinal LogMessage lm = new LogMessage ( LogMessage . LOGMSG_TYPE_LOG , nextSequenceNumber . getAndIncrement ( ) ) ; \n\tlm . addInt16 ( level , LogMessage . PART_KEY_LEVEL ) ; \n\tif ( filename != null ) { \n\t\tlm . addString ( filename , LogMessage . PART_KEY_FILENAME ) ; \n\t\tif ( lineNumber != NUM00 ) lm . addInt32 ( lineNumber , LogMessage . PART_KEY_LINENUMBER ) ; \n\t\t} \n\tif ( method != null ) lm . addString ( method , LogMessage . PART_KEY_FUNCTIONNAME ) ; \n\tif $F1032 ( tag ) lm . addString ( tag , LogMessage . PART_KEY_TAG ) ; \n\tlm . addString ( message , LogMessage . PART_KEY_MESSAGE ) ; \n\tlog ( lm ) ; \n\t} \n"}, {"code": "protected Size2D drawVertical ( Graphics2D g2 , Rectangle2D chartArea ) { \n\tdouble startX ; \n\tdouble topSpace = NUM00 ; \n\tdouble bottomSpace = NUM00 ; \n\tdouble leftSpace = NUM00 ; \n\tdouble rightSpace = NUM00 ; \n\tdouble w = getWidth ( ) ; \n\tdouble h = getHeight ( ) ; \n\tRectangleInsets padding = getPadding ( ) ; \n\tif ( padding != null ) { \n\t\ttopSpace = padding . calculateTopOutset ( h ) ; \n\t\tbottomSpace = padding . calculateBottomOutset ( h ) ; \n\t\tleftSpace = padding . calculateLeftOutset ( w ) ; \n\t\trightSpace = padding . calculateRightOutset ( w ) ; \n\t\t} \n\tif ( getPosition ( ) == RectangleEdge . LEFT ) { \n\t\tstartX = chartArea . getX ( ) + leftSpace ; \n\t\t} \n\telse { \n\t\tstartX = chartArea . getMaxX ( ) - rightSpace - w ; \n\t\t} \n\tVerticalAlignment alignment = getVerticalAlignment ( ) ; \n\tdouble startY = NUM00 ; \n\tif ( alignment == VerticalAlignment . CENTER ) { \n\t\tstartY = chartArea . getMinY ( ) + topSpace + $F63370 ( chartArea ) - h / NUM00 ; \n\t\t} \n\telse if ( alignment == VerticalAlignment . TOP ) { \n\t\tstartY = chartArea . getMinY ( ) + topSpace ; \n\t\t} \n\telse if ( alignment == VerticalAlignment . BOTTOM ) { \n\t\tstartY = chartArea . getMaxY ( ) - bottomSpace - h ; \n\t\t} \n\tg2 . drawImage ( this . image , ( int ) startX , ( int ) startY , ( int ) w , ( int ) h , null ) ; \n\treturn new Size2D ( chartArea . getWidth ( ) + leftSpace + rightSpace , h + topSpace + bottomSpace ) ; \n\t} \n"}, {"code": "private static final PublicKey constructPublicKey $F27539 ( encodedKey , encodedKeyAlgorithm ) throws InvalidKeyException , NoSuchAlgorithmException { \n\tPublicKey key = null ; \n\ttry { \n\t\tKeyFactory keyFactory = KeyFactory . getInstance ( encodedKeyAlgorithm , SunJCE . getInstance ( ) ) ; \n\t\t$F65117 ( keySpec , encodedKey ) key = keyFactory . generatePublic ( keySpec ) ; \n\t\t} \n\tcatch ( NoSuchAlgorithmException nsae ) { \n\t\ttry { \n\t\t\t$F156 ( keyFactory , KeyFactory , encodedKeyAlgorithm ) $F65117 ( keySpec , encodedKey ) key = keyFactory . generatePublic ( keySpec ) ; \n\t\t\t} \n\t\tcatch ( NoSuchAlgorithmException nsae2 ) { \n\t\t\tthrow new NoSuchAlgorithmException $F54019 ( encodedKeyAlgorithm ) ; \n\t\t\t} \n\t\tcatch ( InvalidKeySpecException ikse2 ) { \n\t\t\tInvalidKeyException ike = new InvalidKeyException $F580 ; \n\t\t\tike . initCause ( ikse2 ) ; \n\t\t\tthrow ike ; \n\t\t\t} \n\t\t} \n\tcatch ( InvalidKeySpecException ikse ) { \n\t\tInvalidKeyException ike = new InvalidKeyException $F580 ; \n\t\tike . initCause ( ikse ) ; \n\t\tthrow ike ; \n\t\t} \n\treturn key ; \n\t} \n"}, {"code": "public int numHits ( String query ) throws ParseException , IOException { \n\tInteger count ; \n\tif ( ( count = ( Integer ) m_hitCountCache . get ( query ) ) == null ) { \n\t\tHits hits = search ( query ) ; \n\t\tcount = new Integer $F45530 ( hits ) ; \n\t\tm_hitCountCache . put ( query , count ) ; \n\t\t} \n\t$F10182 ( count ) } \n"}, {"code": "public static boolean expressionIsTrue ( double leftSide , Operator operator , double rightSide ) { \n\tfinal String expression = leftSide + operator . getMathematicalOperator ( ) + rightSide ; \n\treturn expressionIsTrue ( expression ) ; \n\t} \n"}, {"code": "public MockResponse addHeader ( String name , Object value ) { \n\treturn addHeader ( name + NUM00 + String . valueOf ( value ) ) ; \n\t} \n"}, {"code": "$F1 public $F19290 max ( final Comparator $F11632 comparator ) $F19292 ( CompletableFuture , exec ) "}, {"code": "final public void println ( char v ) { \n\tWriter out = this . out ; \n\t$F8249 ( out ) try { \n\t\tout . write ( v ) ; \n\t\t$F17918 ( out , _newline ) } \n\t$F53427 ( log , Level , e ) } \n"}, {"code": "public void test_write_correctRejection_emptyRecord $F72 { \n\t$F75329 ( store , getStore ) try { \n\t\ttry { \n\t\t\tstore . write ( ByteBuffer . wrap ( $F68763 ) ) ; \n\t\t\tfail ( NUM00 + $F85137 ) ; \n\t\t\t} \n\t\tcatch ( IllegalArgumentException ex ) { \n\t\t\t$F38209 ( log , ex ) } \n\t\ttry { \n\t\t\tfinal ByteBuffer buf = ByteBuffer . wrap ( $F10314 ) ; \n\t\t\t$F45866 ( buf ) store . write ( buf ) ; \n\t\t\tfail ( NUM00 + $F85137 ) ; \n\t\t\t} \n\t\tcatch ( IllegalArgumentException ex ) { \n\t\t\t$F38209 ( log , ex ) } \n\t\t} \n\t$F17625 ( store ) } \n"}, {"code": "public synchronized void commit $F72 { \n\tsynchronized ( mutex ) { \n\t\tMap < Column , Set < Interval > > temp = workingIntervals ; \n\t\tworkingIntervals = Collections . synchronizedMap ( new LinkedHashMap $F200 $F72 ) ; \n\t\tavailableIntervalsRef . set ( Collections . unmodifiableMap ( new LinkedHashMap $F200 ( temp ) ) ) ; \n\t\tsuper . columns = new $F22301 $F57797 ( temp ) ; \n\t\t} \n\t} \n"}, {"code": "public void testUpdate7 $F72 { \n\tString updateQuery = NUM00 + DatabaseCreator . TEST_TABLE1 + NUM00 + DatabaseCreator . TEST_TABLE2 + NUM00 ; \n\ttry { \n\t\t$F32305 ( num , statement , updateQuery ) int expectedUpdated = NUM00 ; \n\t\tassertEquals ( NUM00 , expectedUpdated , num ) ; \n\t\t$F32306 ( selectQuery , DatabaseCreator ) $F15328 ( result , statement , selectQuery ) $F32307 ( result ) $F59 ( result ) } \n\t$F32310 ( fail , e ) } \n"}, {"code": "public static String extractIndentString $F36827 ( line , tabWidth , indentWidth ) { \n\tif ( tabWidth < NUM00 || indentWidth < NUM00 || line == null ) $F26853 $F1749 ( size , line ) int end = NUM00 ; \n\tint spaceEquivs = NUM00 ; \n\tint characters = NUM00 ; \n\tfor ( $F119 ( i , size ) ) { \n\t\t$F1280 ( c , line , i ) if ( c == NUM00 ) { \n\t\t\tspaceEquivs = calculateSpaceEquivalents ( tabWidth , spaceEquivs ) ; \n\t\t\tcharacters ++ ; \n\t\t\t} \n\t\telse if ( isIndentChar ( c ) ) $F1097 ( spaceEquivs , characters ) else $F5153 if ( spaceEquivs >= indentWidth ) { \n\t\t\tend += characters ; \n\t\t\tcharacters = NUM00 ; \n\t\t\tif ( indentWidth == NUM00 ) { \n\t\t\t\tspaceEquivs = NUM00 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tspaceEquivs = spaceEquivs % indentWidth ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( end == NUM00 ) { \n\t\treturn Util . EMPTY_ \"STRING\" ; \n\t\t} \n\telse if ( end == size ) { \n\t\treturn line ; \n\t\t} \n\telse $F35299 ( line , end ) } \n"}, {"code": "$F82361 ( filename , includeSeparator , prefix , getPrefixLength , getPrefix , index , indexOfLastSeparator , end ) "}, {"code": "private void preInsert ( MkMaxEntry q , MkMaxEntry nodeEntry , KNNHeap knns_q ) { \n\tif $F88618 ( LOG ) { \n\t\tLOG . debugFine ( NUM00 + q + NUM00 + nodeEntry + NUM00 ) ; \n\t\t} \n\tdouble knnDist_q = knns_q . getKNNDistance ( ) ; \n\tMkMaxTreeNode $F65331 node = getNode ( nodeEntry ) ; \n\tdouble knnDist_node = NUM00 ; \n\tif ( node . isLeaf ( ) ) { \n\t\tfor ( $F258528 ( i , node ) ) { \n\t\t\tMkMaxEntry p = node . getEntry ( i ) ; \n\t\t\tdouble dist_pq = distance ( p . getRoutingObjectID ( ) , q . getRoutingObjectID ( ) ) ; \n\t\t\tif ( dist_pq <= knnDist_q ) { \n\t\t\t\tknns_q . insert ( dist_pq , p . getRoutingObjectID ( ) ) ; \n\t\t\t\tif ( knns_q . size ( ) >= getKmax ( ) ) { \n\t\t\t\t\tknnDist_q = knns_q . getKNNDistance ( ) ; \n\t\t\t\t\tq . setKnnDistance ( knnDist_q ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( dist_pq <= p . getKnnDistance ( ) ) { \n\t\t\t\tKNNList knns_p = knnq . getKNNForDBID ( p . getRoutingObjectID ( ) , getKmax ( ) - NUM00 ) ; \n\t\t\t\tif ( $F2958 ( knns_p ) < getKmax ( ) ) { \n\t\t\t\t\tp . setKnnDistance ( Double . NaN ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tdouble knnDist_p = Math . max ( dist_pq , knns_p . getKNNDistance ( ) ) ; \n\t\t\t\t\tp . setKnnDistance ( knnDist_p ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tknnDist_node = Math . max ( knnDist_node , p . getKnnDistance ( ) ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tList < DoubleIntPair > entries = getSortedEntries ( node , q . getRoutingObjectID ( ) ) ; \n\t\tfor ( DoubleIntPair distEntry : entries ) { \n\t\t\tMkMaxEntry dirEntry = node . getEntry ( distEntry . second ) ; \n\t\t\tdouble entry_knnDist = dirEntry . getKnnDistance ( ) ; \n\t\t\tif ( distEntry . second < entry_knnDist || distEntry . second < knnDist_q ) { \n\t\t\t\tpreInsert ( q , dirEntry , knns_q ) ; \n\t\t\t\tknnDist_q = knns_q . getKNNDistance ( ) ; \n\t\t\t\t} \n\t\t\tknnDist_node = Math . max ( knnDist_node , dirEntry . getKnnDistance ( ) ) ; \n\t\t\t} \n\t\t} \n\tif $F88618 ( LOG ) { \n\t\tLOG . debugFine ( nodeEntry + NUM00 + knnDist_node ) ; \n\t\t} \n\tnodeEntry . setKnnDistance ( knnDist_node ) ; \n\t} \n"}, {"code": "private static boolean addIfMatches ( $F3803 container , String statusLine , char x , char y ) { \n\tif ( matches ( statusLine , x , y ) ) { \n\t\tfinal String filename = statusLine . substring ( NUM00 ) ; \n\t\t$F2201 ( container , filename ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void testDivideRoundHalfDownNeg2 $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\tString b = NUM00 ; \n\tint bScale = NUM00 ; \n\tString c = NUM00 ; \n\tint resScale = - NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) $F1918 ( bNumber , b , bScale ) BigDecimal result = aNumber . divide ( bNumber , resScale , BigDecimal . ROUND_HALF_DOWN ) ; \n\t$F1925 ( assertEquals , c , result ) $F1928 ( assertEquals , resScale , result ) } \n"}, {"code": "public static String encodeFromString ( String plain , String charset ) throws CoderException , UnsupportedEncodingException { \n\treturn encode ( plain . getBytes ( charset ) ) ; \n\t} \n"}, {"code": "public void slide ( SLIDE slide ) { \n\tif ( slide == SLIDE . UP ) { \n\t\tif $F931 ( isPanelShown ) { \n\t\t\tint position = NUM00 ; \n\t\t\tif ( items != null ) { \n\t\t\t\tposition = $F74216 ( items ) ; \n\t\t\t\t} \n\t\t\tslideUp ( position ) ; \n\t\t\t} \n\t\t} \n\telse $F5795 ( hidePanelPickerUI ) } \n"}, {"code": "public DrawerBuilder addStickyDrawerItems ( $F4170 IDrawerItem ... stickyDrawerItems ) { \n\tif ( this . mStickyDrawerItems == null ) { \n\t\tthis . mStickyDrawerItems = $F203 ; \n\t\t} \n\tCollections . addAll ( this . mStickyDrawerItems , IdDistributor . checkIds ( stickyDrawerItems ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "public boolean isDebuggingFinest $F72 { \n\treturn logger . isLoggable ( Level . FINEST ) ; \n\t} \n"}, {"code": "private static void sort1 $F74721 ( x , off , len ) { \n\t$F189413 ( len , i , off , j , x , swap ) $F189415 ( m , off , len ) $F189419 ( len , l , off , n , s , med3 , x , m ) int v = x [ m ] ; \n\t$F93850 ( a , off , b , c , len , d ) $F189427 ( _BOOL , b , c , x , v , swap , a , d ) int s , n = off + len ; \n\t$F84682 ( s , Math , a , off , b ) vecswap ( x , off , b - s , s ) ; \n\t$F84685 ( s , Math , d , c , n ) vecswap ( x , b , n - s , s ) ; \n\t$F189428 ( s , b , a , sort1 , x , off ) $F189429 ( s , d , c , sort1 , x , n ) } \n"}, {"code": "public void reset $F72 { \n\t$F6050 ( ns ) $F4910 ( ks ) cur = tt . root ; \n\trun ( ) ; \n\t} \n"}, {"code": "$F160927 static float sin ( float angle ) { \n\treturn $F148723 ( Math , angle ) ; \n\t} \n"}, {"code": "public static void renderFlattenedAnnotation ( final PdfObject form , final DynamicVectorRenderer current , final int pageNumber , final int rotation ) { \n\tfinal BufferedImage image = AnnotationFactory . getIcon ( form ) ; \n\tif ( image != null ) { \n\t\tfinal GraphicsState gs = new GraphicsState $F72 ; \n\t\t$F43590 ( iconHeight , image ) $F43592 ( iconWidth , image ) final $F5415 rect = form . getFloatArray ( PdfDictionary . Rect ) ; \n\t\tif ( form . getParameterConstant ( PdfDictionary . Subtype ) == PdfDictionary . Text ) { \n\t\t\trect [ NUM00 ] = rect [ NUM00 ] + iconWidth ; \n\t\t\trect [ NUM00 ] = rect [ NUM00 ] - iconHeight ; \n\t\t\tform . setFloatArray ( PdfDictionary . Rect , rect ) ; \n\t\t\t} \n\t\tswitch ( rotation % NUM00 ) { \n\t\t\t$F3366 gs . CTM = new float [ ] [ ] { \n\t\t\t\t{ \n\t\t\t\t\ticonWidth , NUM00 , NUM00 } \n\t\t\t\t, { \n\t\t\t\t\tNUM00 , iconHeight , NUM00 } \n\t\t\t\t, $F79696 } \n\t\t\t; \n\t\t\tgs . x = rect [ NUM00 ] ; \n\t\t\tgs . y = rect [ NUM00 ] - iconHeight ; \n\t\t\tgs . CTM [ NUM00 ] [ NUM00 ] = rect [ NUM00 ] ; \n\t\t\tgs . CTM [ NUM00 ] [ NUM00 ] = rect [ NUM00 ] - iconHeight ; \n\t\t\t$F597 $F3366 gs . CTM = new float [ ] [ ] { \n\t\t\t\t{ \n\t\t\t\t\tNUM00 , iconWidth , NUM00 } \n\t\t\t\t, { \n\t\t\t\t\t- iconHeight , NUM00 , NUM00 } \n\t\t\t\t, $F79696 } \n\t\t\t; \n\t\t\tgs . x = rect [ NUM00 ] + iconHeight ; \n\t\t\tgs . y = rect [ NUM00 ] ; \n\t\t\tgs . CTM [ NUM00 ] [ NUM00 ] = rect [ NUM00 ] + iconHeight ; \n\t\t\tgs . CTM [ NUM00 ] [ NUM00 ] = rect [ NUM00 ] ; \n\t\t\t$F597 $F3366 gs . CTM = new float [ ] [ ] { \n\t\t\t\t{ \n\t\t\t\t\t- iconWidth , NUM00 , NUM00 } \n\t\t\t\t, { \n\t\t\t\t\tNUM00 , - iconHeight , NUM00 } \n\t\t\t\t, $F79696 } \n\t\t\t; \n\t\t\tgs . x = rect [ NUM00 ] ; \n\t\t\tgs . y = rect [ NUM00 ] + iconHeight ; \n\t\t\tgs . CTM [ NUM00 ] [ NUM00 ] = rect [ NUM00 ] ; \n\t\t\tgs . CTM [ NUM00 ] [ NUM00 ] = rect [ NUM00 ] + iconHeight ; \n\t\t\t$F597 $F3366 gs . CTM = new float [ ] [ ] { \n\t\t\t\t{ \n\t\t\t\t\tNUM00 , - iconWidth , NUM00 } \n\t\t\t\t, { \n\t\t\t\t\ticonHeight , NUM00 , NUM00 } \n\t\t\t\t, $F79696 } \n\t\t\t; \n\t\t\tgs . x = rect [ NUM00 ] - iconHeight ; \n\t\t\tgs . y = rect [ NUM00 ] ; \n\t\t\tgs . CTM [ NUM00 ] [ NUM00 ] = rect [ NUM00 ] - iconHeight ; \n\t\t\tgs . CTM [ NUM00 ] [ NUM00 ] = rect [ NUM00 ] ; \n\t\t\t$F597 } \n\t\tif ( form . getParameterConstant ( PdfDictionary . Subtype ) == PdfDictionary . Highlight ) { \n\t\t\tcurrent . setGraphicsState ( GraphicsState . STROKE , gs . getAlpha ( GraphicsState . STROKE ) , PdfDictionary . Darken ) ; \n\t\t\tcurrent . setGraphicsState ( GraphicsState . FILL , gs . getAlpha ( GraphicsState . FILL ) , PdfDictionary . Darken ) ; \n\t\t\t} \n\t\tcurrent . drawImage ( pageNumber , image , gs , _BOOL , form . getObjectRefAsString ( ) , - NUM00 ) ; \n\t\tif ( form . getParameterConstant ( PdfDictionary . Subtype ) == PdfDictionary . Highlight ) { \n\t\t\tcurrent . setGraphicsState ( GraphicsState . STROKE , gs . getAlpha ( GraphicsState . STROKE ) , PdfDictionary . Normal ) ; \n\t\t\tcurrent . setGraphicsState ( GraphicsState . FILL , gs . getAlpha ( GraphicsState . FILL ) , PdfDictionary . Normal ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public $F96 extractData ( $F96 stegoData , String stegoFileName , $F96 origSigData ) throws OpenStegoException $F1337 "}, {"code": "public static String makeRelatedSessionID ( String encryptedID , SessionID prototype ) throws SessionException { \n\tprototype . parseSessionString ( ) ; \n\treturn makeSessionID ( encryptedID , prototype . getExtension ( ) , prototype . tail ) ; \n\t} \n"}, {"code": "public static GeneralPath cardinalSpline ( $F8138 , int start , int npoints , float slack , boolean closed ) { \n\t$F13609 ( path ) path . moveTo ( $F149550 ( pts , start ) ) ; \n\treturn cardinalSpline ( path , pts , start , npoints , slack , closed , NUM00 , NUM00 ) ; \n\t} \n"}, {"code": "public static Automaton determinize ( Automaton a , int maxDeterminizedStates ) { \n\tif ( a . isDeterministic ( ) ) { \n\t\treturn a ; \n\t\t} \n\tif ( a . getNumStates ( ) <= NUM00 ) { \n\t\treturn a ; \n\t\t} \n\tAutomaton . Builder b = new Automaton . Builder $F72 ; \n\tSortedIntSet . FrozenIntSet initialset = new SortedIntSet . FrozenIntSet $F32532 ; \n\t$F25451 ( b ) LinkedList < SortedIntSet . FrozenIntSet > $F19827 ( worklist ) ; \n\tMap < SortedIntSet . FrozenIntSet , Integer > $F8690 ( newstate ) ; \n\tworklist . add ( initialset ) ; \n\tb . setAccept ( NUM00 , a . isAccept ( NUM00 ) ) ; \n\t$F101820 ( newstate , initialset ) final PointTransitionSet points = new PointTransitionSet $F72 ; \n\tfinal SortedIntSet statesSet = new SortedIntSet $F989 ; \n\tTransition t = new Transition $F72 ; \n\twhile $F3817 ( worklist ) { \n\t\tSortedIntSet . FrozenIntSet s = worklist . removeFirst ( ) ; \n\t\tfor ( int i = NUM00 ; \n\t\ti < s . values . length ; \n\t\ti ++ ) { \n\t\t\tfinal int s0 = s . values [ i ] ; \n\t\t\tint numTransitions = a . getNumTransitions ( s0 ) ; \n\t\t\ta . initTransition ( s0 , t ) ; \n\t\t\tfor ( $F119 ( j , numTransitions ) ) { \n\t\t\t\ta . getNextTransition ( t ) ; \n\t\t\t\tpoints . add ( t ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif $F69887 ( points ) $F1448 $F112999 ( points ) int lastPoint = - NUM00 ; \n\t\tint accCount = NUM00 ; \n\t\tfinal int r = s . state ; \n\t\tfor ( int i = NUM00 ; \n\t\ti < points . count ; \n\t\ti ++ ) { \n\t\t\tfinal int point = points . points [ i ] . point ; \n\t\t\tif ( statesSet . upto > NUM00 ) { \n\t\t\t\tassert lastPoint != - NUM00 ; \n\t\t\t\tstatesSet . computeHash ( ) ; \n\t\t\t\t$F99426 ( q , newstate , statesSet ) if ( q == null ) { \n\t\t\t\t\tq = b . createState ( ) ; \n\t\t\t\t\tif ( q >= maxDeterminizedStates ) { \n\t\t\t\t\t\tthrow new TooComplexToDeterminizeException ( a , maxDeterminizedStates ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\tfinal SortedIntSet . FrozenIntSet p = statesSet . freeze ( q ) ; \n\t\t\t\t\tworklist . add ( p ) ; \n\t\t\t\t\tb . setAccept ( q , accCount > NUM00 ) ; \n\t\t\t\t\tnewstate . put ( p , q ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tassert ( accCount > NUM00 ? _BOOL : _BOOL ) == b . isAccept ( q ) : NUM00 + accCount + NUM00 + b . isAccept ( q ) + NUM00 + statesSet ; \n\t\t\t\t\t} \n\t\t\t\tb . addTransition ( r , q , lastPoint , point - NUM00 ) ; \n\t\t\t\t} \n\t\t\t$F2027 transitions = points . points [ i ] . ends . transitions ; \n\t\t\tint limit = points . points [ i ] . ends . next ; \n\t\t\tfor ( $F6225 ( j , limit ) ) { \n\t\t\t\tint dest = transitions [ j ] ; \n\t\t\t\tstatesSet . decr ( dest ) ; \n\t\t\t\taccCount -= a . isAccept ( dest ) ? NUM00 : NUM00 ; \n\t\t\t\t} \n\t\t\tpoints . points [ i ] . ends . next = NUM00 ; \n\t\t\ttransitions = points . points [ i ] . starts . transitions ; \n\t\t\tlimit = points . points [ i ] . starts . next ; \n\t\t\tfor ( $F6225 ( j , limit ) ) { \n\t\t\t\tint dest = transitions [ j ] ; \n\t\t\t\tstatesSet . incr ( dest ) ; \n\t\t\t\taccCount += a . isAccept ( dest ) ? NUM00 : NUM00 ; \n\t\t\t\t} \n\t\t\tlastPoint = point ; \n\t\t\tpoints . points [ i ] . starts . next = NUM00 ; \n\t\t\t} \n\t\t$F2268 ( points ) assert statesSet . upto == NUM00 : NUM00 + statesSet . upto ; \n\t\t} \n\tAutomaton result = b . finish ( ) ; \n\tassert result . isDeterministic ( ) ; \n\treturn result ; \n\t} \n"}, {"code": "public boolean matches ( String seq ) { \n\treturn queue . regionMatches ( _BOOL , pos , seq , NUM00 , seq . length ( ) ) ; \n\t} \n"}, {"code": "private boolean findRoot ( final ODEStateInterpolator interpolator , final double ta , final double ga , final double tb , final double gb ) { \n\tcheck ( ga == NUM00 || gb == NUM00 || ( ga > NUM00 && gb < NUM00 ) || ( ga < NUM00 && gb > NUM00 ) ) ; \n\tfinal UnivariateFunction f = null ; \n\tdouble beforeRootT = Double . NaN , beforeRootG = Double . NaN ; \n\tdouble afterRootT = ta , afterRootG = NUM00 ; \n\tif ( ta == tb ) { \n\t\tbeforeRootT = ta ; \n\t\tbeforeRootG = ga ; \n\t\tafterRootT = shiftedBy ( beforeRootT , convergence ) ; \n\t\tafterRootG = f . value ( afterRootT ) ; \n\t\t} \n\telse if ( ga != NUM00 && gb == NUM00 ) { \n\t\tbeforeRootT = tb ; \n\t\tbeforeRootG = gb ; \n\t\tafterRootT = shiftedBy ( beforeRootT , convergence ) ; \n\t\tafterRootG = f . value ( afterRootT ) ; \n\t\t} \n\telse if ( ga != NUM00 ) { \n\t\tfinal double newGa = f . value ( ta ) ; \n\t\tif ( ga > NUM00 != newGa > NUM00 ) { \n\t\t\tbeforeRootT = ta ; \n\t\t\tbeforeRootG = newGa ; \n\t\t\tafterRootT = minTime ( shiftedBy ( beforeRootT , convergence ) , tb ) ; \n\t\t\tafterRootG = f . value ( afterRootT ) ; \n\t\t\t} \n\t\t} \n\tdouble loopT = ta , loopG = ga ; \n\twhile ( ( afterRootG == NUM00 || afterRootG > NUM00 == g0Positive ) && strictlyAfter ( afterRootT , tb ) ) { \n\t\tif ( loopG == NUM00 ) { \n\t\t\tbeforeRootT = loopT ; \n\t\t\tbeforeRootG = loopG ; \n\t\t\tafterRootT = minTime ( shiftedBy ( beforeRootT , convergence ) , tb ) ; \n\t\t\tafterRootG = f . value ( afterRootT ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( forward ) { \n\t\t\t\tfinal Interval interval = solver . solveInterval ( maxIterationCount , f , loopT , tb ) ; \n\t\t\t\tbeforeRootT = interval . getLeftAbscissa ( ) ; \n\t\t\t\tbeforeRootG = interval . getLeftValue ( ) ; \n\t\t\t\tafterRootT = interval . getRightAbscissa ( ) ; \n\t\t\t\tafterRootG = interval . getRightValue ( ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tfinal Interval interval = solver . solveInterval ( maxIterationCount , f , tb , loopT ) ; \n\t\t\t\tbeforeRootT = interval . getRightAbscissa ( ) ; \n\t\t\t\tbeforeRootG = interval . getRightValue ( ) ; \n\t\t\t\tafterRootT = interval . getLeftAbscissa ( ) ; \n\t\t\t\tafterRootG = interval . getLeftValue ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( beforeRootT == afterRootT ) { \n\t\t\tafterRootT = nextAfter ( afterRootT ) ; \n\t\t\tafterRootG = f . value ( afterRootT ) ; \n\t\t\t} \n\t\tcheck ( ( forward && afterRootT > beforeRootT ) || ( ! forward && afterRootT < beforeRootT ) ) ; \n\t\tloopT = afterRootT ; \n\t\tloopG = afterRootG ; \n\t\t} \n\tif ( afterRootG == NUM00 || afterRootG > NUM00 == g0Positive ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\tcheck ( ! Double . isNaN ( beforeRootT ) && ! Double . isNaN ( beforeRootG ) ) ; \n\t\tincreasing = ! g0Positive ; \n\t\tpendingEventTime = beforeRootT ; \n\t\tstopTime = beforeRootG == NUM00 ? beforeRootT : afterRootT ; \n\t\tpendingEvent = _BOOL ; \n\t\tafterEvent = afterRootT ; \n\t\tafterG = afterRootG ; \n\t\tcheck ( afterG > NUM00 == increasing ) ; \n\t\tcheck ( increasing == gb >= ga ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public static int compare ( Comparable c1 , Comparable c2 , boolean nullGreater ) { \n\tif ( c1 == c2 ) $F1083 else if ( c1 == null ) { \n\t\treturn $F17979 ( nullGreater ) ; \n\t\t} \n\telse if ( c2 == null ) { \n\t\treturn $F17973 ( nullGreater ) ; \n\t\t} \n\t$F12554 ( c1 , c2 ) } \n"}, {"code": "public boolean checkRootBySuperUserApk $F72 { \n\t$F1705 ( suApk , SU_APK ) if $F102275 ( suApk ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "int addExpression ( Expression expression ) ; \n"}, {"code": "boolean trackMotionScroll ( int deltaY , int incrementalDeltaY ) { \n\t$F3666 ( childCount , getChildCount ) $F6482 ( childCount , _BOOL ) $F3666 ( firstTop , getScrollChildTop ) $F3666 ( lastBottom , getScrollChildBottom ) final Rect listPadding = mListPadding ; \n\tfinal int end = getHeight ( ) - listPadding . bottom ; \n\tfinal int spaceAbove = listPadding . top - getFillChildTop ( ) ; \n\tfinal int spaceBelow = getFillChildBottom ( ) - end ; \n\tfinal int $F125539 ( height , getHeight , getPaddingBottom , getPaddingTop ) ; \n\tif ( deltaY < NUM00 ) { \n\t\tdeltaY = Math . max ( - ( height - NUM00 ) , deltaY ) ; \n\t\t} \n\telse { \n\t\tdeltaY = Math . min ( height - NUM00 , deltaY ) ; \n\t\t} \n\tif ( incrementalDeltaY < NUM00 ) { \n\t\tincrementalDeltaY = Math . max ( - ( height - NUM00 ) , incrementalDeltaY ) ; \n\t\t} \n\telse { \n\t\tincrementalDeltaY = Math . min ( height - NUM00 , incrementalDeltaY ) ; \n\t\t} \n\tfinal int firstPosition = mFirstPosition ; \n\tif ( firstPosition == NUM00 && firstTop >= listPadding . top && deltaY >= NUM00 ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( firstPosition + childCount == mItemCount && lastBottom <= end && deltaY <= NUM00 ) { \n\t\treturn _BOOL ; \n\t\t} \n\tfinal boolean down = incrementalDeltaY < NUM00 ; \n\t$F3666 ( headerViewsCount , getHeaderViewsCount ) final int footerViewsStart = mItemCount - getFooterViewsCount ( ) ; \n\tint start = NUM00 ; \n\tint count = NUM00 ; \n\tif ( down ) { \n\t\tfinal int top = listPadding . top - incrementalDeltaY ; \n\t\tfor ( $F119 ( i , childCount ) ) { \n\t\t\tfinal View child = getChildAt ( i ) ; \n\t\t\tif $F309156 ( child , top ) $F5153 else { \n\t\t\t\tcount ++ ; \n\t\t\t\tint position = firstPosition + i ; \n\t\t\t\tif ( position >= headerViewsCount && position < footerViewsStart ) { \n\t\t\t\t\tmRecycler . addScrapView ( child ) ; \n\t\t\t\t\tif ( ViewDebug . TRACE_RECYCLER ) { \n\t\t\t\t\t\tViewDebug . trace ( child , ViewDebug . RecyclerTraceType . MOVE_TO_SCRAP_HEAP , firstPosition + i , - NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tfinal int bottom = getHeight ( ) - listPadding . bottom - incrementalDeltaY ; \n\t\tfor ( $F18298 ( i , childCount ) ) { \n\t\t\tfinal View child = getChildAt ( i ) ; \n\t\t\tif $F309171 ( child , bottom ) $F5153 else { \n\t\t\t\tstart = i ; \n\t\t\t\tcount ++ ; \n\t\t\t\tint position = firstPosition + i ; \n\t\t\t\tif ( position >= headerViewsCount && position < footerViewsStart ) { \n\t\t\t\t\tmRecycler . addScrapView ( child ) ; \n\t\t\t\t\tif ( ViewDebug . TRACE_RECYCLER ) { \n\t\t\t\t\t\tViewDebug . trace ( child , ViewDebug . RecyclerTraceType . MOVE_TO_SCRAP_HEAP , firstPosition + i , - NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tmMotionViewNewTop = mMotionViewOriginalTop + deltaY ; \n\tmBlockLayoutRequests = _BOOL ; \n\tif ( count > NUM00 ) { \n\t\tdetachViewsFromParent ( start , count ) ; \n\t\t} \n\ttryOffsetChildrenTopAndBottom ( incrementalDeltaY ) ; \n\t$F309178 ( down , mFirstPosition , count ) invalidate ( ) ; \n\t$F49283 ( absIncrementalDeltaY , Math , incrementalDeltaY ) if ( spaceAbove < absIncrementalDeltaY || spaceBelow < absIncrementalDeltaY ) { \n\t\tfillGap ( down ) ; \n\t\t} \n\tmBlockLayoutRequests = _BOOL ; \n\tinvokeOnItemScrollListener ( ) ; \n\tawakenScrollBars ( ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static $F11685 E syncRest ( final Iterator $F4222 iterator , final Callable $F11685 task ) throws Exception { \n\tif $F2921 ( iterator ) { \n\t\tsynchronized $F1682 ( iterator ) $F8587 ( syncRest , iterator , task ) } \n\telse $F41336 ( task ) } \n"}, {"code": "private static Component findByName ( Container root , String componentName ) { \n\tif ( verbose ) { \n\t\t$F25590 ( log , root , componentName ) } \n\t$F60281 ( count , root ) for ( $F119 ( iter , count ) ) { \n\t\tComponent c = root . getComponentAt ( iter ) ; \n\t\t$F20605 ( n , c ) if $F1256 ( n , componentName ) { \n\t\t\treturn c ; \n\t\t\t} \n\t\tif ( c instanceof Container ) { \n\t\t\tc = findByName ( ( Container ) c , componentName ) ; \n\t\t\t$F21525 ( c ) } \n\t\t} \n\t$F1274 } \n"}, {"code": "public boolean isFingerprint ( ClassTemplate classTemplate ) { \n\treturn fingerprintClass . equals ( classTemplate . getImplementingClass ( ) ) ; \n\t} \n"}, {"code": "public void writeField ( final String name , final float value ) throws $F3258 $F261761 ( writeField , name , Float , value ) "}, {"code": "private List extractColumnKeys ( String line ) { \n\tList keys = new $F59124 $F72 ; \n\tint fieldIndex = NUM00 ; \n\tint start = NUM00 ; \n\tfor ( $F1088 ( i , line ) ) { \n\t\tif ( line . charAt ( i ) == this . fieldDelimiter ) { \n\t\t\tif ( fieldIndex > NUM00 ) { \n\t\t\t\t$F12715 ( key , line , start , i ) $F3761 ( keys , removeStringDelimiters , key ) } \n\t\t\tstart = i + NUM00 ; \n\t\t\tfieldIndex ++ ; \n\t\t\t} \n\t\t} \n\tString $F465724 ( key , line , start ) ; \n\t$F3761 ( keys , removeStringDelimiters , key ) return keys ; \n\t} \n"}, {"code": "protected void drawRhombus ( int x , int y , int w , int h , Color fillColor , Paint fillPaint , Color penColor , boolean shadow ) { \n\tint halfWidth = w / NUM00 ; \n\tint halfHeight = h / NUM00 ; \n\t$F157439 ( rhombus ) rhombus . addPoint ( x + halfWidth , y ) ; \n\trhombus . addPoint ( x + w , y + halfHeight ) ; \n\trhombus . addPoint ( x + halfWidth , y + h ) ; \n\trhombus . addPoint ( x , y + halfHeight ) ; \n\tdrawPolygon ( rhombus , fillColor , fillPaint , penColor , shadow ) ; \n\t} \n"}, {"code": "private void convertAndFillByteBufferListToByteArrayList ( $F4358 ( dictionaryValues ) , List < ByteBuffer > dictionaryValueBufferList ) { \n\tfor ( ByteBuffer buffer : dictionaryValueBufferList ) { \n\t\t$F29501 ( length , buffer ) $F2175 ( value , length ) buffer . get ( value , NUM00 , value . length ) ; \n\t\tdictionaryValues . add ( value ) ; \n\t\t} \n\t} \n"}, {"code": "static Object instantiate $F17798 ( sibling , className ) throws InstantiationException , IllegalAccessException , ClassNotFoundException { \n\tClassLoader cl = sibling . getClassLoader ( ) ; \n\t$F6969 cls = ClassFinder . findClass ( className , cl ) ; \n\t$F101944 ( cls ) } \n"}, {"code": "private $F96 generateDerivedKey ( int bytesNeeded ) { \n\t$F216093 ( buf , digest ) $F2175 ( key , bytesNeeded ) int offset = NUM00 ; \n\tfor ( $F589 ) { \n\t\t$F6163 ( digest , password ) $F6163 ( digest , salt ) $F137382 ( digest , buf ) int len = ( bytesNeeded > buf . length ) ? buf . length : bytesNeeded ; \n\t\t$F6483 ( System , buf , key , offset , len ) offset += len ; \n\t\tbytesNeeded -= len ; \n\t\t$F7256 ( bytesNeeded ) $F2268 ( digest ) $F6163 ( digest , buf ) } \n\treturn key ; \n\t} \n"}, {"code": "public void testSystemRunFinalizationReturnsEvenIfQueueIsNonEmpty $F72 throws Exception { \n\tAtomicInteger $F72840 ( count ) ; \n\tAtomicBoolean keepGoing = new AtomicBoolean ( _BOOL ) ; \n\tcreateChainedFinalizer ( count , keepGoing ) ; \n\twhile $F76102 ( count ) { \n\t\t$F9470 ( Thread ) FinalizationTester . induceFinalization ( ) ; \n\t\t} \n\tkeepGoing . set ( _BOOL ) ; \n\tassertTrue ( $F15854 ( count ) ) ; \n\t} \n"}, {"code": "public synchronized void show ( Bundle options ) { \n\t$F12259 ( DEBUG , Log , TAG , mKeyguardView ) boolean enableScreenRotation = shouldEnableScreenRotation ( ) ; \n\tmaybeCreateKeyguardLocked ( enableScreenRotation , _BOOL , options ) ; \n\tmaybeEnableScreenRotation ( enableScreenRotation ) ; \n\tfinal int visFlags = View . STATUS_BAR_DISABLE_HOME ; \n\tif ( DEBUG ) Log . v ( TAG , $F36004 ( Integer , visFlags ) ) ; \n\tmKeyguardHost . setSystemUiVisibility ( visFlags ) ; \n\tmViewManager . updateViewLayout ( mKeyguardHost , mWindowLayoutParams ) ; \n\t$F29549 ( mKeyguardHost , View ) $F114746 ( mKeyguardView ) $F32277 ( mKeyguardView ) } \n"}, {"code": "public static int computeStringWidth ( FontMetrics fm , String str ) { \n\treturn SwingUtilities2 . stringWidth ( null , fm , str ) ; \n\t} \n"}, {"code": "private boolean passesSanityCheck ( AccessibilityEvent event ) { \n\tfinal CharSequence afterText = getEventText ( event ) ; \n\tfinal CharSequence beforeText = event . getBeforeText ( ) ; \n\tif ( ( event . getAddedCount ( ) == NUM00 ) && ( event . getRemovedCount ( ) == beforeText . length ( ) ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F6973 ( afterText , beforeText , _BOOL ) final int diff = ( event . getAddedCount ( ) - event . getRemovedCount ( ) ) ; \n\treturn ( ( beforeText . length ( ) + diff ) == afterText . length ( ) ) ; \n\t} \n"}, {"code": "public void actionPerformed ( ActionEvent ae ) { \n\t$F35563 ( command , ae ) if ( command == DisplayPaletteCmd ) { \n\t\tif $F22503 ( Debug ) { \n\t\t\tDebug . output ( getName ( ) + NUM00 ) ; \n\t\t\t} \n\t\tshowPalette ( ) ; \n\t\t} \n\telse if ( command == HidePaletteCmd ) { \n\t\tif $F22503 ( Debug ) { \n\t\t\tDebug . output ( getName ( ) + NUM00 ) ; \n\t\t\t} \n\t\thidePalette ( ) ; \n\t\t} \n\telse if ( command == DisplayPropertiesCmd ) { \n\t\tInspector inspector = new Inspector $F72 ; \n\t\tinspector . inspectPropertyConsumer ( this ) ; \n\t\t} \n\t} \n"}, {"code": "public static String toString ( LocalDate data ) { \n\treturn data == null ? NUM00 : data . format ( formatter ( NUM00 ) ) ; \n\t} \n"}, {"code": "@ JsonCreator public DataSourceMetadata ( $F26186 String name , $F26186 $F2539 properties , $F26186 List < DataSegment > segments ) { \n\tthis . name = name ; \n\tthis . properties = Collections . unmodifiableMap ( properties ) ; \n\tthis . segments = Collections . unmodifiableList ( segments ) ; \n\t} \n"}, {"code": "public EMail createEMail ( String value ) { \n\tEmailField emailImpl = new EmailField $F72 ; \n\ttry $F18283 ( emailImpl , value ) $F18284 ( s ) return emailImpl ; \n\t} \n"}, {"code": "public AddressLookup $F1947 ( serverUrl , serialNo , password ) { \n\t$F10588 ( this , serverUrl ) this . clientID = serialNo . trim ( ) ; \n\tthis . accessCode = password . trim ( ) ; \n\t} \n"}, {"code": "public void addChangeListener ( ChangeListener l ) $F207 ( m_ChangeListeners , l ) "}, {"code": "public Node ( String permission , boolean value , boolean override , long expireAt , String server , String world , ContextSet contexts ) { \n\tif $F3581 ( permission ) $F825 if ( server != null && $F265379 ( server ) ) { \n\t\tserver = null ; \n\t\t} \n\tif $F85112 ( world ) { \n\t\tworld = null ; \n\t\t} \n\tif ( world != null && server == null ) { \n\t\tserver = NUM00 ; \n\t\t} \n\tthis . permission = permission ; \n\tthis . value = value ; \n\tthis . override = override ; \n\tthis . expireAt = expireAt ; \n\tthis . server = server ; \n\tthis . world = world ; \n\tthis . contexts = contexts == null ? ContextSet . empty ( ) : contexts . makeImmutable ( ) ; \n\t} \n"}, {"code": "public Cell ( int rowspan , int colspan ) { \n\tthis . rowspan = Math . max ( rowspan , NUM00 ) ; \n\tthis . colspan = Math . max ( colspan , NUM00 ) ; \n\t} \n"}, {"code": "private void initializeLocalAndTargetInfo $F72 throws Exception { \n\ttargetSiteInfo = coordinator . getTargetInfo ( SiteInfo . class ) ; \n\tif ( targetSiteInfo == null ) { \n\t\ttargetSiteInfo = new SiteInfo $F72 ; \n\t\ttry { \n\t\t\tcoordinator . setTargetInfo ( targetSiteInfo , _BOOL ) ; \n\t\t\t$F10635 ( log , targetSiteInfo ) } \n\t\tcatch ( CoordinatorClientException e ) { \n\t\t\t$F973 ( log ) retrySleep ( ) ; \n\t\t\tthrow e ; \n\t\t\t} \n\t\t} \n\tlocalVdcPropInfo = localRepository . getVdcPropertyInfo ( ) ; \n\tString localConfigVersion = localVdcPropInfo . getProperty ( VdcConfigUtil . VDC_CONFIG_VERSION ) ; \n\tcoordinator . setNodeSessionScopeInfo ( new VdcConfigVersion ( localConfigVersion ) ) ; \n\ttargetVdcPropInfo = loadVdcConfig ( ) ; \n\tif ( isGeoUpgradeFromPreYoda ( ) ) { \n\t\t$F973 ( log ) localVdcPropInfo . addProperty ( VdcConfigUtil . VDC_CONFIG_VERSION , String . valueOf ( targetSiteInfo . getVdcConfigVersion ( ) ) ) ; \n\t\tlocalRepository . setVdcPropertyInfo ( localVdcPropInfo ) ; \n\t\t} \n\telse { \n\t\tif ( localVdcPropInfo . getProperty ( VdcConfigUtil . VDC_CONFIG_VERSION ) == null ) { \n\t\t\tlocalVdcPropInfo = new PropertyInfoExt ( targetVdcPropInfo . getAllProperties ( ) ) ; \n\t\t\tlocalVdcPropInfo . addProperty ( VdcConfigUtil . VDC_CONFIG_VERSION , String . valueOf ( targetSiteInfo . getVdcConfigVersion ( ) ) ) ; \n\t\t\tlocalRepository . setVdcPropertyInfo ( localVdcPropInfo ) ; \n\t\t\tString vdc_ids = targetVdcPropInfo . getProperty ( VdcConfigUtil . VDC_IDS ) ; \n\t\t\t$F6542 ( vdcIds , vdc_ids ) if $F3305 ( vdcIds ) { \n\t\t\t\t$F973 ( log ) reboot ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\ttargetPowerOffState = coordinator . getTargetInfo ( PowerOffState . class ) ; \n\tif ( targetPowerOffState == null ) { \n\t\ttry { \n\t\t\tcoordinator . setTargetInfo ( new PowerOffState ( PowerOffState . State . NONE ) ) ; \n\t\t\ttargetPowerOffState = coordinator . getTargetInfo ( PowerOffState . class ) ; \n\t\t\tlog . info ( NUM00 , PowerOffState . State . NONE ) ; \n\t\t\t} \n\t\tcatch ( CoordinatorClientException e ) { \n\t\t\t$F973 ( log ) retrySleep ( ) ; \n\t\t\tthrow e ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public void openElement ( String tagName ) { \n\tXMLElement newElement = new XMLElement $F72 ; \n\tnewElement . setName ( tagName ) ; \n\tcurrent . addChild ( newElement ) ; \n\tstack . push ( current ) ; \n\tcurrent = newElement ; \n\t} \n"}, {"code": "public Format ( String pFormatString ) { \n\tString formatVars [ ] = pFormatString . split ( NUM00 ) ; \n\t$F51416 ( mId , Integer , formatVars ) } \n"}, {"code": "public boolean equals ( Object interval ) { \n\t$F1933 ( intervals , _BOOL ) $F297 ( intervals , interval ) } \n"}, {"code": "public static String relativeToAbsolute ( String baseURL , String relativeURL ) { \n\tif $F3106 ( relativeURL ) { \n\t\treturn getURLProtocol ( baseURL ) + NUM00 + getURLHost ( baseURL ) + relativeURL ; \n\t\t} \n\telse { \n\t\treturn getURLProtocol ( baseURL ) + NUM00 + getURLHost ( baseURL ) + getURLBasePath ( baseURL ) + relativeURL ; \n\t\t} \n\t} \n"}, {"code": "public void start $F72 { \n\tif ( setState ( EnumSet . of ( TaskState . INITIAL , TaskState . QUEUED ) , TaskState . RUNNING ) ) { \n\t\tDHT . logDebug ( NUM00 + toString ( ) ) ; \n\t\t$F3224 ( startTime , System ) try $F21688 ( serializedUpdate ) catch ( Exception e ) { \n\t\t\tDHT . log ( e , LogLevel . Error ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public JournalIndex ( final IRawStore store , final Checkpoint checkpoint , final IndexMetadata metadata , final boolean readOnly ) { \n\tsuper ( store , checkpoint , metadata , readOnly ) ; \n\t} \n"}, {"code": "private void accesBreakpointInstruction ( $F241341 instructions , int lineNumber , int op , BPINSTRUCTION_STATUS status ) { \n\tfor ( $F2277 ( i , instructions ) ) { \n\t\tInstruction currInst = instructions . get ( i ) ; \n\t\tif ( op == NUM00 ) { \n\t\t\tif ( currInst instanceof MRJobInstruction ) { \n\t\t\t\tMRJobInstruction currMRInst = ( MRJobInstruction ) currInst ; \n\t\t\t\tif ( currMRInst . findMRInstructions ( lineNumber ) ) { \n\t\t\t\t\tBreakPointInstruction breakpoint = new BreakPointInstruction $F72 ; \n\t\t\t\t\tbreakpoint . setLocation ( currInst ) ; \n\t\t\t\t\tbreakpoint . setInstID ( instID ++ ) ; \n\t\t\t\t\tbreakpoint . setBPInstructionLocation ( location ) ; \n\t\t\t\t\tinstructions . add ( i , breakpoint ) ; \n\t\t\t\t\tDMLBreakpointManager . insertBreakpoint ( breakpoint , lineNumber ) ; \n\t\t\t\t\t$F665 } \n\t\t\t\t} \n\t\t\telse if ( currInst instanceof CPInstruction || currInst instanceof SPInstruction ) { \n\t\t\t\tif ( currInst . getLineNum ( ) == lineNumber ) { \n\t\t\t\t\tBreakPointInstruction breakpoint = new BreakPointInstruction $F72 ; \n\t\t\t\t\tbreakpoint . setLocation ( currInst ) ; \n\t\t\t\t\tbreakpoint . setInstID ( instID ++ ) ; \n\t\t\t\t\tbreakpoint . setBPInstructionLocation ( location ) ; \n\t\t\t\t\tinstructions . add ( i , breakpoint ) ; \n\t\t\t\t\tDMLBreakpointManager . insertBreakpoint ( breakpoint , lineNumber ) ; \n\t\t\t\t\t$F665 } \n\t\t\t\t} \n\t\t\telse if ( currInst instanceof BreakPointInstruction && currInst . getLineNum ( ) == lineNumber ) { \n\t\t\t\tBreakPointInstruction breakpoint = ( BreakPointInstruction ) currInst ; \n\t\t\t\tbreakpoint . setBPInstructionStatus ( BPINSTRUCTION_STATUS . ENABLED ) ; \n\t\t\t\tbreakpoint . setBPInstructionLocation ( location ) ; \n\t\t\t\tinstructions . set ( i , breakpoint ) ; \n\t\t\t\tDMLBreakpointManager . updateBreakpoint ( lineNumber , status ) ; \n\t\t\t\t$F665 } \n\t\t\t} \n\t\telse { \n\t\t\tif ( currInst instanceof BreakPointInstruction && currInst . getLineNum ( ) == lineNumber ) { \n\t\t\t\tif ( op == NUM00 ) { \n\t\t\t\t\tBreakPointInstruction breakpoint = ( BreakPointInstruction ) currInst ; \n\t\t\t\t\tbreakpoint . setLocation ( currInst ) ; \n\t\t\t\t\tbreakpoint . setInstID ( currInst . getInstID ( ) ) ; \n\t\t\t\t\tbreakpoint . setBPInstructionStatus ( status ) ; \n\t\t\t\t\tbreakpoint . setBPInstructionLocation ( location ) ; \n\t\t\t\t\tinstructions . set ( i , breakpoint ) ; \n\t\t\t\t\tDMLBreakpointManager . updateBreakpoint ( lineNumber , status ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tinstructions . remove ( i ) ; \n\t\t\t\t\tDMLBreakpointManager . removeBreakpoint ( lineNumber , status ) ; \n\t\t\t\t\t} \n\t\t\t\t$F665 } \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void closeFile $F72 { \n\tif ( plogStream != null ) { \n\t\ttry { \n\t\t\t$F59 ( plogStream ) $F9472 ( logger , plogFilename ) } \n\t\tcatch ( IOException e ) $F34420 ( logger , plogFilename ) $F14110 ( plogStream ) } \n\t} \n"}, {"code": "public void nextToken $F72 { \n\tpreviousLine = line ; \n\tpreviousColumn = column ; \n\twhile ( pos < matcher . regionStart ( ) ) { \n\t\tif $F11983 ( text , pos ) { \n\t\t\t++ line ; \n\t\t\tcolumn = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\t++ column ; \n\t\t\t} \n\t\t++ pos ; \n\t\t} \n\tif ( matcher . regionStart ( ) == matcher . regionEnd ( ) ) { \n\t\tcurrentToken = NUM00 ; \n\t\t} \n\telse { \n\t\tmatcher . usePattern ( TOKEN ) ; \n\t\tif $F54321 ( matcher ) { \n\t\t\tcurrentToken = matcher . group ( ) ; \n\t\t\tmatcher . region ( matcher . end ( ) , matcher . regionEnd ( ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tcurrentToken = $F54327 ( String , text , pos ) ; \n\t\t\tmatcher . region ( pos + NUM00 , matcher . regionEnd ( ) ) ; \n\t\t\t} \n\t\tskipWhitespace ( ) ; \n\t\t} \n\t} \n"}, {"code": "private void parseFirstConsonant $F72 { \n\t$F10531 ( iter , alFirstConsonants ) while $F2921 ( iter ) { \n\t\t$F2778 ( strFirstCon , iter ) if ( strSyllable . startsWith ( strFirstCon , iCurPos ) ) { \n\t\t\tstrFirstConsonant = strFirstCon ; \n\t\t\t$F90433 ( iCurPos , strFirstCon ) $F665 } \n\t\t} \n\tstrFirstConsonant = ZERO ; \n\t} \n"}, {"code": "private BuddyPanelController $F72 { \n\t$F26681 ( buddyPanel ) buddyPanel . setLayout ( new SBoxLayout ( SBoxLayout . VERTICAL ) ) ; \n\tmodel = new BuddyListModel $F72 ; \n\tJList < Buddy > list = new BuddyPanel ( model ) ; \n\tbuddyPanel . add ( list , SLayout . EXPAND_X ) ; \n\t} \n"}, {"code": "private void removeGapsWithEdgeConcentration ( int nodesLevel [ ] ) { \n\tfinal int temp = m_nodes . size ( ) , temp2 = graphMatrix [ NUM00 ] . length ; \n\tint tempCnt = NUM00 ; \n\tfor ( $F119 ( n , temp ) ) { \n\t\tfor ( $F119 ( i , temp2 ) ) { \n\t\t\tif $F293661 ( graphMatrix , n , i ) { \n\t\t\t\tif ( nodesLevel [ i ] > nodesLevel [ n ] + NUM00 ) { \n\t\t\t\t\tint tempLevel = nodesLevel [ n ] ; \n\t\t\t\t\tboolean tempNodePresent = _BOOL ; \n\t\t\t\t\tint k = temp ; \n\t\t\t\t\tint tempnode = n ; \n\t\t\t\t\twhile ( tempLevel < nodesLevel [ i ] - NUM00 ) { \n\t\t\t\t\t\ttempNodePresent = _BOOL ; \n\t\t\t\t\t\tfor ( $F255681 ( k , graphMatrix ) ) { \n\t\t\t\t\t\t\tif $F293661 ( graphMatrix , tempnode , k ) $F3468 ( tempNodePresent , _BOOL ) } \n\t\t\t\t\t\tif ( tempNodePresent ) { \n\t\t\t\t\t\t\ttempnode = k ; \n\t\t\t\t\t\t\tk = k + NUM00 ; \n\t\t\t\t\t\t\ttempLevel ++ ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\telse { \n\t\t\t\t\t\t\tif ( tempnode != n ) { \n\t\t\t\t\t\t\t\ttempnode = k - NUM00 ; \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t$F597 } \n\t\t\t\t\t\t} \n\t\t\t\t\tif ( m_nodes . get ( tempnode ) . nodeType == SINGULAR_DUMMY ) { \n\t\t\t\t\t\tm_nodes . get ( tempnode ) . nodeType = PLURAL_DUMMY ; \n\t\t\t\t\t\t} \n\t\t\t\t\tif ( tempNodePresent ) { \n\t\t\t\t\t\tgraphMatrix [ tempnode ] [ i ] = graphMatrix [ n ] [ i ] ; \n\t\t\t\t\t\tgraphMatrix [ i ] [ tempnode ] = - graphMatrix [ n ] [ i ] ; \n\t\t\t\t\t\tgraphMatrix [ n ] [ i ] = NUM00 ; \n\t\t\t\t\t\tgraphMatrix [ i ] [ n ] = NUM00 ; \n\t\t\t\t\t\t$F598 } \n\t\t\t\t\tint len = graphMatrix . length ; \n\t\t\t\t\tint tempMatrix [ ] [ ] = new int [ graphMatrix . length + ( nodesLevel [ i ] - nodesLevel [ tempnode ] - NUM00 ) ] [ graphMatrix . length + ( nodesLevel [ i ] - nodesLevel [ tempnode ] - NUM00 ) ] ; \n\t\t\t\t\tint level = nodesLevel [ tempnode ] + NUM00 ; \n\t\t\t\t\tcopyMatrix ( graphMatrix , tempMatrix ) ; \n\t\t\t\t\tString s1 = new String ( NUM00 + tempCnt ++ ) ; \n\t\t\t\t\tm_nodes . add ( new GraphNode ( s1 , s1 , SINGULAR_DUMMY ) ) ; \n\t\t\t\t\tint temp3 [ ] = new int [ nodeLevels [ level ] . length + NUM00 ] ; \n\t\t\t\t\t$F250575 ( System , nodeLevels , level , temp3 ) $F8528 ( temp3 ) = $F2281 ( m_nodes ) ; \n\t\t\t\t\tnodeLevels [ level ] = temp3 ; \n\t\t\t\t\ttemp3 = new int $F6504 ( m_nodes ) ; \n\t\t\t\t\t$F7057 ( System , nodesLevel , temp3 ) temp3 [ $F2281 ( m_nodes ) ] = level ; \n\t\t\t\t\tnodesLevel = temp3 ; \n\t\t\t\t\tlevel ++ ; \n\t\t\t\t\tint m ; \n\t\t\t\t\tfor ( m = len ; \n\t\t\t\t\tm < len + nodesLevel [ i ] - nodesLevel [ tempnode ] - NUM00 - NUM00 ; \n\t\t\t\t\tm ++ ) { \n\t\t\t\t\t\tString s2 = new String ( NUM00 + tempCnt ++ ) ; \n\t\t\t\t\t\tm_nodes . add ( new GraphNode ( s2 , s2 , SINGULAR_DUMMY ) ) ; \n\t\t\t\t\t\ttemp3 = new int [ nodeLevels [ level ] . length + NUM00 ] ; \n\t\t\t\t\t\t$F250575 ( System , nodeLevels , level , temp3 ) $F8528 ( temp3 ) = $F2281 ( m_nodes ) ; \n\t\t\t\t\t\tnodeLevels [ level ] = temp3 ; \n\t\t\t\t\t\ttemp3 = new int $F6504 ( m_nodes ) ; \n\t\t\t\t\t\t$F7057 ( System , nodesLevel , temp3 ) temp3 [ $F2281 ( m_nodes ) ] = level ; \n\t\t\t\t\t\tnodesLevel = temp3 ; \n\t\t\t\t\t\tlevel ++ ; \n\t\t\t\t\t\ttempMatrix [ m ] [ m + NUM00 ] = tempMatrix [ n ] [ i ] ; \n\t\t\t\t\t\tif ( m > len ) { \n\t\t\t\t\t\t\ttempMatrix [ m ] [ m - NUM00 ] = - NUM00 * tempMatrix [ n ] [ i ] ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\ttempMatrix [ m ] [ i ] = tempMatrix [ n ] [ i ] ; \n\t\t\t\t\ttempMatrix [ tempnode ] [ len ] = tempMatrix [ n ] [ i ] ; \n\t\t\t\t\ttempMatrix [ len ] [ tempnode ] = - NUM00 * tempMatrix [ n ] [ i ] ; \n\t\t\t\t\ttempMatrix [ i ] [ m ] = - NUM00 * tempMatrix [ n ] [ i ] ; \n\t\t\t\t\tif ( m > len ) { \n\t\t\t\t\t\ttempMatrix [ m ] [ m - NUM00 ] = - NUM00 * tempMatrix [ n ] [ i ] ; \n\t\t\t\t\t\t} \n\t\t\t\t\ttempMatrix [ n ] [ i ] = NUM00 ; \n\t\t\t\t\ttempMatrix [ i ] [ n ] = NUM00 ; \n\t\t\t\t\tgraphMatrix = tempMatrix ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tgraphMatrix [ i ] [ n ] = - NUM00 * graphMatrix [ n ] [ i ] ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static $F96 asUnsignedByteArray ( BigInteger value ) { \n\t$F1208 ( bytes , value ) if $F41780 ( bytes ) $F41781 ( tmp , bytes , System ) return bytes ; \n\t} \n"}, {"code": "public static TestResult execJavac ( String toCompile , File dir , String jflexTestVersion ) { \n\tProject p = new Project $F72 ; \n\tJavac javac = new Javac $F72 ; \n\tPath path = new Path ( p , dir . toString ( ) ) ; \n\tjavac . setProject ( p ) ; \n\tjavac . setSrcdir ( path ) ; \n\tjavac . setDestdir ( dir ) ; \n\tjavac . setTarget ( javaVersion ) ; \n\tjavac . setSource ( javaVersion ) ; \n\tjavac . setSourcepath ( new Path ( p , NUM00 ) ) ; \n\tjavac . setIncludes ( toCompile ) ; \n\tPath classPath = javac . createClasspath ( ) ; \n\tclassPath . setPath ( $F79855 ( System ) + jflexTestVersion + NUM00 + jflexTestVersion + NUM00 ) ; \n\t$F1538 ( out ) PrintStream outSafe = System . err ; \n\tSystem . setErr ( new PrintStream ( out ) ) ; \n\ttry { \n\t\t$F1699 ( javac ) return new TestResult ( out . toString ( ) , _BOOL ) ; \n\t\t} \n\tcatch ( BuildException e ) { \n\t\treturn new TestResult ( e + System . getProperty ( NUM00 ) + out . toString ( ) , _BOOL ) ; \n\t\t} \n\tfinally { \n\t\tSystem . setErr ( outSafe ) ; \n\t\t} \n\t} \n"}, {"code": "$F128244 ( LockSupport , this , Thread ) "}, {"code": "public static CLPlatform [ ] listGPUPoweredPlatforms $F72 { \n\tCLPlatform [ ] platforms = listPlatforms ( ) ; \n\tList < CLPlatform > out = new ArrayList < CLPlatform > ( platforms . length ) ; \n\tfor ( CLPlatform platform : platforms ) { \n\t\tif ( platform . listGPUDevices ( _BOOL ) . length > NUM00 ) out . add ( platform ) ; \n\t\t} \n\treturn out . toArray ( new CLPlatform $F2313 ( out ) ) ; \n\t} \n"}, {"code": "public ActionRequestHelper dependsOn ( ActionRequestHelper dependency ) $F18637 ( mDependencies , dependency , this ) "}, {"code": "static boolean isDate ( Object obj ) { \n\treturn obj instanceof Date && obj . getClass ( ) == $F271637 ; \n\t} \n"}, {"code": "public static String toXml ( final Config toConvert , Boolean prettyXml ) throws JAXBException , IOException { \n\tString retVal = NUM00 ; \n\ttry ( StringWriter writer = new StringWriter $F72 ) { \n\t\ttoXml ( toConvert , writer , prettyXml ) ; \n\t\t$F6947 ( retVal , writer ) return retVal ; \n\t\t} \n\t} \n"}, {"code": "private static List < Vector2D > buildQuadrilateral ( final Vector2D ... points ) { \n\tList < Vector2D > quadrilateral = new ArrayList < Vector2D > $F72 ; \n\tfor ( Vector2D p : points ) $F2202 ( quadrilateral , p ) return quadrilateral ; \n\t} \n"}, {"code": "private void heapifyUp ( int twopos , $F62936 cur ) { \n\twhile ( twopos > NUM00 ) { \n\t\tfinal int parent = $F62939 ( twopos ) ; \n\t\t$F62936 par = twoheap [ parent ] ; \n\t\tif $F348512 ( cur , par ) $F5153 twoheap [ twopos ] = par ; \n\t\ttwopos = parent ; \n\t\t} \n\ttwoheap [ twopos ] = cur ; \n\t} \n"}, {"code": "public void insert ( String key , char val ) { \n\t$F54852 ( len , key ) if ( freenode + len > eq . length ) { \n\t\tredimNodeArrays ( eq . length + BLOCK_SIZE ) ; \n\t\t} \n\tchar strkey [ ] = new char [ len -- ] ; \n\t$F16116 ( key , len , strkey ) strkey [ len ] = NUM00 ; \n\troot = insert ( root , strkey , NUM00 , val ) ; \n\t} \n"}, {"code": "$F75659 ( takeLock , putLock ) "}, {"code": "private static boolean isSubFormat ( String filename ) { \n\tfor ( String ext : SUB_EXTENSIONS ) { \n\t\tif ( filename . contains ( NUM00 + ext ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "void write ( Environment env , DataOutputStream out , ConstantPool tab ) throws IOException { \n\tout . writeByte ( CONSTANT_NAMEANDTYPE ) ; \n\tout . writeShort ( tab . index ( name ) ) ; \n\tout . writeShort ( tab . index ( type ) ) ; \n\t} \n"}, {"code": "public static void initializeProperties ( Properties properties , boolean reset , boolean withDefaults ) { \n\tProperties defaultProp = null ; \n\tif ( withDefaults ) { \n\t\tSSOToken $F155394 ( appToken , AccessController , AdminTokenAction ) ; \n\t\tdefaultProp = ServerConfiguration . getDefaults ( appToken ) ; \n\t\t} \n\tPropertiesHolder oldProps ; \n\tPropertiesHolder newProps ; \n\tdo { \n\t\t$F16478 ( oldProps , propertiesHolderRef ) $F859 ( combined ) if ( defaultProp != null ) $F96492 ( combined , defaultProp ) if ( ! reset ) { \n\t\t\tcombined . putAll ( oldProps . properties ) ; \n\t\t\t} \n\t\tcombined . putAll ( properties ) ; \n\t\tnewProps = new PropertiesHolder ( Maps . fromProperties ( combined ) ) ; \n\t\t} \n\twhile $F59753 ( propertiesHolderRef , oldProps , newProps ) ; \n\t} \n"}, {"code": "public void addNetworkListener ( final NetworkListener listener ) $F207 ( networkListeners , listener ) "}, {"code": "public static void appendContentPrefix ( HttpServletRequest request , Appendable urlBuffer ) throws IOException $F16625 ( appendContentPrefix , request , urlBuffer ) "}, {"code": "public void addErrorListener ( final ErrorListener errorListener ) { \n\tif ( errorListeners == null ) { \n\t\terrorListeners = new ArrayList < ErrorListener > $F72 ; \n\t\t} \n\terrorListeners . add ( errorListener ) ; \n\t} \n"}, {"code": "private void validateClassName ( String className ) { \n\t$F9652 ( nvalue , className ) if $F129995 ( nvalue , CLASS_RE ) { \n\t\tthrow PropertyException . illegalPropertyValueException ( this , className ) ; \n\t\t} \n\t} \n"}, {"code": "public static void importBaseTypes ( final CConnection connection , final int rawModuleId , final int moduleId ) throws SQLException { \n\tfinal String query = NUM00 + CTableNames . BASE_TYPES_TABLE + NUM00 + moduleId + NUM00 + NUM00 + String . format ( CTableNames . RAW_BASE_TYPES , rawModuleId ) ; \n\tconnection . executeUpdate ( query , _BOOL ) ; \n\tfinal String updateSequence = String . format ( NUM00 + NUM00 , CTableNames . BASE_TYPES_TABLE , CTableNames . BASE_TYPES_TABLE ) ; \n\tconnection . executeQuery ( updateSequence , _BOOL ) ; \n\t} \n"}, {"code": "$F1431 public Object readMatrixOld ( Element node ) throws Exception { \n\tweka . core . Matrix matrix ; \n\tweka . core . matrix . Matrix matrixNew ; \n\tif ( DEBUG ) { \n\t\ttrace ( $F219728 , node . getAttribute ( ATT_NAME ) ) ; \n\t\t} \n\tm_CurrentNode = node ; \n\tmatrixNew = ( weka . core . matrix . Matrix ) readMatrix ( node ) ; \n\tmatrix = new weka . core . Matrix ( matrixNew . getArrayCopy ( ) ) ; \n\treturn matrix ; \n\t} \n"}, {"code": "public void recordFileSystemOperation ( DbClient dbClient , OperationTypeEnum opType , Operation . Status status , Object ... extParam ) { \n\ttry { \n\t\tboolean opStatus = ( Operation . Status . ready == status ) ? _BOOL : _BOOL ; \n\t\tString evType ; \n\t\tevType = opType . getEvType ( opStatus ) ; \n\t\t$F137633 ( evDesc , opType ) String opStage = AuditLogManager . AUDITOP_END ; \n\t\t_logger . info ( NUM00 , opType . toString ( ) , $F5528 ( evType ) + evDesc ) ; \n\t\tURI uri = ( URI ) extParam [ NUM00 ] ; \n\t\trecordBourneFileSystemEvent ( dbClient , evType , status , evDesc , uri ) ; \n\t\tauditFile ( dbClient , opType , opStatus , opStage , uri . toString ( ) ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t_logger . error ( $F89018 ( opType , e ) ) ; \n\t\t} \n\t} \n"}, {"code": "public CoreTokenException ( int errorCode ) { \n\tthis . errorCode = errorCode ; \n\t$F152042 ( this , getLocalizedMessage , Locale ) } \n"}, {"code": "public DExamineSsl ( JFrame parent , KseFrame kseFrame ) { \n\tsuper ( parent , res . getString ( NUM00 ) , Dialog . ModalityType . DOCUMENT_MODAL ) ; \n\tthis . kseFrame = kseFrame ; \n\tinitComponents ( ) ; \n\t} \n"}, {"code": "private static $F3803 computeDynamicVMArgs ( IJavaProject javaProject ) { \n\t$F8728 ( out ) String devJarPath = maybeGetDevJarPath ( javaProject ) ; \n\tif $F4012 ( devJarPath ) { \n\t\t$F162500 ( out , devJarPath ) } \n\treturn out ; \n\t} \n"}, {"code": "static void normalize ( StringBuilder number ) { \n\tString $F57584 ( normalizedNumber , normalize , number ) ; \n\tnumber . replace ( NUM00 , number . length ( ) , normalizedNumber ) ; \n\t} \n"}, {"code": "public $F1986 skipTo ( final int index ) throws MathIllegalArgumentException { \n\tif ( index == NUM00 ) { \n\t\t$F9952 ( Arrays , x ) } \n\telse { \n\t\tfinal int i = index - NUM00 ; \n\t\tfinal long grayCode = i ^ ( i > > NUM00 ) ; \n\t\tfor ( $F119 ( j , dimension ) ) { \n\t\t\tlong result = NUM00 ; \n\t\t\tfor ( $F9993 ( k , BITS ) ) { \n\t\t\t\tfinal long shift = grayCode > > ( k - NUM00 ) ; \n\t\t\t\t$F7256 ( shift ) final long ik = shift & NUM00 ; \n\t\t\t\tresult ^= ik * direction [ j ] [ k ] ; \n\t\t\t\t} \n\t\t\tx [ j ] = result ; \n\t\t\t} \n\t\t} \n\tcount = index ; \n\treturn nextVector ( ) ; \n\t} \n"}, {"code": "public void removeOrganizationConfiguration $F22381 ( orgName , groupName , checkLegacyMode ) throws $F16995 { \n\tif ( ( groupName == null ) || $F1276 ( groupName ) ) { \n\t\tgroupName = SMSUtils . DEFAULT ; \n\t\t} \n\tString orgdn = DNMapper . orgNameToDN ( orgName ) ; \n\tvalidateSCM ( ) ; \n\tString odn = scm . constructServiceConfigDN ( groupName , CreateServiceConfig . ORG_CONFIG_NODE , orgdn ) ; \n\t$F17013 ( cEntry , CachedSMSEntry , token , odn ) if ( cEntry . isNewEntry ( ) ) $F932 if ( checkLegacyMode && ServiceManager . isCoexistenceMode ( ) && groupName . equalsIgnoreCase ( SMSUtils . DEFAULT ) ) { \n\t\tOrgConfigViaAMSDK amsdk = new OrgConfigViaAMSDK ( token , DNMapper . realmNameToAMSDKName ( orgdn ) , orgdn ) ; \n\t\tamsdk . unassignService ( serviceName ) ; \n\t\t} \n\tif ( ! cEntry . isNewEntry ( ) ) { \n\t\tSMSEntry entry = cEntry . getClonedSMSEntry ( ) ; \n\t\tentry . delete ( token ) ; \n\t\tcEntry . refresh ( entry ) ; \n\t\t} \n\t} \n"}, {"code": "public void removeGroupListener ( final GroupListener listener ) $F106 ( groupListeners , listener ) "}, {"code": "public SetChangelogMapping $F68141 ( source , taskName , changelogPartitionNumber ) { \n\tsuper ( source ) ; \n\tsetType ( TYPE ) ; \n\tsetKey ( taskName ) ; \n\t$F141086 ( putMessageValue , CHANGELOG_VALUE_KEY , String , changelogPartitionNumber ) } \n"}, {"code": "$F1 protected String extractKey ( final String name ) { \n\tfinal String key = unescape ( $F4019 ( name ) ) ; \n\treturn key . equals ( NUM00 ) ? null : key ; \n\t} \n"}, {"code": "private static float spacing ( MotionEvent event ) { \n\t$F49063 ( x , event ) $F49067 ( y , event ) return ( float ) $F25556 ( Math , x , y ) ; \n\t} \n"}, {"code": "$F1431 public static $F9340 void transformStringMap ( $F2540 ( original ) , $F15232 ( map ) , $F39075 keyClass , $F197000 valueClass ) throws PreferenceException { \n\tMethod parseKeyMethod = findParseMethod ( keyClass ) ; \n\tMethod parseValueMethod = findParseMethod ( valueClass ) ; \n\tif ( $F272757 ( parseKeyMethod , parseValueMethod ) ) { \n\t\tfor ( $F19318 ( toTransformEntry , original ) ) { \n\t\t\ttry { \n\t\t\t\tObject transformedKey = parseKeyMethod . invoke ( null , toTransformEntry . getKey ( ) ) ; \n\t\t\t\tObject transformedValue = parseValueMethod . invoke ( null , toTransformEntry . getValue ( ) ) ; \n\t\t\t\tif ( $F39078 ( keyClass , transformedKey ) && $F39078 ( valueClass , transformedValue ) ) { \n\t\t\t\t\tmap . put ( ( K ) transformedKey , ( V ) transformedValue ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tcatch ( Exception e ) { \n\t\t\t\tthrow new PreferenceException ( $F27322 ( keyClass , valueClass ) , e ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse if ( null == parseKeyMethod ) { \n\t\tthrow new PreferenceException ( $F27322 ( keyClass , valueClass ) + NUM00 + keyClass . getName ( ) + NUM00 ) ; \n\t\t} \n\telse { \n\t\tthrow new PreferenceException ( $F27322 ( keyClass , valueClass ) + NUM00 + valueClass . getName ( ) + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean grabInput $F72 { \n\tif $F58998 ( grabLog , PlatformLogger ) { \n\t\tgrabLog . fine ( NUM00 , this ) ; \n\t\t} \n\tXToolkit . awtLock ( ) ; \n\ttry { \n\t\tif ( XAwtState . getGrabWindow ( ) == this && XAwtState . isManualGrab ( ) ) { \n\t\t\t$F22806 ( grabLog ) return _BOOL ; \n\t\t\t} \n\t\tXBaseWindow prevGrabWindow = XAwtState . getGrabWindow ( ) ; \n\t\tfinal int eventMask = ( int ) ( XConstants . ButtonPressMask | XConstants . ButtonReleaseMask | XConstants . EnterWindowMask | XConstants . LeaveWindowMask | XConstants . PointerMotionMask | XConstants . ButtonMotionMask ) ; \n\t\tfinal int ownerEvents = NUM00 ; \n\t\tif ( ! XToolkit . getSunAwtDisableGrab ( ) ) { \n\t\t\tint ptrGrab = XlibWrapper . XGrabPointer ( XToolkit . getDisplay ( ) , getContentWindow ( ) , ownerEvents , eventMask , XConstants . GrabModeAsync , XConstants . GrabModeAsync , XConstants . None , ( XWM . isMotif ( ) ? XToolkit . arrowCursor : XConstants . None ) , XConstants . CurrentTime ) ; \n\t\t\tif ( ptrGrab != XConstants . GrabSuccess ) { \n\t\t\t\tXlibWrapper . XUngrabPointer ( XToolkit . getDisplay ( ) , XConstants . CurrentTime ) ; \n\t\t\t\tXAwtState . setGrabWindow ( null ) ; \n\t\t\t\t$F22806 ( grabLog ) return _BOOL ; \n\t\t\t\t} \n\t\t\tint keyGrab = XlibWrapper . XGrabKeyboard ( XToolkit . getDisplay ( ) , getContentWindow ( ) , ownerEvents , XConstants . GrabModeAsync , XConstants . GrabModeAsync , XConstants . CurrentTime ) ; \n\t\t\tif ( keyGrab != XConstants . GrabSuccess ) { \n\t\t\t\tXlibWrapper . XUngrabPointer ( XToolkit . getDisplay ( ) , XConstants . CurrentTime ) ; \n\t\t\t\tXlibWrapper . XUngrabKeyboard ( XToolkit . getDisplay ( ) , XConstants . CurrentTime ) ; \n\t\t\t\tXAwtState . setGrabWindow ( null ) ; \n\t\t\t\t$F22806 ( grabLog ) return _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( prevGrabWindow != null ) { \n\t\t\tprevGrabWindow . ungrabInputImpl ( ) ; \n\t\t\t} \n\t\tXAwtState . setGrabWindow ( this ) ; \n\t\t$F22806 ( grabLog ) return _BOOL ; \n\t\t} \n\tfinally { \n\t\tXToolkit . awtUnlock ( ) ; \n\t\t} \n\t} \n"}, {"code": "public ComponentManager ( Collection < Sequence > generalSeeds ) { \n\tSet < Sequence > seedSet = new $F22301 $F716 ( generalSeeds ) ; \n\tseedSet . addAll ( generalSeeds ) ; \n\tthis . gralSeeds = Collections . unmodifiableSet ( seedSet ) ; \n\tgralComponents = new SequenceCollection ( seedSet ) ; \n\t} \n"}, {"code": "public synchronized void deleteObservers $F72 $F9096 ( observers ) "}, {"code": "public static $F96 unsynchronize $F97 ( abySource ) { \n\t$F5950 ( input , abySource ) ByteArrayOutputStream $F59025 ( output , abySource ) ; \n\tint count = NUM00 ; \n\twhile $F2892 ( input ) { \n\t\t$F7468 ( firstByte , input ) count ++ ; \n\t\toutput . write ( firstByte ) ; \n\t\tif ( ( firstByte & MPEGFrameHeader . SYNC_BYTE1 ) == MPEGFrameHeader . SYNC_BYTE1 ) { \n\t\t\tif $F2892 ( input ) { \n\t\t\t\t$F46282 ( input ) $F7468 ( secondByte , input ) if ( ( secondByte & MPEGFrameHeader . SYNC_BYTE2 ) == MPEGFrameHeader . SYNC_BYTE2 ) { \n\t\t\t\t\tif $F14148 ( logger , Level ) { \n\t\t\t\t\t\t$F150605 ( logger , count ) } \n\t\t\t\t\t$F25097 ( output ) } \n\t\t\t\telse if ( secondByte == NUM00 ) { \n\t\t\t\t\tif $F14148 ( logger , Level ) { \n\t\t\t\t\t\t$F150605 ( logger , count ) } \n\t\t\t\t\t$F25097 ( output ) } \n\t\t\t\t$F2268 ( input ) } \n\t\t\t} \n\t\t} \n\tif ( ( $F8528 ( abySource ) & MPEGFrameHeader . SYNC_BYTE1 ) == MPEGFrameHeader . SYNC_BYTE1 ) { \n\t\t$F47560 ( logger ) $F25097 ( output ) } \n\t$F11316 ( output ) } \n"}, {"code": "private $F96 calculateGeneralEncryptionKey ( $F96 userPassword , $F96 firstDocIdValue , int keyBitLength , int revision , $F96 oValue , int pValue , boolean encryptMetadata ) throws GeneralSecurityException { \n\t$F172325 ( paddedPassword , padPassword , userPassword ) MessageDigest md5 = createMD5Digest ( ) ; \n\t$F2268 ( md5 ) md5 . update ( paddedPassword ) ; \n\tmd5 . update ( oValue ) ; \n\tmd5 . update ( $F8046 ( pValue ) ) ; \n\tmd5 . update ( $F11788 ( pValue ) ) ; \n\tmd5 . update ( $F11788 ( pValue ) ) ; \n\tmd5 . update ( $F8043 ( pValue ) ) ; \n\tif ( firstDocIdValue != null ) $F7469 ( md5 , firstDocIdValue ) if ( revision >= NUM00 && ! encryptMetadata ) { \n\t\tfor ( $F809 ( i ) ) { \n\t\t\tmd5 . update ( $F19905 ) ; \n\t\t\t} \n\t\t} \n\t$F294889 ( hash , md5 ) final int keyLen = revision == NUM00 ? NUM00 : ( keyBitLength / NUM00 ) ; \n\t$F4727 ( key , keyLen ) if ( revision >= NUM00 ) { \n\t\tfor ( $F809 ( i ) ) { \n\t\t\tmd5 . update ( hash , NUM00 , key . length ) ; \n\t\t\tdigestTo ( md5 , hash ) ; \n\t\t\t} \n\t\t} \n\t$F5634 ( System , hash , key ) return key ; \n\t} \n"}, {"code": "public MessageCapture ( final Logger logger , final boolean captureEntity ) { \n\tthis ( logger , captureEntity , _BOOL ) ; \n\t} \n"}, {"code": "public static final $F96 unzip $F97 ( in ) throws IOException { \n\tByteArrayOutputStream outStream = new ByteArrayOutputStream ( EXPECTED_COMPRESSION_RATIO * in . length ) ; \n\tGZIPInputStream inStream = new GZIPInputStream $F24702 ( in ) ; \n\t$F2175 ( buf , BUF_SIZE ) while ( _BOOL ) { \n\t\t$F83249 ( size , inStream , buf ) $F137919 ( size ) $F11584 ( outStream , buf , size ) } \n\t$F59 ( outStream ) $F11316 ( outStream ) } \n"}, {"code": "public static void insertIntoCombo ( JComboBox combo , Object item ) { \n\tMutableComboBoxModel model = ( MutableComboBoxModel ) combo . getModel ( ) ; \n\tif $F324566 ( model ) { \n\t\tmodel . insertElementAt ( item , NUM00 ) ; \n\t\t$F665 } \n\tObject o = model . getElementAt ( NUM00 ) ; \n\t$F7224 ( o , item ) model . removeElement ( item ) ; \n\tmodel . insertElementAt ( item , NUM00 ) ; \n\t$F53383 ( combo ) } \n"}, {"code": "public synchronized Object co_entry_pause ( int thisCoroutine ) throws $F87317 { \n\tif $F87318 ( m_activeIDs , thisCoroutine ) throw new $F87317 $F72 ; \n\twhile ( m_nextCoroutine != thisCoroutine ) { \n\t\ttry $F5795 ( wait ) catch ( $F87326 e ) $F845 } \n\treturn m_yield ; \n\t} \n"}, {"code": "private boolean pythonErrorIn ( String output ) { \n\tboolean isError = _BOOL ; \n\t$F6542 ( outputMultiline , output ) Matcher errorMatcher ; \n\tfor ( String row : outputMultiline ) { \n\t\terrorMatcher = errorInLastLine . matcher ( row ) ; \n\t\tif ( errorMatcher . find ( ) == _BOOL ) $F3468 ( isError , _BOOL ) } \n\treturn isError ; \n\t} \n"}, {"code": "public static String numberToString ( Number number ) throws JSONException { \n\tif ( number == null ) $F19954 $F23206 ( doubleValue , number ) JSON . checkDouble ( doubleValue ) ; \n\tif $F1238 ( number , NEGATIVE_ZERO ) $F2455 $F14662 ( longValue , number ) if $F23208 ( doubleValue , longValue ) $F23210 ( Long , longValue ) $F92 ( number ) } \n"}, {"code": "public static $F2539 strToMap ( String str , String delim , boolean trim , String pairsSeparator ) { \n\t$F1275 ( str ) $F13404 ( decodedMap ) $F13406 ( elements , split , str , delim ) pairsSeparator = pairsSeparator == null ? NUM00 : pairsSeparator ; \n\tfor ( String s : elements ) { \n\t\t$F13406 ( e , split , s , pairsSeparator ) if $F6887 ( e ) $F1448 $F13410 ( name , e ) $F13410 ( value , e ) if ( trim ) { \n\t\t\t$F13412 ( name ) $F13412 ( value ) } \n\t\ttry { \n\t\t\tdecodedMap . put ( URLDecoder . decode ( name , NUM00 ) , URLDecoder . decode ( value , NUM00 ) ) ; \n\t\t\t} \n\t\tcatch ( UnsupportedEncodingException e1 ) $F13419 ( Debug , e1 , module ) } \n\treturn decodedMap ; \n\t} \n"}, {"code": "public void doStressTest ( TempTripleStore tmp , InferenceEngine inf , int ntrials , int D , int N ) { \n\tAbstractTripleStore store = inf . database ; \n\tassertSameGraphs ( tmp , store ) ; \n\tfor ( $F119 ( trial , ntrials ) ) { \n\t\tMDC . put ( NUM00 , NUM00 + trial ) ; \n\t\tretractAndAssert ( inf , store , NUM00 , D , N ) ; \n\t\tassertSameGraphs ( tmp , store ) ; \n\t\t$F36382 ( MDC ) } \n\t} \n"}, {"code": "public $F28904 keySet $F72 { \n\treturn Collections . unmodifiableSet ( map . keySet ( ) ) ; \n\t} \n"}, {"code": "public void onStart $F72 { \n\tif ( mAudioMirrorBuffer == null ) $F46946 ( mAudioMirrorBuffer ) if ( mStreamer != null ) $F28175 ( mStreamer ) if ( mInsecureStreamer != null ) $F28175 ( mInsecureStreamer ) } \n"}, {"code": "$F1431 public PropagationImp ( $F138696 lineage , boolean serial , long timeout ) { \n\tserial_ = serial ; \n\tlineage_ = ( $F138696 ) lineage . clone ( ) ; \n\ttimeout_ = timeout ; \n\t} \n"}, {"code": "public NativeRunner ( File eclipsec ) $F36568 ( this , Objects , eclipsec ) "}, {"code": "private static String indent ( final int height ) { \n\treturn CoreBaseBOp . indent ( height ) ; \n\t} \n"}, {"code": "public static Calendar reduceCalendar ( Calendar calendar ) { \n\t$F104560 ( calendar , Calendar ) $F118884 ( calendar , Calendar ) $F118882 ( calendar , Calendar ) calendar . set ( Calendar . HOUR , NUM00 ) ; \n\t$F118880 ( calendar , Calendar ) return calendar ; \n\t} \n"}, {"code": "public static String surround $F1947 ( string , prefix , suffix ) { \n\tif ( string . startsWith ( prefix ) == _BOOL ) { \n\t\tstring = prefix + string ; \n\t\t} \n\tif ( string . endsWith ( suffix ) == _BOOL ) { \n\t\tstring += suffix ; \n\t\t} \n\treturn string ; \n\t} \n"}, {"code": "public static Coordinate ptNotInList ( $F19578 testPts , $F19578 pts ) { \n\tfor ( $F1139 ( i , testPts ) ) { \n\t\tCoordinate testPt = testPts [ i ] ; \n\t\tif ( ! isInList ( testPt , pts ) ) return testPt ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public static String trimOrPad $F41200 ( str , length , padChar ) { \n\tString result ; \n\tif ( str == null ) { \n\t\tresult = NUM00 ; \n\t\t} \n\telse { \n\t\tresult = str ; \n\t\t} \n\tif $F14791 ( result , length ) $F35299 ( result , length ) while $F62004 ( result , length ) { \n\t\tresult += padChar ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "void scheduleToTimerPool $F72 { \n\tif ( sessionPollerPool . isPollingEnabled ( ) ) { \n\t\tlong timeoutTime = ( session . getLatestRefreshTime ( ) + ( session . getMaxIdleTime ( ) * NUM00 ) ) * NUM00 ; \n\t\tif ( sessionPollerPool . getCacheBasedPolling ( ) ) { \n\t\t\ttimeoutTime = Math . min ( ( session . getLatestRefreshTime ( ) + ( session . getMaxCachingTime ( ) * NUM00 ) ) * NUM00 , timeoutTime ) ; \n\t\t\t} \n\t\trescheduleIfWillTimeOutBeforeExecution ( timeoutTime ) ; \n\t\t} \n\telse { \n\t\tif ( ( sessionPollerPool . isSessionCleanupEnabled ( ) ) && willExpire ( session . getMaxSessionTime ( ) ) ) { \n\t\t\tlong timeoutTime = ( session . getLatestRefreshTime ( ) + ( session . getMaxSessionTime ( ) * NUM00 ) ) * NUM00 ; \n\t\t\trescheduleIfWillTimeOutBeforeExecution ( timeoutTime ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void resetPolicy $F72 { \n\tmPreferences . putString ( PREF_LAST_RESPONSE , Integer . toString ( Policy . RETRY ) ) ; \n\tsetRetryUntil ( DEFAULT_RETRY_UNTIL ) ; \n\tsetMaxRetries ( DEFAULT_MAX_RETRIES ) ; \n\tsetRetryCount ( Long . parseLong ( DEFAULT_RETRY_COUNT ) ) ; \n\tsetValidityTimestamp ( DEFAULT_VALIDITY_TIMESTAMP ) ; \n\t$F17621 ( mPreferences ) } \n"}, {"code": "public CipherParameters decrypt $F5474 ( in , keyLen ) { \n\treturn $F132139 ( decrypt , in , keyLen ) ; \n\t} \n"}, {"code": "private static void logOsInfo $F72 { \n\tLogger . appendLog ( NUM00 + Cfg . getOs ( ) ) ; \n\tLogger . appendLog ( NUM00 + Os . getOsName ( ) ) ; \n\tLogger . appendLog ( NUM00 + Os . platform ( ) ) ; \n\tLogger . appendLog ( NUM00 + System . getProperty ( NUM00 ) ) ; \n\tLogger . appendLog ( NUM00 + HostInfo . availableCpus ( ) ) ; \n\tLogger . appendLog ( NUM00 + HostInfo . getMaxMemory ( ) + NUM00 ) ; \n\t} \n"}, {"code": "private void beforeValue $F72 throws JSONException { \n\t$F19233 ( stack ) Scope context = peek ( ) ; \n\tif ( context == Scope . EMPTY_ARRAY ) { \n\t\treplaceTop ( Scope . NONEMPTY_ARRAY ) ; \n\t\tnewline ( ) ; \n\t\t} \n\telse if ( context == Scope . NONEMPTY_ARRAY ) { \n\t\t$F84 ( out ) newline ( ) ; \n\t\t} \n\telse if ( context == Scope . DANGLING_KEY ) { \n\t\tout . append ( indent == null ? NUM00 : NUM00 ) ; \n\t\treplaceTop ( Scope . NONEMPTY_OBJECT ) ; \n\t\t} \n\telse if ( context != Scope . NULL ) $F19954 } \n"}, {"code": "public static $F96 hash ( String input ) { \n\tif $F20899 ( TextUtils , input ) { \n\t\ttry { \n\t\t\t$F151317 ( inputBytes , input ) return hash ( inputBytes ) ; \n\t\t\t} \n\t\tcatch ( UnsupportedEncodingException e ) { \n\t\t\tLog . e ( TAG , $F6165 ( input , e ) , e ) ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public static String generateTransportZoneNativeGuid $F1947 ( transportType , deviceType , fabricId ) { \n\treturn String . format ( NUM00 , transportType , _deviceTypeMap . get ( deviceType ) , fabricId ) ; \n\t} \n"}, {"code": "public void testAddServletWithNameAndJspFile $F72 throws Exception { \n\tString xml = WEBAPP_TEST_HEADER + NUM00 + NUM00 ; \n\t$F168856 ( webXml , WebXmlIo , xml , getEntityResolver ) WebXmlUtils . addJspFile ( webXml , NUM00 , NUM00 ) ; \n\tassertTrue ( WebXmlUtils . hasServlet ( webXml , NUM00 ) ) ; \n\t} \n"}, {"code": "$F1 public boolean equalsValue ( final Object other ) { \n\treturn Objects . equals ( this . value , other ) ; \n\t} \n"}, {"code": "public static void error ( String msg , Throwable t ) { \n\tdebugInst . debug ( IDebug . ERROR , msg , t ) ; \n\t} \n"}, {"code": "public void removeEventListener ( SIPTransactionEventListener oldListener ) $F106 ( eventListeners , oldListener ) "}, {"code": "public static ExecutionSystem newExecutionSystem ( URI uri , $F6253 ( env ) ) throws IOException $F25228 ( newExecutionSystem , uri , env ) "}, {"code": "public static boolean isCommand ( IElementType type ) { \n\treturn type == SQFTypes . COMMAND_TOKEN || type == SQFTypes . COMMAND || type == SQFTypes . CASE || type == SQFTypes . CASE_COMMAND ; \n\t} \n"}, {"code": "public void send ( XTraceReport report ) $F1614 ( outgoing , report ) "}, {"code": "$F125711 ( _BOOL ) public static boolean startsWithConcatenation ( $F1113 String string , $F1113 String ... prefixes ) { \n\tint offset = NUM00 ; \n\tfor ( String prefix : prefixes ) { \n\t\t$F1749 ( prefixLen , prefix ) if ( ! string . regionMatches ( offset , prefix , NUM00 , prefixLen ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\toffset += prefixLen ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private static $F7465 ( msg , startpos , count , len , idx , ch , isDigit ) "}, {"code": "public void testOrderedByDatatype $F72 throws Exception { \n\tint lastType = Integer . MIN_VALUE ; \n\twhile $F1682 ( typeInfoRs ) { \n\t\t$F21024 ( name , typeInfoRs ) $F15339 ( type , typeInfoRs ) assertTrue ( NUM00 + type + NUM00 + name + NUM00 + lastType , type >= lastType ) ; \n\t\tlastType = type ; \n\t\t} \n\t} \n"}, {"code": "$F23145 ( measureSpec , result , specMode , MeasureSpec , specSize , mRadius , getPaddingTop , getPaddingBottom , Math ) "}, {"code": "public boolean fireMapMouseClicked ( MouseEvent evt ) { \n\t$F22808 ( DEBUG , logger ) clickHappened = _BOOL ; \n\tboolean consumed = _BOOL ; \n\tevt = new MapMouseEvent ( getParentMode ( ) , evt ) ; \n\tif ( priorityListener != null && evt . getClickCount ( ) > NUM00 ) { \n\t\tpriorityListener . mouseClicked ( evt ) ; \n\t\tconsumed = _BOOL ; \n\t\t} \n\tpriorityListener = null ; \n\tif ( proxy == null || evt . isShiftDown ( ) || ( proxyDistributionMask & PROXY_DISTRIB_MOUSE_CLICKED ) > NUM00 ) { \n\t\tIterator < MapMouseListener > it = iterator ( ) ; \n\t\twhile ( it . hasNext ( ) && ! consumed ) { \n\t\t\tMapMouseListener target = it . next ( ) ; \n\t\t\tconsumed = target . mouseClicked ( evt ) && consumeEvents ; \n\t\t\t$F65989 ( consumed , priorityListener , target ) } \n\t\t} \n\tboolean ignoreConsumed = ! consumed || ( consumed && $F84469 ( proxyDistributionMask , PROXY_ACK_CONSUMED_MOUSE_CLICKED ) ) ; \n\tif ( proxy != null && ignoreConsumed && $F136083 ( evt ) ) { \n\t\tproxy . mouseClicked ( evt ) ; \n\t\tconsumed = _BOOL ; \n\t\t} \n\treturn consumed ; \n\t} \n"}, {"code": "public static String formatSqlValues ( String ... values ) { \n\t$F4000 ( builder ) for ( $F1139 ( i , values ) ) { \n\t\t$F34674 ( i , builder ) $F84 ( builder ) $F29840 ( builder , escapeSqlString , values , i ) $F84 ( builder ) } \n\t$F84 ( builder ) $F92 ( builder ) } \n"}, {"code": "private void emitClass ( DocComment comment ) { \n\tString tagName = ( comment . getType ( ) == DocComment . CLASS ) ? NUM00 : NUM00 ; \n\t$F84 ( xml ) xml . append ( tagName ) ; \n\t$F84 ( xml ) $F167270 ( xml , comment ) $F84 ( xml ) xml . append ( comment . getFullname ( ) ) ; \n\tString sourcefile = comment . getSourceFile ( ) ; \n\t$F20974 ( sourcefile , xml ) $F84 ( xml ) xml . append ( comment . getNamespace ( ) ) ; \n\t$F84 ( xml ) xml . append ( comment . getAccess ( ) ) ; \n\t$F84 ( xml ) if ( comment . getType ( ) == DocComment . INTERFACE ) { \n\t\t$F806 baseClasses = comment . getBaseclasses ( ) ; \n\t\tif ( baseClasses != null ) { \n\t\t\t$F84 ( xml ) for ( $F1139 ( i , baseClasses ) ) { \n\t\t\t\tString baseclass = baseClasses [ i ] ; \n\t\t\t\tif ( baseclass != null ) { \n\t\t\t\t\t$F28333 ( i , xml ) xml . append ( baseclass ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t$F84 ( xml ) } \n\t\t} \n\telse { \n\t\t$F84 ( xml ) xml . append ( comment . getBaseClass ( ) ) ; \n\t\t$F84 ( xml ) $F806 interfaces = comment . getInterfaces ( ) ; \n\t\tif ( interfaces != null ) { \n\t\t\t$F84 ( xml ) for ( $F1139 ( i , interfaces ) ) { \n\t\t\t\tString inter = interfaces [ i ] ; \n\t\t\t\tif ( inter != null ) { \n\t\t\t\t\t$F28333 ( i , xml ) xml . append ( inter ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t$F84 ( xml ) } \n\t\t} \n\t$F84 ( xml ) xml . append ( comment . isFinal ( ) ) ; \n\t$F84 ( xml ) $F84 ( xml ) xml . append ( comment . isDynamic ( ) ) ; \n\t$F84 ( xml ) $F84 ( xml ) $F137633 ( desc , comment ) if ( desc != null ) appendTag ( NUM00 , comment . getDescription ( ) ) ; \n\temitTags ( comment . getAllTags ( ) ) ; \n\tif ( comment . getMetadata ( ) != null ) emitMetadata ( comment . getMetadata ( ) ) ; \n\t$F84 ( xml ) xml . append ( tagName ) ; \n\t$F84 ( xml ) } \n"}, {"code": "protected void paintContentBorderTopEdge ( Graphics g , int x , int y , int w , int h , boolean drawBroken , Rectangle selRect , boolean isContentBorderPainted ) { \n\tif ( isContentBorderPainted ) { \n\t\tg . setColor ( selectHighlight ) ; \n\t\tg . fillRect ( x , y , w - NUM00 , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public void analyzeAllItAndWriteResults $F72 { \n\tRunResultsLoader runDir = new RunResultsLoader ( runDirectory , null ) ; \n\tPrintStream stream ; \n\ttry { \n\t\tstream = new PrintStream ( $F33731 ( outputDir ) ) ; \n\t\t} \n\tcatch ( FileNotFoundException e ) { \n\t\t$F301 ( e ) $F665 } \n\tString header = NUM00 ; \n\tstream . println ( header ) ; \n\tdouble totalTTIt ; \n\t$F1986 avgRouteTTsIt ; \n\t$F2027 routeUsersIt ; \n\tfor ( $F9993 ( i , lastIteration ) ) { \n\t\t$F8817 ( log , i , lastIteration ) String eventsFilename = runDir . getEventsFilename ( i ) ; \n\t\tEventsManager eventsManager = new EventsManagerImpl $F72 ; \n\t\tTtAnalyzeBraess handler = new TtAnalyzeBraess $F72 ; \n\t\teventsManager . addHandler ( handler ) ; \n\t\tMatsimEventsReader reader = new MatsimEventsReader ( eventsManager ) ; \n\t\treader . readFile ( eventsFilename ) ; \n\t\ttotalTTIt = handler . getTotalTT ( ) ; \n\t\tavgRouteTTsIt = handler . calculateAvgRouteTTs ( ) ; \n\t\trouteUsersIt = handler . getRouteUsers ( ) ; \n\t\t$F280 ( line ) line . append ( i + NUM00 + totalTTIt ) ; \n\t\tfor ( $F6268 ( j ) ) { \n\t\t\t$F25648 ( line , routeUsersIt , j ) } \n\t\tfor ( $F6268 ( j ) ) { \n\t\t\t$F25648 ( line , avgRouteTTsIt , j ) } \n\t\t$F144975 ( stream , line ) } \n\t$F59 ( stream ) $F60651 ( log , lastIteration ) } \n"}, {"code": "public int executeUpdate ( String sql ) throws SQLException { \n\treturn Util . truncateAndConvertToInt ( executeLargeUpdate ( sql ) ) ; \n\t} \n"}, {"code": "$F160927 static long currentThreadTimeMillis $F72 { \n\t$F21879 ( System ) } \n"}, {"code": "public static Entry makeEntry $F24643 ( ldifLines ) { \n\treturn $F182030 ( makeEntry , ldifLines ) ; \n\t} \n"}, {"code": "void clearParserHighlights $F72 { \n\tfor ( $F2277 ( i , parserHighlights ) ) { \n\t\t$F16628 ( tag , parserHighlights , i ) if ( tag instanceof LayeredHighlightInfo ) { \n\t\t\tLayeredHighlightInfo lhi = ( LayeredHighlightInfo ) tag ; \n\t\t\tif ( lhi . width > NUM00 && lhi . height > NUM00 ) { \n\t\t\t\ttextArea . repaint ( $F941 ( lhi ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tHighlightInfo info = ( HighlightInfo ) tag ; \n\t\t\tTextUI ui = textArea . getUI ( ) ; \n\t\t\tui . damageRange ( textArea , info . getStartOffset ( ) , info . getEndOffset ( ) ) ; \n\t\t\t} \n\t\t} \n\t$F725 ( parserHighlights ) } \n"}, {"code": "$F1 public final short readShort $F72 throws IOException { \n\t$F52634 ( dis , work ) return ( short ) ( $F169749 ( work ) | $F18896 ( work ) ) ; \n\t} \n"}, {"code": "public int format $F95906 ( val , buf , off , len ) { \n\tif ( val == Integer . MIN_VALUE ) { \n\t\tif ( len > ByteFormatter . NUMBER_BASE ) { \n\t\t\treturn format ( NUM00 , buf , off , len ) ; \n\t\t\t} \n\t\telse { \n\t\t\ttruncationFiller ( buf , off , len ) ; \n\t\t\treturn off + len ; \n\t\t\t} \n\t\t} \n\t$F5422 ( pos , Math , val ) int ndig = NUM00 ; \n\tint dmax = ByteFormatter . NUMBER_BASE ; \n\twhile ( ndig < ByteFormatter . NUMBER_BASE && pos >= dmax ) { \n\t\tndig ++ ; \n\t\tdmax *= ByteFormatter . NUMBER_BASE ; \n\t\t} \n\tif ( val < NUM00 ) { \n\t\tndig ++ ; \n\t\t} \n\tif ( ndig > len || ndig > buf . length - off ) { \n\t\ttruncationFiller ( buf , off , len ) ; \n\t\treturn off + len ; \n\t\t} \n\toff += ndig ; \n\tint xoff = off - NUM00 ; \n\tdo { \n\t\tbuf [ xoff ] = ByteFormatter . DIGITS [ pos % ByteFormatter . NUMBER_BASE ] ; \n\t\txoff -- ; \n\t\tpos /= ByteFormatter . NUMBER_BASE ; \n\t\t} \n\twhile ( pos > NUM00 ) ; \n\tif ( val < NUM00 ) { \n\t\tbuf [ xoff ] = $F74671 ; \n\t\t} \n\treturn off ; \n\t} \n"}, {"code": "public void append ( char $F184368 ) { \n\tint maxlength = buffer . length - pos ; \n\tif ( c . length < maxlength ) $F181805 ( System , c , buffer , pos ) else { \n\t\t$F6483 ( System , c , buffer , pos , maxlength ) curr . next = new Entity ( buffer ) ; \n\t\tcurr = curr . next ; \n\t\tlength += buffer . length ; \n\t\tbuffer = new char [ ( buffer . length > c . length - maxlength ) ? buffer . length : c . length - maxlength ] ; \n\t\tif ( c . length > maxlength ) { \n\t\t\tSystem . arraycopy ( c , maxlength , buffer , NUM00 , c . length - maxlength ) ; \n\t\t\tpos = c . length - maxlength ; \n\t\t\t} \n\t\telse { \n\t\t\tpos = NUM00 ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static boolean hasPermission ( Security security , GenericValue userLogin , GenericValue orderHeader ) { \n\t$F133007 ( userLogin , orderHeader , _BOOL ) if ( security . hasEntityPermission ( NUM00 , NUM00 , userLogin ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse if ( security . hasEntityPermission ( NUM00 , NUM00 , userLogin ) ) { \n\t\t$F6261 orderRoles = null ; \n\t\ttry { \n\t\t\torderRoles = orderHeader . getRelated ( NUM00 , UtilMisc . toMap ( $F86073 ( userLogin ) ) , null , _BOOL ) ; \n\t\t\t} \n\t\tcatch ( GenericEntityException e ) { \n\t\t\t$F48322 ( Debug , e , module ) } \n\t\tif $F35028 ( UtilValidate , orderRoles ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private boolean isAnnotation $F72 $F132975 ( implInterfaces ) "}, {"code": "public final boolean isExceptionHandlerEquivalent ( BasicBlock other ) { \n\tif ( exceptionHandlers != other . exceptionHandlers ) { \n\t\t$F32409 e1 = getExceptionHandlers ( ) ; \n\t\t$F32409 e2 = other . getExceptionHandlers ( ) ; \n\t\twhile $F1444 ( e1 ) { \n\t\t\tif ( ! e2 . hasMoreElements ( ) ) return _BOOL ; \n\t\t\tif ( e1 . nextElement ( ) != e2 . nextElement ( ) ) return _BOOL ; \n\t\t\t} \n\t\tif $F1444 ( e2 ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F60268 ( name ) "}, {"code": "public int checksum $F72 { \n\t$F17718 ( calculateChecksum , compile_checksum ) } \n"}, {"code": "public boolean longLabel $F72 { \n\treturn fState . longLabel ; \n\t} \n"}, {"code": "public SecretBlock ( Mario player , Group parent , int stageZone , float xPos , float yPos , float yoloWidth , Image ... hitState ) { \n\tsuper ( BLOCK_COLLISION_DATA , xPos , yPos , NUM00 , NUM00 , ( Image ) null ) ; \n\tthis . hitState = hitState [ NUM00 ] ; \n\tyoloView = new ImageView ( hitState [ NUM00 ] ) ; \n\tyoloView . setFitWidth ( yoloWidth ) ; \n\tthis . parent = parent ; \n\tzone = stageZone ; \n\t} \n"}, {"code": "private Socket openDataConnection ( String cmd ) throws sun . net . ftp . FtpProtocolException , IOException { \n\tSocket clientSocket ; \n\tif ( passiveMode ) { \n\t\ttry $F4915 ( openPassiveDataConnection , cmd ) catch ( sun . net . ftp . FtpProtocolException e ) { \n\t\t\t$F105671 ( errmsg , e ) if ( $F132005 ( errmsg ) ) { \n\t\t\t\tthrow e ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tServerSocket portSocket ; \n\tInetAddress myAddress ; \n\tString portCmd ; \n\tif ( proxy != null && proxy . type ( ) == Proxy . Type . SOCKS ) { \n\t\tthrow new sun . net . ftp . FtpProtocolException $F580 ; \n\t\t} \n\tportSocket = new ServerSocket ( NUM00 , NUM00 , server . getLocalAddress ( ) ) ; \n\ttry { \n\t\tmyAddress = portSocket . getInetAddress ( ) ; \n\t\tif ( myAddress . isAnyLocalAddress ( ) ) { \n\t\t\tmyAddress = server . getLocalAddress ( ) ; \n\t\t\t} \n\t\tportCmd = NUM00 + ( ( myAddress instanceof Inet6Address ) ? NUM00 : NUM00 ) + NUM00 + myAddress . getHostAddress ( ) + NUM00 + portSocket . getLocalPort ( ) + NUM00 ; \n\t\tif $F85011 ( issueCommand , portCmd , cmd ) { \n\t\t\tportCmd = NUM00 ; \n\t\t\t$F104513 ( addr , myAddress ) for ( $F1139 ( i , addr ) ) { \n\t\t\t\tportCmd = portCmd + ( addr [ i ] & NUM00 ) + NUM00 ; \n\t\t\t\t} \n\t\t\tportCmd = portCmd + ( ( portSocket . getLocalPort ( ) > > > NUM00 ) & NUM00 ) + NUM00 + ( portSocket . getLocalPort ( ) & NUM00 ) ; \n\t\t\tissueCommandCheck ( portCmd ) ; \n\t\t\tissueCommandCheck ( cmd ) ; \n\t\t\t} \n\t\tif ( connectTimeout >= NUM00 ) { \n\t\t\tportSocket . setSoTimeout ( connectTimeout ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( defaultConnectTimeout > NUM00 ) { \n\t\t\t\tportSocket . setSoTimeout ( defaultConnectTimeout ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tclientSocket = portSocket . accept ( ) ; \n\t\tif ( readTimeout >= NUM00 ) { \n\t\t\tclientSocket . setSoTimeout ( readTimeout ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( defaultSoTimeout > NUM00 ) { \n\t\t\t\tclientSocket . setSoTimeout ( defaultSoTimeout ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F3229 ( portSocket ) if ( useCrypto ) { \n\t\ttry { \n\t\t\tclientSocket = sslFact . createSocket ( clientSocket , serverAddr . getHostName ( ) , serverAddr . getPort ( ) , _BOOL ) ; \n\t\t\t} \n\t\tcatch ( Exception ex ) { \n\t\t\tthrow new IOException $F181782 ( ex ) ; \n\t\t\t} \n\t\t} \n\treturn clientSocket ; \n\t} \n"}, {"code": "public static boolean installNormal ( Context context , String filePath ) { \n\tIntent i = new Intent ( Intent . ACTION_VIEW ) ; \n\t$F1705 ( file , filePath ) if ( $F1905 ( file ) || $F48789 ( file ) || $F41726 ( file ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\ti . setDataAndType ( Uri . parse ( NUM00 + filePath ) , NUM00 ) ; \n\t$F111932 ( i , Intent ) context . startActivity ( i ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void createInsertList ( final IItem item , List $F202648 tempList , List $F202648 insertList , int depth , int removed ) { \n\tif $F2200 ( tempList , item ) { \n\t\ttempList . add ( item ) ; \n\t\tif ( depth == NUM00 ) $F207 ( insertList , item ) if ( item . getItems ( ) != null ) { \n\t\t\tdepth ++ ; \n\t\t\tfor ( IItem child : item . getItems ( ) ) { \n\t\t\t\tcreateInsertList ( child , tempList , insertList , depth , removed ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tinsertList . remove ( item ) ; \n\t\tremoved ++ ; \n\t\t} \n\t} \n"}, {"code": "$F1431 public int readOutlineFileMetadata ( final PdfObject OutlinesObj , final PdfObjectReader currentPdfFile ) { \n\tfinal int count = OutlinesObj . getInt ( PdfDictionary . Count ) ; \n\tfinal PdfObject FirstObj = OutlinesObj . getDictionary ( PdfDictionary . First ) ; \n\tcurrentPdfFile . checkResolved ( FirstObj ) ; \n\tif ( FirstObj != null ) { \n\t\tfinal Element root = OutlineDataXML . createElement ( NUM00 ) ; \n\t\tOutlineDataXML . appendChild ( root ) ; \n\t\tfinal int level = NUM00 ; \n\t\treadOutlineLevel ( root , currentPdfFile , FirstObj , level , _BOOL ) ; \n\t\t} \n\treturn count ; \n\t} \n"}, {"code": "private int decodeRunLength ( int k ) { \n\tif $F14827 ( k ) { \n\t\treturn $F97528 ( k ) ^ NUM00 ; \n\t\t} \n\telse { \n\t\treturn Integer . numberOfLeadingZeros ( k < < p + ( NUM00 - sp ) ) + NUM00 ; \n\t\t} \n\t} \n"}, {"code": "$F68161 ( in , length , bytes , count , pos ) "}, {"code": "private boolean decodeHandshake ( ByteBuffer socketBufferNew ) { \n\tByteBuffer socketBuffer ; \n\tif ( tmpHandshakeBytes . capacity ( ) == NUM00 ) { \n\t\tsocketBuffer = socketBufferNew ; \n\t\t} \n\telse { \n\t\tif ( tmpHandshakeBytes . remaining ( ) < socketBufferNew . remaining ( ) ) { \n\t\t\tByteBuffer buf = ByteBuffer . allocate ( tmpHandshakeBytes . capacity ( ) + socketBufferNew . remaining ( ) ) ; \n\t\t\t$F14257 ( tmpHandshakeBytes ) buf . put ( tmpHandshakeBytes ) ; \n\t\t\ttmpHandshakeBytes = buf ; \n\t\t\t} \n\t\ttmpHandshakeBytes . put ( socketBufferNew ) ; \n\t\t$F14257 ( tmpHandshakeBytes ) socketBuffer = tmpHandshakeBytes ; \n\t\t} \n\t$F115573 ( socketBuffer ) try { \n\t\tif ( draft == null ) { \n\t\t\tHandshakeState isflashedgecase = isFlashEdgeCase ( socketBuffer ) ; \n\t\t\tif ( isflashedgecase == HandshakeState . MATCHED ) { \n\t\t\t\ttry { \n\t\t\t\t\twrite ( ByteBuffer . wrap ( Charsetfunctions . utf8Bytes ( wsl . getFlashPolicy ( this ) ) ) ) ; \n\t\t\t\t\tclose ( CloseFrame . FLASHPOLICY , NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\tcatch ( InvalidDataException e ) { \n\t\t\t\t\tclose ( CloseFrame . ABNORMAL_CLOSE , NUM00 , _BOOL ) ; \n\t\t\t\t\t} \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\tHandshakeState handshakestate = null ; \n\t\ttry { \n\t\t\tif ( role == Role . SERVER ) { \n\t\t\t\tif ( draft == null ) { \n\t\t\t\t\tfor ( Draft d : knownDrafts ) { \n\t\t\t\t\t\td = d . copyInstance ( ) ; \n\t\t\t\t\t\ttry { \n\t\t\t\t\t\t\td . setParseMode ( role ) ; \n\t\t\t\t\t\t\t$F2268 ( socketBuffer ) $F317789 ( tmphandshake , d , socketBuffer ) if ( tmphandshake instanceof ClientHandshake == _BOOL ) $F317791 ( flushAndClose , CloseFrame , _BOOL ) ClientHandshake handshake = ( ClientHandshake ) tmphandshake ; \n\t\t\t\t\t\t\thandshakestate = d . acceptHandshakeAsServer ( handshake ) ; \n\t\t\t\t\t\t\tif ( handshakestate == HandshakeState . MATCHED ) { \n\t\t\t\t\t\t\t\tresourceDescriptor = handshake . getResourceDescriptor ( ) ; \n\t\t\t\t\t\t\t\tServerHandshakeBuilder response ; \n\t\t\t\t\t\t\t\ttry { \n\t\t\t\t\t\t\t\t\tresponse = wsl . onWebsocketHandshakeReceivedAsServer ( this , d , handshake ) ; \n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\tcatch ( InvalidDataException e ) { \n\t\t\t\t\t\t\t\t\tflushAndClose ( e . getCloseCode ( ) , e . getMessage ( ) , _BOOL ) ; \n\t\t\t\t\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\tcatch ( RuntimeException e ) { \n\t\t\t\t\t\t\t\t\twsl . onWebsocketError ( this , e ) ; \n\t\t\t\t\t\t\t\t\tflushAndClose ( CloseFrame . NEVER_CONNECTED , e . getMessage ( ) , _BOOL ) ; \n\t\t\t\t\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\twrite ( d . createHandshake ( d . postProcessHandshakeResponseAsServer ( handshake , response ) , role ) ) ; \n\t\t\t\t\t\t\t\tdraft = d ; \n\t\t\t\t\t\t\t\topen ( handshake ) ; \n\t\t\t\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\tcatch ( InvalidHandshakeException e ) $F845 } \n\t\t\t\t\tif ( draft == null ) { \n\t\t\t\t\t\tclose ( CloseFrame . PROTOCOL_ERROR , NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\t$F317789 ( tmphandshake , draft , socketBuffer ) if ( tmphandshake instanceof ClientHandshake == _BOOL ) $F317791 ( flushAndClose , CloseFrame , _BOOL ) ClientHandshake handshake = ( ClientHandshake ) tmphandshake ; \n\t\t\t\t\thandshakestate = draft . acceptHandshakeAsServer ( handshake ) ; \n\t\t\t\t\tif ( handshakestate == HandshakeState . MATCHED ) $F9278 ( open , handshake , _BOOL ) else { \n\t\t\t\t\t\tclose ( CloseFrame . PROTOCOL_ERROR , NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if ( role == Role . CLIENT ) { \n\t\t\t\tdraft . setParseMode ( role ) ; \n\t\t\t\t$F317789 ( tmphandshake , draft , socketBuffer ) if ( tmphandshake instanceof ServerHandshake == _BOOL ) $F317791 ( flushAndClose , CloseFrame , _BOOL ) ServerHandshake handshake = ( ServerHandshake ) tmphandshake ; \n\t\t\t\thandshakestate = draft . acceptHandshakeAsClient ( handshakerequest , handshake ) ; \n\t\t\t\tif ( handshakestate == HandshakeState . MATCHED ) { \n\t\t\t\t\ttry { \n\t\t\t\t\t\twsl . onWebsocketHandshakeReceivedAsClient ( this , handshakerequest , handshake ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\tcatch ( InvalidDataException e ) { \n\t\t\t\t\t\tflushAndClose ( e . getCloseCode ( ) , e . getMessage ( ) , _BOOL ) ; \n\t\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t\t} \n\t\t\t\t\tcatch ( RuntimeException e ) { \n\t\t\t\t\t\twsl . onWebsocketError ( this , e ) ; \n\t\t\t\t\t\tflushAndClose ( CloseFrame . NEVER_CONNECTED , e . getMessage ( ) , _BOOL ) ; \n\t\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t\t} \n\t\t\t\t\topen ( handshake ) ; \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tclose ( CloseFrame . PROTOCOL_ERROR , NUM00 + draft + NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( InvalidHandshakeException e ) { \n\t\t\tclose ( e ) ; \n\t\t\t} \n\t\t} \n\tcatch ( IncompleteHandshakeException e ) { \n\t\tif ( tmpHandshakeBytes . capacity ( ) == NUM00 ) { \n\t\t\t$F2268 ( socketBuffer ) int newsize = e . getPreferedSize ( ) ; \n\t\t\tif ( newsize == NUM00 ) { \n\t\t\t\tnewsize = socketBuffer . capacity ( ) + NUM00 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tassert ( e . getPreferedSize ( ) >= socketBuffer . remaining ( ) ) ; \n\t\t\t\t} \n\t\t\ttmpHandshakeBytes = ByteBuffer . allocate ( newsize ) ; \n\t\t\ttmpHandshakeBytes . put ( socketBufferNew ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F45866 ( tmpHandshakeBytes ) $F239000 ( tmpHandshakeBytes ) } \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public NoDuplicateValueGlobalConstraint ( AbstractParameter $F5162 ... parameters ) { \n\t$F37437 ( this , Arrays , parameters ) } \n"}, {"code": "$F1431 public RhythmOverlay inflateOverlay ( String configString ) { \n\t$F3803 configStrings = $F34166 ( Arrays , configString ) ; \n\treturn inflateOverlayInternal ( configStrings , Collections . EMPTY_MAP , NUM00 ) ; \n\t} \n"}, {"code": "public static RevocationHash bruteForceHash ( $F96 seed , $F96 target , int maxChildTries , int maxSiblingTries ) { \n\tfor ( $F119 ( i , maxChildTries ) ) { \n\t\tfor ( $F119 ( j , maxSiblingTries ) ) { \n\t\t\tRevocationHash test = HashDerivation . calculateRevocationHash ( seed , NUM00 , j ) ; \n\t\t\tif ( Arrays . equals ( test . getSecretHash ( ) , target ) ) { \n\t\t\t\treturn new RevocationHash ( i , j , test . getSecret ( ) , test . getSecretHash ( ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tseed = Tools . hashSecret ( seed ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public FancyLoader ( ClassLoader parent ) { \n\tsuper ( parent ) ; \n\ttry { \n\t\tmDexClass = parent . loadClass ( NUM00 ) ; \n\t\t} \n\tcatch ( ClassNotFoundException cnfe ) $F845 } \n"}, {"code": "public boolean isSourceModified ( Resource resource ) { \n\tboolean modified = _BOOL ; \n\t$F20605 ( fileName , resource ) $F123 ( path , templatePaths , fileName ) File currentFile = null ; \n\tfor ( int i = NUM00 ; \n\tcurrentFile == null && i < paths . size ( ) ; \n\ti ++ ) { \n\t\t$F123 ( testPath , paths , i ) $F4453 ( testFile , testPath , fileName ) if $F351048 ( testFile ) { \n\t\t\tcurrentFile = testFile ; \n\t\t\t} \n\t\t} \n\t$F4453 ( file , path , fileName ) if ( currentFile == null || $F1905 ( file ) ) $F845 else if ( currentFile . equals ( file ) && file . canRead ( ) ) { \n\t\tmodified = ( file . lastModified ( ) != resource . getLastModified ( ) ) ; \n\t\t} \n\treturn modified ; \n\t} \n"}, {"code": "protected void flip ( BufferCapabilities . FlipContents flipAction ) { \n\tif ( peer != null ) { \n\t\tImage backBuffer = getBackBuffer ( ) ; \n\t\tif ( backBuffer != null ) { \n\t\t\tpeer . flip ( NUM00 , NUM00 , backBuffer . getWidth ( null ) , backBuffer . getHeight ( null ) , flipAction ) ; \n\t\t\t} \n\t\t} \n\telse $F4639 } \n"}, {"code": "protected void loadValue ( String sValue ) { \n\ttry { \n\t\tvalue = Byte . parseByte ( sValue . trim ( ) ) ; \n\t\t} \n\tcatch ( NumberFormatException nfe ) $F5795 ( revertToDefault ) } \n"}, {"code": "public static $F2539 allNamespaces ( SOAPElement ele ) { \n\t$F2539 nsList = new $F345384 $F72 ; \n\tlog . trace ( NUM00 + ele . getNodeName ( ) ) ; \n\tallNamespaces ( ele , nsList ) ; \n\t$F49408 ( log , nsList ) return nsList ; \n\t} \n"}, {"code": "private void drawHook ( Canvas canvas ) { \n\t$F6212 ( hookPath ) double sweepAngle = Math . PI / NUM00 * NUM00 ; \n\tfloat y = $F148723 ( Math , sweepAngle ) * ( getBigCircleRadius ( ) ) + $F180726 ( rectF ) ; \n\tfloat x = $F148722 ( Math , sweepAngle ) * ( getBigCircleRadius ( ) ) + $F77595 ( rectF ) ; \n\t$F263821 ( i , getBigCircleRadius ) hookPath . addRoundRect ( new RectF ( i + i / NUM00 , i + i / NUM00 , i + i / NUM00 + NUM00 , i + i + i / NUM00 ) , NUM00 , NUM00 , Path . Direction . CCW ) ; \n\thookPath . addRoundRect ( new RectF ( i + i / NUM00 , ( i + i + i / NUM00 ) - NUM00 , i + i / NUM00 + i + i , i + i + i / NUM00 + NUM00 ) , NUM00 , NUM00 , Path . Direction . CCW ) ; \n\t$F28837 ( matrix ) $F2268 ( matrix ) int restoreCount = canvas . getSaveCount ( ) ; \n\t$F59 ( hookPath ) canvas . rotate ( - NUM00 , rectF . centerX ( ) , rectF . centerY ( ) ) ; \n\tcanvas . drawPath ( hookPath , mHookPaint ) ; \n\tcanvas . restoreToCount ( restoreCount ) ; \n\t} \n"}, {"code": "public static $F96 toByteArray ( Bitmap bitmap , Bitmap . CompressFormat format , int quality ) { \n\tByteArrayOutputStream out = null ; \n\ttry { \n\t\t$F1659 ( out ) bitmap . compress ( format , quality , out ) ; \n\t\t$F11316 ( out ) } \n\t$F19458 ( CloseableUtils , out ) } \n"}, {"code": "public void continueButtonActionPerformed $F72385 ( e ) { \n\tif ( testRunning && testSuspended ) { \n\t\ttestSuspended = _BOOL ; \n\t\tif ( wrapTest ) { \n\t\t\t$F15121 ( statusText1 ) statusText1 . setVisible ( _BOOL ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F79740 public int sceNetAdhocPtpFlush ( @ CheckArgument ( NUM00 ) int id , int timeout , int nonblock ) $F1083 "}, {"code": "public void reset $F72 $F5122 ( displayCache , cachedID ) "}, {"code": "private void copyDirectory ( File source , File dest ) throws IOException { \n\tfor ( $F3445 ( f , source ) ) { \n\t\t$F5259 ( sourceFile , source , f ) $F5259 ( destFile , dest , f ) if $F3444 ( f ) { \n\t\t\t$F1907 ( destFile ) copyDirectory ( sourceFile , destFile ) ; \n\t\t\t} \n\t\telse copyFile ( sourceFile , destFile ) ; \n\t\t} \n\t} \n"}, {"code": "private synchronized void rebuildJournal $F72 throws IOException { \n\t$F2727 ( mJournalWriter ) Writer writer = new BufferedWriter ( new FileWriter ( mJournalFileTmp ) , IO_BUFFER_SIZE ) ; \n\twriter . write ( MAGIC ) ; \n\t$F3410 ( writer ) writer . write ( VERSION_1 ) ; \n\t$F3410 ( writer ) $F3412 ( writer , Integer , mAppVersion ) $F3410 ( writer ) $F3410 ( writer ) for ( CacheEntry cacheEntry : mLruEntries . values ( ) ) { \n\t\tif ( cacheEntry . isUnderEdit ( ) ) { \n\t\t\twriter . write ( sACTION_LIST [ ACTION_DIRTY ] + NUM00 + cacheEntry . getKey ( ) + NUM00 + cacheEntry . getSize ( ) + NUM00 ) ; \n\t\t\t} \n\t\telse { \n\t\t\twriter . write ( sACTION_LIST [ ACTION_CLEAN ] + NUM00 + cacheEntry . getKey ( ) + NUM00 + cacheEntry . getSize ( ) + NUM00 ) ; \n\t\t\t} \n\t\t} \n\t$F59 ( writer ) mJournalFileTmp . renameTo ( mJournalFile ) ; \n\tmJournalWriter = new BufferedWriter ( new FileWriter ( mJournalFile , _BOOL ) , IO_BUFFER_SIZE ) ; \n\t} \n"}, {"code": "private void recordLogData $F72 { \n\ttry { \n\t\t$F115 ( size , mRecordingData ) $F32905 ( size ) $F11968 recordingData = new Vector $F200 ( mRecordingData ) ; \n\t\tFile logDir = Constants . getRecordDir ( this ) ; \n\t\t$F1907 ( logDir ) $F4453 ( logFile , logDir , mRecordingFilename ) FileWriter logFileWriter = new FileWriter ( logFile , _BOOL ) ; \n\t\tfor ( $F119 ( i , size ) ) { \n\t\t\tlogFileWriter . append ( recordingData . elementAt ( i ) + NUM00 ) ; \n\t\t\tmRecordingData . removeElementAt ( NUM00 ) ; \n\t\t\t} \n\t\t$F6050 ( recordingData ) $F59 ( logFileWriter ) } \n\tcatch ( Exception e ) { \n\t\t$F222498 ( Log , LOG_TAG , e ) } \n\t} \n"}, {"code": "private static List < Command > loadRewrites ( String str ) { \n\tassert str != null ; \n\tList < Command > $F204 ( commands ) ; \n\tfor ( $F55140 ( line , str ) ) { \n\t\taddLine ( commands , line ) ; \n\t\t} \n\treturn commands ; \n\t} \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F994 ( newVector ) $F1000 ( newVector ) $F1000 ( newVector ) $F1000 ( newVector ) $F1000 ( newVector ) $F9010 ( newVector , Collections , super ) $F1007 ( newVector ) } \n"}, {"code": "$F1 public StateConnection onCloseRead $F72 { \n\tConnectionProtocol request = request ( ) ; \n\tif ( request != null ) { \n\t\trequest . onCloseRead ( ) ; \n\t\t} \n\t_sequenceClose . set ( _sequenceRead . get ( ) ) ; \n\tif ( _sequenceFlush . get ( ) < _sequenceClose . get ( ) ) { \n\t\t_isClosePending . set ( _BOOL ) ; \n\t\tif ( _sequenceFlush . get ( ) < _sequenceClose . get ( ) ) { \n\t\t\treturn StateConnection . CLOSE_READ_S ; \n\t\t\t} \n\t\telse { \n\t\t\t_isClosePending . set ( _BOOL ) ; \n\t\t\treturn StateConnection . CLOSE ; \n\t\t\t} \n\t\t} \n\telse { \n\t\treturn StateConnection . CLOSE ; \n\t\t} \n\t} \n"}, {"code": "private Map < UUID , $F2027 > reducers ( $F33332 top , Map < UUID , Collection $F279097 > mappers , int reducerCnt ) { \n\tint totalWeight = NUM00 ; \n\tList < WeightedNode > $F719 ( nodes , top ) ; \n\tfor ( ClusterNode node : top ) { \n\t\tCollection $F279097 split = mappers . get ( node . id ( ) ) ; \n\t\tint weight = reducerNodeWeight ( node , split != null ? split . size ( ) : NUM00 ) ; \n\t\tnodes . add ( new WeightedNode ( node . id ( ) , weight , weight ) ) ; \n\t\ttotalWeight += weight ; \n\t\t} \n\tint totalAdjustedWeight = NUM00 ; \n\tfor ( WeightedNode node : nodes ) { \n\t\tnode . floatWeight = ( ( float ) node . weight * reducerCnt ) / totalWeight ; \n\t\tnode . weight = Math . round ( node . floatWeight ) ; \n\t\ttotalAdjustedWeight += node . weight ; \n\t\t} \n\tCollections . sort ( nodes ) ; \n\tif ( totalAdjustedWeight > reducerCnt ) { \n\t\tListIterator < WeightedNode > iter = nodes . listIterator ( $F2281 ( nodes ) ) ; \n\t\twhile ( totalAdjustedWeight != reducerCnt ) { \n\t\t\tif ( ! iter . hasPrevious ( ) ) iter = nodes . listIterator ( $F2281 ( nodes ) ) ; \n\t\t\tWeightedNode node = iter . previous ( ) ; \n\t\t\tif ( node . weight > NUM00 ) { \n\t\t\t\tnode . weight -= NUM00 ; \n\t\t\t\ttotalAdjustedWeight -- ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse if ( totalAdjustedWeight < reducerCnt ) { \n\t\tListIterator < WeightedNode > iter = nodes . listIterator ( NUM00 ) ; \n\t\twhile ( totalAdjustedWeight != reducerCnt ) { \n\t\t\tif $F87568 ( iter ) iter = nodes . listIterator ( NUM00 ) ; \n\t\t\tWeightedNode node = iter . next ( ) ; \n\t\t\tif ( node . floatWeight > NUM00 ) { \n\t\t\t\tnode . weight += NUM00 ; \n\t\t\t\ttotalAdjustedWeight ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tint idx = NUM00 ; \n\tMap < UUID , $F2027 > reducers = new $F4188 $F33339 ( nodes ) ; \n\tfor ( WeightedNode node : nodes ) { \n\t\tif ( node . weight > NUM00 ) { \n\t\t\t$F2027 arr = new int [ node . weight ] ; \n\t\t\tfor ( $F1139 ( i , arr ) ) arr [ i ] = idx ++ ; \n\t\t\treducers . put ( node . nodeId , arr ) ; \n\t\t\t} \n\t\t} \n\treturn reducers ; \n\t} \n"}, {"code": "public void httpRequest ( HttpRequestEvent e ) throws $F3258 { \n\tString request = e . getRequest ( ) ; \n\tif $F22503 ( Debug ) { \n\t\t$F151102 ( Debug , request ) } \n\tif $F4432 ( request ) { \n\t\t$F131348 ( request ) } \n\tint index = NUM00 ; \n\t$F49897 ( index , request ) if ( index != - NUM00 ) { \n\t\trequest = $F13885 ( request , index ) ; \n\t\t$F36253 ( Debug ) } \n\telse $F196736 ( Debug ) try { \n\t\tiServer . handleRequest ( request , e . getOutputStream ( ) ) ; \n\t\t} \n\tcatch ( IOException ioe ) $F50614 ( Debug , ioe ) catch ( MapRequestFormatException exception ) { \n\t\tString message = $F5352 ( exception ) + ErrorMessage ; \n\t\tHttpConnection . writeHttpResponse ( e . getOutputStream ( ) , HttpConnection . CONTENT_PLAIN , message ) ; \n\t\t} \n\t} \n"}, {"code": "public void testConstructorBytesNegative2 $F72 { \n\tbyte $F3009 = $F101798 ; \n\tbyte $F3018 = $F101798 ; \n\t$F9144 ( aNumber , aBytes ) $F3030 ( rBytes ) $F3031 ( resBytes , aNumber ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F7841 ( assertEquals , aNumber ) } \n"}, {"code": "public String format ( double val ) { \n\tDecimalFormat df = getDoubleFormat ( ) ; \n\tif ( df != null ) $F35907 ( df , val ) $F23209 ( Double , val ) } \n"}, {"code": "public void removePositions ( $F2306 positions ) { \n\t$F15272 $F104289 ( positionsList , positions ) ; \n\tCollections . sort ( positionsList ) ; \n\tCollections . reverse ( positionsList ) ; \n\tfor ( int position : positionsList ) $F106 ( mItems , position ) notifyDataSetChanged ( ) ; \n\t} \n"}, {"code": "private void resetShapeBounds $F72 { \n\tRoundRectangle2D . Double rrect = ( RoundRectangle2D . Double ) shape ; \n\trrect . setRoundRect ( NUM00 , NUM00 , getBounds ( ) . width - NUM00 , getBounds ( ) . height - NUM00 , NUM00 , NUM00 ) ; \n\t} \n"}, {"code": "public static Colour attemptToGetAsColour ( String part ) { \n\tColour col = null ; \n\ttry { \n\t\tcol = Colour . valueOf ( part . toUpperCase ( ) ) ; \n\t\t} \n\t$F3957 return col ; \n\t} \n"}, {"code": "public final $F79542 removeNonOptimal ( Position pos , $F79542 moveList ) { \n\t$F79542 optimalMoves = new $F79542 $F72 ; \n\t$F79542 unknownMoves = new $F79542 $F72 ; \n\tfinal int MATE0 = NUM00 ; \n\tint bestScore = - NUM00 ; \n\tUndoInfo ui = new UndoInfo $F72 ; \n\tfor ( Move m : moveList ) { \n\t\tpos . makeMove ( m , ui ) ; \n\t\tint pliesToDraw = Math . max ( NUM00 - pos . halfMoveClock , NUM00 ) ; \n\t\tGtbProbeResult res = gtbProbe ( pos ) ; \n\t\tpos . unMakeMove ( m , ui ) ; \n\t\tif ( res . result == GtbProbeResult . UNKNOWN ) $F207 ( unknownMoves , m ) else { \n\t\t\tint wScore ; \n\t\t\tif ( res . result == GtbProbeResult . WMATE ) { \n\t\t\t\tif ( res . pliesToMate <= pliesToDraw ) wScore = MATE0 - res . pliesToMate ; \n\t\t\t\telse wScore = NUM00 ; \n\t\t\t\t} \n\t\t\telse if ( res . result == GtbProbeResult . BMATE ) { \n\t\t\t\tif ( res . pliesToMate <= pliesToDraw ) wScore = - ( MATE0 - res . pliesToMate ) ; \n\t\t\t\telse wScore = - NUM00 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\twScore = NUM00 ; \n\t\t\t\t} \n\t\t\tint score = pos . whiteMove ? wScore : - wScore ; \n\t\t\tif ( score > bestScore ) { \n\t\t\t\t$F725 ( optimalMoves ) optimalMoves . add ( m ) ; \n\t\t\t\tbestScore = score ; \n\t\t\t\t} \n\t\t\telse if ( score == bestScore ) $F207 ( optimalMoves , m ) else $F845 } \n\t\t} \n\tfor ( Move m : unknownMoves ) optimalMoves . add ( m ) ; \n\treturn $F45088 ( optimalMoves , moveList ) ? optimalMoves : null ; \n\t} \n"}, {"code": "public int rank $F72 { \n\t$F29087 ( eps , Math ) double tol = Math . max ( m , n ) * s [ NUM00 ] * eps ; \n\tint r = NUM00 ; \n\tfor ( $F1139 ( i , s ) ) { \n\t\tif ( s [ i ] > tol ) { \n\t\t\tr ++ ; \n\t\t\t} \n\t\t} \n\treturn r ; \n\t} \n"}, {"code": "$F31880 ( position , offset , offsetPixels , mDecorChildCount , scrollX , getScrollX , paddingLeft , getPaddingLeft , paddingRight , getPaddingRight , width , getWidth , childCount , getChildCount , i , child , getChildAt , lp , hgrav , Gravity , childLeft , Math , childOffset , mOnPageChangeListener , mInternalPageChangeListener , mPageTransformer , transformPos , getClientWidth , mCalledSuper , _BOOL ) "}, {"code": "public static void executeRandomModifiableVariableModification ( ModifiableVariableHolder object ) { \n\tField field = object . getRandomModifiableVariableField ( ) ; \n\texecuteModifiableVariableModification ( object , field ) ; \n\t} \n"}, {"code": "public static boolean save ( File file , String content ) { \n\tboolean result ; \n\tBufferedWriter writer ; \n\twriter = null ; \n\ttry { \n\t\t$F92873 ( writer , file ) writer . write ( content ) ; \n\t\t$F1206 ( writer ) result = _BOOL ; \n\t\t} \n\t$F25008 ( e , result , _BOOL ) finally { \n\t\t$F111205 ( writer ) } \n\treturn result ; \n\t} \n"}, {"code": "private void deleteOldTemp ( File fileCfg ) { \n\tBufferedReader reader = null ; \n\ttry { \n\t\tint count = NUM00 ; \n\t\t$F438 ( reader , fileCfg ) String sLine ; \n\t\twhile $F443 ( sLine , reader ) { \n\t\t\t$F1705 ( file , sLine ) if $F1906 ( file ) $F1448 if $F220007 ( file ) { \n\t\t\t\tcount ++ ; \n\t\t\t\t} \n\t\t\telse $F207 ( hsDeleteOnExit , file ) } \n\t\tlogDebug ( LogArea . CONFIG , NUM00 , count , fileCfg . getAbsolutePath ( ) ) ; \n\t\t} \n\t$F29052 $F34262 ( reader ) } \n"}, {"code": "public void proposeTree $F72 throws OperatorFailedException { \n\tNodeRef i ; \n\tdouble oldMinAge , newMinAge , newRange , oldRange , newAge , q ; \n\tfinal int nodeCount = tree . getNodeCount ( ) ; \n\tdo { \n\t\ti = tree . getNode ( MathUtils . nextInt ( nodeCount ) ) ; \n\t\t} \n\twhile ( tree . getRoot ( ) == i ) ; \n\tfinal NodeRef iP = tree . getParent ( i ) ; \n\tNodeRef j = tree . getNode ( MathUtils . nextInt ( nodeCount ) ) ; \n\t$F59939 ( k , tree , j ) while ( ( k != null && tree . getNodeHeight ( k ) <= tree . getNodeHeight ( i ) ) || ( i == j ) ) { \n\t\tj = tree . getNode ( MathUtils . nextInt ( nodeCount ) ) ; \n\t\tk = tree . getParent ( j ) ; \n\t\t} \n\tif ( j == tree . getRoot ( ) || iP == tree . getRoot ( ) ) $F62102 if ( k == iP || j == iP || k == i ) throw new OperatorFailedException $F580 ; \n\tfinal NodeRef CiP = getOtherChild ( tree , iP , i ) ; \n\t$F59939 ( PiP , tree , iP ) newMinAge = Math . max ( tree . getNodeHeight ( i ) , tree . getNodeHeight ( j ) ) ; \n\tnewRange = tree . getNodeHeight ( k ) - newMinAge ; \n\tnewAge = newMinAge + ( MathUtils . nextDouble ( ) * newRange ) ; \n\toldMinAge = Math . max ( tree . getNodeHeight ( i ) , tree . getNodeHeight ( CiP ) ) ; \n\toldRange = tree . getNodeHeight ( PiP ) - oldMinAge ; \n\tq = newRange / Math . abs ( oldRange ) ; \n\ttree . beginTreeEdit ( ) ; \n\tif ( j == tree . getRoot ( ) ) { \n\t\ttree . removeChild ( iP , CiP ) ; \n\t\ttree . removeChild ( PiP , iP ) ; \n\t\ttree . addChild ( iP , j ) ; \n\t\ttree . addChild ( PiP , CiP ) ; \n\t\ttree . setRoot ( iP ) ; \n\t\t} \n\telse if ( iP == tree . getRoot ( ) ) { \n\t\ttree . removeChild ( k , j ) ; \n\t\ttree . removeChild ( iP , CiP ) ; \n\t\ttree . addChild ( iP , j ) ; \n\t\ttree . addChild ( k , iP ) ; \n\t\ttree . setRoot ( CiP ) ; \n\t\t} \n\telse { \n\t\ttree . removeChild ( k , j ) ; \n\t\ttree . removeChild ( iP , CiP ) ; \n\t\ttree . removeChild ( PiP , iP ) ; \n\t\ttree . addChild ( iP , j ) ; \n\t\ttree . addChild ( k , iP ) ; \n\t\ttree . addChild ( PiP , CiP ) ; \n\t\t} \n\ttree . setNodeHeight ( iP , newAge ) ; \n\ttree . endTreeEdit ( ) ; \n\tlogq = Math . log ( q ) ; \n\t} \n"}, {"code": "public void flush $F72 { \n\tfinal BigdataSailRepositoryConnection cxn = tlTx . get ( ) ; \n\tif ( cxn != null ) { \n\t\tCode . wrapThrow ( null ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public BufferedImage JPEGToRGBImage ( final $F96 data , final int ww , final int hh , final int pX , final int pY ) { \n\tBufferedImage image = null ; \n\tRaster ras = JPEGDecoder . getRasterFromJPEG ( data , NUM00 ) ; \n\tif ( ras != null ) { \n\t\tras = cleanupRaster ( ras , pX , pY , componentCount ) ; \n\t\t$F43592 ( w , ras ) $F43590 ( h , ras ) final DataBufferByte rgb = ( DataBufferByte ) ras . getDataBuffer ( ) ; \n\t\timage = createImage ( w , h , rgb . getData ( ) ) ; \n\t\t} \n\treturn image ; \n\t} \n"}, {"code": "public void despawn ( VisibleObject object ) { \n\tdespawn ( object , _BOOL ) ; \n\t} \n"}, {"code": "public String eventTopic ( String eventId ) { \n\t$F23170 ( eventId ) return evtTopic . replace ( NUM00 , eventId ) ; \n\t} \n"}, {"code": "public MatchResult match $F72 { \n\t$F56572 ( matchSuccessful ) return matcher . toMatchResult ( ) ; \n\t} \n"}, {"code": "$F1431 public static void createProjectConstraint ( ZipFile zip , Project aProject , RepositoryService aRepository ) throws IOException { \n\tfor ( Enumeration zipEnumerate = zip . entries ( ) ; \n\tzipEnumerate . hasMoreElements ( ) ; \n\t) { \n\t\tZipEntry entry = ( ZipEntry ) zipEnumerate . nextElement ( ) ; \n\t\tString entryName = normalizeEntryName ( entry ) ; \n\t\tif $F7311 ( entryName , CONSTRAINTS ) { \n\t\t\tString filename = FilenameUtils . getName ( entry . getName ( ) ) ; \n\t\t\tConstraintSet constraintSet = new ConstraintSet $F72 ; \n\t\t\tconstraintSet . setProject ( aProject ) ; \n\t\t\tconstraintSet . setName ( filename ) ; \n\t\t\taRepository . createConstraintSet ( constraintSet ) ; \n\t\t\taRepository . writeConstraintSet ( constraintSet , zip . getInputStream ( entry ) ) ; \n\t\t\tLOG . info ( $F106503 ( filename , aProject ) + aProject . getId ( ) + NUM00 ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "static synchronized void computePRF_SSLv3 $F55962 ( out , secret , seed ) { \n\t$F113304 ( sha , init ) int pos = NUM00 ; \n\tint iteration = NUM00 ; \n\t$F96 digest ; \n\twhile ( pos < out . length ) { \n\t\t$F2175 ( pref , iteration ) Arrays . fill ( pref , ( byte ) ( NUM00 + iteration ++ ) ) ; \n\t\tsha . update ( pref ) ; \n\t\tsha . update ( secret ) ; \n\t\tsha . update ( seed ) ; \n\t\tmd5 . update ( secret ) ; \n\t\tmd5 . update ( sha . digest ( ) ) ; \n\t\t$F54171 ( digest , md5 ) if ( pos + NUM00 > out . length ) { \n\t\t\tSystem . arraycopy ( digest , NUM00 , out , pos , out . length - pos ) ; \n\t\t\tpos = out . length ; \n\t\t\t} \n\t\telse { \n\t\t\t$F66840 ( System , digest , out , pos ) pos += NUM00 ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public String decode ( String pString ) throws DecoderException { \n\t$F1338 ( pString ) try $F23983 ( decode , pString , getDefaultCharset ) catch ( UnsupportedEncodingException e ) { \n\t\tthrow new DecoderException $F1783 ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public Operation copyTo ( Extent target ) { \n\tBlockTransformExtent extent = new BlockTransformExtent ( original , transform , worldData . getBlockRegistry ( ) ) ; \n\tForwardExtentCopy copy = new ForwardExtentCopy ( extent , original . getRegion ( ) , original . getOrigin ( ) , target , original . getOrigin ( ) ) ; \n\tcopy . setTransform ( transform ) ; \n\treturn copy ; \n\t} \n"}, {"code": "@ CallerSensitive public $F6969 forClass $F72 { \n\t$F1338 ( cl ) requireInitialized ( ) ; \n\tif ( System . getSecurityManager ( ) != null ) { \n\t\t$F6969 caller = Reflection . getCallerClass ( ) ; \n\t\tif ( ReflectUtil . needsPackageAccessCheck ( caller . getClassLoader ( ) , cl . getClassLoader ( ) ) ) { \n\t\t\tReflectUtil . checkPackageAccess ( cl ) ; \n\t\t\t} \n\t\t} \n\treturn cl ; \n\t} \n"}, {"code": "private void pathStyleHelper ( String style , String offset ) { \n\t$F2329 ( style ) if $F3057 ( style ) { \n\t\tstrokePaint . setPathEffect ( null ) ; \n\t\t$F665 } \n\t$F17727 ( st , style ) $F17729 ( count , st ) $F5415 intervals = new float [ ( count & NUM00 ) == NUM00 ? count * NUM00 : count ] ; \n\tfloat max = NUM00 ; \n\tfloat current = NUM00 ; \n\tint i = NUM00 ; \n\twhile $F14498 ( st ) { \n\t\tintervals [ i ++ ] = current = toFloat ( st . nextToken ( ) , current ) ; \n\t\tmax += current ; \n\t\t} \n\tfor ( int start = NUM00 ; \n\ti < intervals . length ; \n\ti ++ , start ++ ) { \n\t\tmax += intervals [ i ] = intervals [ start ] ; \n\t\t} \n\tfloat off = NUM00 ; \n\tif ( offset != null ) { \n\t\ttry { \n\t\t\toff = Float . parseFloat ( offset ) % max ; \n\t\t\t} \n\t\t$F32668 } \n\tstrokePaint . setPathEffect ( new DashPathEffect ( intervals , off ) ) ; \n\t} \n"}, {"code": "private float colorToAngle ( int color ) { \n\t$F12457 ( colors ) Color . colorToHSV ( color , colors ) ; \n\treturn ( float ) Math . toRadians ( - colors [ NUM00 ] ) ; \n\t} \n"}, {"code": "private Size parseOldBoundedSize ( String token , boolean setMax ) { \n\t$F1384 ( semicolonIndex , token ) $F11991 ( sizeToken1 , token , semicolonIndex ) String sizeToken2 = token . substring ( semicolonIndex + NUM00 , $F1092 ( token ) ) ; \n\tSize size1 = parseAtomicSize ( sizeToken1 ) ; \n\tSize size2 = parseAtomicSize ( sizeToken2 ) ; \n\tif ( isConstant ( size1 ) ) { \n\t\tif ( size2 instanceof Sizes . ComponentSize ) { \n\t\t\treturn new BoundedSize ( size2 , setMax ? null : size1 , setMax ? size1 : null ) ; \n\t\t\t} \n\t\t$F824 } \n\tif ( isConstant ( size2 ) ) { \n\t\treturn new BoundedSize ( size1 , setMax ? null : size2 , setMax ? size2 : null ) ; \n\t\t} \n\t$F824 } \n"}, {"code": "Builder addEncodedQueryParameter ( String encodedName , String encodedValue ) { \n\t$F19273 ( encodedName ) $F21432 ( encodedQueryNamesAndValues ) encodedQueryNamesAndValues . add ( canonicalize ( encodedName , QUERY_COMPONENT_ENCODE_SET , _BOOL , _BOOL ) ) ; \n\tencodedQueryNamesAndValues . add ( encodedValue != null ? canonicalize ( encodedValue , QUERY_COMPONENT_ENCODE_SET , _BOOL , _BOOL ) : null ) ; \n\treturn this ; \n\t} \n"}, {"code": "private static a createImageLink ( String AD_Language , String name , String js_command , boolean enabled , boolean pressed ) { \n\ta img = new a ( NUM00 , createImage ( AD_Language , name ) ) ; \n\tif ( ! pressed || ! enabled ) $F243713 ( img ) else $F243713 ( img ) $F12553 ( js_command ) if ( $F20 ( js_command ) && enabled ) { \n\t\tif $F3106 ( js_command ) img . setOnClick ( js_command ) ; \n\t\telse img . setOnClick ( NUM00 + name + NUM00 + js_command + NUM00 ) ; \n\t\t} \n\timg . setClass ( NUM00 ) ; \n\timg . setOnMouseOver ( NUM00 + name + NUM00 ) ; \n\timg . setOnMouseOut ( NUM00 ) ; \n\timg . setOnBlur ( NUM00 ) ; \n\treturn img ; \n\t} \n"}, {"code": "public Namespace ( PrincipalUser creator , String qualifier , PrincipalUser owner , Set < PrincipalUser > users ) { \n\tsuper ( creator ) ; \n\tsetQualifier ( qualifier ) ; \n\tsetOwner ( owner ) ; \n\tif $F1032 ( users ) { \n\t\tsetUsers ( users ) ; \n\t\t} \n\taddUser ( owner ) ; \n\t} \n"}, {"code": "public final int decrementAndGet $F72 { \n\treturn unsafe . getAndAddInt ( this , valueOffset , - NUM00 ) - NUM00 ; \n\t} \n"}, {"code": "public void update ( long dt , float ratioY ) { \n\tdouble step = NUM00 * Math . PI / POINTS_PER_CIRCLE ; \n\tangle += dt * BUBBLE_D_ANGLE ; \n\tfloat fromX = startX + ( float ) ( NUM00 * Math . sin ( angle ) ) ; \n\tfloat toX = fromX + size ; \n\tfloat fromY = this . fromY + dt * speed ; \n\tfloat toY = fromY + size ; \n\tcenterY += dt * virtualSpeed ; \n\tgetColor ( ) [ NUM00 ] = ( TOP_Y - centerY / TOP_Y ) ; \n\tvertexBuffer . put ( NUM00 , Utils . normalizeGl ( NUM00 , fromX , toX ) ) ; \n\tvertexBuffer . put ( NUM00 , Utils . normalizeGl ( centerY * ratioY , fromY , toY ) ) ; \n\tfor ( $F9993 ( i , POINTS_PER_CIRCLE ) ) { \n\t\tvertexBuffer . put ( COORDS_PER_VERTEX * i , Utils . normalizeGl ( ( float ) Math . sin ( - Math . PI + step * i ) , fromX , toX ) ) ; \n\t\tvertexBuffer . put ( COORDS_PER_VERTEX * i + NUM00 , Utils . normalizeGl ( ( float ) Math . cos ( - Math . PI + step * i ) * ratioY , fromY , toY ) ) ; \n\t\t} \n\tthis . fromY = fromY ; \n\t} \n"}, {"code": "public final void clear $F72 { \n\tif ( GWT . isScript ( ) ) $F9096 ( jsArray ) else $F9096 ( javaArray ) } \n"}, {"code": "$F30954 ( putLock , takeLock ) "}, {"code": "$F1 public synchronized void clear $F72 { \n\t$F5459 ( files , mRootDirectory ) if ( files != null ) { \n\t\tfor ( File file : files ) $F19636 ( file ) } \n\t$F725 ( mEntries ) VolleyLog . d ( NUM00 ) ; \n\t} \n"}, {"code": "private void updatePodcastPublicationDateAndLastMediaUrl ( Episode episode , Podcast podcast ) { \n\tDate podcastPublicationDate = podcast . getPublicationDate ( ) ; \n\tboolean episodePubDateIsMoreRecent = episode . getPublicationDate ( ) != null && ( podcastPublicationDate == null || podcastPublicationDate . before ( episode . getPublicationDate ( ) ) ) ; \n\tif ( episodePubDateIsMoreRecent ) { \n\t\tpodcast . setPublicationDate ( episode . getPublicationDate ( ) ) ; \n\t\tpodcast . setLastEpisodeMediaUrl ( episode . getMediaUrl ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "private void removeOurUIs $F72 { \n\tfor ( String uiName : UI_LIST ) { \n\t\tuiDefaults . remove ( uiName + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public void makeImmutable $F72 $F845 "}, {"code": "public static $F65331 $F95002 precomputedKNNQuery ( Database database , $F65332 relation , DistanceQuery $F65331 dq , int k ) { \n\t$F95002 knnq = database . getKNNQuery ( dq , k , DatabaseQuery . HINT_HEAVY_USE , DatabaseQuery . HINT_OPTIMIZED_ONLY , DatabaseQuery . HINT_NO_CACHE ) ; \n\tif ( knnq instanceof PreprocessorKNNQuery ) { \n\t\treturn knnq ; \n\t\t} \n\tMaterializeKNNPreprocessor $F65331 preproc = new MaterializeKNNPreprocessor $F200 ( relation , dq . getDistanceFunction ( ) , k ) ; \n\t$F21883 ( preproc ) return preproc . getKNNQuery ( dq , k ) ; \n\t} \n"}, {"code": "public static SortedSet $F2305 adjustPosition ( $F11868 positions , int startPosition , int endPosition , int adjustBy ) { \n\tSortedSet $F2305 $F32033 ( newPositions ) ; \n\tfor ( Integer entry : positions ) { \n\t\tint position = entry ; \n\t\tif ( position < startPosition || position > endPosition ) $F207 ( newPositions , position ) else if ( adjustBy > NUM00 ) $F128607 ( newPositions , position , adjustBy ) else if ( adjustBy < NUM00 ) { \n\t\t\tif ( position > startPosition + adjustBy && position <= startPosition ) $F12542 else $F128607 ( newPositions , position , adjustBy ) } \n\t\t} \n\treturn newPositions ; \n\t} \n"}, {"code": "private static void addId ( final StringBuilder buf , final $F96 id ) { \n\t$F84 ( buf ) boolean backslash = _BOOL ; \n\tfor ( final byte b : id ) { \n\t\t$F27725 ( buf , b ) if ( b == NUM00 && backslash ) $F86 ( buf ) else { \n\t\t\tbackslash = b == NUM00 ; \n\t\t\t} \n\t\t} \n\t$F84 ( buf ) } \n"}, {"code": "private ResolvedMigration createAvailableMigration ( int version ) { \n\tResolvedMigration migration = new ResolvedMigration $F72 ; \n\tmigration . setVersion ( MigrationVersion . fromVersion ( Integer . toString ( version ) ) ) ; \n\t$F271284 ( migration ) migration . setScript ( NUM00 ) ; \n\tmigration . setType ( MigrationType . CQL ) ; \n\treturn migration ; \n\t} \n"}, {"code": "public void comment ( String data ) throws SAXException { \n\tm_docIsEmpty = _BOOL ; \n\t$F11550 ( length , data ) $F180083 ( length , m_charsBuff ) $F16116 ( data , length , m_charsBuff ) comment ( m_charsBuff , NUM00 , length ) ; \n\t} \n"}, {"code": "public boolean drawImage ( Image img , AffineTransform xform , ImageObserver observer ) { \n\t$F1933 ( img , _BOOL ) if ( xform == null || xform . isIdentity ( ) ) { \n\t\treturn drawImage ( img , NUM00 , NUM00 , null , observer ) ; \n\t\t} \n\tif ( isHiDPIImage ( img ) ) { \n\t\tfinal int w = img . getWidth ( null ) ; \n\t\tfinal int h = img . getHeight ( null ) ; \n\t\tfinal AffineTransform tx = new AffineTransform ( transform ) ; \n\t\ttransform ( xform ) ; \n\t\tboolean result = drawHiDPIImage ( img , NUM00 , NUM00 , w , h , NUM00 , NUM00 , w , h , null , observer ) ; \n\t\ttransform . setTransform ( tx ) ; \n\t\tinvalidateTransform ( ) ; \n\t\treturn result ; \n\t\t} \n\ttry { \n\t\treturn imagepipe . transformImage ( this , img , xform , observer ) ; \n\t\t} \n\tcatch ( InvalidPipeException e ) { \n\t\ttry { \n\t\t\trevalidateAll ( ) ; \n\t\t\treturn imagepipe . transformImage ( this , img , xform , observer ) ; \n\t\t\t} \n\t\tcatch ( InvalidPipeException e2 ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\t$F30852 ( surfaceData ) } \n"}, {"code": "public void beginDisplay ( DisplayEvent event ) throws ModelControlException { \n\tsuper . beginDisplay ( event , _BOOL ) ; \n\tresetButtonState ( TBL_BUTTON_DELETE ) ; \n\tAgentsModel model = ( AgentsModel ) getModel ( ) ; \n\tString agentType = getDisplayIDType ( ) ; \n\t$F22031 ( param , agentType ) ptModel . setPageTitleText ( model . getLocalizedString ( NUM00 + agentType ) ) ; \n\tptModel . setPageTitleHelpMessage ( model . getLocalizedString ( NUM00 + agentType + NUM00 ) ) ; \n\ttblModel . setTitle ( MessageFormat . format ( model . getLocalizedString ( NUM00 ) , param ) ) ; \n\ttblModel . setTitleLabel ( MessageFormat . format ( model . getLocalizedString ( NUM00 ) , param ) ) ; \n\ttblModel . setSummary ( MessageFormat . format ( model . getLocalizedString ( NUM00 ) , param ) ) ; \n\ttblGroupModel . setTitle ( MessageFormat . format ( model . getLocalizedString ( NUM00 ) , param ) ) ; \n\ttblGroupModel . setTitleLabel ( MessageFormat . format ( model . getLocalizedString ( NUM00 ) , param ) ) ; \n\ttblGroupModel . setSummary ( MessageFormat . format ( model . getLocalizedString ( NUM00 ) , param ) ) ; \n\tgetAgentNames ( ) ; \n\tCCButton b = ( CCButton ) getChild ( TBL_BUTTON_DELETE ) ; \n\tb . setDisabled ( _BOOL ) ; \n\tb = ( CCButton ) getChild ( TBL_BUTTON_DELETE_GROUP ) ; \n\tb . setDisabled ( _BOOL ) ; \n\t} \n"}, {"code": "public void select_all $F72 { \n\tArrays . fill ( sel_array , _BOOL ) ; \n\t} \n"}, {"code": "public NvpBuilder addRaw $F2236 ( name , value ) $F67896 ( npv , name , value , this ) "}, {"code": "$F1 public int length $F72 $F1652 ( set ) "}, {"code": "public final long readUnsignedInt $F72 throws IOException { \n\tmPosition += NUM00 ; \n\t$F52634 ( d , w ) return ( ( long ) ( w [ NUM00 ] ) < < NUM00 | $F169749 ( w ) | $F169749 ( w ) | $F18896 ( w ) ) & NUM00 ; \n\t} \n"}, {"code": "public List < CountryRO > viewAddressCountryOptions ( final ShoppingCart cart , final Shop shop , final String addressType ) { \n\tfinal List < Country > countries = addressBookFacade . getAllCountries ( shop . getCode ( ) , addressType ) ; \n\treturn map ( countries , CountryRO . class , Country . class ) ; \n\t} \n"}, {"code": "public void addPauseListener ( AnimatorPauseListener listener ) { \n\tif ( mPauseListeners == null ) { \n\t\tmPauseListeners = new ArrayList < AnimatorPauseListener > $F72 ; \n\t\t} \n\tmPauseListeners . add ( listener ) ; \n\t} \n"}, {"code": "$F1 public void makeImmutable $F72 { \n\tif ( mutable ) { \n\t\tif ( attrs != null ) { \n\t\t\t$F10531 ( iter , attrs ) while $F2921 ( iter ) { \n\t\t\t\tAttribute attr = ( Attribute ) iter . next ( ) ; \n\t\t\t\t$F118294 ( attr ) } \n\t\t\t$F5939 ( attrs , Collections ) } \n\t\t$F5941 ( encAttrs , Collections ) mutable = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "$F1 public boolean batchFinished $F72 throws Exception { \n\t$F161885 ( getInputFormat ) Instances toFilter = getInputFormat ( ) ; \n\tif $F931 ( isFirstBatchDone ) { \n\t\tInstances toFilterIgnoringAttributes = removeIgnored ( toFilter ) ; \n\t\tFile file = getSerializedClustererFile ( ) ; \n\t\tif $F4926 ( file ) { \n\t\t\tObjectInputStream ois = new ObjectInputStream $F18079 ( file ) ; \n\t\t\tm_ActualClusterer = ( Clusterer ) ois . readObject ( ) ; \n\t\t\tInstances header = null ; \n\t\t\ttry { \n\t\t\t\theader = ( Instances ) ois . readObject ( ) ; \n\t\t\t\t} \n\t\t\t$F3957 $F59 ( ois ) if ( ( header != null ) && ( ! header . equalHeaders ( toFilterIgnoringAttributes ) ) ) { \n\t\t\t\tthrow new WekaException ( NUM00 + header . equalHeadersMsg ( toFilterIgnoringAttributes ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tm_ActualClusterer = AbstractClusterer . makeCopy ( m_Clusterer ) ; \n\t\t\tm_ActualClusterer . buildClusterer ( toFilterIgnoringAttributes ) ; \n\t\t\t} \n\t\tInstances $F66793 ( filtered , toFilter ) ; \n\t\t$F5 nominal_values = new $F5 ( m_ActualClusterer . numberOfClusters ( ) ) ; \n\t\tfor ( int i = NUM00 ; \n\t\ti < m_ActualClusterer . numberOfClusters ( ) ; \n\t\ti ++ ) { \n\t\t\tnominal_values . add ( NUM00 + ( i + NUM00 ) ) ; \n\t\t\t} \n\t\tfiltered . insertAttributeAt ( $F66780 ( nominal_values ) , filtered . numAttributes ( ) ) ; \n\t\tsetOutputFormat ( filtered ) ; \n\t\t} \n\tfor ( $F208679 ( i , toFilter ) ) { \n\t\tconvertInstance ( toFilter . instance ( i ) ) ; \n\t\t} \n\tflushInput ( ) ; \n\tm_NewBatch = _BOOL ; \n\tm_FirstBatchDone = _BOOL ; \n\treturn ( numPendingOutput ( ) != NUM00 ) ; \n\t} \n"}, {"code": "public void addComponent ( T component ) $F207 ( components , component ) "}, {"code": "public static UiResult openUrl ( URI uri ) { \n\t$F17718 ( openUrl , uri ) } \n"}, {"code": "public final void invalidateLine ( int line ) { \n\trepaint ( NUM00 , textArea . lineToY ( line ) + fm . getMaxDescent ( ) + fm . getLeading ( ) , getWidth ( ) , fm . getHeight ( ) ) ; \n\t} \n"}, {"code": "public ByteBandedRaster ( SampleModel sampleModel , Point origin ) $F265387 ( this , sampleModel , origin ) "}, {"code": "private void initialize ( URI p_other ) { \n\tm_scheme = p_other . getScheme ( ) ; \n\tm_userinfo = p_other . getUserinfo ( ) ; \n\tm_host = p_other . getHost ( ) ; \n\tm_port = p_other . getPort ( ) ; \n\tm_path = p_other . getPath ( ) ; \n\tm_queryString = p_other . getQueryString ( ) ; \n\tm_fragment = p_other . getFragment ( ) ; \n\t} \n"}, {"code": "public void playTogether ( Collection $F113170 items ) { \n\tif $F8841 ( items ) { \n\t\tmNeedsSort = _BOOL ; \n\t\tBuilder builder = null ; \n\t\tfor ( Animator anim : items ) { \n\t\t\tif ( builder == null ) { \n\t\t\t\tbuilder = play ( anim ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tbuilder . with ( anim ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F21351 ( l , last , p , item , first , count , notFull ) "}, {"code": "static boolean isRefreshNotificationRegistered ( NotificationListener client , RefreshNotificationType type ) { \n\tboolean isRegistered = _BOOL ; \n\tMap < RefreshNotificationType , Integer > notifications = null ; \n\tsynchronized ( refreshClients ) { \n\t\tnotifications = ( Map < RefreshNotificationType , Integer > ) refreshClients . get ( client ) ; \n\t\t} \n\tif ( notifications != null ) { \n\t\t$F99426 ( timerNotificationId , notifications , type ) if ( timerNotificationId != null ) { \n\t\t\tisRegistered = _BOOL ; \n\t\t\t} \n\t\t} \n\treturn isRegistered ; \n\t} \n"}, {"code": "private $F6877 readProcessOutput ( Process proc ) throws IOException { \n\t$F114263 ( rdr , proc ) ; \n\t$F6877 $F204 ( res ) ; \n\tString s ; \n\twhile $F443 ( s , rdr ) res . add ( s ) ; \n\treturn res ; \n\t} \n"}, {"code": "public void fillHeaderAndFooter ( final HttpServletRequest request , final HttpServletResponse response , $F87266 ( dataModel ) ) throws Exception { \n\tfillHeader ( request , response , dataModel ) ; \n\tfillFooter ( dataModel ) ; \n\t} \n"}, {"code": "public void addOperand ( ISpacePredicate operand ) { \n\tif ( _operandsList == null ) _operandsList = new ArrayList < ISpacePredicate > $F72 ; \n\t_operandsList . add ( operand ) ; \n\t} \n"}, {"code": "public static String decode ( String s , Type t ) { \n\t$F99586 ( s ) $F22998 ( n , s ) $F6482 ( n , s ) if $F1731 ( s ) { \n\t\tif ( t == Type . QUERY_PARAM ) { \n\t\t\tif $F1731 ( s ) { \n\t\t\t\treturn s ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\treturn s ; \n\t\t\t} \n\t\t} \n\telse { \n\t\t$F6853 ( n ) if $F198486 ( s , n ) { \n\t\t\tthrow new IllegalArgumentException ( NUM00 + ( n - NUM00 ) ) ; \n\t\t\t} \n\t\t} \n\tif ( t == null ) $F8587 ( decode , s , n ) switch ( t ) { \n\t\tcase HOST : return decodeHost ( s , n ) ; \n\t\tcase QUERY_PARAM : return decodeQueryParam ( s , n ) ; \n\t\t$F1267 return decode ( s , n ) ; \n\t\t} \n\t} \n"}, {"code": "public BigDecimal calculateTotalCollectedAmt ( final BillReceiptInfo bri , final List < EgBillDetails > billDetList ) throws InvalidAccountHeadException { \n\treturn bri . getTotalAmount ( ) ; \n\t} \n"}, {"code": "public void skip ( int count ) throws IOException { \n\t$F55158 ( skipCount , Math , limit , position , count ) while ( _BOOL ) { \n\t\tposition += skipCount ; \n\t\tcount -= skipCount ; \n\t\tif ( count == NUM00 ) $F597 skipCount = Math . min ( count , capacity ) ; \n\t\trequire ( skipCount ) ; \n\t\t} \n\t} \n"}, {"code": "public void test_concurrent_modification_insert $F72 { \n\tfinal BTree btree ; \n\t{ \n\t\t$F87561 ( md , UUID ) md . setBranchingFactor ( NUM00 ) ; \n\t\tbtree = BTree . create ( $F137694 , md ) ; \n\t\t$F2864 ( btree ) $F2864 ( btree ) $F2864 ( btree ) } \n\t{ \n\t\tITupleCursor2 $F4 cursor = newCursor ( btree ) ; \n\t\tassertEquals ( $F355344 , cursor . seek ( NUM00 ) ) ; \n\t\t$F355356 ( assertEquals , cursor ) $F2864 ( btree ) $F355350 ( assertEquals , TestKeyBuilder , cursor ) $F355356 ( assertEquals , cursor ) assertEquals ( $F355344 , cursor . prior ( ) ) ; \n\t\t$F355356 ( assertEquals , cursor ) $F86372 ( btree ) assertEquals ( null , cursor . tuple ( ) ) ; \n\t\t$F355350 ( assertEquals , TestKeyBuilder , cursor ) assertEquals ( $F355344 , cursor . next ( ) ) ; \n\t\t$F86372 ( btree ) assertEquals ( null , cursor . tuple ( ) ) ; \n\t\t$F355350 ( assertEquals , TestKeyBuilder , cursor ) $F2864 ( btree ) $F355350 ( assertEquals , TestKeyBuilder , cursor ) assertEquals ( null , cursor . tuple ( ) ) ; \n\t\tassertEquals ( $F355344 , cursor . next ( ) ) ; \n\t\t$F355356 ( assertEquals , cursor ) } \n\t} \n"}, {"code": "public void removeAllIms $F72 $F9096 ( ims ) "}, {"code": "static String escapeStringForASCII ( String s ) { \n\tString out = NUM00 ; \n\t$F7782 ( cArray , s ) for ( $F1139 ( i , cArray ) ) { \n\t\tchar c = cArray [ i ] ; \n\t\tif ( c > NUM00 ) { \n\t\t\tout += NUM00 ; \n\t\t\t$F21991 ( hex , Integer , c ) while $F3599 ( hex ) hex = NUM00 + hex ; \n\t\t\tout += hex ; \n\t\t\t} \n\t\telse if ( c == NUM00 ) { \n\t\t\tout += NUM00 ; \n\t\t\t} \n\t\telse if ( c == NUM00 ) { \n\t\t\tout += NUM00 ; \n\t\t\t} \n\t\telse if ( c == NUM00 ) { \n\t\t\tout += NUM00 ; \n\t\t\t} \n\t\telse if ( c == NUM00 ) { \n\t\t\tout += NUM00 ; \n\t\t\t} \n\t\telse if ( c == NUM00 ) { \n\t\t\tout += NUM00 ; \n\t\t\t} \n\t\telse if ( c == NUM00 ) { \n\t\t\tout += NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tout += c ; \n\t\t\t} \n\t\t} \n\treturn out ; \n\t} \n"}, {"code": "public void copyReader ( String encoding , Reader r ) throws IOException { \n\tsuper . setContentEncoding ( encoding ) ; \n\tString s = readString ( r ) ; \n\tcontent = s . getBytes ( encoding ) ; \n\t} \n"}, {"code": "private void clearDictionaryCache $F72 { \n\tMap < String , Dictionary > dictionaryCaches = surrogateKeyGen . getDictionaryCaches ( ) ; \n\tList < Dictionary > $F159472 ( reverseDictionaries , dictionaryCaches ) ; \n\tfor ( $F2277 ( i , reverseDictionaries ) ) { \n\t\tDictionary dictionary = reverseDictionaries . get ( i ) ; \n\t\t$F725 ( dictionary ) } \n\t} \n"}, {"code": "public static String toTypeString $F82140 ( arguments , maxSize ) { \n\t$F4158 ( arguments ) $F83 ( argBuf ) for ( $F1139 ( i , arguments ) ) { \n\t\tif ( maxSize != - NUM00 && argBuf . length ( ) > maxSize ) $F257374 ( argBuf ) else { \n\t\t\t$F34674 ( i , argBuf ) argBuf . append ( arguments [ i ] != null ? typeName ( arguments [ i ] ) : NUM00 ) ; \n\t\t\t} \n\t\t} \n\t$F92 ( argBuf ) } \n"}, {"code": "public boolean renameFile ( File oldFile , File newFile ) { \n\tsynchronized ( fileCache ) { \n\t\tif ( oldFile . renameTo ( newFile ) ) $F27427 ( validateFileCache , _BOOL ) return _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public $F44535 execute ( CameraCommand command ) { \n\tif ( mClosed ) { \n\t\treturn Futures . immediateFuture ( null ) ; \n\t\t} \n\tsynchronized ( mLock ) { \n\t\tif ( mExecutor == null ) $F16479 ( mExecutor , mExecutorProvider ) checkNotNull ( mExecutor ) ; \n\t\treturn mExecutor . submit ( new CommandRunnable ( command ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static EnumSet < KindName > kindNames ( int kind ) { \n\tEnumSet < KindName > kinds = EnumSet . noneOf ( KindName . class ) ; \n\tif $F18594 ( kind , VAL ) kinds . add ( ( ( kind & VAL ) == VAR ) ? KindName . VAR : KindName . VAL ) ; \n\tif $F18594 ( kind , MTH ) kinds . add ( KindName . METHOD ) ; \n\tif $F18594 ( kind , TYP ) kinds . add ( KindName . CLASS ) ; \n\tif $F18594 ( kind , PCK ) kinds . add ( KindName . PACKAGE ) ; \n\treturn kinds ; \n\t} \n"}, {"code": "$F125945 ( text ) "}, {"code": "public static String serializeDigestResponse $F3501 ( paramMap ) { \n\t$F4000 ( sb ) boolean prefixComma = _BOOL ; \n\tfor ( $F19318 ( entry , paramMap ) ) { \n\t\tif ( ! prefixComma ) { \n\t\t\tprefixComma = _BOOL ; \n\t\t\t} \n\t\telse $F86 ( sb ) $F79971 ( sb , entry ) $F84 ( sb ) $F79973 ( sb , entry ) } \n\t$F92 ( sb ) } \n"}, {"code": "public void populateCombos ( Activity activity , final Listener listener ) { \n\t$F3803 services = getServices ( activity . getPackageManager ( ) ) ; \n\tpopulateCombos ( activity , services , listener ) ; \n\t} \n"}, {"code": "protected JsonEncoding findEncoding ( MediaType mediaType , MultivaluedMap $F528 httpHeaders ) { \n\treturn JsonEncoding . UTF8 ; \n\t} \n"}, {"code": "static BufferedImage convertImage ( BufferedImage image ) { \n\tswitch $F56007 ( image ) { \n\t\tcase BufferedImage . TYPE_INT_ARGB_PRE : return image ; \n\t\tcase BufferedImage . TYPE_4BYTE_ABGR : image . coerceData ( _BOOL ) ; \n\t\treturn image ; \n\t\t} \n\tBufferedImage convertedImage = new BufferedImage ( image . getWidth ( ) , image . getHeight ( ) , BufferedImage . TYPE_INT_ARGB_PRE ) ; \n\t$F5115 ( g , convertedImage ) g . setColor ( new $F184129 $F13777 ) ; \n\t$F116732 ( g , image ) $F37616 ( g , image ) $F355 ( g ) return convertedImage ; \n\t} \n"}, {"code": "public long start $F72 { \n\t$F3224 ( startTime , System ) return startTime ; \n\t} \n"}, {"code": "public void next $F72 { \n\tif $F2921 ( iterator ) { \n\t\tView currentView = iterator . next ( ) ; \n\t\tif ( isUsingDefaultListener ( ) ) $F242205 ( currentView ) if ( iterator . nextIndex ( ) < mViews . size ( ) ) { \n\t\t\tView nextView = mViews . get ( iterator . nextIndex ( ) ) ; \n\t\t\tif ( isUsingDefaultListener ( ) ) nextView . setOnClickListener ( listener ) ; \n\t\t\tControllerAnimator animator = getDefaultForwardAnimation ( ) ; \n\t\t\tanimator . setOldView ( currentView ) ; \n\t\t\tanimator . setNewView ( nextView ) ; \n\t\t\tcurrentView . startAnimation ( animator ) ; \n\t\t\tif ( iterator . nextIndex ( ) == $F2281 ( mViews ) ) if ( hasControllerListener ( ) ) mListener . onEndReached ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( mLoop ) { \n\t\t\t\t$F106110 ( iterator , mViews ) View nextView = mViews . get ( NUM00 ) ; \n\t\t\t\tif ( mUseDefaultListener ) nextView . setOnClickListener ( listener ) ; \n\t\t\t\tControllerAnimator animator = getDefaultForwardAnimation ( ) ; \n\t\t\t\tanimator . setOldView ( currentView ) ; \n\t\t\t\tanimator . setNewView ( nextView ) ; \n\t\t\t\tcurrentView . startAnimation ( animator ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private boolean isHHSign ( String str ) { \n\tboolean sign = _BOOL ; \n\ttry { \n\t\tchar $F162463 ( r , Integer , str ) ; \n\t\t} \n\t$F43580 ( sign , _BOOL ) return sign ; \n\t} \n"}, {"code": "public void simulateMethod $F5498 ( method , thisVar , returnVar ) { \n\t$F5500 ( subSignature , method ) if $F3057 ( subSignature ) $F5501 ( sun_misc_Unsafe_allocateInstance , method , thisVar , returnVar , params ) $F5501 ( defaultMethod , method , thisVar , returnVar , params ) } \n"}, {"code": "public void cacheResolvedMethod ( Class clas , $F749 types , Method method ) { \n\tif ( Interpreter . DEBUG ) $F8922 ( Interpreter , clas , method ) SignatureKey sk = new SignatureKey ( clas , method . getName ( ) , types ) ; \n\tif $F181753 ( Modifier , method ) resolvedStaticMethods . put ( sk , method ) ; \n\telse resolvedObjectMethods . put ( sk , method ) ; \n\t} \n"}, {"code": "public void testSetBitTopPositive $F72 { \n\t$F43457 int aSign = NUM00 ; \n\tint number = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , NUM00 , - NUM00 , NUM00 , NUM00 , - NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F43462 ( result , aNumber , number ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "private void destroyBeans ( $F2100 ( viewMap ) , Map < String , ViewScopeContextObject > contextMap ) { \n\t$F22547 ( removalNameList ) if ( contextMap != null ) { \n\t\tfor ( Map . Entry < String , ViewScopeContextObject > entry : contextMap . entrySet ( ) ) { \n\t\t\t$F3477 ( passivationCapableId , entry ) Contextual contextual = beanManager . getPassivationCapableBean ( passivationCapableId ) ; \n\t\t\tViewScopeContextObject contextObject = entry . getValue ( ) ; \n\t\t\tCreationalContext creationalContext = beanManager . createCreationalContext ( contextual ) ; \n\t\t\tcontextual . destroy ( $F22754 ( viewMap , contextObject ) , creationalContext ) ; \n\t\t\t$F29790 ( removalNameList , contextObject ) } \n\t\t$F13712 ( removalNames , removalNameList ) while $F2921 ( removalNames ) { \n\t\t\t$F13714 ( name , removalNames ) viewMap . remove ( name ) ; \n\t\t\t} \n\t\t$F725 ( contextMap ) } \n\t} \n"}, {"code": "public static void close ( $F147000 OutputStream outputStream ) { \n\t$F2329 ( outputStream ) $F29053 ( outputStream ) } \n"}, {"code": "$F1 public Node item ( int index ) { \n\treturn ( nodes != null && index < nodes . size ( ) ) ? ( Node ) ( nodes . get ( index ) ) : null ; \n\t} \n"}, {"code": "private int charToVisibleWidth ( char c , @ JdkConstants . FontStyle int fontType , int currentX ) { \n\tif ( c == NUM00 ) $F1083 if ( c == NUM00 ) { \n\t\treturn EditorUtil . nextTabStop ( currentX , this ) - currentX ; \n\t\t} \n\treturn EditorUtil . charWidth ( c , fontType , this ) ; \n\t} \n"}, {"code": "public static void createDir ( File target ) throws AdeUsageException { \n\tif ( $F1905 ( target ) && ! target . mkdir ( ) && $F1905 ( target ) ) $F40745 ( target ) } \n"}, {"code": "public GTSEncoder ( long baseTimestamp ) { \n\tthis . baseTimestamp = baseTimestamp ; \n\tthis . stream = $F1535 ; \n\tthis . wrappingKey = null ; \n\t} \n"}, {"code": "public static String encode ( final $F19578 coords ) { \n\tlong lastLat = NUM00 ; \n\tlong lastLng = NUM00 ; \n\t$F3239 ( result ) for ( final Coordinate point : coords ) { \n\t\tlong lat = Math . round ( point . y * NUM00 ) ; \n\t\tlong lng = Math . round ( point . x * NUM00 ) ; \n\t\tlong dLat = lat - lastLat ; \n\t\tlong dLng = lng - lastLng ; \n\t\tencode ( dLat , result ) ; \n\t\tencode ( dLng , result ) ; \n\t\tlastLat = lat ; \n\t\tlastLng = lng ; \n\t\t} \n\t$F92 ( result ) } \n"}, {"code": "private void extractWeightValues ( List $F99538 synapses ) { \n\tint exWeights = NUM00 ; \n\tint inWeights = NUM00 ; \n\tfor ( Synapse s : synapses ) { \n\t\tdouble w = s . getStrength ( ) ; \n\t\tif ( w > NUM00 ) { \n\t\t\texWeights ++ ; \n\t\t\t} \n\t\telse { \n\t\t\tinWeights ++ ; \n\t\t\t} \n\t\t} \n\tweights [ NUM00 ] = new double [ exWeights ] ; \n\tweights [ NUM00 ] = new double [ inWeights ] ; \n\texWeights = NUM00 ; \n\tinWeights = NUM00 ; \n\tif ( weights [ NUM00 ] . length != NUM00 ) { \n\t\tfor ( Synapse s : synapses ) { \n\t\t\tdouble w = s . getStrength ( ) ; \n\t\t\tif ( w > NUM00 ) { \n\t\t\t\tweights [ NUM00 ] [ exWeights ++ ] = w ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tweights [ NUM00 ] [ inWeights ++ ] = w ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public void close $F72 { \n\ttry $F5795 ( flush ) catch ( AMLogException ale ) { \n\t\tDebug . error ( $F244213 ( tableName , ale ) ) ; \n\t\t} \n\tif ( conn != null ) { \n\t\ttry $F881 ( conn ) catch ( SQLException ce ) $F69256 ( Debug , tableName , ce ) } \n\tstopBufferTimer ( ) ; \n\t} \n"}, {"code": "public boolean contains $F149310 ( hashes ) { \n\t$F116323 ( ni , hashes ) for ( $F1316 ( i , hashFunctions ) ) { \n\t\tif ( ! testBit ( ( int ) ( ( ni . next ( ) & NUM00 ) % $F28143 ( filter ) ) ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void ensureCapacity ( int additionalData ) { \n\tif ( ( this . position + additionalData ) > this . byteBuffer . length ) { \n\t\tint newLength = ( int ) ( this . byteBuffer . length * NUM00 ) ; \n\t\tif ( newLength < ( this . byteBuffer . length + additionalData ) ) { \n\t\t\tnewLength = this . byteBuffer . length + $F35376 ( additionalData ) ; \n\t\t\t} \n\t\tif ( newLength < this . byteBuffer . length ) { \n\t\t\tnewLength = this . byteBuffer . length + additionalData ; \n\t\t\t} \n\t\t$F2175 ( newBytes , newLength ) System . arraycopy ( this . byteBuffer , NUM00 , newBytes , NUM00 , this . byteBuffer . length ) ; \n\t\tthis . byteBuffer = newBytes ; \n\t\t} \n\t} \n"}, {"code": "public boolean isValidNumber ( PhoneNumber number ) { \n\tString regionCode = getRegionCodeForNumber ( number ) ; \n\treturn isValidNumberForRegion ( number , regionCode ) ; \n\t} \n"}, {"code": "private String trimUrl ( String uri ) { \n\t$F1747 ( uri ) $F212530 ( uri ) return uri ; \n\t} \n"}, {"code": "public Pair < Integer , $F27145 > next $F72 { \n\ttry { \n\t\tclassesProcessed ++ ; \n\t\tInteger key = iterator . next ( ) ; \n\t\tlong pos = classificationBlockRMA2 . getPos ( key ) ; \n\t\tint count = classificationBlockRMA2 . getSum ( key ) ; \n\t\tclassDumpReader . seek ( pos ) ; \n\t\t$F27145 $F19827 ( list ) ; \n\t\tfor ( $F119 ( i , count ) ) list . add ( classDumpReader . readLong ( ) ) ; \n\t\t$F83164 ( key , list ) } \n\tcatch ( Exception e ) { \n\t\tBasic . caught ( e ) ; \n\t\terror = _BOOL ; \n\t\t$F1274 } \n\t} \n"}, {"code": "public static String addAlpha ( String originalColor , double alpha ) { \n\tlong alphaFixed = Math . round ( alpha * NUM00 ) ; \n\t$F21991 ( alphaHex , Long , alphaFixed ) $F21680 ( alphaHex ) originalColor = originalColor . replace ( NUM00 , NUM00 + alphaHex ) ; \n\treturn originalColor ; \n\t} \n"}, {"code": "public void stop $F72 { \n\tserver . stop ( NUM00 ) ; \n\t} \n"}, {"code": "protected DateTimeData parse ( String str , int durationType ) throws SchemaDateTimeException { \n\t$F1749 ( len , str ) DateTimeData date = new DateTimeData ( str , this ) ; \n\tint start = NUM00 ; \n\t$F52837 ( c , str , start ) if $F22868 ( c ) { \n\t\tthrow new SchemaDateTimeException $F72 ; \n\t\t} \n\telse { \n\t\tdate . utc = ( c == NUM00 ) ? NUM00 : NUM00 ; \n\t\tif ( c == NUM00 && $F30277 ( str , start ) ) { \n\t\t\tthrow new SchemaDateTimeException $F72 ; \n\t\t\t} \n\t\t} \n\tint negate = NUM00 ; \n\tif ( date . utc == NUM00 ) $F44867 ( negate ) boolean designator = _BOOL ; \n\tint endDate = indexOf ( str , start , len , NUM00 ) ; \n\tif ( endDate == - NUM00 ) { \n\t\tendDate = len ; \n\t\t} \n\telse if ( durationType == YEARMONTHDURATION_TYPE ) { \n\t\tthrow new SchemaDateTimeException $F72 ; \n\t\t} \n\tint end = indexOf ( str , start , endDate , NUM00 ) ; \n\tif ( end != - NUM00 ) { \n\t\tif ( durationType == DAYTIMEDURATION_TYPE ) { \n\t\t\tthrow new SchemaDateTimeException $F72 ; \n\t\t\t} \n\t\tdate . year = negate * parseInt ( str , start , end ) ; \n\t\tstart = end + NUM00 ; \n\t\tdesignator = _BOOL ; \n\t\t} \n\tend = indexOf ( str , start , endDate , NUM00 ) ; \n\tif ( end != - NUM00 ) { \n\t\tif ( durationType == DAYTIMEDURATION_TYPE ) { \n\t\t\tthrow new SchemaDateTimeException $F72 ; \n\t\t\t} \n\t\tdate . month = negate * parseInt ( str , start , end ) ; \n\t\tstart = end + NUM00 ; \n\t\tdesignator = _BOOL ; \n\t\t} \n\tend = indexOf ( str , start , endDate , NUM00 ) ; \n\tif ( end != - NUM00 ) { \n\t\tif ( durationType == YEARMONTHDURATION_TYPE ) { \n\t\t\tthrow new SchemaDateTimeException $F72 ; \n\t\t\t} \n\t\tdate . day = negate * parseInt ( str , start , end ) ; \n\t\tstart = end + NUM00 ; \n\t\tdesignator = _BOOL ; \n\t\t} \n\tif ( len == endDate && start != len ) { \n\t\tthrow new SchemaDateTimeException $F72 ; \n\t\t} \n\tif ( len != endDate ) { \n\t\tend = indexOf ( str , ++ start , len , NUM00 ) ; \n\t\tif ( end != - NUM00 ) { \n\t\t\tdate . hour = negate * parseInt ( str , start , end ) ; \n\t\t\tstart = end + NUM00 ; \n\t\t\tdesignator = _BOOL ; \n\t\t\t} \n\t\tend = indexOf ( str , start , len , NUM00 ) ; \n\t\tif ( end != - NUM00 ) { \n\t\t\tdate . minute = negate * parseInt ( str , start , end ) ; \n\t\t\tstart = end + NUM00 ; \n\t\t\tdesignator = _BOOL ; \n\t\t\t} \n\t\tend = indexOf ( str , start , len , NUM00 ) ; \n\t\tif ( end != - NUM00 ) { \n\t\t\tdate . second = negate * parseSecond ( str , start , end ) ; \n\t\t\tstart = end + NUM00 ; \n\t\t\tdesignator = _BOOL ; \n\t\t\t} \n\t\tif ( start != len || str . charAt ( -- start ) == NUM00 ) { \n\t\t\tthrow new SchemaDateTimeException $F72 ; \n\t\t\t} \n\t\t} \n\tif ( ! designator ) { \n\t\tthrow new SchemaDateTimeException $F72 ; \n\t\t} \n\treturn date ; \n\t} \n"}, {"code": "final void copyIntoLocalState ( Operand [ ] _localState ) { \n\tlocalState = new Operand [ _localState . length ] ; \n\t$F7057 ( System , _localState , localState ) setLocalKnown ( ) ; \n\t} \n"}, {"code": "$F1431 private HashMap < String , DBObject > loadDBObjects ( Class objectClass ) { \n\tHashMap < String , DBObject > objectMap = new HashMap < String , DBObject > $F72 ; \n\tDBObject dbObject = new DBObject ( this , objectClass ) ; \n\tString objectToLoad = s_logger . localizeMessage ( NUM00 ) ; \n\tString objectsToLoad = s_logger . localizeMessage ( NUM00 ) ; \n\tString sqlLoadHeaders = null ; \n\tString sqlLoadContents = null ; \n\tif ( dbObject != null ) { \n\t\tobjectToLoad = dbObject . getObjectType ( ) ; \n\t\tobjectsToLoad = dbObject . getObjectTypes ( ) ; \n\t\tsqlLoadHeaders = dbObject . getLoadHeaderSQL ( ) ; \n\t\tsqlLoadContents = dbObject . getLoadContentSQL ( ) ; \n\t\t} \n\ts_logger . log ( Level . FINE , NUM00 , new Object [ ] { \n\t\tobjectsToLoad , getDirection ( ) } \n\t) ; \n\tPreparedStatementWrapper stmtLoadHeaders = setPreparedStatement ( sqlLoadHeaders ) ; \n\tPreparedStatementWrapper stmtLoadContents = setPreparedStatement ( sqlLoadContents ) ; \n\tint counter = NUM00 ; \n\tif ( dbObject != null ) { \n\t\tString sql = dbObject . getLoadObjectSQL ( ) ; \n\t\tStatement stmt = setStatement ( ) ; \n\t\tResultSet rs = executeQuery ( stmt , sql ) ; \n\t\twhile ( getResultSetNext ( rs ) ) { \n\t\t\tString s = getResultSetString ( rs , NUM00 ) ; \n\t\t\tif $F15257 ( objectMap , s ) { \n\t\t\t\tDBObject obj = new DBObject ( this , objectClass , s ) ; \n\t\t\t\tobj . populate ( stmtLoadHeaders , stmtLoadContents ) ; \n\t\t\t\tif ( obj . isPopulated ( ) ) { \n\t\t\t\t\tobjectMap . put ( s . toUpperCase ( ) , obj ) ; \n\t\t\t\t\tcounter ++ ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\treleaseResultSet ( rs ) ; \n\t\treleaseStatement ( stmt ) ; \n\t\t} \n\treleasePreparedStatement ( stmtLoadHeaders ) ; \n\treleasePreparedStatement ( stmtLoadContents ) ; \n\tif ( counter == NUM00 ) s_logger . log ( Level . FINE , NUM00 , new Object [ ] { \n\t\tInteger . toString ( counter ) , objectToLoad } \n\t) ; \n\telse s_logger . log ( Level . FINE , NUM00 , new Object [ ] { \n\t\tInteger . toString ( counter ) , objectsToLoad } \n\t) ; \n\t$F1206 ( s_logger ) return objectMap ; \n\t} \n"}, {"code": "protected Object attemptReadResponse ( Connection cnx ) throws Exception { \n\tMessage msg = createResponseMessage ( ) ; \n\tif ( msg != null ) { \n\t\tmsg . setComms ( cnx . getSocket ( ) , cnx . getInputStream ( ) , cnx . getOutputStream ( ) , cnx . getCommBuffer ( ) , cnx . getStats ( ) ) ; \n\t\tif ( msg instanceof ChunkedMessage ) { \n\t\t\ttry $F8587 ( processResponse , msg , cnx ) finally { \n\t\t\t\tmsg . unsetComms ( ) ; \n\t\t\t\tprocessSecureBytes ( cnx , msg ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\ttry { \n\t\t\t\tmsg . recv ( ) ; \n\t\t\t\t} \n\t\t\tfinally { \n\t\t\t\tmsg . unsetComms ( ) ; \n\t\t\t\tprocessSecureBytes ( cnx , msg ) ; \n\t\t\t\t} \n\t\t\treturn processResponse ( msg , cnx ) ; \n\t\t\t} \n\t\t} \n\telse $F1337 } \n"}, {"code": "public synchronized boolean add ( E e , boolean hasNext ) { \n\twhile ( mInternalQueue . size ( ) >= mMaxSize && ! mClosed ) { \n\t\tnotifyAll ( ) ; \n\t\ttry { \n\t\t\twait ( TIMEOUT ) ; \n\t\t\t} \n\t\tcatch ( InterruptedException e1 ) { \n\t\t\tmClosed = _BOOL ; \n\t\t\tProgramState . checkAbort ( ) ; \n\t\t\tthrow new IllegalStateException ( NUM00 , e1 ) ; \n\t\t\t} \n\t\tProgramState . checkAbort ( ) ; \n\t\t} \n\t$F9303 ( mClosed , _BOOL ) final boolean wasEmpty = mInternalQueue . isEmpty ( ) ; \n\tmHasNext = hasNext ; \n\tmInternalQueue . add ( e ) ; \n\t$F8801 ( wasEmpty , notifyAll ) return _BOOL ; \n\t} \n"}, {"code": "public TranslatableComponent $F72 $F845 "}, {"code": "public void addPart ( int index , PduPart part ) { \n\t$F160092 ( part ) putPartToMaps ( part ) ; \n\tmParts . add ( index , part ) ; \n\t} \n"}, {"code": "public StrBuilder insert ( int index , boolean value ) { \n\tvalidateIndex ( index ) ; \n\tif ( value ) { \n\t\tensureCapacity ( size + NUM00 ) ; \n\t\t$F27096 ( System , buffer , index , size ) buffer [ index ++ ] = NUM00 ; \n\t\tbuffer [ index ++ ] = NUM00 ; \n\t\tbuffer [ index ++ ] = NUM00 ; \n\t\tbuffer [ index ] = NUM00 ; \n\t\tsize += NUM00 ; \n\t\t} \n\telse { \n\t\tensureCapacity ( size + NUM00 ) ; \n\t\t$F27096 ( System , buffer , index , size ) buffer [ index ++ ] = NUM00 ; \n\t\tbuffer [ index ++ ] = NUM00 ; \n\t\tbuffer [ index ++ ] = NUM00 ; \n\t\tbuffer [ index ++ ] = NUM00 ; \n\t\tbuffer [ index ] = NUM00 ; \n\t\tsize += NUM00 ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "public boolean hasNatureAndWeapon ( Nature nature , String weapon ) { \n\treturn this . nature == nature && ( ( weapon == null && this . weapon == null ) || ( weapon != null && $F12737 ( weapon , this ) ) ) ; \n\t} \n"}, {"code": "public void dump ( String infoMsg ) { \n\tstorage . getOnlineMembers ( ) ; \n\tstorage . getOfflineMembers ( ) ; \n\tstorage . getOfflineAndEqualMembers ( ) ; \n\tstorage . getMyInitializingID ( ) ; \n\tstorage . getMyPersistentID ( ) ; \n\t$F123708 ( buf ) $F43191 ( infoMsg , buf ) $F84 ( buf ) buf . append ( storage . getMyPersistentID ( ) ) ; \n\t$F84 ( buf ) buf . append ( storage . getMyInitializingID ( ) ) ; \n\t$F84 ( buf ) for ( PersistentMemberID id : storage . getOnlineMembers ( ) ) $F7227 ( buf , id ) $F84 ( buf ) for ( PersistentMemberID id : storage . getOfflineMembers ( ) ) $F7227 ( buf , id ) $F84 ( buf ) for ( PersistentMemberID id : storage . getOfflineAndEqualMembers ( ) ) $F7227 ( buf , id ) $F62755 ( logger , buf ) } \n"}, {"code": "private $F9341 findNode ( Object key ) { \n\t$F61745 ( key ) Comparator < $F35140 > cmp = comparator ; \n\touter : for ( $F589 ) { \n\t\tfor ( $F9341 b = findPredecessor ( key , cmp ) , n = b . next ; \n\t\t; \n\t\t) { \n\t\t\tObject v ; \n\t\t\tint c ; \n\t\t\tif ( n == null ) $F59811 $F35175 ( f , n ) $F45438 ( n , b ) if ( ( v = n . value ) == null ) { \n\t\t\t\tn . helpDelete ( b , f ) ; \n\t\t\t\t$F597 } \n\t\t\tif ( b . value == null || v == n ) $F597 if ( ( c = cpr ( cmp , key , n . key ) ) == NUM00 ) return n ; \n\t\t\tif ( c < NUM00 ) $F59811 b = n ; \n\t\t\tn = f ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "static Sort parseSort ( long timestampSec , IndexState state , $F6689 fields , $F3803 sortFieldNames , Map < String , FieldDef > dynamicFields ) { \n\tList < SortField > sortFields = new ArrayList < SortField > $F72 ; \n\tfor ( Object _sub : fields ) { \n\t\tRequest sub = ( Request ) _sub ; \n\t\t$F21024 ( fieldName , sub ) SortField sf ; \n\t\t$F73441 ( sortFieldNames , fieldName ) if $F3057 ( fieldName ) { \n\t\t\tsf = SortField . FIELD_DOC ; \n\t\t\t} \n\t\telse if $F3057 ( fieldName ) { \n\t\t\tsf = SortField . FIELD_SCORE ; \n\t\t\t} \n\t\telse { \n\t\t\tFieldDef fd ; \n\t\t\tif ( dynamicFields != null ) $F6045 ( fd , dynamicFields , fieldName ) else { \n\t\t\t\tfd = null ; \n\t\t\t\t} \n\t\t\tif ( fd == null ) { \n\t\t\t\tfd = state . getField ( fieldName ) ; \n\t\t\t\t} \n\t\t\tif ( fd == null ) { \n\t\t\t\tsub . fail ( NUM00 , NUM00 + fieldName + NUM00 ) ; \n\t\t\t\tfd = null ; \n\t\t\t\t} \n\t\t\tif ( fd . valueSource != null ) { \n\t\t\t\tsf = fd . valueSource . getSortField ( sub . getBoolean ( NUM00 ) ) ; \n\t\t\t\t} \n\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . LAT_LON ) { \n\t\t\t\tif ( fd . fieldType . docValuesType ( ) == DocValuesType . NONE ) { \n\t\t\t\t\tsub . fail ( NUM00 , NUM00 + fieldName + NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\tRequest sub2 = sub . getStruct ( NUM00 ) ; \n\t\t\t\tsf = LatLonDocValuesField . newDistanceSort ( fieldName , sub2 . getDouble ( NUM00 ) , sub2 . getDouble ( NUM00 ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( ( fd . fieldType != null && fd . fieldType . docValuesType ( ) == DocValuesType . NONE ) || ( fd . fieldType == null && fd . valueSource == null ) ) { \n\t\t\t\t\tsub . fail ( NUM00 , NUM00 + fieldName + NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( fd . multiValued ) { \n\t\t\t\t\tString selectorString = sub . getEnum ( NUM00 ) ; \n\t\t\t\t\tif ( fd . valueType == FieldDef . FieldValueType . ATOM ) { \n\t\t\t\t\t\tSortedSetSelector . Type selector ; \n\t\t\t\t\t\tif $F3057 ( selectorString ) { \n\t\t\t\t\t\t\tselector = SortedSetSelector . Type . MIN ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\telse if $F3057 ( selectorString ) { \n\t\t\t\t\t\t\tselector = SortedSetSelector . Type . MAX ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\telse if $F3057 ( selectorString ) { \n\t\t\t\t\t\t\tselector = SortedSetSelector . Type . MIDDLE_MIN ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\telse if $F3057 ( selectorString ) { \n\t\t\t\t\t\t\tselector = SortedSetSelector . Type . MIDDLE_MAX ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\telse { \n\t\t\t\t\t\t\tassert _BOOL ; \n\t\t\t\t\t\t\tselector = null ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\tsf = new SortedSetSortField ( fieldName , sub . getBoolean ( NUM00 ) , selector ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . INT ) { \n\t\t\t\t\t\tsf = new SortedNumericSortField ( fieldName , SortField . Type . INT , sub . getBoolean ( NUM00 ) , parseNumericSelector ( sub , selectorString ) ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . LONG ) { \n\t\t\t\t\t\tsf = new SortedNumericSortField ( fieldName , SortField . Type . LONG , sub . getBoolean ( NUM00 ) , parseNumericSelector ( sub , selectorString ) ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . FLOAT ) { \n\t\t\t\t\t\tsf = new SortedNumericSortField ( fieldName , SortField . Type . FLOAT , sub . getBoolean ( NUM00 ) , parseNumericSelector ( sub , selectorString ) ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . DOUBLE ) { \n\t\t\t\t\t\tsf = new SortedNumericSortField ( fieldName , SortField . Type . DOUBLE , sub . getBoolean ( NUM00 ) , parseNumericSelector ( sub , selectorString ) ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tsub . fail ( NUM00 , NUM00 + fieldName + NUM00 + fd . valueType ) ; \n\t\t\t\t\t\tassert _BOOL ; \n\t\t\t\t\t\tsf = null ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tSortField . Type sortType ; \n\t\t\t\t\tif ( fd . valueType == FieldDef . FieldValueType . ATOM ) { \n\t\t\t\t\t\tsortType = SortField . Type . \"STRING\" ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . LONG || fd . valueType == FieldDef . FieldValueType . DATE_TIME ) { \n\t\t\t\t\t\tsortType = SortField . Type . LONG ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . INT ) { \n\t\t\t\t\t\tsortType = SortField . Type . INT ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . DOUBLE ) { \n\t\t\t\t\t\tsortType = SortField . Type . DOUBLE ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . FLOAT ) { \n\t\t\t\t\t\tsortType = SortField . Type . FLOAT ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tsub . fail ( NUM00 , NUM00 + fieldName + NUM00 + fd . valueType ) ; \n\t\t\t\t\t\tassert _BOOL ; \n\t\t\t\t\t\tsortType = null ; \n\t\t\t\t\t\t} \n\t\t\t\t\tsf = new SortField ( fieldName , sortType , sub . getBoolean ( NUM00 ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tboolean hasMissingLast = sub . hasParam ( NUM00 ) ; \n\t\t\tboolean missingLast = sub . getBoolean ( NUM00 ) ; \n\t\t\tif ( fd . valueType == FieldDef . FieldValueType . ATOM ) { \n\t\t\t\tif ( missingLast ) { \n\t\t\t\t\tsf . setMissingValue ( SortField . <missing ';'> NUM00 <missing ';'> _LAST ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tsf . setMissingValue ( SortField . <missing ';'> NUM00 <missing ';'> _FIRST ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . INT ) { \n\t\t\t\tsf . setMissingValue ( missingLast ? Integer . MAX_VALUE : Integer . MIN_VALUE ) ; \n\t\t\t\t} \n\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . LONG ) { \n\t\t\t\tsf . setMissingValue ( missingLast ? Long . MAX_VALUE : Long . MIN_VALUE ) ; \n\t\t\t\t} \n\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . FLOAT ) { \n\t\t\t\tsf . setMissingValue ( missingLast ? Float . POSITIVE_INFINITY : Float . NEGATIVE_INFINITY ) ; \n\t\t\t\t} \n\t\t\telse if ( fd . valueType == FieldDef . FieldValueType . DOUBLE ) { \n\t\t\t\tsf . setMissingValue ( missingLast ? Double . POSITIVE_INFINITY : Double . NEGATIVE_INFINITY ) ; \n\t\t\t\t} \n\t\t\telse if ( hasMissingLast ) { \n\t\t\t\tsub . fail ( NUM00 , NUM00 + fieldName + NUM00 + sf . getType ( ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tsortFields . add ( sf ) ; \n\t\t} \n\treturn new Sort ( sortFields . toArray ( new SortField $F2313 ( sortFields ) ) ) ; \n\t} \n"}, {"code": "public synchronized void open $F72 $F845 "}, {"code": "$F1113 private Optional < TypeConversion > findConversionFromDbValue ( $F1113 Type source , $F1113 Type target ) { \n\tif ( isAssignable ( target , source ) ) return Optional . of ( TypeConversion . identity ( ) ) ; \n\tOptional < TypeConversion > directConversion = typeConversionRegistry . findConversionFromDbValue ( source , target ) ; \n\tif $F16464 ( directConversion ) return directConversion ; \n\tOptional < TypeConversion > arrayConversion = findArrayConversion ( source , target ) ; \n\tif $F16464 ( arrayConversion ) return arrayConversion ; \n\tOptional < TypeConversion > optionalConversion = findOptionalConversion ( source , target ) ; \n\tif $F16464 ( optionalConversion ) return optionalConversion ; \n\tOptional < TypeConversion > enumConversion = findEnumConversion ( target ) ; \n\tif $F16464 ( enumConversion ) return enumConversion ; \n\t$F21169 ( Optional ) } \n"}, {"code": "private boolean advanceApiUpTo ( TreeSet < AreaPanelInfo > sortedApiTree , AreaPanelInfo api , int time ) { \n\tAreaPanel ap = api . ap ( ) ; \n\tTimeTree rootTt = ap . getTimeTree ( ) ; \n\tTimeTree tt = rootTt . getEncompassigTimeTreeOrMaxTimeTreeBeforeTime ( time , _BOOL ) ; \n\tif ( tt == null || tt . id == api . currTtId ) return _BOOL ; \n\tsortedApiTree . remove ( api ) ; \n\tif ( api . setTt ( tt , Integer . MAX_VALUE ) ) sortedApiTree . add ( api ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F100301 ( RequestMethod ) $F4586 public RestWrapper update ( $F100302 $F100303 UserRoles userRoles , BindingResult bindingResult , Principal principal ) { \n\tRestWrapper restWrapper = null ; \n\t$F100315 ( bindingResult , bindingResultError ) try { \n\t\tcom . wipro . ats . bdre . md . dao . jpa . UserRoles jpaUserRoles = new com . wipro . ats . bdre . md . dao . jpa . UserRoles $F72 ; \n\t\tjpaUserRoles . setUserRoleId ( userRoles . getUserRoleId ( ) ) ; \n\t\tjpaUserRoles . setRole ( userRoles . getRole ( ) ) ; \n\t\tUsers users = new Users $F72 ; \n\t\tusers . setUsername ( userRoles . getUsername ( ) ) ; \n\t\tjpaUserRoles . setUsers ( users ) ; \n\t\tuserRolesDAO . update ( jpaUserRoles ) ; \n\t\t$F4608 ( restWrapper , userRoles , RestWrapper ) LOGGER . info ( NUM00 + userRoles . getUserRoleId ( ) + NUM00 + principal . getName ( ) + userRoles ) ; \n\t\t} \n\t$F20495 ( LOGGER , e , restWrapper , RestWrapper ) return restWrapper ; \n\t} \n"}, {"code": "private void sendRequestOption $F72 throws IOException { \n\tString request = NUM00 + mParameters . host + NUM00 + mParameters . port + mParameters . path + NUM00 + addHeaders ( ) ; \n\tLog . i ( TAG , $F31599 ( request ) ) ; \n\t$F42213 ( mOutputStream , request ) Response . parseResponse ( mBufferedReader ) ; \n\t} \n"}, {"code": "$F1 public Result doComparisonTest ( final Properties properties ) throws Exception { \n\tfinal long timeout = Long . parseLong ( properties . getProperty ( TestOptions . TIMEOUT ) ) ; \n\tfinal int nresources = Integer . parseInt ( properties . getProperty ( TestOptions . NRESOURCES ) ) ; \n\tfinal int minLocks = Integer . parseInt ( properties . getProperty ( TestOptions . MIN_LOCKS ) ) ; \n\tfinal int maxLocks = Integer . parseInt ( properties . getProperty ( TestOptions . MAX_LOCKS ) ) ; \n\tfinal int ntrials = Integer . parseInt ( properties . getProperty ( TestOptions . NTRIALS ) ) ; \n\tfinal int keyLen = Integer . parseInt ( properties . getProperty ( TestOptions . KEYLEN ) ) ; \n\tfinal int nops = Integer . parseInt ( properties . getProperty ( TestOptions . NOPS ) ) ; \n\tfinal double failureRate = Double . parseDouble ( properties . getProperty ( TestOptions . FAILURE_RATE ) ) ; \n\tResult result = doConcurrentClientTest ( journal , timeout , nresources , minLocks , maxLocks , ntrials , keyLen , nops , failureRate ) ; \n\treturn result ; \n\t} \n"}, {"code": "public static void printThreadInfo ( PrintWriter stream , String title ) { \n\tfinal int STACK_DEPTH = NUM00 ; \n\tboolean contention = threadBean . isThreadContentionMonitoringEnabled ( ) ; \n\t$F2469 threadIds = threadBean . getAllThreadIds ( ) ; \n\t$F7957 ( stream , title ) stream . println ( threadIds . length + NUM00 ) ; \n\tfor ( long tid : threadIds ) { \n\t\tThreadInfo info = threadBean . getThreadInfo ( tid , STACK_DEPTH ) ; \n\t\tif ( info == null ) { \n\t\t\t$F8438 ( stream ) $F598 } \n\t\tstream . println ( NUM00 + getTaskName ( info . getThreadId ( ) , info . getThreadName ( ) ) + NUM00 ) ; \n\t\tThread . State state = info . getThreadState ( ) ; \n\t\t$F7957 ( stream , state ) stream . println ( NUM00 + info . getBlockedCount ( ) ) ; \n\t\tstream . println ( NUM00 + info . getWaitedCount ( ) ) ; \n\t\tif ( contention ) { \n\t\t\tstream . println ( NUM00 + info . getBlockedTime ( ) ) ; \n\t\t\tstream . println ( NUM00 + info . getWaitedTime ( ) ) ; \n\t\t\t} \n\t\tif ( state == Thread . State . WAITING ) { \n\t\t\tstream . println ( NUM00 + info . getLockName ( ) ) ; \n\t\t\t} \n\t\telse if ( state == Thread . State . BLOCKED ) { \n\t\t\tstream . println ( NUM00 + info . getLockName ( ) ) ; \n\t\t\tstream . println ( NUM00 + getTaskName ( info . getLockOwnerId ( ) , info . getLockOwnerName ( ) ) ) ; \n\t\t\t} \n\t\t$F8438 ( stream ) for ( StackTraceElement frame : info . getStackTrace ( ) ) { \n\t\t\tstream . println ( $F368 ( frame ) ) ; \n\t\t\t} \n\t\t} \n\t$F1206 ( stream ) } \n"}, {"code": "public void addDelete ( IResource delete ) { \n\tif ( fDelete == null ) fDelete = new ArrayList $F24164 $F989 ; \n\tfDelete . add ( delete ) ; \n\tif ( fIgnoreCount == NUM00 ) { \n\t\tinternalAdd ( new DeleteDescription ( delete ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static double max $F30455 ( a , b ) { \n\tif ( a > b ) { \n\t\treturn a ; \n\t\t} \n\tif ( a < b ) { \n\t\treturn b ; \n\t\t} \n\tif ( a != b ) $F6623 ( Double ) $F23078 ( bits , Double , a ) $F6482 ( bits , b ) return a ; \n\t} \n"}, {"code": "$F26776 ( container , mContainers ) "}, {"code": "$F1 public void writeExternal ( ObjectOutput out ) throws IOException { \n\tsuper . writeExternal ( out ) ; \n\tout . writeObject ( approximation ) ; \n\t} \n"}, {"code": "public void add ( String methodName , $F240647 parameters ) { \n\tchain . add ( new DotExpressionItem ( methodName , parameters , _BOOL ) ) ; \n\t} \n"}, {"code": "public static Request request $F72 $F1522 ( threadLocal ) "}, {"code": "public static String createHash ( String password ) throws $F36681 $F36684 ( createHash , password ) "}, {"code": "private void scheduleCommercial ( int length ) { \n\tLong delay = commercialDelay . getSettingValue ( ) ; \n\tif ( delay == null ) { \n\t\tsetCommercialResult ( NUM00 ) ; \n\t\tclearCommercialButtonsSelection ( ) ; \n\t\t} \n\telse { \n\t\tscheduledCommercialTime = System . currentTimeMillis ( ) + delay * NUM00 ; \n\t\tscheduledCommercialLength = length ; \n\t\tupdate ( ) ; \n\t\t} \n\t} \n"}, {"code": "public int hashCode $F72 { \n\t$F39428 ( bits , Double , m00 ) bits = bits * NUM00 + Double . doubleToLongBits ( m01 ) ; \n\tbits = bits * NUM00 + Double . doubleToLongBits ( m02 ) ; \n\tbits = bits * NUM00 + Double . doubleToLongBits ( m10 ) ; \n\tbits = bits * NUM00 + Double . doubleToLongBits ( m11 ) ; \n\tbits = bits * NUM00 + Double . doubleToLongBits ( m12 ) ; \n\treturn ( $F1047 ( bits ) ^ $F13507 ( bits ) ) ; \n\t} \n"}, {"code": "public void unsubscribe ( AWSIotMessage message ) throws AWSIotException { \n\ttry { \n\t\tunsubscribeTopic ( message ) ; \n\t\t} \n\tcatch ( AwsIotRetryableException e ) { \n\t\tif ( client . getMaxOfflineQueueSize ( ) > NUM00 && unsubscribeQueue . size ( ) < client . getMaxOfflineQueueSize ( ) ) $F207 ( unsubscribeQueue , message ) else { \n\t\t\tLOGGER . info ( NUM00 + message . getTopic ( ) ) ; \n\t\t\tthrow new AWSIotException ( e ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static boolean isDigitalUnix $F72 $F144200 ( osName ) "}, {"code": "public void clientDisconnect $F72 { \n\ttry { \n\t\tOutHttpApp responseStream = _responseStream ; \n\t\t$F2727 ( responseStream ) } \n\tcatch ( Exception e ) $F24254 ( log , Level , e ) ConnectionTcp conn = connTcp ( ) ; \n\tif ( conn != null ) { \n\t\tconn . clientDisconnect ( ) ; \n\t\t} \n\tkillKeepalive ( NUM00 ) ; \n\t} \n"}, {"code": "public boolean endsWith ( Name n ) { \n\tif ( n instanceof CompoundName ) { \n\t\treturn ( impl . endsWith ( n . size ( ) , n . getAll ( ) ) ) ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "private int calculateTotalHeight ( float starSize , int numberOfStars , float starsSeparation , boolean padding ) { \n\treturn Math . round ( starSize ) + ( padding ? getPaddingTop ( ) + getPaddingBottom ( ) : NUM00 ) ; \n\t} \n"}, {"code": "$F1431 private static boolean isRegex ( String s ) { \n\ttry { \n\t\tPattern . compile ( s ) ; \n\t\t} \n\tcatch ( PatternSyntaxException e ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F45572 ( context , intent , pm , handlers , PackageManager , _BOOL , resolveInfo , filter , Log , TAG ) "}, {"code": "public static void flush $F72 { \n\tclearBuffer ( ) ; \n\ttry $F29882 ( out ) $F12241 ( e ) } \n"}, {"code": "private String attachFooterToText ( String content ) throws MessagingException , IOException { \n\t$F7542 ( builder , content ) ensureTrailingCarriageReturn ( content , builder ) ; \n\t$F16690 ( builder , getFooterText ) $F92 ( builder ) } \n"}, {"code": "public static Sentence make ( final Connective connective , final Sentence ... children2 ) $F38616 ( make , connective , Arrays , children2 ) "}, {"code": "public final void testIsStatePreserved1 $F72 { \n\t$F65113 ( encodedKey ) EncodedKeySpec meks = new MyEncodedKeySpec ( encodedKey ) ; \n\t$F65119 ( encodedKey ) $F46943 ( ek , meks ) assertTrue ( ek [ NUM00 ] == $F19905 ) ; \n\t} \n"}, {"code": "public synchronized void init $F72 { \n\tinit = _BOOL ; \n\tfor ( String mapName : store . getMapNames ( ) ) { \n\t\tif $F3106 ( mapName ) { \n\t\t\tMVMap < Object , Integer > temp = openTempMap ( mapName ) ; \n\t\t\tstore . removeMap ( temp ) ; \n\t\t\t} \n\t\t} \n\tsynchronized ( undoLog ) { \n\t\tif $F3817 ( undoLog ) { \n\t\t\tfor ( Long key : undoLog . keySet ( ) ) { \n\t\t\t\tint transactionId = getTransactionId ( key ) ; \n\t\t\t\topenTransactions . set ( transactionId ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static TDoubleDoubleHashMap createCumulativeHistogram ( TDoubleDoubleHashMap histogram ) { \n\t$F1986 keys = histogram . keys ( ) ; \n\tArrays . sort ( keys ) ; \n\tdouble sum = NUM00 ; \n\tfor ( double key : keys ) { \n\t\t$F28095 ( val , histogram , key ) sum += val ; \n\t\thistogram . put ( key , sum ) ; \n\t\t} \n\treturn histogram ; \n\t} \n"}, {"code": "public synchronized void updateIconsForPkg ( String packageName , UserHandleCompat user ) { \n\tremoveIconsForPkg ( packageName , user ) ; \n\ttry { \n\t\tPackageInfo info = mPackageManager . getPackageInfo ( packageName , PackageManager . GET_UNINSTALLED_PACKAGES ) ; \n\t\tlong userSerial = mUserManager . getSerialNumberForUser ( user ) ; \n\t\tfor ( LauncherActivityInfoCompat app : mLauncherApps . getActivityList ( packageName , user ) ) { \n\t\t\taddIconToDBAndMemCache ( app , info , userSerial ) ; \n\t\t\t} \n\t\t} \n\tcatch ( NameNotFoundException e ) { \n\t\t$F96563 ( Log , TAG , e ) $F665 } \n\t} \n"}, {"code": "protected DateTimeData parse ( String str ) throws SchemaDateTimeException { \n\tDateTimeData date = new DateTimeData ( str , this ) ; \n\t$F1749 ( len , str ) int end = indexOf ( str , NUM00 , len , NUM00 ) ; \n\tint dateEnd = getDate ( str , NUM00 , end , date ) ; \n\tgetTime ( str , end + NUM00 , len , date ) ; \n\tif ( dateEnd != end ) { \n\t\tthrow new RuntimeException ( str + NUM00 + NUM00 ) ; \n\t\t} \n\tvalidateDateTime ( date ) ; \n\tsaveUnnormalized ( date ) ; \n\tif ( date . utc != NUM00 && date . utc != NUM00 ) { \n\t\tnormalize ( date ) ; \n\t\t} \n\treturn date ; \n\t} \n"}, {"code": "void addAttributeValues ( String attrName , Set values ) throws SMSException { \n\tif ( attrName != null && values != null && $F1030 ( values ) ) { \n\t\tMap attrs = getAttributes ( ) ; \n\t\t$F125374 ( origValues , attrs , attrName ) $F46709 ( newValues , values ) if $F1032 ( origValues ) $F21926 ( newValues , origValues ) $F28017 ( newAttrs ) newAttrs . put ( attrName , newValues ) ; \n\t\tsetAttributes ( newAttrs ) ; \n\t\t} \n\t} \n"}, {"code": "public void test_parkUntil_3 $F72 throws Exception { \n\tCyclicBarrier barrier = new CyclicBarrier $F989 ; \n\tParker parker = new Parker ( barrier , _BOOL , NUM00 ) ; \n\t$F24440 ( parkerThread , parker ) UNSAFE . unpark ( parkerThread ) ; \n\t$F2346 ( parkerThread ) parker . assertDurationIsInRange ( NUM00 ) ; \n\t$F14454 ( parkerThread ) } \n"}, {"code": "SegmentManager commitIndex ( long commitIndex ) { \n\tthis . commitIndex = Math . max ( this . commitIndex , commitIndex ) ; \n\treturn this ; \n\t} \n"}, {"code": "public void finishFragments $F72 { \n\tfor ( Fragment comment : closingFragments ) { \n\t\tfinishFragment ( comment ) ; \n\t\t} \n\t$F725 ( closingFragments ) } \n"}, {"code": "private final void _writeUTF8Segments $F24576 ( utf8 , offset , totalLen ) throws IOException , JsonGenerationException { \n\tdo { \n\t\t$F17565 ( len , Math , _outputMaxContiguous , totalLen ) _writeUTF8Segment ( utf8 , offset , len ) ; \n\t\toffset += len ; \n\t\ttotalLen -= len ; \n\t\t} \n\twhile ( totalLen > NUM00 ) ; \n\t} \n"}, {"code": "public static String hexToStringNoException ( final String data ) { \n\ttry { \n\t\treturn ConversionUtils . arrayToString ( $F142805 ( Hex , data ) ) ; \n\t\t} \n\tcatch ( DecoderException e ) $F2455 } \n"}, {"code": "public Collection $F6869 matchingScenariosAndExamples ( final Feature feature ) { \n\tfinal List < ScenarioDefinition > allScenarios = feature . getScenarioDefinitions ( ) ; \n\tfinal $F27878 matchingScenariosAndExamples = new LinkedList $F6869 $F72 ; \n\tfor ( final ScenarioDefinition scenario : allScenarios ) { \n\t\tfinal Set < Tag > allTagsForScenario = new HashSet < Tag > ( scenario . getTags ( ) ) ; \n\t\tallTagsForScenario . addAll ( feature . getTags ( ) ) ; \n\t\tif ( scenario instanceof ScenarioOutline ) { \n\t\t\tmatchingScenariosAndExamples . addAll ( matchingExamples ( ( ScenarioOutline ) scenario , allTagsForScenario ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( matches ( allTagsForScenario ) ) $F207 ( matchingScenariosAndExamples , scenario ) } \n\t\t} \n\treturn matchingScenariosAndExamples ; \n\t} \n"}, {"code": "private boolean traverse ( Tree tree , NodeRef node , $F2027 operatorNumber , boolean flip ) { \n\tboolean update = _BOOL ; \n\tint nodeNum = node . getNumber ( ) ; \n\t$F59939 ( parent , tree , node ) if ( operatorNumber != null ) { \n\t\t$F83036 ( operatorNumber ) } \n\tif ( parent != null && updateNode [ nodeNum ] ) { \n\t\tfinal double branchRate = branchRateModel . getBranchRate ( tree , node ) ; \n\t\tfinal double branchTime = branchRate * ( tree . getNodeHeight ( parent ) - tree . getNodeHeight ( node ) ) ; \n\t\tif ( branchTime < NUM00 ) $F1666 ( branchTime ) if ( flip ) { \n\t\t\tmatrixBufferHelper . flipOffset ( nodeNum ) ; \n\t\t\t} \n\t\tfinal int eigenIndex = NUM00 ; \n\t\tfinal int updateCount = branchUpdateCount [ eigenIndex ] ; \n\t\tmatrixUpdateIndices [ eigenIndex ] [ updateCount ] = matrixBufferHelper . getOffsetIndex ( nodeNum ) ; \n\t\tbranchLengths [ eigenIndex ] [ updateCount ] = branchTime ; \n\t\tbranchUpdateCount [ eigenIndex ] ++ ; \n\t\tupdate = _BOOL ; \n\t\t} \n\tif ( ! tree . isExternal ( node ) ) { \n\t\t$F9666 ( child1 , tree , node ) final $F2027 op1 = { \n\t\t\t- NUM00 } \n\t\t; \n\t\tfinal boolean update1 = traverse ( tree , child1 , op1 , flip ) ; \n\t\t$F9666 ( child2 , tree , node ) final $F2027 op2 = { \n\t\t\t- NUM00 } \n\t\t; \n\t\tfinal boolean update2 = traverse ( tree , child2 , op2 , flip ) ; \n\t\tif ( update1 || update2 ) { \n\t\t\tint x = operationCount [ operationListCount ] * Beagle . OPERATION_TUPLE_SIZE ; \n\t\t\tif ( flip ) { \n\t\t\t\tpartialBufferHelper . flipOffset ( nodeNum ) ; \n\t\t\t\t} \n\t\t\tfinal $F2027 operations = this . operations [ operationListCount ] ; \n\t\t\toperations [ x ] = partialBufferHelper . getOffsetIndex ( nodeNum ) ; \n\t\t\tif ( useScaleFactors ) { \n\t\t\t\tint n = nodeNum - tipCount ; \n\t\t\t\tif ( recomputeScaleFactors ) { \n\t\t\t\t\tscaleBufferHelper . flipOffset ( n ) ; \n\t\t\t\t\tscaleBufferIndices [ n ] = scaleBufferHelper . getOffsetIndex ( n ) ; \n\t\t\t\t\toperations [ x + NUM00 ] = scaleBufferIndices [ n ] ; \n\t\t\t\t\toperations [ x + NUM00 ] = Beagle . NONE ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\toperations [ x + NUM00 ] = Beagle . NONE ; \n\t\t\t\t\toperations [ x + NUM00 ] = scaleBufferIndices [ n ] ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( useAutoScaling ) { \n\t\t\t\t\tscaleBufferIndices [ nodeNum - tipCount ] = partialBufferHelper . getOffsetIndex ( nodeNum ) ; \n\t\t\t\t\t} \n\t\t\t\toperations [ x + NUM00 ] = Beagle . NONE ; \n\t\t\t\toperations [ x + NUM00 ] = Beagle . NONE ; \n\t\t\t\t} \n\t\t\toperations [ x + NUM00 ] = partialBufferHelper . getOffsetIndex ( child1 . getNumber ( ) ) ; \n\t\t\toperations [ x + NUM00 ] = matrixBufferHelper . getOffsetIndex ( child1 . getNumber ( ) ) ; \n\t\t\toperations [ x + NUM00 ] = partialBufferHelper . getOffsetIndex ( child2 . getNumber ( ) ) ; \n\t\t\toperations [ x + NUM00 ] = matrixBufferHelper . getOffsetIndex ( child2 . getNumber ( ) ) ; \n\t\t\toperationCount [ operationListCount ] ++ ; \n\t\t\tupdate = _BOOL ; \n\t\t\t} \n\t\t} \n\treturn update ; \n\t} \n"}, {"code": "public static String rate2speed ( double rate ) { \n\treturn NUMBER_FORMAT0 . format ( rate ) + NUM00 + GENERAL_UNIT_KBPSEC ; \n\t} \n"}, {"code": "public long next $F72 { \n\tlong result = - NUM00 ; \n\tif ( cache < NUM00 && bufferElements > NUM00 ) { \n\t\tresult = getNextFromBuffer ( ) ; \n\t\tbufferElements -- ; \n\t\t} \n\telse { \n\t\tresult = cache ; \n\t\tcache = - NUM00 ; \n\t\t} \n\tif $F5973 ( cs ) { \n\t\t$F14662 ( first , cs ) if ( result > first || result == - NUM00 ) { \n\t\t\tcs . remove ( first ) ; \n\t\t\tcache = result ; \n\t\t\tresult = first ; \n\t\t\t} \n\t\t} \n\tif ( result == - NUM00 ) $F6747 Assert . check ( previous < result , EC . GENERAL ) ; \n\tprevious = result ; \n\treadElements ++ ; \n\treturn result ; \n\t} \n"}, {"code": "public boolean isSetQueueSize $F72 $F8314 ( __isset_bit_vector , __QUEUESIZE_ISSET_ID ) "}, {"code": "public void requestContactCapabilities ( $F222029 contacts ) throws RcsServiceNotRegisteredException , RcsServiceNotAvailableException , RcsGenericException { \n\t$F161627 ( mApi ) if $F4251 ( contacts ) { \n\t\tthrow new RcsIllegalArgumentException $F580 ; \n\t\t} \n\ttry { \n\t\tmApi . requestContactCapabilities2 ( $F7044 ( contacts ) ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tRcsIllegalArgumentException . assertException ( e ) ; \n\t\tRcsServiceNotRegisteredException . assertException ( e ) ; \n\t\tthrow new RcsGenericException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "private static String toString ( double coeff ) { \n\tfinal String c = Double . toString ( coeff ) ; \n\tif $F8991 ( c ) $F16083 ( c ) else { \n\t\treturn c ; \n\t\t} \n\t} \n"}, {"code": "public static final IndexCreatedEvent createTestIndexCreationStatusWithBulkDataHit $F72 { \n\tIndexCreatedEvent toReturn = new IndexCreatedEvent ( UUID . randomUUID ( ) , $F4094 , $F4094 , createTestIndexWithBulkDataHit ( ) , NUM00 , NUM00 ) ; \n\ttoReturn . calculateValues ( ) ; \n\treturn toReturn ; \n\t} \n"}, {"code": "public boolean validate ( String value , String rule ) { \n\treturn $F8397 ( value , rule ) ; \n\t} \n"}, {"code": "public String findURIFromDoc ( int owner ) { \n\t$F2199 ( n , m_sourceTree ) for ( $F119 ( i , n ) ) { \n\t\tSourceTree sTree = ( SourceTree ) m_sourceTree . elementAt ( i ) ; \n\t\tif ( owner == sTree . m_root ) return sTree . m_url ; \n\t\t} \n\t$F1274 } \n"}, {"code": "static public final int random ( int start , int end ) { \n\treturn start + random . nextInt ( end - start + NUM00 ) ; \n\t} \n"}, {"code": "$F73603 ( desc , c , pop , Type ) "}, {"code": "public boolean offer ( E event , int taskId ) throws InterruptedException { \n\tassertNotDone ( ) ; \n\tif $F237308 ( predicate , event ) { \n\t\tthis . matched [ taskId ] = _BOOL ; \n\t\tfor ( boolean match : matched ) { \n\t\t\t$F25096 ( match , _BOOL ) } \n\t\tresponseQueue . put ( new EventHolder ( event ) ) ; \n\t\tdone = _BOOL ; \n\t\treturn _BOOL ; \n\t\t} \n\telse return _BOOL ; \n\t} \n"}, {"code": "$F4486 ( type , outputStack , n , outputStackTop , t , Math , System , top , owner ) "}, {"code": "private static AlgorithmParameterSpec algorithmParameterSpec $F72 { \n\tfinal SecureRandom random = $F5607 ; \n\tfinal $F96 bytes = new byte [ CcAes . BLOCK ] ; \n\trandom . nextBytes ( bytes ) ; \n\treturn new IvParameterSpec ( bytes ) ; \n\t} \n"}, {"code": "static ZoneOffsetTransitionRule readExternal ( DataInput in ) throws IOException { \n\t$F5952 ( data , in ) Month month = Month . of ( data > > > NUM00 ) ; \n\tint dom = ( $F155120 ( data ) > > > NUM00 ) - NUM00 ; \n\tint dowByte = $F155120 ( data ) > > > NUM00 ; \n\tDayOfWeek dow = dowByte == NUM00 ? null : DayOfWeek . of ( dowByte ) ; \n\tint timeByte = $F155120 ( data ) > > > NUM00 ; \n\tTimeDefinition defn = TimeDefinition . values ( ) [ $F155120 ( data ) > > > NUM00 ] ; \n\tint stdByte = $F155120 ( data ) > > > NUM00 ; \n\tint beforeByte = $F155120 ( data ) > > > NUM00 ; \n\t$F74266 ( afterByte , data ) LocalTime time = ( timeByte == NUM00 ? LocalTime . ofSecondOfDay ( in . readInt ( ) ) : LocalTime . of ( timeByte % NUM00 , NUM00 ) ) ; \n\tZoneOffset std = ( stdByte == NUM00 ? ZoneOffset . ofTotalSeconds ( in . readInt ( ) ) : ZoneOffset . ofTotalSeconds ( ( stdByte - NUM00 ) * NUM00 ) ) ; \n\tZoneOffset before = ( beforeByte == NUM00 ? ZoneOffset . ofTotalSeconds ( in . readInt ( ) ) : ZoneOffset . ofTotalSeconds ( std . getTotalSeconds ( ) + beforeByte * NUM00 ) ) ; \n\tZoneOffset after = ( afterByte == NUM00 ? ZoneOffset . ofTotalSeconds ( in . readInt ( ) ) : ZoneOffset . ofTotalSeconds ( std . getTotalSeconds ( ) + afterByte * NUM00 ) ) ; \n\treturn ZoneOffsetTransitionRule . of ( month , dom , dow , time , timeByte == NUM00 , defn , std , before , after ) ; \n\t} \n"}, {"code": "protected boolean isTokenChar ( char ch ) { \n\tif $F255966 ( Character , ch ) return _BOOL ; \n\tif ( Character . isISOControl ( ch ) ) return _BOOL ; \n\t$F7450 ( isHttpSeparator , ch , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "public void drawLinesAndPoints ( Graphics2D g2d , ArrayList < ComparableLabel > orderedDateSet , HashMap < ComparableLabel , Integer > dataPoints , long yMaxMark ) { \n\tint sectionWidth = this . graphWidth / orderedDateSet . size ( ) ; \n\tint xOffset = sectionWidth / NUM00 ; \n\tint yPrevValue ; \n\tint yCurrentValue ; \n\tfloat prevOffsetPerc ; \n\tfloat currentOffsetPerc ; \n\tg2d . setColor ( this . lineColor ) ; \n\tfor ( $F2277 ( i , orderedDateSet ) ) { \n\t\tif ( i != NUM00 ) { \n\t\t\tyPrevValue = dataPoints . get ( orderedDateSet . get ( i - NUM00 ) ) ; \n\t\t\tyCurrentValue = $F67701 ( dataPoints , orderedDateSet , i ) ; \n\t\t\tprevOffsetPerc = yPrevValue / ( float ) yMaxMark ; \n\t\t\tcurrentOffsetPerc = yCurrentValue / ( float ) yMaxMark ; \n\t\t\tg2d . drawLine ( this . graphLeft + ( i - NUM00 ) * sectionWidth + xOffset , this . graphBottom - Math . round ( prevOffsetPerc * this . graphHeight ) , this . graphLeft + i * sectionWidth + xOffset , Math . round ( this . graphBottom - currentOffsetPerc * this . graphHeight ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tyCurrentValue = $F67701 ( dataPoints , orderedDateSet , i ) ; \n\t\t\tcurrentOffsetPerc = yCurrentValue / ( float ) yMaxMark ; \n\t\t\tg2d . fillOval ( this . graphLeft + ( i ) * sectionWidth + xOffset - this . pointRadius , this . graphBottom - Math . round ( currentOffsetPerc * this . graphHeight ) - this . pointRadius , this . pointRadius * NUM00 , this . pointRadius * NUM00 ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F20664 public void elementType $F21324 ( name , model , memberOf , flags ) { \n\tElementType e = new ElementType ( name , model , memberOf , flags , this ) ; \n\ttheElementTypes . put ( name . toLowerCase ( ) , e ) ; \n\tif ( memberOf == M_ROOT ) theRoot = e ; \n\t} \n"}, {"code": "$F29442 ( cls , makeLogTag ) "}, {"code": "final public void println ( String s ) { \n\tWriter out = this . out ; \n\t$F8249 ( out ) try { \n\t\tif ( s == null ) $F17918 ( out , _nullChars ) else $F170077 ( out , s ) $F17918 ( out , _newline ) } \n\t$F53427 ( log , Level , e ) } \n"}, {"code": "private static URI refragUri ( URI uri , String frag ) throws URISyntaxException { \n\treturn new URI ( uri . getScheme ( ) , uri . getSchemeSpecificPart ( ) , frag ) ; \n\t} \n"}, {"code": "$F1 public void paint ( final PPaintContext ppc ) { \n\tfinal Paint paint = getPaint ( ) ; \n\tif ( paint != null ) { \n\t\tfinal Graphics2D g2 = ppc . getGraphics ( ) ; \n\t\tfinal PBounds bounds = getUnionOfChildrenBounds ( null ) ; \n\t\tif ( fillBackground ) { \n\t\t\tg2 . setPaint ( backgroundColor ) ; \n\t\t\tg2 . fillRect ( $F52991 ( bounds ) - outlinePadding , $F52994 ( bounds ) - outlinePadding , $F63353 ( bounds ) + NUM00 * outlinePadding , $F63349 ( bounds ) + NUM00 * outlinePadding ) ; \n\t\t\t} \n\t\tif ( drawOutline ) { \n\t\t\tg2 . setPaint ( lineColor ) ; \n\t\t\tg2 . drawRoundRect ( $F52991 ( bounds ) - outlinePadding , $F52994 ( bounds ) - outlinePadding , $F63353 ( bounds ) + NUM00 * outlinePadding , $F63349 ( bounds ) + NUM00 * outlinePadding , ROUNDING_WIDTH_HEIGHT , ROUNDING_WIDTH_HEIGHT ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public final synchronized $F96 toByteArray $F72 { \n\tByteArrayOutputStream baos = null ; \n\tDataOutputStream dos = null ; \n\ttry { \n\t\tbaos = new ByteArrayOutputStream $F989 ; \n\t\tdos = new DataOutputStream ( baos ) ; \n\t\tgame . writeToStream ( dos ) ; \n\t\t$F1206 ( dos ) $F11316 ( baos ) } \n\t$F20154 finally { \n\t\tif ( dos != null ) $F18072 ( dos ) if ( baos != null ) $F18072 ( baos ) } \n\t} \n"}, {"code": "public void addImport ( $F1113 PsiElement importable , $F1113 PsiFile file , $F5466 PyImportElement importElement ) { \n\tmyImports . add ( new ImportCandidateHolder ( importable , file , importElement , null ) ) ; \n\t} \n"}, {"code": "protected final void drawArrowHead ( Graphics2D g , int x , int y , int sgn ) { \n\tg . setStroke ( Strokes . getStroke ( StrokeType . SOLID , NUM00 ) ) ; \n\tint size = diagram ( ) . arrowSize ; \n\tswitch ( headType ) { \n\t\tcase CLOSED : Polygon p = new Polygon ( new int [ ] { \n\t\t\tx , x + sgn * size , x + sgn * size , x } \n\t\t, new int [ ] { \n\t\t\ty , y - size , y + size , y } \n\t\t, NUM00 ) ; \n\t\tg . fillPolygon ( p ) ; \n\t\t$F597 case OPEN : g . drawLine ( x , y , x + sgn * size , y - size ) ; \n\t\tg . drawLine ( x , y , x + sgn * size , y + size ) ; \n\t\t$F597 case ROUNDED : int left = sgn == - NUM00 ? x - NUM00 * size : x ; \n\t\tint top = y - size ; \n\t\tg . fillArc ( left , top , size * NUM00 , size * NUM00 , NUM00 , sgn * NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public void classLoaderInit ( DynamicClassLoader loader ) { \n\tEnvLoaderListener listener = _listenerRef . get ( ) ; \n\tif ( listener != null ) listener . classLoaderInit ( loader ) ; \n\t} \n"}, {"code": "private $F131 unmarshalParametersChecked ( DeserializationChecker checker , Method method , MarshalInputStream in ) throws $F6427 { \n\t$F109722 ( callID , methodCallIDCount ) MyChecker myChecker = new MyChecker ( checker , method , callID ) ; \n\tin . setStreamChecker ( myChecker ) ; \n\ttry { \n\t\t$F272051 ( types , method ) $F193824 ( values , types ) for ( $F1139 ( i , types ) ) { \n\t\t\tmyChecker . setIndex ( i ) ; \n\t\t\tvalues [ i ] = unmarshalValue ( types [ i ] , in ) ; \n\t\t\t} \n\t\tmyChecker . end ( callID ) ; \n\t\treturn values ; \n\t\t} \n\tfinally { \n\t\tin . setStreamChecker ( null ) ; \n\t\t} \n\t} \n"}, {"code": "private void loadDataFromService $F72 { \n\tList < ExceptionSensorData > exData = null ; \n\tif ( $F272757 ( fromDate , toDate ) ) { \n\t\texData = dataAccessService . getUngroupedExceptionOverview ( template , limit , fromDate , toDate , resultComparator ) ; \n\t\t} \n\telse { \n\t\texData = dataAccessService . getUngroupedExceptionOverview ( template , limit , resultComparator ) ; \n\t\t} \n\t$F725 ( exceptionSensorData ) if ( null != exData ) $F21926 ( exceptionSensorData , exData ) } \n"}, {"code": "public static String createResourceName ( String resource , Locale locale , boolean removeExtension ) { \n\tString resourceName = resource ; \n\tif ( removeExtension ) { \n\t\tif $F8991 ( resourceName ) $F14301 ( resourceName ) else if $F8991 ( resourceName ) $F14301 ( resourceName ) } \n\tif ( locale != null ) { \n\t\tif ( UtilValidate . isNotEmpty ( locale . toString ( ) ) ) $F15894 ( resourceName , locale ) } \n\treturn resourceName ; \n\t} \n"}, {"code": "public static String toString ( $F131 objects , Displayable renderer ) { \n\t$F1747 ( objects ) $F75240 ( buffer ) for ( $F1139 ( i , objects ) ) { \n\t\t$F96530 ( i , buffer ) buffer . append ( renderer . displayString ( objects [ i ] ) ) ; \n\t\t} \n\t$F92 ( buffer ) } \n"}, {"code": "void drawIcon ( Graphics g , int ax , int ay , int aw , int ah , float align , Component c ) { \n\tint gap = isLeftToRight ? - ( img . getIconWidth ( ) + bulletgap ) : ( aw + bulletgap ) ; \n\tint x = ax + gap ; \n\tint y = Math . max ( ay , ay + $F2354 ( align , ah ) - img . getIconHeight ( ) ) ; \n\timg . paintIcon ( c , g , x , y ) ; \n\t} \n"}, {"code": "public int syncQuery ( String query ) { \n\t$F657 ( start , System ) int modified = execute ( NUM00 , UPDATE_COUNT_RESPONSE , query ) ; \n\tlog . debug ( NUM00 , System . currentTimeMillis ( ) - start , modified ) ; \n\treturn modified ; \n\t} \n"}, {"code": "public static void fullReset $F72 { \n\tresetRuntime ( ) ; \n\t$F54044 ( readProperties ) } \n"}, {"code": "private BufferedImage toBufferedImage ( final Image image ) { \n\tif ( image instanceof BufferedImage ) { \n\t\treturn ( BufferedImage ) image ; \n\t\t} \n\tif ( image instanceof VolatileImage ) { \n\t\tVolatileImage volatileImage = ( VolatileImage ) image ; \n\t\treturn volatileImage . getSnapshot ( ) ; \n\t\t} \n\tGraphicsEnvironment graphicsEnvironment = GraphicsEnvironment . getLocalGraphicsEnvironment ( ) ; \n\tGraphicsDevice graphicsDevice = graphicsEnvironment . getDefaultScreenDevice ( ) ; \n\tGraphicsConfiguration graphicsConfiguration = graphicsDevice . getDefaultConfiguration ( ) ; \n\tBufferedImage bufferedImage = graphicsConfiguration . createCompatibleImage ( image . getWidth ( null ) , image . getHeight ( null ) ) ; \n\t$F5115 ( g , bufferedImage ) $F37616 ( g , image ) $F355 ( g ) return bufferedImage ; \n\t} \n"}, {"code": "public static void writeByteArrayToFile ( File file , $F96 data , boolean append ) throws IOException { \n\tOutputStream out = null ; \n\ttry { \n\t\tout = openOutputStream ( file , append ) ; \n\t\tout . write ( data ) ; \n\t\t$F59 ( out ) } \n\t$F18090 ( IOUtils , out ) } \n"}, {"code": "public final boolean isCancelled $F72 { \n\tif ( cancelled ) $F1941 ( pass , cancelled ) else $F1210 ( fail ) return cancelled ; \n\t} \n"}, {"code": "public void remove ( DirectedEdge de ) $F106 ( outEdges , de ) "}, {"code": "$F1 public boolean eventGeneratable ( String eventName ) { \n\t$F1933 ( m_listenee , _BOOL ) if $F78362 ( eventName ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( m_listenee instanceof DataSource ) { \n\t\tif ( m_listenee instanceof EventConstraints ) { \n\t\t\tEventConstraints ec = ( EventConstraints ) m_listenee ; \n\t\t\treturn ec . eventGeneratable ( eventName ) ; \n\t\t\t} \n\t\t} \n\tif ( m_listenee instanceof TrainingSetProducer ) { \n\t\tif ( m_listenee instanceof EventConstraints ) { \n\t\t\tEventConstraints ec = ( EventConstraints ) m_listenee ; \n\t\t\tif $F1264 ( eventName ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\tif ( ! ec . eventGeneratable ( NUM00 ) ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( m_listenee instanceof TestSetProducer ) { \n\t\tif ( m_listenee instanceof EventConstraints ) { \n\t\t\tEventConstraints ec = ( EventConstraints ) m_listenee ; \n\t\t\tif $F1264 ( eventName ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\tif ( ! ec . eventGeneratable ( NUM00 ) ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 protected void onMessageOnProducerThread ( T msg ) { \n\t$F8934 ( _lock ) try { \n\t\tif $F2979 ( _pending ) { \n\t\t\t_queue . schedule ( _flushRunnable , _interval , _timeUnit ) ; \n\t\t\t} \n\t\t_pending . add ( msg ) ; \n\t\t} \n\t$F796 ( _lock ) } \n"}, {"code": "public Builder untilDate ( Date date ) { \n\tuntilDate = QUERY_DATE . format ( date ) ; \n\treturn this ; \n\t} \n"}, {"code": "private boolean isInThumbRange ( float touchX , double normalizedThumbValue ) { \n\treturn Math . abs ( touchX - normalizedToScreen ( normalizedThumbValue ) ) <= mThumbHalfWidth ; \n\t} \n"}, {"code": "public static void cleanupAllFiles ( FileSystem fileSystem , String BaseUri ) throws IOException { \n\ttry { \n\t\tif ( fileSystem != null ) { \n\t\t\t$F424 ( rootDir , BaseUri ) FileStatus [ ] files = fileSystem . listStatus ( rootDir ) ; \n\t\t\tfor ( FileStatus file : files ) { \n\t\t\t\tfileSystem . delete ( file . getPath ( ) , _BOOL ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) $F21338 ( LOG ) } \n"}, {"code": "$F1 public boolean canBeCollidedWith $F72 { \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void update ( long duration , TimeUnit unit ) { \n\tupdate ( unit . toNanos ( duration ) ) ; \n\t} \n"}, {"code": "public FileInputStream openRead $F72 throws FileNotFoundException { \n\tif $F3428 ( mBackupName ) { \n\t\t$F1900 ( mBaseName ) mBackupName . renameTo ( mBaseName ) ; \n\t\t} \n\t$F11000 ( mBaseName ) } \n"}, {"code": "public void submit ( String queueName , DispatcherTask dispatcherTask ) { \n\tsynchronized ( syncRoot ) { \n\t\tDispatcherTaskRunner currentTaskRunner = currentTasksMap . get ( queueName ) ; \n\t\tif ( currentTaskRunner == null ) { \n\t\t\tcurrentTaskRunner = new DispatcherTaskRunner ( queueName , dispatcherTask ) ; \n\t\t\tcurrentTasksMap . put ( queueName , currentTaskRunner ) ; \n\t\t\texecutorService . execute ( currentTaskRunner ) ; \n\t\t\t} \n\t\telse { \n\t\t\tenqueueNextTask ( queueName , dispatcherTask ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static Executor createTaskDistributor $F72 { \n\treturn Executors . newCachedThreadPool ( createThreadFactory ( Thread . NORM_PRIORITY , NUM00 ) ) ; \n\t} \n"}, {"code": "public void dump ( Writer writer ) { \n\tPrintWriter pw = new PrintWriter ( new BufferedWriter ( writer ) ) ; \n\t$F8438 ( pw ) $F8438 ( pw ) pw . println ( NUM00 + ( int ) audioFormat . getSampleRate ( ) ) ; \n\tpw . println ( NUM00 + samples . length / NUM00 ) ; \n\tpw . println ( NUM00 + audioFormat . getChannels ( ) ) ; \n\tif ( samples != null ) { \n\t\tfor ( $F24429 ( i , samples ) ) { \n\t\t\tpw . println ( WaveUtils . bytesToShort ( $F149550 ( samples , i ) ) ) ; \n\t\t\t} \n\t\t} \n\t$F1206 ( pw ) } \n"}, {"code": "public void addFieldBuffered ( VEditor editor , GridField mField ) { \n\twrap = mField != null ? ! mField . isSameLine ( ) : _BOOL ; \n\tif ( prevEditor != null && prevField != null ) addField ( prevEditor , prevField ) ; \n\tprevEditor = editor ; \n\tprevField = mField ; \n\t} \n"}, {"code": "public ExpandRoomFreespaceIncomplete add_incomplete_expansion_room ( ShapeTile p_shape , int p_layer , ShapeTile p_contained_shape ) { \n\tExpandRoomFreespaceIncomplete new_room = new ExpandRoomFreespaceIncomplete ( p_shape , p_layer , p_contained_shape ) ; \n\tincomplete_expansion_rooms . add ( new_room ) ; \n\treturn new_room ; \n\t} \n"}, {"code": "static double computeDesiredEllipsoidMagnitude ( final PlanetModel planetModel , final double x , final double y , final double z ) { \n\treturn NUM00 / Math . sqrt ( x * x * planetModel . inverseAbSquared + y * y * planetModel . inverseAbSquared + z * z * planetModel . inverseCSquared ) ; \n\t} \n"}, {"code": "public static String trim ( CharSequence s ) { \n\t$F1338 ( s ) $F1150 ( m , sTrimPattern , s ) return m . replaceAll ( NUM00 ) ; \n\t} \n"}, {"code": "private void validateVNXFileSMISProviderMandatoryDetails ( StorageSystemRequestParam param ) { \n\tArgValidator . checkFieldValidIP ( param . getSmisProviderIP ( ) , NUM00 ) ; \n\tArgValidator . checkFieldNotNull ( param . getSmisPortNumber ( ) , NUM00 ) ; \n\tArgValidator . checkFieldRange ( param . getSmisPortNumber ( ) , NUM00 , NUM00 , NUM00 ) ; \n\tArgValidator . checkFieldNotEmpty ( param . getSmisUserName ( ) , NUM00 ) ; \n\tArgValidator . checkFieldNotEmpty ( param . getSmisPassword ( ) , NUM00 ) ; \n\t} \n"}, {"code": "private static NSObject parseObject ( Node n ) throws ParseException , IOException { \n\t$F48115 ( type , n ) if $F3057 ( type ) { \n\t\tNSDictionary dict = new NSDictionary $F72 ; \n\t\t$F27878 children = filterElementNodes ( n . getChildNodes ( ) ) ; \n\t\tfor ( $F48125 ( i , children ) ) { \n\t\t\t$F22142 ( key , children , i ) Node val = children . get ( i + NUM00 ) ; \n\t\t\tString keyString = getNodeTextContents ( key ) ; \n\t\t\t$F39715 ( dict , keyString , parseObject , val ) } \n\t\treturn dict ; \n\t\t} \n\telse if $F3057 ( type ) { \n\t\t$F27878 children = filterElementNodes ( n . getChildNodes ( ) ) ; \n\t\tNSArray array = new NSArray $F716 ( children ) ; \n\t\tfor ( $F2277 ( i , children ) ) { \n\t\t\tarray . setValue ( i , parseObject ( children . get ( i ) ) ) ; \n\t\t\t} \n\t\treturn array ; \n\t\t} \n\telse if $F3057 ( type ) { \n\t\treturn new NSNumber ( _BOOL ) ; \n\t\t} \n\telse if $F3057 ( type ) { \n\t\treturn new NSNumber ( _BOOL ) ; \n\t\t} \n\telse if $F3057 ( type ) { \n\t\treturn new NSNumber ( getNodeTextContents ( n ) ) ; \n\t\t} \n\telse if $F3057 ( type ) { \n\t\treturn new NSNumber ( getNodeTextContents ( n ) ) ; \n\t\t} \n\telse if $F3057 ( type ) { \n\t\treturn new NSString ( getNodeTextContents ( n ) ) ; \n\t\t} \n\telse if $F3057 ( type ) { \n\t\treturn new NSData ( getNodeTextContents ( n ) ) ; \n\t\t} \n\telse if $F3057 ( type ) { \n\t\treturn new NSDate ( getNodeTextContents ( n ) ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public void createAccrualBasedJournalEntriesAndReversalsForLoanCharges ( final Office office , final String currencyCode , final Integer accountTypeToBeDebited , final Integer accountTypeToBeCredited , final Long loanProductId , final Long loanId , final String transactionId , final Date transactionDate , final BigDecimal totalAmount , final Boolean isReversal , final List < ChargePaymentDTO > chargePaymentDTOs ) { \n\tGLAccount receivableAccount = getLinkedGLAccountForLoanCharges ( loanProductId , accountTypeToBeDebited , null ) ; \n\tfinal Map < GLAccount , BigDecimal > $F161023 ( creditDetailsMap ) ; \n\tfor ( final ChargePaymentDTO chargePaymentDTO : chargePaymentDTOs ) { \n\t\tfinal Long chargeId = chargePaymentDTO . getChargeId ( ) ; \n\t\tfinal GLAccount chargeSpecificAccount = getLinkedGLAccountForLoanCharges ( loanProductId , accountTypeToBeCredited , chargeId ) ; \n\t\tBigDecimal chargeSpecificAmount = chargePaymentDTO . getAmount ( ) ; \n\t\tif $F1710 ( creditDetailsMap , chargeSpecificAccount ) { \n\t\t\tfinal BigDecimal existingAmount = creditDetailsMap . get ( chargeSpecificAccount ) ; \n\t\t\t$F10950 ( chargeSpecificAmount , existingAmount ) } \n\t\tcreditDetailsMap . put ( chargeSpecificAccount , chargeSpecificAmount ) ; \n\t\t} \n\tBigDecimal totalCreditedAmount = BigDecimal . ZERO ; \n\tfor ( final Map . Entry < GLAccount , BigDecimal > entry : creditDetailsMap . entrySet ( ) ) { \n\t\tfinal GLAccount account = entry . getKey ( ) ; \n\t\tfinal BigDecimal amount = entry . getValue ( ) ; \n\t\t$F10950 ( totalCreditedAmount , amount ) if ( isReversal ) { \n\t\t\tcreateDebitJournalEntryForLoan ( office , currencyCode , account , loanId , transactionId , transactionDate , amount ) ; \n\t\t\tcreateCreditJournalEntryForLoan ( office , currencyCode , receivableAccount , loanId , transactionId , transactionDate , amount ) ; \n\t\t\t} \n\t\telse { \n\t\t\tcreateDebitJournalEntryForLoan ( office , currencyCode , receivableAccount , loanId , transactionId , transactionDate , amount ) ; \n\t\t\tcreateCreditJournalEntryForLoan ( office , currencyCode , account , loanId , transactionId , transactionDate , amount ) ; \n\t\t\t} \n\t\t} \n\tif ( totalAmount . compareTo ( totalCreditedAmount ) != NUM00 ) { \n\t\tthrow new PlatformDataIntegrityException ( NUM00 , NUM00 , totalCreditedAmount , totalAmount ) ; \n\t\t} \n\t} \n"}, {"code": "private ArtLocateResult calculate_next_trace ( boolean p_layer_changed , boolean p_at_fanout_end ) { \n\tCollection < PlaPointFloat > corner_list = new LinkedList < PlaPointFloat > $F72 ; \n\tcorner_list . add ( current_from_point ) ; \n\tif ( ! p_at_fanout_end ) { \n\t\tPlaPointFloat adjusted_start_corner = adjust_start_corner ( ) ; \n\t\tif ( adjusted_start_corner != current_from_point ) { \n\t\t\tPlaPointFloat add_corner = calculate_additional_corner ( current_from_point , adjusted_start_corner , _BOOL , angle_restriction ) ; \n\t\t\tcorner_list . add ( add_corner ) ; \n\t\t\tcorner_list . add ( adjusted_start_corner ) ; \n\t\t\tprevious_from_point = current_from_point ; \n\t\t\tcurrent_from_point = adjusted_start_corner ; \n\t\t\t} \n\t\t} \n\tPlaPointFloat prev_corner = current_from_point ; \n\tfor ( $F6268 ( c_limit ) ) { \n\t\tCollection < PlaPointFloat > next_corners = calculate_next_trace_corners ( ) ; \n\t\tif $F2979 ( next_corners ) $F597 for ( PlaPointFloat curr_next_corner : next_corners ) { \n\t\t\t$F73688 ( curr_next_corner , prev_corner ) corner_list . add ( curr_next_corner ) ; \n\t\t\tprevious_from_point = current_from_point ; \n\t\t\tcurrent_from_point = curr_next_corner ; \n\t\t\tprev_corner = curr_next_corner ; \n\t\t\t} \n\t\t} \n\tint next_layer = current_trace_layer ; \n\tif ( p_layer_changed ) { \n\t\tcurrent_from_door_index = current_target_door_index + NUM00 ; \n\t\tExpandRoomComplete next_room = backtrack_array [ current_from_door_index ] . next_room ; \n\t\tif ( next_room != null ) { \n\t\t\tnext_layer = next_room . get_layer ( ) ; \n\t\t\t} \n\t\t} \n\tPlaPointIntAlist rounded_corner_list = new PlaPointIntAlist $F716 ( corner_list ) ; \n\tPlaPointInt prev_point = null ; \n\tfor ( PlaPointFloat a_float : corner_list ) { \n\t\tPlaPointInt curr_point = a_float . round ( ) ; \n\t\tif $F1238 ( curr_point , prev_point ) $F598 rounded_corner_list . add ( curr_point ) ; \n\t\tprev_point = curr_point ; \n\t\t} \n\tArtLocateResult result = new ArtLocateResult ( rounded_corner_list , current_trace_layer ) ; \n\tcurrent_trace_layer = next_layer ; \n\treturn result ; \n\t} \n"}, {"code": "public static < ValueT > ByteBuffer toByteBuffer ( ValueT obj ) throws IOException { \n\t$F5475 ( bytes ) ByteArrayOutputStream bos = null ; \n\tObjectOutputStream oos = null ; \n\ttry { \n\t\t$F1659 ( bos ) $F111162 ( oos , bos ) oos . writeObject ( obj ) ; \n\t\t$F1206 ( oos ) $F3031 ( bytes , bos ) } \n\t$F85840 ( oos , bos ) return ByteBuffer . wrap ( bytes ) ; \n\t} \n"}, {"code": "$F69111 ( ctx , bytes ) "}, {"code": "$F1 protected Sensor createNewSensor ( String systemName , String userName ) { \n\t$F197555 ( log , systemName , userName ) Sensor s ; \n\tString sName = SerialAddress . normalizeSystemName ( systemName ) ; \n\tif $F3057 ( sName ) $F337969 ( log , systemName ) s = getBySystemName ( sName ) ; \n\tif ( s != null ) $F337969 ( log , systemName ) String altName = SerialAddress . convertSystemNameToAlternate ( sName ) ; \n\ts = getBySystemName ( altName ) ; \n\tif ( s != null ) { \n\t\tlog . error ( NUM00 + systemName + NUM00 + altName + NUM00 ) ; \n\t\t$F1274 } \n\tint bit = SerialAddress . getBitFromSystemName ( sName ) ; \n\tif ( ( bit <= NUM00 ) || ( bit >= SENSORSPERNODE ) ) { \n\t\tlog . error ( $F11846 ( Integer , bit ) + Integer . toString ( SENSORSPERNODE - NUM00 ) ) ; \n\t\t$F1274 } \n\tif ( userName == null ) { \n\t\ts = new SerialSensor ( sName ) ; \n\t\t} \n\telse { \n\t\ts = new SerialSensor ( sName , userName ) ; \n\t\t} \n\tSerialNode node = SerialAddress . getNodeFromSystemName ( sName ) ; \n\tif ( node == null ) { \n\t\t$F28293 ( log , sName ) return s ; \n\t\t} \n\tnode . registerSensor ( s , bit ) ; \n\tif $F585 ( log ) { \n\t\tlog . debug ( NUM00 + s . getSystemName ( ) + NUM00 + node ) ; \n\t\t} \n\treturn s ; \n\t} \n"}, {"code": "private $F1986 max $F6762 ( distances1 , distances2 ) { \n\tif $F11279 ( distances1 , distances2 ) $F11389 $F40939 ( result , distances1 ) for ( $F1139 ( i , distances1 ) ) { \n\t\tresult [ i ] = Math . max ( distances1 [ i ] , distances2 [ i ] ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public void fill_shape ( PlaPointFloat [ ] p_points , Graphics p_g , Color p_color , double p_translucency_factor ) { \n\t$F8249 ( p_color ) $F20230 ( g2 , p_g ) $F157439 ( draw_polygon ) for ( $F1139 ( index , p_points ) ) { \n\t\tPoint2D curr_corner = coordinate_transform . board_to_screen ( p_points [ index ] ) ; \n\t\tdraw_polygon . addPoint ( $F70722 ( Math , curr_corner ) , $F70724 ( Math , curr_corner ) ) ; \n\t\t} \n\tg2 . setColor ( p_color ) ; \n\tset_translucency ( g2 , p_translucency_factor ) ; \n\t$F34716 ( g2 , RenderingHints ) g2 . fill ( draw_polygon ) ; \n\t} \n"}, {"code": "public void writeExif ( InputStream jpegStream , OutputStream exifOutStream ) throws IOException { \n\t$F26831 ( jpegStream , exifOutStream , NULL_ARGUMENT_ ) OutputStream s = getExifWriterStream ( exifOutStream ) ; \n\tdoExifStreamIO ( jpegStream , s ) ; \n\t$F1206 ( s ) } \n"}, {"code": "$F2192 ( bits , result , byteSegments , codewordPosition , d1 , unrandomize255State , count , FormatException , bytes , i , uee ) "}, {"code": "public void goToCurrentDay $F72 { \n\tint monthDifference = FlexibleCalendarHelper . getMonthDifference ( displayYear , displayMonth ) ; \n\t$F4377 ( cal , Calendar ) selectedDateItem . setDay ( $F21625 ( cal , Calendar ) ) ; \n\tselectedDateItem . setMonth ( $F21623 ( cal , Calendar ) ) ; \n\tselectedDateItem . setYear ( $F21621 ( cal , Calendar ) ) ; \n\tif ( disableAutoDateSelection ) { \n\t\tthis . userSelectedItem = selectedDateItem . clone ( ) ; \n\t\t} \n\tif ( monthDifference != NUM00 ) { \n\t\tresetAdapters = _BOOL ; \n\t\tif ( monthDifference < NUM00 ) { \n\t\t\tmonthInfPagerAdapter . setFakeCount ( lastPosition ) ; \n\t\t\t$F4176 ( monthInfPagerAdapter ) } \n\t\tshouldOverrideComputedDate = _BOOL ; \n\t\tmoveToPosition ( monthDifference ) ; \n\t\t} \n\telse { \n\t\tFlexibleCalendarGridAdapter currentlyVisibleAdapter = monthViewPagerAdapter . getMonthAdapterAtPosition ( lastPosition % MonthViewPagerAdapter . VIEWS_IN_PAGER ) ; \n\t\t$F4176 ( currentlyVisibleAdapter ) } \n\t} \n"}, {"code": "public static $F96 toIPv4AddressBytes ( int ipAddress ) { \n\treturn new byte [ ] { \n\t\t$F53722 ( ipAddress ) , $F53722 ( ipAddress ) , $F53722 ( ipAddress ) , ( byte ) ipAddress } \n\t; \n\t} \n"}, {"code": "$F38759 ( isValidTemplate , template ) "}, {"code": "public Object take $F72 throws InterruptedException , ForceReattemptException $F59421 "}, {"code": "$F22330 public static double normalCdf ( double y ) { \n\tdouble f , h ; \n\tint j ; \n\tdouble dcphi , x , z , f1 , f2 , f3 , f4 , f5 ; \n\tx = y ; \n\tif $F33322 ( Math , x ) { \n\t\tdcphi = NUM00 ; \n\t\t} \n\telse { \n\t\tj = ( int ) Math . floor ( Math . abs ( x ) * NUM00 + NUM00 ) ; \n\t\tz = j * NUM00 ; \n\t\th = Math . abs ( x ) - z ; \n\t\tf = r [ j ] ; \n\t\tf1 = f * z - NUM00 ; \n\t\tf2 = f + z * f1 ; \n\t\tf3 = f1 * NUM00 + z * f2 ; \n\t\tf4 = f2 * NUM00 + z * f3 ; \n\t\tf5 = f3 * NUM00 + z * f4 ; \n\t\tdcphi = f + h * ( f1 * NUM00 + h * ( f2 * NUM00 + h * ( f3 * NUM00 + h * ( f4 * NUM00 + h * f5 ) ) ) ) / NUM00 ; \n\t\tdcphi = dcphi * NUM00 * Math . exp ( x * - NUM00 * x ) ; \n\t\t} \n\tif ( x < NUM00 ) { \n\t\treturn dcphi ; \n\t\t} \n\telse { \n\t\treturn ( NUM00 - dcphi ) ; \n\t\t} \n\t} \n"}, {"code": "private void destroy $F72 { \n\tif $F14148 ( log , Level ) { \n\t\tlog . finest ( this + NUM00 ) ; \n\t\t} \n\ttry { \n\t\t_socket . forceShutdown ( ) ; \n\t\t} \n\t$F115820 try $F5795 ( closeConnection ) catch ( Throwable e ) $F24254 ( log , Level , e ) _port . removeConnection ( this ) ; \n\t} \n"}, {"code": "int atom $F72 throws RESyntaxException { \n\tint ret = node ( RE . OP_ATOM , NUM00 ) ; \n\tint lenAtom = NUM00 ; \n\tatomLoop : while ( idx < len ) { \n\t\tif $F7526 ( idx , len ) { \n\t\t\t$F17494 ( c , pattern , idx ) if $F11983 ( pattern , idx ) { \n\t\t\t\tint idxEscape = idx ; \n\t\t\t\tescape ( ) ; \n\t\t\t\tif ( idx < len ) $F7458 ( c , pattern , idx ) idx = idxEscape ; \n\t\t\t\t} \n\t\t\tswitch ( c ) { \n\t\t\t\t$F1262 $F1262 $F1262 $F1262 if ( lenAtom != NUM00 ) { \n\t\t\t\t\tbreak atomLoop ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tswitch $F31372 ( pattern , idx ) { \n\t\t\t$F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 break atomLoop ; \n\t\t\t$F1262 $F1262 $F1262 $F1262 if ( lenAtom == NUM00 ) $F1210 ( syntaxError ) break atomLoop ; \n\t\t\t$F1262 { \n\t\t\t\tint idxBeforeEscape = idx ; \n\t\t\t\tint c = escape ( ) ; \n\t\t\t\tif $F128757 ( c , ESC_MASK ) { \n\t\t\t\t\tidx = idxBeforeEscape ; \n\t\t\t\t\tbreak atomLoop ; \n\t\t\t\t\t} \n\t\t\t\temit ( ( char ) c ) ; \n\t\t\t\tlenAtom ++ ; \n\t\t\t\t} \n\t\t\t$F597 $F1267 emit ( pattern . charAt ( idx ++ ) ) ; \n\t\t\tlenAtom ++ ; \n\t\t\t$F597 } \n\t\t} \n\tif ( lenAtom == NUM00 ) $F5795 ( internalError ) instruction [ ret + RE . offsetOpdata ] = ( char ) lenAtom ; \n\treturn ret ; \n\t} \n"}, {"code": "$F1 public void drawItem $F98560 ( g2 , state , dataArea , plot , domainAxis , rangeAxis , dataset , row , column , pass ) { \n\tint visibleRow = state . getVisibleSeriesIndex ( row ) ; \n\t$F44858 ( visibleRow ) $F98564 ( dataValue , dataset , row , column ) $F2329 ( dataValue ) $F50466 ( value , dataValue ) $F10709 ( orientation , plot ) double barW0 = calculateBarW0 ( plot , orientation , dataArea , domainAxis , state , visibleRow , column ) ; \n\t$F82906 ( edge , plot ) $F31931 ( barL , rangeAxis , value , dataArea , edge ) Line2D line ; \n\tdouble x , y ; \n\tif $F441256 ( orientation ) { \n\t\tx = barL ; \n\t\ty = barW0 + $F338541 ( state ) ; \n\t\tline = new $F69931 ( barL , barW0 , barL , barW0 + state . getBarWidth ( ) ) ; \n\t\t} \n\telse { \n\t\tx = barW0 + $F338541 ( state ) ; \n\t\ty = barL ; \n\t\tline = new $F69931 ( barW0 , barL , barW0 + state . getBarWidth ( ) , barL ) ; \n\t\t} \n\tif ( state . getElementHinting ( ) ) { \n\t\tbeginElementGroup ( g2 , dataset . getRowKey ( row ) , dataset . getColumnKey ( column ) ) ; \n\t\t} \n\tStroke itemStroke = getItemStroke ( row , column ) ; \n\tPaint itemPaint = getItemPaint ( row , column ) ; \n\tg2 . setStroke ( itemStroke ) ; \n\tg2 . setPaint ( itemPaint ) ; \n\tg2 . draw ( line ) ; \n\tif ( state . getElementHinting ( ) ) { \n\t\tendElementGroup ( g2 ) ; \n\t\t} \n\tCategoryItemLabelGenerator generator = getItemLabelGenerator ( row , column ) ; \n\tif ( generator != null && isItemLabelVisible ( row , column ) ) $F98616 ( drawItemLabel , g2 , orientation , dataset , row , column , x , y , value ) $F12747 ( datasetIndex , plot , dataset ) updateCrosshairValues ( state . getCrosshairState ( ) , dataset . getRowKey ( row ) , dataset . getColumnKey ( column ) , value , datasetIndex , barW0 , barL , orientation ) ; \n\t$F98625 ( entities , state ) if ( entities != null ) { \n\t\taddItemEntity ( entities , dataset , row , column , line . getBounds ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F4203 UnaryOperator < $F5675 > from ( $F6877 commandLineUdids , Function < T , ICloud . MBSBackup > mbsBackup , Function < ICloud . MBSBackup , String > formatter , Printer out , InputStream in ) { \n\treturn commandLineUdids . isEmpty ( ) ? new User ( mbsBackup , out , in , formatter ) : new Udid ( mbsBackup , out , in , $F7044 ( commandLineUdids ) ) ; \n\t} \n"}, {"code": "public boolean isNetworkConnected $F72 { \n\tConnectivityManager connectivityManager = ( ConnectivityManager ) getSystemService ( CONNECTIVITY_SERVICE ) ; \n\t$F40397 ( networkInfo , connectivityManager ) return networkInfo != null && networkInfo . isConnectedOrConnecting ( ) ; \n\t} \n"}, {"code": "$F1 public void onTabClosing ( long time , int id ) { \n\treset ( ) ; \n\tforceAnimationToFinish ( ) ; \n\tTabModel model = mTabModelSelector . getModelForTabId ( id ) ; \n\tif ( model != null ) { \n\t\tmClosedTab = createLayoutTab ( id , model . isIncognito ( ) , NO_CLOSE_BUTTON , NO_TITLE ) ; \n\t\tmClosedTab . setBorderAlpha ( NUM00 ) ; \n\t\tmLayoutTabs = new LayoutTab [ ] { \n\t\t\tmClosedTab } \n\t\t; \n\t\tupdateCacheVisibleIds ( new $F114083 $F6 ( Arrays , id ) ) ; \n\t\t} \n\telse $F39233 ( mLayoutTabs , mClosedTab ) super . onTabClosing ( time , id ) ; \n\t} \n"}, {"code": "public void put ( String name , String supported , String authScheme , String level , boolean isDefault ) { \n\tSAMLv2AuthContext c = new SAMLv2AuthContext $F72 ; \n\tc . name = name ; \n\tc . supported = supported ; \n\tif ( $F35624 ( authScheme ) && authScheme != null ) { \n\t\t$F24867 ( index , authScheme ) c . value = authScheme . substring ( index + NUM00 ) ; \n\t\tc . key = authScheme . substring ( NUM00 , index ) ; \n\t\t} \n\telse { \n\t\tc . value = NUM00 ; \n\t\tc . key = NUM00 ; \n\t\t} \n\tc . level = level ; \n\tc . isDefault = isDefault ; \n\tcollections . put ( name , c ) ; \n\t} \n"}, {"code": "public final void close ( LsServerPacket closePacket , boolean forced ) { \n\tsynchronized ( guard ) { \n\t\t$F84963 ( isWriteDisabled ) $F630 ( log , closePacket ) pendingClose = _BOOL ; \n\t\tisForcedClosing = forced ; \n\t\t$F725 ( sendMsgQueue ) sendMsgQueue . addLast ( closePacket ) ; \n\t\tenableWriteInterest ( ) ; \n\t\t} \n\t} \n"}, {"code": "private void replaceCollapsedEdges $F72 { \n\t$F19151 ( newEdges ) for ( $F2774 ( it , edgeList ) ) { \n\t\t$F17998 ( e , it ) if ( e . isCollapsed ( ) ) { \n\t\t\t$F7042 ( it ) newEdges . add ( e . getCollapsedEdge ( ) ) ; \n\t\t\t} \n\t\t} \n\tedgeList . addAll ( newEdges ) ; \n\t} \n"}, {"code": "$F184647 ( v , buf , name , av , i , b , readAnnotationValues , _BOOL , readConst , readUnsignedShort , readInt , items , Boolean , readUTF8 , Type , size , this , bv , zv , sv , cv , iv , lv , readLong , fv , Float , dv , Double ) "}, {"code": "public void timingEvent ( float fraction ) { \n\tcurrent . x = ( int ) ( start . x + $F27158 ( end , start ) * fraction ) ; \n\tcurrent . y = ( int ) ( start . y + $F27159 ( end , start ) * fraction ) ; \n\ttrack . setCarPosition ( current ) ; \n\t} \n"}, {"code": "public SeaGlassTitlePane ( JRootPane rootPane , SeaGlassRootPaneUI ui ) { \n\tthis . rootPane = rootPane ; \n\tthis . rootPaneUI = ui ; \n\trootParent = ( RootPaneContainer ) rootPane . getParent ( ) ; \n\tinstallTitlePane ( ) ; \n\t} \n"}, {"code": "public String toString $F72 { \n\t$F83 ( s ) for ( Item item : this ) $F86403 ( s , item ) $F92 ( s ) } \n"}, {"code": "public void writeLong ( long value ) throws IOException { \n\tcheckWritePrimitiveTypes ( ) ; \n\tprimitiveTypes . writeLong ( value ) ; \n\t} \n"}, {"code": "static public URL findContainerXML ( String _containerName ) { \n\tURL _containerNameURL = null ; \n\tString _containerNameFilePath = Constants . Container . CONTAINER_CONFIG_DIRECTORY + NUM00 + _containerName + NUM00 ; \n\t_containerNameURL = getResourceURL ( _containerNameFilePath ) ; \n\tif ( _containerNameURL != null ) { \n\t\tif $F78772 ( _logger , Level ) $F68974 ( _logger , _containerNameURL ) } \n\treturn _containerNameURL ; \n\t} \n"}, {"code": "public static $F3803 expandWildcards ( Iterable $F11299 dirs , $F3803 names , Backend forBackend ) { \n\t$F3803 $F37973 ( result , names ) ; \n\tfor ( String name : names ) { \n\t\texpandWildcard ( result , dirs , name , forBackend ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public static Charset forName ( String charsetName ) $F13736 ( forName , charsetName ) "}, {"code": "public NSNumber ( int i ) { \n\tdoubleValue = longValue = i ; \n\ttype = INTEGER ; \n\t} \n"}, {"code": "public static void dump ( String message , $F11340 stackTrace ) $F254297 ( dump , message , Arrays , stackTrace ) "}, {"code": "public void execQuery ( String sql , ExecQueryCallbackFunctionIF aListener ) throws GenericEntityException { \n\t$F113304 ( _connection , getConnection ) try { \n\t\t$F37492 ( Debug , sql , module ) executeQuery ( sql ) ; \n\t\tboolean keepGoing = _BOOL ; \n\t\twhile ( keepGoing && _rs . next ( ) ) { \n\t\t\tkeepGoing = aListener . processNextRow ( _rs ) ; \n\t\t\t} \n\t\tif ( _manualTX ) $F19092 ( _connection ) } \n\tcatch ( SQLException sqle ) { \n\t\tDebug . logWarning ( NUM00 + sql + NUM00 , module ) ; \n\t\t$F102466 ( Debug , sqle , module ) throw new GenericEntityException ( NUM00 + _sql , sqle ) ; \n\t\t} \n\t$F49978 ( close ) } \n"}, {"code": "private Name cacheName ( String sig ) { \n\t$F83 ( buf ) if $F3106 ( sig ) { \n\t\tbuf = buf . append ( NUM00 ) ; \n\t\twhile $F3106 ( sig ) { \n\t\t\tbuf = buf . append ( target . syntheticNameChar ( ) ) ; \n\t\t\t$F3108 ( sig ) } \n\t\tif $F3106 ( sig ) $F8994 ( sig ) } \n\telse { \n\t\tbuf = buf . append ( NUM00 + target . syntheticNameChar ( ) ) ; \n\t\t} \n\tbuf = buf . append ( sig . replace ( NUM00 , target . syntheticNameChar ( ) ) ) ; \n\treturn names . fromString ( buf . toString ( ) ) ; \n\t} \n"}, {"code": "$F1 public boolean eIsSet ( int featureID ) { \n\tswitch ( featureID ) { \n\t\tcase EipPackage . CONDITIONAL_ROUTE__CONDITION : $F6439 ( CONDITION_EDEFAULT , condition ) case EipPackage . CONDITIONAL_ROUTE__CHANNEL : return channel != null ; \n\t\t} \n\t$F6444 ( super , featureID ) } \n"}, {"code": "public static native String mapLibraryName ( String libname ) ; \n"}, {"code": "public Matcher next $F72 throws IOException { \n\treadahead ( ) ; \n\tif ( matches == null ) $F6747 Matcher matcher = matches . next ( ) ; \n\tif ( discard ) { \n\t\tPattern pattern = matcher . pattern ( ) ; \n\t\tfor ( $F1139 ( n , patterns ) ) { \n\t\t\tif ( patterns [ n ] == pattern ) { \n\t\t\t\tpatterns [ n ] = null ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t} \n\treturn matcher ; \n\t} \n"}, {"code": "@ CalledOnlyBy ( AmidstThread . FRAGMENT_LOADER ) public void processQueues $F72 { \n\tDimension dimension = dimensionSetting . get ( ) ; \n\tupdateLayerManager ( dimension ) ; \n\tprocessRecycleQueue ( ) ; \n\tFragment fragment ; \n\twhile $F22655 ( fragment , loadingQueue ) { \n\t\tloadFragment ( dimension , fragment ) ; \n\t\t$F16478 ( dimension , dimensionSetting ) updateLayerManager ( dimension ) ; \n\t\tprocessRecycleQueue ( ) ; \n\t\t} \n\tlayerManager . clearInvalidatedLayers ( ) ; \n\t} \n"}, {"code": "default FieldDeclaration addPrivateField $F17798 ( typeClass , name ) { \n\treturn addField ( typeClass , name , Modifier . PRIVATE ) ; \n\t} \n"}, {"code": "void ReconstructPrivateSubrs ( int Font , IndexBaseItem [ ] fdPrivateBase , OffsetItem [ ] fdSubrs ) { \n\tfor ( int i = NUM00 ; \n\ti < fonts [ Font ] . fdprivateLengths . length ; \n\ti ++ ) { \n\t\tif ( fdSubrs [ i ] != null && fonts [ Font ] . PrivateSubrsOffset [ i ] >= NUM00 ) { \n\t\t\tOutputList . addLast ( new SubrMarkerItem ( fdSubrs [ i ] , fdPrivateBase [ i ] ) ) ; \n\t\t\tif ( NewLSubrsIndex [ i ] != null ) OutputList . addLast ( new RangeItem ( new RandomAccessFileOrArray ( rasFactory . createSource ( NewLSubrsIndex [ i ] ) ) , NUM00 , NewLSubrsIndex [ i ] . length ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean matchChomp ( String seq ) { \n\tif ( matches ( seq ) ) { \n\t\t$F90433 ( pos , seq ) return _BOOL ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public void initGL $F72 { \n\tmEglCore = new EglCore ( null , EglCore . FLAG_RECORDABLE | EglCore . FLAG_TRY_GLES3 ) ; \n\tmWindowSurface = new WindowSurface ( mEglCore , mSurfaceTexture ) ; \n\tmWindowSurface . makeCurrent ( ) ; \n\tmRecordSurface = new WindowSurface ( mEglCore , mMediaRecorder . getSurface ( ) , _BOOL ) ; \n\tinitGLComponents ( ) ; \n\t} \n"}, {"code": "void clear $F72 { \n\tif ( mViewTypeCount == NUM00 ) { \n\t\tfinal $F30929 scrap = mCurrentScrap ; \n\t\t$F10162 ( scrapCount , scrap ) $F65530 ( i , scrapCount , removeDetachedView , scrap , _BOOL ) } \n\telse { \n\t\tfinal int typeCount = mViewTypeCount ; \n\t\tfor ( $F119 ( i , typeCount ) ) { \n\t\t\t$F65533 ( scrap , mScrapViews , i ) $F10162 ( scrapCount , scrap ) $F65530 ( j , scrapCount , removeDetachedView , scrap , _BOOL ) } \n\t\t} \n\t$F44159 ( mTransientStateViews ) } \n"}, {"code": "protected void contributeTokenRequestParameters ( final QueryString bodyParameters ) $F845 "}, {"code": "public int read $F233176 ( off , len ) { \n\tint k ; \n\tif ( position >= document . getLength ( ) ) $F7629 k = len ; \n\tif ( ( position + k ) >= document . getLength ( ) ) k = document . getLength ( ) - ( int ) position ; \n\tif ( off + k >= cbuf . length ) k = cbuf . length - off ; \n\ttry { \n\t\tdocument . getText ( ( int ) position , k , segment ) ; \n\t\tposition += k ; \n\t\tSystem . arraycopy ( segment . array , segment . offset , cbuf , off , k ) ; \n\t\treturn k ; \n\t\t} \n\tcatch ( BadLocationException ble ) $F7629 } \n"}, {"code": "Builder addLenient ( String line ) { \n\t$F129840 ( index , line ) if ( index != - NUM00 ) { \n\t\treturn addLenient ( line . substring ( NUM00 , index ) , line . substring ( index + NUM00 ) ) ; \n\t\t} \n\telse if $F3106 ( line ) { \n\t\treturn addLenient ( NUM00 , line . substring ( NUM00 ) ) ; \n\t\t} \n\telse $F195829 ( addLenient , line ) } \n"}, {"code": "public static void mergeNodeChildren ( TreeNode node ) { \n\tDefaultMutableTreeNode masterNode = ( DefaultMutableTreeNode ) node ; \n\tfor ( $F140290 ( i , masterNode ) ) { \n\t\tDefaultMutableTreeNode child = ( DefaultMutableTreeNode ) masterNode . getChildAt ( i ) ; \n\t\tif ( $F24328 ( child ) ) { \n\t\t\tMergeHelpUtilities . mergeNodeChildren ( DEFAULT_MERGE_TYPE , child ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void testNegateNegative $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\tString c = NUM00 ; \n\tint cScale = NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) $F1918 ( cNumber , c , cScale ) assertEquals ( NUM00 , cNumber , aNumber . negate ( ) ) ; \n\t} \n"}, {"code": "private static Object createAndBindItem ( ParameterAccess parameters , $F6969 itemType ) { \n\ttry { \n\t\t$F71976 ( value , itemType ) bind ( value , parameters ) ; \n\t\treturn value ; \n\t\t} \n\tcatch ( InstantiationException | IllegalAccessException e ) { \n\t\tthrow new BindingException ( NUM00 + itemType , e ) ; \n\t\t} \n\t} \n"}, {"code": "public SimpleSetupPanel ( Experiment exp ) $F19529 ( this , setExperiment , exp ) "}, {"code": "public static void addListener ( Listener listener ) $F137025 ( listeners , listener ) "}, {"code": "private static void processArgs $F4374 ( args ) { \n\tfor ( $F1139 ( i , args ) ) { \n\t\tString arg = args [ i ] ; \n\t\tif $F3057 ( arg ) { \n\t\t\toutputDir = args [ ++ i ] ; \n\t\t\t} \n\t\telse if $F3057 ( arg ) { \n\t\t\tunicodeData = args [ ++ i ] ; \n\t\t\t} \n\t\telse if $F3057 ( arg ) { \n\t\t\tlanguage = args [ ++ i ] ; \n\t\t\t} \n\t\telse if $F3057 ( arg ) { \n\t\t\tcountry = args [ ++ i ] ; \n\t\t\t} \n\t\telse if $F3057 ( arg ) { \n\t\t\tvaliant = args [ ++ i ] ; \n\t\t\t} \n\t\telse $F5795 ( usage ) } \n\tlocaleName = getLocaleName ( ) ; \n\t} \n"}, {"code": "public static boolean isZoningRequired ( DbClient dbClient , VirtualArray nh ) { \n\tif ( nh . getAutoSanZoning ( ) == _BOOL ) { \n\t\t_log . info ( NUM00 + nh . getLabel ( ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\treturn NetworkUtil . areNetworkSystemDiscovered ( dbClient ) ; \n\t} \n"}, {"code": "private void initXMLTree $F72 throws Exception { \n\tupdateFilteredTokens ( ) ; \n\tArrayList elements = getElements ( getFilteredTokens ( ) ) ; \n\tif $F3817 ( elements ) $F9451 setRootElement ( ( XMLElement ) elements . get ( NUM00 ) ) ; \n\t} \n"}, {"code": "public boolean hasNameValue ( String name ) { \n\treturn $F241801 ( nameValueMap , name ) ; \n\t} \n"}, {"code": "public boolean startsWith ( CharSeq prefix ) { \n\treturn str . startsWith ( prefix . str ) ; \n\t} \n"}, {"code": "public boolean containsWindow $F60993 ( windowClass ) { \n\treturn ( getWindow ( windowClass ) != null ) ; \n\t} \n"}, {"code": "protected final void firePropertyChange ( String propertyName , long oldValue , long newValue ) $F71527 ( firePropertyChange , propertyName , Long , oldValue , newValue ) "}, {"code": "public void fadeToLayer ( int index ) { \n\tmTransitionState = TRANSITION_STARTING ; \n\tArrays . fill ( mIsLayerOn , _BOOL ) ; \n\tmIsLayerOn [ index ] = _BOOL ; \n\tinvalidateSelf ( ) ; \n\t} \n"}, {"code": "$F5803 ( drawable , getDrawable , matrix , prevMatrix , drawableWidth , drawableHeight , scaleX , viewWidth , scaleY , viewHeight , mScaleType , CENTER , CENTER_CROP , Math , CENTER_INSIDE , FIT_CENTER , FIT_XY , redundantXSpace , redundantYSpace , matchViewWidth , matchViewHeight , isZoomed , imageRenderedAtLeastOnce , normalizedScale , prevMatchViewWidth , prevMatchViewHeight , savePreviousImageValues , m , Matrix , transX , transY , prevActualWidth , actualWidth , getImageWidth , translateMatrixAfterRotate , prevViewWidth , prevActualHeight , actualHeight , getImageHeight , prevViewHeight , fixTrans , setImageMatrix ) "}, {"code": "public static int hashCode ( $F8748 field ) $F108933 ( field , Arrays ) "}, {"code": "public AbstractSurfaceObject ( AbstractSurfaceObject source ) { \n\tsuper ( source ) ; \n\tthis . visible = source . visible ; \n\tthis . uniqueId = nextUniqueId ( ) ; \n\tthis . lastModifiedTime = System . currentTimeMillis ( ) ; \n\tthis . enableBatchPicking = source . enableBatchPicking ; \n\t} \n"}, {"code": "public SootMethodAndClass parseSootMethodString ( String parseString ) { \n\tif ( $F14942 ( parseString ) || $F2363 ( parseString ) ) $F29526 ( parseString ) String name = NUM00 ; \n\tString className = NUM00 ; \n\tString returnType = NUM00 ; \n\t$F26605 ( pattern , Pattern ) $F275 ( matcher , pattern , parseString ) if $F281 ( matcher ) $F1164 ( className , matcher ) pattern = Pattern . compile ( NUM00 ) ; \n\tmatcher = pattern . matcher ( parseString ) ; \n\tif $F281 ( matcher ) { \n\t\t$F1157 ( returnType , matcher ) parseString = parseString . substring ( matcher . end ( NUM00 ) ) ; \n\t\t} \n\tpattern = Pattern . compile ( NUM00 ) ; \n\tmatcher = pattern . matcher ( parseString ) ; \n\tif $F281 ( matcher ) $F1164 ( name , matcher ) $F10144 ( paramList ) pattern = Pattern . compile ( NUM00 ) ; \n\tmatcher = pattern . matcher ( parseString ) ; \n\tif $F281 ( matcher ) { \n\t\t$F283 ( params , matcher ) for ( $F55140 ( param , params ) ) $F28871 ( paramList , param ) } \n\treturn new SootMethodAndClass ( name , className , returnType , paramList ) ; \n\t} \n"}, {"code": "private void createNewReviewTask ( TaskRepository repository , TaskData taskData ) throws CoreException { \n\tRepository repo = AppraisePluginUtils . getGitRepoForRepository ( repository ) ; \n\tAppraisePluginReviewClient client ; \n\ttry { \n\t\tclient = new AppraisePluginReviewClient ( repository ) ; \n\t\t} \n\tcatch ( GitClientException e1 ) { \n\t\tthrow new CoreException ( new Status ( IStatus . ERROR , AppraiseConnectorPlugin . PLUGIN_ID , NUM00 ) ) ; \n\t\t} \n\tString currentBranch ; \n\ttry { \n\t\tcurrentBranch = repo . getFullBranch ( ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tthrow new CoreException ( new Status ( IStatus . ERROR , AppraiseConnectorPlugin . PLUGIN_ID , NUM00 , e ) ) ; \n\t\t} \n\tif $F1238 ( MASTER_REF , currentBranch ) { \n\t\tthrow new CoreException ( new Status ( IStatus . ERROR , AppraiseConnectorPlugin . PLUGIN_ID , NUM00 ) ) ; \n\t\t} \n\tsetAttributeValue ( taskData , schema . REQUESTER , repository . getUserName ( ) ) ; \n\tsetAttributeValue ( taskData , schema . TARGET_REF , MASTER_REF ) ; \n\tsetAttributeValue ( taskData , schema . REVIEW_REF , currentBranch ) ; \n\tRevCommit reviewCommit ; \n\ttry { \n\t\treviewCommit = client . getReviewCommit ( currentBranch , MASTER_REF ) ; \n\t\t} \n\tcatch ( GitClientException e ) { \n\t\tthrow new CoreException ( new Status ( IStatus . ERROR , AppraiseConnectorPlugin . PLUGIN_ID , NUM00 , e ) ) ; \n\t\t} \n\tif ( reviewCommit == null ) { \n\t\tthrow new CoreException ( new Status ( IStatus . INFO , AppraiseConnectorPlugin . PLUGIN_ID , NUM00 + currentBranch ) ) ; \n\t\t} \n\tsetAttributeValue ( taskData , schema . DESCRIPTION , reviewCommit . getFullMessage ( ) ) ; \n\tsetAttributeValue ( taskData , schema . REVIEW_COMMIT , reviewCommit . getName ( ) ) ; \n\ttry { \n\t\tList < DiffEntry > diffs = client . getReviewDiffs ( currentBranch , MASTER_REF ) ; \n\t\tpopulateDiffs ( repository , diffs , taskData ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new CoreException ( new Status ( IStatus . ERROR , AppraiseConnectorPlugin . PLUGIN_ID , NUM00 , e ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F38752 ( _BOOL ) "}, {"code": "$F1 public void startup $F72 throws Exception { \n\t$F100153 ( Log , Mary ) $F3803 voiceNames = MaryProperties . getList ( NUM00 ) ; \n\tfor ( String voiceName : voiceNames ) { \n\t\t$F657 ( time , System ) Voice unitSelVoice = new UnitSelectionVoice ( voiceName , this ) ; \n\t\tLog . d ( Mary . LOG , NUM00 + unitSelVoice + NUM00 ) ; \n\t\tVoice . registerVoice ( unitSelVoice ) ; \n\t\t$F5740 ( newtime , System , time ) Log . i ( Mary . LOG , NUM00 + voiceName + NUM00 + newtime + NUM00 ) ; \n\t\t} \n\t$F100121 ( Log , Mary ) } \n"}, {"code": "public int findStartOfColumn ( int column ) { \n\tif ( column == mColumns ) return getSpaceUsed ( ) ; \n\tint currentColumn = NUM00 ; \n\tint currentCharIndex = NUM00 ; \n\twhile ( _BOOL ) { \n\t\tint newCharIndex = currentCharIndex ; \n\t\tchar c = mText [ newCharIndex ++ ] ; \n\t\tboolean isHigh = Character . isHighSurrogate ( c ) ; \n\t\tint codePoint = isHigh ? Character . toCodePoint ( c , mText [ newCharIndex ++ ] ) : c ; \n\t\tint wcwidth = WcWidth . width ( codePoint ) ; \n\t\tif ( wcwidth > NUM00 ) { \n\t\t\tcurrentColumn += wcwidth ; \n\t\t\tif ( currentColumn == column ) { \n\t\t\t\twhile ( newCharIndex < mSpaceUsed ) { \n\t\t\t\t\tif ( Character . isHighSurrogate ( mText [ newCharIndex ] ) ) { \n\t\t\t\t\t\tif ( WcWidth . width ( Character . toCodePoint ( $F149550 ( mText , newCharIndex ) ) ) <= NUM00 ) { \n\t\t\t\t\t\t\tnewCharIndex += NUM00 ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\telse $F5153 } \n\t\t\t\t\telse if ( WcWidth . width ( mText [ newCharIndex ] ) <= NUM00 ) { \n\t\t\t\t\t\tnewCharIndex ++ ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse $F5153 } \n\t\t\t\treturn newCharIndex ; \n\t\t\t\t} \n\t\t\telse $F8670 ( currentColumn , column , currentCharIndex ) } \n\t\tcurrentCharIndex = newCharIndex ; \n\t\t} \n\t} \n"}, {"code": "private TripSchedule rerouteTripSchedule ( TripSchedule originalSchedule ) { \n\tTripSchedule schedule = originalSchedule . clone ( ) ; \n\tschedule . arrivals = new int [ newPatternLength ] ; \n\tschedule . departures = new int [ newPatternLength ] ; \n\tint prevOutputDeparture = NUM00 ; \n\tfor ( int ss = NUM00 , ts = NUM00 ; \n\tts < newPatternLength ; \n\tss ++ , ts ++ ) { \n\t\tif ( ( ss == insertBeginIndex - NUM00 ) || ( ss == NUM00 && insertBeginIndex == NUM00 ) ) { \n\t\t\tint hopTime = originalSchedule . arrivals [ ss ] ; \n\t\t\tif ( ss > NUM00 ) hopTime -= originalSchedule . departures [ ss - NUM00 ] ; \n\t\t\tschedule . arrivals [ ts ] = prevOutputDeparture + hopTime ; \n\t\t\tschedule . departures [ ts ] = schedule . arrivals [ ts ] + dwellTimes [ NUM00 ] ; \n\t\t\tprevOutputDeparture = schedule . departures [ ts ] ; \n\t\t\tts ++ ; \n\t\t\tfor ( int hop = NUM00 , dwell = NUM00 ; \n\t\t\tdwell < dwellTimes . length ; \n\t\t\thop ++ , dwell ++ ) { \n\t\t\t\tschedule . arrivals [ ts ] = prevOutputDeparture + hopTimes [ hop ] ; \n\t\t\t\tschedule . departures [ ts ] = schedule . arrivals [ ts ] + dwellTimes [ dwell ] ; \n\t\t\t\tprevOutputDeparture = schedule . departures [ ts ] ; \n\t\t\t\tts ++ ; \n\t\t\t\t} \n\t\t\tss = insertEndIndex + NUM00 ; \n\t\t\t$F67767 ( ts , newPatternLength ) } \n\t\tint hopTime = originalSchedule . arrivals [ ss ] ; \n\t\tif ( ss > NUM00 ) hopTime -= originalSchedule . departures [ ss - NUM00 ] ; \n\t\tschedule . arrivals [ ts ] = prevOutputDeparture + hopTime ; \n\t\tint dwellTime = originalSchedule . departures [ ss ] - originalSchedule . arrivals [ ss ] ; \n\t\tschedule . departures [ ts ] = schedule . arrivals [ ts ] + dwellTime ; \n\t\tprevOutputDeparture = schedule . departures [ ts ] ; \n\t\t} \n\tint timeShift = originalSchedule . arrivals [ originalFixedPointStopIndex ] - schedule . arrivals [ newFixedPointStopIndex ] ; \n\tfor ( $F119 ( i , newPatternLength ) ) { \n\t\tschedule . arrivals [ i ] += timeShift ; \n\t\tschedule . departures [ i ] += timeShift ; \n\t\t} \n\tif $F585 ( LOG ) { \n\t\tLOG . debug ( NUM00 , originalSchedule . arrivals ) ; \n\t\tLOG . debug ( NUM00 , originalSchedule . departures ) ; \n\t\tLOG . debug ( NUM00 , schedule . arrivals ) ; \n\t\tLOG . debug ( NUM00 , schedule . departures ) ; \n\t\t} \n\treturn schedule ; \n\t} \n"}, {"code": "public static Color decode ( String color , Color defaultColor ) { \n\t$F1933 ( color , defaultColor ) Color c = getNamedColor ( color ) ; \n\tif ( c == null ) { \n\t\ttry { \n\t\t\tc = Color . decode ( color ) ; \n\t\t\t} \n\t\tcatch ( NumberFormatException ex ) { \n\t\t\treturn defaultColor ; \n\t\t\t} \n\t\t} \n\treturn c ; \n\t} \n"}, {"code": "public static LinkedList < MaryModule > modulesRequiredForProcessing ( MaryDataType sourceType , MaryDataType targetType , Locale locale , Voice voice ) { \n\tif ( ! registrationComplete ) $F4638 $F1149 ( sourceType ) $F1149 ( targetType ) LinkedList < MaryDataType > seenTypes = new LinkedList < MaryDataType > $F72 ; \n\tseenTypes . add ( sourceType ) ; \n\treturn modulesRequiredForProcessing ( sourceType , targetType , locale , voice , seenTypes ) ; \n\t} \n"}, {"code": "public double distance ( Vector o ) { \n\treturn Math . sqrt ( NumberConversions . square ( x - o . x ) + NumberConversions . square ( y - o . y ) + NumberConversions . square ( z - o . z ) ) ; \n\t} \n"}, {"code": "public static long calculateElapsedGC $F72 { \n\tlong timeMillis = NUM00 ; \n\tfor ( GarbageCollectorMXBean gcbean : gcbeans ) { \n\t\ttimeMillis += gcbean . getCollectionTime ( ) ; \n\t\t} \n\treturn timeMillis ; \n\t} \n"}, {"code": "public void close $F72 $F845 "}, {"code": "$F2208 ( sourceList , entryList , isEmpty , sourceCount , entry ) "}, {"code": "public void startObject ( int numfields ) { \n\tnotNested ( ) ; \n\tif $F28203 ( vtable , numfields ) $F3936 ( vtable , numfields ) vtable_in_use = numfields ; \n\tArrays . fill ( vtable , NUM00 , vtable_in_use , NUM00 ) ; \n\tnested = _BOOL ; \n\tobject_start = offset ( ) ; \n\t} \n"}, {"code": "private $F2539 produceStream ( String topic ) { \n\tList < ProducerRecord $F2538 > $F10252 ( messages , EVENT_CNT ) ; \n\t$F35131 ( keyValMap ) for ( $F119 ( evt , EVENT_CNT ) ) { \n\t\t$F657 ( runtime , System ) String key = topic + NUM00 + String . valueOf ( evt ) ; \n\t\tString msg = runtime + String . valueOf ( evt ) ; \n\t\tmessages . add ( new ProducerRecord $F200 ( topic , key , msg ) ) ; \n\t\tkeyValMap . put ( key , msg ) ; \n\t\t} \n\tkafkaBroker . sendMessages ( messages ) ; \n\treturn keyValMap ; \n\t} \n"}, {"code": "public static String stringOfChar ( char ch , int count ) { \n\t$F280 ( buf ) $F48485 ( i , count , buf , ch ) $F92 ( buf ) } \n"}, {"code": "private void addConnectionView ( Connection connection ) { \n\tPlatformImpl . runAndWait ( null ) ; \n\t} \n"}, {"code": "public static void trim ( CharSequence aText , $F2027 aSpan ) { \n\tint begin = aSpan [ NUM00 ] ; \n\tint end = aSpan [ NUM00 ] - NUM00 ; \n\tCharSequence data = aText ; \n\twhile ( ( begin < $F45793 ( data ) ) && trimChar ( data . charAt ( begin ) ) ) { \n\t\tbegin ++ ; \n\t\t} \n\twhile ( ( end > NUM00 ) && trimChar ( data . charAt ( end ) ) ) { \n\t\tend -- ; \n\t\t} \n\tend ++ ; \n\taSpan [ NUM00 ] = begin ; \n\taSpan [ NUM00 ] = end ; \n\t} \n"}, {"code": "public void addScriptFinishedListener ( ScriptExecutionListener l ) $F207 ( m_FinishedListeners , l ) "}, {"code": "$F104170 ( purchase , result ) "}, {"code": "public void test_getPutByteArray $F72 { \n\tfinal int size = NUM00 ; \n\tfinal IDataRecord buf = new FixedByteArrayBuffer ( size ) ; \n\tassertEquals ( $F19905 , buf . getByte ( NUM00 ) ) ; \n\tassertEquals ( $F19905 , buf . getByte ( size - NUM00 ) ) ; \n\tfinal int pos = NUM00 ; \n\tfor ( $F119 ( i , LIMIT ) ) { \n\t\tfinal $F96 expected = new byte [ r . nextInt ( size - NUM00 ) ] ; \n\t\tr . nextBytes ( expected ) ; \n\t\tbuf . put ( pos , expected ) ; \n\t\tassertEquals ( NUM00 , BytesUtil . compareBytesWithLenAndOffset ( NUM00 , expected . length , expected , pos , expected . length , buf . array ( ) ) ) ; \n\t\tfinal $F96 $F14612 ( actual , expected ) ; \n\t\tbuf . get ( pos , actual ) ; \n\t\tassertTrue ( BytesUtil . bytesEqual ( expected , actual ) ) ; \n\t\t} \n\tassertEquals ( $F19905 , buf . getByte ( NUM00 ) ) ; \n\tassertEquals ( $F19905 , buf . getByte ( pos + size - NUM00 ) ) ; \n\t} \n"}, {"code": "public static $F1986 concatAllDouble ( $F1986 ... arrays ) { \n\tint totalLength = NUM00 ; \n\t$F18832 ( subArrayCount , arrays ) $F189285 ( i , subArrayCount , totalLength , arrays ) $F1986 $F189287 ( result , Arrays , arrays , totalLength ) ; \n\t$F26358 ( offset , arrays ) $F189290 ( i , subArrayCount , System , arrays , result , offset ) return result ; \n\t} \n"}, {"code": "private $F10809 ensureCapacity ( int minCapacity ) { \n\tif ( tmp . length < minCapacity ) { \n\t\tint newSize = minCapacity ; \n\t\tnewSize |= newSize > > NUM00 ; \n\t\tnewSize |= newSize > > NUM00 ; \n\t\tnewSize |= newSize > > NUM00 ; \n\t\tnewSize |= newSize > > NUM00 ; \n\t\tnewSize |= newSize > > NUM00 ; \n\t\tnewSize ++ ; \n\t\tif ( newSize < NUM00 ) newSize = minCapacity ; \n\t\telse newSize = Math . min ( newSize , $F92855 ( a ) ) ; \n\t\t$F10809 newArray = ( $F10809 ) new Object [ newSize ] ; \n\t\ttmp = newArray ; \n\t\t} \n\treturn tmp ; \n\t} \n"}, {"code": "public synchronized void add $F21013 ( category , minValue , maxValue ) { \n\tsuper . add ( category , minValue ) ; \n\tmMaxValues . add ( maxValue ) ; \n\t} \n"}, {"code": "public void CONT ( int sessionNumber ) throws Exception { \n\tthis . maxSessionNumber = Math . max ( this . maxSessionNumber , sessionNumber ) ; \n\ttestElements . add ( new ContinuationElement ( sessionNumber ) ) ; \n\t} \n"}, {"code": "public static double calcRotationAngleInDegrees ( PointF centerPt , PointF targetPt ) { \n\tdouble theta = Math . atan2 ( targetPt . y - centerPt . y , targetPt . x - centerPt . x ) ; \n\tdouble angle = Math . toDegrees ( theta ) ; \n\t$F69446 ( angle ) return angle ; \n\t} \n"}, {"code": "public int countIn ( CharSequence sequence ) { \n\tint count = NUM00 ; \n\tfor ( $F1088 ( i , sequence ) ) { \n\t\tif $F166640 ( matches , sequence , i ) { \n\t\t\tcount ++ ; \n\t\t\t} \n\t\t} \n\treturn count ; \n\t} \n"}, {"code": "public DeltaCRLIndicatorExtension ( int crlNum ) throws IOException { \n\tsuper ( PKIXExtensions . DeltaCRLIndicator_Id , _BOOL , BigInteger . valueOf ( crlNum ) , NAME , LABEL ) ; \n\t} \n"}, {"code": "public static void v $F3867 ( tag , s , args ) { \n\tif ( LOG . VERBOSE >= LOGLEVEL ) Log . v ( tag , String . format ( s , args ) ) ; \n\t} \n"}, {"code": "static private double calcLogProb ( int numAppear , double mu ) { \n\tfinal double sigma = calcSigmaFromMu ( mu ) ; \n\tfinal double logNumAppear = Math . log ( numAppear ) ; \n\tfinal double overMu = Math . max ( logNumAppear - mu , NUM00 ) ; \n\tfinal double res = - $F52906 * ( overMu * overMu ) / ( sigma * sigma ) - s_logSqrtTwoPi - Math . log ( sigma ) ; \n\tassert ( res <= NUM00 ) ; \n\treturn res ; \n\t} \n"}, {"code": "$F1 public SoftwarePIDController withTolerance ( double tolerance ) { \n\ttarget = target . withTolerance ( Math . abs ( tolerance ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "protected final void dragDropFinished ( final boolean success , final int operations , final int x , final int y ) { \n\tDragSourceEvent event = new DragSourceDropEvent ( getDragSourceContext ( ) , operations & sourceActions , success , x , y ) ; \n\tEventDispatcher dispatcher = new EventDispatcher ( DISPATCH_FINISH , event ) ; \n\tSunToolkit . invokeLaterOnAppContext ( SunToolkit . targetToAppContext ( getComponent ( ) ) , dispatcher ) ; \n\tstartSecondaryEventLoop ( ) ; \n\tsetNativeContext ( NUM00 ) ; \n\tdragImage = null ; \n\tdragImageOffset = null ; \n\t} \n"}, {"code": "$F1 public $F96 write ( InternalLog log ) throws IOException { \n\tfinal $F96 rowkey = RowkeyBuilder . buildRowkey ( log ) ; \n\tfinal Put p = new Put ( rowkey ) ; \n\tpopulateColumnValues ( p , log ) ; \n\ttbl . put ( p ) ; \n\tfinal $F3510 indexRowkeys = log . getIndexRowkeys ( ) ; \n\t$F12099 ( indexRowkeys , writeIndexes , rowkey ) return rowkey ; \n\t} \n"}, {"code": "private void insertIntoDynamicTable ( int index , Header entry ) { \n\theaderList . add ( entry ) ; \n\tint delta = entry . hpackSize ; \n\tif ( index != - NUM00 ) { \n\t\tdelta -= dynamicTable [ dynamicTableIndex ( index ) ] . hpackSize ; \n\t\t} \n\tif ( delta > maxDynamicTableByteCount ) $F10990 ( clearDynamicTable ) int bytesToRecover = ( dynamicTableByteCount + delta ) - maxDynamicTableByteCount ; \n\tint entriesEvicted = evictToRecoverBytes ( bytesToRecover ) ; \n\tif ( index == - NUM00 ) { \n\t\tif ( headerCount + NUM00 > dynamicTable . length ) { \n\t\t\t$F11061 doubled = new Header $F10562 ( dynamicTable ) ; \n\t\t\tSystem . arraycopy ( dynamicTable , NUM00 , doubled , dynamicTable . length , dynamicTable . length ) ; \n\t\t\tnextHeaderIndex = dynamicTable . length - NUM00 ; \n\t\t\tdynamicTable = doubled ; \n\t\t\t} \n\t\tindex = nextHeaderIndex -- ; \n\t\tdynamicTable [ index ] = entry ; \n\t\theaderCount ++ ; \n\t\t} \n\telse { \n\t\tindex += dynamicTableIndex ( index ) + entriesEvicted ; \n\t\tdynamicTable [ index ] = entry ; \n\t\t} \n\tdynamicTableByteCount += delta ; \n\t} \n"}, {"code": "protected static String extractSecretAccessKey ( String s3uri ) { \n\treturn s3uri . substring ( s3uri . indexOf ( NUM00 , $F12707 ( s3uri ) ) + NUM00 , s3uri . indexOf ( NUM00 ) ) ; \n\t} \n"}, {"code": "private void dial $F71526 ( contactInformation , makeTheCall , usePhoneSpeaker ) { \n\tif $F3057 ( contactInformation ) { \n\t\tString lastRecipient = RecipientCmd . getLastRecipientNumber ( ) ; \n\t\tString lastRecipientName = RecipientCmd . getLastRecipientName ( ) ; \n\t\tif ( lastRecipient != null ) { \n\t\t\tdoDial ( lastRecipientName , lastRecipient , makeTheCall , usePhoneSpeaker ) ; \n\t\t\t} \n\t\telse $F1210 ( send ) } \n\telse { \n\t\tResolvedContact resolvedContact = mContactsResolver . resolveContact ( contactInformation , ContactsResolver . TYPE_ALL ) ; \n\t\tif ( resolvedContact == null ) { \n\t\t\tsend ( R . string . chat_no_match_for , contactInformation ) ; \n\t\t\t} \n\t\telse if ( resolvedContact . isDistinct ( ) ) { \n\t\t\tdoDial ( resolvedContact . getName ( ) , resolvedContact . getNumber ( ) , makeTheCall , usePhoneSpeaker ) ; \n\t\t\t} \n\t\telse { \n\t\t\taskForMoreDetails ( resolvedContact . getCandidates ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void addSafeClass ( SootClass clz ) $F29791 ( safeClasses , clz ) "}, {"code": "private boolean activeListHasRoom $F72 { \n\tint maxDownloads = NUM00 ; \n\treturn mActiveList . size ( ) < maxDownloads ; \n\t} \n"}, {"code": "public static final double parseTime ( final String time , final char separator ) { \n\tif ( $F6035 ( time ) || time . equals ( NUM00 ) ) { \n\t\treturn Time . UNDEFINED_TIME ; \n\t\t} \n\tboolean isNegative = $F4432 ( time ) ; \n\t$F806 strings = ( isNegative ? StringUtils . explode ( time . substring ( NUM00 ) , separator ) : StringUtils . explode ( time , separator ) ) ; \n\tdouble seconds = NUM00 ; \n\tif $F9634 ( strings ) { \n\t\tseconds = Math . abs ( $F51417 ( Double , strings ) ) ; \n\t\t} \n\telse if $F9634 ( strings ) { \n\t\t$F167151 ( h , Integer , strings ) $F167151 ( m , Integer , strings ) if $F61157 ( m ) $F18931 ( time ) seconds = Math . abs ( h ) * NUM00 + m * NUM00 ; \n\t\t} \n\telse if $F9634 ( strings ) { \n\t\t$F167151 ( h , Integer , strings ) $F167151 ( m , Integer , strings ) $F158402 ( s , Double , strings ) if $F61157 ( m ) $F18931 ( time ) if ( ( s < NUM00 ) || ( s >= NUM00 ) ) $F18931 ( time ) seconds = Math . abs ( h ) * NUM00 + m * NUM00 + s ; \n\t\t} \n\telse $F18931 ( time ) $F96183 ( isNegative , seconds ) return seconds ; \n\t} \n"}, {"code": "public boolean isRunning $F72 { \n\treturn this . running ; \n\t} \n"}, {"code": "protected static Map < String , Step > parse ( Class < ? extends RSLPStemmerBase > clazz , String resource ) { \n\ttry { \n\t\tInputStream is = clazz . getResourceAsStream ( resource ) ; \n\t\tLineNumberReader r = new LineNumberReader ( new InputStreamReader ( is , StandardCharsets . UTF_8 ) ) ; \n\t\tMap < String , Step > $F8690 ( steps ) ; \n\t\tString step ; \n\t\twhile $F2108 ( step , readLine , r ) { \n\t\t\tStep s = parseStep ( r , step ) ; \n\t\t\t$F51860 ( steps , s ) } \n\t\t$F59 ( r ) return steps ; \n\t\t} \n\t$F12153 ( e ) } \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public String betToString $F72 { \n\t$F1121 ( sb ) sb . append ( amount ) ; \n\t$F84 ( sb ) sb . append ( itemName ) ; \n\t$F84 ( sb ) sb . append ( target ) ; \n\t$F92 ( sb ) } \n"}, {"code": "public void test_nonEmptyJournal $F72 throws IOException , InterruptedException , ExecutionException { \n\tfinal File out = File . createTempFile ( getName ( ) , Options . JNL ) ; \n\ttry { \n\t\tfinal Journal src = getStore ( getProperties ( ) ) ; \n\t\ttry { \n\t\t\tif ( ! ( src . getBufferStrategy ( ) instanceof IHABufferStrategy ) ) $F932 src . write ( getRandomData ( NUM00 ) ) ; \n\t\t\t$F17621 ( src ) try { \n\t\t\t\tfinal ISnapshotFactory snapshotFactory = new MySnapshotFactory ( getName ( ) , _BOOL ) ; \n\t\t\t\tfinal Future < ISnapshotResult > f = src . snapshot ( snapshotFactory ) ; \n\t\t\t\tfinal ISnapshotResult snapshotResult = f . get ( ) ; \n\t\t\t\tfinal File snapshotFile = snapshotResult . getFile ( ) ; \n\t\t\t\ttry { \n\t\t\t\t\tfinal Journal tmp = openSnapshot ( snapshotResult ) ; \n\t\t\t\t\tassertEquals ( src . getRootBlockView ( ) , tmp . getRootBlockView ( ) ) ; \n\t\t\t\t\t$F17623 ( tmp ) } \n\t\t\t\tfinally { \n\t\t\t\t\t$F142821 ( snapshotFile ) } \n\t\t\t\t} \n\t\t\tcatch ( IllegalArgumentException ex ) $F10090 ( log , ex ) } \n\t\t$F17625 ( src ) } \n\t$F105993 ( out ) } \n"}, {"code": "private boolean checkMatchIp $F4673 ( rows ) { \n\tboolean matchEther = _BOOL ; \n\tString val = ( String ) rows . get ( StaticFlowEntryPusher . COLUMN_DL_TYPE ) ; \n\tif ( val != null ) { \n\t\tint type = NUM00 ; \n\t\tif $F3106 ( val ) { \n\t\t\ttype = $F30886 ( Integer , val ) ; \n\t\t\t} \n\t\telse { \n\t\t\ttry $F37473 ( type , Integer , val ) $F32668 } \n\t\tif ( type == NUM00 ) matchEther = _BOOL ; \n\t\t} \n\tif ( ( rows . containsKey ( StaticFlowEntryPusher . COLUMN_NW_DST ) || rows . containsKey ( StaticFlowEntryPusher . COLUMN_NW_SRC ) || rows . containsKey ( StaticFlowEntryPusher . COLUMN_NW_PROTO ) || rows . containsKey ( StaticFlowEntryPusher . COLUMN_NW_TOS ) ) && ( matchEther == _BOOL ) ) return _BOOL ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static double powQuick ( double value , double power ) { \n\tif ( USE_JDK_MATH ) { \n\t\treturn STRICT_MATH ? StrictMath . pow ( value , power ) : Math . pow ( value , power ) ; \n\t\t} \n\treturn FastMath . exp ( power * FastMath . logQuick ( value ) ) ; \n\t} \n"}, {"code": "private String classToEntryPath $F60993 ( clazz ) { \n\tString name = NUM00 ; \n\t$F33929 ( parent ) while ( ( parent = clazz . getEnclosingClass ( ) ) != null ) { \n\t\tname = $F266496 ( clazz ) + name ; \n\t\tclazz = parent ; \n\t\t} \n\treturn classNameToEntryPath ( clazz . getCanonicalName ( ) + name ) ; \n\t} \n"}, {"code": "public static String write ( POSMikheevCounter counter ) { \n\treturn POSBaseLineCounter . write ( counter ) ; \n\t} \n"}, {"code": "private Map < String , AnnotationMirror > annosInPackage ( PackageElement packageElement ) { \n\treturn createImportedAnnotationsMap ( ElementFilter . typesIn ( packageElement . getEnclosedElements ( ) ) ) ; \n\t} \n"}, {"code": "public OsmElement pasteFrom $F72 { \n\tList < Way > ways = storage . getWays ( ) ; \n\t$F27878 nodes = storage . getNodes ( ) ; \n\tif ( mode == Mode . CUT ) { \n\t\treset ( ) ; \n\t\tif ( ways != null && $F10470 ( ways ) ) { \n\t\t\tWay w = ways . get ( NUM00 ) ; \n\t\t\tw . setState ( savedState ) ; \n\t\t\tfor ( $F23283 ( nd , w ) ) { \n\t\t\t\tLog . d ( NUM00 , NUM00 + nd . getOsmId ( ) ) ; \n\t\t\t\tnd . setState ( savedNdState . get ( nd ) ) ; \n\t\t\t\t} \n\t\t\treturn w ; \n\t\t\t} \n\t\telse if ( nodes != null && $F10470 ( nodes ) ) { \n\t\t\tNode n = nodes . get ( NUM00 ) ; \n\t\t\tn . setState ( savedState ) ; \n\t\t\treturn n ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( ways != null && $F10470 ( ways ) ) $F38160 ( ways ) else if ( nodes != null && $F10470 ( nodes ) ) $F38160 ( nodes ) } \n\t$F1274 } \n"}, {"code": "public final void updateCursor $F72 { \n\tupdatePending . set ( _BOOL ) ; \n\tupdateCursorImpl ( ) ; \n\t} \n"}, {"code": "public static boolean isMiddleMouseButton ( MouseEvent anEvent ) { \n\treturn ( ( anEvent . getModifiersEx ( ) & InputEvent . BUTTON2_DOWN_MASK ) != NUM00 || anEvent . getButton ( ) == MouseEvent . BUTTON2 ) ; \n\t} \n"}, {"code": "public void addSuccessMessage ( final String successMessage ) $F207 ( successMessageList , successMessage ) "}, {"code": "private void startStoppedChanged $F72 { \n\tclock . setStartStopped ( startStoppedCheckBox . isSelected ( ) ) ; \n\tchanged = _BOOL ; \n\t} \n"}, {"code": "public void close $F72 throws IOException { \n\ttry { \n\t\t$F36253 ( Debug ) if $F22503 ( Debug ) $F31130 ( Thread ) $F711 ( inputStream ) } \n\t$F1516 ( e ) inputStream = null ; \n\t} \n"}, {"code": "public static Long nextLogSegmentSequenceNumber ( List < LogSegmentMetadata > segmentListDesc ) { \n\tint lastAssignedLogSegmentIdx = - NUM00 ; \n\tLong lastAssignedLogSegmentSeqNo = null ; \n\tLong nextLogSegmentSeqNo = null ; \n\tfor ( $F2277 ( i , segmentListDesc ) ) { \n\t\tLogSegmentMetadata metadata = segmentListDesc . get ( i ) ; \n\t\tif ( LogSegmentMetadata . supportsLogSegmentSequenceNo ( metadata . getVersion ( ) ) ) { \n\t\t\tlastAssignedLogSegmentSeqNo = metadata . getLogSegmentSequenceNumber ( ) ; \n\t\t\tlastAssignedLogSegmentIdx = i ; \n\t\t\t$F597 } \n\t\t} \n\tif ( null != lastAssignedLogSegmentSeqNo ) { \n\t\tnextLogSegmentSeqNo = lastAssignedLogSegmentSeqNo + lastAssignedLogSegmentIdx + NUM00 ; \n\t\t} \n\treturn nextLogSegmentSeqNo ; \n\t} \n"}, {"code": "private void readBinary ( final LittleEndianDataInputStream dis ) throws IOException { \n\t$F2980 ( RajLog ) $F71184 ( dis ) $F5952 ( facetCount , dis ) $F5415 verticesArr = $F401614 ( facetCount ) ; \n\t$F5415 normalsArr = $F401614 ( facetCount ) ; \n\t$F69133 ( indicesArr , facetCount ) $F12457 ( tempNorms ) int vertPos = NUM00 , normPos = NUM00 ; \n\tfor ( $F1139 ( i , indicesArr ) ) indicesArr [ i ] = i ; \n\twhile $F2892 ( dis ) { \n\t\tfor ( $F6268 ( j ) ) { \n\t\t\ttempNorms [ j ] = dis . readFloat ( ) ; \n\t\t\tif ( Float . isNaN ( tempNorms [ j ] ) || Float . isInfinite ( tempNorms [ j ] ) ) { \n\t\t\t\tRajLog . w ( NUM00 ) ; \n\t\t\t\ttempNorms [ NUM00 ] = NUM00 ; \n\t\t\t\ttempNorms [ NUM00 ] = NUM00 ; \n\t\t\t\ttempNorms [ NUM00 ] = NUM00 ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\tfor ( $F6268 ( j ) ) { \n\t\t\tnormalsArr [ normPos ++ ] = tempNorms [ NUM00 ] ; \n\t\t\tnormalsArr [ normPos ++ ] = tempNorms [ NUM00 ] ; \n\t\t\tnormalsArr [ normPos ++ ] = tempNorms [ NUM00 ] ; \n\t\t\t} \n\t\tfor ( $F6268 ( j ) ) verticesArr [ vertPos ++ ] = dis . readFloat ( ) ; \n\t\t$F71184 ( dis ) } \n\tmRootObject . setData ( verticesArr , normalsArr , null , null , indicesArr , _BOOL ) ; \n\t} \n"}, {"code": "public static void assertSpecificLang ( String specificLang ) throws XMPException { \n\tif $F6036 ( specificLang ) $F54091 ( XMPError ) } \n"}, {"code": "public int onBlockExploded $F72 { \n\treturn ( int ) ( fuseTime / NUM00 + Math . random ( ) * fuseTime / NUM00 ) ; \n\t} \n"}, {"code": "$F1 public boolean hasQueuedReaderThreads $F72 { \n\treturn readerLock . hasQueuedThreads ( ) ; \n\t} \n"}, {"code": "public long inactiveTimeMillis $F72 { \n\treturn System . currentTimeMillis ( ) - lastTimeMillis ; \n\t} \n"}, {"code": "public static void check ( boolean cond , Object value ) { \n\tif ( ! cond ) $F31730 ( error , String , value ) } \n"}, {"code": "public void addDefinition ( ICOSDefinition cosDef ) throws UMSException { \n\tif ( ! ( cosDef instanceof DirectCOSDefinition ) ) { \n\t\tString msg = i18n . getString ( IUMSConstants . INVALID_COSDEFINITION ) ; \n\t\tthrow new UMSException ( msg ) ; \n\t\t} \n\t$F806 cosAttributes = cosDef . getCOSAttributes ( ) ; \n\tAbstractCollection aList = ( AbstractCollection ) Arrays . asList ( ICOSDefinition . qualifiers ) ; \n\tfor ( $F1139 ( i , cosAttributes ) ) { \n\t\tString cosAttribute = null ; \n\t\tString qualifier = null ; \n\t\tStringTokenizer st = new StringTokenizer ( cosAttributes [ i ] ) ; \n\t\tif $F14498 ( st ) { \n\t\t\t$F39710 ( cosAttribute , st ) } \n\t\tif ( cosAttribute == null ) { \n\t\t\tString msg = i18n . getString ( IUMSConstants . INVALID_COS_ATTRIBUTE_QUALIFIER ) ; \n\t\t\tthrow new UMSException ( msg ) ; \n\t\t\t} \n\t\tif $F14498 ( st ) $F39710 ( qualifier , st ) if ( qualifier == null ) { \n\t\t\tqualifier = ICOSDefinition . qualifiers [ ICOSDefinition . DEFAULT ] ; \n\t\t\tcosDef . removeCOSAttribute ( cosAttribute ) ; \n\t\t\tcosDef . addCOSAttribute ( cosAttribute , ICOSDefinition . DEFAULT ) ; \n\t\t\t} \n\t\tif $F2200 ( aList , qualifier ) { \n\t\t\tString msg = i18n . getString ( IUMSConstants . INVALID_COS_ATTRIBUTE_QUALIFIER ) ; \n\t\t\tthrow new UMSException ( msg ) ; \n\t\t\t} \n\t\t} \n\tPersistentObject po = ( PersistentObject ) cosDef ; \n\t_parentObject . addChild ( po ) ; \n\t} \n"}, {"code": "public static SourceDataQuality fromXML ( Element domElement ) { \n\t$F9040 ( fields , domElement ) $F19322 ( fieldsCount , fields ) String fieldName ; \n\tString fieldValueString ; \n\tNode fieldNode ; \n\tSourceDataQuality result = new SourceDataQuality $F72 ; \n\tfor ( $F253816 ( i , fieldsCount ) ) { \n\t\tfieldNode = fields . item ( i ) ; \n\t\tif $F61358 ( fieldNode , Node ) { \n\t\t\t$F89257 ( fieldName , fieldNode ) $F15376 ( fieldValueNode , fieldNode ) if ( fieldValueNode != null ) { \n\t\t\t\t$F5900 ( fieldValueString , fieldValueNode ) } \n\t\t\telse { \n\t\t\t\tfieldValueString = NUM00 ; \n\t\t\t\t} \n\t\t\tif $F1238 ( fieldName , XML_ELEMENT_QUALITY_CODE ) { \n\t\t\t\tresult . qualityCode = Short . parseShort ( fieldValueString ) ; \n\t\t\t\t} \n\t\t\telse if $F1238 ( fieldName , XML_ELEMENT_QUALITY_DESC ) { \n\t\t\t\tresult . description = fieldValueString ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "QName toQName $F60993 ( outputClass ) { \n\tString localPart ; \n\tString namespaceUri ; \n\tif ( outputClass . isAnnotationPresent ( XmlRootElement . class ) ) { \n\t\tXmlRootElement annotation = outputClass . getAnnotation ( XmlRootElement . class ) ; \n\t\tlocalPart = annotation . name ( ) ; \n\t\tnamespaceUri = annotation . namespace ( ) ; \n\t\t} \n\telse if ( outputClass . isAnnotationPresent ( XmlType . class ) ) { \n\t\tXmlType annotation = outputClass . getAnnotation ( XmlType . class ) ; \n\t\tlocalPart = annotation . name ( ) ; \n\t\tnamespaceUri = annotation . namespace ( ) ; \n\t\t} \n\telse { \n\t\tthrow new IllegalArgumentException $F70412 ( outputClass ) ; \n\t\t} \n\tif $F1238 ( JAXB_DEFAULT_ANNOTATION_VALUE , localPart ) { \n\t\tlocalPart = ClassUtils . getShortNameAsProperty ( outputClass ) ; \n\t\t} \n\tif $F1238 ( JAXB_DEFAULT_ANNOTATION_VALUE , namespaceUri ) { \n\t\tPackage outputClassPackage = outputClass . getPackage ( ) ; \n\t\tif ( outputClassPackage != null && outputClassPackage . isAnnotationPresent ( XmlSchema . class ) ) { \n\t\t\tXmlSchema annotation = outputClassPackage . getAnnotation ( XmlSchema . class ) ; \n\t\t\tnamespaceUri = annotation . namespace ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\tnamespaceUri = XMLConstants . NULL_NS_URI ; \n\t\t\t} \n\t\t} \n\treturn new QName ( namespaceUri , localPart ) ; \n\t} \n"}, {"code": "private void adjustBottom ( RectF rect , float bottom , RectF bounds , int viewHeight , float snapMargin , float aspectRatio , boolean leftMoves , boolean rightMoves ) { \n\tfloat newBottom = bottom ; \n\tif ( newBottom > viewHeight ) { \n\t\tnewBottom = viewHeight + ( newBottom - viewHeight ) / NUM00 ; \n\t\tmTouchOffset . y -= ( newBottom - viewHeight ) / NUM00 ; \n\t\t} \n\tif ( newBottom > bounds . bottom ) { \n\t\tmTouchOffset . y -= ( newBottom - bounds . bottom ) / NUM00 ; \n\t\t} \n\tif ( bounds . bottom - newBottom < snapMargin ) { \n\t\tnewBottom = bounds . bottom ; \n\t\t} \n\tif ( newBottom - rect . top < mMinCropHeight ) { \n\t\tnewBottom = rect . top + mMinCropHeight ; \n\t\t} \n\tif ( newBottom - rect . top > mMaxCropHeight ) { \n\t\tnewBottom = rect . top + mMaxCropHeight ; \n\t\t} \n\tif ( bounds . bottom - newBottom < snapMargin ) { \n\t\tnewBottom = bounds . bottom ; \n\t\t} \n\tif ( aspectRatio > NUM00 ) { \n\t\tfloat newWidth = ( newBottom - rect . top ) * aspectRatio ; \n\t\tif ( newWidth < mMinCropWidth ) { \n\t\t\tnewBottom = Math . min ( bounds . bottom , rect . top + mMinCropWidth / aspectRatio ) ; \n\t\t\tnewWidth = ( newBottom - rect . top ) * aspectRatio ; \n\t\t\t} \n\t\tif ( newWidth > mMaxCropWidth ) { \n\t\t\tnewBottom = Math . min ( bounds . bottom , rect . top + mMaxCropWidth / aspectRatio ) ; \n\t\t\tnewWidth = ( newBottom - rect . top ) * aspectRatio ; \n\t\t\t} \n\t\tif ( leftMoves && rightMoves ) { \n\t\t\tnewBottom = Math . min ( newBottom , Math . min ( bounds . bottom , rect . top + bounds . width ( ) / aspectRatio ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( leftMoves && rect . right - newWidth < bounds . left ) { \n\t\t\t\tnewBottom = Math . min ( bounds . bottom , rect . top + $F102615 ( rect , bounds , aspectRatio ) ) ; \n\t\t\t\tnewWidth = ( newBottom - rect . top ) * aspectRatio ; \n\t\t\t\t} \n\t\t\tif ( rightMoves && rect . left + newWidth > bounds . right ) { \n\t\t\t\tnewBottom = Math . min ( newBottom , Math . min ( bounds . bottom , rect . top + $F102615 ( bounds , rect , aspectRatio ) ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\trect . bottom = newBottom ; \n\t} \n"}, {"code": "private static String generateJWT ( String secret , String jwtID , String iss , Integer ttl , $F2540 ( claims ) ) throws HmacException { \n\ttry $F16525 ( signJWT , secret , jwtID , ttl , iss , claims ) catch ( JOSEException e ) { \n\t\t$F301 ( e ) throw new HmacException ( NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "public void exportSymbols ( $F806 exportNames , Symbol [ ] symbols ) { \n\tif ( exportedSymbols == null ) $F13242 ( exportedSymbols ) for ( int i = NUM00 ; \n\ti < exportNames . length && i < symbols . length ; \n\ti ++ ) { \n\t\texportedSymbols . add ( new ExportedSymbol ( symbols [ i ] , exportNames [ i ] ) ) ; \n\t\t} \n\t} \n"}, {"code": "static boolean isFulfilling ( int m ) $F9734 ( m , FULFILLING ) "}, {"code": "$F1 public synchronized void addDataSourceListener ( DataSourceListener dsl ) { \n\tm_dataSourceListeners . addElement ( dsl ) ; \n\tif ( m_format != null ) { \n\t\t$F179981 ( e , this , m_format ) dsl . acceptDataSet ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public static AnnotationMirror findEffectiveAnnotationInHierarchy ( final QualifierHierarchy qualifierHierarchy , final AnnotatedTypeMirror toSearch , final AnnotationMirror top ) $F33971 ( findEffectiveAnnotationInHierarchy , qualifierHierarchy , toSearch , top , _BOOL ) "}, {"code": "public boolean toFail $F72 { \n\tLifecycleState state ; \n\tsynchronized ( this ) { \n\t\tstate = _state ; \n\t\tif ( state . isAfterDestroying ( ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t_state = FAILED ; \n\t\t$F9171 ( _lastChangeTime , CurrentTime ) } \n\tif ( _log != null && _log . isLoggable ( _level ) ) _log . log ( _level , NUM00 + _name ) ; \n\tnotifyListeners ( state , FAILED ) ; \n\t_failCount ++ ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private static void read ( InputStream in , $F96 buf , int pos , int n ) throws IOException { \n\tint read = NUM00 ; \n\tint res = NUM00 ; \n\twhile ( read < n ) { \n\t\tres = in . read ( buf , read + pos , n - read ) ; \n\t\tif ( res > NUM00 ) { \n\t\t\tread += res ; \n\t\t\t} \n\t\telse { \n\t\t\t$F132377 ( read , n ) } \n\t\t} \n\t} \n"}, {"code": "public double evaluate ( VectorInstance x , VectorInstance y ) throws Exception { \n\tVectorInstance diff = x . subtract ( y ) ; \n\tdouble result = - m_gamma * diff . dotProduct ( diff ) ; \n\treturn Math . exp ( result ) ; \n\t} \n"}, {"code": "void parseFinish $F72 { \n\tmChildren = mCurrentGroup . getChildren ( ) ; \n\t} \n"}, {"code": "void cancelIncludedOnly $F72 { \n\tif ( ! _showAllInput ) $F284193 ( _inputAllButton ) if ( ! _showAllOutput ) $F284193 ( _outputAllButton ) if ( ! _showAllAlign ) $F284193 ( _alignAllButton ) } \n"}, {"code": "$F14699 killAll ( boolean rootIncluded ) { \n\t$F14699 killed = new $F201 ( rootIncluded ? entries . size ( ) : $F2281 ( entries ) ) ; \n\tEntry entry ; \n\tfor ( int i = $F2281 ( entries ) ; \n\ti > $F17973 ( rootIncluded ) ; \n\ti -- ) { \n\t\tentry = entries . get ( i ) ; \n\t\tif ( entry . dead ) $F598 entry . dead = _BOOL ; \n\t\tif ( i != NUM00 ) $F207 ( killed , entry ) } \n\treturn killed ; \n\t} \n"}, {"code": "public static void createErrorDialog $F2236 ( title , message ) { \n\tfinal Alert alert = new Alert ( AlertType . ERROR ) ; \n\talert . setTitle ( title ) ; \n\talert . setContentText ( message ) ; \n\talert . setHeaderText ( null ) ; \n\talert . showAndWait ( ) ; \n\t} \n"}, {"code": "public static String checkIndexHeaderSuffix ( DataInput in , String expectedSuffix ) throws IOException { \n\tint suffixLength = $F186326 ( in ) ; \n\tbyte suffixBytes [ ] = new byte [ suffixLength ] ; \n\tin . readBytes ( suffixBytes , NUM00 , suffixBytes . length ) ; \n\tString suffix = new String ( suffixBytes , NUM00 , suffixBytes . length , StandardCharsets . UTF_8 ) ; \n\tif $F2137 ( suffix , expectedSuffix ) { \n\t\tthrow new CorruptIndexException ( NUM00 + expectedSuffix + NUM00 + suffix , in ) ; \n\t\t} \n\treturn suffix ; \n\t} \n"}, {"code": "protected void tag ( String tag , ArrayList names , ArrayList values , int nattr , boolean close ) { \n\tspacing ( ) ; \n\t$F21384 ( m_out ) m_out . print ( tag ) ; \n\tfor ( $F1316 ( i , nattr ) ) { \n\t\t$F21384 ( m_out ) m_out . print ( $F120 ( names , i ) ) ; \n\t\t$F21384 ( m_out ) $F21384 ( m_out ) $F163674 ( escapeString , values , i ) ; \n\t\t$F21384 ( m_out ) } \n\tif ( close ) $F21384 ( m_out ) $F21384 ( m_out ) println ( ) ; \n\t$F45123 ( close , m_tagStack , tag ) } \n"}, {"code": "public static String parseDiskString ( String input ) { \n\tString delims = NUM00 ; \n\t$F35105 ( tokens , input , delims ) return tokens [ NUM00 ] ; \n\t} \n"}, {"code": "protected void drawCloud ( int x , int y , int w , int h , Color fillColor , Paint fillPaint , Color penColor , boolean shadow ) { \n\t$F13609 ( path ) path . moveTo ( ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) ) ; \n\tpath . curveTo ( ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) , ( float ) x , ( float ) ( y + NUM00 * h ) , ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) ) ; \n\tpath . curveTo ( ( float ) x , ( float ) ( y + NUM00 * h ) , ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) , ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) ) ; \n\tpath . curveTo ( ( float ) ( x + NUM00 * w ) , ( float ) ( y + h ) , ( float ) ( x + NUM00 * w ) , ( float ) ( y + h ) , ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) ) ; \n\tpath . curveTo ( ( float ) ( x + w ) , ( float ) ( y + NUM00 * h ) , ( float ) ( x + w ) , ( float ) ( y + NUM00 * h ) , ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) ) ; \n\tpath . curveTo ( ( float ) ( x + w ) , ( float ) ( y + NUM00 * h ) , ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) , ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) ) ; \n\tpath . curveTo ( ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) , ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) , ( float ) ( x + NUM00 * w ) , ( float ) ( y + NUM00 * h ) ) ; \n\t$F2272 ( path ) drawPath ( path , fillColor , fillPaint , penColor , shadow ) ; \n\t} \n"}, {"code": "private static boolean isTrusted ( Object obj , TrustVerifier . Context ctx ) throws RemoteException { \n\t$F86788 ( saved , state ) try { \n\t\tstate . set ( obj ) ; \n\t\treturn ctx . isTrustedObject ( obj ) ; \n\t\t} \n\tfinally $F24242 ( state , saved ) } \n"}, {"code": "public static PersistentSearchRequestControl newControl ( final boolean isCritical , final boolean changesOnly , final boolean returnECs , final PersistentSearchChangeType ... changeTypes ) { \n\tReject . ifNull ( ( Object ) changeTypes ) ; \n\treturn newControl ( isCritical , changesOnly , returnECs , Arrays . asList ( changeTypes ) ) ; \n\t} \n"}, {"code": "private void connectEqualized ( SynapseGroup synapseGroup ) { \n\t$F14244 ( currentOrderingIndices , sourceNeurons ) int numConnectsPerSrc ; \n\tint expectedNumSyns ; \n\tif ( synapseGroup . isRecurrent ( ) && ! selfConnectionAllowed ) { \n\t\tnumConnectsPerSrc = ( int ) ( connectionDensity * $F33765 ( sourceNeurons ) ) ; \n\t\t} \n\telse { \n\t\tnumConnectsPerSrc = ( int ) ( connectionDensity * targetNeurons . length ) ; \n\t\t} \n\texpectedNumSyns = numConnectsPerSrc * sourceNeurons . length ; \n\tsynapseGroup . preAllocateSynapses ( expectedNumSyns ) ; \n\tfor ( $F151668 ( i , n , sourceNeurons ) ) { \n\t\tcurrentOrderingIndices [ i ] = numConnectsPerSrc ; \n\t\tNeuron src = sourceNeurons [ i ] ; \n\t\tNeuron tar ; \n\t\tfor ( $F119 ( j , numConnectsPerSrc ) ) { \n\t\t\ttar = targetNeurons [ sparseOrdering [ i ] [ j ] ] ; \n\t\t\tSynapse s = new Synapse ( src , tar ) ; \n\t\t\tsynapseGroup . addNewSynapse ( s ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static Number multiply ( Character left , Character right ) $F209729 ( multiply , Integer , left , right ) "}, {"code": "public static String normalize ( final CharSequence self ) { \n\t$F52199 ( s , self ) $F1384 ( nx , s ) $F7879 ( nx , s ) $F22998 ( len , s ) $F94214 ( sb , len ) int i = NUM00 ; \n\tdo { \n\t\tsb . append ( s , i , nx ) ; \n\t\t$F84 ( sb ) if ( ( i = nx + NUM00 ) >= len ) $F597 if $F11983 ( s , i ) { \n\t\t\tif ( ++ i >= len ) $F597 } \n\t\t$F61909 ( nx , s , i ) } \n\twhile ( nx > NUM00 ) ; \n\tsb . append ( s , i , len ) ; \n\t$F92 ( sb ) } \n"}, {"code": "public void addZoneChangeListener ( ZoneChangeListener listener ) $F207 ( zoneChangeListeners , listener ) "}, {"code": "public void write ( final int b ) throws IOException { \n\tif ( m_store == null ) $F48927 ( ERR_NO_STORE ) if ( m_isSaved ) $F48927 ( ERR_ALREADY_SAVED ) if ( m_count == m_blobThreshold && ! m_writingHdr ) { \n\t\tif ( m_blobHeader == null ) { \n\t\t\t$F117818 ( m_blobHeader ) } \n\t\tfinal int curAddr = ( int ) m_store . alloc ( m_buf , m_count , m_context ) ; \n\t\tm_blobHeader . add ( curAddr ) ; \n\t\tm_count = NUM00 ; \n\t\t} \n\t$F11740 ( m_buf , m_count , b ) m_bytesWritten ++ ; \n\t} \n"}, {"code": "public StartListener ( Object resource ) { \n\t_resource = resource ; \n\t} \n"}, {"code": "public $F5675 asFlatList $F72 { \n\t$F237846 ( list ) for ( $F50810 ( i , getRowCount ) ) { \n\t\tfor ( $F50810 ( j , getColumnCount ) ) $F18351 ( list , getLogicalValueAt , i , j ) } \n\treturn list ; \n\t} \n"}, {"code": "@ Beta public void reset $F72 $F70200 ( schedulersHook ) "}, {"code": "$F76441 ( key , cacheKey , mDigest , MessageDigest , bytesToHexString , String ) "}, {"code": "public void recordTimestamp $F72 { \n\t$F657 ( curTimestamp , System ) if ( usedFields > NUM00 ) { \n\t\tlong diff = curTimestamp - lastValue ; \n\t\tif ( usedFields == diffs . length ) { \n\t\t\tlong removedValue = diffs [ curPosition ] ; \n\t\t\tdiffs [ curPosition ] = diff ; \n\t\t\tcalculateNewAverage ( removedValue , diff , _BOOL ) ; \n\t\t\tshiftEnd ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\tcalculateNewAverage ( NUM00 , diff , _BOOL ) ; \n\t\t\tdiffs [ curPosition ] = diff ; \n\t\t\tshiftEnd ( ) ; \n\t\t\t} \n\t\t} \n\telse if ( lastValue != - NUM00 ) { \n\t\tlong diff = curTimestamp - lastValue ; \n\t\tcurrentAverage = NUM00 ; \n\t\tdiffs [ curPosition ] = diff ; \n\t\tcalculateNewAverage ( NUM00 , diff , _BOOL ) ; \n\t\tshiftEnd ( ) ; \n\t\t} \n\tlastValue = curTimestamp ; \n\t} \n"}, {"code": "@ AfterMethod public void tearDown $F72 throws Exception { \n\tThrowable t = threadFailure . getAndSet ( null ) ; \n\tif ( t != null ) { \n\t\tif ( t instanceof Error ) $F106249 ( t ) else if ( t instanceof RuntimeException ) $F219952 ( t ) else if ( t instanceof Exception ) throw ( Exception ) t ; \n\t\telse { \n\t\t\tAssertionFailedError afe = new AssertionFailedError $F3362 ( t ) ; \n\t\t\tafe . initCause ( t ) ; \n\t\t\tthrow afe ; \n\t\t\t} \n\t\t} \n\tif $F2754 ( Thread ) tearDownFail ( NUM00 ) ; \n\tcheckForkJoinPoolThreadLeaks ( ) ; \n\t} \n"}, {"code": "public void parse ( String string ) { \n\t$F896 ( string ) int bufferSize = Math . max ( MIN_BUFFER_SIZE , $F90553 ( Math , DEFAULT_BUFFER_SIZE , string ) ) ; \n\ttry { \n\t\tparse ( new StringReader ( string ) , bufferSize ) ; \n\t\t} \n\t$F12153 ( exception ) } \n"}, {"code": "protected double defaultMaxRadius $F72 { \n\treturn Math . sqrt ( NUM00 ) ; \n\t} \n"}, {"code": "public $F1469 toCharArray $F72 { \n\t$F18064 ( newValue , count ) $F135 ( System , buf , newValue , count ) return newValue ; \n\t} \n"}, {"code": "$F1 protected int sizePendingWorkers $F72 $F1652 ( _pendingWorkers ) "}, {"code": "public void insert ( Component component , int index ) { \n\t$F6853 ( index ) int nitems = getComponentCount ( ) ; \n\tVector $F44984 tempItems = new Vector $F44984 $F72 ; \n\tfor ( int i = index ; \n\ti < nitems ; \n\ti ++ ) { \n\t\t$F78620 ( tempItems , getComponent , index ) remove ( index ) ; \n\t\t} \n\tadd ( component ) ; \n\tfor ( Component tempItem : tempItems ) { \n\t\tadd ( tempItem ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F3803 unescape ( String source , char escapeChar , $F1469 specialCharacters , char splitCharacter , int splitLimit ) { \n\t$F89604 ( result ) $F83 ( b ) boolean readEscape = _BOOL ; \n\tint indexCount = - NUM00 ; \n\tfor ( $F2998 ( c , source ) ) { \n\t\tindexCount ++ ; \n\t\tif ( readEscape ) { \n\t\t\tboolean found = _BOOL ; \n\t\t\tif ( c == splitCharacter ) $F40007 ( found , _BOOL , b , c ) else if ( c == escapeChar ) $F40007 ( found , _BOOL , b , c ) else { \n\t\t\t\tfor ( char s : specialCharacters ) { \n\t\t\t\t\tif ( s == c ) { \n\t\t\t\t\t\tfound = _BOOL ; \n\t\t\t\t\t\tb . append ( c ) ; \n\t\t\t\t\t\t$F597 } \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( ! found ) $F60154 ( source , c ) readEscape = _BOOL ; \n\t\t\t} \n\t\telse if ( c == escapeChar ) { \n\t\t\treadEscape = _BOOL ; \n\t\t\t} \n\t\telse if ( c == splitCharacter ) { \n\t\t\treadEscape = _BOOL ; \n\t\t\t$F40018 ( result , b ) if ( splitLimit != - NUM00 ) { \n\t\t\t\tif ( result . size ( ) == splitLimit - NUM00 ) { \n\t\t\t\t\tresult . add ( source . substring ( indexCount + NUM00 ) ) ; \n\t\t\t\t\treturn result ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t$F6932 ( b ) } \n\t\telse $F40007 ( readEscape , _BOOL , b , c ) } \n\t$F40018 ( result , b ) return result ; \n\t} \n"}, {"code": "protected int drawLegend ( Canvas canvas , DefaultRenderer renderer , $F806 titles , int left , int right , int y , int width , int height , int legendSize , Paint paint , boolean calculate ) { \n\tfloat size = NUM00 ; \n\tif ( renderer . isShowLegend ( ) ) { \n\t\tfloat currentX = left ; \n\t\tfloat currentY = y + height - legendSize + size ; \n\t\t$F175116 ( paint , Align ) paint . setTextSize ( renderer . getLegendTextSize ( ) ) ; \n\t\tint sLength = Math . min ( titles . length , renderer . getSeriesRendererCount ( ) ) ; \n\t\tfor ( $F119 ( i , sLength ) ) { \n\t\t\tSimpleSeriesRenderer r = renderer . getSeriesRendererAt ( i ) ; \n\t\t\tfinal float lineSize = getLegendShapeWidth ( i ) ; \n\t\t\tif ( r . isShowLegendItem ( ) ) { \n\t\t\t\tString text = titles [ i ] ; \n\t\t\t\tif ( titles . length == renderer . getSeriesRendererCount ( ) ) { \n\t\t\t\t\t$F14782 ( paint , r ) } \n\t\t\t\telse { \n\t\t\t\t\tpaint . setColor ( Color . LTGRAY ) ; \n\t\t\t\t\t} \n\t\t\t\t$F5415 widths = new float $F31781 ( text ) ; \n\t\t\t\tpaint . getTextWidths ( text , widths ) ; \n\t\t\t\tfloat sum = NUM00 ; \n\t\t\t\tfor ( float value : widths ) { \n\t\t\t\t\tsum += value ; \n\t\t\t\t\t} \n\t\t\t\tfloat extraSize = lineSize + NUM00 + sum ; \n\t\t\t\tfloat currentWidth = currentX + extraSize ; \n\t\t\t\tif ( i > NUM00 && getExceed ( currentWidth , renderer , right , width ) ) { \n\t\t\t\t\tcurrentX = left ; \n\t\t\t\t\tcurrentY += renderer . getLegendTextSize ( ) ; \n\t\t\t\t\tsize += renderer . getLegendTextSize ( ) ; \n\t\t\t\t\tcurrentWidth = currentX + extraSize ; \n\t\t\t\t\t} \n\t\t\t\tif ( getExceed ( currentWidth , renderer , right , width ) ) { \n\t\t\t\t\tfloat maxWidth = right - currentX - lineSize - NUM00 ; \n\t\t\t\t\tif ( isVertical ( renderer ) ) { \n\t\t\t\t\t\tmaxWidth = width - currentX - lineSize - NUM00 ; \n\t\t\t\t\t\t} \n\t\t\t\t\tint nr = paint . breakText ( text , _BOOL , maxWidth , widths ) ; \n\t\t\t\t\ttext = $F30497 ( text , nr ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( ! calculate ) { \n\t\t\t\t\tdrawLegendShape ( canvas , r , currentX , currentY , i , paint ) ; \n\t\t\t\t\tdrawString ( canvas , text , currentX + lineSize + NUM00 , currentY + NUM00 , paint ) ; \n\t\t\t\t\t} \n\t\t\t\tcurrentX += extraSize ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn Math . round ( size + renderer . getLegendTextSize ( ) ) ; \n\t} \n"}, {"code": "$F1 public String append ( String path , InputStream is ) throws MalformedURLException , IOException , AuthenticationException { \n\tString resp = null ; \n\tensureValidToken ( ) ; \n\tString spec = MessageFormat . format ( NUM00 , URLUtil . encodePath ( path ) , this . principal ) ; \n\tString redirectUrl = null ; \n\tHttpURLConnection conn = authenticatedURL . openConnection ( new URL ( new URL ( httpfsUrl ) , spec ) , token ) ; \n\t$F2407 ( conn ) conn . setInstanceFollowRedirects ( _BOOL ) ; \n\t$F2410 ( conn ) logger . info ( NUM00 + conn . getHeaderField ( NUM00 ) ) ; \n\tresp = result ( conn , _BOOL ) ; \n\tif ( conn . getResponseCode ( ) == NUM00 ) redirectUrl = conn . getHeaderField ( NUM00 ) ; \n\t$F8074 ( conn ) if ( redirectUrl != null ) { \n\t\tconn = authenticatedURL . openConnection ( new URL ( redirectUrl ) , token ) ; \n\t\t$F2407 ( conn ) conn . setDoOutput ( _BOOL ) ; \n\t\tconn . setDoInput ( _BOOL ) ; \n\t\tconn . setUseCaches ( _BOOL ) ; \n\t\t$F7965 ( conn ) final int _SIZE = is . available ( ) ; \n\t\tconn . setRequestProperty ( NUM00 , NUM00 + _SIZE ) ; \n\t\tconn . setFixedLengthStreamingMode ( _SIZE ) ; \n\t\t$F2410 ( conn ) $F147972 ( os , conn ) copy ( is , os ) ; \n\t\t$F59 ( is ) $F59 ( os ) resp = result ( conn , _BOOL ) ; \n\t\t$F8074 ( conn ) } \n\treturn resp ; \n\t} \n"}, {"code": "public EconomyConcurrentHashMap ( Map < $F13144 , $F9061 > m , IHashEntryHandler $F9340 handler ) { \n\tthis ( Math . max ( ( int ) ( m . size ( ) / DEFAULT_LOAD_FACTOR ) + NUM00 , DEFAULT_INITIAL_CAPACITY ) , DEFAULT_LOAD_FACTOR , DEFAULT_CONCURRENCY_LEVEL , handler ) ; \n\tputAll ( m ) ; \n\t} \n"}, {"code": "void addRule ( $F806 selector , AttributeSet declaration , boolean isLinked ) { \n\tint n = selector . length ; \n\t$F83 ( sb ) $F13031 ( sb , selector ) for ( $F119 ( counter , n ) ) { \n\t\t$F84 ( sb ) $F6939 ( sb , selector , counter ) } \n\t$F1822 ( selectorName , sb ) Style rule = getStyle ( selectorName ) ; \n\tif ( rule == null ) { \n\t\tStyle altRule = addStyle ( selectorName , null ) ; \n\t\tsynchronized ( this ) { \n\t\t\tSelectorMapping mapping = getRootSelectorMapping ( ) ; \n\t\t\tfor ( $F18298 ( i , n ) ) { \n\t\t\t\tmapping = mapping . getChildSelectorMapping ( selector [ i ] , _BOOL ) ; \n\t\t\t\t} \n\t\t\trule = mapping . getStyle ( ) ; \n\t\t\tif ( rule == null ) { \n\t\t\t\trule = altRule ; \n\t\t\t\tmapping . setStyle ( rule ) ; \n\t\t\t\trefreshResolvedRules ( selectorName , selector , rule , mapping . getSpecificity ( ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F8577 ( isLinked , rule , getLinkedStyle ) rule . addAttributes ( declaration ) ; \n\t} \n"}, {"code": "public Builder appendReadData $F97 ( data ) { \n\tAssertions . checkState ( $F21052 ( data ) ) ; \n\tsegments . add ( new Segment ( data , null ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "private boolean isLatestDssKeystore ( TSLParserResult parseResult ) { \n\t$F3803 englishSchemeInformationURIs = parseResult . getEnglishSchemeInformationURIs ( ) ; \n\t$F297 ( englishSchemeInformationURIs , ojUrl ) } \n"}, {"code": "private synchronized void initResourceBundle ( String resourceBundleName ) { \n\tString current = this . resourceBundleName ; \n\tif ( current != null ) { \n\t\tif $F1238 ( current , resourceBundleName ) $F932 else $F60154 ( resourceBundleName , current ) } \n\tif ( resourceBundleName != null ) { \n\t\tthis . resourceBundle = loadResourceBundle ( resourceBundleName ) ; \n\t\tthis . resourceBundleName = resourceBundleName ; \n\t\t} \n\t} \n"}, {"code": "public LayerGraphicWarehouseSupport $F72 { \n\tinitDrawingAttributes ( ) ; \n\tgraphics = new OMGraphicList $F72 ; \n\tgraphics . setTraverseMode ( OMGraphicList . LAST_ADDED_ON_TOP ) ; \n\t} \n"}, {"code": "public boolean matchesNamingConvension $F72 { \n\t$F98869 ( packageName , JAVA_PACKAGE_CONVENSION ) } \n"}, {"code": "void rememberFactory ( String host , RMISocketFactory factory ) { \n\tsynchronized ( successTable ) { \n\t\twhile $F29395 ( hostList , MaxRememberedHosts ) { \n\t\t\tsuccessTable . remove ( hostList . elementAt ( NUM00 ) ) ; \n\t\t\thostList . removeElementAt ( NUM00 ) ; \n\t\t\t} \n\t\thostList . addElement ( host ) ; \n\t\tsuccessTable . put ( host , factory ) ; \n\t\t} \n\t} \n"}, {"code": "public void put ( String key , long value ) $F233270 ( key , urlParams , String , value ) "}, {"code": "public char next $F72 { \n\treturn pos < in . length ( ) ? in . charAt ( pos ++ ) : NUM00 ; \n\t} \n"}, {"code": "private $F15243 doRemoveFirstEntry $F72 { \n\tfor ( $F9341 b , n ; \n\t; \n\t) { \n\t\tif ( ( n = ( b = head . node ) . next ) == null ) $F1274 $F35175 ( f , n ) if ( n != b . next ) $F598 Object v = n . value ; \n\t\tif ( v == null ) { \n\t\t\tn . helpDelete ( b , f ) ; \n\t\t\t$F598 } \n\t\tif ( ! n . casValue ( v , null ) ) $F598 if ( ! n . appendMarker ( f ) || ! b . casNext ( n , f ) ) findFirst ( ) ; \n\t\tclearIndexToFirst ( ) ; \n\t\t$F1431 V vv = ( V ) v ; \n\t\treturn new $F189927 ( n . key , vv ) ; \n\t\t} \n\t} \n"}, {"code": "public ComputeTaskCancelledException ( Throwable cause ) $F51022 ( this , cause ) "}, {"code": "public static int normalize ( $F1469 src , int srcStart , int srcLimit , $F1469 dest , int destStart , int destLimit , Mode mode , int options ) { \n\tint length = mode . normalize ( src , srcStart , srcLimit , dest , destStart , destLimit , options ) ; \n\tif ( length <= ( destLimit - destStart ) ) { \n\t\treturn length ; \n\t\t} \n\telse { \n\t\tthrow new IndexOutOfBoundsException $F59159 ( Integer , length ) ; \n\t\t} \n\t} \n"}, {"code": "private void removeObsoleteElements ( $F3803 names , Map < String , View > sharedElements , $F3803 elementsToRemove ) { \n\tif $F3817 ( elementsToRemove ) { \n\t\tnames . removeAll ( elementsToRemove ) ; \n\t\t$F96731 ( elementToRemove , elementsToRemove , sharedElements ) } \n\t} \n"}, {"code": "public boolean isHighlightWithInvisibleEdge $F72 { \n\treturn highlightWithInvisibleEdge ; \n\t} \n"}, {"code": "public void removeAction ( NetworkUpdateAction action ) { \n\tactionList . remove ( action ) ; \n\tfor ( UpdateManagerListener listener : listeners ) { \n\t\tlistener . actionRemoved ( action ) ; \n\t\t} \n\t} \n"}, {"code": "public static double bufferDistanceError ( int quadSegs ) { \n\tdouble alpha = Math . PI / NUM00 / quadSegs ; \n\treturn NUM00 - Math . cos ( alpha / NUM00 ) ; \n\t} \n"}, {"code": "public $F7329 next $F72 { \n\ttry { \n\t\tcurrentHeaderPosition = nextHeaderPosition ; \n\t\tString readHeader = nextLine ; \n\t\tnextHeaderPosition += readHeader . length ( ) + endOfLineBytes ; \n\t\treadHeader = NUM00 + readHeader . substring ( NUM00 ) ; \n\t\t$F27015 ( readSequence , r ) nextHeaderPosition += readSequence . length ( ) + endOfLineBytes ; \n\t\t$F27015 ( comments , r ) nextHeaderPosition += comments . length ( ) + endOfLineBytes ; \n\t\tif $F3106 ( comments ) { \n\t\t\t$F27015 ( qualityValues , r ) nextHeaderPosition += qualityValues . length ( ) + endOfLineBytes ; \n\t\t\t} \n\t\t$F36243 ( nextLine , r ) $F83164 ( readHeader , readSequence ) } \n\tcatch ( IOException e ) { \n\t\tBasic . caught ( e ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public void add ( Character character ) { \n\telements . add ( character == null ? JsonNull . INSTANCE : new JsonPrimitive ( character ) ) ; \n\t} \n"}, {"code": "public static boolean isValidIfd ( int ifdId ) { \n\treturn ifdId == IfdId . TYPE_IFD_0 || ifdId == IfdId . TYPE_IFD_1 || ifdId == IfdId . TYPE_IFD_EXIF || ifdId == IfdId . TYPE_IFD_INTEROPERABILITY || ifdId == IfdId . TYPE_IFD_GPS ; \n\t} \n"}, {"code": "public void removeChild ( Group theGroup ) $F106 ( mChildren , theGroup ) "}, {"code": "protected StoragePort checkPortExistsInDB ( String nativeGuid ) throws IOException { \n\tStoragePort port = null ; \n\t$F42521 portInDB = CustomQueryUtility . getActiveStoragePortByNativeGuid ( _dbClient , nativeGuid ) ; \n\tif $F1032 ( portInDB ) $F36987 ( port , portInDB ) return port ; \n\t} \n"}, {"code": "public void appendSplitElement ( Fragment aSplit ) $F207 ( splits , aSplit ) "}, {"code": "public Iterator enumerateLiteralResultAttributes $F72 { \n\treturn ( null == m_avts ) ? null : m_avts . iterator ( ) ; \n\t} \n"}, {"code": "public OsmHandler ( MapBuilder meConsumer ) { \n\tosmElementProcessor = new OsmElementProcessor ( null , meConsumer ) ; \n\t} \n"}, {"code": "public void close $F72 throws IOException { \n\tflushBits ( ) ; \n\t$F59 ( out ) } \n"}, {"code": "public RespokeDirectConnection directConnection $F72 { \n\tif ( null != directConnectionReference ) $F1522 ( directConnectionReference ) else $F1337 } \n"}, {"code": "private String appendNationalNumber ( String nationalNumber ) { \n\t$F1749 ( prefixBeforeNationalNumberLength , prefixBeforeNationalNumber ) if ( shouldAddSpaceAfterNationalPrefix && prefixBeforeNationalNumberLength > NUM00 && prefixBeforeNationalNumber . charAt ( prefixBeforeNationalNumberLength - NUM00 ) != SEPARATOR_BEFORE_NATIONAL1BER ) { \n\t\treturn new String ( prefixBeforeNationalNumber ) + SEPARATOR_BEFORE_NATIONAL1BER + nationalNumber ; \n\t\t} \n\telse { \n\t\treturn prefixBeforeNationalNumber + nationalNumber ; \n\t\t} \n\t} \n"}, {"code": "public void cut $F72 $F9099 ( copy , deleteSelectedObjects ) "}, {"code": "public void stop $F72 { \n\tsetLedOn ( _BOOL ) ; \n\tif ( null != blinkFuture ) $F11437 ( blinkFuture , _BOOL ) if ( null != blinkService ) $F79149 ( blinkService ) } \n"}, {"code": "public synchronized void release $F72 $F9096 ( index ) "}, {"code": "public void configure $F72 { \n\tif ( cmdPrefix != null ) { \n\t\t$F10128 ( prefix , cmdPrefix ) } \n\t} \n"}, {"code": "protected void writeTransform ( AffineTransform t ) throws IOException { \n\tpageStream . matrix ( t ) ; \n\t} \n"}, {"code": "public void testSignumPositive $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) $F3037 ( assertEquals , aNumber ) } \n"}, {"code": "public PainterChain prependPainter ( Painter p ) { \n\tPainter [ ] newChain = new Painter $F22598 ( chain ) ; \n\t$F7057 ( System , chain , newChain ) newChain [ NUM00 ] = p ; \n\treturn new PainterChain ( newChain ) ; \n\t} \n"}, {"code": "$F5466 private Operator . Kind parseOperator ( TokenStream tokens ) { \n\tif $F16934 ( tokens ) { \n\t\t$F24630 ( tokens ) tokens . expect ( NUM00 ) ; \n\t\treturn Operator . Kind . EQUALS ; \n\t\t} \n\tif $F16934 ( tokens ) { \n\t\t$F24630 ( tokens ) tokens . expect ( NUM00 ) ; \n\t\treturn Operator . Kind . NOT_EQUALS ; \n\t\t} \n\tif $F16934 ( tokens ) { \n\t\t$F24630 ( tokens ) if $F16934 ( tokens ) { \n\t\t\t$F24630 ( tokens ) return Operator . Kind . LESS_EQUAL ; \n\t\t\t} \n\t\treturn Operator . Kind . LESS ; \n\t\t} \n\tif $F16934 ( tokens ) { \n\t\t$F24630 ( tokens ) if $F16934 ( tokens ) { \n\t\t\t$F24630 ( tokens ) return Operator . Kind . GREATER_EQUAL ; \n\t\t\t} \n\t\treturn Operator . Kind . GREATER ; \n\t\t} \n\t$F1274 } \n"}, {"code": "$F1 public boolean dragTo ( Selector obj , Selector destObj , int steps ) throws UiObjectNotFoundException , NotImplementedException { \n\treturn dragTo ( device . findObject ( obj . toUiSelector ( ) ) , destObj , steps ) ; \n\t} \n"}, {"code": "private void queueUpSyncs ( final Cursor contactsCursor ) { \n\tContactSyncEntry syncEntry = null ; \n\twhile $F12260 ( contactsCursor ) { \n\t\tif ( syncEntry == null ) { \n\t\t\tsyncEntry = new ContactSyncEntry ( UPLOAD_BATCH_SIZE ) ; \n\t\t\t} \n\t\tfinal String number = contactsCursor . getString ( contactsCursor . getColumnIndex ( ContactsContract . CommonDataKinds . Phone . NUMBER ) ) ; \n\t\tfinal String name = contactsCursor . getString ( contactsCursor . getColumnIndex ( ContactsContract . CommonDataKinds . Phone . DISPLAY_NAME ) ) ; \n\t\tif $F20899 ( TextUtils , number ) { \n\t\t\tsyncEntry . addNumber ( numberToNational ( number ) ) ; \n\t\t\tsyncEntry . addName ( name ) ; \n\t\t\tif ( syncEntry . isFull ( ) ) { \n\t\t\t\t$F13527 ( Logger , TAG ) mSyncQueue . add ( syncEntry ) ; \n\t\t\t\tsyncEntry = null ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public synchronized void removeSeries ( int index ) $F106 ( mSeries , index ) "}, {"code": "public static void addGlue ( JComponent b , int layout ) { \n\tb . add ( getAxis ( b , layout ) == BoxLayout . X_AXIS ? Box . createHorizontalGlue ( ) : Box . createVerticalGlue ( ) ) ; \n\t} \n"}, {"code": "public static void writeResultToFile ( Result result , String fname ) throws Exception { \n\tPrintWriter outer = new PrintWriter ( new BufferedWriter ( new FileWriter ( fname ) ) ) ; \n\t$F9826 ( outer , result ) $F59 ( outer ) } \n"}, {"code": "private JMXProvider $F72 $F845 "}, {"code": "protected void writeBlockletInfoToFile ( List < BlockletInfoColumnar > infoList , FileChannel channel , String filePath ) throws CarbonDataWriterException { \n\ttry { \n\t\tlong currentPosition = channel . size ( ) ; \n\t\tCarbonFooterWriter writer = new CarbonFooterWriter ( filePath ) ; \n\t\tFileFooter convertFileMeta = CarbonMetadataUtil . convertFileFooter ( infoList , localCardinality . length , localCardinality , thriftColumnSchemaList , segmentProperties ) ; \n\t\tfillBlockIndexInfoDetails ( infoList , convertFileMeta . getNum_rows ( ) , filePath , currentPosition ) ; \n\t\twriter . writeFooter ( convertFileMeta , currentPosition ) ; \n\t\t} \n\tcatch ( IOException e ) $F85378 ( e ) } \n"}, {"code": "private static void renderTree ( Tree tree , int indent , boolean parentLabelNull , boolean firstSibling , boolean leftSiblingPreTerminal , boolean topLevel , StringBuilder sb ) { \n\tboolean suppressIndent = ( parentLabelNull || ( firstSibling && tree . isPreTerminal ( ) ) || ( leftSiblingPreTerminal && tree . isPreTerminal ( ) ) ) ; \n\tif ( suppressIndent ) $F86 ( sb ) else { \n\t\t$F48750 ( topLevel , sb ) $F103815 ( i , indent , sb ) } \n\tif ( tree . isLeaf ( ) || tree . isPreTerminal ( ) ) $F47994 ( renderFlat , tree , sb ) $F84 ( sb ) sb . append ( tree . getLabel ( ) ) ; \n\trenderChildren ( tree . getChildren ( ) , indent + NUM00 , _BOOL , sb ) ; \n\t$F84 ( sb ) } \n"}, {"code": "public static StringBuffer replaceRegex ( StringBuffer original , String regex , String replace , boolean CASE_INSENSITIVE ) { \n\tint flags = NUM00 ; \n\tif ( CASE_INSENSITIVE ) flags = Pattern . CASE_INSENSITIVE ; \n\tPattern p = Pattern . compile ( regex , flags ) ; \n\t$F1150 ( m , p , original ) $F280 ( newSB ) boolean result = m . find ( ) ; \n\twhile ( result ) { \n\t\tm . appendReplacement ( newSB , replace ) ; \n\t\tresult = m . find ( ) ; \n\t\t} \n\tm . appendTail ( newSB ) ; \n\treturn newSB ; \n\t} \n"}, {"code": "public boolean equalsChars ( String a , int ai , String b , int bi , boolean ignoreCase ) { \n\t$F1280 ( ca , a , ai ) $F1280 ( cb , b , bi ) if ( ignoreCase ) { \n\t\t$F186161 ( ca , Character ) $F186161 ( cb , Character ) } \n\treturn ca == cb ; \n\t} \n"}, {"code": "private void adjustBackingFileLength $F31474 ( buffer , index ) throws IOException { \n\tif $F12414 ( buffer ) $F14525 long newsize = fHeader . headerSize ( ) + ( index * CHUNK_ENC_SIZE ) + CHUNK_IV_SIZE + buffer . length + CHUNK_TLEN ; \n\tif ( newsize > realLength ( ) ) { \n\t\tbackingRandomAccessFile . setLength ( newsize ) ; \n\t\t} \n\t} \n"}, {"code": "private static Collection < Collection < DsnNetPin > > create_ordered_subnets ( Collection < DsnNetPin > p_pin_list ) { \n\tCollection < Collection < DsnNetPin > > result = new LinkedList < Collection < DsnNetPin > > $F72 ; \n\t$F4975 ( p_pin_list , result ) Iterator < DsnNetPin > it = p_pin_list . iterator ( ) ; \n\tDsnNetPin prev_pin = it . next ( ) ; \n\twhile $F2921 ( it ) { \n\t\tDsnNetPin next_pin = it . next ( ) ; \n\t\tSet < DsnNetPin > curr_subnet_pin_list = new java . util . TreeSet < DsnNetPin > $F72 ; \n\t\tcurr_subnet_pin_list . add ( prev_pin ) ; \n\t\tcurr_subnet_pin_list . add ( next_pin ) ; \n\t\tresult . add ( curr_subnet_pin_list ) ; \n\t\tprev_pin = next_pin ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F1 public void run ( int connID , $F806 args ) { \n\tif $F9634 ( args ) { \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\t} \n\ttry { \n\t\tif $F3305 ( args ) { \n\t\t\tString cmd = args [ NUM00 ] ; \n\t\t\tif $F21935 ( cmd ) { \n\t\t\t\tif $F3305 ( args ) { \n\t\t\t\t\t$F167151 ( id , Integer , args ) server . sendServerChat ( connID , strListNetwork ( connID , id , _BOOL ) ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tserver . sendServerChat ( connID , strListNetworks ( connID , _BOOL ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if $F21935 ( cmd ) { \n\t\t\t\tif $F3305 ( args ) { \n\t\t\t\t\t$F167151 ( id , Integer , args ) server . sendServerChat ( connID , strListNetwork ( connID , id , _BOOL ) ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tserver . sendServerChat ( connID , strListNetworks ( connID , _BOOL ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if $F21935 ( cmd ) { \n\t\t\t\tdebug ( connID , server ) ; \n\t\t\t\t} \n\t\t\telse if $F21935 ( cmd ) { \n\t\t\t\tif $F3305 ( args ) { \n\t\t\t\t\t$F167151 ( id1 , Integer , args ) $F167151 ( id2 , Integer , args ) $F167151 ( id3 , Integer , args ) server . sendServerChat ( connID , strLink3 ( connID , id1 , id2 , id3 ) ) ; \n\t\t\t\t\t} \n\t\t\t\telse if $F3305 ( args ) { \n\t\t\t\t\t$F167151 ( id1 , Integer , args ) $F167151 ( id2 , Integer , args ) server . sendServerChat ( connID , strLink2 ( connID , id1 , id2 ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if $F21935 ( cmd ) { \n\t\t\t\tif $F3305 ( args ) { \n\t\t\t\t\t$F167151 ( id , Integer , args ) server . sendServerChat ( connID , strUnlinkID ( connID , id ) ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tserver . sendServerChat ( connID , strUnlinkAll ( connID ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tString failstr = args [ NUM00 ] ; \n\t\t\t\tfor ( $F1139 ( i , args ) ) { \n\t\t\t\t\tfailstr += NUM00 + args [ i ] ; \n\t\t\t\t\t} \n\t\t\t\tserver . sendServerChat ( connID , NUM00 + failstr + NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( NumberFormatException nfe ) { \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\t} \n\tcatch ( NullPointerException npe ) { \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\t} \n\tcatch ( IndexOutOfBoundsException ioobe ) { \n\t\tserver . sendServerChat ( connID , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private $F1469 parseEntityReference $F72 throws IOException { \n\tint pos = strpos ; \n\tif ( $F52502 ( ch , readCh ) ) { \n\t\tint n = NUM00 ; \n\t\tch = readCh ( ) ; \n\t\tif ( ( ch >= NUM00 ) && ( ch <= NUM00 ) || ch == NUM00 || ch == NUM00 ) { \n\t\t\tif $F220844 ( ch ) { \n\t\t\t\twhile $F220844 ( ch ) { \n\t\t\t\t\tn = ( n * NUM00 ) + ch - NUM00 ; \n\t\t\t\t\tch = readCh ( ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tch = readCh ( ) ; \n\t\t\t\tchar lch = ( char ) Character . toLowerCase ( ch ) ; \n\t\t\t\twhile ( ( lch >= NUM00 ) && ( lch <= NUM00 ) || ( lch >= NUM00 ) && ( lch <= NUM00 ) ) { \n\t\t\t\t\tif $F19295 ( lch ) { \n\t\t\t\t\t\tn = ( n * NUM00 ) + lch - NUM00 ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tn = ( n * NUM00 ) + lch - NUM00 + NUM00 ; \n\t\t\t\t\t\t} \n\t\t\t\t\tch = readCh ( ) ; \n\t\t\t\t\tlch = ( char ) Character . toLowerCase ( ch ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tswitch ( ch ) { \n\t\t\t\t$F1262 ln ++ ; \n\t\t\t\tch = readCh ( ) ; \n\t\t\t\tlfCount ++ ; \n\t\t\t\t$F597 $F1262 ln ++ ; \n\t\t\t\tif ( $F52502 ( ch , readCh ) ) { \n\t\t\t\t\tch = readCh ( ) ; \n\t\t\t\t\tcrlfCount ++ ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tcrCount ++ ; \n\t\t\t\t\t} \n\t\t\t\t$F597 $F300320 ( ch , readCh ) } \n\t\t\tchar $F19196 = mapNumericReference ( n ) ; \n\t\t\treturn data ; \n\t\t\t} \n\t\taddString ( NUM00 ) ; \n\t\tif ( ! parseIdentifier ( _BOOL ) ) { \n\t\t\terror ( NUM00 ) ; \n\t\t\tstrpos = pos ; \n\t\t\tchar $F19196 = $F4582 ; \n\t\t\treturn data ; \n\t\t\t} \n\t\t} \n\telse if ( ! parseIdentifier ( _BOOL ) ) { \n\t\tchar $F19196 = $F21901 ; \n\t\treturn data ; \n\t\t} \n\tboolean semicolon = _BOOL ; \n\tswitch ( ch ) { \n\t\t$F1262 ln ++ ; \n\t\tch = readCh ( ) ; \n\t\tlfCount ++ ; \n\t\t$F597 $F1262 ln ++ ; \n\t\tif ( $F52502 ( ch , readCh ) ) { \n\t\t\tch = readCh ( ) ; \n\t\t\tcrlfCount ++ ; \n\t\t\t} \n\t\telse { \n\t\t\tcrCount ++ ; \n\t\t\t} \n\t\t$F597 $F1262 semicolon = _BOOL ; \n\t\tch = readCh ( ) ; \n\t\t$F597 } \n\tString nm = getString ( pos ) ; \n\tEntity ent = dtd . getEntity ( nm ) ; \n\tif ( ! strict && ( ent == null ) ) { \n\t\tent = dtd . getEntity ( nm . toLowerCase ( ) ) ; \n\t\t} \n\tif ( ( ent == null ) || ! ent . isGeneral ( ) ) { \n\t\tif $F1277 ( nm ) { \n\t\t\terror ( NUM00 , nm ) ; \n\t\t\treturn $F11574 ; \n\t\t\t} \n\t\tString str = NUM00 + nm + ( semicolon ? NUM00 : NUM00 ) ; \n\t\tchar $F1310 = new char $F31781 ( str ) ; \n\t\tstr . getChars ( NUM00 , b . length , b , NUM00 ) ; \n\t\treturn b ; \n\t\t} \n\treturn ent . getData ( ) ; \n\t} \n"}, {"code": "private static String createJsMethodInvocationExpression ( String methodName , boolean isStatic , String ... paramNames ) { \n\t$F83 ( sb ) sb . append ( isStatic ? WND : THIS ) ; \n\t$F84 ( sb ) sb . append ( methodName ) ; \n\t$F84 ( sb ) for ( $F1139 ( i , paramNames ) ) { \n\t\t$F63265 ( i , sb ) $F6939 ( sb , paramNames , i ) } \n\t$F84 ( sb ) $F92 ( sb ) } \n"}, {"code": "public void doDoubleClickAction $F72 $F82623 ( doDoubleClickAction ) "}, {"code": "public static Node serializableInstance $F72 { \n\treturn new GraphNode $F580 ; \n\t} \n"}, {"code": "protected void dropTables ( $F3803 dropTableNames , SQLiteDatabase db ) { \n\tif $F1032 ( dropTableNames ) { \n\t\t$F5442 ( dropTableSQLS , dropTableNames ) for ( $F1139 ( i , dropTableSQLS ) ) { \n\t\t\tdropTableSQLS [ i ] = generateDropTableSQL ( dropTableNames . get ( i ) ) ; \n\t\t\t} \n\t\texecute ( dropTableSQLS , db ) ; \n\t\t} \n\t} \n"}, {"code": "private Segment createDiskSegment ( SegmentDescriptor descriptor ) { \n\tFile segmentFile = SegmentFile . createSegmentFile ( name , storage . directory ( ) , descriptor . id ( ) , descriptor . version ( ) ) ; \n\tBuffer buffer = FileBuffer . allocate ( segmentFile , Math . min ( DEFAULT_BUFFER_SIZE , descriptor . maxSegmentSize ( ) ) , Integer . MAX_VALUE ) ; \n\tdescriptor . copyTo ( buffer ) ; \n\tSegment segment = new Segment ( new SegmentFile ( segmentFile ) , buffer . slice ( ) , descriptor , createIndex ( descriptor ) , new OffsetPredicate $F72 , serializer . clone ( ) , this ) ; \n\t$F7028 ( LOGGER , segment ) return segment ; \n\t} \n"}, {"code": "public Boolean exists ( String email ) { \n\tfor ( Person person : people ) { \n\t\tif ( email . equals ( person . getEmail ( ) ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public synchronized boolean removeAll ( Collection c ) { \n\t$F8867 ( elements , getArray ) int len = elements . length ; \n\tif ( len != NUM00 ) { \n\t\tint newlen = NUM00 ; \n\t\t$F133 ( temp , len ) for ( $F1316 ( i , len ) ) { \n\t\t\tObject element = elements [ i ] ; \n\t\t\tif $F2200 ( c , element ) temp [ newlen ++ ] = element ; \n\t\t\t} \n\t\tif ( newlen != len ) { \n\t\t\tsetArray ( copyOfRange ( temp , NUM00 , newlen , $F22453 ) ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public long convertPolarStereographicToGeodetic ( double Easting , double Northing ) { \n\tdouble dy = NUM00 , dx = NUM00 ; \n\tdouble rho = NUM00 ; \n\tdouble t ; \n\tdouble PHI , sin_PHI ; \n\tdouble tempPHI = NUM00 ; \n\tdouble essin ; \n\tdouble pow_es ; \n\tdouble delta_radius ; \n\tlong Error_Code = POLAR_NO_ERROR ; \n\tdouble min_easting = Polar_False_Easting - Polar_Delta_Easting ; \n\tdouble max_easting = Polar_False_Easting + Polar_Delta_Easting ; \n\tdouble min_northing = Polar_False_Northing - Polar_Delta_Northing ; \n\tdouble max_northing = Polar_False_Northing + Polar_Delta_Northing ; \n\tif ( Easting > max_easting || Easting < min_easting ) { \n\t\tError_Code |= POLAR_EASTING_ERROR ; \n\t\t} \n\tif ( Northing > max_northing || Northing < min_northing ) { \n\t\tError_Code |= POLAR_NORTHING_ERROR ; \n\t\t} \n\tif ( Error_Code == POLAR_NO_ERROR ) { \n\t\tdy = Northing - Polar_False_Northing ; \n\t\tdx = Easting - Polar_False_Easting ; \n\t\t$F161998 ( rho , Math , dx , dy ) $F161998 ( delta_radius , Math , Polar_Delta_Easting , Polar_Delta_Northing ) if ( rho > delta_radius ) { \n\t\t\tError_Code |= POLAR_RADIUS_ERROR ; \n\t\t\t} \n\t\t} \n\tif ( Error_Code == POLAR_NO_ERROR ) { \n\t\tif $F188191 ( dy , dx ) { \n\t\t\tLatitude = PI_OVER_2 ; \n\t\t\tLongitude = Polar_Origin_Long ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( Southern_Hemisphere != NUM00 ) { \n\t\t\t\tdy *= - NUM00 ; \n\t\t\t\tdx *= - NUM00 ; \n\t\t\t\t} \n\t\t\tif ( Math . abs ( Math . abs ( Polar_Origin_Lat ) - PI_OVER_2 ) > NUM00 ) t = rho * tc / ( Polar_a_mc ) ; \n\t\t\telse t = rho * e4 / ( two_Polar_a ) ; \n\t\t\tPHI = PI_OVER_2 - NUM00 * Math . atan ( t ) ; \n\t\t\twhile $F227658 ( Math , PHI , tempPHI ) { \n\t\t\t\ttempPHI = PHI ; \n\t\t\t\tsin_PHI = Math . sin ( PHI ) ; \n\t\t\t\tessin = es * sin_PHI ; \n\t\t\t\tpow_es = Math . pow ( ( NUM00 - essin ) / ( NUM00 + essin ) , es_OVER_2 ) ; \n\t\t\t\tPHI = PI_OVER_2 - NUM00 * Math . atan ( t * pow_es ) ; \n\t\t\t\t} \n\t\t\tLatitude = PHI ; \n\t\t\tLongitude = Polar_Origin_Long + Math . atan2 ( dx , - dy ) ; \n\t\t\tif ( Longitude > PI ) Longitude -= TWO_PI ; \n\t\t\telse if ( Longitude < - PI ) Longitude += TWO_PI ; \n\t\t\tif ( Latitude > PI_OVER_2 ) Latitude = PI_OVER_2 ; \n\t\t\telse if ( Latitude < - PI_OVER_2 ) Latitude = - PI_OVER_2 ; \n\t\t\tif ( Longitude > PI ) Longitude = PI ; \n\t\t\telse if ( Longitude < - PI ) Longitude = - PI ; \n\t\t\t} \n\t\tif ( Southern_Hemisphere != NUM00 ) { \n\t\t\tLatitude *= - NUM00 ; \n\t\t\tLongitude *= - NUM00 ; \n\t\t\t} \n\t\t} \n\treturn ( Error_Code ) ; \n\t} \n"}, {"code": "public void assertURIEquals ( String assertID , String scheme , String path , String host , String file , String name , String query , String fragment , Boolean isAbsolute , String actual ) { \n\tassertNotNull ( assertID , actual ) ; \n\tString uri = actual ; \n\t$F24867 ( lastPound , actual ) String actualFragment = NUM00 ; \n\tif ( lastPound != - NUM00 ) $F60269 ( uri , actual , lastPound , actualFragment ) $F189158 ( fragment , assertEquals , assertID , actualFragment ) $F24867 ( lastQuestion , uri ) String actualQuery = NUM00 ; \n\tif ( lastQuestion != - NUM00 ) $F60269 ( uri , actual , lastQuestion , actualQuery ) $F189158 ( query , assertEquals , assertID , actualQuery ) $F1384 ( firstColon , uri ) $F1384 ( firstSlash , uri ) String actualPath = uri ; \n\tString actualScheme = NUM00 ; \n\tif $F96100 ( firstColon , firstSlash ) $F60269 ( actualScheme , uri , firstColon , actualPath ) $F189158 ( scheme , assertEquals , assertID , actualScheme ) $F189158 ( path , assertEquals , assertID , actualPath ) if ( host != null ) { \n\t\tString actualHost = NUM00 ; \n\t\tif $F3106 ( actualPath ) { \n\t\t\t$F129840 ( termSlash , actualPath ) $F14493 ( actualHost , actualPath , termSlash ) } \n\t\tassertEquals ( assertID , host , actualHost ) ; \n\t\t} \n\tString actualFile = actualPath ; \n\tif ( file != null || name != null ) { \n\t\t$F24867 ( finalSlash , actualPath ) if ( finalSlash != - NUM00 ) $F78003 ( actualFile , actualPath , finalSlash ) $F189158 ( file , assertEquals , assertID , actualFile ) } \n\tif ( name != null ) { \n\t\tString actualName = actualFile ; \n\t\t$F24867 ( finalPeriod , actualFile ) if ( finalPeriod != - NUM00 ) $F14494 ( actualName , actualFile , finalPeriod ) assertEquals ( assertID , name , actualName ) ; \n\t\t} \n\tif ( isAbsolute != null ) { \n\t\tassertEquals ( assertID , isAbsolute . booleanValue ( ) , actualPath . startsWith ( NUM00 ) || actualPath . startsWith ( NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "private double maxIgnoreNaN ( double a , double b ) { \n\t$F95699 ( Double , a , b ) if $F35707 ( Double , b ) { \n\t\treturn a ; \n\t\t} \n\telse { \n\t\t$F85710 ( Math , a , b ) } \n\t} \n"}, {"code": "public void crabDownDirBlockForModification ( BlockId blk ) { \n\tlockTbl . xLock ( blk , txNum ) ; \n\twritenIndexBlks . add ( blk ) ; \n\t} \n"}, {"code": "private static void removeReferenceToConnection ( final HttpConnectionWithReference connection ) { \n\tsynchronized ( REFERENCE_TO_CONNECTION_SOURCE ) { \n\t\tREFERENCE_TO_CONNECTION_SOURCE . remove ( connection . reference ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean matchesWord $F72 { \n\treturn ! isEmpty ( ) && $F15875 ( Character , queue , pos ) ; \n\t} \n"}, {"code": "public VacuumEnvironment $F72 { \n\t$F6822 ( r ) envState = new VacuumEnvironmentState ( NUM00 == r . nextInt ( NUM00 ) ? LocationState . Clean : LocationState . Dirty , NUM00 == r . nextInt ( NUM00 ) ? LocationState . Clean : LocationState . Dirty ) ; \n\t} \n"}, {"code": "public void generate ( BatchEnvironment env , ClassDefinition cdef , File destDir ) { \n\tRemoteClass remoteClass = RemoteClass . forClass ( env , cdef ) ; \n\t$F8249 ( remoteClass ) RMIGenerator gen ; \n\ttry { \n\t\tgen = new RMIGenerator ( env , cdef , destDir , remoteClass , version ) ; \n\t\t} \n\tcatch ( ClassNotFound e ) { \n\t\tenv . error ( NUM00 , NUM00 , e . name ) ; \n\t\t$F665 } \n\tgen . generate ( ) ; \n\t} \n"}, {"code": "public BaseViewHolder addOnLongClickListener ( int viewId ) $F18637 ( itemChildLongClickViewIds , viewId , this ) "}, {"code": "public void remove ( final CreatureRespawnPoint point ) $F106 ( respawnPoints , point ) "}, {"code": "public Photo ( File d , File f ) throws IOException , NumberFormatException { \n\tExtendedExifInterface exif = new ExtendedExifInterface $F3362 ( f ) ; \n\tString lonStr = exif . getAttribute ( ExifInterface . TAG_GPS_LONGITUDE ) ; \n\t$F31068 ( lonStr ) float lonf = convertToDegree ( lonStr ) ; \n\tString lonRef = exif . getAttribute ( ExifInterface . TAG_GPS_LONGITUDE_REF ) ; \n\tif $F77244 ( lonRef ) $F52810 ( lonf ) float latf = convertToDegree ( exif . getAttribute ( ExifInterface . TAG_GPS_LATITUDE ) ) ; \n\tString latRef = exif . getAttribute ( ExifInterface . TAG_GPS_LATITUDE_REF ) ; \n\tif $F77244 ( latRef ) $F52810 ( latf ) $F146568 ( lat , latf ) ; \n\t$F146568 ( lon , lonf ) ; \n\tLog . d ( NUM00 , NUM00 + lat + NUM00 + lon ) ; \n\tref = $F3884 ( d ) + f . getName ( ) ; \n\tString dir = exif . getAttribute ( ExtendedExifInterface . TAG_GPS_IMG_DIRECTION ) ; \n\tif ( dir != null ) { \n\t\tdirection = ( int ) Double . parseDouble ( dir ) ; \n\t\tdirectionRef = exif . getAttribute ( ExtendedExifInterface . TAG_GPS_IMG_DIRECTION_REF ) ; \n\t\tLog . d ( NUM00 , NUM00 + dir + NUM00 + direction + NUM00 + directionRef ) ; \n\t\t} \n\t} \n"}, {"code": "public static long bytesToLong $F3295 ( bytes ) { \n\t$F120018 ( buffer , ByteBuffer ) buffer . put ( bytes , NUM00 , NUM00 ) ; \n\t$F14257 ( buffer ) return buffer . getLong ( ) ; \n\t} \n"}, {"code": "protected int unicodeEscapeLexer ( int c ) throws IOException { \n\tint ret = NUM00 ; \n\t$F10201 ( c , in ) $F725 ( code ) try { \n\t\tfor ( $F6268 ( i ) ) { \n\t\t\t$F10201 ( c , in ) if $F41536 ( isEndOfFile , c , isEndOfLine ) $F101477 $F36813 ( code , c ) } \n\t\tret = Integer . parseInt ( $F89373 ( code ) ) ; \n\t\t} \n\tcatch ( NumberFormatException e ) { \n\t\tthrow new IOException ( NUM00 + getLineNumber ( ) + NUM00 + code . toString ( ) + NUM00 + e . toString ( ) ) ; \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "$F1 public void mouseEntered ( MouseEvent evt ) { \n\tdelegate . mouseMoved ( evt ) ; \n\t} \n"}, {"code": "public static String removeFormatting ( String line ) { \n\t$F115 ( length , line ) $F83 ( buffer ) for ( $F119 ( i , length ) ) { \n\t\t$F1280 ( ch , line , i ) if ( ch != NUM00 && ch != NUM00 && ch != NUM00 && ch != NUM00 ) buffer . append ( ch ) ; \n\t\t} \n\t$F92 ( buffer ) } \n"}, {"code": "public void testNegPosFirstShorter $F72 $F9149 ( numA , numB , res , aNumber , bNumber , result , assertTrue ) "}, {"code": "public void print $F72 { \n\t$F11326 ( iterChargingTimes , chargingTimes ) Arrays . sort ( iterChargingTimes ) ; \n\tfor ( $F1139 ( i , iterChargingTimes ) ) { \n\t\tChargeLog curItem = ( ChargeLog ) iterChargingTimes [ i ] ; \n\t\tcurItem . print ( ) ; \n\t\t} \n\t} \n"}, {"code": "$F18907 ( rdns ) "}, {"code": "private void writeLocalCSV ( MedtronicSensorRecord mostRecentData , Context context ) { \n\ttry { \n\t\tif ( mostRecentData == null || mostRecentData . bGValue == null ) $F980 ( log ) else log . debug ( NUM00 + mostRecentData . bGValue ) ; \n\t\tObjectOutputStream oos = new ObjectOutputStream ( new FileOutputStream ( new File ( context . getFilesDir ( ) , NUM00 ) ) ) ; \n\t\toos . writeObject ( mostRecentData ) ; \n\t\t$F1206 ( oos ) $F59 ( oos ) } \n\tcatch ( Exception e ) { \n\t\t$F13579 ( Log , TAG , e ) $F5197 ( log , e ) } \n\t} \n"}, {"code": "public ServiceConfig createOrganizationConfig ( String orgName , Map attrs ) throws $F16995 { \n\tvalidateSSM ( ) ; \n\tServiceSchemaImpl ss = ssm . getSchema ( SchemaType . ORGANIZATION ) ; \n\tif ( ss == null ) { \n\t\t$F78467 ( args , serviceName ) throw ( new SMSException $F181730 ( IUMSConstants , args ) ) ; \n\t\t} \n\tString orgdn = DNMapper . orgNameToDN ( orgName ) ; \n\tCreateServiceConfig . checkBaseNodesForOrg ( token , orgdn , serviceName , version ) ; \n\tString orgDN = scm . constructServiceConfigDN ( SMSUtils . DEFAULT , CreateServiceConfig . ORG_CONFIG_NODE , orgdn ) ; \n\ttry { \n\t\t$F17013 ( cEntry , CachedSMSEntry , token , orgDN ) if ( cEntry . isDirty ( ) ) { \n\t\t\t$F17015 ( cEntry ) } \n\t\tif ( cEntry . isNewEntry ( ) ) { \n\t\t\tCreateServiceConfig . createSubConfigEntry ( token , orgDN , ss , null , null , attrs , orgName ) ; \n\t\t\tif ( ServiceManager . isCoexistenceMode ( ) ) { \n\t\t\t\tString smsDN = DNMapper . orgNameToDN ( orgName ) ; \n\t\t\t\tOrgConfigViaAMSDK amsdk = new OrgConfigViaAMSDK ( token , DNMapper . realmNameToAMSDKName ( smsDN ) , smsDN ) ; \n\t\t\t\tamsdk . assignService ( serviceName ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if $F1032 ( attrs ) { \n\t\t\tServiceConfig sc = getOrganizationConfig ( orgName , null ) ; \n\t\t\tsc . setAttributes ( attrs ) ; \n\t\t\t} \n\t\t} \n\tcatch ( ServiceAlreadyExistsException slee ) $F845 return ( getOrganizationConfig ( orgName , null ) ) ; \n\t} \n"}, {"code": "public void deleteAuthenticationDomain ( String realm , String cotName ) throws AMConsoleException { \n\t$F105633 ( param , realm , cotName ) logEvent ( NUM00 , param ) ; \n\ttry { \n\t\tCircleOfTrustManager manager = getCircleOfTrustManager ( ) ; \n\t\tmanager . deleteCircleOfTrust ( realm , cotName ) ; \n\t\tlogEvent ( NUM00 , param ) ; \n\t\t} \n\tcatch ( COTException e ) $F105644 ( strError , getErrorString , e , paramsEx , realm , cotName , logEvent ) } \n"}, {"code": "protected void addSourceCodeRemark ( TestSolution testSolution , Element element , String messageCode , EvidenceElement evidenceElement ) { \n\tif ( evidenceElement != null ) { \n\t\tCollection < EvidenceElement > $F204 ( evidenceElementList ) ; \n\t\tevidenceElementList . add ( evidenceElement ) ; \n\t\tprocessRemarkService . addSourceCodeRemarkOnElement ( testSolution , element , messageCode , evidenceElementList ) ; \n\t\t} \n\telse { \n\t\tprocessRemarkService . addSourceCodeRemarkOnElement ( testSolution , element , messageCode ) ; \n\t\t} \n\t} \n"}, {"code": "void eventPreModify ( ActionType type , long position , boolean isSingle ) { \n\tif ( type != currentActionType || ! isSingle || System . currentTimeMillis ( ) - previousTime > MERGE_TIME || ( type == ActionType . INSERT || type == ActionType . OVERWRITE ) && actionExclusiveEnd ( ) != position || type == ActionType . DELETE && actionPosition ( ) != position && actionPosition ( ) - NUM00 != position ) { \n\t\tstartAction ( type , isSingle ) ; \n\t\t} \n\telse { \n\t\tisBackspace = actionPosition ( ) > position ; \n\t\t} \n\tif ( isSingle && type == ActionType . INSERT ) { \n\t\tupdateNewRange ( position ) ; \n\t\t$F3224 ( previousTime , System ) } \n\t} \n"}, {"code": "private $F96 decodePEM ( InputStream inStream , $F96 boundary_suffix ) throws IOException { \n\tint ch ; \n\tfor ( $F9808 ( i , PEM_BEGIN ) ) { \n\t\tif ( PEM_BEGIN [ i ] != $F7614 ( ch , inStream ) ) { \n\t\t\tthrow new IOException ( NUM00 + ( ( boundary_suffix == null ) ? NUM00 : new String ( boundary_suffix ) ) + NUM00 ) ; \n\t\t\t} \n\t\t} \n\tif ( boundary_suffix == null ) { \n\t\twhile $F175289 ( ch , inStream ) { \n\t\t\t$F150608 ( ch ) } \n\t\t} \n\telse { \n\t\tfor ( $F1139 ( i , boundary_suffix ) ) { \n\t\t\tif $F175294 ( boundary_suffix , i , inStream ) { \n\t\t\t\tthrow new IOException ( NUM00 + new String ( boundary_suffix ) + NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( $F7614 ( ch , inStream ) == NUM00 ) $F145798 ( ch , inStream ) if ( ch != NUM00 ) $F3491 } \n\tint size = NUM00 ; \n\t$F2175 ( buff , size ) int index = NUM00 ; \n\twhile $F175289 ( ch , inStream ) { \n\t\t$F150608 ( ch ) $F11740 ( buff , index , ch ) if ( index == size ) { \n\t\t\t$F130978 ( newbuff , size ) $F135 ( System , buff , newbuff , size ) buff = newbuff ; \n\t\t\tsize += NUM00 ; \n\t\t\t} \n\t\t} \n\tif ( buff [ index - NUM00 ] != NUM00 ) $F3491 for ( $F9808 ( i , PEM_END ) ) { \n\t\tif $F175294 ( PEM_END , i , inStream ) $F34850 ( badEnd , boundary_suffix ) } \n\tif ( boundary_suffix == null ) { \n\t\twhile ( $F175320 ( ch , inStream ) && ( ch != NUM00 ) && ( ch != NUM00 ) ) $F845 } \n\telse { \n\t\tfor ( $F1139 ( i , boundary_suffix ) ) { \n\t\t\tif $F175294 ( boundary_suffix , i , inStream ) $F34850 ( badEnd , boundary_suffix ) } \n\t\t} \n\t$F46282 ( inStream ) while ( $F175320 ( ch , inStream ) && $F37111 ( ch ) ) { \n\t\t$F46282 ( inStream ) } \n\t$F2268 ( inStream ) buff = Base64 . decode ( buff , index ) ; \n\t$F31068 ( buff ) return buff ; \n\t} \n"}, {"code": "void saveAsync ( DocumentEntity entity , Consumer < DocumentEntity > callBack ) throws ExecuteAsyncQueryException , UnsupportedOperationException ; \n"}, {"code": "public boolean markSupported $F72 { \n\treturn fInputStream . markSupported ( ) ; \n\t} \n"}, {"code": "$F66520 ( msg , startpos , count , sb , initialSubmode , tmp , submode , idx , _BOOL , ch , SUBMODE_ALPHA , isAlphaUpper , isAlphaLower , SUBMODE_LOWER , isMixed , SUBMODE_MIXED , PUNCTUATION , MIXED , next , isPunctuation , SUBMODE_PUNCTUATION , h , len , i , odd ) "}, {"code": "public String resolveParentRelationName ( String parentName , Object parent , String childName , Object child ) { \n\treturn parentName ; \n\t} \n"}, {"code": "public ByteColumn ( int nrows , int capacity , byte defaultValue ) { \n\tsuper ( $F41266 , new Byte ( defaultValue ) ) ; \n\t$F49020 ( capacity , nrows ) $F1325 ( m_values , capacity ) Arrays . fill ( m_values , defaultValue ) ; \n\tm_size = nrows ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public RelNode convertSelect ( SqlSelect select , boolean top ) { \n\tfinal SqlValidatorScope selectScope = validator . getWhereScope ( select ) ; \n\tfinal Blackboard bb = createBlackboard ( selectScope , null , top ) ; \n\tconvertSelectImpl ( bb , select ) ; \n\treturn bb . root ; \n\t} \n"}, {"code": "public static Object executeScript ( String filePath , String functionName , $F2100 ( context ) ) { \n\treturn executeScript ( filePath , functionName , context , $F8844 ( context ) ) ; \n\t} \n"}, {"code": "public XercesHTML2DocumentBuilderFactory $F230110 ( settings ) throws DOMTestIncompatibleException { \n\tsuper ( settings ) ; \n\ttry { \n\t\t$F50403 ( classLoader , ClassLoader ) $F198604 ( htmlBuilderClass , classLoader ) htmlBuilderConstructor = htmlBuilderClass . getConstructor ( NO_CLASSES ) ; \n\t\t$F18553 ( getHTMLDocumentMethod , htmlBuilderClass , NO_CLASSES ) $F198604 ( htmlDOMImpl , classLoader ) Method method = htmlDOMImpl . getMethod ( NUM00 , NO_CLASSES ) ; \n\t\tdomImpl = ( DOMImplementation ) method . invoke ( null , NO_OBJECTS ) ; \n\t\t$F198604 ( saxFactoryClass , classLoader ) factory = ( SAXParserFactory ) saxFactoryClass . newInstance ( ) ; \n\t\t} \n\tcatch ( InvocationTargetException ex ) { \n\t\tthrow new DOMTestIncompatibleException ( ex . getTargetException ( ) , null ) ; \n\t\t} \n\tcatch ( Exception ex ) $F349675 ( ex ) if ( settings != null ) { \n\t\tfor ( $F1139 ( i , settings ) ) $F845 } \n\ttry { \n\t\tfactory . newSAXParser ( ) ; \n\t\t} \n\tcatch ( ParserConfigurationException ex ) $F349675 ( ex ) catch ( SAXException ex ) $F349675 ( ex ) } \n"}, {"code": "private static String formatSampleRate ( int rate ) { \n\treturn MHZ_FORMATTER . format ( ( double ) rate / NUM00 ) ; \n\t} \n"}, {"code": "public final boolean isClosed $F72 $F1522 ( closed ) "}, {"code": "void start $F72 { \n\tthis . running = _BOOL ; \n\tThread thread = new Thread ( this , NUM00 + hashCode ( ) ) ; \n\tthread . setDaemon ( _BOOL ) ; \n\t$F2346 ( thread ) } \n"}, {"code": "TypeSimplifier ( Types typeUtils , String packageName , $F134539 types , TypeMirror base ) { \n\tthis . typeUtils = typeUtils ; \n\t$F134539 typesPlusBase = new TypeMirrorSet ( types ) ; \n\t$F1140 ( base , typesPlusBase ) $F134545 ( referenced , referencedClassTypes , typeUtils , typesPlusBase ) $F134545 ( defined , nonPrivateDeclaredTypes , typeUtils , base ) this . imports = findImports ( typeUtils , packageName , referenced , defined ) ; \n\t} \n"}, {"code": "public static $F96 escape $F3295 ( bytes ) { \n\tfinal $F96 temp = new byte $F102793 ( bytes ) ; \n\tint currentPosition = NUM00 ; \n\tfor ( final byte b : bytes ) { \n\t\tif ( b == ESCAPE_CHAR ) { \n\t\t\ttemp [ currentPosition ++ ] = ESCAPE_CHAR ; \n\t\t\ttemp [ currentPosition ++ ] = REPLACEMENT_CHAR ; \n\t\t\t} \n\t\telse if ( b == DELIMITER ) { \n\t\t\ttemp [ currentPosition ++ ] = ESCAPE_CHAR ; \n\t\t\ttemp [ currentPosition ++ ] = ESCAPE_CHAR ; \n\t\t\t} \n\t\telse $F52339 ( temp , currentPosition , b ) } \n\t$F4727 ( escaped , currentPosition ) $F135 ( System , temp , escaped , currentPosition ) return escaped ; \n\t} \n"}, {"code": "public final native String name $F72 ; \n"}, {"code": "protected void drawChartValuesText $F50624 ( canvas , series , renderer , paint , points , seriesIndex , startIndex ) { \n\tif $F3817 ( points ) { \n\t\tfloat previousPointX = points . get ( NUM00 ) ; \n\t\tfloat previousPointY = points . get ( NUM00 ) ; \n\t\tfor ( $F48125 ( k , points ) ) { \n\t\t\tif ( k == NUM00 ) { \n\t\t\t\tif ( Math . abs ( points . get ( NUM00 ) - points . get ( NUM00 ) ) > renderer . getDisplayChartValuesDistance ( ) || Math . abs ( points . get ( NUM00 ) - points . get ( NUM00 ) ) > renderer . getDisplayChartValuesDistance ( ) ) { \n\t\t\t\t\tdrawText ( canvas , getLabel ( renderer . getChartValuesFormat ( ) , series . getY ( startIndex ) ) , points . get ( NUM00 ) , points . get ( NUM00 ) - renderer . getChartValuesSpacing ( ) , paint , NUM00 ) ; \n\t\t\t\t\tdrawText ( canvas , getLabel ( renderer . getChartValuesFormat ( ) , series . getY ( startIndex + NUM00 ) ) , points . get ( NUM00 ) , points . get ( NUM00 ) - renderer . getChartValuesSpacing ( ) , paint , NUM00 ) ; \n\t\t\t\t\t$F36986 ( previousPointX , points ) $F36986 ( previousPointY , points ) } \n\t\t\t\t} \n\t\t\telse if ( k > NUM00 ) { \n\t\t\t\tif ( Math . abs ( points . get ( k ) - previousPointX ) > renderer . getDisplayChartValuesDistance ( ) || Math . abs ( points . get ( k + NUM00 ) - previousPointY ) > renderer . getDisplayChartValuesDistance ( ) ) { \n\t\t\t\t\tdrawText ( canvas , getLabel ( renderer . getChartValuesFormat ( ) , series . getY ( startIndex + k / NUM00 ) ) , points . get ( k ) , $F50654 ( points , k , renderer ) , paint , NUM00 ) ; \n\t\t\t\t\tpreviousPointX = points . get ( k ) ; \n\t\t\t\t\t$F14759 ( previousPointY , points , k ) } \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tfor ( $F48125 ( k , points ) ) { \n\t\t\tdrawText ( canvas , getLabel ( renderer . getChartValuesFormat ( ) , series . getY ( startIndex + k / NUM00 ) ) , points . get ( k ) , $F50654 ( points , k , renderer ) , paint , NUM00 ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static String toString ( Document hostDoc ) throws IOException { \n\ttry { \n\t\t$F29429 ( out ) $F29110 ( domSource , hostDoc ) $F94122 ( streamResult , out ) $F2218 ( tf , TransformerFactory ) $F94102 ( serializer , tf ) serializer . setOutputProperty ( OutputKeys . ENCODING , ENC . name ( ) ) ; \n\t\tserializer . setOutputProperty ( OutputKeys . METHOD , NUM00 ) ; \n\t\t$F29108 ( serializer , OutputKeys ) serializer . setOutputProperty ( OutputKeys . DOCTYPE_PUBLIC , HtmlDomUtil . HTML_STRICT ) ; \n\t\tserializer . transform ( domSource , streamResult ) ; \n\t\t$F92 ( out ) } \n\tcatch ( TransformerException e ) { \n\t\t$F172346 ( r ) r . initCause ( e ) ; \n\t\tthrow r ; \n\t\t} \n\t} \n"}, {"code": "public MongoClient clientForMembers ( ServerAddress ... seeds ) { \n\tList < ServerAddress > $F204 ( addresses ) ; \n\tfor ( ServerAddress seedAddress : seeds ) { \n\t\t$F67023 ( seedAddress , addresses ) } \n\treturn clientForMembers ( addresses ) ; \n\t} \n"}, {"code": "public static boolean stringToBooleanValue ( String str ) throws ExpressionException { \n\tstr = StringUtil . toLowerCase ( str . trim ( ) ) ; \n\tif $F40270 ( str ) return _BOOL ; \n\telse if $F40270 ( str ) return _BOOL ; \n\tthrow new CasterException ( NUM00 + str + NUM00 ) ; \n\t} \n"}, {"code": "public boolean hasMoreWork $F72 $F3387 ( workList ) "}, {"code": "protected synchronized void engineSetSeed $F97 ( seed ) { \n\t$F896 ( seed ) if ( state == NEXT_BYTES ) { \n\t\tSystem . arraycopy ( copies , HASHCOPY_OFFSET , this . seed , HASH_OFFSET , EXTRAFRAME_OFFSET ) ; \n\t\t} \n\tstate = SET_SEED ; \n\tif $F11845 ( seed ) { \n\t\tupdateSeed ( seed ) ; \n\t\t} \n\t} \n"}, {"code": "public void generateClassFile ( OutputStream os ) { \n\tClassWriter cw = new SootASMClassWriter ( ClassWriter . COMPUTE_FRAMES ) ; \n\tcv = cw ; \n\tgenerateByteCode ( ) ; \n\ttry { \n\t\t$F1569 ( os , cw ) } \n\t$F7078 ( e ) } \n"}, {"code": "private static boolean useCompactFontFormat ( $F2100 ( args ) , int compatibilityVersion ) { \n\t$F123 ( value , args , EMBEDASCFF ) boolean useCFF = _BOOL ; \n\tif ( compatibilityVersion < MxmlConfiguration . VERSION_4_0 ) useCFF = _BOOL ; \n\tif ( value != null ) { \n\t\tuseCFF = Boolean . parseBoolean ( value . trim ( ) ) ; \n\t\t} \n\treturn useCFF ; \n\t} \n"}, {"code": "public static void main $F4374 ( args ) { \n\tnew GeneratorTester ( args ) ; \n\t} \n"}, {"code": "private String mosesize ( String feature ) { \n\tif ( joshuaConfiguration . moses ) { \n\t\tif $F418 ( feature ) $F11446 ( feature ) } \n\treturn feature ; \n\t} \n"}, {"code": "public static int calcTextHeight ( Paint paint , String demoText ) { \n\t$F28883 ( r ) $F77589 ( paint , demoText , r ) return r . height ( ) ; \n\t} \n"}, {"code": "private void checkShutdown $F72 { \n\tsynchronized ( mux ) { \n\t\tif ( isBeingShutdown ) throw new RejectedExecutionException $F580 ; \n\t\t} \n\t} \n"}, {"code": "$F3594 ( oredCriteria , orderByClause , distinct , _BOOL ) "}, {"code": "private static final void checkQueueForDependenciesAndExecuteUnblockedTasks $F72 { \n\tList < ProgressThread > $F19827 ( toRemove ) ; \n\tsynchronized ( LOCK ) { \n\t\tfor ( ProgressThread pg : queuedThreads ) { \n\t\t\tif ( ! pg . isBlockedByDependencies ( ) ) { \n\t\t\t\tif ( ! pg . isWaiting ( ) ) { \n\t\t\t\t\ttoRemove . add ( pg ) ; \n\t\t\t\t\tEXECUTOR . execute ( pg . makeWrapper ( ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tfor ( ProgressThread pg : toRemove ) { \n\t\t$F15767 ( LOCK , queuedThreads , pg ) } \n\t} \n"}, {"code": "private static short CallShortMethodV $F4272 ( env , objJREF , methodID , argAddress ) throws Exception { \n\t$F4274 ( traceJNI , VM ) $F4275 ( RuntimeEntrypoints ) try { \n\t\t$F4276 ( obj , env , objJREF ) Object returnObj = JNIHelpers . invokeWithVarArg ( obj , methodID , argAddress , TypeReference . Short , _BOOL ) ; \n\t\treturn Reflection . unwrapShort ( returnObj ) ; \n\t\t} \n\t$F4287 ( traceJNI , unexpected , System , env ) } \n"}, {"code": "public static void drawVerticalMarginIndicator ( Graphics2D g , String text , int x , int y1 , int y2 ) { \n\t$F63332 ( y1 , y2 , temp ) if ( text == null ) { \n\t\t$F74895 ( g , x , y1 , y2 ) g . drawLine ( x , y1 , x - CONNECTION_ARROW_SIZE , y1 + CONNECTION_ARROW_SIZE ) ; \n\t\tg . drawLine ( x , y1 , x + CONNECTION_ARROW_SIZE , y1 + CONNECTION_ARROW_SIZE ) ; \n\t\tg . drawLine ( x , y2 , x - CONNECTION_ARROW_SIZE , y2 - CONNECTION_ARROW_SIZE ) ; \n\t\tg . drawLine ( x , y2 , x + CONNECTION_ARROW_SIZE , y2 - CONNECTION_ARROW_SIZE ) ; \n\t\t$F665 } \n\tCanvas c = new Canvas $F72 ; \n\t$F23540 ( fm , c , sFont ) g . setFont ( sFont ) ; \n\tint padding = NUM00 ; \n\tRectangle2D bounds = fm . getStringBounds ( text , g ) ; \n\tint th = $F63349 ( bounds ) ; \n\tint offset = NUM00 * CONNECTION_ARROW_SIZE ; \n\tint h = ( ( y2 - y1 ) - ( th + NUM00 * padding ) ) / NUM00 ; \n\tif ( h <= padding ) { \n\t\t$F74895 ( g , x , y1 , y2 ) g . drawString ( text , ( int ) ( x - $F77576 ( bounds ) ) + offset , y2 - h - padding ) ; \n\t\tg . drawLine ( x - CONNECTION_ARROW_SIZE , y1 , x + CONNECTION_ARROW_SIZE , y1 ) ; \n\t\tg . drawLine ( x - CONNECTION_ARROW_SIZE , y2 , x + CONNECTION_ARROW_SIZE , y2 ) ; \n\t\t} \n\telse { \n\t\tg . drawLine ( x , y1 , x , y1 + h ) ; \n\t\tg . drawLine ( x , y2 - h , x , y2 ) ; \n\t\tg . drawString ( text , ( int ) ( x - $F77576 ( bounds ) ) , y2 - h - padding ) ; \n\t\tg . drawLine ( x , y1 , x - CONNECTION_ARROW_SIZE , y1 + CONNECTION_ARROW_SIZE ) ; \n\t\tg . drawLine ( x , y1 , x + CONNECTION_ARROW_SIZE , y1 + CONNECTION_ARROW_SIZE ) ; \n\t\tg . drawLine ( x , y2 , x - CONNECTION_ARROW_SIZE , y2 - CONNECTION_ARROW_SIZE ) ; \n\t\tg . drawLine ( x , y2 , x + CONNECTION_ARROW_SIZE , y2 - CONNECTION_ARROW_SIZE ) ; \n\t\t} \n\t} \n"}, {"code": "public void fireIndexedPropertyChange ( String propertyName , int index , boolean oldValue , boolean newValue ) { \n\tif ( oldValue != newValue ) { \n\t\tfireIndexedPropertyChange ( propertyName , index , Boolean . valueOf ( oldValue ) , Boolean . valueOf ( newValue ) ) ; \n\t\t} \n\t} \n"}, {"code": "protected void removeMarkers $F72 { \n\tfor ( $F2198 ( i , markerImage ) ; \n\ti > NUM00 ; \n\ti -- ) { \n\t\tLocoIcon il = markerImage . get ( i - NUM00 ) ; \n\t\tif ( ( il != null ) && $F80957 ( il ) ) { \n\t\t\t$F18938 ( markerImage , i ) $F7042 ( il ) $F355 ( il ) setDirty ( _BOOL ) ; \n\t\t\t} \n\t\t} \n\tsuper . removeMarkers ( ) ; \n\trepaint ( ) ; \n\t} \n"}, {"code": "public IElementType captureString $F72 { \n\tCharSequence buffer = getBuffer ( ) ; \n\tint currentPosition = getTokenEnd ( ) ; \n\tsetTokenStart ( currentPosition ) ; \n\tint bufferEnd = getBufferEnd ( ) ; \n\t$F1280 ( openQuote , buffer , currentPosition ) char closeQuote = RegexBlock . getQuoteCloseChar ( openQuote ) ; \n\tboolean quotesDiffer = openQuote != closeQuote ; \n\tboolean isEscaped = _BOOL ; \n\tint quotesDepth = NUM00 ; \n\tcurrentPosition ++ ; \n\twhile ( currentPosition < bufferEnd ) { \n\t\t$F1280 ( currentChar , buffer , currentPosition ) if ( ! isEscaped && quotesDepth == NUM00 && currentChar == closeQuote ) $F5153 if ( ! isEscaped && quotesDiffer ) { \n\t\t\tif ( currentChar == openQuote ) { \n\t\t\t\tquotesDepth ++ ; \n\t\t\t\t} \n\t\t\telse if ( currentChar == closeQuote ) { \n\t\t\t\tquotesDepth -- ; \n\t\t\t\t} \n\t\t\t} \n\t\tisEscaped = ! isEscaped && currentChar == NUM00 ; \n\t\tcurrentPosition ++ ; \n\t\t} \n\tif ( currentPosition < bufferEnd ) { \n\t\tcurrentPosition ++ ; \n\t\t} \n\tsetTokenEnd ( currentPosition ) ; \n\tPerlStringLexer stringLexer = getStringLexer ( ) ; \n\tpopState ( ) ; \n\t$F42501 ( preparsedTokensList , lexCurrentToken , stringLexer ) return getPreParsedToken ( ) ; \n\t} \n"}, {"code": "public static String toLocalizedInteger ( long value ) $F35907 ( NUMBER_FORMAT0 , value ) "}, {"code": "public void testParseClientHandshake $F72 throws Exception { \n\tfor ( $F6268 ( splitPos ) ) { \n\t\t$F556 ( log , splitPos ) ByteBuffer tmp = clientHandshakePacket ( ) ; \n\t\t$F30903 split = split ( tmp , splitPos ) ; \n\t\tGridNioSession ses = new MockNioSession $F72 ; \n\t\tses . addMeta ( MARSHALLER . ordinal ( ) , new GridClientOptimizedMarshaller $F72 ) ; \n\t\tGridTcpRestParser parser = new GridTcpRestParser ( _BOOL ) ; \n\t\tCollection < GridClientMessage > $F9187 ( lst ) ; \n\t\tfor ( ByteBuffer buf : split ) { \n\t\t\tGridClientMessage r ; \n\t\t\twhile ( buf . hasRemaining ( ) && ( r = parser . decode ( ses , buf ) ) != null ) lst . add ( r ) ; \n\t\t\tassertTrue ( NUM00 , buf . remaining ( ) == NUM00 ) ; \n\t\t\t} \n\t\t$F70108 ( assertEquals , lst ) GridClientHandshakeRequest req = ( GridClientHandshakeRequest ) F . first ( lst ) ; \n\t\tassertNotNull ( req ) ; \n\t\tassertEquals ( U . bytesToShort ( new byte $F227065 , NUM00 ) , req . version ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void initialize ( Context context , HapticFeedbackController hapticFeedbackController , int initialHoursOfDay , int initialMinutes , boolean is24HourMode ) { \n\t$F17932 ( mTimeInitialized , Log , TAG ) mHapticFeedbackController = hapticFeedbackController ; \n\tmIs24HourMode = is24HourMode ; \n\tmHideAmPm = mAccessibilityManager . isTouchExplorationEnabled ( ) ? _BOOL : mIs24HourMode ; \n\tmCircleView . initialize ( context , mHideAmPm ) ; \n\t$F5217 ( mCircleView ) if ( ! mHideAmPm ) { \n\t\tmAmPmCirclesView . initialize ( context , initialHoursOfDay < NUM00 ? AM : PM ) ; \n\t\t$F5217 ( mAmPmCirclesView ) } \n\t$F17934 ( res , context ) $F134655 ( hours ) $F134655 ( hours_24 ) $F134655 ( minutes ) $F808 ( hoursTexts ) $F808 ( innerHoursTexts ) $F808 ( minutesTexts ) for ( $F6268 ( i ) ) { \n\t\thoursTexts [ i ] = is24HourMode ? $F134656 ( String , hours_24 , i ) : $F134656 ( String , hours , i ) ; \n\t\tinnerHoursTexts [ i ] = $F134656 ( String , hours , i ) ; \n\t\tminutesTexts [ i ] = $F134656 ( String , minutes , i ) ; \n\t\t} \n\tmHourRadialTextsView . initialize ( res , hoursTexts , ( is24HourMode ? innerHoursTexts : null ) , mHideAmPm , _BOOL ) ; \n\t$F5217 ( mHourRadialTextsView ) mMinuteRadialTextsView . initialize ( res , minutesTexts , null , mHideAmPm , _BOOL ) ; \n\t$F5217 ( mMinuteRadialTextsView ) setValueForItem ( HOUR_INDEX , initialHoursOfDay ) ; \n\tsetValueForItem ( MINUTE_INDEX , initialMinutes ) ; \n\tint hourDegrees = ( initialHoursOfDay % NUM00 ) * HOUR_VALUE_TO_DEGREES_STEP_SIZE ; \n\tmHourRadialSelectorView . initialize ( context , mHideAmPm , is24HourMode , _BOOL , hourDegrees , isHourInnerCircle ( initialHoursOfDay ) ) ; \n\tint minuteDegrees = initialMinutes * MINUTE_VALUE_TO_DEGREES_STEP_SIZE ; \n\tmMinuteRadialSelectorView . initialize ( context , mHideAmPm , _BOOL , _BOOL , minuteDegrees , _BOOL ) ; \n\tmTimeInitialized = _BOOL ; \n\t} \n"}, {"code": "$F4058 ( doc , elementList , nameNode , child , childData , load , _BOOL , assertEquals ) "}, {"code": "void checkFrameValue ( final Object value ) { \n\tif ( value == Opcodes . TOP || value == Opcodes . INTEGER || value == Opcodes . FLOAT || value == Opcodes . LONG || value == Opcodes . DOUBLE || value == Opcodes . NULL || value == Opcodes . UNINITIALIZED_THIS ) $F932 if ( value instanceof String ) { \n\t\tcheckInternalName ( ( String ) value , NUM00 ) ; \n\t\t$F665 } \n\tif ( ! ( value instanceof Label ) ) $F18931 ( value ) else { \n\t\tusedLabels . add ( ( Label ) value ) ; \n\t\t} \n\t} \n"}, {"code": "protected void sqrtLayout ( VisualTable labels ) { \n\tRectangle2D b = getLayoutBounds ( ) ; \n\tdouble breadth = getBreadth ( b ) ; \n\tdouble span = m_hi - m_lo ; \n\tdouble splo = MathLib . safeSqrt ( m_prevlo ) ; \n\tdouble spspan = MathLib . safeSqrt ( m_prevhi ) - splo ; \n\tdouble vlo = Math . pow ( NUM00 , Math . floor ( MathLib . safeLog10 ( m_lo ) ) ) ; \n\tdouble slo = MathLib . safeSqrt ( m_lo ) ; \n\tdouble sspan = MathLib . safeSqrt ( m_hi ) - slo ; \n\tIterator iter = labels . tuples ( ) ; \n\twhile $F2921 ( iter ) { \n\t\t$F163591 ( item , iter ) reset ( item ) ; \n\t\tdouble v = item . getDouble ( VALUE ) ; \n\t\tdouble x = span == NUM00 ? NUM00 : ( ( MathLib . safeSqrt ( v ) - slo ) / sspan ) * breadth ; \n\t\tset ( item , x , b ) ; \n\t\t} \n\tIndex index = labels . index ( VALUE ) ; \n\tdouble step = getLinearStep ( span , breadth / span ) ; \n\t$F211985 ( step ) int r ; \n\tfor ( double x , v = vlo ; \n\tv <= m_hi ; \n\tv += step ) { \n\t\tx = ( ( MathLib . safeSqrt ( v ) - slo ) / sspan ) * breadth ; \n\t\tif ( x < - NUM00 ) $F1448 else if ( $F86155 ( r , index , v ) >= NUM00 ) { \n\t\t\tVisualItem item = labels . getItem ( r ) ; \n\t\t\titem . setVisible ( _BOOL ) ; \n\t\t\titem . setEndVisible ( _BOOL ) ; \n\t\t\t} \n\t\telse { \n\t\t\tVisualItem item = labels . addItem ( ) ; \n\t\t\titem . set ( LABEL , m_nf . format ( v ) ) ; \n\t\t\titem . setDouble ( VALUE , v ) ; \n\t\t\tdouble f = spspan == NUM00 ? NUM00 : ( ( MathLib . safeSqrt ( v ) - splo ) / spspan ) ; \n\t\t\tif ( f <= NUM00 || f >= NUM00 ) { \n\t\t\t\titem . setStartVisible ( _BOOL ) ; \n\t\t\t\t} \n\t\t\tset ( item , f * breadth , b ) ; \n\t\t\tset ( item , x , b ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static Template create ( String value ) { \n\tif ( Settings . isFunction ( value ) ) { \n\t\treturn new FunctionalTemplate ( value ) ; \n\t\t} \n\tif ( Graph . isRelational ( value ) ) { \n\t\ttry { \n\t\t\treturn new RelationalTemplate ( value ) ; \n\t\t\t} \n\t\tcatch ( Exception e ) { \n\t\t\t$F30524 ( log , value ) return new StringTemplate ( value ) ; \n\t\t\t} \n\t\t} \n\telse if ( RegexTemplate . isPossibleRegex ( value ) ) { \n\t\ttry { \n\t\t\tif ( ArithmeticTemplate . isArithmeticExpression ( value ) ) { \n\t\t\t\treturn new ArithmeticTemplate ( value ) ; \n\t\t\t\t} \n\t\t\treturn new RegexTemplate ( value ) ; \n\t\t\t} \n\t\tcatch ( PatternSyntaxException e ) { \n\t\t\t$F30524 ( log , value ) return new StringTemplate ( value ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\treturn new StringTemplate ( value ) ; \n\t\t} \n\t} \n"}, {"code": "protected boolean customShouldTakeFocus $F72 { \n\tif ( customArea instanceof Label ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( customArea instanceof CLabel ) { \n\t\treturn ( customArea . getStyle ( ) & SWT . NO_FOCUS ) > NUM00 ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void init ( PrivateKey key ) { \n\ttry { \n\t\tif ( signature != null ) { \n\t\t\tsignature . initSign ( key ) ; \n\t\t\t} \n\t\telse if ( cipher != null ) { \n\t\t\t$F43929 ( cipher , Cipher , key ) } \n\t\t} \n\tcatch ( InvalidKeyException e ) { \n\t\tthrow new AlertException ( AlertProtocol . BAD_CERTIFICATE , new SSLException ( NUM00 , e ) ) ; \n\t\t} \n\t} \n"}, {"code": "private Map < String , List $F147538 > selectZonesForInitiatorsAndPorts ( NetworkLite network , Map < String , List $F147538 > wwnToZones , Map < String , StoragePort > initiatorPortsMap ) { \n\tMap < String , List $F147538 > filteredMap = new HashMap < String , List $F147538 > $F72 ; \n\tZone zone = null ; \n\tList $F147538 zones = null ; \n\tfor ( $F3465 ( initiatorWwn , wwnToZones ) ) { \n\t\tfor ( $F3465 ( portWwn , initiatorPortsMap ) ) { \n\t\t\tzone = _networkScheduler . selectExistingZoneForInitiatorPort ( network , initiatorWwn , portWwn , wwnToZones . get ( initiatorWwn ) ) ; \n\t\t\tif ( zone != null ) { \n\t\t\t\tzones = filteredMap . get ( initiatorWwn ) ; \n\t\t\t\t$F64950 ( zones , filteredMap , initiatorWwn ) zones . add ( zone ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn filteredMap ; \n\t} \n"}, {"code": "public static boolean isExtension ( String filename , $F6877 extensions ) { \n\t$F397 ( filename , _BOOL ) if $F4251 ( extensions ) return indexOfExtension ( filename ) == - NUM00 ; \n\tString fileExt = getExtension ( filename ) ; \n\tfor ( String extension : extensions ) { \n\t\t$F9506 ( fileExt , extension , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void writeJarPostResource ( Element postResourceEl , String path ) { \n\t$F34765 ( postResourceEl , JAR_RESOURCE_SET ) postResourceEl . setAttribute ( NUM00 , $F2934 ( path ) ) ; \n\t} \n"}, {"code": "public void closeFile $F72 throws IOException $F39862 ( file ) "}, {"code": "public TypedEventListener ( EventListener $F11685 wrappedListener , $F48880 eventClass ) $F20755 ( this , eventClass , wrappedListener ) "}, {"code": "public static List < ? extends Node > childNodeList ( Node node ) { \n\t$F1275 ( node ) $F27878 nodes = new LinkedList $F6869 $F72 ; \n\tdo { \n\t\tif ( $F15377 ( node , Node ) || node . getNodeType ( ) == Node . COMMENT_NODE ) $F207 ( nodes , node ) } \n\twhile $F15388 ( node ) ; \n\treturn nodes ; \n\t} \n"}, {"code": "public static Corleone context ( String jobContext ) { \n\tif $F3581 ( jobContext ) $F825 $F725 ( contexts ) contexts . add ( jobContext ) ; \n\treturn getInstance ( ) ; \n\t} \n"}, {"code": "protected final void init $F72 throws NoGlyphException { \n\t$F7782 ( codes , chars ) $F14244 ( indices , codes ) $F14244 ( advances , codes ) double maxAscent = NUM00 ; \n\tdouble maxDescent = NUM00 ; \n\tdouble scale = size * SWFConstants . TWIPS / NUM00 ; \n\tfor ( $F1139 ( i , codes ) ) { \n\t\tint code = ( int ) codes [ i ] ; \n\t\t$F11844 ( index ) FontDefinition . Glyph glyph = getGlyph ( code , index ) ; \n\t\tindices [ i ] = index [ NUM00 ] ; \n\t\tif ( glyph != null ) { \n\t\t\tShape shape = glyph . getShape ( ) ; \n\t\t\t$F1986 outline = shape . getBoundingRectangle ( ) ; \n\t\t\tdouble x1 = outline [ NUM00 ] * scale ; \n\t\t\tdouble y1 = outline [ NUM00 ] * scale ; \n\t\t\tdouble x2 = outline [ NUM00 ] * scale ; \n\t\t\tdouble y2 = outline [ NUM00 ] * scale ; \n\t\t\tif ( maxAscent < - y1 ) { \n\t\t\t\tmaxAscent = - y1 ; \n\t\t\t\t} \n\t\t\t$F8790 ( maxDescent , y2 ) double advance = glyph . getAdvance ( ) * scale ; \n\t\t\tif ( advance == NUM00 ) { \n\t\t\t\tadvance = x2 - x1 ; \n\t\t\t\t} \n\t\t\tif $F18953 ( i , codes ) { \n\t\t\t\tadvance += ( fontDef . getKerningOffset ( code , ( int ) codes [ i + NUM00 ] ) * scale ) ; \n\t\t\t\t} \n\t\t\ttotalAdvance += advance ; \n\t\t\tadvances [ i ] = ( int ) ( advance * SWFConstants . TWIPS ) ; \n\t\t\tif ( i == NUM00 ) { \n\t\t\t\tleftMargin = - y1 ; \n\t\t\t\t} \n\t\t\tif $F74408 ( i , codes ) { \n\t\t\t\trightMargin = x2 - advance ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tascent = fontDef . getAscent ( ) * scale ; \n\t$F153178 ( ascent , maxAscent ) descent = fontDef . getDescent ( ) * scale ; \n\t$F153178 ( descent , maxDescent ) } \n"}, {"code": "public static double info ( int counts [ ] ) { \n\tint total = NUM00 ; \n\tdouble x = NUM00 ; \n\tfor ( int count : counts ) { \n\t\tx -= xlogx ( count ) ; \n\t\ttotal += count ; \n\t\t} \n\treturn x + xlogx ( total ) ; \n\t} \n"}, {"code": "public void addMethod ( SootMethod m ) { \n\tcheckLevel ( SIGNATURES ) ; \n\tif ( m . isDeclared ( ) ) throw new RuntimeException $F47919 ( m ) ; \n\tif ( subSigToMethods . get ( m . getNumberedSubSignature ( ) ) != null ) { \n\t\tthrow new RuntimeException ( NUM00 + m . getSubSignature ( ) + NUM00 + this + NUM00 ) ; \n\t\t} \n\tsubSigToMethods . put ( m . getNumberedSubSignature ( ) , m ) ; \n\tmethodList . add ( m ) ; \n\tm . setDeclared ( _BOOL ) ; \n\tm . setDeclaringClass ( this ) ; \n\t} \n"}, {"code": "$F83977 ( listener , mListeners ) "}, {"code": "$F84990 ( lock , this , f , first , n , last , count , notFull ) "}, {"code": "private void addReplicationFactor ( Operation op ) { \n\top . addRequestHeader ( Operation . REPLICATION_QUORUM_HEADER , Operation . REPLICATION_QUORUM_HEADER_VALUE_ALL ) ; \n\t} \n"}, {"code": "private static Frame showInitialSplash $F72 { \n\tFrame splashFrame = null ; \n\tImage image = null ; \n\tURL imageURL = getChosenSplashURL ( ) ; \n\tif ( imageURL != null ) { \n\t\ttry $F616 ( image , ImageIO , imageURL ) $F12241 ( e ) if ( image != null ) { \n\t\t\tsplashFrame = AWTSplashWindow . splash ( image ) ; \n\t\t\t} \n\t\t} \n\treturn splashFrame ; \n\t} \n"}, {"code": "protected void decodeLineSuffix ( PushbackInputStream inStream , OutputStream outStream ) throws IOException { \n\tint c ; \n\twhile ( _BOOL ) { \n\t\t$F10201 ( c , inStream ) if ( c == - NUM00 ) { \n\t\t\tthrow new CEStreamExhausted $F72 ; \n\t\t\t} \n\t\t$F41314 ( c ) if ( c == NUM00 ) { \n\t\t\t$F10201 ( c , inStream ) if ( ( c != NUM00 ) && ( c != - NUM00 ) ) { \n\t\t\t\tinStream . unread ( c ) ; \n\t\t\t\t} \n\t\t\t$F597 } \n\t\t} \n\t} \n"}, {"code": "public void addTransaction ( SIPServerTransaction serverTransaction ) throws IOException { \n\tif ( isLoggingEnabled ( ) ) stackLogger . logDebug ( NUM00 + serverTransaction ) ; \n\tserverTransaction . map ( ) ; \n\taddTransactionHash ( serverTransaction ) ; \n\t} \n"}, {"code": "private float spacing ( MotionEvent event ) { \n\t$F49063 ( x , event ) $F49067 ( y , event ) return ( float ) $F25556 ( Math , x , y ) ; \n\t} \n"}, {"code": "public boolean containsPoly ( SootMethod method ) $F118073 ( getMethod , method ) "}, {"code": "public JKTagMapping ( final String sourceQName , final String targetQName , final JKNamespace namespace ) { \n\t$F124174 ( logger , String , sourceQName , targetQName ) this . sourceQName = sourceQName ; \n\tthis . targetQName = targetQName ; \n\tthis . namespace = namespace ; \n\tthis . auto = _BOOL ; \n\t} \n"}, {"code": "private void selectAttributeSetInstance $F72 { \n\tint m_warehouse_id = getM_Warehouse_ID ( ) ; \n\tint m_product_id = getM_Product_ID ( ) ; \n\tif ( m_product_id <= NUM00 ) $F665 MProduct product = MProduct . get ( getCtx ( ) , m_product_id ) ; \n\tMWarehouse wh = MWarehouse . get ( getCtx ( ) , m_warehouse_id ) ; \n\tString title = product . get_Translation ( MProduct . COLUMNNAME_Name ) + NUM00 + wh . get_Translation ( MWarehouse . COLUMNNAME_Name ) ; \n\tPAttributeInstance pai = new PAttributeInstance ( m_frame , title , m_warehouse_id , NUM00 , m_product_id , NUM00 ) ; \n\tif ( pai . getM_AttributeSetInstance_ID ( ) != - NUM00 ) { \n\t\tfAttrSetInstance_ID . setText ( pai . getM_AttributeSetInstanceName ( ) ) ; \n\t\tfAttrSetInstance_ID . setValue ( new Integer ( pai . getM_AttributeSetInstance_ID ( ) ) ) ; \n\t\t} \n\telse { \n\t\tfAttrSetInstance_ID . setValue ( Integer . valueOf ( NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "private void ensureFileOpen $F72 { \n\t$F17932 ( savingDisabled , Log , TAG ) $F57099 ( saveFileStream ) File saveFile = new File ( ctx . getFilesDir ( ) , SAVEFILE ) ; \n\ttry { \n\t\tFileOutputStream fileOutput = null ; \n\t\tDataOutputStream out = null ; \n\t\tif $F3428 ( saveFile ) { \n\t\t\tfileOutput = ctx . openFileOutput ( SAVEFILE , Context . MODE_APPEND ) ; \n\t\t\tout = new DataOutputStream $F1526 ( fileOutput ) ; \n\t\t\t} \n\t\telse { \n\t\t\tfileOutput = ctx . openFileOutput ( SAVEFILE , Context . MODE_PRIVATE ) ; \n\t\t\tout = new DataOutputStream $F1526 ( fileOutput ) ; \n\t\t\tout . writeInt ( TrackPoint . FORMAT_VERSION ) ; \n\t\t\tsavedTrackPoints = NUM00 ; \n\t\t\t} \n\t\tsaveFileStream = out ; \n\t\t} \n\t$F19456 ( markSavingBroken , e ) } \n"}, {"code": "public void test_canonicalizingCache $F72 { \n\t$F17606 ( properties , getProperties ) properties . setProperty ( AbstractTransactionService . Options . MIN_RELEASE_AGE , NUM00 ) ; \n\tfinal Journal journal = new Journal ( properties ) ; \n\ttry { \n\t\tfinal long commitTime0 = journal . commit ( ) ; \n\t\tassertTrue ( commitTime0 != NUM00 ) ; \n\t\tfinal ICommitRecord commitRecord0 = journal . getCommitRecord ( commitTime0 ) ; \n\t\tassertEquals ( commitRecord0 , journal . getCommitRecord ( ) ) ; \n\t\tjournal . write ( ByteBuffer . wrap ( new byte $F137708 ) ) ; \n\t\tfinal long commitTime1 = journal . commit ( ) ; \n\t\tassertTrue ( commitTime1 != NUM00 ) ; \n\t\tfinal ICommitRecord commitRecord1 = journal . getCommitRecord ( commitTime1 ) ; \n\t\tassertEquals ( commitRecord1 , journal . getCommitRecord ( ) ) ; \n\t\tassertTrue ( commitRecord0 == journal . getCommitRecord ( commitTime1 - NUM00 ) ) ; \n\t\tassertTrue ( commitRecord1 == journal . getCommitRecord ( commitTime1 + NUM00 ) ) ; \n\t\tassertTrue ( commitRecord1 == journal . getCommitRecord ( commitTime1 + NUM00 ) ) ; \n\t\t} \n\t$F17625 ( journal ) } \n"}, {"code": "public static void print ( Object x ) $F7523 ( out , x ) "}, {"code": "$F1 public void stop ( Runnable arg0 ) { \n\tstop ( ) ; \n\t$F21687 ( arg0 ) } \n"}, {"code": "protected int read ( InputStream inputStream , $F96 buffer , char divider ) throws IOException { \n\tint index = NUM00 ; \n\tdo { \n\t\tbyte readByte = ( byte ) ( NUM00 & inputStream . read ( ) ) ; \n\t\tif ( readByte == - NUM00 || readByte == ( byte ) divider ) { \n\t\t\treturn index ; \n\t\t\t} \n\t\tbuffer [ index ] = readByte ; \n\t\tindex ++ ; \n\t\t} \n\twhile ( index < buffer . length ) ; \n\treturn index ; \n\t} \n"}, {"code": "private static void generateGraphFile ( TransMeta transMeta , String graphFile ) throws GraphGeneratorException { \n\tDataOutputStream dos = null ; \n\ttry { \n\t\tString xml = transMeta . getXML ( ) ; \n\t\tdos = new DataOutputStream ( new FileOutputStream $F15780 ( graphFile ) ) ; \n\t\tdos . write ( xml . getBytes ( CarbonCommonConstants . DEFAULT_CHARSET ) ) ; \n\t\t} \n\tcatch ( KettleException kettelException ) { \n\t\tthrow new GraphGeneratorException ( NUM00 , kettelException ) ; \n\t\t} \n\tcatch ( FileNotFoundException e ) { \n\t\tthrow new GraphGeneratorException ( NUM00 , e ) ; \n\t\t} \n\tcatch ( UnsupportedEncodingException ue ) { \n\t\tthrow new GraphGeneratorException ( NUM00 , ue ) ; \n\t\t} \n\tcatch ( IOException ioe ) { \n\t\tthrow new GraphGeneratorException ( NUM00 , ioe ) ; \n\t\t} \n\tfinally { \n\t\tif ( dos != null ) { \n\t\t\ttry $F881 ( dos ) catch ( IOException e ) { \n\t\t\t\te . getMessage ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static void closeOutputStream ( OutputStream stream , String tag ) $F144343 ( stream , Log , tag , e ) "}, {"code": "private void testMultiStatement $F72 { \n\tMVStore s = MVStore . open ( null ) ; \n\tTransactionStore ts = new TransactionStore ( s ) ; \n\t$F10089 ( ts ) Transaction tx ; \n\tTransactionMap $F2538 m ; \n\tlong startUpdate ; \n\ttx = ts . begin ( ) ; \n\tstartUpdate = tx . setSavepoint ( ) ; \n\tm = tx . openMap ( NUM00 ) ; \n\tm . setSavepoint ( startUpdate ) ; \n\tstartUpdate = tx . setSavepoint ( ) ; \n\tm . setSavepoint ( startUpdate ) ; \n\tassertTrue ( m . trySet ( NUM00 , NUM00 , _BOOL ) ) ; \n\tassertTrue ( m . trySet ( NUM00 , NUM00 , _BOOL ) ) ; \n\tassertNull ( m . get ( NUM00 ) ) ; \n\tassertNull ( m . get ( NUM00 ) ) ; \n\tstartUpdate = tx . setSavepoint ( ) ; \n\tm . setSavepoint ( startUpdate ) ; \n\tassertEquals ( $F28500 ( m ) ) ; \n\tassertEquals ( $F28500 ( m ) ) ; \n\tassertEquals ( $F28500 ( m ) ) ; \n\tassertTrue ( m . trySet ( NUM00 , null , _BOOL ) ) ; \n\tassertTrue ( m . trySet ( NUM00 , NUM00 , _BOOL ) ) ; \n\tassertEquals ( $F28500 ( m ) ) ; \n\tassertTrue ( m . trySet ( NUM00 , null , _BOOL ) ) ; \n\tassertTrue ( m . trySet ( NUM00 , NUM00 , _BOOL ) ) ; \n\tassertEquals ( $F28500 ( m ) ) ; \n\tassertEquals ( $F28500 ( m ) ) ; \n\tassertNull ( m . get ( NUM00 ) ) ; \n\tstartUpdate = tx . setSavepoint ( ) ; \n\tm . setSavepoint ( startUpdate ) ; \n\tassertNull ( m . get ( NUM00 ) ) ; \n\tassertEquals ( $F28500 ( m ) ) ; \n\tassertEquals ( $F28500 ( m ) ) ; \n\tstartUpdate = tx . setSavepoint ( ) ; \n\tm . setSavepoint ( startUpdate ) ; \n\tassertTrue ( m . trySet ( NUM00 , null , _BOOL ) ) ; \n\tassertTrue ( m . trySet ( NUM00 , NUM00 , _BOOL ) ) ; \n\tassertTrue ( m . trySet ( NUM00 , null , _BOOL ) ) ; \n\tassertFalse ( m . trySet ( NUM00 , NUM00 , _BOOL ) ) ; \n\ttx . rollbackToSavepoint ( startUpdate ) ; \n\tstartUpdate = tx . setSavepoint ( ) ; \n\tm . setSavepoint ( startUpdate ) ; \n\tassertNull ( m . get ( NUM00 ) ) ; \n\tassertEquals ( $F28500 ( m ) ) ; \n\tassertEquals ( $F28500 ( m ) ) ; \n\t$F17621 ( tx ) $F59 ( ts ) $F59 ( s ) } \n"}, {"code": "$F16267 ( propertyName , in_pcl , beanContextChildSupport ) "}, {"code": "public void createEntityConfig ( String realm , FederationConfigElement config ) throws WSFederationMetaException { \n\tString federationId = config . getFederationID ( ) ; \n\tif ( federationId == null ) { \n\t\t$F137865 ( debug ) $F78467 ( data , realm ) LogUtil . error ( Level . INFO , LogUtil . NO_ENTITY_ID_CREATE_ENTITY_CONFIG , data , null ) ; \n\t\tthrow new WSFederationMetaException $F22361 ; \n\t\t} \n\t$F23170 ( realm ) $F105633 ( objs , federationId , realm ) try { \n\t\tMap attrs = WSFederationMetaUtils . convertJAXBToAttrMap ( ATTR_ENTITY_CONFIG , config ) ; \n\t\tMap oldAttrs = configInst . getConfiguration ( realm , federationId ) ; \n\t\tif ( oldAttrs == null ) { \n\t\t\tLogUtil . error ( Level . INFO , LogUtil . NO_ENTITY_DESCRIPTOR_CREATE_ENTITY_CONFIG , objs , null ) ; \n\t\t\t$F45095 ( objs ) } \n\t\t$F125374 ( oldValues , oldAttrs , ATTR_ENTITY_CONFIG ) if $F1032 ( oldValues ) { \n\t\t\tLogUtil . error ( Level . INFO , LogUtil . ENTITY_CONFIG_EXISTS , objs , null ) ; \n\t\t\t$F45095 ( objs ) } \n\t\tconfigInst . setConfiguration ( realm , federationId , attrs ) ; \n\t\tLogUtil . access ( Level . INFO , LogUtil . ENTITY_CONFIG_CREATED , objs , null ) ; \n\t\tSPSSOConfigElement spconfig = getSPSSOConfig ( realm , federationId ) ; \n\t\tif ( spconfig != null ) { \n\t\t\taddToCircleOfTrust ( spconfig , realm , federationId ) ; \n\t\t\t} \n\t\tIDPSSOConfigElement idpconfig = getIDPSSOConfig ( realm , federationId ) ; \n\t\tif ( idpconfig != null ) { \n\t\t\taddToCircleOfTrust ( idpconfig , realm , federationId ) ; \n\t\t\t} \n\t\t} \n\tcatch ( ConfigurationException e ) { \n\t\t$F5197 ( debug , e ) $F806 data = { \n\t\t\te . getMessage ( ) , federationId , realm } \n\t\t; \n\t\tLogUtil . error ( Level . INFO , LogUtil . CONFIG_ERROR_CREATE_ENTITY_CONFIG , data , null ) ; \n\t\tthrow new WSFederationMetaException ( e ) ; \n\t\t} \n\tcatch ( JAXBException jaxbe ) { \n\t\t$F5197 ( debug , jaxbe ) LogUtil . error ( Level . INFO , LogUtil . CREATE_INVALID_ENTITY_CONFIG , objs , null ) ; \n\t\t$F45095 ( objs ) } \n\t} \n"}, {"code": "$F14119 ( this , System ) "}, {"code": "private void loadUserInfoIntoActionBar $F72 { \n\tif $F20899 ( TextUtils , mWithUserImage ) { \n\t\tUtils . loadCircularImage ( getActivity ( ) , mWithImageView , mWithUserImage , AvatarBitmapTransformation . AvatarSize . NORMAL ) ; \n\t\t} \n\t} \n"}, {"code": "public static Direction directionForArrowKey ( KeyEvent e ) { \n\tint index = Math . max ( NUM00 , Math . min ( e . getKeyCode ( ) , KeyEvent . VK_DOWN ) - KeyEvent . VK_LEFT ) ; \n\treturn Direction . values ( ) [ index ] ; \n\t} \n"}, {"code": "public TraceGraph ( Collection $F213599 spans ) { \n\tthis . spansByParent = new SpansByParent ( spans ) ; \n\tthis . spansByTracerId = new SpansByTracerId ( spans ) ; \n\t} \n"}, {"code": "public boolean isPersistent $F72 { \n\treturn m_persist ; \n\t} \n"}, {"code": "public static $F22273 toDate ( String monthStr , String dayStr , String yearStr , String hourStr , String minuteStr , String secondStr ) { \n\tint month , day , year , hour , minute , second ; \n\ttry { \n\t\tmonth = Integer . parseInt ( monthStr ) ; \n\t\tday = Integer . parseInt ( dayStr ) ; \n\t\tyear = Integer . parseInt ( yearStr ) ; \n\t\thour = Integer . parseInt ( hourStr ) ; \n\t\tminute = Integer . parseInt ( minuteStr ) ; \n\t\tsecond = Integer . parseInt ( secondStr ) ; \n\t\t} \n\t$F34300 return toDate ( month , day , year , hour , minute , second ) ; \n\t} \n"}, {"code": "protected void handleMesosFailure ( String taskId ) { \n\tint attempt = TaskUtils . getAttemptForTaskId ( taskId ) ; \n\tBaseContainer container = containersInfo . get ( TaskUtils . getContainerIndexForTaskId ( taskId ) ) ; \n\tboolean hasAttemptsLeft = attempt < container . retries ; \n\tif ( hasAttemptsLeft ) { \n\t\tLOG . warning ( String . format ( NUM00 , container . name , attempt + NUM00 ) ) ; \n\t\tString newTaskId = TaskUtils . getTaskId ( container . name , attempt + NUM00 ) ; \n\t\tscheduleNewTask ( newTaskId ) ; \n\t\t} \n\telse { \n\t\t$F285008 ( LOG , attempt ) } \n\t} \n"}, {"code": "private void updateLtp ( SingleChannelElement sce ) { \n\tIndividualChannelStream ics = sce . ics ; \n\tfloat saved [ ] = sce . saved ; \n\tfloat savedLtp [ ] = sce . coeffs ; \n\tfinal float lwindow [ ] = ics . useKbWindow [ NUM00 ] ? ff_aac_kbd_long_1024 : ff_sine_1024 ; \n\tfinal float swindow [ ] = ics . useKbWindow [ NUM00 ] ? ff_aac_kbd_short_128 : ff_sine_128 ; \n\tif ( ics . windowSequence [ NUM00 ] == EIGHT_SHORT_SEQUENCE ) { \n\t\t$F10319 ( System , saved , savedLtp ) Arrays . fill ( savedLtp , NUM00 , NUM00 + NUM00 , NUM00 ) ; \n\t\tFloatDSP . vectorFmulReverse ( savedLtp , NUM00 , ac . bufMdct , NUM00 , swindow , NUM00 , NUM00 ) ; \n\t\tfor ( $F6268 ( i ) ) { \n\t\t\tsavedLtp [ i + NUM00 ] = ac . bufMdct [ NUM00 - i ] * swindow [ NUM00 - i ] ; \n\t\t\t} \n\t\t} \n\telse if ( ics . windowSequence [ NUM00 ] == LONG_START_SEQUENCE ) { \n\t\tSystem . arraycopy ( ac . bufMdct , NUM00 , savedLtp , NUM00 , NUM00 ) ; \n\t\tArrays . fill ( savedLtp , NUM00 , NUM00 + NUM00 , NUM00 ) ; \n\t\tFloatDSP . vectorFmulReverse ( savedLtp , NUM00 , ac . bufMdct , NUM00 , swindow , NUM00 , NUM00 ) ; \n\t\tfor ( $F6268 ( i ) ) { \n\t\t\tsavedLtp [ i + NUM00 ] = ac . bufMdct [ NUM00 - i ] * swindow [ NUM00 - i ] ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tFloatDSP . vectorFmulReverse ( savedLtp , NUM00 , ac . bufMdct , NUM00 , lwindow , NUM00 , NUM00 ) ; \n\t\tfor ( $F6268 ( i ) ) { \n\t\t\tsavedLtp [ i + NUM00 ] = ac . bufMdct [ NUM00 - i ] * lwindow [ NUM00 - i ] ; \n\t\t\t} \n\t\t} \n\tSystem . arraycopy ( sce . ltpState , NUM00 , sce . ltpState , NUM00 , NUM00 ) ; \n\tSystem . arraycopy ( sce . ret , NUM00 , sce . ltpState , NUM00 , NUM00 ) ; \n\tSystem . arraycopy ( savedLtp , NUM00 , sce . ltpState , NUM00 , NUM00 ) ; \n\t} \n"}, {"code": "public static File findConfigInWorkingDirectory $F72 { \n\tfor ( final String suffix : SUFFIXES ) { \n\t\tfinal File configFile = new File ( System . getProperty ( NUM00 ) , PREFIX + suffix ) ; \n\t\tif $F7110 ( configFile ) { \n\t\t\treturn configFile ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "$F1 public void drawRangeMarker ( Graphics2D g2 , XYPlot plot , ValueAxis rangeAxis , Marker marker , Rectangle2D dataArea ) { \n\tif ( marker instanceof ValueMarker ) { \n\t\tValueMarker vm = ( ValueMarker ) marker ; \n\t\t$F10704 ( value , vm ) $F10706 ( range , rangeAxis ) $F10707 ( range , value ) $F69926 ( v , rangeAxis , value , dataArea , plot ) $F10709 ( orientation , plot ) Line2D line = null ; \n\t\tif ( orientation == PlotOrientation . HORIZONTAL ) $F75721 ( line , v , dataArea ) else if ( orientation == PlotOrientation . VERTICAL ) $F75728 ( line , dataArea , v ) else $F4639 final Composite originalComposite = g2 . getComposite ( ) ; \n\t\tg2 . setComposite ( AlphaComposite . getInstance ( AlphaComposite . SRC_OVER , marker . getAlpha ( ) ) ) ; \n\t\tg2 . setPaint ( marker . getPaint ( ) ) ; \n\t\tg2 . setStroke ( marker . getStroke ( ) ) ; \n\t\tg2 . draw ( line ) ; \n\t\t$F10771 ( label , marker ) RectangleAnchor anchor = marker . getLabelAnchor ( ) ; \n\t\tif ( label != null ) { \n\t\t\tFont labelFont = marker . getLabelFont ( ) ; \n\t\t\tg2 . setFont ( labelFont ) ; \n\t\t\tPoint2D coords = calculateRangeMarkerTextAnchorPoint ( g2 , orientation , dataArea , line . getBounds2D ( ) , marker . getLabelOffset ( ) , LengthAdjustmentType . EXPAND , anchor ) ; \n\t\t\tRectangle2D r = TextUtils . calcAlignedStringBounds ( $F10784 ( label , g2 , coords , marker ) ) ; \n\t\t\tg2 . setPaint ( marker . getLabelBackgroundColor ( ) ) ; \n\t\t\tg2 . fill ( r ) ; \n\t\t\tg2 . setPaint ( marker . getLabelPaint ( ) ) ; \n\t\t\tTextUtilities . drawAlignedString ( $F10784 ( label , g2 , coords , marker ) ) ; \n\t\t\t} \n\t\tg2 . setComposite ( originalComposite ) ; \n\t\t} \n\telse if ( marker instanceof IntervalMarker ) { \n\t\tIntervalMarker im = ( IntervalMarker ) marker ; \n\t\tdouble start = im . getStartValue ( ) ; \n\t\tdouble end = im . getEndValue ( ) ; \n\t\t$F10706 ( range , rangeAxis ) if ( ! ( range . intersects ( start , end ) ) ) $F932 $F69926 ( start2d , rangeAxis , start , dataArea , plot ) $F69926 ( end2d , rangeAxis , end , dataArea , plot ) $F59772 ( low , Math , start2d , end2d ) $F7560 ( high , Math , start2d , end2d ) $F10709 ( orientation , plot ) Rectangle2D rect = null ; \n\t\tif ( orientation == PlotOrientation . HORIZONTAL ) { \n\t\t\tlow = Math . max ( low , dataArea . getMinX ( ) ) ; \n\t\t\thigh = Math . min ( high , dataArea . getMaxX ( ) ) ; \n\t\t\trect = new $F1634 ( low , dataArea . getMinY ( ) , high - low , dataArea . getHeight ( ) ) ; \n\t\t\t} \n\t\telse if ( orientation == PlotOrientation . VERTICAL ) { \n\t\t\tlow = Math . max ( low , dataArea . getMinY ( ) ) ; \n\t\t\thigh = Math . min ( high , dataArea . getMaxY ( ) ) ; \n\t\t\trect = new $F1634 ( dataArea . getMinX ( ) , low , dataArea . getWidth ( ) , high - low ) ; \n\t\t\t} \n\t\tfinal Composite originalComposite = g2 . getComposite ( ) ; \n\t\tg2 . setComposite ( AlphaComposite . getInstance ( AlphaComposite . SRC_OVER , marker . getAlpha ( ) ) ) ; \n\t\tPaint p = marker . getPaint ( ) ; \n\t\tif ( p instanceof GradientPaint ) { \n\t\t\tGradientPaint gp = ( GradientPaint ) p ; \n\t\t\tGradientPaintTransformer t = im . getGradientPaintTransformer ( ) ; \n\t\t\tif ( t != null ) { \n\t\t\t\tgp = t . transform ( gp , rect ) ; \n\t\t\t\t} \n\t\t\tg2 . setPaint ( gp ) ; \n\t\t\t} \n\t\telse $F158292 ( g2 , p ) g2 . fill ( rect ) ; \n\t\tif ( im . getOutlinePaint ( ) != null && im . getOutlineStroke ( ) != null ) { \n\t\t\tif ( orientation == PlotOrientation . VERTICAL ) { \n\t\t\t\tLine2D line = new $F69931 $F72 ; \n\t\t\t\t$F69942 ( x0 , dataArea ) $F69944 ( x1 , dataArea ) g2 . setPaint ( im . getOutlinePaint ( ) ) ; \n\t\t\t\tg2 . setStroke ( im . getOutlineStroke ( ) ) ; \n\t\t\t\tif $F105 ( range , start ) { \n\t\t\t\t\tline . setLine ( x0 , start2d , x1 , start2d ) ; \n\t\t\t\t\tg2 . draw ( line ) ; \n\t\t\t\t\t} \n\t\t\t\tif $F105 ( range , end ) { \n\t\t\t\t\tline . setLine ( x0 , end2d , x1 , end2d ) ; \n\t\t\t\t\tg2 . draw ( line ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tLine2D line = new $F69931 $F72 ; \n\t\t\t\t$F69930 ( y0 , dataArea ) $F69928 ( y1 , dataArea ) g2 . setPaint ( im . getOutlinePaint ( ) ) ; \n\t\t\t\tg2 . setStroke ( im . getOutlineStroke ( ) ) ; \n\t\t\t\tif $F105 ( range , start ) { \n\t\t\t\t\tline . setLine ( start2d , y0 , start2d , y1 ) ; \n\t\t\t\t\tg2 . draw ( line ) ; \n\t\t\t\t\t} \n\t\t\t\tif $F105 ( range , end ) { \n\t\t\t\t\tline . setLine ( end2d , y0 , end2d , y1 ) ; \n\t\t\t\t\tg2 . draw ( line ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t$F10771 ( label , marker ) RectangleAnchor anchor = marker . getLabelAnchor ( ) ; \n\t\tif ( label != null ) { \n\t\t\tFont labelFont = marker . getLabelFont ( ) ; \n\t\t\tg2 . setFont ( labelFont ) ; \n\t\t\tPoint2D coords = calculateRangeMarkerTextAnchorPoint ( g2 , orientation , dataArea , rect , marker . getLabelOffset ( ) , marker . getLabelOffsetType ( ) , anchor ) ; \n\t\t\tRectangle2D r = TextUtils . calcAlignedStringBounds ( $F10784 ( label , g2 , coords , marker ) ) ; \n\t\t\tg2 . setPaint ( marker . getLabelBackgroundColor ( ) ) ; \n\t\t\tg2 . fill ( r ) ; \n\t\t\tg2 . setPaint ( marker . getLabelPaint ( ) ) ; \n\t\t\tTextUtilities . drawAlignedString ( $F10784 ( label , g2 , coords , marker ) ) ; \n\t\t\t} \n\t\tg2 . setComposite ( originalComposite ) ; \n\t\t} \n\t} \n"}, {"code": "protected boolean attemptToAddWord ( Word word ) { \n\tdouble additionalLength = word . getWordWidth ( ) ; \n\tadditionalLength += $F1030 ( words ) ? spaceSize : NUM00 ; \n\tif ( currentLineLength + additionalLength <= maxLength || maxLength == - NUM00 ) { \n\t\twords . add ( word ) ; \n\t\tcurrentLineLength += additionalLength ; \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "$F1 public boolean onPreferenceClick ( Preference preference ) { \n\tif ( preference == mPlayExample ) $F27427 ( getSampleText , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "public void readWwwAuthenticateHeader ( String header ) { \n\tif ( header != null ) { \n\t\tmIsDigestAuthentication = header . startsWith ( HttpDigestMd5Authentication . HTTP_DIGEST_SCHEMA ) ; \n\t\t$F24126 ( mIsDigestAuthentication ) String value = getValue ( header , NUM00 ) ; \n\t\tmDigest . setRealm ( value ) ; \n\t\tvalue = getValue ( header , NUM00 ) ; \n\t\tmDigest . setOpaque ( value ) ; \n\t\tvalue = getValue ( header , NUM00 ) ; \n\t\tmDigest . setQop ( value ) ; \n\t\tvalue = getValue ( header , NUM00 ) ; \n\t\tmDigest . setNextnonce ( value ) ; \n\t\t} \n\t} \n"}, {"code": "public static String valueOf ( Boolean value ) { \n\treturn value != null ? String . valueOf ( value ) : null ; \n\t} \n"}, {"code": "public void testSendReceive $F72 throws Exception { \n\t$F725 ( messages ) for ( $F1139 ( i , data ) ) { \n\t\tMessage message = session . createTextMessage ( data [ i ] ) ; \n\t\tmessage . setStringProperty ( NUM00 , data [ i ] ) ; \n\t\tmessage . setIntProperty ( NUM00 , i ) ; \n\t\tif ( verbose ) { \n\t\t\tif $F585 ( LOG ) { \n\t\t\t\tLOG . debug ( NUM00 + message + NUM00 + data [ i ] ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tsendToProducer ( producer , producerDestination , message ) ; \n\t\tmessageSent ( ) ; \n\t\t} \n\tassertMessagesAreReceived ( ) ; \n\tLOG . info ( NUM00 + data . length + NUM00 ) ; \n\t} \n"}, {"code": "public void addLive ( boolean live ) $F11031 ( query , live ) "}, {"code": "$F44168 ( uri , encoding , toString , Charsets ) "}, {"code": "public boolean exists ( String key ) $F8587 ( exists , key , _BOOL ) "}, {"code": "public AllocationSite ( int line , int column ) { \n\tsynchronized ( sites ) { \n\t\tthis . id = sites . size ( ) ; \n\t\tsites . add ( this ) ; \n\t\t} \n\tthis . line = line ; \n\tthis . column = column ; \n\t} \n"}, {"code": "public boolean drawImage ( Image img , AffineTransform xform , ImageObserver obs ) { \n\treturn mGraphics . drawImage ( img , xform , obs ) ; \n\t} \n"}, {"code": "public final static int parseInt $F21196 ( digitChars , offset , len ) { \n\tint num = digitChars [ offset ] - NUM00 ; \n\tlen += offset ; \n\tif ( ++ offset < len ) { \n\t\tnum = ( num * NUM00 ) + ( digitChars [ offset ] - NUM00 ) ; \n\t\tif ( ++ offset < len ) { \n\t\t\tnum = ( num * NUM00 ) + ( digitChars [ offset ] - NUM00 ) ; \n\t\t\tif ( ++ offset < len ) { \n\t\t\t\tnum = ( num * NUM00 ) + ( digitChars [ offset ] - NUM00 ) ; \n\t\t\t\tif ( ++ offset < len ) { \n\t\t\t\t\tnum = ( num * NUM00 ) + ( digitChars [ offset ] - NUM00 ) ; \n\t\t\t\t\tif ( ++ offset < len ) { \n\t\t\t\t\t\tnum = ( num * NUM00 ) + ( digitChars [ offset ] - NUM00 ) ; \n\t\t\t\t\t\tif ( ++ offset < len ) { \n\t\t\t\t\t\t\tnum = ( num * NUM00 ) + ( digitChars [ offset ] - NUM00 ) ; \n\t\t\t\t\t\t\tif ( ++ offset < len ) { \n\t\t\t\t\t\t\t\tnum = ( num * NUM00 ) + ( digitChars [ offset ] - NUM00 ) ; \n\t\t\t\t\t\t\t\tif ( ++ offset < len ) { \n\t\t\t\t\t\t\t\t\tnum = ( num * NUM00 ) + ( digitChars [ offset ] - NUM00 ) ; \n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn num ; \n\t} \n"}, {"code": "public ActivityMonitorSample $F72 { \n\tinitComponents ( ) ; \n\t$F79692 ( ownerARadio ) $F79692 ( ownerBRadio ) $F79692 ( ownerCRadio ) indicatorA . setActivityOwner ( NUM00 ) ; \n\tindicatorB . setActivityOwner ( NUM00 ) ; \n\tindicatorC . setActivityOwner ( NUM00 ) ; \n\tJActivityWindow . getInstance ( ) ; \n\t} \n"}, {"code": "public static LatLon [ ] greatCircleExtremeLocations ( LatLon location , Angle azimuth ) { \n\t$F826 ( location ) $F826 ( azimuth ) $F3545 ( lat0 , location ) double az = azimuth . radians ; \n\tdouble tanDistance = - Math . tan ( lat0 ) / Math . cos ( az ) ; \n\tdouble distance = Math . atan ( tanDistance ) ; \n\tAngle extremeDistance1 = Angle . fromRadians ( distance + ( Math . PI / NUM00 ) ) ; \n\tAngle extremeDistance2 = Angle . fromRadians ( distance - ( Math . PI / NUM00 ) ) ; \n\treturn new LatLon [ ] { \n\t\tgreatCircleEndPosition ( location , azimuth , extremeDistance1 ) , greatCircleEndPosition ( location , azimuth , extremeDistance2 ) } \n\t; \n\t} \n"}, {"code": "private void initCheckbox ( CheckBoxPreference checkbox , boolean checked , boolean enabled ) { \n\tcheckbox . setChecked ( checked ) ; \n\tcheckbox . setEnabled ( enabled ) ; \n\t} \n"}, {"code": "private void paintCheckIconEnabledAndSelected $F269611 ( g , width , height ) { \n\tShape s = shapeGenerator . createCheckMark ( NUM00 , NUM00 , width , height ) ; \n\tg . setPaint ( iconEnabledSelected ) ; \n\tg . fill ( s ) ; \n\t} \n"}, {"code": "public static int findURISplitIndex ( String uri ) { \n\t$F1749 ( uriLength , uri ) int idx = uriLength - NUM00 ; \n\tfor ( ; \n\tidx >= NUM00 ; \n\tidx -- ) { \n\t\tif ( ! TurtleUtil . isNameChar ( uri . charAt ( idx ) ) ) $F5153 } \n\tidx ++ ; \n\tfor ( ; \n\tidx < uriLength ; \n\tidx ++ ) { \n\t\tif ( TurtleUtil . isNameStartChar ( uri . charAt ( idx ) ) ) $F5153 } \n\tif ( ! TurtleUtil . isNameEndChar ( uri . charAt ( uriLength - NUM00 ) ) ) $F7629 if ( idx > NUM00 && idx < uriLength ) { \n\t\treturn idx ; \n\t\t} \n\t$F150 } \n"}, {"code": "private void writeLog ( String cmd ) { \n\ttry { \n\t\tif ( m_writer == null ) { \n\t\t\t$F217687 ( file , File ) m_writer = new PrintWriter ( new FileWriter ( file ) ) ; \n\t\t\t$F17749 ( log , file ) } \n\t\tm_writer . println ( cmd ) ; \n\t\t$F1206 ( m_writer ) } \n\tcatch ( Exception e ) { \n\t\tlog . severe ( e . toString ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void reload ( String why ) { \n\tmFullPhotoPaths = mRootDir . list ( MediaScanner . JPG_FILENAME_FILTER ) ; \n\tif ( ( mFullPhotoPaths != null ) && $F9634 ( mFullPhotoPaths ) ) { \n\t\tmFullPhotoPaths = null ; \n\t\tLog . i ( Global . LOG_CONTEXT , mDebugPrefix + why + NUM00 + mRootDir + NUM00 + NUM00 ) ; \n\t\t} \n\telse if ( mFullPhotoPaths != null ) { \n\t\tif ( Global . debugEnabled ) { \n\t\t\tLog . i ( Global . LOG_CONTEXT , mDebugPrefix + why + NUM00 + mRootDir + NUM00 + mFullPhotoPaths . length ) ; \n\t\t\t} \n\t\t$F22814 ( parentDirString , mRootDir ) for ( $F1139 ( i , mFullPhotoPaths ) ) { \n\t\t\tmFullPhotoPaths [ i ] = parentDirString + NUM00 + mFullPhotoPaths [ i ] ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "DNSRecord ( String name , DNSRecordType type , DNSRecordClass recordClass , boolean unique , int ttl ) { \n\tsuper ( name , type , recordClass , unique ) ; \n\tthis . _ttl = ttl ; \n\tthis . _created = System . currentTimeMillis ( ) ; \n\t} \n"}, {"code": "public static String block ( Stream $F4 rows ) { \n\treturn block ( rows . collect ( joining ( nl ( ) ) ) ) ; \n\t} \n"}, {"code": "protected void addContentSpecToElement ( XMLElementDecl elementDecl ) { \n\tif ( ( fDepth == NUM00 || ( fDepth == NUM00 && elementDecl . type == XMLElementDecl . TYPE_MIXED ) ) && fNodeIndexStack != null ) { \n\t\tif ( elementDecl . type == XMLElementDecl . TYPE_MIXED ) { \n\t\t\tint pcdata = addUniqueLeafNode ( null ) ; \n\t\t\tif ( fNodeIndexStack [ NUM00 ] == - NUM00 ) { \n\t\t\t\tfNodeIndexStack [ NUM00 ] = pcdata ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tfNodeIndexStack [ NUM00 ] = addContentSpecNode ( XMLContentSpec . CONTENTSPECNODE_CHOICE , pcdata , fNodeIndexStack [ NUM00 ] ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tsetContentSpecIndex ( fCurrentElementIndex , fNodeIndexStack [ fDepth ] ) ; \n\t\t} \n\t} \n"}, {"code": "private void growSpine $F72 { \n\tspine = new int [ ( spine . length < < NUM00 ) + NUM00 ] ; \n\tthreshold = ( int ) ( spine . length * loadFactor ) ; \n\t$F99493 ( Arrays , spine ) for ( $F119 ( i , size ) ) { \n\t\tinsert ( objs [ i ] , i ) ; \n\t\t} \n\t} \n"}, {"code": "public void reconnect $F72 { \n\tif ( opened && ! allowConnectionRecovery ) $F932 reconnectwait thread = new reconnectwait $F72 ; \n\t$F2346 ( thread ) try $F45915 ( thread ) catch ( InterruptedException e ) $F50614 ( log , e ) if ( ! opened ) $F21338 ( log ) else { \n\t\tlog . info ( NUM00 + getCurrentPortName ( ) ) ; \n\t\tresetupConnection ( ) ; \n\t\t} \n\t} \n"}, {"code": "public Collection < GridPortRecord > records $F72 { \n\tsynchronized ( recs ) { \n\t\treturn Collections . unmodifiableCollection ( $F7044 ( recs ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F16994 ( buf ) "}, {"code": "public boolean hasChangeEvent ( String name ) { \n\tif ( var != null ) { \n\t\tList < MetaData > mdList = var . getMetaData ( StandardDefs . MD_CHANGEEVENT ) ; \n\t\tif ( mdList != null ) { \n\t\t\tfor ( $F12534 ( i , size , mdList ) ) { \n\t\t\t\tMetaData md = mdList . get ( i ) ; \n\t\t\t\tif ( name . equals ( md . getValue ( NUM00 ) ) ) { \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected void resetXML11 $F72 throws XNIException $F16404 ( count , fXML11Components , i , c , this ) "}, {"code": "public float distanceToOtherCircle ( Circle circle ) { \n\treturn ( float ) Math . abs ( Math . sqrt ( Math . pow ( circle . center . x - center . x , NUM00 ) + Math . pow ( circle . center . y - center . y , NUM00 ) ) ) ; \n\t} \n"}, {"code": "public SimpleCommand $F71933 ( commandName , args ) { \n\tthis ( commandName , ( Argument ) null ) ; \n\tArrayList < Argument > argList = new ArrayList < Argument > $F72 ; \n\tfor ( String arg : args ) argList . add ( new Argument ( arg ) ) ; \n\t_arguments = argList . toArray ( new Argument $F380 ) ; \n\t} \n"}, {"code": "private void grow $F72 { \n\tm_allocatedSize *= NUM00 ; \n\tboolean newVector [ ] = new boolean [ m_allocatedSize ] ; \n\t$F10236 ( System , m_values , newVector , m_index ) m_values = newVector ; \n\t} \n"}, {"code": "public String convertToLowerCase ( String table ) { \n\t$F32484 ( table ) } \n"}, {"code": "public PickingGraphMousePlugin ( int selectionModifiers , int addToSelectionModifiers ) { \n\tsuper ( selectionModifiers ) ; \n\tthis . addToSelectionModifiers = addToSelectionModifiers ; \n\tthis . lensPaintable = new LensPaintable $F72 ; \n\tthis . cursor = Cursor . getPredefinedCursor ( Cursor . HAND_CURSOR ) ; \n\t} \n"}, {"code": "public $F2027 breadthFirstSearch ( int intialValue , IBFSTraversable $F36647 traversable , int firstValue , IIntegerBfsNextValueIterator $F36647 nextValueIterator , $F3807 sourcesIndex ) { \n\t$F22974 ( results , nodes ) Arrays . fill ( results , intialValue ) ; \n\t$F24314 ( alreadyScanned , nodes ) Arrays . fill ( alreadyScanned , _BOOL ) ; \n\t$F11868 $F28907 ( currentNodesIndex , sourcesIndex ) ; \n\titerativeIntegerBreadthFirstSearch ( results , alreadyScanned , currentNodesIndex , firstValue , NUM00 , traversable , nextValueIterator ) ; \n\treturn results ; \n\t} \n"}, {"code": "public ViewRefRender ( ViewRender $F4203 view , $F20474 type , int priority ) { \n\tObjects . requireNonNull ( view ) ; \n\t_view = view ; \n\t_type = type ; \n\t_priority = priority ; \n\t} \n"}, {"code": "public void checkNumberArgs ( int argNum ) throws WrongNumberArgsException { \n\tif ( argNum < NUM00 ) reportWrongNumberArgs ( ) ; \n\t} \n"}, {"code": "private boolean announce $F4374 ( groups ) { \n\tif ( dataPackets == null || ! lastLocator . equals ( myLocator ) || ! Arrays . equals ( lastGroups , groups ) ) { \n\t\tList < DatagramPacket > packets = new ArrayList < DatagramPacket > $F72 ; \n\t\tDiscovery disco ; \n\t\ttry { \n\t\t\tdisco = getDiscovery ( multicastAnnouncementConstraints . chooseProtocolVersion ( ) ) ; \n\t\t\t} \n\t\tcatch ( DiscoveryProtocolException e ) $F27253 ( e ) EncodeIterator ei = disco . encodeMulticastAnnouncement ( new MulticastAnnouncement ( announcementSeqNo ++ , myLocator . getHost ( ) , myLocator . getPort ( ) , groups , myServiceID ) , multicastAnnouncementConstraints . getMulticastMaxPacketSize ( DEFAULT_MAX_PACKET_SIZE ) , multicastAnnouncementConstraints . getUnfulfilledConstraints ( ) ) ; \n\t\twhile $F2921 ( ei ) { \n\t\t\ttry { \n\t\t\t\tpackets . addAll ( Arrays . asList ( ei . next ( ) ) ) ; \n\t\t\t\t} \n\t\t\tcatch ( Exception e ) { \n\t\t\t\tlogger . log ( ( e instanceof UnsupportedConstraintException ) ? Levels . HANDLED : Level . INFO , NUM00 + NUM00 , e ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tlastLocator = myLocator ; \n\t\tlastGroups = groups ; \n\t\tdataPackets = packets . toArray ( new DatagramPacket $F2313 ( packets ) ) ; \n\t\t} \n\ttry { \n\t\tsend ( dataPackets ) ; \n\t\t} \n\tcatch ( InterruptedIOException e ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public DrawingAttributes $F72 { \n\tpropertyChangeSupport = new PropertyChangeSupport ( this ) ; \n\t} \n"}, {"code": "public void close $F72 $F881 ( scanner ) "}, {"code": "static void createPolicyTree ( String configName , String configId , ServiceConfigManager scm , String org ) throws NoPermissionException , PolicyException , SSOException { \n\ttry { \n\t\t$F105641 ( pConfig , scm , org ) if ( pConfig == null ) { \n\t\t\tscm . createOrganizationConfig ( org , null ) ; \n\t\t\tpConfig = scm . getOrganizationConfig ( org , null ) ; \n\t\t\t} \n\t\tpConfig . addSubConfig ( configName , configId , NUM00 , null ) ; \n\t\t} \n\tcatch ( ServiceAlreadyExistsException se ) { \n\t\t$F6303 ( debug , configName , configId , org ) } \n\tcatch ( SMSException e ) { \n\t\t$F78467 ( objs , org ) if ( e . getExceptionCode ( ) == SMSException . STATUS_NO_PERMISSION ) { \n\t\t\tthrow ( new NoPermissionException ( ResBundleUtils . rbName , NUM00 , null ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tthrow ( $F136377 ( ResBundleUtils , objs , e ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void rollbackMethodForCreateSnapshot ( boolean isSnapshotCreated , boolean isDummyLunPathAdded , HDSApiClient hdsApiClient , StorageSystem storage , URI snapshot ) throws Exception { \n\tif ( isDummyLunPathAdded ) { \n\t\t$F973 ( log ) hdsProtectionOperations . removeDummyLunPath ( storage , snapshot ) ; \n\t\t} \n\tif ( isSnapshotCreated ) { \n\t\t$F973 ( log ) BlockSnapshot $F34887 ( snapshotObj , dbClient , snapshot ) ; \n\t\tString systemObjectID = HDSUtils . getSystemObjectID ( storage ) ; \n\t\tString logicalUnitObjId = HDSUtils . getLogicalUnitObjectId ( snapshotObj . getNativeId ( ) , storage ) ; \n\t\thdsApiClient . deleteSnapshotVolume ( systemObjectID , logicalUnitObjId , storage . getModel ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static int convertStringToTimeSeconds ( String time ) { \n\tint result = NUM00 ; \n\tif $F8991 ( time ) { \n\t\tint hoursToAdd = Integer . valueOf ( StringUtils . remove ( time , NUM00 ) ) ; \n\t\tresult = $F18752 * hoursToAdd ; \n\t\t} \n\telse if $F8991 ( time ) { \n\t\tint minsToAdd = Integer . valueOf ( StringUtils . remove ( time , NUM00 ) ) ; \n\t\tresult = NUM00 * minsToAdd ; \n\t\t} \n\telse if $F8991 ( time ) { \n\t\tint secsToAdd = Integer . valueOf ( StringUtils . remove ( time , NUM00 ) ) ; \n\t\tresult = secsToAdd ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public void detach ( AppCompatActivity activity ) { \n\tattrViewMaps . remove ( activity . hashCode ( ) ) ; \n\t} \n"}, {"code": "public void readPrefs ( SharedPreferences settings , ActionFactory factory ) { \n\tboolean visible = _BOOL ; \n\tString actionId = settings . getString ( NUM00 + name + NUM00 , NUM00 ) ; \n\tmainAction = factory . getAction ( actionId ) ; \n\tif ( mainAction != null ) visible = _BOOL ; \n\t$F725 ( menuActions ) for ( $F119 ( i , maxMenuActions ) ) { \n\t\tactionId = settings . getString ( NUM00 + name + NUM00 + ( i + NUM00 ) , NUM00 ) ; \n\t\tUIAction a = factory . getAction ( actionId ) ; \n\t\tif ( a != null ) visible = _BOOL ; \n\t\tmenuActions . add ( a ) ; \n\t\t} \n\tif ( button != null ) button . setVisibility ( visible ? View . VISIBLE : View . GONE ) ; \n\t} \n"}, {"code": "public boolean addToActiveList ( DownloadInfoRunnable downloadInfoRunnable ) { \n\treturn activeListHasRoom ( ) && mActiveList . add ( downloadInfoRunnable ) ; \n\t} \n"}, {"code": "private void addExprToTLA ( TLAExpr expr ) { \n\tVector sv = expr . toStringVector ( ) ; \n\tVector exprMapping = expr . toMappingVector ( ) ; \n\t$F1749 ( indent , tlacodeNextLine ) int nextLine = NUM00 ; \n\tif ( indent != NUM00 ) { \n\t\tMappingObject . shiftMappingVector ( exprMapping , indent ) ; \n\t\ttlacodeNextLine = tlacodeNextLine + ( ( String ) sv . elementAt ( NUM00 ) ) ; \n\t\tmappingVectorNextLine . addAll ( ( Vector ) exprMapping . elementAt ( NUM00 ) ) ; \n\t\tnextLine = NUM00 ; \n\t\t$F69854 ( sv , endCurrentLineOfTLA ) } \n\tif $F3817 ( sv ) { \n\t\tString spaces = NSpaces ( indent ) ; \n\t\twhile $F18523 ( nextLine , sv ) { \n\t\t\ttlacode . addElement ( spaces + ( $F1766 ( sv , nextLine ) ) ) ; \n\t\t\tmappingVector . addElement ( ( Vector ) exprMapping . elementAt ( nextLine ) ) ; \n\t\t\tnextLine ++ ; \n\t\t\t} \n\t\ttlacodeNextLine = spaces + ( $F1766 ( sv , nextLine ) ) ; \n\t\tmappingVectorNextLine = ( Vector ) exprMapping . elementAt ( nextLine ) ; \n\t\t} \n\telse if ( indent == NUM00 ) { \n\t\ttlacodeNextLine = tlacodeNextLine + ( ( String ) sv . elementAt ( NUM00 ) ) ; \n\t\tmappingVectorNextLine . addAll ( ( Vector ) exprMapping . elementAt ( NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "private boolean isUpperCaseCamelCaseHunk ( String hunk ) { \n\tif $F3599 ( hunk ) return _BOOL ; \n\tfor ( $F1088 ( i , hunk ) ) { \n\t\tif $F52702 ( isLegalChar , hunk , i ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F32569 ( panel , cols , rows , filler , filled_cell_11 , _BOOL , cc , Box , index ) "}, {"code": "public void type ( String string ) { \n\tfor ( $F1088 ( i , string ) ) { \n\t\t$F1280 ( c , string , i ) type ( c ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean providesIdentifier $F72 { \n\treturn _BOOL ; \n\t} \n"}, {"code": "static void removeRedundantAffix ( TranslatorUtils . IContain iContain , $F3803 strList ) { \n\tif $F119130 ( strList ) $F932 int w = NUM00 ; \n\tfor ( String str : strList ) { \n\t\tif ( w == NUM00 || ! iContain . containFunc ( str , strList . get ( w - NUM00 ) ) ) { \n\t\t\tstrList . set ( w , str ) ; \n\t\t\tw ++ ; \n\t\t\t} \n\t\t} \n\tstrList = strList . subList ( NUM00 , w ) ; \n\t} \n"}, {"code": "public static int nextInt ( int n ) { \n\tRandom random = getRandom ( ) ; \n\t$F123945 ( value , random , n ) if ( ! _isTest ) _freeRandomList . free ( random ) ; \n\treturn value ; \n\t} \n"}, {"code": "protected void doResumeUpdates $F72 { \n\tCalendar cal = Calendar . getInstance ( Locale . getDefault ( ) ) ; \n\tmFirstDayOfWeek = cal . getFirstDayOfWeek ( ) - NUM00 ; \n\tmShowWeekNumber = _BOOL ; \n\tupdateHeader ( ) ; \n\tgoTo ( mSelectedDay . toMillis ( _BOOL ) , _BOOL , _BOOL , _BOOL ) ; \n\tmAdapter . setSelectedDay ( mSelectedDay ) ; \n\t$F21687 ( mTodayUpdater ) } \n"}, {"code": "private void storeLastUsed $F72 { \n\tput ( LAST_USE , ( int ) $F210831 ( System ) ) ; \n\t} \n"}, {"code": "private boolean canContain ( ElementContainmentInfo child , ElementContainmentInfo top , int topIndex ) { \n\tint childTypes = child . types ; \n\tint contents = top . contents ; \n\tint transparencyAllowed = childTypes & ( top . transparentToContents & ~ contents ) ; \n\tfor ( int containerIndex = topIndex - NUM00 ; \n\ttransparencyAllowed != NUM00 ; \n\t-- containerIndex ) { \n\t\tif ( containerIndex < NUM00 ) { \n\t\t\tcontents |= transparencyAllowed ; \n\t\t\t$F597 } \n\t\tElementContainmentInfo container = openElements . get ( containerIndex ) ; \n\t\tcontents |= transparencyAllowed & container . contents ; \n\t\ttransparencyAllowed = transparencyAllowed & container . transparentToContents & ~ contents ; \n\t\t} \n\treturn ( contents & childTypes ) != NUM00 ; \n\t} \n"}, {"code": "public static $F2027 extractArcs ( ASN1ObjectIdentifier oid ) throws InvalidObjectIdException { \n\t$F134526 ( oidStr , oid ) $F8093 ( strTokCnt , oidStr , _BOOL ) $F17729 ( arcCount , strTokCnt ) $F8093 ( strTok , oidStr , _BOOL ) boolean expectDelimiter = _BOOL ; \n\t$F4120 ( arcs , arcCount ) int i = NUM00 ; \n\twhile $F14498 ( strTok ) { \n\t\t$F8095 ( token , strTok ) if ( expectDelimiter && ( $F1263 ( token ) || ! strTok . hasMoreTokens ( ) ) ) { \n\t\t\tthrow new InvalidObjectIdException $F16961 ( res ) ; \n\t\t\t} \n\t\telse if ( ! expectDelimiter ) { \n\t\t\ttry { \n\t\t\t\t$F49898 ( arcs , i , Integer , token ) if ( arcs [ i ] < NUM00 ) { \n\t\t\t\t\tthrow new InvalidObjectIdException $F16961 ( res ) ; \n\t\t\t\t\t} \n\t\t\t\ti ++ ; \n\t\t\t\t} \n\t\t\tcatch ( NumberFormatException ex ) { \n\t\t\t\tthrow new InvalidObjectIdException $F16961 ( res ) ; \n\t\t\t\t} \n\t\t\t} \n\t\texpectDelimiter = ! expectDelimiter ; \n\t\t} \n\treturn arcs ; \n\t} \n"}, {"code": "public void testIsDuplicateString $F72 { \n\tint count = NUM00 ; \n\tActiveMQMessageAudit audit = new ActiveMQMessageAudit $F72 ; \n\tIdGenerator idGen = new IdGenerator $F72 ; \n\t$F24645 ( list ) for ( $F119 ( i , count ) ) { \n\t\tString id = idGen . generateId ( ) ; \n\t\tlist . add ( id ) ; \n\t\tassertFalse ( audit . isDuplicate ( id ) ) ; \n\t\t} \n\t$F3803 windowList = list . subList ( $F2281 ( list ) - audit . getAuditDepth ( ) , $F2281 ( list ) ) ; \n\tfor ( String id : windowList ) { \n\t\tassertTrue ( NUM00 + id , audit . isDuplicate ( id ) ) ; \n\t\t} \n\t} \n"}, {"code": "protected void updateStatsForConditionalDensityEstimator ( ConditionalDensityEstimator classifier , Instance classMissing , double classValue ) throws Exception { \n\t$F113304 ( m_PriorEstimator , setNumericPriorsFromBuffer ) m_SumSchemeEntropy -= classifier . logDensity ( classMissing , classValue ) * classMissing . weight ( ) / Utils . log2 ; \n\tm_SumPriorEntropy -= m_PriorEstimator . logDensity ( classValue ) * classMissing . weight ( ) / Utils . log2 ; \n\t} \n"}, {"code": "$F1 public boolean accept ( File f ) { \n\tif ( f != null ) { \n\t\tif $F3444 ( f ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tString extension = getExtension ( f ) ; \n\t\tif ( extension != null && filters . get ( getExtension ( f ) ) != null ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void testCase3 $F72 { \n\t$F3013 $F3017 $F3021 int aSign = NUM00 ; \n\tint bSign = - NUM00 ; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F3024 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "$F1 public PollResult startPoll ( PollController conn ) { \n\tif $F279276 ( _lifecycle ) { \n\t\tlog . warning ( this + NUM00 ) ; \n\t\treturn PollResult . CLOSED ; \n\t\t} \n\tSocketBar socket = conn . getSocket ( ) ; \n\tif ( socket == null ) { \n\t\tlog . warning ( this + NUM00 + conn ) ; \n\t\treturn PollResult . CLOSED ; \n\t\t} \n\tSelectableChannel selChannel = socket . selectableChannel ( ) ; \n\tif ( selChannel == null ) { \n\t\tlog . warning ( this + NUM00 + socket ) ; \n\t\treturn PollResult . CLOSED ; \n\t\t} \n\t$F5224 ( _connectionCount ) $F5224 ( _activeCount ) _registerQueue . offer ( conn ) ; \n\treturn PollResult . START ; \n\t} \n"}, {"code": "$F1 public void incrementAccessCount $F72 $F16878 ( accessCount ) "}, {"code": "public ClusterPolicy createClusterPolicy ( String clusterMemberName ) throws CreateException { \n\t$F657 ( time1 , System ) if ( _clusterPolicies == null ) { \n\t\t_clusterMemberNames = getClusterMemberNames ( ) ; \n\t\tif $F22195 ( _clusterMemberNames ) { \n\t\t\t_clusterPolicies = new HashMap < String , ClusterPolicy > $F72 ; \n\t\t\tClusterPolicy [ ] tempPolicy = new ClusterPolicy [ _clusterMemberNames . length ] ; \n\t\t\tfor ( $F1139 ( i , _clusterMemberNames ) ) tempPolicy [ i ] = createClusterPolicyInternal ( _clusterMemberNames [ i ] ) ; \n\t\t\tArrayList < ReplicationPolicy > selectedReplPolicies = new ArrayList < ReplicationPolicy > ( _clusterMemberNames . length ) ; \n\t\t\t$F3803 selectedReplGroupNames = new $F5 ( _clusterMemberNames . length ) ; \n\t\t\tfor ( $F1139 ( i , tempPolicy ) ) if ( tempPolicy [ i ] . m_ReplicationPolicy != null && ! selectedReplGroupNames . contains ( tempPolicy [ i ] . m_ReplicationPolicy . m_ReplicationGroupName ) ) { \n\t\t\t\tselectedReplPolicies . add ( tempPolicy [ i ] . m_ReplicationPolicy ) ; \n\t\t\t\tselectedReplGroupNames . add ( tempPolicy [ i ] . m_ReplicationPolicy . m_ReplicationGroupName ) ; \n\t\t\t\t} \n\t\t\tif $F2979 ( selectedReplPolicies ) selectedReplPolicies = null ; \n\t\t\telse $F51919 ( selectedReplPolicies ) for ( $F1139 ( i , _clusterMemberNames ) ) { \n\t\t\t\ttempPolicy [ i ] . m_ReplicationGroups = selectedReplPolicies ; \n\t\t\t\t_clusterPolicies . put ( _clusterMemberNames [ i ] , tempPolicy [ i ] ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tClusterPolicy result = _clusterPolicies . get ( clusterMemberName ) ; \n\t$F192589 ( result , createClusterPolicyInternal , clusterMemberName ) $F657 ( time2 , System ) if $F6456 ( _logger , Level ) { \n\t\t_logger . fine ( NUM00 + clusterMemberName + NUM00 + ( time2 - time1 ) + NUM00 ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public static boolean compareDoubles ( double a , double b ) { \n\tif ( Double . isNaN ( a ) && Double . isNaN ( b ) ) return _BOOL ; \n\tif ( ! Double . isInfinite ( a ) && ! Double . isInfinite ( b ) ) return Math . abs ( a - b ) <= EPSILON ; \n\treturn a == b ; \n\t} \n"}, {"code": "public static $F96 bitmapToByte ( Bitmap b ) { \n\t$F1538 ( o ) $F125872 ( b , Bitmap , o ) $F11316 ( o ) } \n"}, {"code": "public ConfigureCoerceiveParsingDialog_NB ( CoerciveParsing coerciveParsing ) { \n\tthis . coerciveParsing = coerciveParsing ; \n\tinitComponents ( ) ; \n\tfinal IterateModel numberOfTagsIterator = coerciveParsing . getNumberOfTagsIterator ( ) ; \n\tconfigureIterateModel_NB2 . setStartAt ( String . valueOf ( numberOfTagsIterator . getStartAt ( ) ) ) ; \n\tconfigureIterateModel_NB2 . setStopAt ( String . valueOf ( numberOfTagsIterator . getStopAt ( ) ) ) ; \n\tconfigureIterateModel_NB2 . setIncrement ( String . valueOf ( numberOfTagsIterator . getIncrement ( ) ) ) ; \n\tconfigureIterateModel_NB2 . setIterateStrategie ( numberOfTagsIterator . getIterateStrategie ( ) ) ; \n\t$F3803 tagNames = Arrays . asList ( coerciveParsing . getTagNames ( ) ) ; \n\tconfigureStringList_NB1 . setStringList ( tagNames ) ; \n\t} \n"}, {"code": "public static double logOfBase ( double number , int base ) { \n\treturn Math . log ( number ) / Math . log ( base ) ; \n\t} \n"}, {"code": "public Entry editEntry ( User user , String id , String note , String quotation , boolean isPublic , Long modTime , boolean isAdmin , Errors errors ) { \n\tif ( modTime == null ) { \n\t\tErrors . add ( errors , errorMessages . errorModTimeIsNull ( ) ) ; \n\t\t$F1274 } \n\tif ( user == null ) { \n\t\tErrors . add ( errors , errorMessages . errorUserIsNull ( ) ) ; \n\t\t$F1274 } \n\tif ( id != null && ! idGenerator . isIdWellFormed ( id ) ) { \n\t\tErrors . add ( errors , errorMessages . errorIdIsInvalid ( ) ) ; \n\t\t$F1274 } \n\tfinal Entry entry = getEntryById ( id ) ; \n\tif ( entry == null ) { \n\t\tErrors . add ( errors , errorMessages . errorTheEntryCouldNotBeFound ( ) ) ; \n\t\t$F1274 } \n\tif ( ! canUserModifyEntry ( user , entry , isAdmin ) ) { \n\t\tErrors . add ( errors , errorMessages . errorTheUserIsNotEntitledToModifyTheEntry ( ) ) ; \n\t\t$F1274 } \n\tif ( note != null ) $F8576 ( note , cleanUpText ) if ( entry . isNotebook ( ) ) { \n\t\tentry . setNotebookTitle ( note ) ; \n\t\t} \n\telse if ( entry . isSource ( ) ) { \n\t\tentry . setSourceTitle ( note ) ; \n\t\t} \n\telse { \n\t\tentry . setNote ( note ) ; \n\t\t} \n\tentry . setModTime ( modTime ) ; \n\tentry . setIsPublic ( isPublic ) ; \n\tif ( entry . getCreateTime ( ) > modTime . longValue ( ) ) { \n\t\tmodTime = entry . getCreateTime ( ) ; \n\t\t} \n\tif ( entry . isQuotation ( ) ) { \n\t\tif ( quotation != null ) { \n\t\t\tquotation = cleanUpText ( quotation ) ; \n\t\t\tentry . setQuotation ( quotation ) ; \n\t\t\t} \n\t\t} \n\treturn entry ; \n\t} \n"}, {"code": "public static void UF6 $F93381 ( x , f , nx ) { \n\tint count1 = NUM00 ; \n\tint count2 = NUM00 ; \n\tdouble sum1 = NUM00 ; \n\tdouble sum2 = NUM00 ; \n\tdouble prod1 = NUM00 ; \n\tdouble prod2 = NUM00 ; \n\tdouble yj ; \n\tdouble hj ; \n\tdouble pj ; \n\tdouble N = NUM00 ; \n\tdouble E = NUM00 ; \n\tfor ( $F9993 ( j , nx ) ) { \n\t\t$F94025 ( yj , x , j , Math , PI , nx ) pj = Math . cos ( NUM00 * yj * PI / Math . sqrt ( j + NUM00 ) ) ; \n\t\tif ( j % NUM00 == NUM00 ) $F115995 ( sum2 , yj , prod2 , pj , count2 ) else $F115995 ( sum1 , yj , prod1 , pj , count1 ) } \n\thj = NUM00 * ( NUM00 / N + E ) * Math . sin ( NUM00 * N * PI * x [ NUM00 ] ) ; \n\t$F17370 ( hj ) f [ NUM00 ] = x [ NUM00 ] + hj + $F116001 ( sum1 , prod1 , count1 ) ; \n\tf [ NUM00 ] = NUM00 - x [ NUM00 ] + hj + $F116001 ( sum2 , prod2 , count2 ) ; \n\t} \n"}, {"code": "public FileSaverDescriptor ( $F1113 String title , $F1113 String description , String ... extensions ) { \n\tsuper ( _BOOL , _BOOL , _BOOL , _BOOL , _BOOL , _BOOL ) ; \n\tsetTitle ( title ) ; \n\tsetDescription ( description ) ; \n\t$F37437 ( this , Arrays , extensions ) } \n"}, {"code": "protected int readBlock $F72 { \n\tblockSize = read ( ) ; \n\tint n = NUM00 ; \n\tif ( blockSize > NUM00 ) { \n\t\ttry { \n\t\t\tint count ; \n\t\t\twhile ( n < blockSize ) { \n\t\t\t\tcount = blockSize - n ; \n\t\t\t\trawData . get ( block , n , count ) ; \n\t\t\t\tn += count ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( final Exception e ) { \n\t\t\tLog . w ( TAG , NUM00 , e ) ; \n\t\t\tstatus = STATUS_FORMAT_ERROR ; \n\t\t\t} \n\t\t} \n\treturn n ; \n\t} \n"}, {"code": "public void addRun ( final Run run ) { \n\truns . add ( run ) ; \n\trun . setId ( runIdCounter ++ ) ; \n\t} \n"}, {"code": "void copyInto ( Converter [ ] converters ) $F192661 ( System , iConverters , converters ) "}, {"code": "$F1 public boolean addOutputSensor ( String sensorName , int state ) { \n\tOutputSensor outputSensor = new OutputSensor ( sensorName ) ; \n\tif ( ! outputSensor . setState ( state ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\t_outputSensorList . add ( outputSensor ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void init ( SocketChannel channel ) { \n\t_channel = channel ; \n\t$F725 ( _readBuffer ) $F14257 ( _readBuffer ) _needsFlush = _BOOL ; \n\t} \n"}, {"code": "public void reset $F72 { \n\t$F2980 ( Timber ) $F2268 ( mCurrentPlayer ) $F2268 ( mNextPlayer ) $F28529 ( mQueue , Collections ) mQueueIndex = NUM00 ; \n\tmRequestedSeekPosition = NUM00 ; \n\tmPlayWhenPrepared = _BOOL ; \n\t} \n"}, {"code": "$F1 public Expected $F4203 ifPresent ( final Consumer $F11632 consumer ) { \n\tif ( this . value != null ) consumer . accept ( this . value ) ; \n\treturn this ; \n\t} \n"}, {"code": "protected void sendIntensity ( double intensity ) { \n\tif $F585 ( log ) { \n\t\tlog . debug ( NUM00 + intensity + NUM00 + NUM00 + lastOutputStep + NUM00 + maxDimStep ) ; \n\t\t} \n\tint $F22510 ( newStep , Math , intensity , maxDimStep ) ; \n\tif $F74591 ( newStep , maxDimStep ) $F88361 ( log , newStep , intensity ) if ( newStep == NUM00 ) { \n\t\t$F632 ( log , intensity ) $F665 } \n\tX10Sequence out = new X10Sequence $F72 ; \n\tout . addExtData ( housecode , devicecode , X10Sequence . EXTCMD_DIM , newStep ) ; \n\ttc . sendX10Sequence ( out , null ) ; \n\tlastOutputStep = newStep ; \n\tif $F585 ( log ) { \n\t\tlog . debug ( NUM00 + intensity + NUM00 + X10Sequence . houseValueToText ( housecode ) + NUM00 + devicecode + NUM00 + newStep ) ; \n\t\t} \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public static float readFloat $F72 { \n\treturn scanner . nextFloat ( ) ; \n\t} \n"}, {"code": "public GlowScheduler ( GlowServer server , WorldScheduler worlds ) { \n\tthis . server = server ; \n\tthis . worlds = worlds ; \n\tinTickTaskCondition = worlds . getAdvanceCondition ( ) ; \n\ttickEndRun = null ; \n\t$F72351 ( primaryThread , Thread ) } \n"}, {"code": "public void test_fill$IIII $F72 { \n\tint val = Integer . MAX_VALUE ; \n\tint $F3234 = $F4468 ; \n\t$F47119 ( Arrays , d , val ) $F47123 ( i , assertTrue , d , val ) $F47124 ( i , d , assertTrue , val ) $F47128 ( Arrays , d , val , fail ) $F47133 ( Arrays , d , val , fail ) $F47138 ( Arrays , d , val , fail ) } \n"}, {"code": "$F53919 ( widthSize , mode , initResourcesIfNecessary , itemsLayout , LayoutParams , MeasureSpec , width , PADDING , Math , getSuggestedMinimumWidth ) "}, {"code": "$F10188 ( close , Utils , directory ) "}, {"code": "$F1 public boolean execute ( $F1113 PsiElement pe , $F1113 ResolveState state ) { \n\tif ( pe instanceof PsiVariable ) { \n\t\tfinal PsiVariable pvar = ( PsiVariable ) pe ; \n\t\tif ( ! myStaticSensitiveFlag || ! myStaticScopeFlag || pvar . hasModifierProperty ( PsiModifier . STATIC ) ) { \n\t\t\tif ( check ( pvar , state ) ) $F207 ( myResultList , pvar ) } \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void characters $F21196 ( ch , start , length ) throws SAXException { \n\ttry { \n\t\tstopTerminator ( ) ; \n\t\t$F8249 ( w ) int end = start + length ; \n\t\tfor ( int i = start ; \n\t\ti < end ; \n\t\ti ++ ) { \n\t\t\tchar c = ch [ i ] ; \n\t\t\tswitch ( c ) { \n\t\t\t\t$F1262 $F3410 ( w ) $F597 $F1262 $F3410 ( w ) $F597 $F1262 $F3410 ( w ) $F597 $F1262 $F1262 $F1262 w . write ( c ) ; \n\t\t\t\t$F597 $F1267 if ( canEncode ( c ) ) $F4050 ( w , c ) else { \n\t\t\t\t\t$F3410 ( w ) $F3412 ( w , Integer , c ) $F3410 ( w ) } \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t} \n\t$F6289 ( e ) } \n"}, {"code": "public static String toHumanReadableString ( final String iso8601Duration ) { \n\tString str = NUM00 ; \n\tif $F11809 ( iso8601Duration ) { \n\t\tstr = NUM00 ; \n\t\t} \n\telse { \n\t\tString hours = getHours ( iso8601Duration ) , minutes = getMinutes ( iso8601Duration ) , seconds = getSeconds ( iso8601Duration ) ; \n\t\tif ( hours != null ) { \n\t\t\tstr = hours ; \n\t\t\tif ( $F145545 ( minutes ) ) $F21679 ( minutes ) } \n\t\tif $F2979 ( str ) str = minutes ; \n\t\telse str += NUM00 + minutes ; \n\t\tif $F2979 ( str ) str = seconds ; \n\t\telse str += NUM00 + seconds ; \n\t\t} \n\treturn str ; \n\t} \n"}, {"code": "$F1 public IChatMessage sendMessage ( final String text ) throws RemoteException { \n\tif $F4329 ( TextUtils , text ) { \n\t\tthrow new ServerApiIllegalArgumentException $F580 ; \n\t\t} \n\t$F1749 ( messageLength , text ) int maxMessageLength = mRcsSettings . getMaxGroupChatMessageLength ( ) ; \n\tif ( messageLength > maxMessageLength ) { \n\t\tthrow new ServerApiIllegalArgumentException $F6486 ( messageLength , maxMessageLength ) ; \n\t\t} \n\tif $F931 ( isAllowedToSendMessage ) { \n\t\tthrow new ServerApiPermissionDeniedException $F580 ; \n\t\t} \n\ttry { \n\t\tmImService . removeGroupChatComposingStatus ( mChatId ) ; \n\t\t$F657 ( timestamp , System ) final ChatMessage msg = ChatUtils . createTextMessage ( null , text , timestamp , timestamp ) ; \n\t\tChatMessagePersistedStorageAccessor persistedStorage = new ChatMessagePersistedStorageAccessor ( mMessagingLog , msg . getMessageId ( ) , msg . getRemoteContact ( ) , text , msg . getMimeType ( ) , mChatId , Direction . OUTGOING ) ; \n\t\taddOutgoingGroupChatMessage ( msg , Content . Status . QUEUED , Content . ReasonCode . UNSPECIFIED ) ; \n\t\tif ( ! mChatService . isGroupChatActive ( mChatId ) ) { \n\t\t\tmChatService . setGroupChatStateAndReasonCode ( mChatId , GroupChat . State . STARTED , GroupChat . ReasonCode . UNSPECIFIED ) ; \n\t\t\t} \n\t\tmImService . tryToDequeueGroupChatMessagesAndGroupFileTransfers ( mChatId ) ; \n\t\treturn new ChatMessageImpl ( persistedStorage ) ; \n\t\t} \n\tcatch ( ServerApiBaseException e ) { \n\t\tif ( ! e . shouldNotBeLogged ( ) ) { \n\t\t\t$F303896 ( sLogger , ExceptionUtil , e ) } \n\t\tthrow e ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F303896 ( sLogger , ExceptionUtil , e ) throw new ServerApiGenericException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public $F9737 toString $F72 $F4915 ( toString , value ) "}, {"code": "void remove ( TcpServerThread t ) $F106 ( running , t ) "}, {"code": "public DockNodeEventHandler ( Node node ) $F6988 ( this , node ) "}, {"code": "private int readSourceToLog ( Settings settings ) { \n\tString sourceToLog = settings . get ( INDEX_INDEXING_SLOWLOG_MAX_SOURCE_CHARS_TO_LOG , NUM00 ) ; \n\ttry { \n\t\treturn Integer . parseInt ( sourceToLog , NUM00 ) ; \n\t\t} \n\tcatch ( NumberFormatException e ) { \n\t\treturn Booleans . parseBoolean ( sourceToLog , _BOOL ) ? Integer . MAX_VALUE : NUM00 ; \n\t\t} \n\t} \n"}, {"code": "private void deleteCurrentLicenseFileOnDisk $F72 { \n\tFile licenseFile = new File ( LicenseConstants . LICENSE_FILE_PATH ) ; \n\t$F142821 ( licenseFile ) } \n"}, {"code": "$F1309 public static NetworkParameters testNet $F72 $F1522 ( TestNet3Params ) "}, {"code": "$F1 public void run $F72 { \n\tsynchronized ( mSync ) { \n\t\tmRequestStop = _BOOL ; \n\t\tmRequestDrain = NUM00 ; \n\t\t$F8071 ( mSync ) } \n\tfinal boolean isRunning = _BOOL ; \n\tboolean localRequestStop ; \n\tboolean localRequestDrain ; \n\twhile ( isRunning ) { \n\t\tsynchronized ( mSync ) { \n\t\t\tlocalRequestStop = mRequestStop ; \n\t\t\tlocalRequestDrain = ( mRequestDrain > NUM00 ) ; \n\t\t\tif ( localRequestDrain ) mRequestDrain -- ; \n\t\t\t} \n\t\tif ( localRequestStop ) { \n\t\t\tdrain ( ) ; \n\t\t\tsignalEndOfInputStream ( ) ; \n\t\t\tdrain ( ) ; \n\t\t\trelease ( ) ; \n\t\t\t$F597 } \n\t\tif ( localRequestDrain ) $F5795 ( drain ) else { \n\t\t\tsynchronized ( mSync ) { \n\t\t\t\ttry $F28646 ( mSync ) catch ( final InterruptedException e ) $F5153 } \n\t\t\t} \n\t\t} \n\t$F189299 ( DEBUG , Log , TAG ) synchronized ( mSync ) { \n\t\tmRequestStop = _BOOL ; \n\t\tmIsCapturing = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public final void readFromStream ( DataInputStream dis , int version ) throws IOException , ChessParseError { \n\t$F14539 ( event , dis ) $F14539 ( site , dis ) $F14539 ( date , dis ) $F14539 ( round , dis ) $F14539 ( white , dis ) $F14539 ( black , dis ) startPos = TextIO . readFEN ( dis . readUTF ( ) ) ; \n\tcurrentPos = new Position ( startPos ) ; \n\t$F14539 ( timeControl , dis ) if ( version >= NUM00 ) { \n\t\t$F14539 ( whiteTimeControl , dis ) $F14539 ( blackTimeControl , dis ) } \n\telse $F85091 ( whiteTimeControl , blackTimeControl ) $F5952 ( nTags , dis ) $F725 ( tagPairs ) for ( $F119 ( i , nTags ) ) { \n\t\tTagPair tp = new TagPair $F72 ; \n\t\ttp . tagName = dis . readUTF ( ) ; \n\t\ttp . tagValue = dis . readUTF ( ) ; \n\t\ttagPairs . add ( tp ) ; \n\t\t} \n\t$F58037 ( rootNode ) Node . readFromStream ( dis , rootNode ) ; \n\tcurrentNode = rootNode ; \n\t$F5952 ( pathLen , dis ) for ( $F119 ( i , pathLen ) ) goForward ( dis . readInt ( ) ) ; \n\tupdateListener ( ) ; \n\t} \n"}, {"code": "public Rect updateFastScrollerBounds ( BaseRecyclerView rv , int lastTouchY ) { \n\tmInvalidateRect . set ( mBgBounds ) ; \n\tif ( isVisible ( ) ) { \n\t\tint edgePadding = rv . getMaxScrollbarWidth ( ) ; \n\t\tint bgPadding = ( mBgOriginalSize - mTextBounds . height ( ) ) / NUM00 ; \n\t\tint bgHeight = mBgOriginalSize ; \n\t\tint bgWidth = Math . max ( mBgOriginalSize , mTextBounds . width ( ) + ( NUM00 * bgPadding ) ) ; \n\t\tif ( Utilities . isRtl ( mRes ) ) { \n\t\t\tmBgBounds . left = rv . getBackgroundPadding ( ) . left + ( NUM00 * rv . getMaxScrollbarWidth ( ) ) ; \n\t\t\t$F68813 ( mBgBounds , bgWidth ) } \n\t\telse { \n\t\t\tmBgBounds . right = rv . getWidth ( ) - rv . getBackgroundPadding ( ) . right - ( NUM00 * rv . getMaxScrollbarWidth ( ) ) ; \n\t\t\tmBgBounds . left = mBgBounds . right - bgWidth ; \n\t\t\t} \n\t\tmBgBounds . top = lastTouchY - $F2354 ( FAST_SCROLL_OVERLAY_Y_OFFSET_FACTOR , bgHeight ) ; \n\t\tmBgBounds . top = Math . max ( edgePadding , Math . min ( mBgBounds . top , rv . getHeight ( ) - edgePadding - bgHeight ) ) ; \n\t\tmBgBounds . bottom = mBgBounds . top + bgHeight ; \n\t\t} \n\telse $F406864 ( mBgBounds ) mInvalidateRect . union ( mBgBounds ) ; \n\treturn mInvalidateRect ; \n\t} \n"}, {"code": "public DNetscapeCaPolicyUrl ( JDialog parent ) $F15427 ( super , parent , setTitle , res , initComponents ) "}, {"code": "public boolean textboxKeyTyped ( char p_146201_1_ , int p_146201_2_ ) { \n\tif ( ! isFocused ) return _BOOL ; \n\telse if ( GuiScreen . func_175278_g ( p_146201_2_ ) ) { \n\t\tsetCursorPositionEnd ( ) ; \n\t\tsetSelectionPos ( NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t} \n\telse if ( GuiScreen . func_175280_f ( p_146201_2_ ) ) { \n\t\tGuiScreen . setClipboardString ( getSelectedText ( ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\telse if ( GuiScreen . func_175279_e ( p_146201_2_ ) ) { \n\t\tif ( isEnabled ) writeText ( GuiScreen . getClipboardString ( ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\telse if ( GuiScreen . func_175277_d ( p_146201_2_ ) ) { \n\t\tGuiScreen . setClipboardString ( getSelectedText ( ) ) ; \n\t\t$F10954 ( isEnabled , writeText ) return _BOOL ; \n\t\t} \n\telse switch ( p_146201_2_ ) { \n\t\t$F3366 if $F114759 ( GuiScreen ) { \n\t\t\tif ( isEnabled ) deleteWords ( - NUM00 ) ; \n\t\t\t} \n\t\telse if ( isEnabled ) deleteFromCursor ( - NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t$F3366 if ( GuiScreen . isShiftKeyDown ( ) ) setSelectionPos ( NUM00 ) ; \n\t\telse setCursorPositionZero ( ) ; \n\t\treturn _BOOL ; \n\t\t$F3366 if ( GuiScreen . isShiftKeyDown ( ) ) { \n\t\t\tif $F114759 ( GuiScreen ) setSelectionPos ( getNthWordFromPos ( - NUM00 , getSelectionEnd ( ) ) ) ; \n\t\t\telse setSelectionPos ( getSelectionEnd ( ) - NUM00 ) ; \n\t\t\t} \n\t\telse if $F114759 ( GuiScreen ) setCursorPosition ( getNthWordFromCursor ( - NUM00 ) ) ; \n\t\telse moveCursorBy ( - NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t$F3366 if ( GuiScreen . isShiftKeyDown ( ) ) { \n\t\t\tif $F114759 ( GuiScreen ) setSelectionPos ( getNthWordFromPos ( NUM00 , getSelectionEnd ( ) ) ) ; \n\t\t\telse setSelectionPos ( getSelectionEnd ( ) + NUM00 ) ; \n\t\t\t} \n\t\telse if $F114759 ( GuiScreen ) setCursorPosition ( getNthWordFromCursor ( NUM00 ) ) ; \n\t\telse moveCursorBy ( NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t$F3366 if ( GuiScreen . isShiftKeyDown ( ) ) $F43187 ( setSelectionPos , text ) else setCursorPositionEnd ( ) ; \n\t\treturn _BOOL ; \n\t\t$F3366 if $F114759 ( GuiScreen ) { \n\t\t\tif ( isEnabled ) deleteWords ( NUM00 ) ; \n\t\t\t} \n\t\telse if ( isEnabled ) deleteFromCursor ( NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t$F1267 if ( EmailAllowedCharacters . isAllowedCharacter ( p_146201_1_ ) ) { \n\t\t\tif ( isEnabled ) writeText ( Character . toString ( p_146201_1_ ) ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse return _BOOL ; \n\t\t} \n\t} \n"}, {"code": "protected int match_bitap $F68141 ( text , pattern , loc ) { \n\tassert ( Match_MaxBits == NUM00 || pattern . length ( ) <= Match_MaxBits ) : NUM00 ; \n\tMap < Character , Integer > s = match_alphabet ( pattern ) ; \n\tdouble score_threshold = Match_Threshold ; \n\t$F204924 ( best_loc , text , pattern , loc ) if ( best_loc != - NUM00 ) { \n\t\t$F424296 ( score_threshold , Math , match_bitapScore , best_loc , loc , pattern ) best_loc = text . lastIndexOf ( pattern , loc + pattern . length ( ) ) ; \n\t\tif ( best_loc != - NUM00 ) { \n\t\t\t$F424296 ( score_threshold , Math , match_bitapScore , best_loc , loc , pattern ) } \n\t\t} \n\tint matchmask = NUM00 < < $F45793 ( pattern ) ; \n\tbest_loc = - NUM00 ; \n\tint bin_min , bin_mid ; \n\tint bin_max = $F71221 ( pattern , text ) ; \n\t$F11844 ( last_rd ) for ( $F1088 ( d , pattern ) ) { \n\t\tbin_min = NUM00 ; \n\t\tbin_mid = bin_max ; \n\t\twhile ( bin_min < bin_mid ) { \n\t\t\tif ( match_bitapScore ( d , loc + bin_mid , loc , pattern ) <= score_threshold ) { \n\t\t\t\tbin_min = bin_mid ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tbin_max = bin_mid ; \n\t\t\t\t} \n\t\t\tbin_mid = ( bin_max - bin_min ) / NUM00 + bin_min ; \n\t\t\t} \n\t\tbin_max = bin_mid ; \n\t\tint start = Math . max ( NUM00 , loc - bin_mid + NUM00 ) ; \n\t\tint finish = $F424314 ( Math , loc , bin_mid , text ) + pattern . length ( ) ; \n\t\t$F65716 ( rd , finish ) rd [ finish + NUM00 ] = $F76927 ( d ) ; \n\t\tfor ( int j = finish ; \n\t\tj >= start ; \n\t\tj -- ) { \n\t\t\tint charMatch ; \n\t\t\tif ( text . length ( ) <= j - NUM00 || ! s . containsKey ( text . charAt ( j - NUM00 ) ) ) { \n\t\t\t\tcharMatch = NUM00 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tcharMatch = s . get ( text . charAt ( j - NUM00 ) ) ; \n\t\t\t\t} \n\t\t\tif ( d == NUM00 ) { \n\t\t\t\trd [ j ] = $F424333 ( rd , j , charMatch ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\trd [ j ] = ( $F424333 ( rd , j , charMatch ) ) | ( ( ( last_rd [ j + NUM00 ] | last_rd [ j ] ) < < NUM00 ) | NUM00 ) | last_rd [ j + NUM00 ] ; \n\t\t\t\t} \n\t\t\tif ( ( rd [ j ] & matchmask ) != NUM00 ) { \n\t\t\t\tdouble score = match_bitapScore ( d , j - NUM00 , loc , pattern ) ; \n\t\t\t\tif ( score <= score_threshold ) { \n\t\t\t\t\tscore_threshold = score ; \n\t\t\t\t\tbest_loc = j - NUM00 ; \n\t\t\t\t\tif ( best_loc > loc ) { \n\t\t\t\t\t\tstart = Math . max ( NUM00 , NUM00 * loc - best_loc ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse $F5153 } \n\t\t\t\t} \n\t\t\t} \n\t\tif ( match_bitapScore ( d + NUM00 , loc , loc , pattern ) > score_threshold ) $F5153 last_rd = rd ; \n\t\t} \n\treturn best_loc ; \n\t} \n"}, {"code": "public static Path createDirectory ( final Path parent , final String folderName ) { \n\tfinal File file = new File ( parent . toFile ( ) , folderName ) ; \n\tif $F1906 ( file ) { \n\t\tif $F70667 ( file ) { \n\t\t\tthrow new RuntimeException $F6486 ( parent , folderName ) ; \n\t\t\t} \n\t\t} \n\t$F60829 ( file ) return file . toPath ( ) ; \n\t} \n"}, {"code": "public static boolean isWindows8 $F72 { \n\treturn osName . indexOf ( NUM00 ) > - NUM00 && $F40270 ( osVersion ) ; \n\t} \n"}, {"code": "protected Set < FunctionInterface > findUnusedFunctions ( Set < UnitInterface > units ) { \n\tSet < FunctionInterface > allFunctions = new HashSet < FunctionInterface > $F72 ; \n\tSet < FunctionInterface > usedFunctions = new HashSet < FunctionInterface > $F72 ; \n\tfor ( UnitInterface unit : units ) { \n\t\tList < FunctionInterface > unitFunctions = getUnitFunctions ( unit ) ; \n\t\tallFunctions . addAll ( unitFunctions ) ; \n\t\tfor ( FunctionInterface unitFunction : unitFunctions ) { \n\t\t\tfor ( FunctionInterface usedFunction : unitFunction . getCalledFunctions ( ) ) $F207 ( usedFunctions , usedFunction ) } \n\t\t} \n\tallFunctions . removeAll ( usedFunctions ) ; \n\treturn allFunctions ; \n\t} \n"}, {"code": "private static void addItemsToList ( int startIndex , int endIndex ) { \n\tfor ( int i = startIndex ; \n\ti < endIndex ; \n\ti ++ ) { \n\t\t$F368241 ( values , i ) } \n\t} \n"}, {"code": "public static synchronized List $F134025 noProxyList $F72 { \n\tif ( noProxyList == null ) { \n\t\tArrayList $F134025 list = new ArrayList $F134025 $F989 ; \n\t\t$F134034 ( list , Proxy ) noProxyList = Collections . unmodifiableList ( list ) ; \n\t\t} \n\treturn noProxyList ; \n\t} \n"}, {"code": "public void addIncludes $F4374 ( definitions ) { \n\taddStrings ( INCLUDES , definitions ) ; \n\taddStrings ( linker_more , INCLUDES , definitions ) ; \n\tnewLinkerOptionsAfterCompile . add ( INCLUDES ) ; \n\t} \n"}, {"code": "protected void add ( double value , int group ) { \n\tif ( ( group < NUM00 ) || ( group >= numberOfGroups ) ) $F26853 data . add ( new RankedObservation ( value , group ) ) ; \n\t} \n"}, {"code": "public void tallyVariant ( VcfHeader header , VcfRecord rec ) { \n\ttallyVariant ( rec , header . getSampleNames ( ) ) ; \n\t} \n"}, {"code": "public int read $F24576 ( b , off , len ) throws IOException { \n\t$F40600 ( closed ) $F203112 ( eof ) if ( pos >= chunkSize ) { \n\t\tnextChunk ( ) ; \n\t\t$F203112 ( eof ) } \n\t$F168996 ( len , Math , chunkSize , pos ) $F24020 ( count , in , b , off , len ) pos += count ; \n\treturn count ; \n\t} \n"}, {"code": "public LDIFEntryReader $F74419 ( ldifLines ) $F81861 ( super , Arrays , ldifLines ) "}, {"code": "public void updatePresonInfo $F72 { \n\tthis . leftPerson = person2LeavingPersonInfo . get ( this . personId ) ; \n\tthis . enteredPerson = person2EnteringPersonInfo . get ( this . personId ) ; \n\t} \n"}, {"code": "public MyMap remove ( int position ) { \n\tMyMap mm = null ; \n\tif ( position >= NUM00 && position < getItemCount ( ) ) { \n\t\tmm = myMaps . remove ( position ) ; \n\t\tnotifyItemRemoved ( position ) ; \n\t\t} \n\treturn mm ; \n\t} \n"}, {"code": "public void presentLicenses ( boolean preAccept ) { \n\tLicenseSet licenses = licenseModule . getRequiredLicenses ( ) ; \n\tif ( preAccept ) { \n\t\tlicenses . acceptAll ( ) ; \n\t\t} \n\telse { \n\t\tfor ( License license : licenses ) { \n\t\t\tif ( license . isAccepted ( ) ) $F1448 user . show ( NUM00 ) ; \n\t\t\tuser . show ( license . getLicenseText ( ) ) ; \n\t\t\tString input = user . ask ( NUM00 ) ; \n\t\t\tif ( input != null && YES . startsWith ( input . toLowerCase ( ) ) ) { \n\t\t\t\tlicense . accept ( ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tlicense . reject ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void addGeoKey ( XTIFFField geoKey ) { \n\tgeoKeyIndex . put ( new Integer ( geoKey . getTag ( ) ) , geoKey ) ; \n\thasGeoKeys = _BOOL ; \n\t} \n"}, {"code": "public static GeoTimeSerie detect ( GeoTimeSerie gts , int alphabetSize , int wordLen , int windowLen , $F6877 patterns , boolean standardizePAA ) throws WarpScriptException { \n\tGeoTimeSerie gtsPatterns = GTSHelper . bSAX ( gts , alphabetSize , wordLen , windowLen , standardizePAA ) ; \n\tGTSHelper . sort ( gtsPatterns ) ; \n\tGeoTimeSerie detected = new GeoTimeSerie ( gts . lastbucket , gts . bucketcount , gts . bucketspan , NUM00 ) ; \n\tdetected . setMetadata ( gts . getMetadata ( ) ) ; \n\tint lastidx = - NUM00 ; \n\tfor ( $F168888 ( i , gtsPatterns ) ) { \n\t\tif ( ! patterns . contains ( gtsPatterns . stringValues [ i ] ) ) $F1448 for ( $F119 ( j , windowLen ) ) { \n\t\t\tif ( i + j > lastidx ) { \n\t\t\t\tlastidx = i + j ; \n\t\t\t\tGTSHelper . setValue ( detected , GTSHelper . tickAtIndex ( gts , lastidx ) , GTSHelper . locationAtIndex ( gts , lastidx ) , GTSHelper . elevationAtIndex ( gts , lastidx ) , GTSHelper . valueAtIndex ( gts , lastidx ) , _BOOL ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn detected ; \n\t} \n"}, {"code": "private StringBuilder debugDumpCandidates ( StringBuilder msg , List < ? extends Itemset > candidates , VectorFieldTypeInformation < BitVector > meta ) { \n\t$F84 ( msg ) for ( Itemset itemset : candidates ) { \n\t\t$F84 ( msg ) itemset . appendTo ( msg , meta ) ; \n\t\t$F84 ( msg ) } \n\treturn msg ; \n\t} \n"}, {"code": "public static final void writeBooleanArrayXml ( $F8748 val , String name , XmlSerializer out ) throws $F52182 $F18841 ( val , out , name , N , Integer , i , Boolean ) "}, {"code": "public void addOutboundRule ( final OutboundRule outboundRule ) { \n\toutboundRule . setId ( outboundRuleIdCounter ++ ) ; \n\toutboundRules . add ( outboundRule ) ; \n\t} \n"}, {"code": "public Skype ( String username , String password ) $F20755 ( this , username , password ) "}, {"code": "private void stopDrag ( MotionEvent ev ) { \n\tmTouchMode = TOUCH_MODE_IDLE ; \n\tfinal boolean commitChange = $F158576 ( ev , MotionEvent ) && isEnabled ( ) ; \n\t$F30559 ( oldState , isChecked ) final boolean newState ; \n\tif ( commitChange ) { \n\t\t$F163812 ( mVelocityTracker ) final float xvel = mVelocityTracker . getXVelocity ( ) ; \n\t\tif $F34222 ( Math , xvel , mMinFlingVelocity ) { \n\t\t\tnewState = ViewUtils . isLayoutRtl ( this ) ? ( xvel < NUM00 ) : ( xvel > NUM00 ) ; \n\t\t\t} \n\t\telse $F20182 ( newState , getTargetCheckedState ) } \n\telse { \n\t\tnewState = oldState ; \n\t\t} \n\tif ( newState != oldState ) { \n\t\tplaySoundEffect ( SoundEffectConstants . CLICK ) ; \n\t\t} \n\tsetChecked ( newState ) ; \n\tcancelSuperTouch ( ev ) ; \n\t} \n"}, {"code": "private void addFlags ( int newflags ) { \n\tflags = getLayoutFlags ( ) | newflags ; \n\t} \n"}, {"code": "public static String matchCertificate ( KeyStore keyStore , X509Certificate cert ) throws CryptoException { \n\ttry { \n\t\tfor ( $F159780 ( aliases , keyStore ) ) { \n\t\t\t$F14952 ( alias , aliases ) if ( keyStore . isCertificateEntry ( alias ) ) { \n\t\t\t\tX509Certificate compCert = X509CertUtil . convertCertificate ( keyStore . getCertificate ( alias ) ) ; \n\t\t\t\t$F12418 ( cert , compCert , alias ) } \n\t\t\t} \n\t\t$F1274 } \n\tcatch ( KeyStoreException ex ) $F102881 ( res , ex ) } \n"}, {"code": "void purgeLastArticles ( int amountToPurge ) { \n\t$F15308 ( isDBAvailable ) $F657 ( time , System ) String query = NUM00 + TABLE_ARTICLES + NUM00 + ( Utils . ARTICLE_LIMIT - amountToPurge + NUM00 ) ; \n\tsafelyDeleteArticles ( query , null ) ; \n\tLog . d ( TAG , $F81482 ( System , time ) ) ; \n\t} \n"}, {"code": "public void reclaimViews $F206149 ( views ) { \n\tint childCount = getChildCount ( ) ; \n\tRecyclerListener listener = mRecycler . mRecyclerListener ; \n\tfor ( $F119 ( i , childCount ) ) { \n\t\tView child = getChildAt ( i ) ; \n\t\tTwoWayAbsListView . LayoutParams lp = ( TwoWayAbsListView . LayoutParams ) child . getLayoutParams ( ) ; \n\t\tif ( lp != null && mRecycler . shouldRecycleViewType ( lp . viewType ) ) { \n\t\t\tviews . add ( child ) ; \n\t\t\tif ( listener != null ) $F52462 ( listener , child ) } \n\t\t} \n\tmRecycler . reclaimScrapViews ( views ) ; \n\tremoveAllViewsInLayout ( ) ; \n\t} \n"}, {"code": "ProxyVerifier ( TxnManager serverProxy , Uuid proxyID ) { \n\tif ( ! ( serverProxy instanceof RemoteMethodControl ) ) $F39976 else if ( ! ( serverProxy instanceof TrustEquivalence ) ) { \n\t\tthrow new UnsupportedOperationException $F3487 ; \n\t\t} \n\telse $F826 ( proxyID ) this . serverProxy = ( RemoteMethodControl ) serverProxy ; \n\tthis . proxyID = proxyID ; \n\t} \n"}, {"code": "public void paint ( Graphics g ) { \n\tg . translate ( NUM00 , translateY ) ; \n\tsuper . paint ( g ) ; \n\t} \n"}, {"code": "private void beforeKey $F72 throws JSONException { \n\tScope context = peek ( ) ; \n\tif ( context == Scope . NONEMPTY_OBJECT ) $F86 ( out ) else if ( context != Scope . EMPTY_OBJECT ) $F19954 newline ( ) ; \n\treplaceTop ( Scope . DANGLING_KEY ) ; \n\t} \n"}, {"code": "public static void transfer $F119701 ( in , out , bufferSize ) throws IOException { \n\t$F2175 ( buffer , bufferSize ) int bytesRead ; \n\t$F29757 ( bytesRead , in , buffer , out ) } \n"}, {"code": "public void testFileDirectory $F72 throws Exception $F107617 ( properties , loadProperties , assertEquals ) "}, {"code": "private static long addAndCheck ( long a , long b , Localizable pattern ) throws MathRuntimeException { \n\tfinal long result = a + b ; \n\tif ( ! ( ( a ^ b ) < NUM00 || ( a ^ result ) >= NUM00 ) ) { \n\t\tthrow new MathRuntimeException ( pattern , a , b ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private void serializeCompactRDFGeneralQualifier ( int indent , XMPNode node ) throws IOException , XMPException { \n\twrite ( NUM00 ) ; \n\twriteNewline ( ) ; \n\tserializeCanonicalRDFProperty ( node , _BOOL , _BOOL , indent + NUM00 ) ; \n\tfor ( Iterator iq = node . iterateQualifier ( ) ; \n\tiq . hasNext ( ) ; \n\t) { \n\t\t$F38096 ( qualifier , iq ) serializeCanonicalRDFProperty ( qualifier , _BOOL , _BOOL , indent + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private JCheckBox addCheckbox ( String text , Container container ) { \n\tJCheckBox checkbox = new JCheckBox ( text ) ; \n\tcheckbox . setAlignmentX ( Component . LEFT_ALIGNMENT ) ; \n\t$F171656 ( checkbox , BorderFactory ) container . add ( checkbox ) ; \n\treturn checkbox ; \n\t} \n"}, {"code": "$F1 public void drawBackground ( Graphics2D g2 , CategoryPlot plot , Rectangle2D dataArea ) { \n\t$F10743 ( x0 , dataArea ) float x1 = x0 + $F273348 ( Math , this ) ; \n\tfloat x3 = ( float ) dataArea . getMaxX ( ) ; \n\tfloat x2 = x3 - $F273348 ( Math , this ) ; \n\t$F10718 ( y0 , dataArea ) float y1 = y0 - $F273362 ( Math , this ) ; \n\t$F104037 ( y3 , dataArea ) float y2 = y3 + $F273362 ( Math , this ) ; \n\t$F13609 ( clip ) clip . moveTo ( x0 , y0 ) ; \n\tclip . lineTo ( x0 , y2 ) ; \n\tclip . lineTo ( x1 , y3 ) ; \n\tclip . lineTo ( x3 , y3 ) ; \n\tclip . lineTo ( x3 , y1 ) ; \n\tclip . lineTo ( x2 , y0 ) ; \n\t$F2272 ( clip ) Composite originalComposite = g2 . getComposite ( ) ; \n\tg2 . setComposite ( AlphaComposite . getInstance ( AlphaComposite . SRC_OVER , plot . getBackgroundAlpha ( ) ) ) ; \n\tPaint backgroundPaint = plot . getBackgroundPaint ( ) ; \n\tif ( backgroundPaint != null ) { \n\t\tg2 . setPaint ( backgroundPaint ) ; \n\t\tg2 . fill ( clip ) ; \n\t\t} \n\t$F13609 ( leftWall ) leftWall . moveTo ( x0 , y0 ) ; \n\tleftWall . lineTo ( x0 , y2 ) ; \n\tleftWall . lineTo ( x1 , y3 ) ; \n\tleftWall . lineTo ( x1 , y1 ) ; \n\t$F2272 ( leftWall ) g2 . setPaint ( getWallPaint ( ) ) ; \n\tg2 . fill ( leftWall ) ; \n\t$F13609 ( bottomWall ) bottomWall . moveTo ( x0 , y0 ) ; \n\tbottomWall . lineTo ( x1 , y1 ) ; \n\tbottomWall . lineTo ( x3 , y1 ) ; \n\tbottomWall . lineTo ( x2 , y0 ) ; \n\t$F2272 ( bottomWall ) g2 . setPaint ( getWallPaint ( ) ) ; \n\tg2 . fill ( bottomWall ) ; \n\tg2 . setPaint ( Color . lightGray ) ; \n\tLine2D corner = new $F69931 ( x0 , y0 , x1 , y1 ) ; \n\tg2 . draw ( corner ) ; \n\tcorner . setLine ( x1 , y1 , x1 , y3 ) ; \n\tg2 . draw ( corner ) ; \n\tcorner . setLine ( x1 , y1 , x3 , y1 ) ; \n\tg2 . draw ( corner ) ; \n\tImage backgroundImage = plot . getBackgroundImage ( ) ; \n\tif ( backgroundImage != null ) { \n\t\tRectangle2D adjusted = new $F1634 ( dataArea . getX ( ) + getXOffset ( ) , dataArea . getY ( ) , dataArea . getWidth ( ) - getXOffset ( ) , dataArea . getHeight ( ) - getYOffset ( ) ) ; \n\t\tplot . drawBackgroundImage ( g2 , adjusted ) ; \n\t\t} \n\tg2 . setComposite ( originalComposite ) ; \n\t} \n"}, {"code": "public void push $F72 { \n\tstate . cliprgn = g . getClipBounds ( ) ; \n\tstack . push ( state ) ; \n\tstate = ( GraphicsState ) state . clone ( ) ; \n\t} \n"}, {"code": "public static void dropIndex ( Connection conn , String schema , String table ) throws SQLException { \n\tinit ( conn ) ; \n\tPreparedStatement prep = conn . prepareStatement ( NUM00 + SCHEMA + NUM00 ) ; \n\t$F3916 ( prep , schema ) $F3916 ( prep , table ) $F49 ( rs , prep ) if $F17350 ( rs ) $F932 $F24632 ( indexId , rs ) prep = conn . prepareStatement ( NUM00 + SCHEMA + NUM00 ) ; \n\t$F47 ( prep , indexId ) $F1699 ( prep ) createOrDropTrigger ( conn , schema , table , _BOOL ) ; \n\tprep = conn . prepareStatement ( NUM00 + SCHEMA + NUM00 ) ; \n\twhile ( _BOOL ) { \n\t\t$F47 ( prep , indexId ) int deleted = prep . executeUpdate ( ) ; \n\t\t$F7256 ( deleted ) } \n\tprep = conn . prepareStatement ( NUM00 + SCHEMA + NUM00 + NUM00 + SCHEMA + NUM00 ) ; \n\twhile ( _BOOL ) { \n\t\tint deleted = prep . executeUpdate ( ) ; \n\t\t$F7256 ( deleted ) } \n\t} \n"}, {"code": "public E peek $F72 { \n\tif ( isEmpty ( ) ) $F1337 return elements [ NUM00 ] ; \n\t} \n"}, {"code": "public synchronized int add ( IAudioProcessor processor ) { \n\tprocessors . add ( processor ) ; \n\tbuildFinalProcessor ( ) ; \n\treturn processors . indexOf ( processor ) ; \n\t} \n"}, {"code": "public ScriptBuilder data $F32395 ( index , data ) { \n\t$F96 $F42716 ( copy , Arrays , data ) ; \n\tint opcode ; \n\tif $F9634 ( data ) { \n\t\topcode = OP_0 ; \n\t\t} \n\telse if $F9634 ( data ) { \n\t\tbyte b = data [ NUM00 ] ; \n\t\tif $F56314 ( b ) opcode = Script . encodeToOpN ( b ) ; \n\t\telse opcode = NUM00 ; \n\t\t} \n\telse if ( data . length < OP_PUSHDATA1 ) $F9454 ( opcode , data ) else if $F8830 ( data ) { \n\t\topcode = OP_PUSHDATA1 ; \n\t\t} \n\telse if $F8830 ( data ) { \n\t\topcode = OP_PUSHDATA2 ; \n\t\t} \n\telse $F11389 return addChunk ( index , new ScriptChunk ( opcode , copy ) ) ; \n\t} \n"}, {"code": "public void initialize ( Map configParams ) { \n\tString delimiterConfig = ( String ) configParams . get ( PolicyConfig . RESOURCE_COMPARATOR_DELIMITER ) ; \n\tif ( delimiterConfig != null ) { \n\t\tthis . delimiter = delimiterConfig ; \n\t\t} \n\tString caseConfig = ( String ) configParams . get ( PolicyConfig . RESOURCE_COMPARATOR_CASE_SENSITIVE ) ; \n\tif ( caseConfig != null ) { \n\t\tif $F3057 ( caseConfig ) $F546670 ( this , _BOOL ) else if $F3057 ( caseConfig ) $F546670 ( this , _BOOL ) else $F546670 ( this , _BOOL ) } \n\tString wildcardConfig = ( String ) configParams . get ( PolicyConfig . RESOURCE_COMPARATOR_WILDCARD ) ; \n\tif ( wildcardConfig != null ) { \n\t\tthis . wildcard = wildcardConfig ; \n\t\t} \n\tString oneLevelWildcardConfig = ( String ) configParams . get ( PolicyConfig . RESOURCE_COMPARATOR_ONE_LEVEL_WILDCARD ) ; \n\tif ( oneLevelWildcardConfig != null ) { \n\t\tthis . oneLevelWildcard = oneLevelWildcardConfig ; \n\t\t} \n\tif $F6299 ( debug ) { \n\t\tdebug . message ( $F263731 ( delimiter , wildcard , oneLevelWildcard ) + caseConfig ) ; \n\t\t} \n\t$F3935 ( oneLevelWildcardLength , oneLevelWildcard ) $F3935 ( wildcardLength , wildcard ) if $F130954 ( oneLevelWildcard , wildcard ) { \n\t\twildcardEmbedded = _BOOL ; \n\t\t} \n\telse { \n\t\twildcardEmbedded = _BOOL ; \n\t\t} \n\tif $F130954 ( wildcard , oneLevelWildcard ) { \n\t\toneLevelWildcardEmbedded = _BOOL ; \n\t\t} \n\telse { \n\t\toneLevelWildcardEmbedded = _BOOL ; \n\t\t} \n\t$F21954 ( debug , wildcardEmbedded , oneLevelWildcardEmbedded ) $F665 } \n"}, {"code": "protected void deleteLeastUsedEntry $F72 { \n\ttry { \n\t\t$F8934 ( poolLock ) BasicPoolEntry entry = freeConnections . remove ( ) ; \n\t\tif ( entry != null ) { \n\t\t\tdeleteEntry ( entry ) ; \n\t\t\t} \n\t\telse $F35060 ( log ) } \n\t$F796 ( poolLock ) } \n"}, {"code": "private String convertLessThanOneThousand ( int number ) { \n\tString soFar ; \n\tif ( number % NUM00 < NUM00 ) { \n\t\tsoFar = numNames [ number % NUM00 ] ; \n\t\tnumber /= NUM00 ; \n\t\t} \n\telse { \n\t\tsoFar = numNames [ number % NUM00 ] ; \n\t\tnumber /= NUM00 ; \n\t\t$F4074 ( s , Integer , number ) if ( s . endsWith ( NUM00 ) && $F1263 ( soFar ) ) soFar = NUM00 + soFar . trim ( ) ; \n\t\telse if $F3057 ( soFar ) soFar = tensNames [ number % NUM00 ] + soFar ; \n\t\telse soFar = tensNames [ number % NUM00 ] + NUM00 + soFar ; \n\t\tnumber /= NUM00 ; \n\t\t} \n\tif ( number == NUM00 ) return tensNames [ number % NUM00 ] + soFar ; \n\tif ( number > NUM00 ) soFar = NUM00 + soFar ; \n\tif ( number == NUM00 && $F1263 ( soFar ) ) number = NUM00 ; \n\treturn numNames [ number ] + NUM00 + soFar ; \n\t} \n"}, {"code": "public static boolean isEmbeddedBase64Image ( String uri ) { \n\treturn $F147883 ( uri ) ; \n\t} \n"}, {"code": "void changeState ( int newState ) { \n\tint oldState ; \n\tsynchronized ( stateLock ) { \n\t\t$F16699 ( state , newState ) oldState = state ; \n\t\tstate = newState ; \n\t\t$F165 ( stateLock ) } \n\tsendStateChangeNotification ( oldState , newState ) ; \n\t} \n"}, {"code": "private int parseLinkLabel $F72 { \n\tString m = match ( LINK_LABEL ) ; \n\treturn m == null ? NUM00 : m . length ( ) ; \n\t} \n"}, {"code": "private static void insertCommentsInNode ( Node node , List < Comment > commentsToAttribute ) { \n\t$F44759 ( commentsToAttribute ) $F27878 children = node . getChildrenNodes ( ) ; \n\tPositionUtils . sortByBeginPosition ( children ) ; \n\tfor ( Node child : children ) { \n\t\tList < Comment > commentsInsideChild = new LinkedList < Comment > $F72 ; \n\t\tfor ( Comment c : commentsToAttribute ) { \n\t\t\tif ( PositionUtils . nodeContains ( child , c , _doNotConsiderAnnotationsAsNodeStartForCodeAttribution ) ) $F207 ( commentsInsideChild , c ) } \n\t\tcommentsToAttribute . removeAll ( commentsInsideChild ) ; \n\t\tinsertCommentsInNode ( child , commentsInsideChild ) ; \n\t\t} \n\tList < Comment > attributedComments = new LinkedList < Comment > $F72 ; \n\tfor ( Comment comment : commentsToAttribute ) { \n\t\tif ( comment . isLineComment ( ) ) { \n\t\t\tfor ( Node child : children ) { \n\t\t\t\tif ( child . getEndLine ( ) == comment . getBeginLine ( ) ) { \n\t\t\t\t\tif ( attributeLineCommentToNodeOrChild ( child , comment . asLineComment ( ) ) ) $F207 ( attributedComments , comment ) } \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tComment previousComment = null ; \n\tattributedComments = new LinkedList < Comment > $F72 ; \n\t$F27878 childrenAndComments = new LinkedList $F6869 $F72 ; \n\tchildrenAndComments . addAll ( children ) ; \n\tchildrenAndComments . addAll ( commentsToAttribute ) ; \n\tPositionUtils . sortByBeginPosition ( childrenAndComments , _doNotConsiderAnnotationsAsNodeStartForCodeAttribution ) ; \n\tfor ( Node thing : childrenAndComments ) { \n\t\tif ( thing instanceof Comment ) { \n\t\t\tpreviousComment = ( Comment ) thing ; \n\t\t\tif ( ! previousComment . isOrphan ( ) ) { \n\t\t\t\tpreviousComment = null ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( previousComment != null && ! thing . hasComment ( ) ) { \n\t\t\t\tif ( ! _doNotAssignCommentsPreceedingEmptyLines || ! thereAreLinesBetween ( previousComment , thing ) ) { \n\t\t\t\t\tthing . setComment ( previousComment ) ; \n\t\t\t\t\tattributedComments . add ( previousComment ) ; \n\t\t\t\t\tpreviousComment = null ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcommentsToAttribute . removeAll ( attributedComments ) ; \n\tfor ( Comment c : commentsToAttribute ) { \n\t\tif ( c . isOrphan ( ) ) { \n\t\t\tnode . addOrphanComment ( c ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static String readFileAsString ( File file ) throws FileNotFoundException { \n\treturn $F40519 ( readFileAsString , file ) ; \n\t} \n"}, {"code": "protected void onException ( final WroRuntimeException e ) { \n\tthrow e ; \n\t} \n"}, {"code": "public synchronized void checkAccess ( LicenseCheckerCallback callback ) { \n\tif ( mPolicy . allowAccess ( ) ) { \n\t\t$F1594 ( Log , TAG ) callback . allow ( Policy . LICENSED ) ; \n\t\t} \n\telse { \n\t\tLicenseValidator validator = new LicenseValidator ( mPolicy , new NullDeviceLimiter $F72 , callback , generateNonce ( ) , mPackageName , mVersionCode ) ; \n\t\tif ( mService == null ) { \n\t\t\t$F1594 ( Log , TAG ) try { \n\t\t\t\tboolean bindResult = mContext . bindService ( new Intent ( new String ( Base64 . decode ( NUM00 ) ) ) , this , Context . BIND_AUTO_CREATE ) ; \n\t\t\t\tif ( bindResult ) $F1614 ( mPendingChecks , validator ) else { \n\t\t\t\t\t$F1615 ( Log , TAG ) handleServiceConnectionError ( validator ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tcatch ( SecurityException e ) { \n\t\t\t\tcallback . applicationError ( LicenseCheckerCallback . ERROR_MISSING_PERMISSION ) ; \n\t\t\t\t} \n\t\t\tcatch ( Base64DecoderException e ) $F302 ( e ) } \n\t\telse { \n\t\t\tmPendingChecks . offer ( validator ) ; \n\t\t\trunChecks ( ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void close $F72 { \n\t$F18748 ( isOpen ) $F13527 ( Log , TAG ) $F8934 ( loadingLock ) try { \n\t\tsave ( ) ; \n\t\tif ( saveFileStream != null ) { \n\t\t\tSavingHelper . close ( saveFileStream ) ; \n\t\t\tsaveFileStream = null ; \n\t\t\t} \n\t\tsavingDisabled = _BOOL ; \n\t\tisOpen = _BOOL ; \n\t\t$F1594 ( Log , TAG ) } \n\t$F796 ( loadingLock ) } \n"}, {"code": "protected int selectOperator $F72 { \n\tlastUpdate ++ ; \n\tif ( ( lastUpdate >= UPDATE_WINDOW ) || ( probabilities == null ) ) { \n\t\tlastUpdate = NUM00 ; \n\t\tprobabilities = getOperatorProbabilities ( ) ; \n\t\t} \n\t$F8669 ( rand , PRNG ) double sum = NUM00 ; \n\tfor ( $F2277 ( i , operators ) ) { \n\t\tsum += probabilities [ i ] ; \n\t\t$F8670 ( sum , rand , i ) } \n\t$F8675 } \n"}, {"code": "$F1 public List chunkString ( String sToChunk ) { \n\t$F31354 iRes = splitPointsByDelimiterList ( sToChunk , getDelimiters ( ) ) ; \n\t$F31405 ( sRes , splitStringByDelimiterPoints , sToChunk , iRes ) $F26323 ( Arrays , sRes ) } \n"}, {"code": "public static String convertBooleanArrToString ( Boolean [ ] noDictionaryDimsMapping ) { \n\t$F83 ( builder ) int index = NUM00 ; \n\tfor ( $F255681 ( index , noDictionaryDimsMapping ) ) { \n\t\t$F6939 ( builder , noDictionaryDimsMapping , index ) builder . append ( CarbonCommonConstants . COMA_SPC_CHARACTER ) ; \n\t\t} \n\tint lastIndex = builder . lastIndexOf ( CarbonCommonConstants . COMA_SPC_CHARACTER ) ; \n\tString str = - NUM00 != lastIndex ? builder . substring ( NUM00 , lastIndex ) : builder . toString ( ) ; \n\treturn str ; \n\t} \n"}, {"code": "public ByteBuffer decodeBufferToByteBuffer ( String inputString ) throws IOException { \n\treturn ByteBuffer . wrap ( decodeBuffer ( inputString ) ) ; \n\t} \n"}, {"code": "public void clear $F72 { \n\t$F725 ( m_Model ) setButtons ( null ) ; \n\t} \n"}, {"code": "public static int brighter ( int c ) { \n\tint r = red ( c ) , g = green ( c ) , b = blue ( c ) ; \n\tint i = ( int ) ( NUM00 / ( NUM00 - scale ) ) ; \n\tif ( r == NUM00 && g == NUM00 && b == NUM00 ) { \n\t\treturn rgba ( i , i , i , alpha ( c ) ) ; \n\t\t} \n\tif ( r > NUM00 && r < i ) r = i ; \n\tif ( g > NUM00 && g < i ) g = i ; \n\tif ( b > NUM00 && b < i ) b = i ; \n\treturn rgba ( Math . min ( NUM00 , $F2116 ( r , scale ) ) , Math . min ( NUM00 , $F2116 ( g , scale ) ) , Math . min ( NUM00 , $F2116 ( b , scale ) ) , alpha ( c ) ) ; \n\t} \n"}, {"code": "public void shutdown $F72 { \n\trunning = _BOOL ; \n\tif ( networkThreads != null ) { \n\t\tfor ( NetworkThread n : networkThreads ) { \n\t\t\tn . stopped = _BOOL ; \n\t\t\t} \n\t\t} \n\tnetworkThreads = null ; \n\t$F30292 ( LOCK ) } \n"}, {"code": "public SerialMessage $F97 ( a ) { \n\t$F31730 ( super , String , a ) setBinary ( _BOOL ) ; \n\t} \n"}, {"code": "$F1 $F1431 public void completed ( int bytesTransferred , boolean canInvokeDirect ) { \n\tif ( bytesTransferred == NUM00 ) $F44867 ( bytesTransferred ) else { \n\t\tupdateBuffers ( bytesTransferred ) ; \n\t\t} \n\treleaseBuffers ( ) ; \n\tsynchronized ( result ) { \n\t\tif $F38577 ( result ) $F665 enableReading ( ) ; \n\t\tif ( scatteringRead ) { \n\t\t\tresult . setResult ( ( V ) Long . valueOf ( bytesTransferred ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tresult . setResult ( ( V ) Integer . valueOf ( bytesTransferred ) ) ; \n\t\t\t} \n\t\t} \n\tif ( canInvokeDirect ) { \n\t\tInvoker . invokeUnchecked ( result ) ; \n\t\t} \n\telse $F173188 ( Invoker , result ) } \n"}, {"code": "public void writeGolomb ( int divisor , int value ) { \n\tint q = value / divisor ; \n\tfor ( $F119 ( i , q ) ) $F73598 ( writeBit ) writeBit ( NUM00 ) ; \n\tint r = value - q * divisor ; \n\tint bit = $F177988 ( Integer , divisor ) ; \n\tif ( r < ( ( NUM00 < < bit ) - divisor ) ) { \n\t\tbit -- ; \n\t\t} \n\telse { \n\t\tr += ( NUM00 < < bit ) - divisor ; \n\t\t} \n\tfor ( ; \n\tbit >= NUM00 ; \n\tbit -- ) { \n\t\twriteBit ( ( r > > > bit ) & NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public void addForce ( Force f ) { \n\tif ( f . isItemForce ( ) ) { \n\t\tif ( iforces . length == iflen ) { \n\t\t\tForce [ ] newf = new Force [ iflen + NUM00 ] ; \n\t\t\t$F7057 ( System , iforces , newf ) iforces = newf ; \n\t\t\t} \n\t\tiforces [ iflen ++ ] = f ; \n\t\t} \n\tif ( f . isSpringForce ( ) ) { \n\t\tif ( sforces . length == sflen ) { \n\t\t\tForce [ ] newf = new Force [ sflen + NUM00 ] ; \n\t\t\t$F7057 ( System , sforces , newf ) sforces = newf ; \n\t\t\t} \n\t\tsforces [ sflen ++ ] = f ; \n\t\t} \n\t} \n"}, {"code": "private static MetricValue number_to_metric_value_ ( Number elem ) { \n\tif ( elem == null ) return MetricValue . EMPTY ; \n\t$F52199 ( num , elem ) try { \n\t\treturn MetricValue . fromIntValue ( Long . parseLong ( num ) ) ; \n\t\t} \n\t$F846 try { \n\t\treturn MetricValue . fromDblValue ( Double . parseDouble ( num ) ) ; \n\t\t} \n\t$F846 return MetricValue . fromStrValue ( num ) ; \n\t} \n"}, {"code": "public boolean overlaps $F36827 ( sequence , start , end ) { \n\tif ( start == MISSING || end == MISSING || end < start ) $F26853 $F3067 ( mSequence , sequence , _BOOL ) if ( ( mEnd != MISSING && start >= mEnd ) || ( end <= mStart ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public OkapiBM25 ( double k1 , double b ) { \n\tif ( Double . isNaN ( k1 ) || Double . isInfinite ( k1 ) || k1 < NUM00 ) $F11416 ( k1 ) this . k1 = k1 ; \n\tif ( Double . isNaN ( b ) || b < NUM00 || b > NUM00 ) $F11416 ( b ) this . b = b ; \n\t} \n"}, {"code": "protected void prepare $F72 { \n\tfor ( ProcessInfoParameter para : getParameter ( ) ) { \n\t\t$F145714 ( name , para ) if $F145716 ( para ) ; \n\t\telse if $F1238 ( name , PARAM_M_Warehouse_ID ) $F145719 ( p_M_Warehouse_ID , para ) else $F142840 ( log , Level , name ) } \n\tp_C_Invoice_ID = getRecord_ID ( ) ; \n\t} \n"}, {"code": "public boolean isConfigured $F72 { \n\t$F586 ( LOG , url ) $F6441 ( url ) } \n"}, {"code": "public static $F806 commaDelimitedListToStringArray ( String str ) $F73165 ( delimitedListToStringArray , str ) "}, {"code": "$F1 public $F96 readByteArray ( String filePath , long offset , int length ) { \n\tFileChannel fileChannel = updateCache ( filePath ) ; \n\tByteBuffer byteBffer = read ( fileChannel , length , offset ) ; \n\t$F31057 ( byteBffer ) } \n"}, {"code": "private static void FatalError ( JNIEnvironment env , Address messageAddress ) { \n\t$F4274 ( traceJNI , VM ) $F4275 ( RuntimeEntrypoints ) try { \n\t\tVM . sysWrite ( JNIGenericHelpers . createStringFromC ( messageAddress ) ) ; \n\t\tSystem . exit ( EXIT_STATUS_JNI_TROUBLE ) ; \n\t\t} \n\tcatch ( Throwable unexpected ) { \n\t\t$F4285 ( traceJNI , unexpected , System ) System . exit ( EXIT_STATUS_RECURSIVELY_SHUTTING_DOWN ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean makeBackupFile ( String directory , File file ) { \n\tif ( file == null ) $F22715 ( log ) else if ( file . canWrite ( ) ) { \n\t\tString backupFullName = directory + File . separator + $F6798 ( createFileNameWithDate , file ) ; \n\t\t$F15998 ( log , backupFullName ) File backupFile = findFile ( backupFullName ) ; \n\t\tif ( backupFile != null ) { \n\t\t\tif $F220007 ( backupFile ) { \n\t\t\t\t$F15998 ( log , backupFullName ) } \n\t\t\t} \n\t\telse $F94463 ( backupFile , backupFullName ) $F4924 ( parentDir , backupFile ) if $F1906 ( parentDir ) { \n\t\t\tif $F585 ( log ) { \n\t\t\t\t$F74568 ( log , parentDir ) } \n\t\t\tif $F4928 ( parentDir ) $F24275 ( log , _BOOL ) } \n\t\tif ( file . renameTo ( new File ( backupFullName ) ) ) { \n\t\t\t$F15998 ( log , backupFullName ) } \n\t\telse { \n\t\t\t$F15998 ( log , backupFullName ) return _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public final void pushPair ( int v1 , int v2 ) { \n\tif ( null == m_map ) $F74814 ( m_map , m_blocksize , m_mapSize ) else { \n\t\tif $F11078 ( m_firstFree , m_mapSize ) { \n\t\t\tm_mapSize += m_blocksize ; \n\t\t\tint newMap [ ] = new int [ m_mapSize ] ; \n\t\t\t$F135 ( System , m_map , newMap , m_firstFree ) m_map = newMap ; \n\t\t\t} \n\t\t} \n\tm_map [ m_firstFree ] = v1 ; \n\tm_map [ m_firstFree + NUM00 ] = v2 ; \n\tm_firstFree += NUM00 ; \n\t} \n"}, {"code": "public void removeStorage $F72 throws BackupException { \n\t$F34412 ( logger , dataDirSpec ) processHelper . exec ( NUM00 , rmCmd ) ; \n\t} \n"}, {"code": "private void appendContainerConfig ( DockerSlaveTemplate slaveTemplate , CreateContainerCmd containerConfig ) { \n\t$F2539 labels = containerConfig . getLabels ( ) ; \n\tif ( labels == null ) { \n\t\t$F23429 ( labels ) } \n\tlabels . put ( DOCKER_CLOUD_LABEL , getDisplayName ( ) ) ; \n\tlabels . put ( DOCKER_TEMPLATE_LABEL , slaveTemplate . getId ( ) ) ; \n\tcontainerConfig . withLabels ( labels ) ; \n\t} \n"}, {"code": "ReadOnlyGameSettings $F72 $F845 "}, {"code": "public void deleteUsers ( Set users ) throws $F52710 { \n\t$F10531 ( iter , users ) while $F2921 ( iter ) { \n\t\t$F2778 ( userDN , iter ) AMUser user = new AMUserImpl ( super . token , userDN ) ; \n\t\t$F1900 ( user ) } \n\t} \n"}, {"code": "$F1 public boolean accept ( File file ) { \n\t$F20605 ( name , file ) for ( String wildcard : wildcards ) { \n\t\tif ( FilenameUtils . wildcardMatch ( name , wildcard , caseSensitivity ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void removeRegion ( Region r ) $F106 ( regions , r ) "}, {"code": "public static void silentCloseInputStream ( InputStream is ) { \n\ttry $F6399 ( is ) $F122999 ( log , LOG_TAG , e ) } \n"}, {"code": "$F1 public void startElement $F42838 ( uri , localName , qName , attributes ) throws SAXException { \n\tif ( requestID == null && localName . equals ( NUM00 ) ) { \n\t\t$F163383 ( requestID , attributes ) } \n\tsuper . startElement ( uri , localName , qName , attributes ) ; \n\t} \n"}, {"code": "public void stop ( int timeout ) throws InterruptedException { \n\tif $F151263 ( isclosed , _BOOL ) $F932 List < WebSocket > socketsToClose = null ; \n\tsynchronized ( connections ) { \n\t\tsocketsToClose = new ArrayList < WebSocket > ( connections ) ; \n\t\t} \n\tfor ( WebSocket ws : socketsToClose ) { \n\t\tws . close ( CloseFrame . GOING_AWAY ) ; \n\t\t} \n\tsynchronized ( this ) { \n\t\tif ( selectorthread != null ) { \n\t\t\tif ( Thread . currentThread ( ) != selectorthread ) $F845 if ( selectorthread != Thread . currentThread ( ) ) { \n\t\t\t\tif $F3817 ( socketsToClose ) selectorthread . join ( timeout ) ; \n\t\t\t\t$F7589 ( selectorthread ) $F14454 ( selectorthread ) } \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public Storage $F72 { \n\tthis ( new File ( getTemporaryStorageDirectoryString ( ) ) ) ; \n\t} \n"}, {"code": "protected void calculateItemWidth ( CategoryPlot plot , Rectangle2D dataArea , int rendererIndex , CategoryItemRendererState state ) { \n\tCategoryAxis domainAxis = getDomainAxis ( plot , rendererIndex ) ; \n\tCategoryDataset dataset = plot . getDataset ( rendererIndex ) ; \n\tif ( dataset != null ) { \n\t\t$F16742 ( columns , dataset ) int rows = state . getVisibleSeriesCount ( ) >= NUM00 ? state . getVisibleSeriesCount ( ) : dataset . getRowCount ( ) ; \n\t\tdouble space = NUM00 ; \n\t\t$F10709 ( orientation , plot ) if ( orientation == PlotOrientation . HORIZONTAL ) $F32511 ( space , dataArea ) else if ( orientation == PlotOrientation . VERTICAL ) $F32508 ( space , dataArea ) double maxWidth = space * getMaximumItemWidth ( ) ; \n\t\tdouble categoryMargin = NUM00 ; \n\t\tdouble currentItemMargin = NUM00 ; \n\t\tif ( columns > NUM00 ) { \n\t\t\tcategoryMargin = domainAxis . getCategoryMargin ( ) ; \n\t\t\t} \n\t\tif ( rows > NUM00 ) $F20182 ( currentItemMargin , getItemMargin ) double used = space * ( NUM00 - domainAxis . getLowerMargin ( ) - domainAxis . getUpperMargin ( ) - categoryMargin - currentItemMargin ) ; \n\t\tif ( ( rows * columns ) > NUM00 ) { \n\t\t\tstate . setBarWidth ( Math . min ( used / ( rows * columns ) , maxWidth ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tstate . setBarWidth ( Math . min ( used , maxWidth ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "@ RequiresPermission ( Manifest . permission . CAMERA ) public CameraSource start $F72 throws IOException { \n\tsynchronized ( mCameraLock ) { \n\t\t$F20092 ( mCamera , this ) mCamera = createCamera ( ) ; \n\t\tif ( $F20093 ( Build ) ) { \n\t\t\tmDummySurfaceTexture = new SurfaceTexture ( DUMMY_TEXTURE_NAME ) ; \n\t\t\tmCamera . setPreviewTexture ( mDummySurfaceTexture ) ; \n\t\t\t} \n\t\telse { \n\t\t\tmDummySurfaceView = new SurfaceView ( mContext ) ; \n\t\t\tmCamera . setPreviewDisplay ( mDummySurfaceView . getHolder ( ) ) ; \n\t\t\t} \n\t\tmCamera . startPreview ( ) ; \n\t\tisSafeToTakePicture = _BOOL ; \n\t\t$F20103 ( mProcessingThread , mFrameProcessor ) mFrameProcessor . setActive ( _BOOL ) ; \n\t\t$F2346 ( mProcessingThread ) } \n\treturn this ; \n\t} \n"}, {"code": "public void addBreakpointListener ( final BreakpointListener listener ) $F207 ( breakpointListeners , listener ) "}, {"code": "public void update ( Graphics g ) { \n\tif ( isShowing ( ) ) { \n\t\tif ( ! ( peer instanceof LightweightPeer ) ) { \n\t\t\tg . clearRect ( NUM00 , NUM00 , width , height ) ; \n\t\t\t} \n\t\tpaint ( g ) ; \n\t\t} \n\t} \n"}, {"code": "private void releaseWaiters ( int phase ) { \n\tQNode q ; \n\tThread t ; \n\tAtomicReference < QNode > head = ( phase & NUM00 ) == NUM00 ? evenQ : oddQ ; \n\twhile ( $F17863 ( q , head ) && q . phase != ( int ) ( root . state > > > PHASE_SHIFT ) ) { \n\t\tif ( head . compareAndSet ( q , q . next ) && $F43539 ( t , q ) ) $F43542 ( q , LockSupport , t ) } \n\t} \n"}, {"code": "public static DateFormat toDateTimeFormat ( String dateTimeFormat , TimeZone tz , Locale locale ) { \n\tDateFormat df = null ; \n\tif $F4329 ( UtilValidate , dateTimeFormat ) { \n\t\tdf = DateFormat . getDateTimeInstance ( DateFormat . SHORT , DateFormat . MEDIUM , locale ) ; \n\t\t} \n\telse { \n\t\tdf = new SimpleDateFormat ( dateTimeFormat , locale == null ? Locale . getDefault ( ) : locale ) ; \n\t\t} \n\tdf . setTimeZone ( tz ) ; \n\treturn df ; \n\t} \n"}, {"code": "public static void printStackTrace ( Throwable e ) { \n\ttry $F20878 ( Debug , e ) catch ( Throwable f ) $F302 ( e ) } \n"}, {"code": "$F1 public Void visitType ( TypeElement e , Void p ) { \n\tscan ( e . getTypeParameters ( ) , p ) ; \n\tcheckCamelCase ( e , _BOOL ) ; \n\tsuper . visitType ( e , p ) ; \n\t$F1274 } \n"}, {"code": "public Block ( boolean multiPush ) { \n\tthis ( multiPush , NUM00 , null , $F161002 ( Arrays ) ) ; \n\t} \n"}, {"code": "private double Poisson ( double x ) { \n\treturn Math . exp ( - m_Lambda + ( x * Math . log ( m_Lambda ) ) - logFac ( x ) ) ; \n\t} \n"}, {"code": "protected Expression findExpression ( String source ) { \n\tif $F22 ( source ) { \n\t\t$F1382 ( source ) if $F1277 ( source ) $F1337 String leftSide = source ; \n\t\tString rightSide = null ; \n\t\tConnector op = findOp ( leftSide ) ; \n\t\tif ( op != null ) { \n\t\t\trightSide = op . getRightSide ( leftSide ) ; \n\t\t\tleftSide = leftSide . substring ( NUM00 , op . sourceLoc ) ; \n\t\t\tExpression leftExpression = findExpression ( leftSide ) ; \n\t\t\tExpression rightExpression = findExpression ( rightSide ) ; \n\t\t\tif ( leftExpression != null ) { \n\t\t\t\top . addExpr ( leftExpression ) ; \n\t\t\t\t} \n\t\t\tif ( rightExpression != null ) { \n\t\t\t\top . addExpr ( rightExpression ) ; \n\t\t\t\t} \n\t\t\treturn op ; \n\t\t\t} \n\t\top = findMiniOp ( leftSide ) ; \n\t\tif ( op != null ) { \n\t\t\trightSide = op . getRightSide ( leftSide ) ; \n\t\t\tleftSide = leftSide . substring ( NUM00 , op . sourceLoc ) ; \n\t\t\tExpression leftExpression = findExpression ( leftSide ) ; \n\t\t\tExpression rightExpression = findExpression ( rightSide ) ; \n\t\t\tif ( leftExpression != null ) { \n\t\t\t\top . addExpr ( leftExpression ) ; \n\t\t\t\t} \n\t\t\tif ( rightExpression != null ) { \n\t\t\t\top . addExpr ( rightExpression ) ; \n\t\t\t\t} \n\t\t\treturn op ; \n\t\t\t} \n\t\tif $F70311 ( logger , Level ) $F18853 ( logger , source ) return findMathOp ( source ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "void putChannel ( final StoredClientChannel channel ) { \n\tputChannel ( channel , _BOOL ) ; \n\t} \n"}, {"code": "private void deleteFilesInDir ( File dir ) { \n\tfor ( $F3445 ( child , dir ) ) $F19636 ( child ) } \n"}, {"code": "$F1431 public static void pipeInputToOutputStream ( InputStream in , File fileOut , boolean ignoreErrors ) throws IOException { \n\tif ( fileOut == null ) { \n\t\t$F9464 ( logger ) if ( ! ignoreErrors ) $F14525 } \n\telse { \n\t\t$F4924 ( parent , fileOut ) if $F271542 ( parent ) $F1908 ( parent ) OutputStream fileStream = null ; \n\t\ttry { \n\t\t\t$F10893 ( fileStream , fileOut ) pipeInputToOutputStream ( in , fileStream , _BOOL , ignoreErrors ) ; \n\t\t\t} \n\t\tcatch ( IOException e ) { \n\t\t\tif ( fileStream != null ) { \n\t\t\t\ttry $F881 ( fileStream ) catch ( IOException ex ) $F28660 ( logger , ex ) } \n\t\t\t$F24387 ( ignoreErrors , e ) } \n\t\t} \n\t} \n"}, {"code": "$F81108 ( mProcessingThread , State , mDetector ) "}, {"code": "public static String trimLeadingCharacter ( String str , char leadingCharacter ) { \n\t$F74602 ( hasLength , str ) $F7542 ( sb , str ) while ( $F20 ( sb ) && sb . charAt ( NUM00 ) == leadingCharacter ) $F74607 ( sb ) $F92 ( sb ) } \n"}, {"code": "public E take $F72 throws InterruptedException { \n\t$F677 ( lock , this ) $F678 ( lock ) long t = now ( ) ; \n\tTenantQueue . Item item = null ; \n\ttry { \n\t\tfor ( $F589 ) { \n\t\t\tTenantQueue q = nextQueue ( t ) ; \n\t\t\tif ( q == null ) $F681 ( available ) else { \n\t\t\t\tlong delay = q . next - t ; \n\t\t\t\tif ( delay <= NUM00 ) { \n\t\t\t\t\titem = q . poll ( t ) ; \n\t\t\t\t\treturn item == null ? null : item . element ; \n\t\t\t\t\t} \n\t\t\t\telse if ( leader != null ) $F681 ( available ) else { \n\t\t\t\t\t$F686 ( thisThread , Thread ) leader = thisThread ; \n\t\t\t\t\ttry { \n\t\t\t\t\t\tavailable . awaitNanos ( delay ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t$F690 ( leader , thisThread ) } \n\t\t\t\t} \n\t\t\t$F101251 ( t , System ) } \n\t\t} \n\tfinally { \n\t\tif ( leader == null && hasNext ( ) ) $F702 ( available ) $F704 ( lock ) done ( item , t ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean threadSafeTimeout ( long delayTime , TimeUnit unit , Action0 action ) { \n\tboolean scheduled = _BOOL ; \n\t$F168669 ( currentThread , Thread ) if $F1238 ( currentThread , dutyThread ) { \n\t\ttimerWheel . newTimeout ( delayTime , unit , null ) ; \n\t\t} \n\telse { \n\t\tscheduled = actions . offer ( null ) ; \n\t\t} \n\treturn scheduled ; \n\t} \n"}, {"code": "$F46189 ( task , initExecutorsIfNeed , taskExecutorForCachedImages ) "}, {"code": "void addAttributeSelection ( String exp ) { \n\t$F1384 ( index , exp ) String value = null ; \n\tint constraint = AttString . EQUALS ; \n\tif ( index != - NUM00 ) { \n\t\tif ( index == NUM00 ) $F14411 ( setTagId , TAG_CSS_ILLEGAL_SELECTOR ) int opIndex = index ; \n\t\tchar c = exp . charAt ( index - NUM00 ) ; \n\t\tif ( c == NUM00 ) { \n\t\t\tconstraint = AttString . CONTAINS_WORD ; \n\t\t\topIndex -- ; \n\t\t\t} \n\t\telse if ( c == NUM00 ) { \n\t\t\tconstraint = AttString . BEGINS_WITH ; \n\t\t\topIndex -- ; \n\t\t\t} \n\t\t$F4571 ( value , exp , index ) if ( ( $F3106 ( value ) && $F8991 ( value ) ) || ( $F3106 ( value ) && $F8991 ( value ) ) ) $F8994 ( value ) $F45799 ( exp , opIndex ) } \n\tif ( attributeSelections == null ) { \n\t\t$F20637 ( attributeSelections ) } \n\tattributeSelections . addElement ( new AttString ( exp , constraint , value ) ) ; \n\t} \n"}, {"code": "private void createLeftOver $F72 { \n\tint lineLengthBytes = currentLastBytePos + NUM00 ; \n\tif ( lineLengthBytes > NUM00 ) { \n\t\t$F1325 ( leftOver , lineLengthBytes ) $F135 ( System , data , leftOver , lineLengthBytes ) } \n\telse { \n\t\tleftOver = null ; \n\t\t} \n\tcurrentLastBytePos = - NUM00 ; \n\t} \n"}, {"code": "public Value sample $F72 { \n\t$F59615 ( index , sampler , actionValues ) if ( actionValuesAsArray == null ) { \n\t\tactionValuesAsArray = actionValues . toArray ( new Value $F2313 ( actionValues ) ) ; \n\t\t} \n\treturn actionValuesAsArray [ index ] ; \n\t} \n"}, {"code": "$F1 public void channelClosed ( ChannelHandlerContext channelHandlerContext , ChannelStateEvent channelStateEvent ) throws Exception { \n\t$F15856 ( curr_conns ) channelGroup . remove ( channelHandlerContext . getChannel ( ) ) ; \n\t} \n"}, {"code": "private static void configureHeadLessSimulation $F72 { \n\t$F2699 ( System ) GAMA . setHeadLessMode ( ) ; \n\t} \n"}, {"code": "public static boolean isNextWindow ( URI id ) { \n\treturn id == null || NEXT . equals ( id ) ; \n\t} \n"}, {"code": "public static boolean isVisible ( $F6969 clazz , ClassLoader classLoader ) { \n\t$F1933 ( classLoader , _BOOL ) try { \n\t\t$F6969 actualClass = classLoader . loadClass ( clazz . getName ( ) ) ; \n\t\treturn ( clazz == actualClass ) ; \n\t\t} \n\tcatch ( ClassNotFoundException ex ) { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public $F96 remove ( QueueEvent event ) throws $F80658 { \n\tTimerContext time = stats . time ( dir + NUM00 ) ; \n\ttry { \n\t\t$F134526 ( path , event ) String responsePath = dir + NUM00 + response_prefix + $F31604 ( path ) ; \n\t\tif ( zookeeper . exists ( responsePath , _BOOL ) ) { \n\t\t\tzookeeper . setData ( responsePath , event . getBytes ( ) , _BOOL ) ; \n\t\t\t} \n\t\t$F96 data = zookeeper . getData ( path , null , null , _BOOL ) ; \n\t\tzookeeper . delete ( path , - NUM00 , _BOOL ) ; \n\t\treturn data ; \n\t\t} \n\tfinally $F5196 ( time ) } \n"}, {"code": "public PropertyXMLBuilder ( ServiceSchema serviceSchema , AMModel model , Set attributeSchemas ) throws $F16995 { \n\tthis . model = model ; \n\tthis . serviceName = serviceSchema . getServiceName ( ) ; \n\tgetServiceResourceBundle ( serviceSchema ) ; \n\tif ( serviceBundle != null ) { \n\t\tmapTypeToAttributeSchema = new HashMap $F98338 ( attributeSchemas ) ; \n\t\tmapTypeToAttributeSchema . put ( NULL_TYPE , attributeSchemas ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean is ( String arg , boolean allowAbbr ) { \n\t$F72433 ( name , arg , _BOOL ) if ( allowAbbr && $F1276 ( arg ) ) { \n\t\tif $F30883 ( arg , c ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "static public void addAll ( $F3803 list , $F806 array ) { \n\tfor ( String item : array ) list . add ( item ) ; \n\t} \n"}, {"code": "void remove ( SuperCardToast superCardToast ) $F106 ( mList , superCardToast ) "}, {"code": "public void test_vmstat_header_and_data_parse $F72 { \n\tfinal Pattern pattern = VMStatCollector . pattern ; \n\tfinal String header = NUM00 ; \n\tfinal String data = NUM00 ; \n\t{ \n\t\tfinal $F806 fields = pattern . split ( header . trim ( ) , NUM00 ) ; \n\t\tfor ( $F1139 ( i , fields ) ) { \n\t\t\tif $F17747 ( log ) log . info ( $F262304 ( i , fields ) ) ; \n\t\t\t} \n\t\tassertField ( header , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( header , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( header , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( header , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( header , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( header , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( header , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( header , fields , NUM00 , NUM00 ) ; \n\t\t} \n\t{ \n\t\tfinal $F806 fields = pattern . split ( data . trim ( ) , NUM00 ) ; \n\t\tassertField ( data , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( data , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( data , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( data , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( data , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( data , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( data , fields , NUM00 , NUM00 ) ; \n\t\tassertField ( data , fields , NUM00 , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public static SecretKeys generateKeyFromPassword ( String password , String salt ) throws GeneralSecurityException { \n\treturn generateKeyFromPassword ( password , Base64 . decode ( salt , BASE64_FLAGS ) ) ; \n\t} \n"}, {"code": "private String partiallyEscapeAssertionValue ( String assertionValue ) { \n\t$F80469 ( sb , assertionValue ) for ( $F1088 ( j , assertionValue ) ) { \n\t\t$F1280 ( c , assertionValue , j ) if ( c == NUM00 ) $F288 ( sb , c ) else { \n\t\t\tsb . append ( Filter . escapeAssertionValue ( String . valueOf ( c ) ) ) ; \n\t\t\t} \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "protected boolean filterLeftoverView ( ViewGroup parent , int childIndex ) { \n\tparent . removeViewAt ( childIndex ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected boolean declAlreadyDeclared ( String prefix ) { \n\tint startDecls = m_contextIndexes . peek ( ) ; \n\t$F11420 prefixMappings = m_prefixMappings ; \n\t$F2199 ( nDecls , prefixMappings ) for ( int i = startDecls ; \n\ti < nDecls ; \n\ti += NUM00 ) { \n\t\t$F124180 ( prefixDecl , prefixMappings , i ) $F45557 ( prefixDecl ) $F9506 ( prefixDecl , prefix , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public void step ( MessageLogger logger ) { \n\ttry { \n\t\taddAgent ( ) ; \n\t\tenv . step ( ) ; \n\t\t} \n\t$F1516 ( e ) } \n"}, {"code": "public static AttackStatus calculatePhysicalStatus ( Creature attacker , Creature attacked , boolean isMainHand ) { \n\treturn calculatePhysicalStatus ( attacker , attacked , isMainHand , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t} \n"}, {"code": "public T vertexProcessor ( final BiConsumer < Vertex , $F529 > vertexProcessor ) { \n\tthis . vertexProcessor = Optional . ofNullable ( vertexProcessor ) ; \n\t$F123138 ( extendingClass , this ) } \n"}, {"code": "synchronized boolean release $F72 { \n\td ( NUM00 ) ; \n\tif ( state == BUSY ) { \n\t\tstate = IDLE ; \n\t\t$F3224 ( idleSince , System ) return _BOOL ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "private void validateReplicaAvailability ( Slice slice , String shard , String collectionName , int count ) { \n\tif ( slice != null ) { \n\t\tCollection < Replica > allReplicasForShard = slice . getReplicas ( ) ; \n\t\tif ( allReplicasForShard == null ) { \n\t\t\tthrow new SolrException ( SolrException . ErrorCode . BAD_REQUEST , NUM00 + shard + NUM00 + collectionName ) ; \n\t\t\t} \n\t\tif $F10471 ( allReplicasForShard ) { \n\t\t\tthrow new SolrException ( SolrException . ErrorCode . BAD_REQUEST , NUM00 + shard + NUM00 + collectionName + NUM00 ) ; \n\t\t\t} \n\t\tif $F58405 ( allReplicasForShard , count ) { \n\t\t\tthrow new SolrException ( SolrException . ErrorCode . BAD_REQUEST , NUM00 + shard + NUM00 + collectionName + NUM00 + count + NUM00 + allReplicasForShard . size ( ) + NUM00 ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "default ClassDeclaration asClass $F72 { \n\tthrow new UnsupportedOperationException $F10797 ( String , this ) ; \n\t} \n"}, {"code": "private static String partitionSpecToName $F3501 ( spec ) { \n\t$F83 ( sb ) for ( $F19318 ( entry , spec ) ) { \n\t\tif $F35625 ( sb ) $F86 ( sb ) sb . append ( entry . getKey ( ) + NUM00 + entry . getValue ( ) ) ; \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "$F38750 ( input , encoding , toInputStream ) "}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public void testHitEndAfterFind $F72 { \n\t$F515008 ( hitEndTest , _BOOL ) $F515008 ( hitEndTest , _BOOL ) $F515008 ( hitEndTest , _BOOL ) $F515008 ( hitEndTest , _BOOL ) $F515008 ( hitEndTest , _BOOL ) $F515008 ( hitEndTest , _BOOL ) String floatRegex = getHexFloatRegex ( ) ; \n\thitEndTest ( _BOOL , NUM00 , floatRegex , Double . toHexString ( - NUM00 ) , _BOOL ) ; \n\thitEndTest ( _BOOL , NUM00 , floatRegex , NUM00 + Double . toHexString ( Double . NaN ) + NUM00 , _BOOL ) ; \n\thitEndTest ( _BOOL , NUM00 , floatRegex , Double . toHexString ( - NUM00 ) + NUM00 , _BOOL ) ; \n\thitEndTest ( _BOOL , NUM00 , floatRegex , NUM00 + Double . toHexString ( Double . MIN_VALUE ) + NUM00 , _BOOL ) ; \n\t$F515008 ( hitEndTest , _BOOL ) $F515008 ( hitEndTest , _BOOL ) } \n"}, {"code": "@ Modifying $F1230 public void deleteCheque ( $F35231 Long chequeID ) { \n\tchequeRepository . delete ( chequeID ) ; \n\tphotoRepository . deleteByChequeId ( chequeID . toString ( ) ) ; \n\t} \n"}, {"code": "public static synchronized double partialCorrelation ( TetradMatrix submatrix ) { \n\ttry { \n\t\tTetradMatrix inverse = submatrix . inverse ( ) ; \n\t\tdouble a = - NUM00 * $F214756 ( inverse ) ; \n\t\tdouble v0 = $F214756 ( inverse ) ; \n\t\tdouble v1 = $F214756 ( inverse ) ; \n\t\tdouble b = Math . sqrt ( v0 * v1 ) ; \n\t\treturn a / b ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F301 ( e ) return Double . NaN ; \n\t\t} \n\t} \n"}, {"code": "public void addColumn ( String name , String expr ) { \n\tExpression ex = ExpressionParser . parse ( expr ) ; \n\tThrowable t = ExpressionParser . getError ( ) ; \n\tif ( t != null ) $F9491 ( t ) else { \n\t\taddColumn ( name , ex ) ; \n\t\t} \n\t} \n"}, {"code": "public void addPutAndGetTimeNanos ( long duration ) { \n\tputTimeNanos . addAndGet ( duration ) ; \n\tgetTimeNanos . addAndGet ( duration ) ; \n\tif ( delegate != null ) delegate . addPutAndGetTimeNanos ( duration ) ; \n\t} \n"}, {"code": "private float checkSaturationValid ( final float val ) { \n\tfloat tempval = val ; \n\t$F36952 ( val , tempval ) if ( val < NUM00 ) { \n\t\ttempval = NUM00 ; \n\t\t} \n\treturn tempval ; \n\t} \n"}, {"code": "String parse ( String cellStr , int layoutConstant ) { \n\treturn cellStr . split ( LayoutConstants . CELL_PTRN ) [ layoutConstant ] ; \n\t} \n"}, {"code": "public void pseudoPropertyChange $F109214 ( propName , old , n ) { \n\tif $F585 ( log ) { \n\t\tlog . debug ( $F80356 ( getSystemName , propName ) + n . toString ( ) ) ; \n\t\t} \n\tfirePropertyChange ( propName , old , n ) ; \n\t} \n"}, {"code": "public static String runCmd ( File directory , $F3803 cmd , String errorMessage ) throws Exception { \n\t$F157869 ( pb , cmd ) pb . directory ( directory ) ; \n\tpb . redirectErrorStream ( _BOOL ) ; \n\t$F111135 ( p , pb ) String s ; \n\t$F83 ( sb ) $F114263 ( stdout , p ) ; \n\twhile $F443 ( s , stdout ) { \n\t\tlogger . info ( s ) ; \n\t\tsb . append ( s ) ; \n\t\t$F84 ( sb ) } \n\t$F1822 ( sbs , sb ) int exitValue = p . waitFor ( ) ; \n\tif ( exitValue != NUM00 ) throw new Exception ( errorMessage + NUM00 + exitValue + NUM00 + sbs ) ; \n\treturn sbs ; \n\t} \n"}, {"code": "$F1 public SelectableChannel selectableChannel $F72 { \n\treturn socketChannel ; \n\t} \n"}, {"code": "public void test_ConstructorIIIIII $F72 { \n\tDate d1 = new Date ( $F55072 ) ; \n\tDate d2 = new Date ( NUM00 + d1 . getTimezoneOffset ( ) * NUM00 * NUM00 + $F264 + NUM00 * NUM00 + NUM00 ) ; \n\t$F114430 ( assertTrue , d1 , d2 ) } \n"}, {"code": "public static String fromTag ( ByteArrayTag tag ) { \n\t$F83 ( builder ) builder . append ( ARRAY_START ) ; \n\tboolean start = _BOOL ; \n\tfor ( byte value : tag . getValue ( ) ) { \n\t\tByteTag b = new ByteTag ( value ) ; \n\t\t$F11657 ( start , _BOOL , builder , ELEMENT_SEPERATOR ) $F6407 ( builder , fromTag , b ) } \n\tbuilder . append ( ARRAY_END ) ; \n\t$F92 ( builder ) } \n"}, {"code": "$F1 protected void addChooserFilters ( JFileChooser chooser ) { \n\tjavax . swing . filechooser . FileNameExtensionFilter filter = new javax . swing . filechooser . FileNameExtensionFilter ( Bundle . getMessage ( NUM00 , NUM00 ) , NUM00 , NUM00 ) ; \n\tchooser . addChoosableFileFilter ( new javax . swing . filechooser . FileNameExtensionFilter $F6600 ) ; \n\tchooser . addChoosableFileFilter ( new javax . swing . filechooser . FileNameExtensionFilter $F6600 ) ; \n\tchooser . addChoosableFileFilter ( filter ) ; \n\tchooser . setFileFilter ( filter ) ; \n\t} \n"}, {"code": "private static $F96 WindowsRegEnumValue1 $F14337 ( hKey , valueIndex , maxValueNameLength ) { \n\t$F7237 ( result , WindowsRegEnumValue , hKey , valueIndex , maxValueNameLength ) if ( result != null ) { \n\t\treturn result ; \n\t\t} \n\telse { \n\t\tlong sleepTime = INIT_SLEEP_TIME ; \n\t\tfor ( $F119 ( i , MAX_ATTEMPTS ) ) { \n\t\t\ttry $F7595 ( Thread , sleepTime ) $F42359 ( result ) sleepTime *= NUM00 ; \n\t\t\tresult = WindowsRegEnumValue ( hKey , valueIndex , maxValueNameLength ) ; \n\t\t\t$F21525 ( result ) } \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public static DateTime parseRfc822 ( String str ) throws ParseException { \n\tDate date ; \n\tsynchronized ( dateTimeFormat822 ) { \n\t\ttry $F49239 ( date , dateTimeFormat822 , str ) catch ( $F105392 e ) { \n\t\t\tthrow new ParseException ( e ) ; \n\t\t\t} \n\t\t} \n\treturn new DateTime ( date ) ; \n\t} \n"}, {"code": "public void testEmptyIndex $F72 throws Exception { \n\tIndexSearcher empty = newSearcher ( new MultiReader $F72 ) ; \n\tQuery query = new TermQuery ( new Term $F6600 ) ; \n\tSort sort = new Sort $F72 ; \n\tTopDocs td = empty . search ( query , NUM00 , sort , _BOOL , _BOOL ) ; \n\tassertEquals ( NUM00 , td . totalHits ) ; \n\tsort . setSort ( SortField . FIELD_DOC ) ; \n\ttd = empty . search ( query , NUM00 , sort , _BOOL , _BOOL ) ; \n\tassertEquals ( NUM00 , td . totalHits ) ; \n\tsort . setSort ( new SortField ( NUM00 , SortField . Type . INT ) , SortField . FIELD_DOC ) ; \n\ttd = empty . search ( query , NUM00 , sort , _BOOL , _BOOL ) ; \n\tassertEquals ( NUM00 , td . totalHits ) ; \n\tsort . setSort ( new SortField ( NUM00 , SortField . Type <missing ')'> . <missing ';'> NUM00 , _BOOL ) , SortField . FIELD_DOC ) ; \n\ttd = empty . search ( query , NUM00 , sort , _BOOL , _BOOL ) ; \n\tassertEquals ( NUM00 , td . totalHits ) ; \n\tsort . setSort ( new SortField ( NUM00 , SortField . Type <missing ')'> . <missing ';'> NUM00 <missing ';'> _VAL , _BOOL ) , SortField . FIELD_DOC ) ; \n\ttd = empty . search ( query , NUM00 , sort , _BOOL , _BOOL ) ; \n\tassertEquals ( NUM00 , td . totalHits ) ; \n\tsort . setSort ( new SortField ( NUM00 , SortField . Type . FLOAT ) , new SortField ( NUM00 , SortField . Type <missing ')'> . \"STRING\" ) ) ; \n\ttd = empty . search ( query , NUM00 , sort , _BOOL , _BOOL ) ; \n\tassertEquals ( NUM00 , td . totalHits ) ; \n\t} \n"}, {"code": "public Model validateModel ( Dataset dataset , URI shapesGraphURI , Resource minSeverity , boolean validateShapes , Function < RDFNode , String > labelFunction , ProgressMonitor monitor ) throws InterruptedException { \n\tif ( dataset . getDefaultModel ( ) == null ) $F825 Model shapesModel = dataset . getNamedModel ( shapesGraphURI . toString ( ) ) ; \n\tif ( monitor != null ) { \n\t\tmonitor . subTask ( NUM00 ) ; \n\t\t} \n\tList $F43833 constraintProperties = SHACLUtil . getAllConstraintProperties ( validateShapes ) ; \n\tMap < Resource , List < SHConstraint > > map = buildShape2ConstraintsMap ( shapesModel , dataset . getDefaultModel ( ) , constraintProperties , validateShapes ) ; \n\tif ( monitor != null ) { \n\t\tmonitor . subTask ( NUM00 ) ; \n\t\t} \n\tif ( monitor != null ) { \n\t\tmonitor . beginTask ( $F10533 ( map ) , map . size ( ) ) ; \n\t\t} \n\tModel results = JenaUtil . createMemoryModel ( ) ; \n\tresults . setNsPrefixes ( dataset . getDefaultModel ( ) ) ; \n\tfor ( Resource shape : map . keySet ( ) ) { \n\t\tfor ( SHConstraint constraint : map . get ( shape ) ) { \n\t\t\tvalidateConstraintForShape ( dataset , shapesGraphURI , minSeverity , constraint , shape , results , labelFunction , monitor ) ; \n\t\t\tif ( monitor != null ) { \n\t\t\t\tmonitor . worked ( NUM00 ) ; \n\t\t\t\tif ( monitor . isCanceled ( ) ) { \n\t\t\t\t\t$F2757 } \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn results ; \n\t} \n"}, {"code": "public PdfPage addAnnotation ( PdfAnnotation annotation ) { \n\treturn addAnnotation ( - NUM00 , annotation , _BOOL ) ; \n\t} \n"}, {"code": "public static String findPreferredIDP ( String realm , HttpServletRequest request ) { \n\t$F1338 ( request ) String succinctID = request . getParameter ( IFSConstants . PROVIDER_ID_KEY ) ; \n\tif ( ( succinctID == null ) || $F1276 ( succinctID ) ) { \n\t\t$F18126 ( debug ) $F1274 } \n\t$F1382 ( succinctID ) String preferredSuccinctId = null ; \n\t$F17727 ( st , succinctID ) while $F14498 ( st ) { \n\t\t$F39710 ( preferredSuccinctId , st ) if ( $F3599 ( preferredSuccinctId ) && st . hasMoreTokens ( ) ) { \n\t\t\tpreferredSuccinctId = preferredSuccinctId + NUM00 + st . nextToken ( ) ; \n\t\t\t} \n\t\t} \n\tpreferredSuccinctId = SAMLUtils . byteArrayToString ( Base64 . decode ( preferredSuccinctId ) ) ; \n\treturn getProviderIDFromSuccinctID ( realm , preferredSuccinctId ) ; \n\t} \n"}, {"code": "private void checkAndCreateDirectory ( final String directoryName ) { \n\ttry { \n\t\t$F15885 ( dir , directoryName ) if ( $F1905 ( dir ) && dir . mkdirs ( ) ) $F981 ( _logger ) } \n\tcatch ( Exception ex ) $F28660 ( _logger , ex ) } \n"}, {"code": "$F28183 public final $F22358 assertValuesWith ( $F39462 ... expectations ) { \n\t$F34216 ( valuesStorage ) $F18832 ( expectedValueCount , expectations ) if $F39465 ( expectedValueCount , values ) { \n\t\tthrow new AssertionError ( NUM00 + expectedValueCount + NUM00 + valueCount , null ) ; \n\t\t} \n\tfor ( $F119 ( i , expectedValueCount ) ) { \n\t\t$F39462 consumer = expectations [ i ] ; \n\t\t$F6391 ( actualValue , values , i ) consumer . accept ( actualValue ) ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "$F25527 ( REDUNDANT_OP_COMPACT_THRESHOLD , redundantOpCount , lruEntries ) "}, {"code": "public int findEventPositionNearestTime ( Time time , long id ) { \n\t$F1084 ( mRowInfo ) long millis = time . toMillis ( _BOOL ) ; \n\tlong minDistance = Integer . MAX_VALUE ; \n\tlong idFoundMinDistance = Integer . MAX_VALUE ; \n\tint minIndex = NUM00 ; \n\tint idFoundMinIndex = NUM00 ; \n\tint eventInTimeIndex = - NUM00 ; \n\tint allDayEventInTimeIndex = - NUM00 ; \n\tint allDayEventDay = NUM00 ; \n\tint minDay = NUM00 ; \n\tboolean idFound = _BOOL ; \n\t$F2199 ( len , mRowInfo ) for ( $F119 ( index , len ) ) { \n\t\tRowInfo row = mRowInfo . get ( index ) ; \n\t\tif ( row . mType == TYPE_DAY ) $F1448 if ( row . mEventId == id ) { \n\t\t\tif ( row . mEventStartTimeMilli == millis ) { \n\t\t\t\treturn index ; \n\t\t\t\t} \n\t\t\tlong distance = Math . abs ( millis - row . mEventStartTimeMilli ) ; \n\t\t\t$F5322 ( distance , idFoundMinDistance , idFoundMinIndex , index ) idFound = _BOOL ; \n\t\t\t} \n\t\tif ( ! idFound ) { \n\t\t\tif ( millis >= row . mEventStartTimeMilli && millis <= row . mEventEndTimeMilli ) { \n\t\t\t\tif ( row . mAllDay ) { \n\t\t\t\t\tif ( allDayEventInTimeIndex == - NUM00 ) { \n\t\t\t\t\t\tallDayEventInTimeIndex = index ; \n\t\t\t\t\t\tallDayEventDay = row . mDay ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\telse if ( eventInTimeIndex == - NUM00 ) { \n\t\t\t\t\teventInTimeIndex = index ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if ( eventInTimeIndex == - NUM00 ) { \n\t\t\t\tlong distance = Math . abs ( millis - row . mEventStartTimeMilli ) ; \n\t\t\t\tif ( distance < minDistance ) { \n\t\t\t\t\tminDistance = distance ; \n\t\t\t\t\tminIndex = index ; \n\t\t\t\t\tminDay = row . mDay ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F9303 ( idFound , idFoundMinIndex ) if ( eventInTimeIndex != - NUM00 ) { \n\t\treturn eventInTimeIndex ; \n\t\t} \n\telse if ( allDayEventInTimeIndex != - NUM00 && minDay != allDayEventDay ) { \n\t\treturn allDayEventInTimeIndex ; \n\t\t} \n\treturn minIndex ; \n\t} \n"}, {"code": "final public void println ( float v ) { \n\t$F2544 ( s , String , v ) write ( s , NUM00 , s . length ( ) ) ; \n\tprintln ( ) ; \n\t} \n"}, {"code": "private static TranslationResult extractRegister ( final ITranslationEnvironment environment , final long offset , final String subRegister ) throws InternalTranslationException { \n\tfinal ArrayList < ReilInstruction > instructions = new ArrayList < ReilInstruction > $F72 ; \n\tfinal String parentRegister = getParentRegister ( subRegister ) ; \n\t$F157629 ( archSize , environment ) if ( isHigher8BitRegister ( subRegister ) ) { \n\t\t$F7336 ( maskResult , environment ) $F7336 ( shiftResult , environment ) instructions . add ( ReilHelpers . createAnd ( offset , archSize , parentRegister , OperandSize . WORD , NUM00 , OperandSize . WORD , maskResult ) ) ; \n\t\tinstructions . add ( ReilHelpers . createBsh ( offset + NUM00 , OperandSize . WORD , maskResult , OperandSize . WORD , NUM00 , OperandSize . BYTE , shiftResult ) ) ; \n\t\treturn new TranslationResult ( shiftResult , OperandSize . BYTE , TranslationResultType . REGISTER , null , instructions , offset ) ; \n\t\t} \n\telse { \n\t\tfinal OperandSize subRegisterSize = getRegisterSize ( subRegister ) ; \n\t\tfinal String mask = String . valueOf ( TranslationHelpers . getAllBitsMask ( subRegisterSize ) ) ; \n\t\t$F7336 ( result , environment ) instructions . add ( ReilHelpers . createAnd ( offset , archSize , parentRegister , subRegisterSize , mask , subRegisterSize , result ) ) ; \n\t\treturn new TranslationResult ( result , subRegisterSize , TranslationResultType . REGISTER , null , instructions , offset ) ; \n\t\t} \n\t} \n"}, {"code": "public void onLoginFailure ( Map requestParamsMap , HttpServletRequest req , HttpServletResponse res ) throws AuthenticationException { \n\t$F18126 ( debug ) } \n"}, {"code": "public Interceptor [ ] buildMethodInterceptors ( Method method ) { \n\tInterceptors before = method . getAnnotation ( Interceptors . class ) ; \n\treturn before != null ? createInterceptors ( before ) : NULL_INTERCEPTOR_ARRAY ; \n\t} \n"}, {"code": "protected String buildQualifierRegex ( String qualifierValue ) { \n\t$F83 ( sb ) $F84 ( sb ) sb . append ( qualifierValue ) ; \n\t$F84 ( sb ) $F92 ( sb ) } \n"}, {"code": "private static void lookForChanges ( DataObject left , DataObject right , HashMap $F17195 changes , $F2689 included , $F2689 excluded , $F2689 contained ) { \n\t$F121108 ( refClass , left ) $F23596 methods = refClass . getMethods ( ) ; \n\tfor ( Method method : methods ) { \n\t\tboolean contain = _BOOL ; \n\t\tName nameAnn = method . getAnnotation ( Name . class ) ; \n\t\t$F4322 ( nameAnn ) String key = nameAnn . value ( ) ; \n\t\tif $F5914 ( contained , key ) { \n\t\t\tcontain = _BOOL ; \n\t\t\t} \n\t\telse if ( included != null && ! included . contains ( key ) ) $F1448 $F36399 ( excluded , key ) Class type = method . getReturnType ( ) ; \n\t\ttry { \n\t\t\tObject obja = method . invoke ( left ) ; \n\t\t\tObject objb = method . invoke ( right ) ; \n\t\t\tif ( type == StringSet . class ) { \n\t\t\t\tif ( contain ) { \n\t\t\t\t\tanalyzeNewStringSetContainsOldStringSetValues ( ( StringSet ) obja , ( StringSet ) objb , key , changes ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tanalyzeStringSets ( ( StringSet ) obja , ( StringSet ) objb , key , changes ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if ( type == StringMap . class ) { \n\t\t\t\tanalyzeStringMaps ( ( StringMap ) obja , ( StringMap ) objb , key , changes ) ; \n\t\t\t\t} \n\t\t\telse if ( type == StringSetMap . class ) { \n\t\t\t\tanalyzeStringSetMaps ( ( StringSetMap ) obja , ( StringSetMap ) objb , key , changes ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( ! isEqual ( obja , objb ) ) { \n\t\t\t\t\tChange change = new Change ( key , obja , objb , nameAnn . value ( ) ) ; \n\t\t\t\t\tchanges . put ( key , change ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( IllegalAccessException ex ) { \n\t\t\tthrow new ServiceCodeException ( ServiceCode . UNFORSEEN_ERROR , ex , ex . getMessage ( ) , $F58906 ) ; \n\t\t\t} \n\t\tcatch ( InvocationTargetException ex ) { \n\t\t\tthrow new ServiceCodeException ( ServiceCode . UNFORSEEN_ERROR , ex , ex . getMessage ( ) , $F58906 ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "static void removeAllPhis ( IR ir ) { \n\tfor ( Instruction s = ir . firstInstructionInCodeOrder ( ) , sentinel = ir . lastInstructionInCodeOrder ( ) , nextInstr = null ; \n\ts != sentinel ; \n\ts = nextInstr ) { \n\t\tnextInstr = s . nextInstructionInCodeOrder ( ) ; \n\t\tif $F86920 ( Phi , s ) $F7042 ( s ) } \n\t} \n"}, {"code": "protected int countToken ( String token , String target ) { \n\tint tokenIndex = NUM00 ; \n\tint count = NUM00 ; \n\twhile ( tokenIndex != - NUM00 ) { \n\t\t$F147058 ( tokenIndex , target , token ) if ( tokenIndex > - NUM00 ) $F1097 ( tokenIndex , count ) } \n\treturn count ; \n\t} \n"}, {"code": "private Map < TestCase , Set < TestFitnessFunction > > initializeCoverageMapFromTests ( List < TestCase > tests ) { \n\tMap < TestCase , Set < TestFitnessFunction > > $F161023 ( testToGoals ) ; \n\tfor ( TestCase test : tests ) { \n\t\ttestToGoals . put ( test , filterSupportedGoals ( new $F22301 ( test . getCoveredGoals ( ) ) ) ) ; \n\t\t} \n\treturn testToGoals ; \n\t} \n"}, {"code": "public Interceptor [ ] buildRouteInterceptors ( Interceptor [ ] defaultInters , Interceptor [ ] resourceInters , Class < ? extends Resource > resourceClass , Interceptor [ ] methodInters , Method method ) { \n\tList < Interceptor > allInters = new ArrayList < Interceptor > $F72 ; \n\tfor ( Interceptor defaultInter : defaultInters ) $F207 ( allInters , defaultInter ) for ( Interceptor resourceInter : resourceInters ) $F207 ( allInters , resourceInter ) for ( Interceptor methodInter : methodInters ) $F207 ( allInters , methodInter ) Class < ? extends Interceptor > [ ] resourceClears = getResourceClears ( resourceClass ) ; \n\tClass < ? extends Interceptor > [ ] methodClears = getMethodClears ( method ) ; \n\tif ( $F22195 ( resourceClears ) || $F22195 ( methodClears ) ) { \n\t\tfor ( $F2277 ( i , allInters ) ) { \n\t\t\ti = clearInterceptor ( allInters , resourceClears , i ) ; \n\t\t\ti = clearInterceptor ( allInters , methodClears , i ) ; \n\t\t\t} \n\t\t} \n\treturn allInters . toArray ( new Interceptor $F2313 ( allInters ) ) ; \n\t} \n"}, {"code": "public static boolean checkGMLFootprint ( String footprint ) { \n\ttry { \n\t\tConfiguration configuration = new GMLConfiguration $F72 ; \n\t\tParser parser = new Parser ( configuration ) ; \n\t\tGeometry geom = ( Geometry ) parser . parse ( $F265821 ( footprint ) ) ; \n\t\tif ( $F1030 ( geom ) && ! geom . isValid ( ) ) $F24275 ( logger , _BOOL ) } \n\tcatch ( Exception e ) { \n\t\t$F45904 ( logger , e ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void main $F4374 ( args ) { \n\t$F158402 ( preBuffer , Double , args ) $F158402 ( postBuffer , Double , args ) run ( args [ NUM00 ] , args [ NUM00 ] , args [ NUM00 ] , args [ NUM00 ] , preBuffer , postBuffer ) ; \n\t} \n"}, {"code": "public static double quantile $F12359 ( p , k , theta , shift ) { \n\treturn Math . exp ( GammaDistribution . quantile ( p , k , theta ) ) + shift ; \n\t} \n"}, {"code": "public static CipherParameters makePBEMacParameters ( BCPBEKey pbeKey , AlgorithmParameterSpec spec ) { \n\tif ( ( spec == null ) || ! ( spec instanceof PBEParameterSpec ) ) $F825 PBEParameterSpec pbeParam = ( PBEParameterSpec ) spec ; \n\tPBEParametersGenerator generator = makePBEGenerator ( pbeKey . getType ( ) , pbeKey . getDigest ( ) ) ; \n\t$F46943 ( key , pbeKey ) CipherParameters param ; \n\tif ( pbeKey . shouldTryWrongPKCS12 ( ) ) $F46946 ( key ) generator . init ( key , pbeParam . getSalt ( ) , pbeParam . getIterationCount ( ) ) ; \n\tparam = generator . generateDerivedMacParameters ( pbeKey . getKeySize ( ) ) ; \n\tfor ( $F15868 ( i , key ) ) $F5629 ( key , i ) return param ; \n\t} \n"}, {"code": "public OrionEditorInit ( final TextEditorConfiguration configuration , final CodeAssistantFactory codeAssistantFactory , final QuickAssistAssistant quickAssist , final OrionEditorPresenter textEditor ) $F90398 ( this , configuration , codeAssistantFactory , quickAssist , textEditor ) "}, {"code": "final void putByte ( int offset , byte value ) { \n\tunsafe . putByte ( offset + address , value ) ; \n\t} \n"}, {"code": "public final void addValidationError ( String error ) $F207 ( validationErrors , error ) "}, {"code": "public static void parseOptionSettingTo $F5805 ( optionSetting , dst ) { \n\t$F1384 ( eqIndex , optionSetting ) if ( eqIndex == - NUM00 ) { \n\t\tthrow new InternalError ( NUM00 + optionSetting ) ; \n\t\t} \n\tdst . put ( optionSetting . substring ( NUM00 , eqIndex ) , optionSetting . substring ( eqIndex + NUM00 ) ) ; \n\t} \n"}, {"code": "public BigInteger generateClientCredentials $F55962 ( salt , identity , password ) { \n\tthis . x = SRP6Util . calculateX ( digest , N , salt , identity , password ) ; \n\tthis . a = selectPrivateValue ( ) ; \n\tthis . A = g . modPow ( a , N ) ; \n\treturn A ; \n\t} \n"}, {"code": "public void build ( SolrCore core , SolrIndexSearcher searcher ) throws IOException { \n\t$F9472 ( LOG , name ) dictionary = dictionaryFactory . create ( core , searcher ) ; \n\tlookup . build ( dictionary ) ; \n\tif ( storeDir != null ) { \n\t\tFile target = getStoreFile ( ) ; \n\t\tif ( ! lookup . store ( new FileOutputStream ( target ) ) ) $F21338 ( LOG ) else { \n\t\t\t$F36580 ( LOG , target ) } \n\t\t} \n\t} \n"}, {"code": "public void start ( String json ) { \n\t$F725 ( guidedTourSteps ) GuidedTourConfiguration configuration = dtoFactory . createDtoFromJson ( json , GuidedTourConfiguration . class ) ; \n\tlog . setDebugMode ( configuration . getDebugMode ( ) ) ; \n\tthis . guidedTourSteps = configuration . getSteps ( ) ; \n\tthis . tourName = configuration . getName ( ) ; \n\tif ( this . tourName == null || tourName . isEmpty ( ) ) { \n\t\ttourName = NUM00 ; \n\t\t} \n\tthis . hasWelcomeStep = configuration . getHasWelcomeStep ( ) ; \n\tstartTour ( ) ; \n\t} \n"}, {"code": "private void connect $F72 throws IOException { \n\tJMXServiceURL jmxUrl = new JMXServiceURL ( String . format ( fmtUrl , host , port ) ) ; \n\t$F535 ( env ) if ( username != null ) { \n\t\t$F105633 ( creds , username , password ) env . put ( JMXConnector . CREDENTIALS , creds ) ; \n\t\t} \n\t$F199288 ( env , getRMIClientSocketFactory ) jmxc = JMXConnectorFactory . connect ( jmxUrl , env ) ; \n\tmbeanServerConn = jmxc . getMBeanServerConnection ( ) ; \n\ttry { \n\t\tObjectName name = new ObjectName ( ssObjName ) ; \n\t\tssProxy = JMX . newMBeanProxy ( mbeanServerConn , name , StorageServiceMBean . class ) ; \n\t\tname = new ObjectName ( MessagingService . MBEAN_NAME ) ; \n\t\tmsProxy = JMX . newMBeanProxy ( mbeanServerConn , name , MessagingServiceMBean . class ) ; \n\t\tname = new ObjectName ( StreamManagerMBean . OBJECT_NAME ) ; \n\t\tstreamProxy = JMX . newMBeanProxy ( mbeanServerConn , name , StreamManagerMBean . class ) ; \n\t\tname = new ObjectName ( CompactionManager . MBEAN_OBJECT_NAME ) ; \n\t\tcompactionProxy = JMX . newMBeanProxy ( mbeanServerConn , name , CompactionManagerMBean . class ) ; \n\t\tname = new ObjectName ( FailureDetector . MBEAN_NAME ) ; \n\t\tfdProxy = JMX . newMBeanProxy ( mbeanServerConn , name , FailureDetectorMBean . class ) ; \n\t\tname = new ObjectName ( CacheService . MBEAN_NAME ) ; \n\t\tcacheService = JMX . newMBeanProxy ( mbeanServerConn , name , CacheServiceMBean . class ) ; \n\t\tname = new ObjectName ( StorageProxy . MBEAN_NAME ) ; \n\t\tspProxy = JMX . newMBeanProxy ( mbeanServerConn , name , StorageProxyMBean . class ) ; \n\t\tname = new ObjectName ( HintedHandOffManager . MBEAN_NAME ) ; \n\t\thhProxy = JMX . newMBeanProxy ( mbeanServerConn , name , HintedHandOffManagerMBean . class ) ; \n\t\tname = new ObjectName ( GCInspector . MBEAN_NAME ) ; \n\t\tgcProxy = JMX . newMBeanProxy ( mbeanServerConn , name , GCInspectorMXBean . class ) ; \n\t\tname = new ObjectName ( Gossiper . MBEAN_NAME ) ; \n\t\tgossProxy = JMX . newMBeanProxy ( mbeanServerConn , name , GossiperMBean . class ) ; \n\t\t} \n\tcatch ( MalformedObjectNameException e ) $F7077 ( e ) memProxy = ManagementFactory . newPlatformMXBeanProxy ( mbeanServerConn , ManagementFactory . MEMORY_MXBEAN_NAME , MemoryMXBean . class ) ; \n\truntimeProxy = ManagementFactory . newPlatformMXBeanProxy ( mbeanServerConn , ManagementFactory . RUNTIME_MXBEAN_NAME , RuntimeMXBean . class ) ; \n\t} \n"}, {"code": "private static void runRandomTest ( final int wordLength , final int bytePadding , final int wordCount ) { \n\tfinal long seed = randomLong ( ) ; \n\tfinal Random random = new Random ( seed ) ; \n\tfinal Random verificationRandom = new Random ( seed ) ; \n\tfinal long wordMask ; \n\tif ( wordLength == NUM00 ) { \n\t\twordMask = ~ NUM00 ; \n\t\t} \n\telse { \n\t\t$F143890 ( wordMask , wordLength ) ; \n\t\t} \n\tfinal BigEndianAscendingWordSerializer serializer = new BigEndianAscendingWordSerializer ( wordLength , wordCount , bytePadding ) ; \n\tfor ( $F119 ( i , wordCount ) ) { \n\t\tfinal long value = random . nextLong ( ) & wordMask ; \n\t\tserializer . writeWord ( value ) ; \n\t\t} \n\t$F173719 ( bytes , serializer ) final BigEndianAscendingWordDeserializer deserializer = new BigEndianAscendingWordDeserializer ( wordLength , bytePadding , bytes ) ; \n\tassertEquals ( deserializer . totalWordCount ( ) , wordCount ) ; \n\tfor ( $F119 ( i , wordCount ) ) { \n\t\tassertEquals ( deserializer . readWord ( ) , ( verificationRandom . nextLong ( ) & wordMask ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void addListener ( T listener ) { \n\t$F18045 ( listener ) listeners . add ( listener ) ; \n\t} \n"}, {"code": "public static MaildirMessageName createUniqueName ( MaildirFolder parentFolder , long size ) { \n\tString timestamp = $F258568 ( String , System ) ; \n\t$F8993 ( timestamp ) $F83 ( uniquePart ) uniquePart . append ( Integer . toHexString ( random . nextInt ( ) ) ) ; \n\tuniquePart . append ( $F39706 ( timestamp ) ) ; \n\tuniquePart . append ( processName ) ; \n\t$F16690 ( uniquePart , getNextDeliveryNumber ) String sizeString = NUM00 + String . valueOf ( size ) ; \n\tString fullName = $F31144 ( timestamp , uniquePart ) + NUM00 + currentHostname + sizeString ; \n\tMaildirMessageName uniqueName = new MaildirMessageName ( parentFolder , fullName ) ; \n\tuniqueName . timestamp = timestamp ; \n\tuniqueName . uniqueString = uniquePart . toString ( ) ; \n\tuniqueName . hostname = currentHostname ; \n\tuniqueName . sizeString = sizeString ; \n\tuniqueName . isSplit = _BOOL ; \n\tuniqueName . size = size ; \n\treturn uniqueName ; \n\t} \n"}, {"code": "$F41720 ( value , absMin , absMax , absValue , Math ) "}, {"code": "$F1 public void handleClick ( int x , int y , PlotRenderingInfo info ) $F845 "}, {"code": "private void adjustBCIndex ( Instruction barrier ) { \n\tNormalMethod source = barrier . position ( ) . method ; \n\tif ( source . isForOsrSpecialization ( ) ) { \n\t\tbarrier . adjustBytecodeIndex ( - source . getOsrPrologueLength ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\t$F20818 ( risul ) $F84 ( risul ) $F84 ( risul ) $F92 ( risul ) } \n"}, {"code": "public static $F2469 interpose ( $F2469 vector , int vectorLen , int offset , int len ) { \n\t$F2469 updated = create ( vectorLen + len ) ; \n\tint idx = offset > > NUM00 ; \n\t$F135 ( System , vector , updated , idx ) if ( idx < vector . length ) { \n\t\tint delta = offset & NUM00 ; \n\t\tupdated [ idx ] |= vector [ idx ] & maskBelow ( delta ) ; \n\t\t} \n\tcopy ( vector , offset , updated , offset + len , vectorLen - offset ) ; \n\treturn updated ; \n\t} \n"}, {"code": "public static File createTemporaryDirectory ( String prefix ) { \n\twhile ( _BOOL ) { \n\t\tString candidateName = prefix + TEMPORARY_DIRECTORY_PRNG . nextInt ( ) ; \n\t\tFile $F79849 ( result , System , candidateName ) ; \n\t\tif ( result . mkdir ( ) ) { \n\t\t\treturn result ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F106393 synchronizeAllAuthDataAsync $F72 { \n\tMap < String , $F2539 > authData ; \n\tsynchronized ( mutex ) { \n\t\tif $F931 ( isCurrentUser ) { \n\t\t\treturn Task . forResult ( null ) ; \n\t\t\t} \n\t\tauthData = getAuthData ( ) ; \n\t\t} \n\tList < $F106393 > $F719 ( tasks , authData ) ; \n\tfor ( $F3465 ( authType , authData ) ) $F3762 ( tasks , synchronizeAuthDataAsync , authType ) return Task . whenAll ( tasks ) ; \n\t} \n"}, {"code": "public static Element createElementInEncryptionSpace ( Document doc , String elementName ) { \n\t$F28724 ( doc ) if $F38892 ( xencPrefix ) { \n\t\treturn doc . createElementNS ( EncryptionConstants . EncryptionSpecNS , elementName ) ; \n\t\t} \n\treturn doc . createElementNS ( EncryptionConstants . EncryptionSpecNS , xencPrefix + NUM00 + elementName ) ; \n\t} \n"}, {"code": "void scrapActiveViews $F72 { \n\t$F52430 ( activeViews , mActiveViews ) final boolean multipleScraps = mViewTypeCount > NUM00 ; \n\t$F30929 scrapViews = mCurrentScrap ; \n\t$F18832 ( count , activeViews ) for ( $F18298 ( i , count ) ) { \n\t\tfinal View victim = activeViews [ i ] ; \n\t\tif ( victim != null ) { \n\t\t\t$F3670 ( lp , victim ) activeViews [ i ] = null ; \n\t\t\tfinal boolean scrapHasTransientState = ViewCompat . hasTransientState ( victim ) ; \n\t\t\tint viewType = lp . viewType ; \n\t\t\tif ( ! shouldRecycleViewType ( viewType ) || scrapHasTransientState ) { \n\t\t\t\tif ( viewType != ITEM_VIEW_TYPE_HEADER_OR_FOOTER || scrapHasTransientState ) { \n\t\t\t\t\tremoveDetachedView ( victim , _BOOL ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( scrapHasTransientState ) { \n\t\t\t\t\tif ( mTransientStateViews == null ) { \n\t\t\t\t\t\tmTransientStateViews = new SparseArrayCompat < View > $F72 ; \n\t\t\t\t\t\t} \n\t\t\t\t\tmTransientStateViews . put ( mFirstActivePosition + i , victim ) ; \n\t\t\t\t\t} \n\t\t\t\t$F598 } \n\t\t\t$F52456 ( multipleScraps , scrapViews , mScrapViews , viewType ) lp . position = mFirstActivePosition + i ; \n\t\t\tscrapViews . add ( victim ) ; \n\t\t\t} \n\t\t} \n\tpruneScrapViews ( ) ; \n\t} \n"}, {"code": "private void drawWind ( Canvas canvas , float y , float xOffset ) { \n\tfloat cof = ( mScreenWidth + xOffset ) / ( LOADING_ANIMATION_COEFFICIENT / SLOW_DOWN_ANIMATION_COEFFICIENT ) ; \n\tfloat time = mLoadingAnimationTime ; \n\tif ( mLastAnimationTime - mLoadingAnimationTime > NUM00 ) { \n\t\tmInverseDirection = _BOOL ; \n\t\ttime = ( LOADING_ANIMATION_COEFFICIENT / SLOW_DOWN_ANIMATION_COEFFICIENT ) - mLoadingAnimationTime ; \n\t\t} \n\telse { \n\t\tmNewWindSet = _BOOL ; \n\t\tmInverseDirection = _BOOL ; \n\t\t} \n\tfloat x = ( mScreenWidth - ( time * cof ) ) + xOffset - mWindLineWidth ; \n\tfloat xEnd = x + mWindLineWidth ; \n\t$F41674 ( canvas , x , y , xEnd , mWindPaint ) } \n"}, {"code": "private boolean hasProxySettings ( Properties settings ) { \n\tString proxyHost = settings . getProperty ( NUM00 , null ) ; \n\t$F179974 ( proxyHost ) } \n"}, {"code": "public boolean equalsDefault $F72 { \n\treturn ( Double . doubleToLongBits ( value ) == NUM00 ) ; \n\t} \n"}, {"code": "public static $F2539 parseKeyAndValueToMap ( String source , boolean ignoreSpace ) $F33971 ( parseKeyAndValueToMap , source , DEFAULT_KEY_AND_VALUE_SEPARATOR , DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR , ignoreSpace ) "}, {"code": "$F26827 ( w , h , oldw , oldh , super , setupBounds , setupPaints , invalidate ) "}, {"code": "$F18534 ( newcount , currentBufferIndex , buffers , filledBufferSum , currentBuffer , newBufferSize , Math ) "}, {"code": "$F5466 public static WebsiteAddress create ( String originOrHostOrPattern ) { \n\t$F25770 ( originOrHostOrPattern ) if $F7311 ( originOrHostOrPattern , ANY_SUBDOMAIN_PATTERN ) { \n\t\tString origin = null ; \n\t\tString scheme = null ; \n\t\t$F130950 ( host , originOrHostOrPattern , ANY_SUBDOMAIN_PATTERN ) boolean omitProtocolAndPort = _BOOL ; \n\t\treturn new WebsiteAddress ( originOrHostOrPattern , origin , scheme , host , omitProtocolAndPort ) ; \n\t\t} \n\tif $F130954 ( originOrHostOrPattern , SCHEME_SUFFIX ) { \n\t\t$F23375 ( uri , Uri , originOrHostOrPattern ) String origin = trimTrailingBackslash ( originOrHostOrPattern ) ; \n\t\tboolean omitProtocolAndPort = HTTP_SCHEME . equals ( uri . getScheme ( ) ) && ( uri . getPort ( ) == - NUM00 || uri . getPort ( ) == NUM00 ) ; \n\t\treturn new WebsiteAddress ( originOrHostOrPattern , origin , uri . getScheme ( ) , uri . getHost ( ) , omitProtocolAndPort ) ; \n\t\t} \n\tString origin = null ; \n\tString scheme = null ; \n\tboolean omitProtocolAndPort = _BOOL ; \n\treturn new WebsiteAddress ( originOrHostOrPattern , origin , scheme , originOrHostOrPattern , omitProtocolAndPort ) ; \n\t} \n"}, {"code": "public void test_filter_001 $F72 throws IOException { \n\tfinal File basefile = File . createTempFile ( getName ( ) , NUM00 ) ; \n\ttry { \n\t\t$F52199 ( basename , basefile ) final NameAndExtensionFilter logFilter = new NameAndExtensionFilter ( basename , NUM00 ) ; \n\t\tassertSameFiles ( new File $F10277 , logFilter . getFiles ( ) ) ; \n\t\t} \n\t$F105993 ( basefile ) } \n"}, {"code": "public void resetTeleMissileAttacks $F72 $F6051 ( pendingTeleMissileAttacks ) "}, {"code": "public int addPadding $F5474 ( in , inOff ) { \n\t$F18952 ( code , in , inOff ) while ( inOff < $F33765 ( in ) ) { \n\t\tin [ inOff ] = ( byte ) random . nextInt ( ) ; \n\t\tinOff ++ ; \n\t\t} \n\tin [ inOff ] = code ; \n\treturn code ; \n\t} \n"}, {"code": "public void addCommands ( PDFPage page , Matrix extra ) { \n\tsynchronized ( commands ) { \n\t\taddPush ( ) ; \n\t\t$F25302 ( extra , addXform ) commands . addAll ( page . getCommands ( ) ) ; \n\t\taddPop ( ) ; \n\t\t} \n\tupdateImages ( ) ; \n\t} \n"}, {"code": "public String toString $F72 { \n\t$F280 ( sb ) $F1469 separator = $F4582 ; \n\tint n = rows . length ; \n\tfor ( $F119 ( i , n ) ) { \n\t\tseparator [ NUM00 ] = NUM00 ; \n\t\tfor ( $F9993 ( j , i ) ) { \n\t\t\tsb . append ( separator ) ; \n\t\t\t$F53015 ( sb , rows , i , j ) separator [ NUM00 ] = NUM00 ; \n\t\t\t} \n\t\t$F84 ( sb ) $F84 ( sb ) } \n\t$F92 ( sb ) } \n"}, {"code": "public void addLast ( StatementSequence statements ) { \n\tif ( statements != null ) { \n\t\t$F27392 ( sequence , statements ) } \n\t} \n"}, {"code": "private void notifyActivityStateChanged ( Bundle bundle ) { \n\tif $F5973 ( mRecords ) { \n\t\t$F73829 ( Log , TAG , mRecords ) synchronized ( mRecords ) { \n\t\t\tIterator < Record > iterator = mRecords . iterator ( ) ; \n\t\t\twhile $F2921 ( iterator ) { \n\t\t\t\tRecord record = ( Record ) iterator . next ( ) ; \n\t\t\t\tFmRadioListener listener = record . mCallback ; \n\t\t\t\tif ( listener == null ) { \n\t\t\t\t\t$F7042 ( iterator ) $F665 } \n\t\t\t\tlistener . onCallBack ( bundle ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public double elasticity ( final double spot ) { \n\t$F59591 ( val , value ) final double del = delta ( spot ) ; \n\tif ( val > Constants . QL_EPSILON ) return del / val * spot ; \n\telse if ( Math . abs ( del ) < Constants . QL_EPSILON ) $F1082 else if ( del > NUM00 ) return Double . MAX_VALUE ; \n\telse return Double . MIN_VALUE ; \n\t} \n"}, {"code": "private $F96 entityToBytes ( HttpEntity entity , Request request ) throws IOException , ServerError { \n\tPoolingByteArrayOutputStream bytes = new PoolingByteArrayOutputStream ( mPool , ( int ) entity . getContentLength ( ) ) ; \n\t$F5475 ( buffer ) try { \n\t\tInputStream in = entity . getContent ( ) ; \n\t\tif ( in == null ) { \n\t\t\tthrow new ServerError $F72 ; \n\t\t\t} \n\t\tbuffer = mPool . getBuf ( NUM00 ) ; \n\t\tint progress = NUM00 ; \n\t\tint count ; \n\t\twhile $F18067 ( count , in , buffer ) { \n\t\t\t$F11584 ( bytes , buffer , count ) progress += count ; \n\t\t\trequest . progressUpdate ( progress ) ; \n\t\t\t} \n\t\t$F11316 ( bytes ) } \n\tfinally { \n\t\ttry { \n\t\t\tentity . consumeContent ( ) ; \n\t\t\t} \n\t\tcatch ( IOException e ) $F100676 ( VinciLog ) mPool . returnBuf ( buffer ) ; \n\t\t$F59 ( bytes ) } \n\t} \n"}, {"code": "$F1 public Foo fetchByUuid_First $F127587 ( uuid , orderByComparator ) $F127590 ( list , findByUuid , uuid , orderByComparator ) "}, {"code": "public static float roundDecimal ( float value ) { \n\treturn roundDecimal ( value , Math . log10 ( INT_PRECISION ) ) ; \n\t} \n"}, {"code": "@ AssistedInject public RunnerImpl ( $F1113 RunnerLocalizationConstant locale , $F1113 RunnerCounter runnerCounter , $F1113 GetEnvironmentsUtil util , $F1113 @ Assisted RunOptions runOptions , $F1113 @ Assisted Scope environmentScope , $F5466 @ Assisted String environmentName ) { \n\tthis . runOptions = runOptions ; \n\tthis . ram = runOptions . getMemorySize ( ) ; \n\tthis . title = RUNNER_NAME + runnerCounter . getRunnerNumber ( ) + ( environmentName == null ? NUM00 : NUM00 + getCorrectName ( environmentName ) ) ; \n\tthis . activeTab = locale . runnerTabConsole ( ) ; \n\tthis . status = IN_QUEUE ; \n\tthis . scope = environmentScope ; \n\t$F3224 ( creationTime , System ) String environmentId = runOptions . getEnvironmentId ( ) ; \n\tif ( environmentId == null || environmentId . startsWith ( NUM00 ) ) { \n\t\tthis . type = util . getType ( ) ; \n\t\t} \n\telse { \n\t\tthis . type = util . getCorrectCategoryName ( runOptions . getEnvironmentId ( ) ) ; \n\t\t} \n\tif ( environmentId != null ) { \n\t\trunOptions . setEnvironmentId ( environmentId ) ; \n\t\t} \n\t} \n"}, {"code": "public String globalInfo $F72 $F11287 "}, {"code": "public static boolean isWindowsMe $F72 $F98764 ( osName , osVersion ) "}, {"code": "private String dateToString ( Date input ) { \n\tif ( input == null ) $F1337 else $F2495 ( input ) } \n"}, {"code": "private static int componentSize ( Component component , FormSpec formSpec , int cellSize , FormLayout . Measure minMeasure , FormLayout . Measure prefMeasure ) { \n\tif ( formSpec == null ) { \n\t\treturn prefMeasure . sizeOf ( component ) ; \n\t\t} \n\telse if ( formSpec . getSize ( ) == Sizes . MINIMUM ) { \n\t\treturn minMeasure . sizeOf ( component ) ; \n\t\t} \n\telse if ( formSpec . getSize ( ) == Sizes . PREFERRED ) { \n\t\treturn prefMeasure . sizeOf ( component ) ; \n\t\t} \n\telse { \n\t\treturn Math . min ( cellSize , prefMeasure . sizeOf ( component ) ) ; \n\t\t} \n\t} \n"}, {"code": "protected synchronized void start ( long curPrimaryGen ) throws IOException { \n\tif ( state . equals ( NUM00 ) == _BOOL ) $F4639 message ( NUM00 ) ; \n\ttry { \n\t\tString segmentsFileName = SegmentInfos . getLastCommitSegmentsFileName ( dir ) ; \n\t\tlong maxPendingGen = - NUM00 ; \n\t\tfor ( String fileName : dir . listAll ( ) ) { \n\t\t\tif ( fileName . startsWith ( IndexFileNames . PENDING_SEGMENTS ) ) { \n\t\t\t\tlong gen = Long . parseLong ( fileName . substring ( IndexFileNames . PENDING_SEGMENTS . length ( ) + NUM00 ) , Character . MAX_RADIX ) ; \n\t\t\t\t$F12283 ( gen , maxPendingGen ) } \n\t\t\t} \n\t\tSegmentInfos infos ; \n\t\tif ( segmentsFileName == null ) { \n\t\t\tinfos = new SegmentInfos $F72 ; \n\t\t\tmessage ( NUM00 ) ; \n\t\t\t} \n\t\telse { \n\t\t\tmessage ( NUM00 + segmentsFileName ) ; \n\t\t\tinfos = SegmentInfos . readCommit ( dir , segmentsFileName ) ; \n\t\t\tmessage ( $F369 ( infos ) + infos . getVersion ( ) ) ; \n\t\t\t$F6877 indexFiles = infos . files ( _BOOL ) ; \n\t\t\tlastCommitFiles . add ( segmentsFileName ) ; \n\t\t\tlastCommitFiles . addAll ( indexFiles ) ; \n\t\t\tdeleter . incRef ( lastCommitFiles ) ; \n\t\t\tlastNRTFiles . addAll ( indexFiles ) ; \n\t\t\tdeleter . incRef ( lastNRTFiles ) ; \n\t\t\tmessage ( NUM00 + lastCommitFiles ) ; \n\t\t\tmessage ( NUM00 + lastNRTFiles ) ; \n\t\t\t} \n\t\tmessage ( NUM00 + Arrays . toString ( dir . listAll ( ) ) ) ; \n\t\tdeleter . deleteUnknownFiles ( segmentsFileName ) ; \n\t\tmessage ( NUM00 + Arrays . toString ( dir . listAll ( ) ) ) ; \n\t\tString s = infos . getUserData ( ) . get ( PRIMARY_GEN_KEY ) ; \n\t\tlong myPrimaryGen ; \n\t\tif ( s == null ) { \n\t\t\tassert $F10470 ( infos ) ; \n\t\t\tmyPrimaryGen = - NUM00 ; \n\t\t\t} \n\t\telse $F174805 ( myPrimaryGen , Long , s ) message ( NUM00 + myPrimaryGen ) ; \n\t\tboolean doCommit ; \n\t\tif ( $F3816 ( infos ) && myPrimaryGen != - NUM00 && myPrimaryGen != curPrimaryGen ) { \n\t\t\tassert myPrimaryGen < curPrimaryGen ; \n\t\t\t$F132947 ( initSyncStartNS , System ) $F25590 ( message , myPrimaryGen , curPrimaryGen ) CopyJob job = null ; \n\t\t\tmessage ( NUM00 + segmentsFileName ) ; \n\t\t\tassert deleter . getRefCount ( segmentsFileName ) == NUM00 ; \n\t\t\tdeleter . decRef ( Collections . singleton ( segmentsFileName ) ) ; \n\t\t\tif ( dir instanceof FSDirectory && ( ( FSDirectory ) dir ) . checkPendingDeletions ( ) ) $F5754 ( segmentsFileName ) $F12396 ( didRemove , lastCommitFiles , segmentsFileName ) assert didRemove ; \n\t\t\twhile ( _BOOL ) { \n\t\t\t\tjob = newCopyJob ( NUM00 + name ( ) + NUM00 + infos . getVersion ( ) , null , null , _BOOL , null ) ; \n\t\t\t\t$F2346 ( job ) message ( NUM00 + job . getCopyState ( ) . version ) ; \n\t\t\t\ttry { \n\t\t\t\t\tjob . runBlocking ( ) ; \n\t\t\t\t\t$F1571 ( job ) $F597 } \n\t\t\t\tcatch ( IOException ioe ) { \n\t\t\t\t\tjob . cancel ( NUM00 , ioe ) ; \n\t\t\t\t\tif ( ioe . getMessage ( ) . contains ( NUM00 ) ) $F47196 ( message , ioe ) else { \n\t\t\t\t\t\tthrow ioe ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tlastPrimaryGen = job . getCopyState ( ) . primaryGen ; \n\t\t\t$F96 infosBytes = job . getCopyState ( ) . infosBytes ; \n\t\t\tSegmentInfos syncInfos = SegmentInfos . readCommit ( dir , new BufferedChecksumIndexInput ( new ByteArrayIndexInput ( NUM00 , job . getCopyState ( ) . infosBytes ) ) , job . getCopyState ( ) . gen ) ; \n\t\t\tsyncInfos . updateGeneration ( infos ) ; \n\t\t\tinfos = syncInfos ; \n\t\t\tassert infos . getVersion ( ) == job . getCopyState ( ) . version ; \n\t\t\tmessage ( NUM00 + infos . getVersion ( ) + NUM00 + infos . toString ( ) ) ; \n\t\t\tmessage ( NUM00 + job . getFileNames ( ) ) ; \n\t\t\tdeleter . incRef ( job . getFileNames ( ) ) ; \n\t\t\tmessage ( NUM00 + lastNRTFiles ) ; \n\t\t\tdeleter . decRef ( lastNRTFiles ) ; \n\t\t\t$F725 ( lastNRTFiles ) lastNRTFiles . addAll ( job . getFileNames ( ) ) ; \n\t\t\tmessage ( NUM00 + lastNRTFiles ) ; \n\t\t\tlastFileMetaData = job . getCopyState ( ) . files ; \n\t\t\tmessage ( String . format ( Locale . ROOT , NUM00 , id , $F171135 ( System , initSyncStartNS ) , bytesToString ( job . getTotalBytesCopied ( ) ) , job . getCopyState ( ) . version ) ) ; \n\t\t\tdoCommit = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\tdoCommit = _BOOL ; \n\t\t\tlastPrimaryGen = curPrimaryGen ; \n\t\t\tmessage ( NUM00 ) ; \n\t\t\t} \n\t\tif ( infos . getGeneration ( ) < maxPendingGen ) { \n\t\t\tmessage ( NUM00 + infos . getGeneration ( ) + NUM00 + maxPendingGen ) ; \n\t\t\tinfos . setNextWriteGeneration ( maxPendingGen ) ; \n\t\t\t} \n\t\tsendNewReplica ( ) ; \n\t\tmgr = new SegmentInfosSearcherManager ( dir , this , infos , searcherFactory ) ; \n\t\tIndexSearcher searcher = mgr . acquire ( ) ; \n\t\ttry { \n\t\t\tint hitCount = searcher . count ( new TermQuery ( new Term $F6600 ) ) ; \n\t\t\tmessage ( NUM00 + hitCount + NUM00 + ( ( DirectoryReader ) searcher . getIndexReader ( ) ) . getVersion ( ) ) ; \n\t\t\t} \n\t\tfinally { \n\t\t\tmgr . release ( searcher ) ; \n\t\t\t} \n\t\t$F8801 ( doCommit , commit ) message ( NUM00 ) ; \n\t\tstate = NUM00 ; \n\t\t} \n\tcatch ( Throwable t ) { \n\t\tif ( t . getMessage ( ) . startsWith ( NUM00 ) == _BOOL ) { \n\t\t\tmessage ( NUM00 ) ; \n\t\t\tt . printStackTrace ( printStream ) ; \n\t\t\t} \n\t\telse $F881 ( dir ) IOUtils . reThrow ( t ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isSameElementType ( ASTNode node1 , ASTNode node2 ) { \n\treturn node1 != null && node2 != null && node1 . getElementType ( ) == node1 . getElementType ( ) ; \n\t} \n"}, {"code": "$F1 public LogMessage readNextLogMessage $F72 { \n\ttry { \n\t\t$F1338 ( reader ) while ( _BOOL ) { \n\t\t\t$F27015 ( line , reader ) if ( line == null ) { \n\t\t\t\tclose ( ) ; \n\t\t\t\tif ( currentLog != null && matchRegex ( currentLog ) ) { \n\t\t\t\t\tincrementLogCount ( currentLog ) ; \n\t\t\t\t\treturn currentLog ; \n\t\t\t\t\t} \n\t\t\t\t$F1274 } \n\t\t\tfileLineNumber ++ ; \n\t\t\tLogMessage nextLog = null ; \n\t\t\tif ( parser != null ) { \n\t\t\t\tnextLog = parser . parseLine ( line , request ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tfor ( LogParser parser : parserTable ) { \n\t\t\t\t\tnextLog = parser . parseLine ( line , request ) ; \n\t\t\t\t\tif ( ! nextLog . isContinuation ( ) ) { \n\t\t\t\t\t\tthis . parser = parser ; \n\t\t\t\t\t\t$F597 } \n\t\t\t\t\t} \n\t\t\t\tif ( nextLog == null || nextLog . isContinuation ( ) ) { \n\t\t\t\t\tstatus . appendInfo ( this . filePath , fileLineNumber ) ; \n\t\t\t\t\t$F598 } \n\t\t\t\t} \n\t\t\tif ( nextLog . isContinuation ( ) ) { \n\t\t\t\tif ( currentLog != null ) { \n\t\t\t\t\tcurrentLog . appendMessage ( LogUtil . stringToBytes ( line ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if ( nextLog . isRejected ( ) ) { \n\t\t\t\tif ( currentLog != null ) { \n\t\t\t\t\tLogMessage returnedLog = currentLog ; \n\t\t\t\t\tcurrentLog = null ; \n\t\t\t\t\tif ( matchRegex ( returnedLog ) ) { \n\t\t\t\t\t\tincrementLogCount ( returnedLog ) ; \n\t\t\t\t\t\treturn returnedLog ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if ( nextLog . isRejectedLast ( ) ) { \n\t\t\t\tif ( currentLog != null ) { \n\t\t\t\t\tLogMessage returnedLog = currentLog ; \n\t\t\t\t\tcurrentLog = null ; \n\t\t\t\t\tif ( matchRegex ( returnedLog ) ) { \n\t\t\t\t\t\tincrementLogCount ( returnedLog ) ; \n\t\t\t\t\t\treturn returnedLog ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t$F597 } \n\t\t\telse { \n\t\t\t\tif ( currentLog != null ) { \n\t\t\t\t\tLogMessage returnedLog = currentLog ; \n\t\t\t\t\tcurrentLog = nextLog ; \n\t\t\t\t\tif ( returnedLog . isHeader ( ) && currentLog . isHeader ( ) ) $F1448 if ( matchRegex ( returnedLog ) ) { \n\t\t\t\t\t\tincrementLogCount ( returnedLog ) ; \n\t\t\t\t\t\treturn returnedLog ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tcurrentLog = nextLog ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( IOException e ) { \n\t\tstatus . appendErrFileName ( filePath ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public void appendDataTo ( StringBuilder stringBuilder ) $F288 ( stringBuilder , buffer ) "}, {"code": "$F26560 ( requestMethod , responseCode , Request , HttpStatus ) "}, {"code": "private void loadBinary ( DataInputStream is ) throws IOException { \n\t$F480223 ( is , MAGIC ) $F480223 ( is , VERSION ) $F5961 ( continuityWeight , is ) $F5961 ( optimalCoupling , is ) $F5961 ( extendSelections , is ) $F5961 ( joinMethod , is ) $F5961 ( joinWeightShift , is ) $F5952 ( weightLength , is ) $F3936 ( joinWeights , weightLength ) for ( $F1139 ( i , joinWeights ) ) { \n\t\t$F114160 ( joinWeights , i , is ) } \n\t$F5952 ( unitsLength , is ) units = new DatabaseClusterUnit [ unitsLength ] ; \n\tfor ( $F1139 ( i , units ) ) { \n\t\tunits [ i ] = new DatabaseClusterUnit ( is ) ; \n\t\t} \n\t$F5952 ( unitTypesLength , is ) unitTypes = new UnitType [ unitTypesLength ] ; \n\tfor ( $F1139 ( i , unitTypes ) ) { \n\t\tunitTypes [ i ] = new UnitType ( is ) ; \n\t\t} \n\tsts = new SampleSet ( is ) ; \n\tmcep = new SampleSet ( is ) ; \n\t$F5952 ( numCarts , is ) $F12775 ( cartMap ) for ( $F119 ( i , numCarts ) ) { \n\t\t$F19101 ( name , Utilities , is ) CART cart = CARTImpl . loadBinary ( is ) ; \n\t\tcartMap . put ( name , cart ) ; \n\t\t$F13265 ( defaultCart , cart ) } \n\t} \n"}, {"code": "public static String toString ( long l ) { \n\tif ( l < NUMBERS_MIN || l > NUMBERS_MAX ) { \n\t\treturn Long . toString ( l , NUM00 ) ; \n\t\t} \n\treturn NUMBERS [ ( int ) l ] ; \n\t} \n"}, {"code": "$F1 public synchronized void reset $F72 { \n\tpos = NUM00 ; \n\t} \n"}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "$F27671 ( in , buffer , result ) "}, {"code": "$F144297 ( file , data , write , Charset , _BOOL ) "}, {"code": "protected boolean isIDPProxyEnabled ( FSAuthnRequest authnRequest ) throws FSException { \n\tif ( authnRequest . getMinorVersion ( ) != IFSConstants . FF_12_PROTOCOL_MINOR_VERSION ) { \n\t\treturn _BOOL ; \n\t\t} \n\tFSScoping scoping = authnRequest . getScoping ( ) ; \n\tif ( scoping != null && scoping . getProxyCount ( ) == NUM00 ) { \n\t\treturn _BOOL ; \n\t\t} \n\tString enabledString = IDFFMetaUtils . getFirstAttributeValueFromConfig ( spConfig , IFSConstants . ENABLE_IDP_PROXY ) ; \n\tif $F153572 ( enabledString ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "private void compileProlog ( ObjectId prolog , File tempDir ) throws IOException , CompileException { \n\tFile tempRules = copyToTempFile ( prolog , tempDir ) ; \n\ttry { \n\t\tCompiler comp = new Compiler $F72 ; \n\t\tcomp . prologToJavaSource ( tempRules . getPath ( ) , tempDir . getPath ( ) ) ; \n\t\t} \n\t$F105993 ( tempRules ) } \n"}, {"code": "public Spring removeAllListeners $F72 $F68437 ( mListeners , this ) "}, {"code": "public SelectionInputDialog ( Window owner , String key , boolean editable , $F10809 selectionValues , T initialSelectionValue , InputValidator $F4203 inputValidator , Object ... keyArguments ) { \n\tthis ( owner , key , selectionValues , initialSelectionValue , inputValidator , keyArguments ) ; \n\tcomboBox . setEditable ( editable ) ; \n\t} \n"}, {"code": "public void build ( SolrCore core , SolrIndexSearcher searcher ) throws IOException { \n\t$F973 ( LOG ) dictionary = dictionaryFactory . create ( core , searcher ) ; \n\tlookup . build ( dictionary ) ; \n\tif ( storeDir != null ) { \n\t\tFile target = new File ( storeDir , factory . storeFileName ( ) ) ; \n\t\tif ( ! lookup . store ( new FileOutputStream ( target ) ) ) $F21338 ( LOG ) else { \n\t\t\t$F36580 ( LOG , target ) } \n\t\t} \n\t} \n"}, {"code": "public static String convertClassNameToResourcePath ( String className ) { \n\t$F18062 ( Assert , className ) $F11446 ( className ) } \n"}, {"code": "public URI $F1947 ( scheme , schemeSpecificPart , fragment ) throws URISyntaxException { \n\t$F83 ( uri ) $F43191 ( scheme , uri ) $F189367 ( schemeSpecificPart , ALL_LEGAL_ENCODER , uri ) $F189369 ( fragment , uri , ALL_LEGAL_ENCODER ) $F25731 ( parseURI , uri , _BOOL ) } \n"}, {"code": "private int addToPopulation ( Solution solution ) { \n\tint id = nextFreeId ( ) ; \n\tsolutions . put ( id , solution ) ; \n\treturn id ; \n\t} \n"}, {"code": "public $F96 toByteArray $F72 $F54348 ( Arrays , buf , cnt ) "}, {"code": "public void createDiskAsync ( final String projectId , final DiskCreateSpec diskCreateSpec , $F67201 ( responseCallback ) ) throws IOException { \n\tfinal String path = String . format ( NUM00 , getBasePath ( ) , projectId ) ; \n\tcreateObjectAsync ( path , serializeObjectAsJson ( diskCreateSpec ) , responseCallback ) ; \n\t} \n"}, {"code": "$F1 public boolean domainMatch $F2236 ( host , domain ) { \n\treturn host . endsWith ( domain ) ; \n\t} \n"}, {"code": "public synchronized void disableAttribute ( String name ) $F130709 ( enabledAttributes , name ) "}, {"code": "$F32632 ( criteria , createCriteriaInternal , oredCriteria ) "}, {"code": "public void push ( final Handle handle ) $F31345 ( mv , handle ) "}, {"code": "$F1309 public static String encodePostBody ( Bundle parameters , String boundary ) { \n\t$F1747 ( parameters ) $F83 ( sb ) for ( $F3465 ( key , parameters ) ) { \n\t\t$F16628 ( parameter , parameters , key ) if $F223789 ( parameter ) $F1448 sb . append ( NUM00 + key + NUM00 + ( String ) parameter ) ; \n\t\tsb . append ( NUM00 + NUM00 + boundary + NUM00 ) ; \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "public static IFitsHeader lookup ( String key ) { \n\t$F1749 ( keyLength , key ) if ( keyLength > NUM00 && Character . isDigit ( key . charAt ( keyLength - NUM00 ) ) ) { \n\t\t$F83 ( builder ) for ( $F119 ( index , keyLength ) ) { \n\t\t\t$F1280 ( character , key , index ) if $F119844 ( Character , character ) { \n\t\t\t\tif ( $F43582 ( builder ) ) $F86 ( builder ) } \n\t\t\telse $F288 ( builder , character ) } \n\t\treturn $F5173 ( STANDARD_KEYS , builder ) ; \n\t\t} \n\t$F8313 ( STANDARD_KEYS , key ) } \n"}, {"code": "private static void assertChangeEvents ( $F101180 earlyEvents , $F101180 lateEvents , $F101180 anytimeEvents , $F101180 actualEvents ) { \n\tString inputDesc = String . format ( NUM00 + NUM00 , earlyEvents , lateEvents , anytimeEvents , actualEvents ) ; \n\t$F101193 ( early , earlyEvents ) $F101193 ( late , lateEvents ) $F101193 ( any , anytimeEvents ) $F101197 ( ev , early , assertFalse , late , any ) $F101197 ( ev , late , assertFalse , early , any ) $F101197 ( ev , any , assertFalse , early , late ) for ( PortChangeEvent a : actualEvents ) { \n\t\tif $F16914 ( early , a ) $F1448 if $F16914 ( any , a ) $F1448 if $F16914 ( late , a ) { \n\t\t\tif $F5973 ( early ) { \n\t\t\t\tfail ( a + NUM00 + NUM00 + inputDesc ) ; \n\t\t\t\t} \n\t\t\telse $F1448 } \n\t\tfail ( a + NUM00 + inputDesc ) ; \n\t\t} \n\t$F101205 ( early , fail , inputDesc ) $F101205 ( late , fail , inputDesc ) $F101205 ( any , fail , inputDesc ) } \n"}, {"code": "$F1 public void write ( Kryo kryo , Output output ) { \n\t$F115 ( size , index ) output . writeInt ( size + NUM00 , _BOOL ) ; \n\tfor ( $F1316 ( i , size ) ) { \n\t\t$F1729 ( s , index , i ) if ( s == null ) { \n\t\t\tthrow new RuntimeException $F96141 ( Integer , i ) ; \n\t\t\t} \n\t\toutput . writeString ( s ) ; \n\t\t} \n\t} \n"}, {"code": "public final ObjectProperty < Control > toggleNodeProperty $F72 { \n\treturn this . toggleNode ; \n\t} \n"}, {"code": "private static int decodeOctets ( int i , ByteBuffer bb , StringBuilder sb ) { \n\tif ( bb . limit ( ) == NUM00 && ( bb . get ( NUM00 ) & NUM00 ) < NUM00 ) { \n\t\tsb . append ( ( char ) bb . get ( NUM00 ) ) ; \n\t\treturn i + NUM00 ; \n\t\t} \n\telse { \n\t\tCharBuffer cb = UTF_8_CHARSET . decode ( bb ) ; \n\t\t$F11659 ( sb , cb ) return i + bb . limit ( ) * NUM00 - NUM00 ; \n\t\t} \n\t} \n"}, {"code": "public ArrayFieldVector ( FieldVector $F4203 v1 , $F10809 v2 ) throws NullArgumentException { \n\tMathUtils . checkNotNull ( v1 ) ; \n\tMathUtils . checkNotNull ( v2 ) ; \n\tfield = v1 . getField ( ) ; \n\tfinal $F10809 v1Data = ( v1 instanceof ArrayFieldVector ) ? ( ( ArrayFieldVector $F4203 ) v1 ) . data : v1 . toArray ( ) ; \n\tdata = MathArrays . buildArray ( field , v1Data . length + v2 . length ) ; \n\t$F7057 ( System , v1Data , data ) $F11244 ( System , v2 , data , v1Data ) } \n"}, {"code": "public void reverse $F72 { \n\tfinal $F113171 animators = mAnimatedVectorState . mAnimators ; \n\t$F11550 ( size , animators ) for ( $F119 ( i , size ) ) { \n\t\tfinal Animator animator = animators . get ( i ) ; \n\t\tif ( canReverse ( animator ) ) { \n\t\t\treverse ( animator ) ; \n\t\t\t} \n\t\telse $F6174 ( Log , LOG_TAG ) } \n\t} \n"}, {"code": "public void start $F72 { \n\t$F135851 ( sLogger ) mCleanupExecutor = Executors . newSingleThreadExecutor ( ) ; \n\tif ( ! mObserverIsRegistered ) { \n\t\tmContactsContractObserver = new ContactsContractObserver ( new Handler $F72 ) ; \n\t\tmContactsContractCursor = mContentResolver . query ( Phone . CONTENT_URI , null , null , null , null ) ; \n\t\tCursorUtil . assertCursorIsNotNull ( mContactsContractCursor , Phone . CONTENT_URI ) ; \n\t\tmContactsContractCursor . registerContentObserver ( mContactsContractObserver ) ; \n\t\tmObserverIsRegistered = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "protected final void fireVetoableChange $F21013 ( propertyName , oldValue , newValue ) throws PropertyVetoException $F71527 ( fireVetoableChange , propertyName , Double , oldValue , newValue ) "}, {"code": "public void testLMDirichlet $F72 throws IOException { \n\tfloat p = ( FREQ + NUM00 * ( TOTAL_TERM_FREQ + NUM00 ) / ( NUMBER_OF_FIELD_TOKENS + NUM00 ) ) / ( DOC_LEN + NUM00 ) ; \n\tfloat a = NUM00 / ( DOC_LEN + NUM00 ) ; \n\tfloat gold = ( float ) ( Math . log ( p / ( a * ( TOTAL_TERM_FREQ + NUM00 ) / ( NUMBER_OF_FIELD_TOKENS + NUM00 ) ) ) + Math . log ( a ) ) ; \n\tcorrectnessTestCore ( new LMDirichletSimilarity $F72 , gold ) ; \n\t} \n"}, {"code": "public void onSinksReceived ( String sourceUrn , List < MediaSink > sinks ) { \n\tmSinks . put ( sourceUrn , sinks ) ; \n\tnativeOnSinksReceived ( mNativeMediaRouterAndroid , sourceUrn , sinks . size ( ) ) ; \n\t} \n"}, {"code": "public User toEntity ( UserDTO dto ) $F41330 ( toEntity , dto ) "}, {"code": "protected void writeExternalForeignKeyDropStmt ( Table table , ForeignKey foreignKey , StringBuilder ddl ) { \n\twriteTableAlterStmt ( table , ddl ) ; \n\t$F84 ( ddl ) printIdentifier ( getForeignKeyName ( table , foreignKey ) , ddl ) ; \n\tprintEndOfStatement ( ddl ) ; \n\t} \n"}, {"code": "public void obtain ( long timeout_ms ) throws IOException , InterruptedException , TimeoutException { \n\tLong quit_time = System . currentTimeMillis ( ) + timeout_ms ; \n\tif ( fileLock != null && fileLock . isValid ( ) ) $F932 do { \n\t\ttry { \n\t\t\tfileLock = fileToLock . tryLock ( ) ; \n\t\t\t$F665 } \n\t\tcatch ( OverlappingFileLockException e ) $F31130 ( Thread ) } \n\twhile $F139818 ( System , quit_time ) ; \n\t$F175728 } \n"}, {"code": "$F1309 public void pointToData ( Data o ) throws FitsException { \n\to . fillHeader ( this ) ; \n\t} \n"}, {"code": "$F1113 protected VirtualFile [ ] collectAffectedFiles ( $F1113 Project project , $F1113 VirtualFile [ ] files ) { \n\tList $F85423 affectedFiles = new ArrayList $F85423 ( files . length ) ; \n\t$F156 ( projectLevelVcsManager , ProjectLevelVcsManager , project ) for ( VirtualFile file : files ) { \n\t\tif ( $F4925 ( file ) && projectLevelVcsManager . getVcsFor ( file ) instanceof GitVcs ) $F207 ( affectedFiles , file ) else if ( file . isDirectory ( ) && isRecursive ( ) ) { \n\t\t\taddChildren ( project , affectedFiles , file ) ; \n\t\t\t} \n\t\t} \n\treturn VfsUtilCore . toVirtualFileArray ( affectedFiles ) ; \n\t} \n"}, {"code": "public void updatePosition ( Particle particle , long elapsedTime ) { \n\tVector3f speed = particle . getSpeed ( ) ; \n\tfloat delta = elapsedTime / NUM00 ; \n\tfloat dx = speed . x * delta ; \n\tfloat dy = speed . y * delta ; \n\tfloat dz = speed . z * delta ; \n\tVector3f pos = particle . getPosition ( ) ; \n\tparticle . setPosition ( pos . x + dx , pos . y + dy , pos . z + dz ) ; \n\t} \n"}, {"code": "protected void update ( int length ) { \n\t$F725 ( tickLabelValues ) $F725 ( tickLabels ) $F725 ( tickLabelPositions ) if ( scale . isLogScaleEnabled ( ) ) { \n\t\tupdateTickLabelForLogScale ( length ) ; \n\t\t} \n\telse { \n\t\tupdateTickLabelForLinearScale ( length ) ; \n\t\t} \n\tupdateTickVisibility ( ) ; \n\tupdateTickLabelMaxLengthAndHeight ( ) ; \n\t} \n"}, {"code": "private static boolean isWithinBounds ( VisualPosition targetPosition , VisualPosition startPosition , VisualPosition endPosition ) { \n\treturn targetPosition . line >= startPosition . line && targetPosition . line <= endPosition . line && targetPosition . column >= startPosition . column && targetPosition . column <= endPosition . column ; \n\t} \n"}, {"code": "static public void assertStatementIndicesConsistent ( final AbstractTripleStore db , final int maxerrors ) { \n\t$F140706 ( log ) $F127413 ( nerrs ) final int from , to ; \n\tif ( db . getSPOKeyArity ( ) == NUM00 ) { \n\t\tfrom = SPOKeyOrder . FIRST_TRIPLE_INDEX ; \n\t\tto = SPOKeyOrder . LAST_TRIPLE_INDEX ; \n\t\t} \n\telse { \n\t\tfrom = SPOKeyOrder . FIRST_QUAD_INDEX ; \n\t\tto = SPOKeyOrder . LAST_QUAD_INDEX ; \n\t\t} \n\tfor ( int i = from ; \n\ti <= to ; \n\ti ++ ) { \n\t\tfor ( int j = from ; \n\t\tj <= to ; \n\t\tj ++ ) { \n\t\t\tif ( i <= j ) $F1448 assertSameStatements ( db , SPOKeyOrder . valueOf ( i ) , SPOKeyOrder . valueOf ( j ) , nerrs , maxerrors ) ; \n\t\t\t} \n\t\t} \n\t$F127421 ( assertEquals , nerrs ) } \n"}, {"code": "public void show ( $F37019 final int itemId ) { \n\tmap . add ( itemId ) ; \n\tnavigation . invalidateBadge ( itemId ) ; \n\t} \n"}, {"code": "public Options put ( String option , Integer value ) { \n\tif ( value == null ) $F4915 ( remove , option ) $F186791 ( options , option , value ) return this ; \n\t} \n"}, {"code": "private int determineTargetPage ( int currentPage , float pageOffset , int velocity , int deltaX ) { \n\tint targetPage ; \n\tif ( Math . abs ( deltaX ) > flingDistance && Math . abs ( velocity ) > minimumVelocity ) { \n\t\tif ( virtualPos < NUM00 ) { \n\t\t\ttargetPage = velocity > NUM00 ? currentPage : currentPage + NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\ttargetPage = velocity > NUM00 ? currentPage + NUM00 : currentPage ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tfinal float truncator = currentPage >= currentItem ? NUM00 : NUM00 ; \n\t\ttargetPage = ( int ) ( currentPage + pageOffset + truncator ) ; \n\t\t} \n\tif $F3817 ( items ) { \n\t\tfinal ItemInfo firstItem = items . get ( NUM00 ) ; \n\t\tfinal ItemInfo $F7662 ( lastItem , items ) ; \n\t\ttargetPage = Math . max ( firstItem . position , Math . min ( targetPage , lastItem . position ) ) ; \n\t\t} \n\tif ( targetPage > currentPage && onCardChangeListener != null ) { \n\t\tonCardChangeListener . onCardDismissed ( currentPage , virtualPos > NUM00 ) ; \n\t\t} \n\treturn targetPage ; \n\t} \n"}, {"code": "protected String form ( ObjectMatrix1D matrix , int index , Former formatter ) { \n\t$F16628 ( value , matrix , index ) $F1747 ( value ) $F33236 ( String , value ) } \n"}, {"code": "public void clone ( Vector3f source ) { \n\tSystem . arraycopy ( source . points , NUM00 , points , NUM00 , NUM00 ) ; \n\t} \n"}, {"code": "public void disable ( BluetoothAdapter adapter ) { \n\tint mask = ( BluetoothReceiver . STATE_TURNING_OFF_FLAG | BluetoothReceiver . STATE_OFF_FLAG | BluetoothReceiver . SCAN_MODE_NONE_FLAG ) ; \n\tlong start = - NUM00 ; \n\tBluetoothReceiver receiver = getBluetoothReceiver ( mask ) ; \n\tint state = adapter . getState ( ) ; \n\tswitch ( state ) { \n\t\tcase BluetoothAdapter . STATE_OFF : assertFalse ( adapter . isEnabled ( ) ) ; \n\t\tremoveReceiver ( receiver ) ; \n\t\t$F665 case BluetoothAdapter . STATE_TURNING_ON : assertFalse ( adapter . isEnabled ( ) ) ; \n\t\t$F3224 ( start , System ) $F597 case BluetoothAdapter . STATE_ON : assertTrue ( adapter . isEnabled ( ) ) ; \n\t\t$F3224 ( start , System ) assertTrue ( adapter . disable ( ) ) ; \n\t\t$F597 case BluetoothAdapter . STATE_TURNING_OFF : assertFalse ( adapter . isEnabled ( ) ) ; \n\t\tmask = NUM00 ; \n\t\t$F597 $F1267 removeReceiver ( receiver ) ; \n\t\t$F14354 ( fail , String , state ) } \n\t$F657 ( s , System ) while $F164541 ( System , s , ENABLE_DISABLE_TIMEOUT ) { \n\t\tstate = adapter . getState ( ) ; \n\t\tif ( state == BluetoothAdapter . STATE_OFF && ( receiver . getFiredFlags ( ) & mask ) == mask ) { \n\t\t\tassertFalse ( adapter . isEnabled ( ) ) ; \n\t\t\tlong finish = receiver . getCompletedTime ( ) ; \n\t\t\tif $F6099 ( start , finish ) { \n\t\t\t\twriteOutput ( String . format ( NUM00 , ( finish - start ) ) ) ; \n\t\t\t\t} \n\t\t\telse $F1210 ( writeOutput ) removeReceiver ( receiver ) ; \n\t\t\t$F665 } \n\t\tsleep ( POLL_TIME ) ; \n\t\t} \n\tint firedFlags = receiver . getFiredFlags ( ) ; \n\tremoveReceiver ( receiver ) ; \n\tfail ( String . format ( NUM00 , state , BluetoothAdapter . STATE_OFF , firedFlags , mask ) ) ; \n\t} \n"}, {"code": "public static String toRegex ( String glob , String separator ) { \n\tcheckNotNull ( separator , NUM00 ) ; \n\tcheckArgument ( $F1276 ( separator ) , NUM00 , separator ) ; \n\treturn toRegex ( glob , separator . charAt ( NUM00 ) ) ; \n\t} \n"}, {"code": "protected void forceNoLoss ( boolean value ) $F845 "}, {"code": "public static $F806 splitWithoutEscaped ( String str , char separatorChar , boolean retainEmpty ) { \n\t$F1749 ( len , str ) if ( len == NUM00 ) { \n\t\treturn $F382 ; \n\t\t} \n\t$F10144 ( list ) int i = NUM00 ; \n\tint start = NUM00 ; \n\tboolean match = _BOOL ; \n\twhile ( i < len ) { \n\t\tif $F11983 ( str , i ) { \n\t\t\tmatch = _BOOL ; \n\t\t\ti += NUM00 ; \n\t\t\t} \n\t\telse if $F44927 ( str , i , separatorChar ) { \n\t\t\tif ( retainEmpty || match ) { \n\t\t\t\t$F56997 ( list , str , start , i ) match = _BOOL ; \n\t\t\t\t} \n\t\t\tstart = ++ i ; \n\t\t\t} \n\t\telse { \n\t\t\tmatch = _BOOL ; \n\t\t\ti ++ ; \n\t\t\t} \n\t\t} \n\tif ( retainEmpty || match ) { \n\t\t$F56997 ( list , str , start , i ) } \n\t$F14862 ( list ) } \n"}, {"code": "private static HashMap < BasicBlockPair , $F92979 > findSplitPoints ( IR ir , LiveAnalysis live , LSTGraph lst ) { \n\tHashMap < BasicBlockPair , $F92979 > result = new HashMap < BasicBlockPair , $F92979 > $F989 ; \n\tfor ( $F245865 e = lst . enumerateNodes ( ) ; \n\te . hasMoreElements ( ) ; \n\t) { \n\t\tLSTNode node = ( LSTNode ) e . nextElement ( ) ; \n\t\tBasicBlock header = node . getHeader ( ) ; \n\t\tBitVector loop = node . getLoop ( ) ; \n\t\t$F45557 ( loop ) for ( $F32409 in = header . getIn ( ) ; \n\t\tin . hasMoreElements ( ) ; \n\t\t) { \n\t\t\t$F32413 ( bb , in ) if ( loop . get ( bb . getNumber ( ) ) ) $F598 $F92979 liveRegisters = live . getLiveRegistersOnEdge ( bb , header ) ; \n\t\t\tfor ( Register r : liveRegisters ) { \n\t\t\t\tif ( r . isSymbolic ( ) ) { \n\t\t\t\t\t$F92979 s = findOrCreateSplitSet ( result , bb , header ) ; \n\t\t\t\t\ts . add ( r ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tfor ( $F1088 ( i , loop ) ) { \n\t\t\tif $F73204 ( loop , i ) { \n\t\t\t\tBasicBlock bb = ir . getBasicBlock ( i ) ; \n\t\t\t\tfor ( $F32409 out = bb . getNormalOut ( ) ; \n\t\t\t\tout . hasMoreElements ( ) ; \n\t\t\t\t) { \n\t\t\t\t\t$F32413 ( dest , out ) if ( loop . get ( dest . getNumber ( ) ) ) $F598 $F92979 liveRegisters = live . getLiveRegistersOnEdge ( bb , dest ) ; \n\t\t\t\t\tfor ( Register r : liveRegisters ) { \n\t\t\t\t\t\tif ( r . isSymbolic ( ) ) { \n\t\t\t\t\t\t\t$F92979 s = findOrCreateSplitSet ( result , bb , dest ) ; \n\t\t\t\t\t\t\ts . add ( r ) ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\taddEntriesForInfrequentBlocks ( ir , live , result ) ; \n\treturn result ; \n\t} \n"}, {"code": "public void testSplitEscapedSemicolons $F72 { \n\tProperties inner = PropertyUtils . splitPropertiesOnSemicolon ( PropertyUtils . escapeBackSlashesIfNotNull ( NUM00 ) ) ; \n\t$F70108 ( assertEquals , inner ) $F107616 ( assertEquals , inner ) $F107616 ( assertEquals , inner ) $F107616 ( assertEquals , inner ) $F107616 ( assertEquals , inner ) } \n"}, {"code": "public static void removeObjectAtOffset ( $F131 sourceArray , $F131 destinationArray , int offset ) { \n\t$F135 ( System , sourceArray , destinationArray , offset ) $F86533 ( System , sourceArray , offset , destinationArray ) } \n"}, {"code": "$F1431 public DictionaryAdapter ( Context context , File dbPath , String dbName , String defaultTable ) { \n\tmContext = context ; \n\tmDbName = dbName ; \n\tmDefaultTable = defaultTable ; \n\tmDbPath = dbPath ; \n\t$F63508 ( mDbFile , dbPath , mDbName ) if $F3428 ( mDbFile ) $F5795 ( open ) } \n"}, {"code": "public boolean isTabAssociatedWithNonDestroyedActivity ( boolean isIncognito , int tabId ) { \n\tList < WeakReference $F43793 > activities = ApplicationStatus . getRunningActivities ( ) ; \n\tfor ( WeakReference $F43793 ref : activities ) { \n\t\tActivity activity = ref . get ( ) ; \n\t\tif ( activity != null && isValidActivity ( isIncognito , activity . getIntent ( ) ) && getTabIdFromIntent ( activity . getIntent ( ) ) == tabId && ! isActivityDestroyed ( activity ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "HttpStreamWrapper ( HttpStream stream ) throws IOException { \n\t_stream = stream ; \n\t} \n"}, {"code": "public boolean handleFile ( File file ) { \n\tif ( DEBUG ) { \n\t\tlogger . fine ( $F4929 ( file ) ) ; \n\t\t} \n\tfilenames . add ( file ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean looksLikeNumberComing $F72 { \n\tif $F11984 ( n , s ) return _BOOL ; \n\treturn $F69553 ( Character , s , n ) ; \n\t} \n"}, {"code": "public PartialHull ( IPoint first , IPoint second ) $F23287 ( points , first , second ) "}, {"code": "$F83977 ( listener , mListeners ) "}, {"code": "public short readShort $F72 throws IOException { \n\treturn primitiveTypes . readShort ( ) ; \n\t} \n"}, {"code": "public void print ( int inum ) $F45719 ( print , String , inum ) "}, {"code": "public static < NodeType extends IViewNode $F1011 > ZyProximityNode $F1011 createProximityNode ( final Graph2D graph , final ZyGraphNode $F1011 attachedNode , final int degree , final boolean isIncoming ) { \n\t$F1832 ( Preconditions , graph ) $F1832 ( Preconditions , attachedNode ) final ZyLabelContent labelcontent = new ZyLabelContent $F8320 ; \n\tlabelcontent . addLineContent ( new ZyLineContent ( String . valueOf ( degree ) , new Font $F13847 ( Font ) , null ) ) ; \n\tfinal ZyProximityNodeRealizer $F177081 r = new ZyProximityNodeRealizer $F177081 ( labelcontent ) ; \n\tfinal Node node = graph . createNode ( r ) ; \n\t$F1431 final ZyProximityNode $F177081 infoNode = new ZyProximityNode $F177081 ( node , r , ( ZyGraphNode $F177081 ) attachedNode , isIncoming ) ; \n\tfinal ZyNodeData < ZyProximityNode $F177081 > data = new ZyNodeData < ZyProximityNode $F177081 > ( infoNode ) ; \n\tr . setUserData ( data ) ; \n\treturn infoNode ; \n\t} \n"}, {"code": "public static boolean isZoningRequired ( DbClient dbClient , URI varrayUri ) { \n\tif ( varrayUri != null ) { \n\t\tVirtualArray nh = dbClient . queryObject ( VirtualArray . class , varrayUri ) ; \n\t\tif ( nh != null ) $F8587 ( isZoningRequired , dbClient , nh ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void reply ( $F3803 responseHeaders , boolean out ) throws IOException { \n\tassert ( ! Thread . holdsLock ( SpdyStream . this ) ) ; \n\tboolean outFinished = _BOOL ; \n\tsynchronized ( this ) { \n\t\t$F896 ( responseHeaders ) if ( isLocallyInitiated ( ) ) $F4639 if ( this . responseHeaders != null ) $F4639 this . responseHeaders = responseHeaders ; \n\t\tif ( ! out ) { \n\t\t\tthis . out . finished = _BOOL ; \n\t\t\toutFinished = _BOOL ; \n\t\t\t} \n\t\t} \n\tconnection . writeSynReply ( id , outFinished , responseHeaders ) ; \n\t} \n"}, {"code": "protected CCAnimation ( String name , float delay , ArrayList < CCSpriteFrame > frames ) { \n\tdelay_ = delay ; \n\tname_ = name ; \n\tframes_ = new ArrayList < CCSpriteFrame > $F72 ; \n\t$F97792 ( frames , frames_ ) } \n"}, {"code": "private void navigateToDump $F72 { \n\tTreePath currentPath = tree . getSelectionPath ( ) ; \n\ttree . setSelectionPath ( currentPath . getParentPath ( ) ) ; \n\ttree . scrollPathToVisible ( currentPath . getParentPath ( ) ) ; \n\t} \n"}, {"code": "public synchronized void addMessages ( ArrayList < SmsMmsMessage > newMessages ) { \n\tif ( newMessages != null ) { \n\t\t$F177656 ( messages , newMessages ) UpdateMessageCount ( ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F13096 makeRandomCacheEntry ( $F96 data , boolean isExpired , boolean needsRefresh ) { \n\t$F6822 ( random ) $F13096 entry = new $F13096 $F72 ; \n\tif ( data != null ) $F6988 ( entry , data ) else { \n\t\tentry . data = $F13106 ( random ) ; \n\t\t} \n\tentry . etag = $F13111 ( String , random ) ; \n\tentry . serverDate = random . nextLong ( ) ; \n\tentry . ttl = isExpired ? NUM00 : Long . MAX_VALUE ; \n\tentry . softTtl = needsRefresh ? NUM00 : Long . MAX_VALUE ; \n\treturn entry ; \n\t} \n"}, {"code": "public int swap $F72 { \n\tif ( ! egl . eglSwapBuffers ( eglDisplay , eglSurface ) ) { \n\t\treturn egl . eglGetError ( ) ; \n\t\t} \n\treturn EGL10 . EGL_SUCCESS ; \n\t} \n"}, {"code": "public static List $F349233 windows ( String words , int windowSize ) { \n\t$F70316 ( tokenizer , words ) $F10144 ( list ) $F226965 ( tokenizer , list ) return windows ( list , windowSize ) ; \n\t} \n"}, {"code": "protected void drawCenterText ( Canvas c ) { \n\tCharSequence centerText = mChart . getCenterText ( ) ; \n\tif ( mChart . isDrawCenterTextEnabled ( ) && centerText != null ) { \n\t\tMPPointF center = mChart . getCenterCircleBox ( ) ; \n\t\tMPPointF offset = mChart . getCenterTextOffset ( ) ; \n\t\tfloat x = center . x + offset . x ; \n\t\tfloat y = center . y + offset . y ; \n\t\tfloat innerRadius = mChart . isDrawHoleEnabled ( ) && ! mChart . isDrawSlicesUnderHoleEnabled ( ) ? mChart . getRadius ( ) * ( mChart . getHoleRadius ( ) / NUM00 ) : mChart . getRadius ( ) ; \n\t\tRectF holeRect = mRectBuffer [ NUM00 ] ; \n\t\tholeRect . left = x - innerRadius ; \n\t\tholeRect . top = y - innerRadius ; \n\t\tholeRect . right = x + innerRadius ; \n\t\tholeRect . bottom = y + innerRadius ; \n\t\tRectF boundingRect = mRectBuffer [ NUM00 ] ; \n\t\tboundingRect . set ( holeRect ) ; \n\t\tfloat radiusPercent = mChart . getCenterTextRadiusPercent ( ) / NUM00 ; \n\t\tif ( radiusPercent > NUM00 ) { \n\t\t\tboundingRect . inset ( ( boundingRect . width ( ) - boundingRect . width ( ) * radiusPercent ) / NUM00 , ( boundingRect . height ( ) - boundingRect . height ( ) * radiusPercent ) / NUM00 ) ; \n\t\t\t} \n\t\tif ( ! centerText . equals ( mCenterTextLastValue ) || ! boundingRect . equals ( mCenterTextLastBounds ) ) { \n\t\t\tmCenterTextLastBounds . set ( boundingRect ) ; \n\t\t\tmCenterTextLastValue = centerText ; \n\t\t\tfloat width = mCenterTextLastBounds . width ( ) ; \n\t\t\tmCenterTextLayout = new StaticLayout ( centerText , NUM00 , centerText . length ( ) , mCenterTextPaint , ( int ) Math . max ( Math . ceil ( width ) , NUM00 ) , Layout . Alignment . ALIGN_CENTER , NUM00 , NUM00 , _BOOL ) ; \n\t\t\t} \n\t\tfloat layoutHeight = mCenterTextLayout . getHeight ( ) ; \n\t\t$F72208 ( c ) if ( $F215008 ( Build ) ) { \n\t\t\tPath path = mDrawCenterTextPathBuffer ; \n\t\t\t$F2268 ( path ) path . addOval ( holeRect , Path . Direction . CW ) ; \n\t\t\tc . clipPath ( path ) ; \n\t\t\t} \n\t\tc . translate ( boundingRect . left , boundingRect . top + ( boundingRect . height ( ) - layoutHeight ) / NUM00 ) ; \n\t\tmCenterTextLayout . draw ( c ) ; \n\t\t$F72213 ( c ) MPPointF . recycleInstance ( center ) ; \n\t\tMPPointF . recycleInstance ( offset ) ; \n\t\t} \n\t} \n"}, {"code": "public static String buildPath ( JsonPath jsonPath ) { \n\t$F89604 ( urlParts ) JsonPath currentJsonPath = jsonPath ; \n\tString pathPart ; \n\tdo { \n\t\tif ( currentJsonPath instanceof RelationshipsPath ) { \n\t\t\tpathPart = RELATIONSHIP_MARK + SEPARATOR + currentJsonPath . getElementName ( ) ; \n\t\t\t} \n\t\telse if ( currentJsonPath instanceof FieldPath ) { \n\t\t\tpathPart = currentJsonPath . getElementName ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\tpathPart = currentJsonPath . getElementName ( ) ; \n\t\t\tif ( currentJsonPath . getIds ( ) != null ) { \n\t\t\t\tpathPart += SEPARATOR + mergeIds ( currentJsonPath . getIds ( ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\turlParts . add ( pathPart ) ; \n\t\tcurrentJsonPath = currentJsonPath . getParentResource ( ) ; \n\t\t} \n\twhile ( currentJsonPath != null ) ; \n\tCollections . reverse ( urlParts ) ; \n\treturn SEPARATOR + StringUtils . join ( SEPARATOR , urlParts ) + SEPARATOR ; \n\t} \n"}, {"code": "protected void groupFrames ( Vector < Frame > frames , Vector < Group > groups , boolean isDchum ) throws MakeTocException { \n\tFrame frame ; \n\tGroup group ; \n\tint groupCount ; \n\t$F2199 ( nFrames , frames ) $F36253 ( Debug ) for ( $F119 ( i , nFrames ) ) { \n\t\t$F36253 ( Debug ) frame = ( Frame ) frames . elementAt ( i ) ; \n\t\tif ( ! frame . marked ) { \n\t\t\t$F8935 ( groupCount , groups ) group = new Group $F72 ; \n\t\t\tgroup . left = maxSide / NUM00 ; \n\t\t\tgroup . right = group . left + NUM00 ; \n\t\t\tgroup . top = maxSide / NUM00 ; \n\t\t\tgroup . bottom = group . top + NUM00 ; \n\t\t\tgroup . horiz_pos [ group . top ] = frame . top ; \n\t\t\tgroup . horiz_pos [ group . bottom ] = frame . bottom ; \n\t\t\tgroup . vert_pos [ group . left ] = frame . left ; \n\t\t\tgroup . vert_pos [ group . right ] = frame . right ; \n\t\t\tgroup . h_interval = frame . h_interval ; \n\t\t\tgroup . v_interval = frame . v_interval ; \n\t\t\tgroup . h_resolution = frame . h_resolution ; \n\t\t\tgroup . v_resolution = frame . v_resolution ; \n\t\t\tgroup . scale = frame . scale ; \n\t\t\tgroup . zone = frame . zone ; \n\t\t\tgroup . cib = frame . cib ; \n\t\t\tgroup . cdted = frame . cdted ; \n\t\t\tframe . x = group . left ; \n\t\t\tframe . y = group . top ; \n\t\t\tframe . group = groupCount ; \n\t\t\tframe . marked = _BOOL ; \n\t\t\tDebug . message ( NUM00 , NUM00 + groupCount + NUM00 + i + NUM00 + frame . filename + NUM00 ) ; \n\t\t\tif ( ! isDchum ) { \n\t\t\t\tfor ( $F119 ( j , nFrames ) ) { \n\t\t\t\t\tif ( i == j ) { \n\t\t\t\t\t\tDebug . message ( NUM00 , NUM00 + i + NUM00 ) ; \n\t\t\t\t\t\t$F598 } \n\t\t\t\t\tFrame f = ( Frame ) frames . elementAt ( j ) ; \n\t\t\t\t\tif ( addFrameToGroup ( group , f , groupCount ) ) { \n\t\t\t\t\t\tDebug . message ( NUM00 , NUM00 + j + NUM00 + groupCount ) ; \n\t\t\t\t\t\t$F598 } \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tDebug . message ( NUM00 , NUM00 + groupCount + NUM00 ) ; \n\t\t\tgroups . add ( group ) ; \n\t\t\t} \n\t\tfireProgressUpdate ( ProgressEvent . UPDATE , NUM00 , i , nFrames ) ; \n\t\t} \n\tif $F22503 ( Debug ) { \n\t\tDebug . output ( $F10532 ( groups ) ) ; \n\t\t} \n\t} \n"}, {"code": "private static Object add ( final Object array , final int index , final Object element , $F6970 ( clss ) ) { \n\tif ( array == null ) { \n\t\tif ( index != NUM00 ) { \n\t\t\tthrow new IndexOutOfBoundsException ( NUM00 + index + NUM00 ) ; \n\t\t\t} \n\t\tObject joinedArray = Array . newInstance ( clss , NUM00 ) ; \n\t\tArray . set ( joinedArray , NUM00 , element ) ; \n\t\treturn joinedArray ; \n\t\t} \n\t$F73736 ( length , Array , array ) if ( index > length || index < NUM00 ) $F73737 ( index , length ) Object result = Array . newInstance ( clss , length + NUM00 ) ; \n\t$F135 ( System , array , result , index ) Array . set ( result , index , element ) ; \n\tif ( index < length ) { \n\t\tSystem . arraycopy ( array , index , result , index + NUM00 , length - index ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public double doubleValue $F72 { \n\t$F12165 ( d ) } \n"}, {"code": "public String toMatlab $F72 { \n\tStringBuffer result ; \n\tint i ; \n\tint n ; \n\t$F7398 ( result ) $F84 ( result ) for ( $F95978 ( i , getRowDimension ) ) { \n\t\t$F34674 ( i , result ) for ( $F95978 ( n , getColumnDimension ) ) { \n\t\t\t$F34674 ( n , result ) result . append ( Double . toString ( get ( i , n ) ) ) ; \n\t\t\t} \n\t\t} \n\t$F84 ( result ) $F92 ( result ) } \n"}, {"code": "public FileInputReader ( File f ) throws IOException { \n\tif $F22503 ( Debug ) { \n\t\tDebug . output ( $F4929 ( f ) ) ; \n\t\t} \n\t$F32928 ( name , f ) $F24536 ( absolutePath , f ) inputFile = init ( f ) ; \n\t} \n"}, {"code": "public static ObjectOutputStream newObjectOutputStream ( Path self ) throws IOException { \n\treturn new ObjectOutputStream ( Files . newOutputStream ( self ) ) ; \n\t} \n"}, {"code": "$F1 public $F182484 keySet $F72 { \n\tHashSet $F22664 set = new HashSet $F22664 $F72 ; \n\tfor ( $F108030 s : segments ) { \n\t\t$F70469 ( set , s ) } \n\treturn set ; \n\t} \n"}, {"code": "$F30789 ( d , imageView , getImageView , viewWidth , viewHeight , drawableWidth , drawableHeight , mBaseMatrix , widthScale , heightScale , mScaleType , ScaleType , scale , Math , mTempSrc , mTempDst , FIT_CENTER , ScaleToFit , FIT_START , FIT_END , FIT_XY , resetMatrix ) "}, {"code": "public void add ( final CertificateValidity certificateValidity ) $F207 ( certificateValidityList , certificateValidity ) "}, {"code": "public void addPolicyListener ( PolicyListener policyListener ) { \n\tpolicyCache . addPolicyListener ( policyListener ) ; \n\t} \n"}, {"code": "public static Result verify ( String sid , String code ) { \n\tString id = NUM00 + sid ; \n\tCode c = ( Code ) Cache . get ( id ) ; \n\tif ( c == null ) { \n\t\t$F34419 ( log , sid ) return Result . badcode ; \n\t\t} \n\telse if ( ! X . isSame ( code , c . code ) ) { \n\t\tlog . warn ( NUM00 + c . code + NUM00 + code ) ; \n\t\treturn Result . badcode ; \n\t\t} \n\telse if ( c . expired < System . currentTimeMillis ( ) ) { \n\t\tlog . warn ( NUM00 + c . expired ) ; \n\t\treturn Result . expired ; \n\t\t} \n\treturn Result . ok ; \n\t} \n"}, {"code": "private ScriptEngine newScriptEngine ( File file ) throws ScriptException { \n\t$F20605 ( filename , file ) $F24867 ( index , filename ) if ( ( index < NUM00 ) || ( index >= $F1092 ( filename ) ) ) { \n\t\tthrow new ScriptException $F580 ; \n\t\t} \n\t$F36289 ( extension , filename , index ) ScriptEngineManager manager = new ScriptEngineManager $F72 ; \n\tScriptEngine engine = manager . getEngineByExtension ( extension ) ; \n\tif ( engine == null ) { \n\t\tthrow new ScriptException ( NUM00 + extension ) ; \n\t\t} \n\treturn engine ; \n\t} \n"}, {"code": "protected static INaviRawModule findRawModule ( final int rawModuleId , final List < INaviRawModule > rawModules ) { \n\tPreconditions . checkArgument ( rawModuleId > NUM00 , NUM00 , rawModuleId ) ; \n\t$F1832 ( Preconditions , rawModules ) for ( final INaviRawModule rawModule : rawModules ) { \n\t\tif ( rawModule . getId ( ) == rawModuleId ) { \n\t\t\treturn rawModule ; \n\t\t\t} \n\t\t} \n\t$F4638 } \n"}, {"code": "public static Object extractTypeChecked ( $F6689 args , int i , Class clazz , Function < $F6689 , Object > extractFunc ) { \n\tif ( args . size ( ) < i + NUM00 ) $F1337 else if ( clazz . isInstance ( args . get ( i ) ) ) { \n\t\treturn extractFunc . apply ( args ) ; \n\t\t} \n\telse $F1337 } \n"}, {"code": "$F1 public JapaneseDate dateYearDay ( int prolepticYear , int dayOfYear ) { \n\treturn new JapaneseDate ( LocalDate . ofYearDay ( prolepticYear , dayOfYear ) ) ; \n\t} \n"}, {"code": "private Pair < Entry , $F1469 > recoverEntry ( KeyStore ks , String alias , $F1469 pstore , $F1469 pkey ) throws Exception { \n\tif ( ks . containsAlias ( alias ) == _BOOL ) { \n\t\t$F22029 ( form , rb ) $F22031 ( source , alias ) throw new Exception $F22032 ( form , source ) ; \n\t\t} \n\tPasswordProtection pp = null ; \n\tEntry entry ; \n\ttry { \n\t\tentry = ks . getEntry ( alias , pp ) ; \n\t\tpkey = null ; \n\t\t} \n\tcatch ( UnrecoverableEntryException une ) { \n\t\tif ( P11KEYSTORE . equalsIgnoreCase ( ks . getType ( ) ) || KeyStoreUtil . isWindowsKeyStore ( ks . getType ( ) ) ) { \n\t\t\tthrow une ; \n\t\t\t} \n\t\tif ( pkey != null ) { \n\t\t\tpp = new PasswordProtection ( pkey ) ; \n\t\t\tentry = ks . getEntry ( alias , pp ) ; \n\t\t\t} \n\t\telse { \n\t\t\ttry { \n\t\t\t\tpp = new PasswordProtection ( pstore ) ; \n\t\t\t\tentry = ks . getEntry ( alias , pp ) ; \n\t\t\t\tpkey = pstore ; \n\t\t\t\t} \n\t\t\tcatch ( UnrecoverableEntryException une2 ) { \n\t\t\t\tif ( P12KEYSTORE . equalsIgnoreCase ( ks . getType ( ) ) ) { \n\t\t\t\t\tthrow une2 ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tpkey = getKeyPasswd ( alias , null , null ) ; \n\t\t\t\t\tpp = new PasswordProtection ( pkey ) ; \n\t\t\t\t\tentry = ks . getEntry ( alias , pp ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn Pair . of ( entry , pkey ) ; \n\t} \n"}, {"code": "URLClassLoader newLoader ( URL base ) { \n\treturn new URLClassLoader ( new URL [ ] { \n\t\tbase } \n\t) ; \n\t} \n"}, {"code": "public void testMinUnequal1 $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\tString b = NUM00 ; \n\tint bScale = NUM00 ; \n\tString c = NUM00 ; \n\tint cScale = NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) $F1918 ( bNumber , b , bScale ) $F1918 ( cNumber , c , cScale ) assertEquals ( NUM00 , cNumber , aNumber . min ( bNumber ) ) ; \n\t} \n"}, {"code": "public Wiser $F72 { \n\tthis . server = new SMTPServer ( new SimpleMessageListenerAdapter ( this ) ) ; \n\t} \n"}, {"code": "protected static $F2027 concat ( $F5466 $F2027 arr , int ... obj ) { \n\t$F2027 newArr ; \n\tif $F12414 ( arr ) newArr = obj ; \n\telse { \n\t\tnewArr = Arrays . copyOf ( arr , arr . length + obj . length ) ; \n\t\t$F11244 ( System , obj , newArr , arr ) } \n\treturn newArr ; \n\t} \n"}, {"code": "public void truckCamera ( float size ) { \n\tmoveToPosition ( - ( float ) ( targetXoff + ( size * Math . sin ( Math . toRadians ( zrot - NUM00 ) ) ) ) , - ( float ) ( targetYoff + ( size * Math . cos ( Math . toRadians ( zrot - NUM00 ) ) ) ) ) ; \n\t} \n"}, {"code": "public static $F96 decode2 ( String encoded ) { \n\t$F1338 ( encoded ) $F7782 ( base64Data , encoded ) int len = removeWhiteSpace ( base64Data ) ; \n\tif ( len % FOURBYTE != NUM00 ) $F1337 int numberQuadruple = ( len / FOURBYTE ) ; \n\tif ( numberQuadruple == NUM00 ) $F42429 byte decodedData [ ] = null ; \n\tbyte b1 = NUM00 , b2 = NUM00 , b3 = NUM00 , b4 = NUM00 ; \n\tchar d1 = NUM00 , d2 = NUM00 , d3 = NUM00 , d4 = NUM00 ; \n\tint i = NUM00 ; \n\tint encodedIndex = NUM00 ; \n\tint dataIndex = NUM00 ; \n\tdecodedData = new byte [ ( numberQuadruple ) * NUM00 ] ; \n\tfor ( ; \n\ti < numberQuadruple - NUM00 ; \n\ti ++ ) { \n\t\tif ( ! isData ( ( d1 = base64Data [ dataIndex ++ ] ) ) || ! isData ( ( d2 = base64Data [ dataIndex ++ ] ) ) || ! isData ( ( d3 = base64Data [ dataIndex ++ ] ) ) || ! isData ( ( d4 = base64Data [ dataIndex ++ ] ) ) ) $F1337 b1 = base64Alphabet [ d1 ] ; \n\t\tb2 = base64Alphabet [ d2 ] ; \n\t\tb3 = base64Alphabet [ d3 ] ; \n\t\tb4 = base64Alphabet [ d4 ] ; \n\t\t$F112574 ( decodedData , encodedIndex , b1 , b2 ) decodedData [ encodedIndex ++ ] = ( byte ) ( $F74254 ( b2 ) | $F11787 ( b3 ) ) ; \n\t\tdecodedData [ encodedIndex ++ ] = $F112580 ( b3 , b4 ) ; \n\t\t} \n\tif ( ! isData ( ( d1 = base64Data [ dataIndex ++ ] ) ) || ! isData ( ( d2 = base64Data [ dataIndex ++ ] ) ) ) $F1337 b1 = base64Alphabet [ d1 ] ; \n\tb2 = base64Alphabet [ d2 ] ; \n\td3 = base64Data [ dataIndex ++ ] ; \n\td4 = base64Data [ dataIndex ++ ] ; \n\tif ( ! isData ( ( d3 ) ) || ! isData ( ( d4 ) ) ) { \n\t\tif $F95788 ( isPad , d3 , d4 ) { \n\t\t\tif $F69047 ( b2 ) $F1337 $F112594 ( tmp , i ) $F112596 ( System , decodedData , tmp , i ) tmp [ encodedIndex ] = ( byte ) ( b1 < < NUM00 | b2 > > NUM00 ) ; \n\t\t\treturn tmp ; \n\t\t\t} \n\t\telse if ( ! isPad ( d3 ) && isPad ( d4 ) ) { \n\t\t\tb3 = base64Alphabet [ d3 ] ; \n\t\t\tif $F69047 ( b3 ) $F1337 $F112594 ( tmp , i ) $F112596 ( System , decodedData , tmp , i ) $F112574 ( tmp , encodedIndex , b1 , b2 ) tmp [ encodedIndex ] = ( byte ) ( $F74254 ( b2 ) | $F11787 ( b3 ) ) ; \n\t\t\treturn tmp ; \n\t\t\t} \n\t\telse $F1337 } \n\telse { \n\t\tb3 = base64Alphabet [ d3 ] ; \n\t\tb4 = base64Alphabet [ d4 ] ; \n\t\t$F112574 ( decodedData , encodedIndex , b1 , b2 ) decodedData [ encodedIndex ++ ] = ( byte ) ( $F74254 ( b2 ) | $F11787 ( b3 ) ) ; \n\t\tdecodedData [ encodedIndex ++ ] = $F112580 ( b3 , b4 ) ; \n\t\t} \n\treturn decodedData ; \n\t} \n"}, {"code": "public void shutdown $F72 $F79149 ( scheduledExecutorService ) "}, {"code": "public Builder clear $F72 $F68437 ( localeBuilder , this ) "}, {"code": "public static String deflate ( String previous , String current ) { \n\t$F397 ( previous , current ) $F83 ( buf ) int start1 = NUM00 ; \n\tint start2 = NUM00 ; \n\twhile ( start1 < previous . length ( ) && start2 < current . length ( ) ) { \n\t\tint end1 = start1 ; \n\t\tint end2 = start2 ; \n\t\twhile ( end1 <= previous . length ( ) && end2 <= current . length ( ) ) { \n\t\t\tint c1 = ( end1 < previous . length ( ) ? previous . charAt ( end1 ) : NUM00 ) ; \n\t\t\tint c2 = ( end2 < current . length ( ) ? current . charAt ( end2 ) : NUM00 ) ; \n\t\t\tif ( c1 == c2 ) { \n\t\t\t\tif ( c1 == NUM00 ) $F257374 ( buf ) else $F1097 ( end1 , end2 ) } \n\t\t\telse { \n\t\t\t\twhile ( end1 < previous . length ( ) && previous . charAt ( end1 ) != NUM00 ) { \n\t\t\t\t\tend1 ++ ; \n\t\t\t\t\t} \n\t\t\t\twhile ( end2 < current . length ( ) && current . charAt ( end2 ) != NUM00 ) { \n\t\t\t\t\tend2 ++ ; \n\t\t\t\t\t} \n\t\t\t\tfor ( int i = start2 ; \n\t\t\t\ti < end2 ; \n\t\t\t\ti ++ ) $F4137 ( buf , current , i ) $F597 } \n\t\t\t} \n\t\tstart1 = end1 + NUM00 ; \n\t\tstart2 = end2 + NUM00 ; \n\t\tif $F7007 ( start2 , current ) $F84 ( buf ) } \n\t$F92 ( buf ) } \n"}, {"code": "protected int splitListIndex ( List < Pair $F434536 > S ) { \n\treturn $F74216 ( S ) ; \n\t} \n"}, {"code": "$F36345 ( tag , msg , args , sLevel , LEVEL_ERROR , String , Log ) "}, {"code": "public static synchronized void addPropertyChangeListener ( PropertyChangeListener l ) $F2202 ( listeners , l ) "}, {"code": "private static void cleanDirectory ( File path ) { \n\t$F8249 ( path ) if $F3428 ( path ) { \n\t\tfor ( $F3445 ( f , path ) ) { \n\t\t\tif $F3444 ( f ) cleanDirectory ( f ) ; \n\t\t\t$F1900 ( f ) } \n\t\t} \n\t} \n"}, {"code": "private GridCacheVersion minVersion ( Iterable < IgniteTxEntry > entries , GridCacheVersion min , IgniteInternalTx tx ) { \n\tfor ( IgniteTxEntry txEntry : entries ) { \n\t\tGridCacheEntryEx cached = txEntry . cached ( ) ; \n\t\tassert txEntry . isRead ( ) || ! cached . obsolete ( tx . xidVersion ( ) ) : NUM00 + cached + NUM00 + tx + NUM00 ; \n\t\tfor ( GridCacheMvccCandidate cand : cached . remoteMvccSnapshot ( ) ) if ( min == null || cand . version ( ) . isLess ( min ) ) min = cand . version ( ) ; \n\t\t} \n\treturn min ; \n\t} \n"}, {"code": "public DimensionedScalar ( String fieldValue ) throws IllegalArgumentException { \n\tsuper ( NUM00 , NUM00 ) ; \n\t$F275 ( matcher , PATTERN , fieldValue ) if $F281 ( matcher ) { \n\t\t$F283 ( name , matcher ) $F283 ( dimensions , matcher ) $F283 ( value , matcher ) setName ( name ) ; \n\t\tsetValue ( value ) ; \n\t\tthis . dimensions = new Dimensions ( dimensions ) ; \n\t\t} \n\telse { \n\t\tthrow new DictionaryException ( NUM00 + fieldValue + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public void characters $F62353 ( start , length ) throws SAXException $F92922 ( m_valueBuffer , ch , start , length ) "}, {"code": "protected double computeStdDev ( Instance inst , Matrix k ) throws Exception { \n\tdouble kappa = m_kernel . eval ( - NUM00 , - NUM00 , inst ) + m_deltaSquared ; \n\tdouble s = NUM00 ; \n\tint n = m_L . length ; \n\tfor ( $F119 ( i , n ) ) { \n\t\tdouble t = NUM00 ; \n\t\tfor ( $F119 ( j , n ) ) { \n\t\t\tt -= k . get ( j , NUM00 ) * ( i > j ? m_L [ i ] [ j ] : m_L [ j ] [ i ] ) ; \n\t\t\t} \n\t\ts += t * k . get ( i , NUM00 ) ; \n\t\t} \n\tdouble sigma = m_delta ; \n\tif ( kappa > s ) { \n\t\tsigma = Math . sqrt ( kappa - s ) ; \n\t\t} \n\treturn sigma ; \n\t} \n"}, {"code": "protected void initialize ( Properties p ) $F845 "}, {"code": "public void add ( int index , int element ) { \n\tcheckRangeIncludingEndpoint ( index ) ; \n\tensureCapacity ( size + NUM00 ) ; \n\tint numtomove = size - index ; \n\t$F63676 ( System , array , index , numtomove ) array [ index ] = element ; \n\tsize ++ ; \n\t} \n"}, {"code": "public MultiplexManager ( DataStore ... dataStores ) { \n\t$F37437 ( this , Arrays , dataStores ) } \n"}, {"code": "public boolean matchesRawNamePattern ( Object item ) { \n\tString prefix = patternMatcher . getPattern ( ) ; \n\tString text = getElementName ( item ) ; \n\t$F397 ( text , _BOOL ) $F1749 ( textLength , text ) $F1749 ( prefixLength , prefix ) $F88060 ( textLength , prefixLength , _BOOL ) for ( $F18298 ( i , prefixLength ) ) { \n\t\tif ( $F954 ( Character , prefix , i ) != $F954 ( Character , text , i ) ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static $F2304 $F4203 T valueOrDefault ( $F5466 T value , $F2304 T defaultValue ) { \n\treturn value == null ? defaultValue : value ; \n\t} \n"}, {"code": "protected abstract int compareToLastMsg ( Pair $F9340 tupleKeyValue , Pair < $F96 , $F96 > lastReceivedKeyValue ) ; \n"}, {"code": "public void paintComponent ( Graphics g ) { \n\t$F37616 ( g , track ) $F317 ( g2d , g ) $F26898 ( g2d , carPosition ) g2d . rotate ( Math . toRadians ( carRotation ) ) ; \n\tg2d . translate ( - ( carPosition . x ) , - ( carPosition . y ) ) ; \n\tg2d . drawImage ( car , carPosition . x - carWHalf , carPosition . y - carHHalf , null ) ; \n\t} \n"}, {"code": "public static $F80742 toSqlTime ( String time ) { \n\t$F22273 newDate = toDate ( NUM00 , time ) ; \n\tif ( newDate != null ) { \n\t\treturn new $F80742 $F16810 ( newDate ) ; \n\t\t} \n\telse $F1337 } \n"}, {"code": "private void parseMenu ( XmlPullParser parser , AttributeSet attrs , SublimeMenu menu ) throws $F18821 { \n\tMenuState menuState = new MenuState ( menu ) ; \n\tint eventType = parser . getEventType ( ) ; \n\tString tagName ; \n\tboolean lookingForEndOfUnknownTag = _BOOL ; \n\tString unknownTagName = null ; \n\tdo { \n\t\tif ( eventType == XmlPullParser . START_TAG ) { \n\t\t\t$F32928 ( tagName , parser ) if $F1238 ( tagName , XML_MENU ) { \n\t\t\t\t$F45366 ( eventType , parser ) $F597 } \n\t\t\t$F1665 ( tagName ) } \n\t\t$F45366 ( eventType , parser ) } \n\twhile ( eventType != XmlPullParser . END_DOCUMENT ) ; \n\tboolean reachedEndOfMenu = _BOOL ; \n\twhile ( ! reachedEndOfMenu ) { \n\t\tswitch ( eventType ) { \n\t\t\tcase XmlPullParser . START_TAG : $F30711 ( lookingForEndOfUnknownTag ) $F32928 ( tagName , parser ) if $F1238 ( tagName , XML_GROUP ) { \n\t\t\t\tif ( menuState . groupId != MenuState . defaultGroupId ) $F202944 menuState . readGroup ( attrs ) ; \n\t\t\t\tmenuState . addGroup ( ) ; \n\t\t\t\t} \n\t\t\telse if ( $F133966 ( tagName , XML_TEXT , XML_TEXT_WITH_BADGE , XML_CHECKBOX ) || tagName . equals ( XML_SWITCH ) ) { \n\t\t\t\tmenuState . readMenuItem ( attrs , tagName ) ; \n\t\t\t\t} \n\t\t\telse if $F1238 ( tagName , XML_SEPARATOR ) { \n\t\t\t\tmenuState . readMenuItem ( attrs , tagName ) ; \n\t\t\t\t} \n\t\t\telse if $F1238 ( tagName , XML_GROUP_HEADER ) { \n\t\t\t\tif ( menuState . groupId == MenuState . defaultGroupId ) $F202944 menuState . readMenuItem ( attrs , tagName ) ; \n\t\t\t\t} \n\t\t\telse if $F1238 ( tagName , XML_MENU ) { \n\t\t\t\tthrow new RuntimeException $F76899 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tlookingForEndOfUnknownTag = _BOOL ; \n\t\t\t\tunknownTagName = tagName ; \n\t\t\t\t} \n\t\t\t$F597 case XmlPullParser . END_TAG : $F32928 ( tagName , parser ) if ( lookingForEndOfUnknownTag && tagName . equals ( unknownTagName ) ) { \n\t\t\t\tlookingForEndOfUnknownTag = _BOOL ; \n\t\t\t\tunknownTagName = null ; \n\t\t\t\t} \n\t\t\telse if $F1238 ( tagName , XML_GROUP ) { \n\t\t\t\tif ( menuState . isGroupCollapsible ( ) && menuState . groupHeadersAdded != NUM00 ) { \n\t\t\t\t\tif ( menuState . groupHeadersAdded < NUM00 ) $F202944 else { \n\t\t\t\t\t\tthrow new RuntimeException ( NUM00 + NUM00 + menuState . groupHeadersAdded + NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\tmenuState . resetGroup ( ) ; \n\t\t\t\t} \n\t\t\telse if ( $F133966 ( tagName , XML_TEXT , XML_TEXT_WITH_BADGE , XML_CHECKBOX ) || tagName . equals ( XML_SWITCH ) || tagName . equals ( XML_GROUP_HEADER ) || tagName . equals ( XML_SEPARATOR ) ) { \n\t\t\t\tif ( ! menuState . hasAddedItem ( ) ) { \n\t\t\t\t\tmenuState . addItem ( ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse $F67935 ( tagName , XML_MENU , reachedEndOfMenu , _BOOL ) $F597 case XmlPullParser . END_DOCUMENT : $F11388 } \n\t\t$F45366 ( eventType , parser ) } \n\t} \n"}, {"code": "public static double crossTrackDistanceRad $F130908 ( lat1 , lon1 , lat2 , lon2 , latQ , lonQ ) { \n\tfinal double dlon12 = lon2 - lon1 ; \n\tfinal double dlon1Q = lonQ - lon1 ; \n\tfinal double dlat1Q = latQ - lat1 ; \n\tfinal double clat1 = Math . cos ( lat1 ) , slat1 = MathUtil . cosToSin ( lat1 , clat1 ) ; \n\tfinal double clatQ = Math . cos ( latQ ) , slatQ = MathUtil . cosToSin ( latQ , clatQ ) ; \n\tfinal double clat2 = Math . cos ( lat2 ) , slat2 = MathUtil . cosToSin ( lat2 , clat2 ) ; \n\tfinal double slat = Math . sin ( dlat1Q * NUM00 ) ; \n\tfinal double slon = Math . sin ( dlon1Q * NUM00 ) ; \n\tfinal double a = slat * slat + slon * slon * clat1 * clatQ ; \n\tfinal double angDist1Q = $F46328 ( Math , a ) ; \n\tfinal double sdlon12 = Math . sin ( dlon12 ) , cdlon12 = MathUtil . sinToCos ( dlon12 , sdlon12 ) ; \n\tfinal double sdlon1Q = Math . sin ( dlon1Q ) , cdlon1Q = MathUtil . sinToCos ( dlon1Q , sdlon1Q ) ; \n\tfinal double yE = sdlon12 * clat2 ; \n\tfinal double yQ = sdlon1Q * clatQ ; \n\tfinal double xE = clat1 * slat2 - slat1 * clat2 * cdlon12 ; \n\tfinal double xQ = clat1 * slatQ - slat1 * clatQ * cdlon1Q ; \n\tfinal double crs12 = Math . atan2 ( yE , xE ) ; \n\tfinal double crs1Q = Math . atan2 ( yQ , xQ ) ; \n\treturn Math . asin ( Math . sin ( angDist1Q ) * Math . sin ( crs1Q - crs12 ) ) ; \n\t} \n"}, {"code": "public String chooseServerAlias ( String keyType , Principal [ ] issuers , Socket socket ) { \n\treturn defaultX509KM . chooseServerAlias ( keyType , issuers , socket ) ; \n\t} \n"}, {"code": "public static double pdf $F12359 ( x , shape , scale , factor ) { \n\tif ( x <= NUM00 ) $F1082 final double a = Math . exp ( shape * Math . log ( scale ) - ( shape + NUM00 ) * Math . log ( x ) - ( scale / x ) - GammaFunction . lnGamma ( shape ) ) ; \n\treturn factor * a ; \n\t} \n"}, {"code": "public String charge $F83882 ( ctx , WindowNo , mTab , mField , value ) { \n\t$F179073 ( C_Charge_ID , value ) if ( C_Charge_ID == null || $F179074 ( C_Charge_ID ) ) $F1278 String sql = NUM00 ; \n\tPreparedStatement pstmt = null ; \n\tResultSet rs = null ; \n\ttry { \n\t\t$F47577 ( pstmt , DB , sql ) $F179090 ( pstmt , C_Charge_ID ) $F47578 ( rs , pstmt ) if $F1682 ( rs ) { \n\t\t\tmTab . setValue ( NUM00 , rs . getBigDecimal ( NUM00 ) ) ; \n\t\t\t} \n\t\t} \n\tcatch ( SQLException e ) { \n\t\t$F62 ( log , Level , sql , e ) $F179099 ( e ) } \n\t$F47585 ( DB , rs , pstmt ) return tax ( ctx , WindowNo , mTab , mField , value ) ; \n\t} \n"}, {"code": "protected Array < Actor > parse $F72 { \n\tactors = GdxArrays . newArray ( Actor . class ) ; \n\tinvokePreListeners ( actors ) ; \n\t$F1121 ( builder ) while ( templateReader . hasNextCharacter ( ) ) { \n\t\tfinal char character = templateReader . nextCharacter ( ) ; \n\t\tif ( character == syntax . getArgumentOpening ( ) ) $F5795 ( processArgument ) else if ( character == syntax . getTagOpening ( ) ) { \n\t\t\tif ( isNextCharacterCommentOpening ( ) ) { \n\t\t\t\tprocessComment ( ) ; \n\t\t\t\t$F598 } \n\t\t\tif ( currentParentTag != null ) { \n\t\t\t\tcurrentParentTag . handleDataBetweenTags ( builder ) ; \n\t\t\t\t} \n\t\t\tStrings . clearBuilder ( builder ) ; \n\t\t\tprocessTag ( builder ) ; \n\t\t\t} \n\t\telse $F288 ( builder , character ) } \n\tif ( currentParentTag != null ) { \n\t\tthrowError ( NUM00 + currentParentTag . getTagName ( ) + NUM00 ) ; \n\t\t} \n\tinvokePortListeners ( actors ) ; \n\treturn actors ; \n\t} \n"}, {"code": "public void testABandCBbrokerNetwork $F72 throws Exception { \n\tbridgeBrokers ( NUM00 , NUM00 ) ; \n\tbridgeBrokers ( NUM00 , NUM00 ) ; \n\tstartAllBrokers ( ) ; \n\tDestination dest = createDestination ( NUM00 , _BOOL ) ; \n\tMessageConsumer clientA = createConsumer ( NUM00 , dest ) ; \n\tMessageConsumer clientB = createConsumer ( NUM00 , dest ) ; \n\tMessageConsumer clientC = createConsumer ( NUM00 , dest ) ; \n\t$F9470 ( Thread ) sendMessages ( NUM00 , dest , MESSAGE_COUNT ) ; \n\tsendMessages ( NUM00 , dest , MESSAGE_COUNT ) ; \n\tsendMessages ( NUM00 , dest , MESSAGE_COUNT ) ; \n\tMessageIdList msgsA = getConsumerMessages ( NUM00 , clientA ) ; \n\tMessageIdList msgsB = getConsumerMessages ( NUM00 , clientB ) ; \n\tMessageIdList msgsC = getConsumerMessages ( NUM00 , clientC ) ; \n\tmsgsA . waitForMessagesToArrive ( MESSAGE_COUNT ) ; \n\t$F394993 ( msgsB , MESSAGE_COUNT ) msgsC . waitForMessagesToArrive ( MESSAGE_COUNT ) ; \n\t$F165310 ( assertEquals , MESSAGE_COUNT , msgsA ) $F394996 ( assertEquals , MESSAGE_COUNT , msgsB ) $F165310 ( assertEquals , MESSAGE_COUNT , msgsC ) } \n"}, {"code": "public void flush $F72 throws IOException { \n\tWspUtil . writeUint8 ( os_ , NUM00 ) ; \n\twritePublicIdentifier ( os_ , publicID_ ) ; \n\tWspUtil . writeUintvar ( os_ , WapConstants . MIB_ENUM_UTF_8 ) ; \n\twriteStringTable ( os_ ) ; \n\t$F59 ( wbxmlBody_ ) wbxmlBody_ . writeTo ( os_ ) ; \n\t$F1206 ( os_ ) } \n"}, {"code": "public static void discard $F72 $F38599 ( current ) "}, {"code": "private Token toASIToken ( ILeafNode leaf ) { \n\tif ( leaf . isHidden ( ) ) $F4915 ( newSemicolonToken , leaf ) else { \n\t\tif $F87568 ( leafNodes ) { \n\t\t\tint tokenType = tokenTypeMapper . getInternalTokenType ( leaf ) ; \n\t\t\tint semicolonTokenType = tokenTypeMapper . getInternalTokenType ( semicolon ) ; \n\t\t\tif ( tokenType == semicolonTokenType ) { \n\t\t\t\treturn new CommonToken ( semicolonTokenType , leaf . getText ( ) ) ; \n\t\t\t\t} \n\t\t\tif ( leaf . getTotalEndOffset ( ) == endOffset ) { \n\t\t\t\tleafNodes = Iterators . emptyIterator ( ) ; \n\t\t\t\treturn new CommonToken ( tokenType , leaf . getText ( ) ) ; \n\t\t\t\t} \n\t\t\tnext = new CommonToken ( semicolonTokenType , leaf . getText ( ) ) ; \n\t\t\treturn new CommonToken ( tokenType , leaf . getText ( ) ) ; \n\t\t\t} \n\t\telse if ( leaf . getGrammarElement ( ) == rightCurlyInBlock || leaf . getGrammarElement ( ) == rightCurlyInArrowExpression ) { \n\t\t\tint tokenType = tokenTypeMapper . getInternalTokenType ( leaf ) ; \n\t\t\tnext = new CommonToken ( tokenType ) ; \n\t\t\treturn new CommonToken ( tokenTypeMapper . getInternalTokenType ( semicolon ) , leaf . getText ( ) ) ; \n\t\t\t} \n\t\telse $F4915 ( newSemicolonToken , leaf ) } \n\t} \n"}, {"code": "$F1 public PacketBuffer write ( PacketBuffer buf ) { \n\t$F22620 ( values ) return buf ; \n\t} \n"}, {"code": "public final void registerFileType ( $F1113 FileType type , $F157772 $F5466 String ... defaultAssociatedExtensions ) { \n\tList < FileNameMatcher > matchers = new ArrayList < FileNameMatcher > $F72 ; \n\tif ( defaultAssociatedExtensions != null ) { \n\t\tfor ( String extension : defaultAssociatedExtensions ) { \n\t\t\tmatchers . add ( new ExtensionFileNameMatcher ( extension ) ) ; \n\t\t\t} \n\t\t} \n\tregisterFileType ( type , matchers ) ; \n\t} \n"}, {"code": "public int parseInt ( String localeFormattedInteger ) $F75349 ( Integer , localeFormattedInteger ) "}, {"code": "public static RequestSecurityTokenResponse parseXML ( String xml ) throws WSFederationException { \n\tDocument doc = XMLUtils . toDOMDocument ( xml , debug ) ; \n\t$F9029 ( root , doc ) return new RequestSecurityTokenResponse ( root ) ; \n\t} \n"}, {"code": "$F1 public void requestResources ( SamzaResourceRequest resourceRequest ) { \n\tfinal int DEFAULT_PRIORITY = NUM00 ; \n\tlog . info ( NUM00 + resourceRequest . getPreferredHost ( ) + NUM00 + resourceRequest . getContainerID ( ) ) ; \n\tint memoryMb = resourceRequest . getMemoryMB ( ) ; \n\tint cpuCores = resourceRequest . getNumCores ( ) ; \n\tString containerLabel = yarnConfig . getContainerLabel ( ) ; \n\tString preferredHost = resourceRequest . getPreferredHost ( ) ; \n\tResource capability = Resource . newInstance ( memoryMb , cpuCores ) ; \n\t$F2237 ( priority , Priority , DEFAULT_PRIORITY ) AMRMClient . ContainerRequest issuedRequest ; \n\tif $F3057 ( preferredHost ) { \n\t\t$F556 ( log , preferredHost ) issuedRequest = new AMRMClient . ContainerRequest ( capability , null , null , priority , _BOOL , containerLabel ) ; \n\t\t} \n\telse { \n\t\t$F556 ( log , preferredHost ) issuedRequest = new AMRMClient . ContainerRequest ( capability , $F8640 ( preferredHost ) , null , priority , _BOOL , containerLabel ) ; \n\t\t} \n\tsynchronized ( lock ) { \n\t\trequestsMap . put ( resourceRequest , issuedRequest ) ; \n\t\tamClient . addContainerRequest ( issuedRequest ) ; \n\t\t} \n\t} \n"}, {"code": "private Collection < ExtractedItemsCollection > filterItemsByLevel ( Player player , List < ExtractedItemsCollection > itemsCollections ) { \n\tint playerLevel = player . getLevel ( ) ; \n\tCollection < ExtractedItemsCollection > result = new ArrayList < ExtractedItemsCollection > $F72 ; \n\tfor ( ExtractedItemsCollection collection : itemsCollections ) { \n\t\tif ( collection . getMinLevel ( ) > playerLevel ) $F1448 if ( collection . getMaxLevel ( ) > NUM00 && collection . getMaxLevel ( ) < playerLevel ) $F1448 result . add ( collection ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private String printDFormat ( String sx ) { \n\tint nLeadingZeros = NUM00 ; \n\tint nBlanks = NUM00 , n = NUM00 ; \n\tint i = NUM00 ; \n\tfinal int jFirst ; \n\tfinal boolean neg = $F4431 ( sx ) ; \n\tif ( sx . equals ( NUM00 ) && precisionSet && precision == NUM00 ) { \n\t\tsx = NUM00 ; \n\t\t} \n\tif ( ! neg ) { \n\t\tif ( precisionSet && sx . length ( ) < precision ) { \n\t\t\tnLeadingZeros = precision - sx . length ( ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( precisionSet && $F45793 ( sx ) < precision ) { \n\t\t\tnLeadingZeros = precision - sx . length ( ) + NUM00 ; \n\t\t\t} \n\t\t} \n\t$F17370 ( nLeadingZeros ) if ( fieldWidthSet ) { \n\t\tnBlanks = fieldWidth - nLeadingZeros - sx . length ( ) ; \n\t\tif ( ! neg && ( leadingSign || leadingSpace ) ) { \n\t\t\tnBlanks -- ; \n\t\t\t} \n\t\t} \n\t$F17370 ( nBlanks ) if ( leadingSign ) { \n\t\tn ++ ; \n\t\t} \n\telse $F19814 ( leadingSpace , n ) n += nBlanks ; \n\tn += nLeadingZeros ; \n\t$F90433 ( n , sx ) final $F1469 ca = new char [ n ] ; \n\tif ( leftJustify ) { \n\t\tif ( neg ) { \n\t\t\tca [ i ++ ] = NUM00 ; \n\t\t\t} \n\t\telse if ( leadingSign ) { \n\t\t\tca [ i ++ ] = NUM00 ; \n\t\t\t} \n\t\telse if ( leadingSpace ) { \n\t\t\tca [ i ++ ] = NUM00 ; \n\t\t\t} \n\t\t$F9609 ( csx , sx ) jFirst = neg ? NUM00 : NUM00 ; \n\t\tfor ( $F259650 ( j , nLeadingZeros , i ) ) $F114344 ( ca , i ) for ( int j = jFirst ; \n\t\tj < csx . length ; \n\t\tj ++ , i ++ ) $F20651 ( ca , i , csx , j ) for ( $F259650 ( j , nBlanks , i ) ) $F114344 ( ca , i ) } \n\telse { \n\t\tif ( ! leadingZeros ) { \n\t\t\tfor ( i = NUM00 ; \n\t\t\ti < nBlanks ; \n\t\t\ti ++ ) $F114344 ( ca , i ) if ( neg ) { \n\t\t\t\tca [ i ++ ] = NUM00 ; \n\t\t\t\t} \n\t\t\telse if ( leadingSign ) { \n\t\t\t\tca [ i ++ ] = NUM00 ; \n\t\t\t\t} \n\t\t\telse if ( leadingSpace ) { \n\t\t\t\tca [ i ++ ] = NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( neg ) { \n\t\t\t\tca [ i ++ ] = NUM00 ; \n\t\t\t\t} \n\t\t\telse if ( leadingSign ) { \n\t\t\t\tca [ i ++ ] = NUM00 ; \n\t\t\t\t} \n\t\t\telse if ( leadingSpace ) { \n\t\t\t\tca [ i ++ ] = NUM00 ; \n\t\t\t\t} \n\t\t\t$F398596 ( j , nBlanks , i , ca ) } \n\t\t$F398596 ( j , nLeadingZeros , i , ca ) $F9609 ( csx , sx ) jFirst = neg ? NUM00 : NUM00 ; \n\t\tfor ( int j = jFirst ; \n\t\tj < csx . length ; \n\t\tj ++ , i ++ ) $F20651 ( ca , i , csx , j ) } \n\t$F22269 ( ca ) } \n"}, {"code": "private void drawHost ( Graphics2D g2 ) { \n\tCoord loc = node . getLocation ( ) ; \n\tif ( drawCoverage && node . isRadioActive ( ) ) { \n\t\tArrayList $F149690 interfaces = new ArrayList $F149690 $F72 ; \n\t\tinterfaces . addAll ( node . getInterfaces ( ) ) ; \n\t\tfor ( NetworkInterface ni : interfaces ) { \n\t\t\tdouble range = ni . getTransmitRange ( ) ; \n\t\t\t$F35359 coverage ; \n\t\t\tcoverage = new $F35359 ( scale ( loc . getX ( ) - range ) , scale ( loc . getY ( ) - range ) , scale ( range * NUM00 ) , scale ( range * NUM00 ) ) ; \n\t\t\tg2 . setColor ( rangeColor ) ; \n\t\t\tg2 . draw ( coverage ) ; \n\t\t\t} \n\t\t} \n\tif ( drawConnections ) { \n\t\tg2 . setColor ( conColor ) ; \n\t\tCoord c1 = node . getLocation ( ) ; \n\t\t$F279444 conList = new $F279444 $F72 ; \n\t\tconList . addAll ( node . getConnections ( ) ) ; \n\t\tfor ( Connection c : conList ) { \n\t\t\tDTNHost otherNode = c . getOtherNode ( node ) ; \n\t\t\tCoord c2 ; \n\t\t\t$F4322 ( otherNode ) c2 = otherNode . getLocation ( ) ; \n\t\t\tg2 . drawLine ( $F59993 ( scale , c1 ) , $F177702 ( scale , c1 ) , $F59993 ( scale , c2 ) , $F177702 ( scale , c2 ) ) ; \n\t\t\t} \n\t\t} \n\tg2 . setColor ( hostColor ) ; \n\tg2 . drawRect ( scale ( loc . getX ( ) - NUM00 ) , scale ( loc . getY ( ) - NUM00 ) , scale ( NUM00 ) , scale ( NUM00 ) ) ; \n\tif ( isHighlighted ( ) ) { \n\t\tg2 . setColor ( highlightedNodeColor ) ; \n\t\tg2 . fillRect ( $F59993 ( scale , loc ) - NUM00 , $F177702 ( scale , loc ) - NUM00 , NUM00 , NUM00 ) ; \n\t\t} \n\tif ( drawNodeName ) { \n\t\tg2 . setColor ( hostNameColor ) ; \n\t\tg2 . drawString ( node . toString ( ) , $F59993 ( scale , loc ) , $F177702 ( scale , loc ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static int binarySearchFloor ( $F2469 a , long key , boolean inclusive , boolean stayInBounds ) { \n\t$F8533 ( index , Arrays , a , key ) index = index < NUM00 ? - ( index + NUM00 ) : ( inclusive ? index : ( index - NUM00 ) ) ; \n\treturn stayInBounds ? Math . max ( NUM00 , index ) : index ; \n\t} \n"}, {"code": "public boolean add ( symbol sym ) throws internal_error { \n\tObject previous ; \n\tnot_null ( sym ) ; \n\tprevious = _all . put ( sym . name ( ) , sym ) ; \n\treturn previous == null ; \n\t} \n"}, {"code": "$F31396 ( str , retval , ch , i , s , Integer ) "}, {"code": "public final int size $F72 { \n\tif ( GWT . isScript ( ) ) $F1652 ( jsArray ) else $F1652 ( javaArray ) } \n"}, {"code": "public boolean intersects ( final PlanetModel planetModel , final Plane q , final $F316817 notablePoints , final $F316817 moreNotablePoints , final Membership [ ] bounds , final Membership ... moreBounds ) { \n\tif ( isNumericallyIdentical ( q ) ) { \n\t\tfor ( GeoPoint p : notablePoints ) { \n\t\t\t$F24922 ( meetsAllBounds , p , bounds , moreBounds , _BOOL ) } \n\t\tfor ( GeoPoint p : moreNotablePoints ) { \n\t\t\t$F24922 ( meetsAllBounds , p , bounds , moreBounds , _BOOL ) } \n\t\treturn _BOOL ; \n\t\t} \n\t$F140850 ( lineVectorX , y , q , z ) $F140850 ( lineVectorY , z , q , x ) $F140850 ( lineVectorZ , x , q , y ) if ( $F140851 ( Math , lineVectorX , MINIMUM_RESOLUTION , lineVectorY ) && Math . abs ( lineVectorZ ) < MINIMUM_RESOLUTION ) { \n\t\treturn _BOOL ; \n\t\t} \n\tdouble x0 ; \n\tdouble y0 ; \n\tdouble z0 ; \n\tfinal double denomYZ = this . y * q . z - this . z * q . y ; \n\tfinal double denomXZ = this . x * q . z - this . z * q . x ; \n\tfinal double denomXY = this . x * q . y - this . y * q . x ; \n\tif ( $F140867 ( Math , denomYZ , denomXZ ) && $F140867 ( Math , denomYZ , denomXY ) ) { \n\t\tif $F7637 ( Math , denomYZ , MINIMUM_RESOLUTION_SQUARED ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tfinal double denom = NUM00 / denomYZ ; \n\t\tx0 = NUM00 ; \n\t\ty0 = ( - this . D * q . z - this . z * - q . D ) * denom ; \n\t\tz0 = ( this . y * - q . D + this . D * q . y ) * denom ; \n\t\t} \n\telse if ( $F140867 ( Math , denomXZ , denomXY ) && $F140867 ( Math , denomXZ , denomYZ ) ) { \n\t\tif $F7637 ( Math , denomXZ , MINIMUM_RESOLUTION_SQUARED ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tfinal double denom = NUM00 / denomXZ ; \n\t\tx0 = ( - this . D * q . z - this . z * - q . D ) * denom ; \n\t\ty0 = NUM00 ; \n\t\tz0 = ( this . x * - q . D + this . D * q . x ) * denom ; \n\t\t} \n\telse { \n\t\tif $F7637 ( Math , denomXY , MINIMUM_RESOLUTION_SQUARED ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tfinal double denom = NUM00 / denomXY ; \n\t\tx0 = ( - this . D * q . y - this . y * - q . D ) * denom ; \n\t\ty0 = ( this . x * - q . D + this . D * q . x ) * denom ; \n\t\tz0 = NUM00 ; \n\t\t} \n\tfinal double A = lineVectorX * lineVectorX * planetModel . inverseAbSquared + lineVectorY * lineVectorY * planetModel . inverseAbSquared + lineVectorZ * lineVectorZ * planetModel . inverseCSquared ; \n\tfinal double B = NUM00 * ( lineVectorX * x0 * planetModel . inverseAbSquared + lineVectorY * y0 * planetModel . inverseAbSquared + lineVectorZ * z0 * planetModel . inverseCSquared ) ; \n\tfinal double C = x0 * x0 * planetModel . inverseAbSquared + y0 * y0 * planetModel . inverseAbSquared + z0 * z0 * planetModel . inverseCSquared - NUM00 ; \n\tfinal double BsquaredMinus = B * B - NUM00 * A * C ; \n\tif $F7637 ( Math , BsquaredMinus , MINIMUM_RESOLUTION_SQUARED ) { \n\t\tfinal double inverse2A = NUM00 / ( NUM00 * A ) ; \n\t\tfinal double t = - B * inverse2A ; \n\t\tfinal double pointX = lineVectorX * t + x0 ; \n\t\tfinal double pointY = lineVectorY * t + y0 ; \n\t\tfinal double pointZ = lineVectorZ * t + z0 ; \n\t\tfor ( final Membership bound : bounds ) { \n\t\t\tif $F416704 ( bound , pointX , pointY , pointZ ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\tfor ( final Membership bound : moreBounds ) { \n\t\t\tif $F416704 ( bound , pointX , pointY , pointZ ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\telse if ( BsquaredMinus > NUM00 ) { \n\t\tfinal double inverse2A = NUM00 / ( NUM00 * A ) ; \n\t\tfinal double sqrtTerm = Math . sqrt ( BsquaredMinus ) ; \n\t\tfinal double t1 = ( - B + sqrtTerm ) * inverse2A ; \n\t\tfinal double t2 = ( - B - sqrtTerm ) * inverse2A ; \n\t\tfinal double point1X = lineVectorX * t1 + x0 ; \n\t\tfinal double point1Y = lineVectorY * t1 + y0 ; \n\t\tfinal double point1Z = lineVectorZ * t1 + z0 ; \n\t\tboolean point1Valid = _BOOL ; \n\t\tfor ( final Membership bound : bounds ) { \n\t\t\tif $F416704 ( bound , point1X , point1Y , point1Z ) $F3468 ( point1Valid , _BOOL ) } \n\t\tif ( point1Valid ) { \n\t\t\tfor ( final Membership bound : moreBounds ) { \n\t\t\t\tif $F416704 ( bound , point1X , point1Y , point1Z ) $F3468 ( point1Valid , _BOOL ) } \n\t\t\t} \n\t\t$F9303 ( point1Valid , _BOOL ) final double point2X = lineVectorX * t2 + x0 ; \n\t\tfinal double point2Y = lineVectorY * t2 + y0 ; \n\t\tfinal double point2Z = lineVectorZ * t2 + z0 ; \n\t\tfor ( final Membership bound : bounds ) { \n\t\t\tif $F416704 ( bound , point2X , point2Y , point2Z ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\tfor ( final Membership bound : moreBounds ) { \n\t\t\tif $F416704 ( bound , point2X , point2Y , point2Z ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public static long longFromBase64 ( String value ) { \n\tint pos = NUM00 ; \n\tlong longVal = base64Values [ value . charAt ( pos ++ ) ] ; \n\t$F1749 ( len , value ) while ( pos < len ) { \n\t\tlongVal <<= NUM00 ; \n\t\tlongVal |= base64Values [ value . charAt ( pos ++ ) ] ; \n\t\t} \n\treturn longVal ; \n\t} \n"}, {"code": "public List $F136545 bottom ( int n ) { \n\tList $F136545 $F204 ( bottom ) ; \n\t$F2027 values = data . toIntArray ( ) ; \n\tIntArrays . parallelQuickSort ( values ) ; \n\tfor ( int i = NUM00 ; \n\ti < n && i < values . length ; \n\ti ++ ) { \n\t\tbottom . add ( PackedLocalTime . asLocalTime ( values [ i ] ) ) ; \n\t\t} \n\treturn bottom ; \n\t} \n"}, {"code": "public double SumOutlinkAuthorityScore ( Page page ) { \n\t$F3803 outLinks = page . getOutlinks ( ) ; \n\tdouble authScore = NUM00 ; \n\tfor ( $F2277 ( i , outLinks ) ) { \n\t\tPage outLink = $F67701 ( pTable , outLinks , i ) ; \n\t\tif ( outLink != null ) { \n\t\t\tauthScore += outLink . authority ; \n\t\t\t} \n\t\t} \n\treturn authScore ; \n\t} \n"}, {"code": "public synchronized void end $F72 { \n\t$F59 ( graphicsToBeDrawn ) $F13324 ( currentGraphics , graphicsDrawn ) graphicsDrawn . closeWhenEmpty ( ) ; \n\tif $F34687 ( printerJobThread ) { \n\t\ttry $F45915 ( printerJobThread ) $F887 } \n\t} \n"}, {"code": "public List < FileStatus > browse ( String filePath ) throws Exception { \n\t$F21448 ( LOG , filePath , hdfsEndPoint ) FileSystem hdfsFileSystem = null ; \n\tFileStatus [ ] listStatus ; \n\ttry { \n\t\tConfiguration config = createConfig ( ) ; \n\t\thdfsFileSystem = getFileSystem ( config ) ; \n\t\t$F424 ( path , filePath ) listStatus = hdfsFileSystem . listStatus ( path ) ; \n\t\t} \n\tcatch ( Exception ex ) { \n\t\tLOG . error ( NUM00 + filePath , ex . getMessage ( ) ) ; \n\t\tthrow new Exception $F16296 ( ex ) ; \n\t\t} \n\t$F48674 ( hdfsFileSystem ) $F26323 ( Arrays , listStatus ) } \n"}, {"code": "public void append ( CharSequence s ) $F288 ( text , s ) "}, {"code": "public EipModelWizardInitialObjectCreationPage ( String pageId ) { \n\tsuper ( pageId ) ; \n\t} \n"}, {"code": "private void unwrapData $F72 throws $F5690 { \n\t$F51622 ( log ) $F14257 ( inNetBuf ) SSLEngineResult res = unwrap0 ( ) ; \n\t$F116630 ( inNetBuf ) checkStatus ( res ) ; \n\trenegotiateIfNeeded ( res ) ; \n\t} \n"}, {"code": "public boolean isAttributeSpecified ( int attributeHandle ) { \n\tint type = getNodeType ( attributeHandle ) ; \n\tif ( DTM . ATTRIBUTE_NODE == type ) { \n\t\tAttr attr = ( Attr ) getNode ( attributeHandle ) ; \n\t\treturn attr . getSpecified ( ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private static void checkPermission $F72 throws SecurityException { \n\t$F8108 ( sm , System ) if ( sm != null ) { \n\t\tsm . checkPermission ( new JodaTimePermission $F580 ) ; \n\t\t} \n\t} \n"}, {"code": "private void storePassword ( String password ) { \n\tif ( isStore && sharedState != null ) { \n\t\tsharedState . put ( getPwdKey ( ) , password ) ; \n\t\t} \n\t} \n"}, {"code": "$F1322 ( criteria , oredCriteria ) "}, {"code": "void deleteChild ( PolicyNode childNode ) { \n\t$F4640 ( isImmutable ) mChildren . remove ( childNode ) ; \n\t} \n"}, {"code": "$F32569 ( panel , cols , rows , filler , filled_cell_11 , _BOOL , cc , Box , index ) "}, {"code": "public void testFloatValuePlusZero $F72 { \n\tString a = NUM00 ; \n\t$F12208 ( aNumber , a ) int zero = NUM00 ; \n\tfloat result = aNumber . floatValue ( ) ; \n\tassertTrue ( NUM00 , Float . floatToIntBits ( result ) == zero ) ; \n\t} \n"}, {"code": "public ExternalProcessResult awaitTerminationAndResult ( int timeoutMs , boolean destroyOnError ) throws InterruptedException , TimeoutException , OperationCancellation , IOException { \n\tawaitTermination ( timeoutMs , destroyOnError ) ; \n\treturn new ExternalProcessResult ( process . exitValue ( ) , getStdOutBytes ( ) , getStdErrBytes ( ) ) ; \n\t} \n"}, {"code": "public void refreshInheritedMethods ( Set modifiedSuperExpandos ) { \n\tfor ( $F2774 ( i , modifiedSuperExpandos ) ) { \n\t\tExpandoMetaClass superExpando = ( ExpandoMetaClass ) i . next ( ) ; \n\t\tif ( superExpando != this ) { \n\t\t\trefreshInheritedMethods ( superExpando ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static List < Fragment > parsePlaceholder ( String parseString ) throws PlaceholderParseException { \n\tList < Fragment > result = new ArrayList < Fragment > $F72 ; \n\tint currOutputIndex = NUM00 ; \n\tint currSearchIndex = NUM00 ; \n\twhile ( _BOOL ) { \n\t\tif $F9615 ( currSearchIndex , parseString ) $F5153 $F12712 ( startIndex , parseString , currSearchIndex ) if ( startIndex == - NUM00 ) { \n\t\t\tif $F7007 ( currOutputIndex , parseString ) { \n\t\t\t\tString $F465724 ( endString , parseString , currOutputIndex ) ; \n\t\t\t\tTextFragment textFragment = new TextFragment ( endString ) ; \n\t\t\t\tresult . add ( textFragment ) ; \n\t\t\t\t} \n\t\t\t$F597 } \n\t\tif ( startIndex > NUM00 ) { \n\t\t\t$F12715 ( textSoFar , parseString , currOutputIndex , startIndex ) if $F35625 ( textSoFar ) { \n\t\t\t\tresult . add ( new TextFragment ( textSoFar ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( ( startIndex > NUM00 ) && $F198486 ( parseString , startIndex ) ) { \n\t\t\tcurrOutputIndex = startIndex + NUM00 ; \n\t\t\tcurrSearchIndex = startIndex + NUM00 ; \n\t\t\t$F598 } \n\t\t$F12712 ( endIndex , parseString , startIndex ) if ( endIndex == - NUM00 ) { \n\t\t\tthrow new PlaceholderParseException ( NUM00 + $F83851 ( parseString , startIndex ) + NUM00 ) ; \n\t\t\t} \n\t\t$F129846 ( between , parseString , startIndex , endIndex ) ParameterFragment parameterFragment = new ParameterFragment ( between ) ; \n\t\tresult . add ( parameterFragment ) ; \n\t\tcurrOutputIndex = endIndex + NUM00 ; \n\t\tcurrSearchIndex = endIndex ; \n\t\t} \n\tLinkedList < Fragment > fragments = new LinkedList < Fragment > $F72 ; \n\t$F56021 ( fragments , result ) for ( $F2277 ( i , result ) ) { \n\t\tFragment fragment = result . get ( i ) ; \n\t\tif ( ! ( result . get ( i ) instanceof TextFragment ) ) $F196951 ( fragments , fragment ) if ( ! ( fragments . getLast ( ) instanceof TextFragment ) ) $F196951 ( fragments , fragment ) TextFragment textFragment = ( TextFragment ) fragments . getLast ( ) ; \n\t\tfragments . removeLast ( ) ; \n\t\tfragments . add ( new TextFragment ( textFragment . getValue ( ) + fragment . getValue ( ) ) ) ; \n\t\t} \n\treturn fragments ; \n\t} \n"}, {"code": "$F1 protected void failed $F72 { \n\trelation . setCanceled ( _BOOL ) ; \n\tsuper . failed ( ) ; \n\t} \n"}, {"code": "private void routeSingleGetRequest ( RequestAndResponse requestAndResponse , String uri ) throws $F47978 { \n\tif $F3106 ( uri ) { \n\t\thandleHtmlShowNotebooks ( requestAndResponse ) ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\thandleHtmlShowQuotations ( requestAndResponse ) ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\thandleHtmlShowSources ( requestAndResponse ) ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\thandleHtmlShowSource ( requestAndResponse ) ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\thandleHtmlShowNotebook ( requestAndResponse ) ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\thandleHtmlSearch ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlBasicHelp ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlAdvancedHelp ( requestAndResponse ) ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\thandleHtmlHelp ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlUserBackupForm ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlUserRestoreForm ( requestAndResponse ) ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\thandleHtmlShowAccount ( requestAndResponse ) ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\thandleHtmlShowAccounts ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlShutdownForm ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlClearForm ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlOnlineBackupForm ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlCheckForErrorsForm ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlShowDBBackups ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlOfflineDbBackupForm ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleJsonShowEntry ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleJsonShowEntryParent ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleJsonShowEntryChildren ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleJsonSearchNotes ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlNewNotebookForm ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlNothing ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlCouldNotCreateNote ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlShowRestoreDbBackupCommand ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlShowSignedOut ( requestAndResponse ) ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\thandleHtmlChangePassword ( requestAndResponse ) ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\thandleHtmlChangeAccount ( requestAndResponse ) ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\thandleHtmlCloseAccount ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleJsonIsSignedIn ( requestAndResponse ) ; \n\t\t} \n\telse if $F3057 ( uri ) { \n\t\thandleHtmlUserRestoreFrame ( requestAndResponse ) ; \n\t\t} \n\telse { \n\t\treturnHtml404 ( requestAndResponse ) ; \n\t\t} \n\t} \n"}, {"code": "private void changeAnnotationDocumentState ( SourceDocument aSourceDocument , User aUser , AnnotationDocumentStateTransition aAnnotationDocumentStateTransition ) { \n\tAnnotationDocument annotationDocument = repository . getAnnotationDocument ( aSourceDocument , aUser ) ; \n\tannotationDocument . setState ( AnnotationDocumentStateTransition . transition ( aAnnotationDocumentStateTransition ) ) ; \n\ttry { \n\t\trepository . createAnnotationDocument ( annotationDocument ) ; \n\t\t} \n\tcatch ( IOException e ) $F22715 ( LOG ) } \n"}, {"code": "boolean removeEdge ( SparseEdge e ) { \n\t$F12396 ( removedEdge , edges , e ) boolean removedNeighbour = neighbours . remove ( e . getOpposite ( this ) ) ; \n\tif ( removedEdge && removedNeighbour ) return _BOOL ; \n\telse if ( ! removedEdge && ! removedNeighbour ) return _BOOL ; \n\telse $F11388 } \n"}, {"code": "protected void longKeyPress ( int keyCode ) $F845 "}, {"code": "public boolean hasDescendant ( Pattern pattern ) { \n\tQueue $F280831 nodesToProcess = new LinkedList $F280831 $F72 ; \n\tnodesToProcess . add ( this ) ; \n\twhile $F5973 ( nodesToProcess ) { \n\t\tBNode currentNode = nodesToProcess . poll ( ) ; \n\t\tfor ( BNode descendantNode : currentNode . getOutputNodes ( ) ) { \n\t\t\tMatcher matcher = pattern . matcher ( descendantNode . getId ( ) ) ; \n\t\t\t$F266906 ( matcher , _BOOL ) $F2201 ( nodesToProcess , descendantNode ) } \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public int fileWrite $F139836 ( handle , buffer , offset , count ) { \n\tif ( ( offset | count ) < NUM00 || offset > buffer . length || buffer . length - offset < count ) { \n\t\tthrow new ArrayIndexOutOfBoundsException ( $F130320 ( buffer , offset ) + count ) ; \n\t\t} \n\t$F14826 ( count ) $F96 data = buffer ; \n\tif ( offset > NUM00 ) $F65231 ( data , count , System , buffer , offset ) IntOut bytesWrittenOut = new IntOut $F72 ; \n\ttry { \n\t\tcheckResult ( LibIMobileDevice . afc_file_write ( getRef ( ) , handle , data , count , bytesWrittenOut ) ) ; \n\t\t$F129070 ( bytesWritten , bytesWrittenOut ) return bytesWritten ; \n\t\t} \n\t$F105993 ( bytesWrittenOut ) } \n"}, {"code": "private static void generateFiles $F72 { \n\t$F806 classNames ; \n\tResourceBundle rules , info ; \n\tinfo = ResourceBundle . getBundle ( NUM00 , new Locale ( language , country , valiant ) , BreakIteratorRBControl . INSTANCE ) ; \n\tclassNames = info . getStringArray ( NUM00 ) ; \n\trules = ResourceBundle . getBundle ( NUM00 , new Locale ( language , country , valiant ) , BreakIteratorRBControl . INSTANCE ) ; \n\tif $F106053 ( info ) { \n\t\tgenerateDataFile ( info . getString ( NUM00 ) , rules . getString ( NUM00 ) , classNames [ NUM00 ] ) ; \n\t\t} \n\tif $F106053 ( info ) { \n\t\tgenerateDataFile ( info . getString ( NUM00 ) , rules . getString ( NUM00 ) , classNames [ NUM00 ] ) ; \n\t\t} \n\tif $F106053 ( info ) { \n\t\tgenerateDataFile ( info . getString ( NUM00 ) , rules . getString ( NUM00 ) , classNames [ NUM00 ] ) ; \n\t\t} \n\tif $F106053 ( info ) { \n\t\tgenerateDataFile ( info . getString ( NUM00 ) , rules . getString ( NUM00 ) , classNames [ NUM00 ] ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isCglibProxy ( Object object ) { \n\treturn ClassUtils . isCglibProxyClass ( object . getClass ( ) ) ; \n\t} \n"}, {"code": "private $F5415 calculateImageIndents $F72 { \n\t$F2268 ( mTempMatrix ) mTempMatrix . setRotate ( - getCurrentAngle ( ) ) ; \n\t$F5415 $F42716 ( unrotatedImageCorners , Arrays , mCurrentImageCorners ) ; \n\t$F282780 ( unrotatedCropBoundsCorners , RectUtils , mCropRect ) mTempMatrix . mapPoints ( unrotatedImageCorners ) ; \n\tmTempMatrix . mapPoints ( unrotatedCropBoundsCorners ) ; \n\t$F85496 ( unrotatedImageRect , RectUtils , unrotatedImageCorners ) $F85496 ( unrotatedCropRect , RectUtils , unrotatedCropBoundsCorners ) float deltaLeft = unrotatedImageRect . left - unrotatedCropRect . left ; \n\tfloat deltaTop = unrotatedImageRect . top - unrotatedCropRect . top ; \n\tfloat deltaRight = unrotatedImageRect . right - unrotatedCropRect . right ; \n\tfloat deltaBottom = unrotatedImageRect . bottom - unrotatedCropRect . bottom ; \n\tfloat indents [ ] = $F12454 ; \n\t$F282795 ( indents , deltaLeft ) $F282795 ( indents , deltaTop ) $F282797 ( indents , deltaRight ) $F282797 ( indents , deltaBottom ) $F2268 ( mTempMatrix ) mTempMatrix . setRotate ( getCurrentAngle ( ) ) ; \n\tmTempMatrix . mapPoints ( indents ) ; \n\treturn indents ; \n\t} \n"}, {"code": "public void testBug10630 $F72 throws Exception { \n\tConnection conn2 = null ; \n\tStatement stmt2 = null ; \n\ttry { \n\t\tconn2 = getConnectionWithProps ( ( Properties ) null ) ; \n\t\t$F2715 ( stmt2 , conn2 ) $F59 ( conn2 ) stmt2 . getWarnings ( ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\tcatch ( SQLException sqlEx ) { \n\t\tassertEquals ( SQLError . SQL_STATE_ILLEGAL_ARGUMENT , sqlEx . getSQLState ( ) ) ; \n\t\t} \n\t$F85840 ( stmt2 , conn2 ) } \n"}, {"code": "public static boolean equals ( $F8748 field1 , $F8748 field2 ) $F17603 ( field1 , field2 , Arrays ) "}, {"code": "public void toFront ( final WorkflowAnnotation anno ) { \n\t$F826 ( anno ) synchronized ( lock ) { \n\t\tif $F16914 ( annotationsDrawOrder , anno ) $F207 ( annotationsDrawOrder , anno ) if $F16914 ( annotationsEventOrder , anno ) $F6966 ( annotationsEventOrder , anno ) } \n\t} \n"}, {"code": "public synchronized void addFrame ( final Image image , final long frameDuration ) { \n\ttotalDuration += frameDuration ; \n\tframes . add ( new AnimFrame ( image , totalDuration ) ) ; \n\t} \n"}, {"code": "public static String printCodePointAsString ( int codePoint ) { \n\t$F20818 ( builder ) $F84 ( builder ) try { \n\t\tprintStringCodePoint ( builder , codePoint ) ; \n\t\t} \n\tcatch ( IOException e ) $F62406 ( e ) $F84 ( builder ) $F92 ( builder ) } \n"}, {"code": "private void cleanupMinidumpFile $F72 { \n\tif ( ! CrashFileManager . tryMarkAsUploaded ( mFileToUpload ) ) { \n\t\tLog . w ( TAG , NUM00 + mFileToUpload + NUM00 ) ; \n\t\tif $F7119 ( mFileToUpload ) { \n\t\t\t$F248237 ( Log , TAG , mFileToUpload ) } \n\t\t} \n\t} \n"}, {"code": "boolean closeOutbound $F72 throws SSLException { \n\tif ( sslEngine == null || sslEngine . isOutboundDone ( ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tsslEngine . closeOutbound ( ) ; \n\tcreateOutNetBuffer ( NUM00 ) ; \n\tSSLEngineResult result ; \n\tfor ( $F589 ) { \n\t\tresult = sslEngine . wrap ( emptyBuffer . buf ( ) , outNetBuffer . buf ( ) ) ; \n\t\tif ( result . getStatus ( ) == SSLEngineResult . Status . BUFFER_OVERFLOW ) { \n\t\t\toutNetBuffer . capacity ( $F238996 ( outNetBuffer ) ) ; \n\t\t\t$F239000 ( outNetBuffer ) } \n\t\telse $F5153 } \n\tif ( result . getStatus ( ) != SSLEngineResult . Status . CLOSED ) { \n\t\tthrow new SSLException ( NUM00 + result ) ; \n\t\t} \n\t$F14257 ( outNetBuffer ) return _BOOL ; \n\t} \n"}, {"code": "$F5466 private static Bitmap extractThumbnail ( Bitmap source , int width , int height ) $F33971 ( extractThumbnail , source , width , height , OPTIONS_NONE ) "}, {"code": "private void writePkgInfo $F72 throws BuildException { \n\t$F109797 ( pkgInfo , mContentsDir ) PrintWriter writer = null ; \n\ttry { \n\t\twriter = new PrintWriter ( new BufferedWriter ( new FileWriter ( pkgInfo ) ) ) ; \n\t\twriter . print ( bundleProperties . getCFBundlePackageType ( ) ) ; \n\t\twriter . println ( bundleProperties . getCFBundleSignature ( ) ) ; \n\t\t$F1206 ( writer ) } \n\tcatch ( IOException ex ) { \n\t\tthrow new BuildException ( NUM00 + ex ) ; \n\t\t} \n\t$F19458 ( mFileUtils , writer ) } \n"}, {"code": "public $F80820 toArray $F72 { \n\tif ( firstEvent == null ) { \n\t\treturn new EventBean $F380 ; \n\t\t} \n\tif ( additionalEvents == null ) { \n\t\treturn new EventBean [ ] { \n\t\t\tfirstEvent } \n\t\t; \n\t\t} \n\t$F80820 events = new EventBean [ NUM00 + additionalEvents . size ( ) ] ; \n\tevents [ NUM00 ] = firstEvent ; \n\tint count = NUM00 ; \n\tfor ( EventBean theEvent : additionalEvents ) $F2319 ( events , count , theEvent ) return events ; \n\t} \n"}, {"code": "private $F96 decode ( DerInputStream in ) throws IOException { \n\tDerValue val = in . getDerValue ( ) ; \n\t$F1208 ( derEncoding , val ) derEncoding [ NUM00 ] = DerValue . tag_SetOf ; \n\tDerInputStream derIn = new DerInputStream ( derEncoding ) ; \n\tDerValue [ ] derVals = derIn . getSet ( NUM00 , _BOOL ) ; \n\tPKCS9Attribute attrib ; \n\tObjectIdentifier oid ; \n\tboolean reuseEncoding = _BOOL ; \n\tfor ( $F1139 ( i , derVals ) ) { \n\t\ttry { \n\t\t\tattrib = new PKCS9Attribute ( derVals [ i ] ) ; \n\t\t\t} \n\t\tcatch ( ParsingException e ) { \n\t\t\tif ( ignoreUnsupportedAttributes ) $F34544 ( reuseEncoding , _BOOL ) else { \n\t\t\t\tthrow e ; \n\t\t\t\t} \n\t\t\t} \n\t\toid = attrib . getOID ( ) ; \n\t\tif $F26935 ( attributes , oid ) $F3495 ( oid ) if ( permittedAttributes != null && ! permittedAttributes . containsKey ( oid ) ) $F3587 ( oid ) attributes . put ( oid , attrib ) ; \n\t\t} \n\treturn reuseEncoding ? derEncoding : generateDerEncoding ( ) ; \n\t} \n"}, {"code": "StringVector processPREFIX_LIST $F17723 ( handler , uri , name , rawName , value ) throws $F2253 { \n\t$F17727 ( tokenizer , value ) $F17729 ( nStrings , tokenizer ) $F17731 ( strings , nStrings ) for ( $F119 ( i , nStrings ) ) { \n\t\t$F8095 ( prefix , tokenizer ) String url = handler . getNamespaceForPrefix ( prefix ) ; \n\t\tif ( prefix . equals ( Constants . ATTRVAL_DEFAULT_PREFIX ) || url != null ) strings . addElement ( prefix ) ; \n\t\telse throw new $F2253 ( XSLMessages . createMessage ( XSLTErrorResources . ER_CANT_RESOLVE_NSPREFIX , $F8844 ( prefix ) ) ) ; \n\t\t} \n\treturn strings ; \n\t} \n"}, {"code": "$F1 public CategoricalResults clone $F72 { \n\tCategoricalResults copy = new CategoricalResults ( n ) ; \n\t$F17879 ( copy , Arrays , probabilities ) return copy ; \n\t} \n"}, {"code": "private static StringBuilder dump ( StringBuilder _lbuffer , long value ) { \n\tfor ( $F6268 ( j ) ) { \n\t\t_lbuffer . append ( _hexcodes [ ( int ) ( value > > _shifts [ j ] ) & NUM00 ] ) ; \n\t\t} \n\treturn _lbuffer ; \n\t} \n"}, {"code": "private boolean typeSpecialChar ( char c ) { \n\tswitch ( c ) { \n\t\t$F1262 controller . keyPress ( KeyEvent . VK_TAB ) ; \n\t\tcontroller . keyRelease ( KeyEvent . VK_TAB ) ; \n\t\treturn _BOOL ; \n\t\t$F1262 controller . keyPress ( KeyEvent . VK_ENTER ) ; \n\t\tcontroller . keyRelease ( KeyEvent . VK_ENTER ) ; \n\t\treturn _BOOL ; \n\t\t$F1267 return _BOOL ; \n\t\t} \n\t} \n"}, {"code": "protected static boolean eq ( Object o1 , Object o2 ) $F64386 ( o1 , o2 ) "}, {"code": "public static boolean hasMimeType ( String mimeType ) $F123773 ( mimeType , _BOOL , mimeTypeToExtensionMap ) "}, {"code": "public Iterable < Notification > skip ( $F2304 final Iterable < Notification > notifications , final long startId , final boolean inclusive , final int limitSize ) { \n\tObjects . requireNonNull ( notifications ) ; \n\tfinal int position = indexOf ( notifications , startId ) ; \n\tif ( position == - NUM00 ) { \n\t\treturn Iterables . limit ( notifications , limitSize ) ; \n\t\t} \n\tif ( inclusive ) { \n\t\treturn Iterables . limit ( Iterables . skip ( notifications , position ) , limitSize ) ; \n\t\t} \n\treturn Iterables . limit ( Iterables . skip ( notifications , position + NUM00 ) , limitSize ) ; \n\t} \n"}, {"code": "public boolean writeData ( PdxWriter writer , Object obj ) { \n\tif ( isRelevant ( obj . getClass ( ) ) ) { \n\t\twriteData ( writer , obj , getClassInfo ( obj . getClass ( ) ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected final void writeC ( ByteBuffer buf , int value ) $F180946 ( buf , value ) "}, {"code": "$F4562 ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , fuzzyThreshold , scaleFactor , isTouchEvent , deltaValue , currentScrollValue , scrollValue , HORIZONTAL , VERTICAL , mode , newScrollValue , PullToRefreshBase , Log , LOG_TAG , State , Math ) "}, {"code": "$F18907 ( priorityQueue ) "}, {"code": "public ViterbiPoint ( Item item ) $F6988 ( this , item ) "}, {"code": "protected void paintContentBorderBottomEdge ( Graphics g , int x , int y , int w , int h , boolean drawBroken , Rectangle selRect , boolean isContentBorderPainted ) { \n\tif ( isContentBorderPainted ) { \n\t\tg . setColor ( darkShadow ) ; \n\t\tg . fillRect ( x , y + h - NUM00 , w - NUM00 , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private void emitListAdd $F6406 ( method , fieldName , builder ) { \n\t$F84 ( builder ) $F6407 ( builder , getListAdderName , fieldName ) $F84 ( builder ) builder . append ( getTypeArgumentImplName ( ( ParameterizedType ) method . getGenericReturnType ( ) , NUM00 ) ) ; \n\t$F84 ( builder ) $F6407 ( builder , getEnsureName , fieldName ) $F84 ( builder ) builder . append ( fieldName ) ; \n\t$F84 ( builder ) $F84 ( builder ) } \n"}, {"code": "public RSAPublicKey parsePEMPublicKey ( String pem ) throws GeneralSecurityException { \n\ttry { \n\t\t$F12490 ( bs , decodeAsciiArmoredPEM , pem ) $F23500 ( data , ByteBuffer , bs ) final ASN1Object ob = asn1Parser . parseASN1 ( data ) ; \n\t\tfinal List < ASN1Object > seq = asn1ObjectToSequence ( ob , NUM00 ) ; \n\t\tfinal BigInteger $F245221 ( modulus , asn1ObjectToBigInt , seq ) ; \n\t\tfinal BigInteger $F245221 ( exponent , asn1ObjectToBigInt , seq ) ; \n\t\treturn createKeyFromModulusAndExponent ( modulus , exponent ) ; \n\t\t} \n\tcatch ( IllegalArgumentException e ) { \n\t\tthrow new InvalidKeyException $F72 ; \n\t\t} \n\t} \n"}, {"code": "public static $F4203 ParallelPublisher $F4203 from ( $F40799 ( source ) , boolean ordered , int parallelism ) { \n\treturn from ( source , ordered , parallelism , Px . bufferSize ( ) , Px . defaultQueueSupplier ( Px . bufferSize ( ) ) ) ; \n\t} \n"}, {"code": "public long next $F46828 ( startTime , fromTime , currentCount ) { \n\tif ( startTime == NUM00 ) startTime = RecurrenceUtil . now ( ) ; \n\tif ( fromTime == NUM00 ) fromTime = startTime ; \n\tif ( getEndTime ( ) != NUM00 && getEndTime ( ) <= RecurrenceUtil . now ( ) ) $F1082 Debug . logVerbose ( NUM00 , module ) ; \n\tif ( getCount ( ) != - NUM00 && currentCount >= getCount ( ) ) $F1082 Debug . logVerbose ( NUM00 , module ) ; \n\tboolean isSeeking = _BOOL ; \n\tlong nextRuntime = NUM00 ; \n\tlong seekTime = fromTime ; \n\tint loopProtection = NUM00 ; \n\tint maxLoop = ( $F138998 * NUM00 ) ; \n\twhile ( isSeeking && loopProtection < maxLoop ) { \n\t\tDate nextRun = getNextFreq ( startTime , seekTime ) ; \n\t\t$F36868 ( seekTime , nextRun ) if ( validByRule ( nextRun ) ) { \n\t\t\tisSeeking = _BOOL ; \n\t\t\t$F36868 ( nextRuntime , nextRun ) } \n\t\tloopProtection ++ ; \n\t\t} \n\treturn nextRuntime ; \n\t} \n"}, {"code": "public void addToQueue ( Var var ) { \n\t$F12632 ( addToQueue , Collections , var ) } \n"}, {"code": "public String canonicalize ( String simpleURL ) { \n\tString resultURL = simpleURL ; \n\tif $F3106 ( simpleURL ) { \n\t\tresultURL = NUM00 + simpleURL ; \n\t\t} \n\telse if $F3106 ( simpleURL ) { \n\t\tresultURL = NUM00 + simpleURL ; \n\t\t} \n\telse if $F3106 ( simpleURL ) { \n\t\tresultURL = NUM00 + simpleURL ; \n\t\t} \n\telse if ( ! hasProtocolName ( simpleURL ) ) { \n\t\tif ( isSimpleHostName ( simpleURL ) ) $F253145 ( simpleURL ) resultURL = NUM00 + simpleURL ; \n\t\t} \n\treturn resultURL ; \n\t} \n"}, {"code": "public String read ( String filename ) throws IOException { \n\treturn ProcFile . readFile ( String . format ( NUM00 , pid , filename ) ) ; \n\t} \n"}, {"code": "private long calculateAnimationDuration ( float initialVelocity , float displacement ) { \n\treturn MathUtils . clamp ( Math . round ( Math . abs ( NUM00 * displacement / initialVelocity ) ) , MINIMUM_ANIMATION_DURATION_MS , MAXIMUM_ANIMATION_DURATION_MS ) ; \n\t} \n"}, {"code": "$F10344 ( HTTPRequestMethod ) @ Before ( adviceClass = { \n\t$F10345 , AnonymousViewCheck . class , UserBlockCheck . class } \n) $F10353 public void showHomePoints $F10355 ( context , request , response , userName ) throws Exception { \n\t$F10360 ( user , request , User ) request . setAttribute ( Keys . TEMAPLTE_DIR_NAME , Symphonys . get ( NUM00 ) ) ; \n\t$F10375 ( renderer ) context . setRenderer ( renderer ) ; \n\t$F10384 ( renderer ) $F10377 ( dataModel , renderer ) filler . fillHeaderAndFooter ( request , response , dataModel ) ; \n\t$F10362 ( pageNumStr , request ) $F10365 ( Strings , pageNumStr ) $F10367 ( pageNum , Integer , pageNumStr ) $F10411 ( pageSize , Symphonys ) $F10411 ( windowSize , Symphonys ) fillHomeUser ( dataModel , user ) ; \n\tavatarQueryService . fillUserAvatarURL ( user ) ; \n\t$F10381 ( followingId , user , Keys ) dataModel . put ( Follow . FOLLOWING_ID , followingId ) ; \n\tfinal JSONObject userPointsResult = pointtransferQueryService . getUserPoints ( $F10378 ( user , Keys ) , pageNum , pageSize ) ; \n\tfinal $F10413 userPoints = CollectionUtils . < JSONObject > jsonArrayToList ( userPointsResult . optJSONArray ( Keys . RESULTS ) ) ; \n\tdataModel . put ( Common . USER_HOME_POINTS , userPoints ) ; \n\tfinal boolean isLoggedIn = ( Boolean ) dataModel . get ( Common . IS_LOGGED_IN ) ; \n\tif ( isLoggedIn ) { \n\t\tfinal JSONObject currentUser = ( JSONObject ) dataModel . get ( Common . CURRENT_USER ) ; \n\t\t$F10381 ( followerId , currentUser , Keys ) final boolean isFollowing = followQueryService . isFollowing ( followerId , $F10378 ( user , Keys ) ) ; \n\t\tdataModel . put ( Common . IS_FOLLOWING , isFollowing ) ; \n\t\t} \n\tuser . put ( UserExt . USER_T_CREATE_TIME , new Date ( user . getLong ( Keys . OBJECT_ID ) ) ) ; \n\tfinal int pointsCnt = userPointsResult . optInt ( Pagination . PAGINATION_RECORD_COUNT ) ; \n\tfinal int $F10428 ( pageCount , Math , pointsCnt , pageSize ) ; \n\tfinal $F3807 pageNums = Paginator . paginate ( pageNum , pageSize , pageCount , windowSize ) ; \n\tif $F5973 ( pageNums ) { \n\t\tdataModel . put ( Pagination . PAGINATION_FIRST_PAGE1 , pageNums . get ( NUM00 ) ) ; \n\t\tdataModel . put ( Pagination . PAGINATION_LAST_PAGE1 , $F7661 ( pageNums ) ) ; \n\t\t} \n\t$F10442 ( dataModel , Pagination , pageNum ) $F10444 ( dataModel , Pagination , pageCount ) dataModel . put ( Pagination . PAGINATION_PAGE1S , pageNums ) ; \n\t} \n"}, {"code": "private static double norm $F10212 ( v ) { \n\tdouble agg = NUM00 ; \n\tfor ( $F1139 ( i , v ) ) { \n\t\tagg += ( v [ i ] * v [ i ] ) ; \n\t\t} \n\t$F41531 ( Math , agg ) } \n"}, {"code": "private int measureHeight ( int measureSpec ) { \n\tfloat result ; \n\t$F20444 ( specMode , MeasureSpec , measureSpec ) $F23132 ( specSize , MeasureSpec , measureSpec ) if ( specMode == MeasureSpec . EXACTLY ) { \n\t\tresult = specSize ; \n\t\t} \n\telse { \n\t\tresult = mPaintSelected . getStrokeWidth ( ) + getPaddingTop ( ) + getPaddingBottom ( ) ; \n\t\t$F23140 ( specMode , MeasureSpec , result , Math , specSize ) } \n\treturn ( int ) ( ( float ) Math . ceil ( result ) ) ; \n\t} \n"}, {"code": "public void layout ( Container container ) { \n\tMap < Location , Drawable > comps = getComponentsByLocation ( container ) ; \n\tDrawable north = comps . get ( Location . NORTH ) ; \n\tDrawable northEast = comps . get ( Location . NORTH_EAST ) ; \n\tDrawable east = comps . get ( Location . EAST ) ; \n\tDrawable southEast = comps . get ( Location . SOUTH_EAST ) ; \n\tDrawable south = comps . get ( Location . SOUTH ) ; \n\tDrawable southWest = comps . get ( Location . SOUTH_WEST ) ; \n\tDrawable west = comps . get ( Location . WEST ) ; \n\tDrawable northWest = comps . get ( Location . NORTH_WEST ) ; \n\tDrawable center = comps . get ( Location . CENTER ) ; \n\tdouble widthWest = getMaxWidth ( northWest , west , southWest ) ; \n\tdouble widthEast = getMaxWidth ( northEast , east , southEast ) ; \n\tdouble heightNorth = getMaxHeight ( northWest , north , northEast ) ; \n\tdouble heightSouth = getMaxHeight ( southWest , south , southEast ) ; \n\tdouble gapEast = ( widthEast > NUM00 ) ? getGapX ( ) : NUM00 ; \n\tdouble gapWest = ( widthWest > NUM00 ) ? getGapX ( ) : NUM00 ; \n\tdouble gapNorth = ( heightNorth > NUM00 ) ? getGapY ( ) : NUM00 ; \n\tdouble gapSouth = ( heightSouth > NUM00 ) ? getGapY ( ) : NUM00 ; \n\t$F162508 ( bounds , container ) Insets2D insets = container . getInsets ( ) ; \n\tif ( insets == null ) { \n\t\tinsets = new Insets2D . Double $F72 ; \n\t\t} \n\tdouble xWest = bounds . getMinX ( ) + insets . getLeft ( ) - gapWest - widthWest ; \n\tdouble xCenter = bounds . getMinX ( ) + insets . getLeft ( ) ; \n\tdouble xEast = bounds . getMaxX ( ) - insets . getRight ( ) + gapEast ; \n\tdouble yNorth = bounds . getMinY ( ) + insets . getTop ( ) - gapNorth - heightNorth ; \n\tdouble yCenter = bounds . getMinY ( ) + insets . getTop ( ) ; \n\tdouble ySouth = bounds . getMaxY ( ) - insets . getBottom ( ) + gapSouth ; \n\tlayoutComponent ( northWest , xWest , yNorth , widthWest , heightNorth ) ; \n\tlayoutComponent ( north , xCenter , yNorth , bounds . getWidth ( ) - insets . getHorizontal ( ) , heightNorth ) ; \n\tlayoutComponent ( northEast , xEast , yNorth , widthEast , heightNorth ) ; \n\tlayoutComponent ( east , xEast , yCenter , widthEast , bounds . getHeight ( ) - insets . getVertical ( ) ) ; \n\tlayoutComponent ( southEast , xEast , ySouth , widthEast , heightSouth ) ; \n\tlayoutComponent ( south , xCenter , ySouth , bounds . getWidth ( ) - insets . getHorizontal ( ) , heightSouth ) ; \n\tlayoutComponent ( southWest , xWest , ySouth , widthWest , heightSouth ) ; \n\tlayoutComponent ( west , xWest , yCenter , widthWest , bounds . getHeight ( ) - insets . getVertical ( ) ) ; \n\tlayoutComponent ( center , xCenter + getGapX ( ) , yCenter + getGapY ( ) , bounds . getWidth ( ) - insets . getHorizontal ( ) - NUM00 * getGapX ( ) , bounds . getHeight ( ) - insets . getVertical ( ) - NUM00 * getGapY ( ) ) ; \n\t} \n"}, {"code": "$F75659 ( takeLock , putLock ) "}, {"code": "public void add ( int i , int data ) { \n\tif ( _length + NUM00 > _capacity ) ensureCapacity ( _length + NUM00 ) ; \n\t$F27096 ( System , _buffer , i , _length ) $F8214 ( _buffer , i , data ) _length += NUM00 ; \n\t} \n"}, {"code": "private double mean $F9830 ( vec ) { \n\tdouble result = NUM00 ; \n\tfor ( $F1139 ( i , vec ) ) result += vec [ i ] ; \n\treturn result / vec . length ; \n\t} \n"}, {"code": "private Sprite ( float xPos , float yPos , float xVel , float yVel , Image ... sprites ) { \n\tif ( sprites != null ) spriteFrame = new ImageView ( sprites [ NUM00 ] ) ; \n\t$F9629 ( playerStates , Arrays , sprites ) spriteFrame . setTranslateX ( xPos ) ; \n\tspriteFrame . setTranslateY ( yPos ) ; \n\tthis . xPos = xPos ; \n\tthis . yPos = yPos ; \n\tthis . xVel = xVel ; \n\tthis . yVel = yVel ; \n\t} \n"}, {"code": "public void close $F72 $F881 ( out ) "}, {"code": "protected static SyncToken createSyncToken ( String dateString , $F5466 String uuid ) { \n\ttry { \n\t\treturn new SyncToken ( DB_DATE_FORMAT . parse ( dateString ) , uuid ) ; \n\t\t} \n\tcatch ( ParseException e ) $F9491 ( e ) } \n"}, {"code": "private static boolean equalsHandlesNulls ( Object a , Object b ) { \n\treturn a == b || $F1256 ( a , b ) ; \n\t} \n"}, {"code": "public void init ( String flagzDirectory ) throws FlagException , EtcdFlagFieldUpdaterException { \n\tthis . directoryPrefix = MoreObjects . firstNonNull ( flagzDirectory , directoryFlag . get ( ) ) ; \n\tclient = new EtcdClient ( uris . toArray ( new URI $F2313 ( uris ) ) ) ; \n\tclient . setRetryHandler ( retryPolicy ) ; \n\tinitialSetAllFlagz ( ) ; \n\t} \n"}, {"code": "public static void closeEL ( InputStream is ) { \n\ttry $F1823 ( is ) $F58785 } \n"}, {"code": "public void testRandom $F72 { \n\tExtremityMonitor monitor = new ExtremityMonitor $F72 ; \n\t$F24605 ( random ) for ( $F6268 ( i ) ) { \n\t\tmonitor . update ( random . nextDouble ( ) ) ; \n\t\t} \n\tassertTrue ( monitor . getMin ( ) < NUM00 ) ; \n\tassertTrue ( monitor . getMax ( ) < NUM00 ) ; \n\tassertTrue ( monitor . getMin ( ) >= NUM00 ) ; \n\tassertTrue ( monitor . getMax ( ) > NUM00 ) ; \n\t} \n"}, {"code": "public static String replace ( String str , char oldChar , String newStr ) { \n\t$F280 ( buf ) for ( $F1088 ( i , str ) ) { \n\t\t$F1280 ( ch , str , i ) if ( ch == oldChar ) $F288 ( buf , newStr ) else $F288 ( buf , ch ) } \n\t$F92 ( buf ) } \n"}, {"code": "@ Action ( $F3144 ) @ ValidationErrorPage ( value = ERROR ) @ SkipValidation public String newform $F72 { \n\tsetLoginDept ( ) ; \n\t$F108456 ( sdf ) try { \n\t\tcutOffDate = sdf . parse ( collectionsUtil . getAppConfigValue ( CollectionConstants . MODULE_NAME_COLLECTIONS_CONFIG , CollectionConstants . APPCONFIG_VALUE_COLLECTIONDATAENTRYCUTOFFDATE ) ) ; \n\t\t} \n\tcatch ( ParseException e ) { \n\t\tLOGGER . error ( getText ( NUM00 ) + e . getMessage ( ) ) ; \n\t\t} \n\treturn NEW ; \n\t} \n"}, {"code": "public TypeDeclaration canonicalize $F72 { \n\t$F17124 sts = getSatisfiedTypes ( ) ; \n\tif $F2979 ( sts ) { \n\t\treturn unit . getAnythingDeclaration ( ) ; \n\t\t} \n\telse if $F10471 ( sts ) { \n\t\tType st = sts . get ( NUM00 ) ; \n\t\tif ( st . isExactlyNothing ( ) ) { \n\t\t\treturn unit . getNothingDeclaration ( ) ; \n\t\t\t} \n\t\t} \n\tfor ( Type st : sts ) { \n\t\tif ( st . isUnion ( ) ) { \n\t\t\t$F17124 caseTypes = st . getCaseTypes ( ) ; \n\t\t\t$F17124 ulist = new $F22982 $F716 ( caseTypes ) ; \n\t\t\tfor ( Type ct : caseTypes ) { \n\t\t\t\t$F17124 ilist = new $F22982 $F716 ( sts ) ; \n\t\t\t\tfor ( Type pt : sts ) { \n\t\t\t\t\tif ( pt == st ) { \n\t\t\t\t\t\taddToIntersection ( ilist , ct , unit ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\taddToIntersection ( ilist , pt , unit ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\tType it = canonicalIntersection ( ilist , unit ) ; \n\t\t\t\taddToUnion ( ulist , it ) ; \n\t\t\t\t} \n\t\t\tTypeDeclaration result = new UnionType ( unit ) ; \n\t\t\tresult . setCaseTypes ( ulist ) ; \n\t\t\treturn result ; \n\t\t\t} \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "public static void openOtherUri ( final String url , final Activity activity ) { \n\tIntent intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( url ) ) ; \n\tactivity . startActivity ( intent ) ; \n\t} \n"}, {"code": "public static boolean waitForAllActiveAndLiveReplicas ( ZkStateReader zkStateReader , int timeoutInMs ) $F6001 ( waitForAllActiveAndLiveReplicas , zkStateReader , timeoutInMs ) "}, {"code": "public synchronized void addElement ( E object ) { \n\tif ( elementCount == elementData . length ) $F5795 ( growByOne ) elementData [ elementCount ++ ] = object ; \n\tmodCount ++ ; \n\t} \n"}, {"code": "private $F97251 ( d , imageView , getImageView , viewWidth , getImageViewWidth , viewHeight , getImageViewHeight , drawableWidth , drawableHeight , mBaseMatrix , widthScale , heightScale , mScaleType , ScaleType , scale , Math , mTempSrc , mTempDst , mBaseRotation , FIT_CENTER , ScaleToFit , FIT_START , FIT_END , FIT_XY , resetMatrix ) "}, {"code": "public boolean checkForRp $F72 { \n\treturn NullColumnValueGetter . isNotNullValue ( getRpCopyName ( ) ) ; \n\t} \n"}, {"code": "ExternalProblem ( Process process ) { \n\tthis ( process . getInputStream ( ) , process . getOutputStream ( ) ) ; \n\tRedirectStream . redirect ( process . getErrorStream ( ) , System . err ) ; \n\t} \n"}, {"code": "public static $F3803 splitPath ( File file ) { \n\t$F24645 ( output ) File current = file ; \n\twhile ( current != null ) { \n\t\t$F29790 ( output , current ) $F122621 ( current ) } \n\tCollections . reverse ( output ) ; \n\treturn output ; \n\t} \n"}, {"code": "private static StsdData parseStsd ( ParsableByteArray stsd , int trackId , long durationUs , int rotationDegrees , String language , boolean isQuickTime ) { \n\tstsd . setPosition ( Atom . FULL_HEADER_SIZE ) ; \n\t$F5952 ( numberOfEntries , stsd ) StsdData out = new StsdData ( numberOfEntries ) ; \n\tfor ( $F119 ( i , numberOfEntries ) ) { \n\t\tint childStartPosition = stsd . getPosition ( ) ; \n\t\t$F5952 ( childAtomSize , stsd ) $F46509 ( Assertions , childAtomSize ) $F5952 ( childAtomType , stsd ) if ( childAtomType == Atom . TYPE_avc1 || childAtomType == Atom . TYPE_avc3 || childAtomType == Atom . TYPE_encv || childAtomType == Atom . TYPE_mp4v || childAtomType == Atom . TYPE_hvc1 || childAtomType == Atom . TYPE_hev1 || childAtomType == Atom . TYPE_s263 || childAtomType == Atom . TYPE_vp08 || childAtomType == Atom . TYPE_vp09 ) { \n\t\t\tparseVideoSampleEntry ( stsd , childAtomType , childStartPosition , childAtomSize , trackId , durationUs , rotationDegrees , out , i ) ; \n\t\t\t} \n\t\telse if ( childAtomType == Atom . TYPE_mp4a || childAtomType == Atom . TYPE_enca || childAtomType == Atom . TYPE_ac_3 || childAtomType == Atom . TYPE_ec_3 || childAtomType == Atom . TYPE_dtsc || childAtomType == Atom . TYPE_dtse || childAtomType == Atom . TYPE_dtsh || childAtomType == Atom . TYPE_dtsl || childAtomType == Atom . TYPE_samr || childAtomType == Atom . TYPE_sawb || childAtomType == Atom . TYPE_lpcm || childAtomType == Atom . TYPE_sowt ) { \n\t\t\tparseAudioSampleEntry ( stsd , childAtomType , childStartPosition , childAtomSize , trackId , durationUs , language , isQuickTime , out , i ) ; \n\t\t\t} \n\t\telse if ( childAtomType == Atom . TYPE_TTML ) { \n\t\t\tout . mediaFormat = MediaFormat . createTextFormat ( Integer . toString ( trackId ) , MimeTypes . APPLICATION_TTML , MediaFormat . NO_VALUE , durationUs , language ) ; \n\t\t\t} \n\t\telse if ( childAtomType == Atom . TYPE_tx3g ) { \n\t\t\tout . mediaFormat = MediaFormat . createTextFormat ( Integer . toString ( trackId ) , MimeTypes . APPLICATION_TX3G , MediaFormat . NO_VALUE , durationUs , language ) ; \n\t\t\t} \n\t\telse if ( childAtomType == Atom . TYPE_wvtt ) { \n\t\t\tout . mediaFormat = MediaFormat . createTextFormat ( Integer . toString ( trackId ) , MimeTypes . APPLICATION_MP4VTT , MediaFormat . NO_VALUE , durationUs , language ) ; \n\t\t\t} \n\t\telse if ( childAtomType == Atom . TYPE_stpp ) { \n\t\t\tout . mediaFormat = MediaFormat . createTextFormat ( Integer . toString ( trackId ) , MimeTypes . APPLICATION_TTML , MediaFormat . NO_VALUE , durationUs , language , NUM00 ) ; \n\t\t\t} \n\t\tstsd . setPosition ( childStartPosition + childAtomSize ) ; \n\t\t} \n\treturn out ; \n\t} \n"}, {"code": "protected boolean isCompatible ( Taxa taxa , List < Taxon > availableTaxa ) { \n\tfor ( int i = NUM00 ; \n\ti < taxa . getTaxonCount ( ) ; \n\ti ++ ) { \n\t\tTaxon taxon = taxa . getTaxon ( i ) ; \n\t\t$F92359 ( availableTaxa , taxon , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected int drawLabelText ( Object nativeGraphics , int textDecoration , boolean rtl , boolean isTickerRunning , boolean endsWith3Points , Object nativeFont , int txtW , int textSpaceW , int shiftText , String text , int x , int y , int fontHeight ) { \n\tif ( ( ! isTickerRunning ) || rtl ) { \n\t\tif ( txtW > textSpaceW && textSpaceW > NUM00 ) { \n\t\t\tif ( rtl ) { \n\t\t\t\tif ( ( ! isTickerRunning ) && endsWith3Points ) { \n\t\t\t\t\tString points = NUM00 ; \n\t\t\t\t\tint pointsW = stringWidth ( nativeFont , points ) ; \n\t\t\t\t\tdrawString ( nativeGraphics , nativeFont , points , shiftText + x , y , textDecoration , fontHeight ) ; \n\t\t\t\t\tclipRect ( nativeGraphics , pointsW + shiftText + x , y , textSpaceW - pointsW , fontHeight ) ; \n\t\t\t\t\t} \n\t\t\t\tx = x - txtW + textSpaceW ; \n\t\t\t\t} \n\t\t\telse if ( endsWith3Points ) { \n\t\t\t\tString points = NUM00 ; \n\t\t\t\tint index = NUM00 ; \n\t\t\t\tint widest = charWidth ( nativeFont , NUM00 ) ; \n\t\t\t\tint pointsW = stringWidth ( nativeFont , points ) ; \n\t\t\t\t$F1749 ( textLen , text ) while ( fastCharWidthCheck ( text , index , textSpaceW - pointsW , widest , nativeFont ) && index < textLen ) { \n\t\t\t\t\tindex ++ ; \n\t\t\t\t\t} \n\t\t\t\ttext = text . substring ( NUM00 , Math . min ( textLen , $F24349 ( Math , index ) ) ) + points ; \n\t\t\t\ttxtW = stringWidth ( nativeFont , text ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tdrawString ( nativeGraphics , nativeFont , text , shiftText + x , y , textDecoration , fontHeight ) ; \n\t$F95700 ( Math , txtW , textSpaceW ) } \n"}, {"code": "public boolean hasMapObjects $F72 $F51935 ( mapObjects ) "}, {"code": "public void performActions $F72 throws Throwable { \n\tfor ( Throwing . Runnable action : actions ) $F21688 ( action ) } \n"}, {"code": "public java . util . Collection < ObjectReference > dumpThreadRoots ( int width ) $F12523 ( Collections ) "}, {"code": "protected void addFieldNameTranslation ( EmbeddableMapping embeddableMapping , String overrideName , DatabaseField overrideField , MappingAccessor aggregatesAccessor ) { \n\tDatabaseMapping aggregatesMapping = aggregatesAccessor . getMapping ( ) ; \n\tDatabaseField aggregatesMappingField = aggregatesMapping . getField ( ) ; \n\tif ( aggregatesAccessor . isId ( ) ) { \n\t\tupdatePrimaryKeyField ( aggregatesAccessor , overrideField ) ; \n\t\t} \n\tif $F3578 ( overrideName ) { \n\t\tembeddableMapping . addNestedFieldTranslation ( overrideName , overrideField , aggregatesMappingField . getName ( ) ) ; \n\t\t} \n\telse { \n\t\tembeddableMapping . addFieldTranslation ( overrideField , aggregatesMappingField . getName ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public Dimension minimumLayoutSize ( Container target ) { \n\tsynchronized $F201886 ( target ) { \n\t\t$F32537 ( dim ) if ( ( chart != null ) && chart . isVisible ( ) ) { \n\t\t\tDimension d = chart . getMinimumSize ( ) ; \n\t\t\tdim . width = d . width ; \n\t\t\tdim . height = d . height ; \n\t\t\t} \n\t\tif ( ( xLabel != null ) && xLabel . isVisible ( ) ) { \n\t\t\tDimension d = xLabel . getMinimumSize ( ) ; \n\t\t\tdim . width = $F241074 ( Math , d , dim ) ; \n\t\t\tdim . height += d . height + vgap ; \n\t\t\t} \n\t\tif ( ( yLabel != null ) && yLabel . isVisible ( ) ) { \n\t\t\tDimension d = yLabel . getMinimumSize ( ) ; \n\t\t\tdim . width += d . width + hgap ; \n\t\t\tdim . height = Math . max ( d . height , dim . height ) ; \n\t\t\t} \n\t\tif ( ( title != null ) && title . isVisible ( ) ) { \n\t\t\tDimension d = title . getMinimumSize ( ) ; \n\t\t\tdim . width = $F241074 ( Math , d , dim ) ; \n\t\t\tdim . height += d . height + vgap ; \n\t\t\t} \n\t\t$F3970 ( insets , target ) dim . width += $F30395 ( insets ) ; \n\t\tdim . height += $F30391 ( insets ) ; \n\t\treturn dim ; \n\t\t} \n\t} \n"}, {"code": "private void checkResourceChange ( final Resource resource , final Group group , final Callback callback , final AtomicBoolean isChanged ) throws Exception { \n\tif ( $F142678 ( isChanged , resource , group ) ) { \n\t\tisChanged . compareAndSet ( _BOOL , _BOOL ) ; \n\t\tcallback . onResourceChanged ( resource ) ; \n\t\tlifecycleCallback . onResourceChanged ( resource ) ; \n\t\t} \n\t} \n"}, {"code": "public javax2 . sip . address . TelURL createTelURL ( String uri ) throws ParseException { \n\t$F1149 ( uri ) String telUrl = NUM00 + uri ; \n\ttry { \n\t\tStringMsgParser smp = new StringMsgParser $F72 ; \n\t\tTelURLImpl timp = ( TelURLImpl ) smp . parseUrl ( telUrl ) ; \n\t\treturn ( TelURL ) timp ; \n\t\t} \n\tcatch ( ParseException ex ) { \n\t\tthrow new ParseException ( ex . getMessage ( ) , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public EvoSVMModel ( ExampleSet exampleSet , List < SupportVector > supportVectors , Kernel kernel , double bias ) { \n\tsuper ( exampleSet , ExampleSetUtilities . SetsCompareOption . ALLOW_SUPERSET , ExampleSetUtilities . TypesCompareOption . ALLOW_SAME_PARENTS ) ; \n\tthis . supportVectors = supportVectors ; \n\tif $F45555 ( supportVectors ) $F825 this . kernel = kernel ; \n\tthis . bias = bias ; \n\tif ( this . kernel instanceof DotKernel ) { \n\t\tthis . weights = new double [ getNumberOfAttributes ( ) ] ; \n\t\tfor ( $F50810 ( i , getNumberOfSupportVectors ) ) { \n\t\t\tSupportVector sv = getSupportVector ( i ) ; \n\t\t\tif ( sv != null ) { \n\t\t\t\t$F1986 x = sv . getX ( ) ; \n\t\t\t\tdouble alpha = sv . getAlpha ( ) ; \n\t\t\t\t$F82240 ( y , sv ) for ( $F1139 ( j , weights ) ) { \n\t\t\t\t\tweights [ j ] += y * alpha * x [ j ] ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tthis . weights = null ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private synchronized boolean _restart $F72 throws ServletException { \n\tif ( singelton != null ) $F2268 ( singelton ) initEngine ( ) ; \n\t$F58463 ( System ) return _BOOL ; \n\t} \n"}, {"code": "public Sorter $F72 { \n\tuseDefaultVisual ( ) ; \n\t$F9898 ( setLayout ) add ( m_visual , BorderLayout . CENTER ) ; \n\tm_env = Environment . getSystemWide ( ) ; \n\tm_stopRequested = new AtomicBoolean ( _BOOL ) ; \n\t} \n"}, {"code": "$F198049 ( Character , getValue ) "}, {"code": "public static double logpdf $F7635 ( x , mu , shape ) { \n\tif ( ! ( x > NUM00 ) || x == Double . POSITIVE_INFINITY ) $F86429 ( Double ) final double v = ( x - mu ) / mu ; \n\treturn v < Double . MAX_VALUE ? NUM00 * Math . log ( shape / ( MathUtil . TWOPI * x * x * x ) ) - shape * v * v / ( NUM00 * x ) : Double . NEGATIVE_INFINITY ; \n\t} \n"}, {"code": "$F1 public final short readShort $F72 throws IOException { \n\t$F52634 ( dis , work ) return ( short ) ( $F169749 ( work ) | $F18896 ( work ) ) ; \n\t} \n"}, {"code": "public static Format generateFormat ( String codec ) { \n\treturn ( Format ) SUPPORTED_CODECS . get ( codec . toLowerCase ( ) ) ; \n\t} \n"}, {"code": "public void comment $F62353 ( start , length ) throws $F2253 { \n\tint start_old = start ; \n\t$F5453 ( m_inEntityRef ) if ( m_elemContext . m_startTagOpen ) $F42845 ( closeStartTag , m_elemContext , _BOOL ) else $F62355 ( m_needToCallStartDocument , startDocumentInternal , _BOOL ) try { \n\t\tfinal int limit = start + length ; \n\t\tboolean wasDash = _BOOL ; \n\t\t$F32367 ( m_cdataTagOpen , closeCDATA ) $F62357 ( shouldIndent , indent ) $F42851 ( writer , m_writer ) writer . write ( COMMENT_BEGIN ) ; \n\t\tfor ( int i = start ; \n\t\ti < limit ; \n\t\ti ++ ) { \n\t\t\tif ( wasDash && ch [ i ] == NUM00 ) { \n\t\t\t\t$F62358 ( writer , ch , start , i ) $F3410 ( writer ) start = i + NUM00 ; \n\t\t\t\t} \n\t\t\twasDash = ( ch [ i ] == NUM00 ) ; \n\t\t\t} \n\t\tif ( length > NUM00 ) { \n\t\t\tfinal int remainingChars = ( limit - start ) ; \n\t\t\tif ( remainingChars > NUM00 ) writer . write ( ch , start , remainingChars ) ; \n\t\t\tif ( ch [ limit - NUM00 ] == NUM00 ) $F3410 ( writer ) } \n\t\twriter . write ( COMMENT_END ) ; \n\t\t} \n\t$F6289 ( e ) m_startNewLine = _BOOL ; \n\tif ( m_tracer != null ) super . fireCommentEvent ( ch , start_old , length ) ; \n\t} \n"}, {"code": "public OptionalInt maxByInt ( IntUnaryOperator keyExtractor ) { \n\t$F2027 result = collect ( $F32718 ) ; \n\treturn result [ NUM00 ] == NUM00 ? OptionalInt . of ( result [ NUM00 ] ) : OptionalInt . empty ( ) ; \n\t} \n"}, {"code": "public T findByCommitCounter ( final long commitCounter ) { \n\t$F84760 ( commitCounter ) final Lock lock = readLock ( ) ; \n\t$F790 ( lock ) try { \n\t\t$F1431 final ITupleIterator $F4203 itr = rangeIterator ( null , null , NUM00 , IRangeQuery . DEFAULT | IRangeQuery . REVERSE , null ) ; \n\t\twhile $F2921 ( itr ) { \n\t\t\tfinal ITuple $F4203 t = itr . next ( ) ; \n\t\t\tfinal T r = t . getObject ( ) ; \n\t\t\tfinal IRootBlockView rb = r . getRootBlock ( ) ; \n\t\t\tif ( rb . getCommitCounter ( ) <= commitCounter ) { \n\t\t\t\treturn r ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F1274 } \n\t$F796 ( lock ) } \n"}, {"code": "$F43398 ( animator , ValueAnimator , nameValueList , mPendingAnimations , propertyMask , propertyCount , i , nameValuesHolder , mAnimatorMap , mAnimatorEventListener , mStartDelaySet , mStartDelay , mDurationSet , mDuration , mInterpolatorSet , mInterpolator ) "}, {"code": "public static String traceExcetion ( Throwable ex ) { \n\tfinal Writer $F24473 ( result ) ; \n\tfinal PrintWriter printWriter = new PrintWriter ( result ) ; \n\tex . printStackTrace ( printWriter ) ; \n\t$F1822 ( stacktrace , result ) $F110901 ( Log , TAG , stacktrace ) return stacktrace ; \n\t} \n"}, {"code": "public static $F7329 split ( String varName ) { \n\t$F1384 ( splitIndex , varName ) $F6664 ( splitIndex ) $F11991 ( left , varName , splitIndex ) $F36289 ( right , varName , splitIndex ) if ( $F383070 ( left , right ) || $F1276 ( right ) ) $F1337 return Pair . of ( left , right ) ; \n\t} \n"}, {"code": "public void onChildThreadResumeEnd $F72 { \n\t_threadCount . getAndDecrement ( ) ; \n\twake ( ) ; \n\t} \n"}, {"code": "public static void registerTransportMBean ( String containerName ) { \n\tMBeanServer mBeanServer = getMBeanServer ( containerName ) ; \n\t$F8249 ( mBeanServer ) TransportProtocolMonitorMBean transportConnectionsInfoMBean = new TransportProtocolMonitor $F72 ; \n\tObjectName objName = TransportConstants . createTransportMBeanObjectName ( containerName ) ; \n\tif ( ! mBeanServer . isRegistered ( objName ) ) { \n\t\ttry { \n\t\t\tmBeanServer . registerMBean ( transportConnectionsInfoMBean , objName ) ; \n\t\t\t} \n\t\tcatch ( InstanceAlreadyExistsException e ) { \n\t\t\tif $F176449 ( _logger , Level ) { \n\t\t\t\t_logger . config ( alreadyRegistredTransportMBeanMessage + containerName + NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( NotCompliantMBeanException e ) { \n\t\t\tif $F89967 ( _logger , Level ) { \n\t\t\t\t_logger . log ( Level . SEVERE , failedTransportMBeanRegistrationMessagePrefix + containerName + NUM00 , e ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( MBeanRegistrationException e ) { \n\t\t\tif $F68674 ( _logger , Level ) { \n\t\t\t\t_logger . log ( Level . SEVERE , failedTransportMBeanRegistrationMessagePrefix + containerName + NUM00 , e ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif $F176449 ( _logger , Level ) { \n\t\t\t_logger . config ( successfulTransportMBeanRegistrationMessage + containerName + NUM00 ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif $F176449 ( _logger , Level ) { \n\t\t\t_logger . config ( alreadyRegistredTransportMBeanMessage ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static int update ( String where , $F131 args , V sets , Class < ? extends Bean > t ) { \n\tTable mapping = ( Table ) t . getAnnotation ( Table . class ) ; \n\tif ( mapping == null ) { \n\t\tif $F6002 ( log ) $F19652 ( log , t ) $F150 } \n\tif ( ! X . isEmpty ( mapping . name ( ) ) ) { \n\t\treturn updateTable ( mapping . name ( ) , where , args , sets ) ; \n\t\t} \n\t$F150 } \n"}, {"code": "private void stopVideoFadingEdgesScreenTimer $F72 { \n\tif ( null != mVideoFadingEdgesTimer ) { \n\t\t$F65148 ( mVideoFadingEdgesTimer ) mVideoFadingEdgesTimer = null ; \n\t\tmVideoFadingEdgesTimerTask = null ; \n\t\t} \n\t} \n"}, {"code": "public void removeListener ( final TimeoutEventListener listener ) $F106 ( listeners , listener ) "}, {"code": "protected static void processGenericPropertiesCreatorProps ( File propsFile ) { \n\ttry { \n\t\t$F2697 ( expProps ) BufferedInputStream $F20277 ( bi , propsFile ) ; \n\t\texpProps . load ( bi ) ; \n\t\t$F59 ( bi ) bi = null ; \n\t\tProperties GPCInputProps = GenericPropertiesCreator . getGlobalInputProperties ( ) ; \n\t\t$F113927 keys = expProps . keySet ( ) ; \n\t\t$F91960 keysI = keys . iterator ( ) ; \n\t\twhile $F2921 ( keysI ) { \n\t\t\t$F2778 ( key , keysI ) String existingVal = GPCInputProps . getProperty ( key , NUM00 ) ; \n\t\t\tif $F4012 ( existingVal ) { \n\t\t\t\t$F7601 ( newVal , expProps , key ) if $F283026 ( existingVal , newVal ) { \n\t\t\t\t\tnewVal = existingVal + NUM00 + newVal ; \n\t\t\t\t\tGPCInputProps . put ( key , newVal ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F7601 ( newVal , expProps , key ) GPCInputProps . put ( key , newVal ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F15720 } \n"}, {"code": "private synchronized void addTableLockObject ( AbsoluteTableIdentifier absoluteTableIdentifier ) { \n\tif ( null == tableLockMap . get ( absoluteTableIdentifier ) ) { \n\t\ttableLockMap . put ( absoluteTableIdentifier , $F38005 ) ; \n\t\t} \n\t} \n"}, {"code": "private static String randomElement $F39268 ( list ) { \n\t$F59615 ( index , random , list ) $F8313 ( list , index ) } \n"}, {"code": "public static $F4203 void updateMappingToImmutableSet ( Map < T , $F77231 > map , T key , $F77231 newQual ) { \n\t$F200702 ( result , AnnotationUtils ) if $F15257 ( map , key ) $F21926 ( result , newQual ) else { \n\t\t$F103980 ( result , map , key ) result . addAll ( newQual ) ; \n\t\t} \n\tmap . put ( key , Collections . unmodifiableSet ( result ) ) ; \n\t} \n"}, {"code": "public static void join ( final AsyncInvocation $F1011 async , final long timeoutMilliseconds ) { \n\tjoin ( async . getThread ( ) , timeoutMilliseconds ) ; \n\t} \n"}, {"code": "void define ( MemberDefinition field , int slot , int from , int to ) { \n\tif ( from >= to ) $F932 for ( $F119 ( i , len ) ) { \n\t\tif ( ( locals [ i ] . field == field ) && ( locals [ i ] . slot == slot ) && ( from <= locals [ i ] . to ) && ( to >= locals [ i ] . from ) ) { \n\t\t\tlocals [ i ] . from = Math . min ( locals [ i ] . from , from ) ; \n\t\t\tlocals [ i ] . to = Math . max ( locals [ i ] . to , to ) ; \n\t\t\t$F665 } \n\t\t} \n\tif ( len == locals . length ) { \n\t\tLocalVariable newlocals [ ] = new LocalVariable [ len * NUM00 ] ; \n\t\t$F135 ( System , locals , newlocals , len ) locals = newlocals ; \n\t\t} \n\tlocals [ len ++ ] = new LocalVariable ( field , slot , from , to ) ; \n\t} \n"}, {"code": "protected Connection openConnection ( boolean autocommit ) throws SQLException { \n\t$F133134 ( conn , dataSrc ) ; \n\tconn . setAutoCommit ( autocommit ) ; \n\treturn conn ; \n\t} \n"}, {"code": "public void error ( XPathContext xctxt , String msg , $F131 args ) throws $F1872 { \n\t$F9737 fmsg = XSLMessages . createXPATHMessage ( msg , args ) ; \n\tif ( null != xctxt ) { \n\t\t$F1875 ( eh , xctxt ) TransformerException te = new TransformerException ( fmsg , this ) ; \n\t\teh . fatalError ( te ) ; \n\t\t} \n\t} \n"}, {"code": "public void mousePressed ( MouseEvent e ) { \n\tint nclicks = SwingUtilities2 . getAdjustedClickCount ( getComponent ( ) , e ) ; \n\tif ( SwingUtilities . isLeftMouseButton ( e ) ) { \n\t\tif ( e . isConsumed ( ) ) { \n\t\t\tshouldHandleRelease = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\tshouldHandleRelease = _BOOL ; \n\t\t\tadjustCaretAndFocus ( e ) ; \n\t\t\tif ( nclicks == NUM00 && SwingUtilities2 . canEventAccessSystemClipboard ( e ) ) { \n\t\t\t\tselectWord ( e ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F13591 ( str , flags , decode ) "}, {"code": "public Object apply ( String source , int lineNo , int columnNo , Object funcBody , Vector paramNames , Vector arguments ) throws BSFException { \n\tObject object = eval ( source , lineNo , columnNo , funcBody ) ; \n\tif ( object instanceof Closure ) { \n\t\tClosure closure = ( Closure ) object ; \n\t\treturn closure . call ( arguments . toArray ( ) ) ; \n\t\t} \n\treturn object ; \n\t} \n"}, {"code": "public Set keySet $F72 $F2905 ( totalKeySet ) "}, {"code": "public void output ( List list , Writer out ) throws IOException { \n\tprintContentRange ( out , list , NUM00 , list . size ( ) , NUM00 , createNamespaceStack ( ) ) ; \n\t$F1206 ( out ) } \n"}, {"code": "public boolean consumeEncumbranceBudget ( $F87266 ( detailsMap ) ) { \n\tif ( detailsMap == null ) throw new ValidationException ( Arrays . asList ( new ValidationError $F6600 ) ) ; \n\tdetailsMap . put ( Constants . CONSUMEORRELEASE , _BOOL ) ; \n\tfinal BigDecimal bd = getDetails ( detailsMap ) ; \n\treturn $F179074 ( bd ) ; \n\t} \n"}, {"code": "private $F2027 mod $F22564 ( a , f ) { \n\tint df = computeDegree ( f ) ; \n\tif ( df == - NUM00 ) $F290806 $F22974 ( result , a ) int hc = headCoefficient ( f ) ; \n\thc = field . inverse ( hc ) ; \n\t$F5634 ( System , a , result ) while ( df <= computeDegree ( result ) ) { \n\t\t$F2027 q ; \n\t\tint coeff = field . mult ( headCoefficient ( result ) , hc ) ; \n\t\tq = multWithMonomial ( f , computeDegree ( result ) - df ) ; \n\t\tq = multWithElement ( q , coeff ) ; \n\t\tresult = add ( q , result ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F46582 ( result , enumToVector , super ) $F46588 ( result , defaultNumClusters ) $F1006 ( result ) $F1006 ( result ) result . addElement ( new Option ( NUM00 + defaultMinInstNum ( ) + NUM00 + defaultMaxInstNum ( ) + NUM00 + NUM00 + NUM00 , NUM00 , NUM00 , NUM00 ) ) ; \n\tresult . addElement ( new Option ( NUM00 + defaultMinRadius ( ) + NUM00 + defaultMaxRadius ( ) + NUM00 + NUM00 + NUM00 , NUM00 , NUM00 , NUM00 ) ) ; \n\t$F46588 ( result , defaultDistMult ) $F46588 ( result , defaultNumCycles ) $F1006 ( result ) result . addElement ( new Option ( $F36190 ( defaultNoiseRate ) + NUM00 , NUM00 , NUM00 , NUM00 ) ) ; \n\t$F1007 ( result ) } \n"}, {"code": "public static void appendHexJavaScriptRepresentation ( StringBuilder sb , char c ) { \n\t$F84 ( sb ) $F21991 ( val , Integer , c ) for ( $F1748 ( j , val ) ; \n\tj < NUM00 ; \n\tj ++ ) $F86 ( sb ) sb . append ( val ) ; \n\t} \n"}, {"code": "private void printBootstrapMap $F72 { \n\t$F973 ( LOG ) for ( $F61448 ( i , chainMap ) ) { \n\t\tLOG . info ( String . format ( $F321479 ( i , chainMap ) ) ) ; \n\t\t} \n\t} \n"}, {"code": "public Vector $F986 enumToVector ( $F987 enu ) { \n\t$F20795 ( options ) options . addAll ( Collections . list ( enu ) ) ; \n\treturn options ; \n\t} \n"}, {"code": "private void addToken ( int token ) { \n\ttry { \n\t\tfTokens [ fTokenCount ] = token ; \n\t\t} \n\tcatch ( ArrayIndexOutOfBoundsException ex ) { \n\t\t$F2027 oldList = fTokens ; \n\t\tfTokens = new int [ fTokenCount < < NUM00 ] ; \n\t\t$F135 ( System , oldList , fTokens , fTokenCount ) fTokens [ fTokenCount ] = token ; \n\t\t} \n\tfTokenCount ++ ; \n\t} \n"}, {"code": "private P filterLargeValueSets ( FilterSpec fs , MetaDataObject rootMeta , F root , boolean forceEntityBased , JoinType defaultPredicateJoinType ) { \n\tArrayList < FilterSpec > $F204 ( specs ) ; \n\t$F11654 list = new $F201 ( ( $F7922 ) fs . getValue ( ) ) ; \n\tfor ( int i = NUM00 ; \n\ti < list . size ( ) ; \n\ti += ORACLE_PARAM_LIMIT ) { \n\t\tint nextOffset = i + Math . min ( list . size ( ) - i , ORACLE_PARAM_LIMIT ) ; \n\t\t$F11654 batchList = list . subList ( i , nextOffset ) ; \n\t\tspecs . add ( new FilterSpec ( fs . getAttributePath ( ) , fs . getOperator ( ) , batchList ) ) ; \n\t\t} \n\tFilterSpec orSpec = FilterSpec . or ( specs ) ; \n\treturn filterSpecListToPredicate ( rootMeta , root , orSpec , forceEntityBased , defaultPredicateJoinType ) ; \n\t} \n"}, {"code": "protected void addTags ( E data , Builder builder ) { \n\tPlatformIdent platformIdent = cachedDataService . getPlatformIdentForId ( data . getPlatformIdent ( ) ) ; \n\tbuilder . tag ( Series . TAG_AGENT_ID , String . valueOf ( data . getPlatformIdent ( ) ) ) ; \n\tif ( null != platformIdent ) { \n\t\tbuilder . tag ( Series . TAG_AGENT_NAME , platformIdent . getAgentName ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public int compare ( String s1 , String s2 ) { \n\t$F66059 ( match1 , MATCH_ID_PATTERN , s1 ) $F66059 ( match2 , MATCH_ID_PATTERN , s2 ) final boolean match1matches = match1 . matches ( ) ; \n\tfinal boolean match2matches = match2 . matches ( ) ; \n\tif ( match1matches ^ match2matches ) { \n\t\treturn ( match1matches ) ? NUM00 : - NUM00 ; \n\t\t} \n\telse if ( match1matches && match2matches ) { \n\t\t$F24135 ( signature1 , Integer , match1 ) $F24135 ( signature2 , Integer , match2 ) int comparison = ( signature1 < signature2 ) ? - NUM00 : ( signature1 > signature2 ) ? NUM00 : NUM00 ; \n\t\tif ( comparison == NUM00 ) { \n\t\t\t$F24135 ( start1 , Integer , match1 ) $F24135 ( start2 , Integer , match2 ) comparison = ( start1 < start2 ) ? - NUM00 : ( start1 > start2 ) ? NUM00 : NUM00 ; \n\t\t\t} \n\t\tif ( comparison == NUM00 ) { \n\t\t\t$F24135 ( end1 , Integer , match1 ) $F24135 ( end2 , Integer , match2 ) comparison = ( end1 < end2 ) ? - NUM00 : ( end1 > end2 ) ? NUM00 : NUM00 ; \n\t\t\t} \n\t\treturn comparison ; \n\t\t} \n\telse { \n\t\tint seqLength1 = s1 . length ( ) , n2 = s2 . length ( ) ; \n\t\tfor ( int i1 = NUM00 , i2 = NUM00 ; \n\t\ti1 < seqLength1 && i2 < n2 ; \n\t\ti1 ++ , i2 ++ ) { \n\t\t\t$F1280 ( c1 , s1 , i1 ) $F1280 ( c2 , s2 , i2 ) if ( c1 != c2 ) { \n\t\t\t\t$F186161 ( c1 , Character ) $F186161 ( c2 , Character ) if ( c1 != c2 ) { \n\t\t\t\t\t$F33289 ( c1 , Character ) $F33289 ( c2 , Character ) $F17566 ( c1 , c2 ) } \n\t\t\t\t} \n\t\t\t} \n\t\treturn seqLength1 - n2 ; \n\t\t} \n\t} \n"}, {"code": "private static int loadBuildNumber ( Context context , PackageManager packageManager ) { \n\ttry { \n\t\tApplicationInfo appInfo = packageManager . getApplicationInfo ( context . getPackageName ( ) , PackageManager . GET_META_DATA ) ; \n\t\tBundle metaData = appInfo . metaData ; \n\t\tif ( metaData != null ) { \n\t\t\treturn metaData . getInt ( BUNDLE_BUILD1BER , NUM00 ) ; \n\t\t\t} \n\t\t} \n\tcatch ( PackageManager . NameNotFoundException e ) { \n\t\t$F294495 ( L ) $F301 ( e ) } \n\t$F1082 } \n"}, {"code": "public static LeftRegularBipartiteGraphSegment buildRandomLeftRegularBipartiteGraph ( int leftSize , int rightSize , int leftDegree , Random random ) { \n\tLeftRegularBipartiteGraphSegment leftRegularBipartiteGraphSegment = new LeftRegularBipartiteGraphSegment ( leftSize / NUM00 , leftDegree , rightSize / NUM00 , leftSize / NUM00 , NUM00 , Integer . MAX_VALUE , new IdentityEdgeTypeMask $F72 , new NullStatsReceiver $F72 ) ; \n\tLongSet addedIds = new LongOpenHashSet ( leftDegree ) ; \n\tfor ( $F119 ( i , leftSize ) ) { \n\t\t$F725 ( addedIds ) for ( $F119 ( j , leftDegree ) ) { \n\t\t\tlong idToAdd ; \n\t\t\tdo { \n\t\t\t\tidToAdd = random . nextInt ( rightSize ) ; \n\t\t\t\t} \n\t\t\twhile $F105 ( addedIds , idToAdd ) ; \n\t\t\taddedIds . add ( idToAdd ) ; \n\t\t\tleftRegularBipartiteGraphSegment . addEdge ( i , idToAdd , $F19905 ) ; \n\t\t\t} \n\t\t} \n\treturn leftRegularBipartiteGraphSegment ; \n\t} \n"}, {"code": "$F129060 ( views , direction , focusableMode , focusableCount , descendantFocusability , getDescendantFocusability , FOCUS_BLOCK_DESCENDANTS , i , getChildCount , child , getChildAt , VISIBLE , ii , infoForChild , mCurItem , FOCUS_AFTER_DESCENDANTS , isFocusable , FOCUSABLES_TOUCH_MODE , isInTouchMode , isFocusableInTouchMode , this ) "}, {"code": "protected HttpURLConnection configureRequest ( final HttpURLConnection request ) { \n\tif ( credentials != null ) request . setRequestProperty ( HEADER_AUTHORIZATION , credentials ) ; \n\trequest . setRequestProperty ( HEADER_USER_AGENT , userAgent ) ; \n\trequest . setRequestProperty ( HEADER_ACCEPT , getHeaderAccept ( ) ) ; \n\treturn request ; \n\t} \n"}, {"code": "public static String convertToTitle ( int n ) { \n\tif ( n <= NUM00 ) $F1278 $F83 ( title ) while ( n > NUM00 ) { \n\t\tn -- ; \n\t\tint r = n % NUM00 ; \n\t\ttitle . insert ( NUM00 , ( char ) ( NUM00 + r ) ) ; \n\t\tn = n / NUM00 ; \n\t\t} \n\t$F92 ( title ) } \n"}, {"code": "private char readEscapeCharacter $F72 throws JSONException { \n\t$F52837 ( escaped , in , pos ) switch ( escaped ) { \n\t\t$F1262 if ( pos + NUM00 > in . length ( ) ) $F25983 ( syntaxError ) $F10821 ( hex , in , pos ) pos += NUM00 ; \n\t\t$F121531 ( Integer , hex ) $F12596 $F12596 $F12596 $F12596 $F12596 $F1262 $F1262 $F1262 $F1267 return escaped ; \n\t\t} \n\t} \n"}, {"code": "static public void process $F1947 ( input , output , packFileName ) { \n\tprocess ( new Settings $F72 , input , output , packFileName ) ; \n\t} \n"}, {"code": "private ReplicatorRuntimeConf ( String serviceName ) { \n\treplicatorHomeDir = locateReplicatorHomeDir ( ) ; \n\treplicatorLogDir = locateReplicatorLogDir ( ) ; \n\treplicatorConfDir = locateReplicatorConfDir ( ) ; \n\treplicatorProperties = new File ( locateReplicatorConfDir ( ) , NUM00 + serviceName + NUM00 ) ; \n\tif ( $F48789 ( replicatorProperties ) || $F15586 ( replicatorProperties ) ) { \n\t\tthrow new ServerRuntimeException ( NUM00 + replicatorProperties ) ; \n\t\t} \n\treplicatorDynamicProperties = new File ( replicatorConfDir , NUM00 + serviceName + NUM00 ) ; \n\treplicatorDynamicRole = new File ( replicatorConfDir , NUM00 + serviceName + NUM00 ) ; \n\tthis . clearDynamicProperties = Boolean . parseBoolean ( System . getProperty ( CLEAR_DYNAMIC_PROPERTIES ) ) ; \n\t} \n"}, {"code": "private String toLocalNumber ( double n ) $F35907 ( mDecimalFormat , n ) "}, {"code": "public void simulateMethod $F5498 ( method , thisVar , returnVar ) { \n\t$F5500 ( subSignature , method ) if $F3057 ( subSignature ) $F5501 ( java_security_AccessController_doPrivileged , method , thisVar , returnVar , params ) else if $F3057 ( subSignature ) $F5501 ( java_security_AccessController_doPrivileged , method , thisVar , returnVar , params ) else if $F3057 ( subSignature ) $F5501 ( java_security_AccessController_doPrivileged , method , thisVar , returnVar , params ) else if $F3057 ( subSignature ) $F5501 ( java_security_AccessController_doPrivileged , method , thisVar , returnVar , params ) else if $F3057 ( subSignature ) $F5501 ( java_security_AccessController_getStackAccessControlContext , method , thisVar , returnVar , params ) else if $F3057 ( subSignature ) $F5501 ( java_security_AccessController_getInheritedAccessControlContext , method , thisVar , returnVar , params ) else $F5501 ( defaultMethod , method , thisVar , returnVar , params ) } \n"}, {"code": "$F120210 ( maximumPullScroll , getMaximumPullScroll , pLeft , getPaddingLeft , pTop , getPaddingTop , pRight , getPaddingRight , pBottom , getPaddingBottom , getPullToRefreshScrollDirection , HORIZONTAL , mMode , mHeaderLayout , mFooterLayout , VERTICAL , DEBUG , Log , LOG_TAG , String , setPadding ) "}, {"code": "public static $F2469 asLongArray ( final $F27145 l ) { \n\tfinal $F2469 a = new long $F2313 ( l ) ; \n\t$F25191 ( i , a , l ) return a ; \n\t} \n"}, {"code": "private void updateMenuState $F72 { \n\tm_appendAnd . setEnabled ( m_criteriumNode . allowAppend ( CAndCriterium . class ) ) ; \n\tm_appendOr . setEnabled ( m_criteriumNode . allowAppend ( COrCriterium . class ) ) ; \n\tm_appendNot . setEnabled ( m_criteriumNode . allowAppend ( CNotCriterium . class ) ) ; \n\tm_insertAnd . setEnabled ( m_criteriumNode . allowInsert ( CAndCriterium . class ) ) ; \n\tm_insertOr . setEnabled ( m_criteriumNode . allowInsert ( COrCriterium . class ) ) ; \n\tm_insertNot . setEnabled ( m_criteriumNode . allowInsert ( CNotCriterium . class ) ) ; \n\tm_conditionSubmenu . setEnabled ( m_criteriumNode . allowAppend ( CConditionCriterium . class ) ) ; \n\tm_remove . setEnabled ( ! m_criteriumNode . isRoot ( ) ) ; \n\tm_removeAll . setEnabled ( m_criteriumNode . getChildCount ( ) != NUM00 ) ; \n\t} \n"}, {"code": "public void testPutGetRemove $F72 throws Exception { \n\tinitStore ( NUM00 ) ; \n\t$F11868 exp ; \n\ttry { \n\t\texp = runPutGetRemoveMultithreaded ( NUM00 , NUM00 ) ; \n\t\t} \n\t$F49978 ( shutdownStore ) $F20666 map = delegate . getMap ( ) ; \n\t$F2306 extra = new $F9623 $F57797 ( map ) ; \n\textra . removeAll ( exp ) ; \n\tassertTrue ( NUM00 + extra , extra . isEmpty ( ) ) ; \n\t$F2306 $F28907 ( missing , exp ) ; \n\tmissing . removeAll ( map . keySet ( ) ) ; \n\tassertTrue ( NUM00 + missing , missing . isEmpty ( ) ) ; \n\tfor ( Integer key : exp ) assertEquals ( NUM00 + key , NUM00 + key , map . get ( key ) ) ; \n\t} \n"}, {"code": "public static String formatListToString $F24643 ( list ) { \n\tString result = NUM00 ; \n\tfor ( String s : list ) result += s + NUM00 ; \n\t$F1382 ( result ) return result . toUpperCase ( ) ; \n\t} \n"}, {"code": "$F1 public void removeNotificationListener ( NotificationListener listener ) throws ListenerNotFoundException { \n\tif $F14148 ( SNMP_ADAPTOR_LOGGER , Level ) { \n\t\tSNMP_ADAPTOR_LOGGER . logp ( Level . FINEST , dbgTag , NUM00 , NUM00 + listener ) ; \n\t\t} \n\tnotifBroadcaster . removeNotificationListener ( listener ) ; \n\t} \n"}, {"code": "public static boolean isNewer ( long ts1 , long size1 , long ts2 , long size2 ) { \n\treturn ts1 > ts2 || ( ts1 == ts2 && size1 < size2 ) ; \n\t} \n"}, {"code": "private static void d_ucumm ( $F1986 a , $F1986 agg , $F1986 c , int m , int n , int rl , int ru ) { \n\t$F1986 cprods = ( agg != null ) ? agg : new double [ n ] ; \n\tif ( agg == null ) $F9952 ( Arrays , cprods ) for ( $F305651 ( i , rl , aix , n , ru ) ) { \n\t\tproductAgg ( a , cprods , aix , NUM00 , n ) ; \n\t\t$F6483 ( System , cprods , c , aix , n ) } \n\t} \n"}, {"code": "public static List < ModuleSpec > expandSpecWildcards ( File dir , List < ModuleSpec > modules , Backend forBackend ) { \n\t$F14391 ( dirs ) dirs . add ( dir ) ; \n\treturn expandSpecWildcards ( dirs , modules , forBackend ) ; \n\t} \n"}, {"code": "private void $$$setupUI$$$ $F72 { \n\t$F26681 ( myContentPanel ) $F165873 ( myContentPanel ) myYoursRadioButton = new JRadioButton $F72 ; \n\tmyYoursRadioButton . setSelected ( _BOOL ) ; \n\t$F15121 ( myYoursRadioButton ) $F208200 ( myYoursRadioButton ) $F208201 ( myYoursRadioButton ) myContentPanel . add ( myYoursRadioButton , new GridConstraints ( NUM00 , NUM00 , NUM00 , NUM00 , GridConstraints . ANCHOR_WEST , GridConstraints . FILL_NONE , $F165874 ( GridConstraints ) , GridConstraints . SIZEPOLICY_FIXED , null , null , null , NUM00 , _BOOL ) ) ; \n\tmyTheirsRadioButton = new JRadioButton $F72 ; \n\t$F15121 ( myTheirsRadioButton ) $F208200 ( myTheirsRadioButton ) $F208201 ( myTheirsRadioButton ) myContentPanel . add ( myTheirsRadioButton , new GridConstraints ( NUM00 , NUM00 , NUM00 , NUM00 , GridConstraints . ANCHOR_WEST , GridConstraints . FILL_NONE , $F165874 ( GridConstraints ) , GridConstraints . SIZEPOLICY_FIXED , null , null , null , NUM00 , _BOOL ) ) ; \n\tmyUseCustomRadioButton = new JRadioButton $F72 ; \n\t$F15121 ( myUseCustomRadioButton ) $F208200 ( myUseCustomRadioButton ) $F208201 ( myUseCustomRadioButton ) myContentPanel . add ( myUseCustomRadioButton , new GridConstraints ( NUM00 , NUM00 , NUM00 , NUM00 , GridConstraints . ANCHOR_WEST , GridConstraints . FILL_NONE , $F165874 ( GridConstraints ) , GridConstraints . SIZEPOLICY_FIXED , null , null , null , NUM00 , _BOOL ) ) ; \n\t$F55354 ( myCustomPathTextField ) myCustomPathTextField . setEnabled ( _BOOL ) ; \n\tmyContentPanel . add ( myCustomPathTextField , new GridConstraints ( NUM00 , NUM00 , NUM00 , NUM00 , GridConstraints . ANCHOR_WEST , GridConstraints . FILL_BOTH , GridConstraints . SIZEPOLICY_WANT_GROW , GridConstraints . SIZEPOLICY_FIXED , null , new Dimension $F261843 , null , NUM00 , _BOOL ) ) ; \n\tfinal Spacer spacer1 = new Spacer $F72 ; \n\tmyContentPanel . add ( spacer1 , new GridConstraints ( NUM00 , NUM00 , NUM00 , NUM00 , GridConstraints . ANCHOR_CENTER , GridConstraints . FILL_VERTICAL , NUM00 , GridConstraints . SIZEPOLICY_WANT_GROW , null , null , null , NUM00 , _BOOL ) ) ; \n\t$F171121 ( myErrorLabel ) myErrorLabel . setForeground ( new Color $F81964 ) ; \n\t$F15121 ( myErrorLabel ) myContentPanel . add ( myErrorLabel , new GridConstraints ( NUM00 , NUM00 , NUM00 , NUM00 , GridConstraints . ANCHOR_WEST , GridConstraints . FILL_NONE , GridConstraints . SIZEPOLICY_CAN_GROW , GridConstraints . SIZEPOLICY_FIXED , null , null , null , NUM00 , _BOOL ) ) ; \n\tButtonGroup buttonGroup ; \n\t$F59507 ( buttonGroup ) ; \n\tbuttonGroup . add ( myYoursRadioButton ) ; \n\tbuttonGroup . add ( myTheirsRadioButton ) ; \n\tbuttonGroup . add ( myUseCustomRadioButton ) ; \n\t} \n"}, {"code": "private static String reportListContents ( Collection < ProcessErrorStateInfo > errList ) { \n\t$F1275 ( errList ) $F83 ( builder ) Iterator < ProcessErrorStateInfo > iter = errList . iterator ( ) ; \n\twhile $F2921 ( iter ) { \n\t\tProcessErrorStateInfo entry = iter . next ( ) ; \n\t\tString condition ; \n\t\tswitch ( entry . condition ) { \n\t\t\tcase ActivityManager . ProcessErrorStateInfo . CRASHED : condition = NUM00 ; \n\t\t\t$F597 case ActivityManager . ProcessErrorStateInfo . NOT_RESPONDING : condition = NUM00 ; \n\t\t\t$F597 $F1267 condition = NUM00 ; \n\t\t\t$F597 } \n\t\tbuilder . append ( String . format ( NUM00 , entry . processName , condition , entry . shortMsg ) ) ; \n\t\tif ( entry . condition == ActivityManager . ProcessErrorStateInfo . CRASHED ) { \n\t\t\tbuilder . append ( String . format ( NUM00 , entry . stackTrace ) ) ; \n\t\t\t} \n\t\t$F84 ( builder ) } \n\t$F92 ( builder ) } \n"}, {"code": "public void parseArguments ( final $F806 rawArguments , Properties argumentProperties ) throws ArgumentException { \n\tboolean inTrailingArgs = _BOOL ; \n\t$F18832 ( numArguments , rawArguments ) for ( $F119 ( i , numArguments ) ) { \n\t\tfinal String arg = rawArguments [ i ] ; \n\t\tif ( inTrailingArgs ) { \n\t\t\ttrailingArguments . add ( arg ) ; \n\t\t\tif ( maxTrailingArguments > NUM00 && trailingArguments . size ( ) > maxTrailingArguments ) { \n\t\t\t\t$F206930 ( message , ERR_ARGPARSER_TOO_MANY_TRAILING_ARGS , maxTrailingArguments ) throw new ArgumentException ( message ) ; \n\t\t\t\t} \n\t\t\t$F598 } \n\t\tif $F3057 ( arg ) { \n\t\t\tinTrailingArgs = _BOOL ; \n\t\t\t} \n\t\telse if $F3106 ( arg ) { \n\t\t\t$F28924 ( argName , arg ) String argValue = null ; \n\t\t\t$F46662 ( equalPos , argName ) if ( equalPos == NUM00 ) { \n\t\t\t\tthrow new ArgumentException $F73204 ( ERR_ARGPARSER_LONG_ARG_WITHOUT_NAME , arg ) ; \n\t\t\t\t} \n\t\t\telse if ( equalPos > NUM00 ) { \n\t\t\t\t$F4571 ( argValue , argName , equalPos ) $F45799 ( argName , equalPos ) } \n\t\t\tfinal String origArgName = argName ; \n\t\t\targName = formatLongIdentifier ( argName ) ; \n\t\t\tfinal Argument a = longIDMap . get ( argName ) ; \n\t\t\tif ( a == null ) { \n\t\t\t\tif $F1238 ( OPTION_LONG_HELP , argName ) { \n\t\t\t\t\twriteToUsageOutputStream ( getUsage ( ) ) ; \n\t\t\t\t\t$F665 } \n\t\t\t\telse if $F1238 ( OPTION_LONG_PRODUCT_VERSION , argName ) $F10990 ( printVersion ) else { \n\t\t\t\t\tthrow new ArgumentException $F73204 ( ERR_ARGPARSER_NO_ARGUMENT_WITH_LONG_ID , origArgName ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\ta . setPresent ( _BOOL ) ; \n\t\t\t\tif ( isUsageArgument ( a ) ) { \n\t\t\t\t\twriteToUsageOutputStream ( getUsage ( ) ) ; \n\t\t\t\t\t$F665 } \n\t\t\t\t} \n\t\t\tif ( a . needsValue ( ) ) { \n\t\t\t\tif ( argValue == null ) { \n\t\t\t\t\tif ( ( i + NUM00 ) == numArguments ) { \n\t\t\t\t\t\tthrow new ArgumentException $F73204 ( ERR_ARGPARSER_NO_VALUE_FOR_ARGUMENT_WITH_LONG_ID , origArgName ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\targValue = rawArguments [ ++ i ] ; \n\t\t\t\t\t} \n\t\t\t\tfinal LocalizableMessageBuilder invalidReason = new LocalizableMessageBuilder $F72 ; \n\t\t\t\tif ( ! a . valueIsAcceptable ( argValue , invalidReason ) ) { \n\t\t\t\t\tthrow new ArgumentException ( ERR_ARGPARSER_VALUE_UNACCEPTABLE_FOR_LONG_ID . get ( argValue , origArgName , invalidReason ) ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( a . hasValue ( ) && ! a . isMultiValued ( ) ) { \n\t\t\t\t\tthrow new ArgumentException $F73204 ( ERR_ARGPARSER_NOT_MULTIVALUED_FOR_LONG_ID , origArgName ) ; \n\t\t\t\t\t} \n\t\t\t\ta . addValue ( argValue ) ; \n\t\t\t\t} \n\t\t\telse if ( argValue != null ) { \n\t\t\t\tthrow new ArgumentException $F73204 ( ERR_ARGPARSER_ARG_FOR_LONG_ID_DOESNT_TAKE_VALUE , origArgName ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if $F3106 ( arg ) { \n\t\t\tif $F3057 ( arg ) { \n\t\t\t\tthrow new ArgumentException $F27748 ( ERR_ARGPARSER_INVALID_DASH_AS_ARGUMENT ) ; \n\t\t\t\t} \n\t\t\t$F93766 ( argCharacter , arg ) String argValue ; \n\t\t\tif $F4012 ( arg ) { \n\t\t\t\t$F64779 ( argValue , arg ) } \n\t\t\telse { \n\t\t\t\targValue = null ; \n\t\t\t\t} \n\t\t\tfinal Argument a = shortIDMap . get ( argCharacter ) ; \n\t\t\tif ( a == null ) { \n\t\t\t\tif ( argCharacter == NUM00 ) { \n\t\t\t\t\twriteToUsageOutputStream ( getUsage ( ) ) ; \n\t\t\t\t\t$F665 } \n\t\t\t\telse if ( versionHandler != null && argCharacter == OPTION_SHORT_PRODUCT_VERSION && ! shortIDMap . containsKey ( OPTION_SHORT_PRODUCT_VERSION ) ) $F10990 ( printVersion ) else { \n\t\t\t\t\tthrow new ArgumentException $F73204 ( ERR_ARGPARSER_NO_ARGUMENT_WITH_SHORT_ID , argCharacter ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\ta . setPresent ( _BOOL ) ; \n\t\t\t\tif ( isUsageArgument ( a ) ) { \n\t\t\t\t\twriteToUsageOutputStream ( getUsage ( ) ) ; \n\t\t\t\t\t$F665 } \n\t\t\t\t} \n\t\t\tif ( a . needsValue ( ) ) { \n\t\t\t\tif ( argValue == null ) { \n\t\t\t\t\tif ( ( i + NUM00 ) == numArguments ) { \n\t\t\t\t\t\tthrow new ArgumentException $F73204 ( ERR_ARGPARSER_NO_VALUE_FOR_ARGUMENT_WITH_SHORT_ID , argCharacter ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\targValue = rawArguments [ ++ i ] ; \n\t\t\t\t\t} \n\t\t\t\tfinal LocalizableMessageBuilder invalidReason = new LocalizableMessageBuilder $F72 ; \n\t\t\t\tif ( ! a . valueIsAcceptable ( argValue , invalidReason ) ) { \n\t\t\t\t\tthrow new ArgumentException ( ERR_ARGPARSER_VALUE_UNACCEPTABLE_FOR_SHORT_ID . get ( argValue , argCharacter , invalidReason ) ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( a . hasValue ( ) && ! a . isMultiValued ( ) ) { \n\t\t\t\t\tthrow new ArgumentException $F73204 ( ERR_ARGPARSER_NOT_MULTIVALUED_FOR_SHORT_ID , argCharacter ) ; \n\t\t\t\t\t} \n\t\t\t\ta . addValue ( argValue ) ; \n\t\t\t\t} \n\t\t\telse if ( argValue != null ) { \n\t\t\t\t$F22998 ( valueLength , argValue ) for ( $F119 ( j , valueLength ) ) { \n\t\t\t\t\t$F1090 ( c , argValue , j ) final Argument b = shortIDMap . get ( c ) ; \n\t\t\t\t\tif ( b == null ) { \n\t\t\t\t\t\tthrow new ArgumentException $F73204 ( ERR_ARGPARSER_NO_ARGUMENT_WITH_SHORT_ID , argCharacter ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( b . needsValue ( ) ) { \n\t\t\t\t\t\tthrow new ArgumentException ( ERR_ARGPARSER_CANT_MIX_ARGS_WITH_VALUES . get ( argCharacter , argValue , c ) ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tb . setPresent ( _BOOL ) ; \n\t\t\t\t\t\tif ( isUsageArgument ( b ) ) { \n\t\t\t\t\t\t\twriteToUsageOutputStream ( getUsage ( ) ) ; \n\t\t\t\t\t\t\t$F665 } \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( allowsTrailingArguments ) { \n\t\t\tinTrailingArgs = _BOOL ; \n\t\t\ttrailingArguments . add ( arg ) ; \n\t\t\t} \n\t\telse { \n\t\t\tthrow new ArgumentException $F73204 ( ERR_ARGPARSER_DISALLOWED_TRAILING_ARGUMENT , arg ) ; \n\t\t\t} \n\t\t} \n\tif ( allowsTrailingArguments && minTrailingArguments > NUM00 && trailingArguments . size ( ) < minTrailingArguments ) { \n\t\tthrow new ArgumentException $F73204 ( ERR_ARGPARSER_TOO_FEW_TRAILING_ARGUMENTS , minTrailingArguments ) ; \n\t\t} \n\t$F22771 ( argumentProperties , checkExternalProperties ) normalizeArguments ( argumentProperties , argumentList ) ; \n\t} \n"}, {"code": "public void testGetIssuerNames $F72 { \n\t$F40920 ( selector ) $F96 iss1 = new byte [ ] { \n\t\tNUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\t$F96 iss2 = new byte [ ] $F32330 ; \n\tassertNull ( NUM00 , selector . getIssuerNames ( ) ) ; \n\ttry { \n\t\tselector . addIssuerName ( iss1 ) ; \n\t\tselector . addIssuerName ( iss2 ) ; \n\t\t} \n\t$F97591 ( e , fail ) $F5363 result = selector . getIssuerNames ( ) ; \n\t$F153255 ( assertEquals , result ) } \n"}, {"code": "$F1 public boolean start $F72 throws IOException { \n\t$F10635 ( LOG , initialCheckpointGenerator ) try { \n\t\tKinesisReaderCheckpoint initialCheckpoint = initialCheckpointGenerator . generate ( kinesis ) ; \n\t\tList < ShardRecordsIterator > iterators = newArrayList ( ) ; \n\t\tfor ( ShardCheckpoint checkpoint : initialCheckpoint ) { \n\t\t\titerators . add ( checkpoint . getShardRecordsIterator ( kinesis ) ) ; \n\t\t\t} \n\t\tshardIterators = new RoundRobin $F200 ( iterators ) ; \n\t\t} \n\tcatch ( TransientKinesisException e ) $F5615 ( e ) return advance ( ) ; \n\t} \n"}, {"code": "$F1 public XADataSource createXADataSource ( Properties properties ) throws SQLException { \n\t$F2697 ( propertiesCopy ) if ( properties != null ) $F96492 ( propertiesCopy , properties ) rejectUnsupportedOptions ( propertiesCopy ) ; \n\trejectPoolingOptions ( propertiesCopy ) ; \n\tJdbcDataSource dataSource = new JdbcDataSource $F72 ; \n\tsetupH2DataSource ( dataSource , propertiesCopy ) ; \n\treturn dataSource ; \n\t} \n"}, {"code": "public static double toDegrees ( double x ) { \n\tif ( Double . isInfinite ( x ) || x == NUM00 ) { \n\t\treturn x ; \n\t\t} \n\tfinal double facta = NUM00 ; \n\tfinal double factb = NUM00 ; \n\tdouble xa = doubleHighPart ( x ) ; \n\tdouble xb = x - xa ; \n\treturn xb * factb + xb * facta + xa * factb + xa * facta ; \n\t} \n"}, {"code": "public void addHeaderView ( View v ) $F1861 ( addHeaderView , v , _BOOL ) "}, {"code": "public static boolean isAbsolutePath ( String systemId ) { \n\t$F397 ( systemId , _BOOL ) $F15885 ( file , systemId ) return file . isAbsolute ( ) ; \n\t} \n"}, {"code": "void initDemandAndCollectionMap ( $F20109 ( prepareFieldNames ) , final Map $F419985 demand , final Map $F419985 collection , final Map $F419985 rebates ) { \n\tif $F1032 ( prepareFieldNames ) for ( final String fieldName : prepareFieldNames ) { \n\t\t$F419990 ( demand , fieldName , BigDecimal ) $F419990 ( collection , fieldName , BigDecimal ) $F419990 ( rebates , fieldName , BigDecimal ) } \n\t} \n"}, {"code": "protected Instance specifier ( int i ) $F8314 ( m_Specifiers , i ) "}, {"code": "public ShapedCraftingRecipe ( Item nominalOutput , RecipeFunction recipeFunction , String format , boolean mirrored , ItemIngredient ... ingredients ) { \n\tthis . nominalOutput = nominalOutput ; \n\t$F6542 ( formatLines , format ) int numIngredients = NUM00 ; \n\tint width = NUM00 ; \n\tfor ( String formatLine : formatLines ) { \n\t\twidth = Math . max ( width , formatLine . length ( ) ) ; \n\t\tfor ( $F2998 ( c , formatLine ) ) { \n\t\t\tif ( c == NUM00 ) $F1448 else if $F19295 ( c ) { \n\t\t\t\tnumIngredients ++ ; \n\t\t\t\t} \n\t\t\telse $F20855 ( format , c ) } \n\t\t} \n\tthis . width = width ; \n\tthis . height = formatLines . length ; \n\tthis . posx = new int [ numIngredients ] ; \n\tthis . posy = new int [ numIngredients ] ; \n\tthis . ingredients = new ItemIngredient [ numIngredients ] ; \n\tthis . mirrored = mirrored ; \n\tint ingredientIndex = NUM00 ; \n\tfor ( int y = NUM00 ; \n\ty < this . height ; \n\ty ++ ) { \n\t\tString formatLine = formatLines [ y ] ; \n\t\tfor ( $F1088 ( x , formatLine ) ) { \n\t\t\t$F1280 ( c , formatLine , x ) $F92331 ( c ) this . posx [ ingredientIndex ] = x ; \n\t\t\tthis . posy [ ingredientIndex ] = y ; \n\t\t\tthis . ingredients [ ingredientIndex ] = ingredients [ c - NUM00 ] ; \n\t\t\tingredientIndex ++ ; \n\t\t\t} \n\t\t} \n\tthis . recipeFunction = recipeFunction ; \n\tthis . lastIngredientIndexOnFirstLine = getLastIngredientIndexOnFirstLine ( ) ; \n\t} \n"}, {"code": "public void writeTag ( String tag , Font value ) { \n\tstartTag ( tag ) ; \n\t$F64976 ( writeTag , value ) int style = value . getStyle ( ) ; \n\tif ( ( style & Font . BOLD ) != NUM00 && ( style & Font . ITALIC ) != NUM00 ) $F28986 ( writeTag , STYLE ) else if ( ( style & Font . BOLD ) != NUM00 ) $F28986 ( writeTag , STYLE ) else if ( ( style & Font . ITALIC ) != NUM00 ) $F28986 ( writeTag , STYLE ) else $F28986 ( writeTag , STYLE ) writeTag ( NUM00 , value . getSize ( ) ) ; \n\tcloseTag ( ) ; \n\t} \n"}, {"code": "private void internalWrite $F169066 ( b , off , len , finish ) throws IOException { \n\tcoder . output = embiggen ( coder . output , coder . maxOutputSize ( len ) ) ; \n\tif ( ! coder . process ( b , off , len , finish ) ) { \n\t\tthrow new Base64DataException $F580 ; \n\t\t} \n\tout . write ( coder . output , NUM00 , coder . op ) ; \n\t} \n"}, {"code": "private Socket connect ( String host , String portString ) throws IOException { \n\tint port = NUM00 ; \n\tSocket sock = null ; \n\tboolean DEBUG = Debug . debugging ( NUM00 ) ; \n\ttry $F123126 ( port , Integer , portString ) catch ( NumberFormatException e ) { \n\t\tif ( DEBUG ) Debug . output ( NUM00 + host + NUM00 + portString ) ; \n\t\t$F3495 ( portString ) } \n\tif ( DEBUG ) Debug . output ( NUM00 + host + NUM00 + port ) ; \n\ttry { \n\t\tsock = new Socket ( host , port ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\t$F711 ( sock ) if ( DEBUG ) { \n\t\t\tDebug . output ( NUM00 + host + NUM00 + port + NUM00 + e ) ; \n\t\t\t} \n\t\tthrow e ; \n\t\t} \n\treturn sock ; \n\t} \n"}, {"code": "$F1 public boolean batchFinished $F72 { \n\t$F161885 ( getInputFormat ) Instances toFilter = getInputFormat ( ) ; \n\tint cutOff = ( int ) Math . round ( toFilter . numInstances ( ) * m_Percentage / NUM00 ) ; \n\tif ( m_Inverse ) { \n\t\tfor ( $F119 ( i , cutOff ) ) { \n\t\t\tpush ( toFilter . instance ( i ) ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tfor ( int i = cutOff ; \n\t\ti < toFilter . numInstances ( ) ; \n\t\ti ++ ) { \n\t\t\tpush ( toFilter . instance ( i ) ) ; \n\t\t\t} \n\t\t} \n\tflushInput ( ) ; \n\tm_NewBatch = _BOOL ; \n\tm_FirstBatchDone = _BOOL ; \n\treturn ( numPendingOutput ( ) != NUM00 ) ; \n\t} \n"}, {"code": "public void computeParameters $F72 { \n\tif ( ellps == null ) { \n\t\tellps = Ellipsoid . WGS_84 ; \n\t\t} \n\tif ( mode == MODE_BELGIUM ) { \n\t\talpha = NUM00 ; \n\t\t} \n\telse { \n\t\talpha = NUM00 ; \n\t\t} \n\tdouble phi1 = ProjMath . degToRad ( lambert_sp_one ) ; \n\tdouble phi2 = ProjMath . degToRad ( lambert_sp_two ) ; \n\tdouble phif = ProjMath . degToRad ( referenceLatitude ) ; \n\tdouble e = ellps . ecc ; \n\tdouble sinphi ; \n\tsinphi = Math . sin ( phi1 ) ; \n\tdouble m1 = lambMsfn ( sinphi , Math . cos ( phi1 ) , e ) ; \n\tdouble t1 = lambTsfn ( phi1 , sinphi , e ) ; \n\tif ( MoreMath . approximately_equal ( phi1 , phi2 , EPS10 ) ) { \n\t\tn = sinphi ; \n\t\t} \n\telse { \n\t\tsinphi = Math . sin ( phi2 ) ; \n\t\tdouble m2 = lambMsfn ( sinphi , Math . cos ( phi2 ) , e ) ; \n\t\tdouble t2 = lambTsfn ( phi2 , sinphi , e ) ; \n\t\tn = Math . log ( m1 / m2 ) / Math . log ( t1 / t2 ) ; \n\t\t} \n\tF = m1 / ( n * Math . pow ( t1 , n ) ) ; \n\tif ( MoreMath . approximately_equal ( phi1 , phi2 , EPS10 ) ) { \n\t\trf = NUM00 ; \n\t\t} \n\telse { \n\t\trf = ellps . radius * F * Math . pow ( lambTsfn ( phif , Math . sin ( phif ) , e ) , n ) ; \n\t\t} \n\tlamdaf = ProjMath . degToRad ( centralMeridian ) ; \n\tlocationCenterXPixel = ( $F69510 ( getWidth ) / NUM00 ) ; \n\tlocationCenterYPixel = ( $F69510 ( getHeight ) / NUM00 ) ; \n\tlocationPixelsPerLambert = $F69510 ( getPPM ) / getScale ( ) ; \n\tLatLonPoint origin = new $F54838 ( referenceLatitude , centralMeridian ) ; \n\tPoint2D lp = LLToWorld ( origin . getY ( ) , origin . getX ( ) , new $F5047 $F72 ) ; \n\t$F25145 ( locationOriginX , lp ) $F130222 ( locationOriginY , lp ) LatLonPoint center = getCenter ( ) ; \n\tlp = LLToWorld ( center . getY ( ) , center . getX ( ) , lp ) ; \n\t$F25145 ( locationCenterXLambert , lp ) $F130222 ( locationCenterYLambert , lp ) locationOriginXfPixel = locationCenterXPixel + ( locationOriginX - locationCenterXLambert ) * locationPixelsPerLambert ; \n\tlocationOriginYfPixel = locationCenterYPixel - ( locationOriginY - locationCenterYLambert ) * locationPixelsPerLambert ; \n\tif $F22503 ( Debug ) { \n\t\tDebug . output ( NUM00 + locationCenterXLambert + NUM00 + locationCenterYLambert ) ; \n\t\tDebug . output ( NUM00 + locationOriginX + NUM00 + locationOriginY ) ; \n\t\t} \n\t} \n"}, {"code": "protected OkHttpClient configureHttpClient $F72 { \n\tfinal OkHttpClient . Builder builder = new OkHttpClient . Builder $F72 ; \n\tfinal CookieManager cookieManager = new CookieManager $F72 ; \n\tcookieManager . setCookiePolicy ( CookiePolicy . ACCEPT_ALL ) ; \n\tbuilder . cookieJar ( new JavaNetCookieJar ( cookieManager ) ) ; \n\tbuilder . connectTimeout ( NUM00 , TimeUnit . SECONDS ) ; \n\tbuilder . writeTimeout ( NUM00 , TimeUnit . SECONDS ) ; \n\tbuilder . readTimeout ( NUM00 , TimeUnit . SECONDS ) ; \n\t$F17464 ( builder ) } \n"}, {"code": "public String parseFile ( File file ) { \n\tlog . config ( file . getAbsolutePath ( ) ) ; \n\tString line = null ; \n\ttry { \n\t\tBufferedReader in = new BufferedReader ( new InputStreamReader ( new FileInputStream ( file ) , Ini . getCharset ( ) ) , NUM00 ) ; \n\t\tString errMsg = NUM00 ; \n\t\tint lineNo = NUM00 ; \n\t\twhile ( ( line = in . readLine ( ) ) != null && $F1276 ( errMsg ) ) { \n\t\t\terrMsg = parseLine ( line , lineNo ) ; \n\t\t\tlineNo ++ ; \n\t\t\t} \n\t\tline = null ; \n\t\t$F59 ( in ) if $F35625 ( errMsg ) return errMsg ; \n\t\t} \n\tcatch ( Exception ioe ) { \n\t\tString s = ioe . getLocalizedMessage ( ) ; \n\t\tif $F6036 ( s ) $F6947 ( s , ioe ) return NUM00 + line + NUM00 + s ; \n\t\t} \n\t$F1278 } \n"}, {"code": "public static Test suite $F72 throws Exception $F4915 ( suite , _BOOL ) "}, {"code": "public void load ( Element element , Object o ) $F21338 ( log ) "}, {"code": "public OMRaster ( double lt , double ln , int offset_x1 , int offset_y1 , ImageIcon ii ) { \n\tthis ( lt , ln , offset_x1 , offset_y1 , ii . getImage ( ) ) ; \n\t} \n"}, {"code": "private synchronized boolean startDequeue $F72 { \n\tint threads = $F150109 ( Math , queue , maxThreads ) ; \n\tfor ( $F119 ( i , threads ) ) { \n\t\tResourceThread t = ( ResourceThread ) queue . firstElement ( ) ; \n\t\tqueue . removeElementAt ( NUM00 ) ; \n\t\trunning . addElement ( t ) ; \n\t\tthreadCount ++ ; \n\t\t} \n\tfor ( $F44696 ( e , running ) ) { \n\t\tResourceThread t = ( ResourceThread ) e . nextElement ( ) ; \n\t\tt . go ( ) ; \n\t\t} \n\treturn ( threads > NUM00 ) ; \n\t} \n"}, {"code": "public void propertyChange ( PropertyChangeEvent evt ) { \n\tString name = evt . getPropertyName ( ) ; \n\tif $F37111 ( name ) $F9099 ( invalidateWidthCache , fireColumnMarginChanged ) } \n"}, {"code": "static WorkQueue commonSubmitterQueue $F72 { \n\tForkJoinPool p ; \n\t$F17861 ws ; \n\tint m ; \n\tSubmitter z ; \n\treturn ( $F17863 ( z , submitters ) && ( p = commonPool ) != null && $F17865 ( ws , p ) && $F17868 ( m , ws ) ) ? ws [ m & z . seed & SQMASK ] : null ; \n\t} \n"}, {"code": "public static void assertEquals ( Object object1 , Object object2 ) { \n\tcheckAssertion ( object1 . equals ( object2 ) , null ) ; \n\t} \n"}, {"code": "$F120210 ( maximumPullScroll , getMaximumPullScroll , pLeft , getPaddingLeft , pTop , getPaddingTop , pRight , getPaddingRight , pBottom , getPaddingBottom , getPullToRefreshScrollDirection , HORIZONTAL , mMode , mHeaderLayout , mFooterLayout , VERTICAL , DEBUG , Log , LOG_TAG , String , setPadding ) "}, {"code": "public static String flagNames ( long flags ) { \n\t$F83 ( sbuf ) int i = NUM00 ; \n\tlong f = flags & StandardFlags ; \n\twhile ( f != NUM00 ) { \n\t\tif $F69047 ( f ) { \n\t\t\t$F84 ( sbuf ) $F6939 ( sbuf , flagName , i ) } \n\t\tf = f > > NUM00 ; \n\t\ti ++ ; \n\t\t} \n\t$F92 ( sbuf ) } \n"}, {"code": "public String formatSQL ( Object obj , Object expr ) { \n\tString sql = null ; \n\tif ( expr instanceof String ) { \n\t\tsql = ( String ) expr ; \n\t\tif $F14148 ( log , Level ) { \n\t\t\t$F150605 ( log , sql ) } \n\t\t} \n\telse if ( obj != null ) { \n\t\tsql = toString ( obj ) ; \n\t\tif ( sql != null ) { \n\t\t\tif $F3106 ( sql ) { \n\t\t\t\t$F56558 ( sql ) } \n\t\t\tsql = sql . replaceAll ( NUM00 , BINARY_SQL_MARKER ) ; \n\t\t\t} \n\t\tif $F14148 ( log , Level ) { \n\t\t\t$F150605 ( log , sql ) } \n\t\t} \n\treturn sql ; \n\t} \n"}, {"code": "public void indent $F72 $F86 ( indent ) "}, {"code": "public void addFakeView ( View childView ) { \n\tchildView . layout ( NUM00 , NUM00 , getWidth ( ) , childView . getMeasuredHeight ( ) ) ; \n\tviews . add ( childView ) ; \n\t} \n"}, {"code": "public void compileProjects ( $F11300 projects , IssueAcceptor issueAcceptor ) throws N4JSCompileException { \n\tcompileProjects ( Arrays . asList ( $F8806 ) , projects , Collections . emptyList ( ) , issueAcceptor ) ; \n\t} \n"}, {"code": "protected final void print_contact_info ( ObjectInfoPanel p_window , $F18122 p_locale ) { \n\t$F129519 contacts = get_normal_contacts ( ) ; \n\t$F8504 ( contacts ) GuiResources resources = r_board . newGuiResources ( NUM00 ) ; \n\tp_window . append ( $F34152 ( resources ) + NUM00 ) ; \n\tInteger contact_count = contacts . size ( ) ; \n\tp_window . append_items ( contact_count . toString ( ) , resources . getString ( NUM00 ) , contacts ) ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "$F1431 public $F55892 resolve ( Result result ) { \n\tList < DoneCallback $F89732 > doneCallbacks ; \n\tList < AlwaysCallback > alwaysCallbacks ; \n\tsynchronized ( this ) { \n\t\tvalidateInPendingState ( ) ; \n\t\tmState = STATE_RESOLVED ; \n\t\tprintStateChanged ( NUM00 ) ; \n\t\tmResult = result ; \n\t\tdoneCallbacks = mCallbacks . cloneDoneCallbacks ( ) ; \n\t\talwaysCallbacks = mCallbacks . cloneAlwaysCallbacks ( ) ; \n\t\tclearCallbacks ( ) ; \n\t\t} \n\tif ( $F3816 ( doneCallbacks ) || $F3816 ( alwaysCallbacks ) ) $F19517 ( triggerAllDones , doneCallbacks , triggerAllAlways , alwaysCallbacks ) return this ; \n\t} \n"}, {"code": "private void adjustNameAndPosition ( Node node , int deltaX , int deltaY ) { \n\t$F20605 ( originalName , node ) String uniqueName = nextUniqueName ( originalName ) ; \n\tif $F2137 ( uniqueName , originalName ) { \n\t\tnode . setName ( uniqueName ) ; \n\t\tnode . setCenterX ( node . getCenterX ( ) + deltaX ) ; \n\t\tnode . setCenterY ( node . getCenterY ( ) + deltaY ) ; \n\t\t} \n\t} \n"}, {"code": "private void createSnapshot ( BlockSnapshot snapshot , Snap unitySnap , StorageSystem storage , DbClient dbClient ) { \n\tsnapshot . setNativeId ( unitySnap . getId ( ) ) ; \n\tsnapshot . setNativeGuid ( NativeGUIDGenerator . generateNativeGuid ( storage , snapshot ) ) ; \n\tsnapshot . setDeviceLabel ( unitySnap . getName ( ) ) ; \n\tsnapshot . setIsSyncActive ( _BOOL ) ; \n\tsnapshot . setInactive ( _BOOL ) ; \n\tsnapshot . setCreationTime ( Calendar . getInstance ( ) ) ; \n\tsnapshot . setWWN ( unitySnap . getAttachedWWN ( ) ) ; \n\tsnapshot . setAllocatedCapacity ( unitySnap . getSize ( ) ) ; \n\tsnapshot . setProvisionedCapacity ( unitySnap . getSize ( ) ) ; \n\tdbClient . createObject ( snapshot ) ; \n\t} \n"}, {"code": "public void save $F72 throws IOException { \n\tif $F5973 ( props ) { \n\t\tConfigurationUtil . saveConfigurationProperties ( props , propsFile , _BOOL ) ; \n\t\t} \n\tConfigurationUtil . saveConfigurationProperties ( props , new File ( propsFile . getParentFile ( ) , $F43113 ( propsFile ) ) , _BOOL ) ; \n\t} \n"}, {"code": "public static int len $F22381 ( list , delimiter , ignoreEmpty ) { \n\tif $F1277 ( delimiter ) return len ( list , delimiter . charAt ( NUM00 ) , ignoreEmpty ) ; \n\t$F7782 ( del , delimiter ) int len = StringUtil . length ( list ) ; \n\t$F94561 ( len ) int count = NUM00 ; \n\tint last = NUM00 ; \n\tchar c ; \n\tfor ( $F119 ( i , len ) ) { \n\t\tc = list . charAt ( i ) ; \n\t\tfor ( $F1139 ( y , del ) ) { \n\t\t\tif ( c == del [ y ] ) { \n\t\t\t\tif ( ! ignoreEmpty || last < i ) count ++ ; \n\t\t\t\tlast = i + NUM00 ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t} \n\tif ( ! ignoreEmpty || last < len ) count ++ ; \n\treturn count ; \n\t} \n"}, {"code": "$F46593 ( checkNotClosed , trimToSize , journalWriter ) "}, {"code": "public String buildUri ( String representationId , int segmentNumber , int bandwidth , long time ) { \n\t$F83 ( builder ) for ( $F119 ( i , identifierCount ) ) { \n\t\t$F6939 ( builder , urlPieces , i ) if ( identifiers [ i ] == REPRESENTATION_ID ) $F288 ( builder , representationId ) else if ( identifiers [ i ] == NUMBER_ID ) { \n\t\t\tbuilder . append ( String . format ( Locale . US , identifierFormatTags [ i ] , segmentNumber ) ) ; \n\t\t\t} \n\t\telse if ( identifiers [ i ] == BANDWIDTH_ID ) { \n\t\t\tbuilder . append ( String . format ( Locale . US , identifierFormatTags [ i ] , bandwidth ) ) ; \n\t\t\t} \n\t\telse if ( identifiers [ i ] == TIME_ID ) { \n\t\t\tbuilder . append ( String . format ( Locale . US , identifierFormatTags [ i ] , time ) ) ; \n\t\t\t} \n\t\t} \n\t$F6939 ( builder , urlPieces , identifierCount ) $F92 ( builder ) } \n"}, {"code": "static void dispose ( long pData , long pConfigInfo ) { \n\t$F4377 ( rq , OGLRenderQueue ) $F8934 ( rq ) try { \n\t\tOGLContext . setScratchSurface ( pConfigInfo ) ; \n\t\tRenderBuffer buf = rq . getBuffer ( ) ; \n\t\trq . ensureCapacityAndAlignment ( NUM00 , NUM00 ) ; \n\t\tbuf . putInt ( DISPOSE_SURFACE ) ; \n\t\tbuf . putLong ( pData ) ; \n\t\trq . flushNow ( ) ; \n\t\t} \n\t$F796 ( rq ) } \n"}, {"code": "private void writeKanjiResourceFile ( File file ) throws IOException { \n\tFileOutputStream output = null ; \n\tKanjiEscapeOutputStream kanji = null ; \n\tOutputStreamWriter writer = null ; \n\tBufferedWriter w = null ; \n\ttry { \n\t\t$F10893 ( output , file ) kanji = new KanjiEscapeOutputStream ( output ) ; \n\t\twriter = new OutputStreamWriter ( kanji ) ; \n\t\t$F35877 ( w , writer ) $F9826 ( w , _sb ) } \n\tfinally { \n\t\tUtil . close ( w ) ; \n\t\tUtil . close ( writer ) ; \n\t\tUtil . close ( kanji ) ; \n\t\tUtil . close ( output ) ; \n\t\t} \n\t} \n"}, {"code": "public ScannerException ( File file , ErrorMessages message ) { \n\tthis ( file , ErrorMessages . get ( message ) , message , - NUM00 , - NUM00 ) ; \n\t} \n"}, {"code": "void renderNormal $F72 { \n\tglEnable ( GL_DEPTH_TEST ) ; \n\tglUseProgram ( this . normalProgram ) ; \n\t$F124892 ( glUniformMatrix4fv , viewMatrixUniform , _BOOL , viewMatrix , matrixBuffer ) $F124892 ( glUniformMatrix4fv , projMatrixUniform , _BOOL , projMatrix , matrixBuffer ) $F124892 ( glUniformMatrix3fv , normalMatrixUniform , _BOOL , normalMatrix , matrixBuffer ) glBindFramebufferEXT ( GL_FRAMEBUFFER_EXT , fbo ) ; \n\tglClear ( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT ) ; \n\tglBindBuffer ( GL_ARRAY_BUFFER , this . cubeVbo ) ; \n\tglEnableVertexAttribArray ( NUM00 ) ; \n\tglVertexAttribPointer ( NUM00 , NUM00 , GL_FLOAT , _BOOL , NUM00 , NUM00 ) ; \n\tglEnableVertexAttribArray ( NUM00 ) ; \n\tglVertexAttribPointer ( NUM00 , NUM00 , GL_FLOAT , _BOOL , NUM00 , normalsOffset ) ; \n\tglDrawArrays ( GL_TRIANGLES , NUM00 , numVertices ) ; \n\tglDisableVertexAttribArray ( NUM00 ) ; \n\tglDisableVertexAttribArray ( NUM00 ) ; \n\tglBindBuffer ( GL_ARRAY_BUFFER , NUM00 ) ; \n\tglBindFramebufferEXT ( GL_FRAMEBUFFER_EXT , NUM00 ) ; \n\tglUseProgram ( NUM00 ) ; \n\t} \n"}, {"code": "private < T extends CWLResource > $F5675 lookForResources ( CWLResourceType type , $F20474 clazz ) { \n\t$F5675 resources = getRequirements ( type , clazz ) ; \n\tif $F45555 ( resources ) { \n\t\tresources = getHints ( type , clazz ) ; \n\t\t} \n\treturn resources ; \n\t} \n"}, {"code": "private void calcYValueSum $F72 { \n\tmYValueSum = NUM00 ; \n\tfor ( $F2277 ( i , mYVals ) ) { \n\t\t$F14726 ( e , mYVals , i ) if ( e != null ) mYValueSum += Math . abs ( e . getVal ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public boolean release ( int decrement ) { \n\t$F9303 ( isEmpty , _BOOL ) if ( decrement < NUM00 ) { \n\t\tthrow new IllegalStateException ( String . format ( NUM00 , decrement , toVerboseString ( ) ) ) ; \n\t\t} \n\tfinal int refCnt = ledger . decrement ( decrement ) ; \n\tif ( BaseAllocator . DEBUG ) { \n\t\thistoricalLog . recordEvent ( NUM00 , decrement , refCnt + decrement ) ; \n\t\t} \n\tif ( refCnt < NUM00 ) { \n\t\tthrow new IllegalStateException ( String . format ( NUM00 , id , toVerboseString ( ) ) ) ; \n\t\t} \n\treturn refCnt == NUM00 ; \n\t} \n"}, {"code": "$F82267 ( expression , errorMessage , String ) "}, {"code": "int listSize $F72 { \n\tint result = memSize ( ) ; \n\tfor ( Iterator it = iterator ( ) ; \n\tit . hasNext ( ) ; \n\t) { \n\t\tASTNode child = ( ASTNode ) it . next ( ) ; \n\t\tresult += child . treeSize ( ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public ConnectionTcp findConnectionByThreadId ( long threadId ) { \n\tfor ( PortTcp listener : getPorts ( ) ) { \n\t\tConnectionTcp conn = listener . findConnectionByThreadId ( threadId ) ; \n\t\t$F60730 ( conn ) } \n\t$F1274 } \n"}, {"code": "public UniformDistribution estimate ( double min , double max , final int count ) { \n\tdouble grow = ( count > NUM00 ) ? NUM00 * ( max - min ) / ( count - NUM00 ) : NUM00 ; \n\treturn new UniformDistribution ( Math . max ( min - grow , - Double . MAX_VALUE ) , Math . min ( max + grow , Double . MAX_VALUE ) ) ; \n\t} \n"}, {"code": "public static RepositoryMetaData readFrom ( StreamInput in ) throws IOException { \n\tString name = in . readString ( ) ; \n\tString type = in . readString ( ) ; \n\tSettings settings = Settings . readSettingsFromStream ( in ) ; \n\treturn new RepositoryMetaData ( name , type , settings ) ; \n\t} \n"}, {"code": "public static boolean isPrimitiveDatatype ( IRI datatype ) { \n\treturn datatype . equals ( XMLSchema . DURATION ) || datatype . equals ( XMLSchema . DATETIME ) || datatype . equals ( XMLSchema . TIME ) || datatype . equals ( XMLSchema . DATE ) || datatype . equals ( XMLSchema . GYEARMONTH ) || datatype . equals ( XMLSchema . GYEAR ) || datatype . equals ( XMLSchema . GMONTHDAY ) || datatype . equals ( XMLSchema . GDAY ) || datatype . equals ( XMLSchema . GMONTH ) || datatype . equals ( XMLSchema <missing ')'> . <missing ';'> NUM00 ) || datatype . equals ( XMLSchema . BOOLEAN ) || datatype . equals ( XMLSchema . BASE64BINARY ) || datatype . equals ( XMLSchema . HEXBINARY ) || datatype . equals ( XMLSchema . FLOAT ) || datatype . equals ( XMLSchema . DECIMAL ) || datatype . equals ( XMLSchema . DOUBLE ) || datatype . equals ( XMLSchema . ANYURI ) || datatype . equals ( XMLSchema . QNAME ) || datatype . equals ( XMLSchema . NOTATION ) ; \n\t} \n"}, {"code": "protected void appendLine ( JComponent c ) { \n\tc . setAlignmentX ( NUM00 ) ; \n\tcontents . add ( c ) ; \n\t} \n"}, {"code": "private void addLinks ( final SpannableString string , final long accountId , final long extraId , final int type , final boolean sensitive , final OnLinkClickListener listener , final int highlightOption ) { \n\tswitch ( type ) { \n\t\tcase LINK_TYPE_MENTION : { \n\t\t\taddMentionOrListLinks ( string , accountId , extraId , highlightOption , listener ) ; \n\t\t\t$F597 } \n\t\tcase LINK_TYPE_HASHTAG : { \n\t\t\taddHashtagLinks ( string , accountId , extraId , listener , highlightOption ) ; \n\t\t\t$F597 } \n\t\tcase LINK_TYPE_LINK : { \n\t\t\tfinal URLSpan [ ] spans = string . getSpans ( NUM00 , string . length ( ) , $F541677 ) ; \n\t\t\tfor ( final URLSpan span : spans ) { \n\t\t\t\tfinal int start = string . getSpanStart ( span ) ; \n\t\t\t\tfinal int end = string . getSpanEnd ( span ) ; \n\t\t\t\tif ( $F128898 ( start , end , string ) || start > end ) $F1448 string . removeSpan ( span ) ; \n\t\t\t\tapplyLink ( span . getURL ( ) , start , end , string , accountId , extraId , LINK_TYPE_LINK , sensitive , highlightOption , listener ) ; \n\t\t\t\t} \n\t\t\tfinal List < Extractor . Entity > urls = mExtractor . extractURLsWithIndices ( ParseUtils . parseString ( string ) ) ; \n\t\t\tfor ( final Extractor . Entity entity : urls ) { \n\t\t\t\tfinal int start = entity . getStart ( ) , end = entity . getEnd ( ) ; \n\t\t\t\tif ( entity . getType ( ) != Extractor . Entity . Type . URL || string . getSpans ( start , end , $F541677 ) . length > NUM00 ) $F1448 applyLink ( entity . getValue ( ) , start , end , string , accountId , extraId , LINK_TYPE_LINK , sensitive , highlightOption , listener ) ; \n\t\t\t\t} \n\t\t\t$F597 } \n\t\tcase LINK_TYPE_STATUS : { \n\t\t\tfinal URLSpan [ ] spans = string . getSpans ( NUM00 , string . length ( ) , $F541677 ) ; \n\t\t\tfor ( final URLSpan span : spans ) { \n\t\t\t\tfinal Matcher matcher = PATTERN_TWITTER_STATUS . matcher ( span . getURL ( ) ) ; \n\t\t\t\tif $F24133 ( matcher ) { \n\t\t\t\t\tfinal int start = string . getSpanStart ( span ) ; \n\t\t\t\t\tfinal int end = string . getSpanEnd ( span ) ; \n\t\t\t\t\tfinal String url = matcherGroup ( matcher , GROUP_ID_TWITTER_STATUS_STATUS_ID ) ; \n\t\t\t\t\tstring . removeSpan ( span ) ; \n\t\t\t\t\tapplyLink ( url , start , end , string , accountId , extraId , LINK_TYPE_STATUS , sensitive , highlightOption , listener ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t$F597 } \n\t\tcase LINK_TYPE_CASHTAG : { \n\t\t\taddCashtagLinks ( string , accountId , extraId , listener , highlightOption ) ; \n\t\t\t$F597 } \n\t\t$F1267 $F932 } \n\t} \n"}, {"code": "public void postProcess $F72 { \n\tif ( foreignColumnName != null ) { \n\t\tforeignAutoRefresh = _BOOL ; \n\t\t} \n\tif ( foreignAutoRefresh && maxForeignAutoRefreshLevel == DatabaseField . NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED ) { \n\t\tmaxForeignAutoRefreshLevel = DatabaseField . DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL ; \n\t\t} \n\t} \n"}, {"code": "public boolean contains ( Node s ) { \n\trunTo ( - NUM00 ) ; \n\t$F161848 ( m_map , _BOOL ) for ( $F119 ( i , m_firstFree ) ) { \n\t\tNode node = m_map [ i ] ; \n\t\tif ( ( null != node ) && node . equals ( s ) ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void persistNewTemp ( File fileCfg ) { \n\tif $F10471 ( hsDeleteOnExit ) { \n\t\tlogDebug ( LogArea . CONFIG , NUM00 ) ; \n\t\t$F1900 ( fileCfg ) $F665 } \n\tlogDebug ( LogArea . CONFIG , NUM00 , hsDeleteOnExit . size ( ) , fileCfg . getAbsolutePath ( ) ) ; \n\tBufferedWriter writer = null ; \n\ttry { \n\t\t$F92873 ( writer , fileCfg ) for ( File file : hsDeleteOnExit ) { \n\t\t\tif $F7119 ( file ) { \n\t\t\t\t$F8811 ( f , file ) writer . write ( f ) ; \n\t\t\t\t$F1769 ( writer ) logWarn ( LogArea . JAR , NUM00 , f ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F29052 $F34262 ( writer ) } \n"}, {"code": "public static double clamp $F7635 ( value , low , high ) { \n\treturn Math . min ( Math . max ( value , low ) , high ) ; \n\t} \n"}, {"code": "public void addWritten $F97 ( value ) { \n\t$F8934 ( writeSetLock ) writeSet . add ( new TimestampValuePair ( ets , value ) ) ; \n\t$F704 ( writeSetLock ) } \n"}, {"code": "public void load ( Entity unit ) throws IllegalArgumentException { \n\tif ( ! canLoad ( unit ) ) { \n\t\tthrow new IllegalArgumentException ( NUM00 + unit . getShortName ( ) + NUM00 ) ; \n\t\t} \n\tcurrentSpace -= NUM00 ; \n\ttroops . addElement ( unit . getId ( ) ) ; \n\t} \n"}, {"code": "private void processWorkerExit ( Worker w , boolean completedAbruptly ) { \n\t$F32367 ( completedAbruptly , decrementWorkerCount ) $F677 ( mainLock , this ) $F8934 ( mainLock ) try { \n\t\tcompletedTaskCount += w . completedTasks ; \n\t\tworkers . remove ( w ) ; \n\t\t} \n\t$F796 ( mainLock ) tryTerminate ( ) ; \n\t$F8943 ( c , ctl ) if ( runStateLessThan ( c , STOP ) ) { \n\t\tif ( ! completedAbruptly ) { \n\t\t\tint min = allowCoreThreadTimeOut ? NUM00 : corePoolSize ; \n\t\t\tif ( min == NUM00 && $F1030 ( workQueue ) ) min = NUM00 ; \n\t\t\tif ( workerCountOf ( c ) >= min ) $F665 } \n\t\taddWorker ( null , _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "public void finish $F72 throws IOException { \n\tif $F197883 ( def ) { \n\t\t$F1571 ( def ) while $F197883 ( def ) { \n\t\t\tint len = def . deflate ( buf , NUM00 , buf . length ) ; \n\t\t\tif ( def . finished ( ) && len <= buf . length - TRAILER_SIZE ) { \n\t\t\t\twriteTrailer ( buf , len ) ; \n\t\t\t\tlen = len + TRAILER_SIZE ; \n\t\t\t\t$F11584 ( out , buf , len ) $F665 } \n\t\t\tif ( len > NUM00 ) $F11584 ( out , buf , len ) } \n\t\t$F2175 ( trailer , TRAILER_SIZE ) writeTrailer ( trailer , NUM00 ) ; \n\t\tout . write ( trailer ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean free ( T obj ) { \n\tAtomicInteger topRef = _top ; \n\twhile ( _BOOL ) { \n\t\t$F87905 ( top , topRef ) $F24599 ( _capacity , top , _BOOL ) boolean isFree = _freeStack . compareAndSet ( top , null , obj ) ; \n\t\t$F26080 ( topRef , top ) ; \n\t\t$F9303 ( isFree , _BOOL ) } \n\t} \n"}, {"code": "public static boolean hasBinding ( Injector injector , Key $F1011 key ) { \n\tBinding $F1011 binding = getBinding ( injector , key ) ; \n\treturn binding != null ; \n\t} \n"}, {"code": "private OpenReplicatorManagerMBean createInternalService ( String serviceName ) throws ReplicatorException { \n\t$F556 ( logger , serviceName ) try { \n\t\tOpenReplicatorManager orm = new OpenReplicatorManager ( serviceName ) ; \n\t\torm . setRmiHost ( managerRMIHost ) ; \n\t\torm . setRmiPort ( managerRMIPort ) ; \n\t\torm . setHostTimeZone ( hostTimeZone ) ; \n\t\torm . setReplicatorTimeZone ( replicatorTimeZone ) ; \n\t\torm . advertiseInternal ( ) ; \n\t\torm . setSecurityInfo ( this . securityInfo ) ; \n\t\treturn ( OpenReplicatorManagerMBean ) orm ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new ReplicatorException $F152836 ( String , serviceName , e ) ; \n\t\t} \n\t} \n"}, {"code": "public static CheckIndex . Status checkIndex ( Directory dir ) throws IOException $F8587 ( checkIndex , dir , _BOOL ) "}, {"code": "static void policyChanged ( String serviceTypeName , PolicyEvent pe ) { \n\t$F19232 ( DEBUG , serviceTypeName ) resourceNamesMap . remove ( serviceTypeName ) ; \n\tCache resourceNamesCache = ( Cache ) resourceNamesMap . get ( serviceTypeName ) ; \n\tif $F10122 ( resourceNamesCache ) $F932 try { \n\t\t$F9464 ( DEBUG ) ServiceTypeManager stm = ServiceTypeManager . getServiceTypeManager ( ) ; \n\t\tServiceType serviceType = stm . getServiceType ( serviceTypeName ) ; \n\t\t$F19850 ( resourceNamesToRemove ) synchronized ( resourceNamesCache ) { \n\t\t\t$F10529 ( resourceNames , resourceNamesCache ) while $F1444 ( resourceNames ) { \n\t\t\t\t$F14952 ( resourceName , resourceNames ) $F36399 ( resourceNamesToRemove , resourceName ) Set affectedResourceNames = pe . getResourceNames ( ) ; \n\t\t\t\t$F10531 ( iter , affectedResourceNames ) while $F2921 ( iter ) { \n\t\t\t\t\t$F2778 ( affectedResourceName , iter ) if ( serviceType . compare ( resourceName , affectedResourceName ) != ResourceMatch . NO_MATCH ) $F207 ( resourceNamesToRemove , resourceName ) } \n\t\t\t\t} \n\t\t\t$F10531 ( iter1 , resourceNamesToRemove ) while $F2921 ( iter1 ) { \n\t\t\t\t$F2778 ( resourceNameToRemove , iter1 ) resourceNamesCache . remove ( resourceNameToRemove ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( SSOException e ) $F5198 ( DEBUG , e ) catch ( PolicyException pex ) $F5198 ( DEBUG , pex ) if $F6299 ( DEBUG ) { \n\t\tDEBUG . message ( NUM00 + serviceTypeName + NUM00 + resourceNamesMap . get ( serviceTypeName ) ) ; \n\t\t} \n\t} \n"}, {"code": "private void startHideAnimations $F72 { \n\tanimationPlaying = _BOOL ; \n\tlightAnimationLayout ( ) ; \n\tif ( buttonType . equals ( ButtonType . CIRCLE ) ) { \n\t\tif ( hideOrderType . equals ( OrderType . DEFAULT ) ) { \n\t\t\tfor ( $F119 ( i , buttonNum ) ) { \n\t\t\t\tsetHideAnimation ( dots [ i ] , circleButtons [ i ] , endLocations [ i ] , startLocations [ i ] , i ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( hideOrderType . equals ( OrderType . REVERSE ) ) { \n\t\t\tfor ( $F119 ( i , buttonNum ) ) { \n\t\t\t\tsetHideAnimation ( dots [ i ] , circleButtons [ i ] , endLocations [ i ] , startLocations [ i ] , buttonNum - i - NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( hideOrderType . equals ( OrderType . RANDOM ) ) { \n\t\t\t$F6822 ( random ) $F57515 ( used , buttonNum ) for ( $F119 ( i , buttonNum ) ) used [ i ] = _BOOL ; \n\t\t\tint count = NUM00 ; \n\t\t\twhile ( _BOOL ) { \n\t\t\t\t$F123945 ( i , random , buttonNum ) if ( ! used [ i ] ) { \n\t\t\t\t\tused [ i ] = _BOOL ; \n\t\t\t\t\tsetHideAnimation ( dots [ count ] , circleButtons [ count ] , endLocations [ count ] , startLocations [ count ] , i ) ; \n\t\t\t\t\tcount ++ ; \n\t\t\t\t\t$F67767 ( count , buttonNum ) } \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse if ( buttonType . equals ( ButtonType . HAM ) ) { \n\t\tif ( hideOrderType . equals ( OrderType . DEFAULT ) ) { \n\t\t\tfor ( $F119 ( i , buttonNum ) ) { \n\t\t\t\tsetHideAnimation ( bars [ i ] , hamButtons [ i ] , endLocations [ i ] , startLocations [ i ] , i ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( hideOrderType . equals ( OrderType . REVERSE ) ) { \n\t\t\tfor ( $F119 ( i , buttonNum ) ) { \n\t\t\t\tsetHideAnimation ( bars [ i ] , hamButtons [ i ] , endLocations [ i ] , startLocations [ i ] , buttonNum - i - NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( hideOrderType . equals ( OrderType . RANDOM ) ) { \n\t\t\t$F6822 ( random ) $F57515 ( used , buttonNum ) for ( $F119 ( i , buttonNum ) ) used [ i ] = _BOOL ; \n\t\t\tint count = NUM00 ; \n\t\t\twhile ( _BOOL ) { \n\t\t\t\t$F123945 ( i , random , buttonNum ) if ( ! used [ i ] ) { \n\t\t\t\t\tused [ i ] = _BOOL ; \n\t\t\t\t\tsetHideAnimation ( bars [ count ] , hamButtons [ count ] , endLocations [ count ] , startLocations [ count ] , i ) ; \n\t\t\t\t\tcount ++ ; \n\t\t\t\t\t$F67767 ( count , buttonNum ) } \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public TaggedOutputStream ( OutputStream proxy ) { \n\tsuper ( proxy ) ; \n\t} \n"}, {"code": "public List < MType > build $F72 { \n\tisClean = _BOOL ; \n\tif ( ! isMessagesListMutable && builders == null ) { \n\t\treturn messages ; \n\t\t} \n\tboolean allMessagesInSync = _BOOL ; \n\tif ( ! isMessagesListMutable ) { \n\t\tfor ( $F2277 ( i , messages ) ) { \n\t\t\tMessage message = messages . get ( i ) ; \n\t\t\t$F20980 builder = builders . get ( i ) ; \n\t\t\tif ( builder != null ) { \n\t\t\t\tif ( builder . build ( ) != message ) $F3468 ( allMessagesInSync , _BOOL ) } \n\t\t\t} \n\t\t$F9303 ( allMessagesInSync , messages ) } \n\tensureMutableMessageList ( ) ; \n\tfor ( $F2277 ( i , messages ) ) { \n\t\tmessages . set ( i , getMessage ( i , _BOOL ) ) ; \n\t\t} \n\t$F5939 ( messages , Collections ) isMessagesListMutable = _BOOL ; \n\treturn messages ; \n\t} \n"}, {"code": "public static void putShort ( long addr , short val ) { \n\tif ( UNALIGNED ) UNSAFE . putShort ( addr , val ) ; \n\telse putShortByByte ( addr , val , BIG_ENDIAN ) ; \n\t} \n"}, {"code": "public static $F96 hashTwice $F24576 ( input , offset , length ) { \n\tMessageDigest digest = newDigest ( ) ; \n\tdigest . update ( input , offset , length ) ; \n\treturn digest . digest ( digest . digest ( ) ) ; \n\t} \n"}, {"code": "public PronounceableFSM ( URL url , boolean scanFromFront ) throws IOException { \n\tthis . scanFromFront = scanFromFront ; \n\t$F83713 ( is , Utilities , url ) loadText ( is ) ; \n\t$F59 ( is ) } \n"}, {"code": "private $F1469 applyFloatPadding ( final $F1469 ca4 , final boolean noDigits ) { \n\t$F1469 ca5 = ca4 ; \n\tif ( fieldWidthSet ) { \n\t\tint i ; \n\t\tint j ; \n\t\tfinal int nBlanks ; \n\t\tif ( leftJustify ) { \n\t\t\tnBlanks = fieldWidth - ca4 . length ; \n\t\t\tif ( nBlanks > NUM00 ) { \n\t\t\t\tca5 = new char [ ca4 . length + nBlanks ] ; \n\t\t\t\tfor ( $F6929 ( i , ca4 ) ) $F15086 ( ca5 , i , ca4 ) for ( j = NUM00 ; \n\t\t\t\tj < nBlanks ; \n\t\t\t\tj ++ , i ++ ) $F114344 ( ca5 , i ) } \n\t\t\t} \n\t\telse if ( ! leadingZeros || noDigits ) { \n\t\t\tnBlanks = fieldWidth - ca4 . length ; \n\t\t\tif ( nBlanks > NUM00 ) { \n\t\t\t\tca5 = new char [ ca4 . length + nBlanks ] ; \n\t\t\t\tfor ( i = NUM00 ; \n\t\t\t\ti < nBlanks ; \n\t\t\t\ti ++ ) $F114344 ( ca5 , i ) for ( j = NUM00 ; \n\t\t\t\tj < ca4 . length ; \n\t\t\t\ti ++ , j ++ ) $F20651 ( ca5 , i , ca4 , j ) } \n\t\t\t} \n\t\telse if ( leadingZeros ) { \n\t\t\tnBlanks = fieldWidth - ca4 . length ; \n\t\t\tif ( nBlanks > NUM00 ) { \n\t\t\t\tca5 = new char [ ca4 . length + nBlanks ] ; \n\t\t\t\ti = NUM00 ; \n\t\t\t\tj = NUM00 ; \n\t\t\t\tif ( ca4 [ NUM00 ] == NUM00 ) { \n\t\t\t\t\tca5 [ NUM00 ] = NUM00 ; \n\t\t\t\t\ti ++ ; \n\t\t\t\t\tj ++ ; \n\t\t\t\t\t} \n\t\t\t\tfor ( $F259650 ( k , nBlanks , i ) ) $F114344 ( ca5 , i ) for ( ; \n\t\t\t\tj < ca4 . length ; \n\t\t\t\ti ++ , j ++ ) $F20651 ( ca5 , i , ca4 , j ) } \n\t\t\t} \n\t\t} \n\treturn ca5 ; \n\t} \n"}, {"code": "public Object put ( String key , Object value ) { \n\t$F22998 ( len , key ) if ( len > m_charBuffer . length ) { \n\t\t$F104602 ( m_charBuffer , len ) } \n\tNode node = m_Root ; \n\tfor ( $F119 ( i , len ) ) { \n\t\tNode nextNode = $F432461 ( node , Character , key , i ) ; \n\t\tif ( nextNode != null ) { \n\t\t\tnode = nextNode ; \n\t\t\t} \n\t\telse { \n\t\t\tfor ( ; \n\t\t\ti < len ; \n\t\t\ti ++ ) { \n\t\t\t\tNode newNode = new Node $F72 ; \n\t\t\t\tif ( m_lowerCaseOnly ) { \n\t\t\t\t\t$F432461 ( node , Character , key , i ) = newNode ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tnode . m_nextChar [ $F29169 ( Character , key , i ) ] = newNode ; \n\t\t\t\t\t$F432461 ( node , Character , key , i ) = newNode ; \n\t\t\t\t\t} \n\t\t\t\tnode = newNode ; \n\t\t\t\t} \n\t\t\t$F597 } \n\t\t} \n\tObject ret = node . m_Value ; \n\tnode . m_Value = value ; \n\treturn ret ; \n\t} \n"}, {"code": "$F1 public void makeImmutable $F72 { \n\tif ( isMutable ) { \n\t\tif ( authnStatements != null ) { \n\t\t\t$F2199 ( length , authnStatements ) for ( $F119 ( i , length ) ) { \n\t\t\t\tAuthnStatement authn = ( AuthnStatement ) authnStatements . get ( i ) ; \n\t\t\t\t$F118294 ( authn ) } \n\t\t\t$F5939 ( authnStatements , Collections ) } \n\t\tif ( authzDecisionStatements != null ) { \n\t\t\t$F2199 ( length , authzDecisionStatements ) for ( $F119 ( i , length ) ) { \n\t\t\t\tAuthzDecisionStatement authz = ( AuthzDecisionStatement ) authzDecisionStatements . get ( i ) ; \n\t\t\t\t$F118294 ( authz ) } \n\t\t\t$F5939 ( authzDecisionStatements , Collections ) } \n\t\tif ( attributeStatements != null ) { \n\t\t\t$F2199 ( length , attributeStatements ) for ( $F119 ( i , length ) ) { \n\t\t\t\tAttributeStatement attr = ( AttributeStatement ) attributeStatements . get ( i ) ; \n\t\t\t\t$F118294 ( attr ) } \n\t\t\t$F5939 ( attributeStatements , Collections ) } \n\t\t$F5941 ( statements , Collections ) $F303803 ( conditions ) $F303803 ( issuer ) $F303803 ( subject ) $F303803 ( advice ) isMutable = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "$F1 public String findLibrary ( String name ) { \n\tString systemName = System . mapLibraryName ( name ) ; \n\tArrayList < Loader > loaders = getLoaders ( ) ; \n\tfor ( $F2277 ( i , loaders ) ) { \n\t\tLoader loader = loaders . get ( i ) ; \n\t\tPath path = loader . getPath ( systemName ) ; \n\t\tif ( path != null && path . canRead ( ) ) { \n\t\t\treturn path . getNativePath ( ) ; \n\t\t\t} \n\t\tpath = loader . getPath ( NUM00 + systemName ) ; \n\t\tif ( path != null && path . canRead ( ) ) { \n\t\t\treturn path . getNativePath ( ) ; \n\t\t\t} \n\t\t} \n\tfor ( $F2277 ( i , _nativePath ) ) { \n\t\t$F77510 ( path , _nativePath , i ) if $F351048 ( path ) return path . getNativePath ( ) ; \n\t\t} \n\treturn super . findLibrary ( name ) ; \n\t} \n"}, {"code": "public void removeComponentListener ( final ComponentUpdateListener listener ) $F106 ( componentListeners , listener ) "}, {"code": "public static _Fields findByThriftId ( int fieldId ) { \n\tswitch ( fieldId ) { \n\t\t$F3366 return APPKEY ; \n\t\t$F3366 return SEND_TIME ; \n\t\t$F3366 return LOAD_INFO ; \n\t\t$F3366 return STATUS ; \n\t\t$F20809 } \n\t} \n"}, {"code": "public static boolean isEmpty ( CharSequence text ) $F215747 ( text ) "}, {"code": "protected $F96 assertEncodeDecode ( final IGangliaMetadataMessage decl , final IGangliaMessage expected ) { \n\t$F10057 ( expected ) final XDROutputBuffer xdr = new XDROutputBuffer ( IGangliaDefaults . BUFFER_SIZE ) ; \n\tfinal GangliaMessageEncoder31 messageEncoder = new GangliaMessageEncoder31 $F72 ; \n\tfinal GangliaMessageDecoder31 messageDecoder = new GangliaMessageDecoder31 $F72 ; \n\tif ( expected . isMetricRequest ( ) ) { \n\t\tmessageEncoder . writeRequest ( xdr , ( IGangliaRequestMessage ) expected ) ; \n\t\t} \n\telse if ( expected . isMetricMetadata ( ) ) { \n\t\tmessageEncoder . writeMetadata ( xdr , ( IGangliaMetadataMessage ) expected ) ; \n\t\t} \n\telse if ( expected . isMetricValue ( ) ) { \n\t\t$F19273 ( decl ) messageEncoder . writeMetric ( xdr , decl , ( IGangliaMetricMessage ) expected ) ; \n\t\t} \n\telse $F10176 final IGangliaMessage actual = messageDecoder . decode ( xdr . getBuffer ( ) , NUM00 , xdr . getLength ( ) ) ; \n\tassertEquals ( NUM00 , expected , actual ) ; \n\tfinal $F96 actualData = new byte [ xdr . getLength ( ) ] ; \n\tSystem . arraycopy ( xdr . getBuffer ( ) , NUM00 , actualData , NUM00 , actualData . length ) ; \n\treturn actualData ; \n\t} \n"}, {"code": "private boolean isIndexable ( String term ) { \n\treturn $F3599 ( term ) && $F4012 ( term ) ; \n\t} \n"}, {"code": "private void sendResponse ( String status , String mime , Properties header , InputStream data ) { \n\ttry { \n\t\tif ( status == null ) $F9283 $F147972 ( out , mySocket ) $F80496 ( pw , out ) $F147974 ( pw , status ) if ( mime != null ) $F147974 ( pw , mime ) if ( header == null || header . getProperty ( NUM00 ) == null ) pw . print ( $F52171 ( gmtFrmt ) + NUM00 ) ; \n\t\tif ( header != null ) { \n\t\t\t$F10529 ( e , header ) while $F1444 ( e ) { \n\t\t\t\t$F14952 ( key , e ) $F7601 ( value , header , key ) pw . print ( key + NUM00 + value + NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F21384 ( pw ) $F1206 ( pw ) if ( data != null ) { \n\t\t\t$F12496 ( buff ) while ( _BOOL ) { \n\t\t\t\tint read = $F3259 ( data , buff ) ; \n\t\t\t\t$F137919 ( read ) $F11584 ( out , buff , read ) } \n\t\t\t} \n\t\t$F1206 ( out ) $F59 ( out ) $F711 ( data ) } \n\tcatch ( IOException ioe ) { \n\t\ttry $F881 ( mySocket ) $F58785 } \n\t} \n"}, {"code": "public static String decode ( String encoded , AMEncryption encr ) { \n\tif ( checkCaller ( ) ) { \n\t\ttry { \n\t\t\tISSecurityPermission isp = new ISSecurityPermission $F6600 ; \n\t\t\tif ( securityManager != null ) { \n\t\t\t\tsecurityManager . checkPermission ( isp ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( SecurityException e ) { \n\t\t\t$F5348 ( debug , Debug ) $F66414 ( debug , e ) $F1274 } \n\t\t} \n\tif $F6036 ( encoded ) $F119112 $F5475 ( encData ) encData = Base64 . decode ( encoded . trim ( ) ) ; \n\t$F1338 ( encData ) $F96 rawData = encr . decrypt ( encData ) ; \n\tif ( rawData == null ) $F119112 String answer = null ; \n\ttry { \n\t\t$F116025 ( answer , rawData ) ; \n\t\t} \n\tcatch ( UnsupportedEncodingException uue ) { \n\t\t$F5348 ( debug , Debug ) $F5197 ( debug , uue ) $F84838 ( answer , rawData ) } \n\treturn ( answer ) ; \n\t} \n"}, {"code": "protected void waitForShutdownSignal $F72 throws InterruptedException { \n\tif ( mutexWaiting == null ) $F60848 ( mutexWaiting ) try { \n\t\tsynchronized ( mutexWaiting ) $F28646 ( mutexWaiting ) } \n\tcatch ( InterruptedException e ) { \n\t\tif ( ! shutdown ) throw e ; \n\t\t} \n\t} \n"}, {"code": "public void addConnection ( Connection connection ) { \n\t$F19273 ( connection ) synchronized ( connectionsLock ) { \n\t\tConnection [ ] newConnections = new Connection $F22598 ( connections ) ; \n\t\tnewConnections [ NUM00 ] = connection ; \n\t\t$F7057 ( System , connections , newConnections ) connections = newConnections ; \n\t\t} \n\tconnection . addListener ( invokeListener ) ; \n\tif ( TRACE ) trace ( NUM00 , NUM00 + connection ) ; \n\t} \n"}, {"code": "public double distance ( Point2D pt ) { \n\tfinal double x_distance = ( pt . getX ( ) - x ) * ( pt . getX ( ) - x ) ; \n\tfinal double y_distance = ( pt . getY ( ) - y ) * ( pt . getY ( ) - y ) ; \n\treturn Math . sqrt ( x_distance + y_distance ) ; \n\t} \n"}, {"code": "$F9749 ( namespace , attName , attValue , xmlWriter , registerPrefix ) "}, {"code": "private static int convertToInt ( String value , int defaultValue ) { \n\tString trim = value . trim ( ) ; \n\t$F25111 ( trim , defaultValue ) $F15516 ( Integer , trim ) } \n"}, {"code": "public ChainIterable $F4203 addItem ( $F1113 T item ) { \n\treturn ( ChainIterable $F4203 ) super . add ( Collections . $F4203 singleton ( item ) ) ; \n\t} \n"}, {"code": "private void updateStateView ( int itCount , Collection < Individual $F12404 > gen ) { \n\t$F5454 ( Platform ) simPaneCtrl . waitAfterStep ( ) ; \n\t} \n"}, {"code": "$F1 public void run $F72 { \n\ttry { \n\t\tfor ( $F589 ) { \n\t\t\tint n = portGetn ( port , bufferAddress , MAX_EVENT_COUNT ) ; \n\t\t\tassert n > NUM00 ; \n\t\t\tlong address = bufferAddress ; \n\t\t\tfor ( $F119 ( i , n ) ) { \n\t\t\t\tboolean shutdown = processEvent ( address ) ; \n\t\t\t\t$F5453 ( shutdown ) address += SIZEOF_PORT_EVENT ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( UnixException x ) $F302 ( x ) } \n"}, {"code": "$F1 public $F3803 allKeys $F72 { \n\t$F24645 ( nameFiles ) $F5459 ( files , cacheDirectory ) $F397 ( files , nameFiles ) for ( File file : files ) { \n\t\tif $F7110 ( file ) $F29791 ( nameFiles , file ) } \n\treturn nameFiles ; \n\t} \n"}, {"code": "public DialogueRecorder ( DialogueSystem system ) { \n\tthis . settings = system . getSettings ( ) ; \n\t} \n"}, {"code": "private String generateUniqueFutureId $F72 { \n\treturn String . valueOf ( mIdCounter . getAndIncrement ( ) ) ; \n\t} \n"}, {"code": "private static final void rescheduleMissedAlarms ( ContentResolver cr , Context context , AlarmManagerInterface manager ) { \n\t$F657 ( now , System ) long ancient = now - DateUtils . DAY_IN_MILLIS ; \n\t$F806 projection = new String [ ] { \n\t\tCalendarContract . CalendarAlerts . ALARM_TIME } \n\t; \n\tif ( $F215008 ( Build ) && ContextCompat . checkSelfPermission ( context , Manifest . permission . READ_CALENDAR ) != PackageManager . PERMISSION_GRANTED ) $F13528 ( Log , TAG ) Cursor cursor = cr . query ( CalendarAlerts . CONTENT_URI , projection , WHERE_RESCHEDULE_MISSED_ALARMS , ( new String [ ] { \n\t\tLong . toString ( now ) , Long . toString ( ancient ) , Long . toString ( now ) } \n\t) , SORT_ORDER_ALARMTIME_ASC ) ; \n\t$F2329 ( cursor ) if ( DEBUG ) { \n\t\tLog . d ( TAG , NUM00 + cursor . getCount ( ) ) ; \n\t\t} \n\ttry { \n\t\tlong alarmTime = - NUM00 ; \n\t\twhile $F12260 ( cursor ) { \n\t\t\tlong newAlarmTime = cursor . getLong ( NUM00 ) ; \n\t\t\tif ( alarmTime != newAlarmTime ) { \n\t\t\t\tif ( DEBUG ) { \n\t\t\t\t\t$F248237 ( Log , TAG , newAlarmTime ) } \n\t\t\t\tAlertUtils . scheduleAlarm ( context , manager , newAlarmTime ) ; \n\t\t\t\talarmTime = newAlarmTime ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F3229 ( cursor ) } \n"}, {"code": "public void addName ( String name ) $F207 ( m_names , name ) "}, {"code": "$F1 default CompletableFuture < OptionalDouble > minDouble ( final ToDoubleFunction $F11632 fn ) $F257945 ( CompletableFuture , getExec ) "}, {"code": "private boolean toState ( LifecycleState newState ) { \n\tLifecycleState state ; \n\tsynchronized ( this ) { \n\t\tstate = _state ; \n\t\t_state = newState ; \n\t\t$F9171 ( _lastChangeTime , CurrentTime ) } \n\tif ( _log != null && _log . isLoggable ( _lowLevel ) ) { \n\t\t_log . log ( _lowLevel , newState + NUM00 + _name ) ; \n\t\t} \n\tnotifyListeners ( state , newState ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean initDialog $F72 { \n\t$F156357 ( log ) $F475957 ( gbc , GridBagConstraints ) gbc . weightx = NUM00 ; \n\tgbc . weighty = NUM00 ; \n\tgbc . gridy = m_line ++ ; \n\tgbc . gridx = NUM00 ; \n\tgbc . gridwidth = NUM00 ; \n\tgbc . insets = nullInset ; \n\t$F45961 ( gbc , GridBagConstraints ) centerPanel . add ( Box . createVerticalStrut ( NUM00 ) , gbc ) ; \n\tMClient client = MClient . get ( Env . getCtx ( ) ) ; \n\tString ASPFilter = NUM00 ; \n\tif ( client . isUseASP ( ) ) ASPFilter = $F40 + client . getAD_Client_ID ( ) + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + client . getAD_Client_ID ( ) + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + client . getAD_Client_ID ( ) + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 ; \n\tString sql = null ; \n\tif ( Env . isBaseLanguage ( $F9205 ( Env ) ) ) sql = $F34354 + NUM00 + NUM00 + ASPFilter + NUM00 ; \n\telse sql = $F34354 + NUM00 + NUM00 + NUM00 + Env . getAD_Language ( Env . getCtx ( ) ) + NUM00 + NUM00 + ASPFilter + NUM00 ; \n\tboolean hasFields = _BOOL ; \n\ttry { \n\t\t$F46 ( pstmt , DB , sql ) pstmt . setInt ( NUM00 , m_processInfo . getAD_Process_ID ( ) ) ; \n\t\t$F49 ( rs , pstmt ) while $F1682 ( rs ) { \n\t\t\thasFields = _BOOL ; \n\t\t\tcreateField ( rs ) ; \n\t\t\t} \n\t\t$F59 ( rs ) $F59 ( pstmt ) } \n\t$F64 ( log , Level , sql , e ) if ( $F15255 ( m_mFields , m_mFields2 ) || $F15255 ( m_mFields , m_vEditors ) || $F15255 ( m_mFields2 , m_vEditors2 ) ) $F81302 ( log , Level ) if ( hasFields ) { \n\t\tgbc . gridy = m_line ++ ; \n\t\tcenterPanel . add ( Box . createVerticalStrut ( NUM00 ) , gbc ) ; \n\t\tgbc . gridx = NUM00 ; \n\t\tcenterPanel . add ( Box . createHorizontalStrut ( NUM00 ) , gbc ) ; \n\t\tAEnv . positionCenterWindow ( m_frame , this ) ; \n\t\t} \n\telse dispose ( ) ; \n\treturn hasFields ; \n\t} \n"}, {"code": "$F1 protected String dateToString ( DateTimeData date ) { \n\t$F75240 ( message ) $F84 ( message ) $F84 ( message ) append ( message , date . month , NUM00 ) ; \n\tappend ( message , ( char ) date . utc , NUM00 ) ; \n\t$F92 ( message ) } \n"}, {"code": "private void addTest ( Test newTest ) { \n\tif ( m_RuleList == null ) { \n\t\tm_RuleList = new ArrayList $F129241 $F72 ; \n\t\t} \n\tm_RuleList . add ( newTest ) ; \n\t} \n"}, {"code": "public double nextDouble ( double alpha , double lambda ) { \n\tdouble a = alpha ; \n\tdouble aa = - NUM00 , aaa = - NUM00 , b = NUM00 , c = NUM00 , d = NUM00 , e , r , s = NUM00 , si = NUM00 , ss = NUM00 , q0 = NUM00 , q1 = NUM00 , q2 = NUM00 , q3 = NUM00 , q4 = NUM00 , q5 = - NUM00 , q6 = NUM00 , q7 = NUM00 , q8 = - NUM00 , q9 = NUM00 , a1 = NUM00 , a2 = - NUM00 , a3 = NUM00 , a4 = - NUM00 , a5 = NUM00 , a6 = - NUM00 , a7 = NUM00 , a8 = - NUM00 , a9 = NUM00 , e1 = NUM00 , e2 = NUM00 , e3 = NUM00 , e4 = NUM00 , e5 = NUM00 , e6 = NUM00 , e7 = NUM00 ; \n\tdouble gds , p , q , t , sign_u , u , v , w , x ; \n\tdouble v1 , v2 , v12 ; \n\t$F61934 ( a ) if ( lambda <= NUM00 ) new IllegalArgumentException $F72 ; \n\tif ( a < NUM00 ) { \n\t\tb = NUM00 + NUM00 * a ; \n\t\tfor ( $F589 ) { \n\t\t\tp = b * randomGenerator . raw ( ) ; \n\t\t\tif ( p <= NUM00 ) { \n\t\t\t\tgds = Math . exp ( Math . log ( p ) / a ) ; \n\t\t\t\tif ( Math . log ( randomGenerator . raw ( ) ) <= - gds ) return ( gds / lambda ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tgds = - Math . log ( ( b - p ) / a ) ; \n\t\t\t\tif ( Math . log ( randomGenerator . raw ( ) ) <= ( $F207655 ( a , Math , gds ) ) ) return ( gds / lambda ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( a != aa ) { \n\t\t\taa = a ; \n\t\t\tss = a - NUM00 ; \n\t\t\ts = Math . sqrt ( ss ) ; \n\t\t\td = NUM00 - NUM00 * s ; \n\t\t\t} \n\t\tdo { \n\t\t\t$F217616 ( v1 , randomGenerator ) $F217616 ( v2 , randomGenerator ) v12 = v1 * v1 + v2 * v2 ; \n\t\t\t} \n\t\twhile ( v12 > NUM00 ) ; \n\t\tt = v1 * Math . sqrt ( $F130364 ( Math , v12 ) / v12 ) ; \n\t\tx = s + NUM00 * t ; \n\t\tgds = x * x ; \n\t\tif ( t >= NUM00 ) return ( gds / lambda ) ; \n\t\t$F76340 ( u , randomGenerator ) if ( d * u <= t * t * t ) return ( gds / lambda ) ; \n\t\tif ( a != aaa ) { \n\t\t\taaa = a ; \n\t\t\tr = NUM00 / a ; \n\t\t\tq0 = ( ( ( ( ( $F146438 ( q9 , r , q8 , q7 , q6 ) * r + q5 ) * r + q4 ) * r + q3 ) * r + q2 ) * r + q1 ) * r ; \n\t\t\tif ( a > NUM00 ) { \n\t\t\t\tif ( a > NUM00 ) { \n\t\t\t\t\tb = NUM00 ; \n\t\t\t\t\tsi = NUM00 ; \n\t\t\t\t\tc = NUM00 / s ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tb = NUM00 + NUM00 * ss ; \n\t\t\t\t\tsi = NUM00 / s + NUM00 ; \n\t\t\t\t\tc = NUM00 / s + NUM00 ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tb = NUM00 + s - NUM00 * ss ; \n\t\t\t\tsi = NUM00 ; \n\t\t\t\tc = NUM00 / s - NUM00 + NUM00 * s ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( x > NUM00 ) { \n\t\t\tv = t / ( s + s ) ; \n\t\t\tif $F33322 ( Math , v ) { \n\t\t\t\tq = q0 - s * t + NUM00 * t * t + ( ss + ss ) * Math . log ( NUM00 + v ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tq = q0 + NUM00 * t * t * ( ( ( ( ( $F146438 ( a9 , v , a8 , a7 , a6 ) * v + a5 ) * v + a4 ) * v + a3 ) * v + a2 ) * v + a1 ) * v ; \n\t\t\t\t} \n\t\t\tif ( Math . log ( NUM00 - u ) <= q ) return ( gds / lambda ) ; \n\t\t\t} \n\t\tfor ( $F589 ) { \n\t\t\tdo { \n\t\t\t\te = - Math . log ( randomGenerator . raw ( ) ) ; \n\t\t\t\t$F76340 ( u , randomGenerator ) u = u + u - NUM00 ; \n\t\t\t\tsign_u = $F215903 ( u ) ; \n\t\t\t\tt = b + ( e * si ) * sign_u ; \n\t\t\t\t} \n\t\t\twhile ( t <= - NUM00 ) ; \n\t\t\tv = t / ( s + s ) ; \n\t\t\tif $F33322 ( Math , v ) { \n\t\t\t\tq = q0 - s * t + NUM00 * t * t + ( ss + ss ) * Math . log ( NUM00 + v ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tq = q0 + NUM00 * t * t * ( ( ( ( ( $F146438 ( a9 , v , a8 , a7 , a6 ) * v + a5 ) * v + a4 ) * v + a3 ) * v + a2 ) * v + a1 ) * v ; \n\t\t\t\t} \n\t\t\tif ( q <= NUM00 ) $F598 if ( q > NUM00 ) { \n\t\t\t\tw = Math . exp ( q ) - NUM00 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tw = ( ( ( $F146438 ( e7 , q , e6 , e5 , e4 ) * q + e3 ) * q + e2 ) * q + e1 ) * q ; \n\t\t\t\t} \n\t\t\tif ( c * u * sign_u <= w * Math . exp ( e - NUM00 * t * t ) ) { \n\t\t\t\tx = s + NUM00 * t ; \n\t\t\t\treturn ( x * x / lambda ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void swap ( int i , int j ) { \n\tx . assertTrue ( i < list . size ( ) ) ; \n\tx . assertTrue ( j < list . size ( ) ) ; \n\tlist . set ( i , list . set ( j , list . get ( i ) ) ) ; \n\t} \n"}, {"code": "private $F131866 buildIPTParameters ( Ipt ipt , String organisationKey ) { \n\t$F203157 ( data ) if ( ipt != null && organisationKey != null ) { \n\t\tdata . add ( new BasicNameValuePair ( NUM00 , StringUtils . trimToEmpty ( organisationKey ) ) ) ; \n\t\tdata . add ( new BasicNameValuePair ( NUM00 , StringUtils . trimToEmpty ( ipt . getName ( ) ) ) ) ; \n\t\tdata . add ( new BasicNameValuePair ( NUM00 , StringUtils . trimToEmpty ( ipt . getDescription ( ) ) ) ) ; \n\t\tdata . add ( new BasicNameValuePair ( NUM00 , StringUtils . trimToEmpty ( ipt . getPrimaryContactType ( ) ) ) ) ; \n\t\tdata . add ( new BasicNameValuePair ( NUM00 , StringUtils . trimToEmpty ( ipt . getPrimaryContactName ( ) ) ) ) ; \n\t\tdata . add ( new BasicNameValuePair ( NUM00 , StringUtils . trimToEmpty ( ipt . getPrimaryContactEmail ( ) ) ) ) ; \n\t\t$F50132 ( data , SERVICE_TYPE_RSS ) data . add ( new BasicNameValuePair $F59470 ( getRssFeedURL ) ) ; \n\t\t} \n\telse $F981 ( log ) return data ; \n\t} \n"}, {"code": "public static < T , U extends Closeable > T withCloseable ( U self , @ ClosureParams ( value = FirstParam . class ) $F158697 action ) throws IOException { \n\ttry { \n\t\tT result = action . call ( self ) ; \n\t\tCloseable temp = self ; \n\t\tself = null ; \n\t\t$F59 ( temp ) return result ; \n\t\t} \n\tfinally { \n\t\tDefaultGroovyMethodsSupport . closeWithWarning ( self ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isMatch ( String actualString , LinkedList patterns , char wildCard ) { \n\tboolean matched = _BOOL ; \n\tfor ( ListIterator iter = patterns . listIterator ( NUM00 ) ; \n\titer . hasNext ( ) ; \n\t) { \n\t\tif ( isMatch ( actualString , $F2775 ( iter ) , wildCard ) ) $F3468 ( matched , _BOOL ) } \n\treturn matched ; \n\t} \n"}, {"code": "public synchronized void addServer ( ServerLocation location , $F806 groups , ServerLoad initialLoad , long loadPollInterval ) { \n\tserverGroupMap . put ( location , groups ) ; \n\tLoadHolder connectionLoad = new LoadHolder ( location , initialLoad . getConnectionLoad ( ) , initialLoad . getLoadPerConnection ( ) , loadPollInterval ) ; \n\taddGroups ( connectionLoadMap , groups , connectionLoad ) ; \n\tLoadHolder queueLoad = new LoadHolder ( location , initialLoad . getSubscriptionConnectionLoad ( ) , initialLoad . getLoadPerSubscriptionConnection ( ) , loadPollInterval ) ; \n\taddGroups ( queueLoadMap , groups , queueLoad ) ; \n\tupdateLoad ( location , initialLoad ) ; \n\t} \n"}, {"code": "public void addLeaf ( CatalogTreeLeaf leaf ) $F207 ( _leaves , leaf ) "}, {"code": "private static String stampToString ( long tstamp , String formatMask ) { \n\t$F20818 ( sb ) Formatter fmt = new Formatter ( sb , Locale . US ) ; \n\t$F4120 ( pieces , NUMIDX ) ComponentTime . unpackBits ( tstamp , pieces ) ; \n\tfmt . format ( formatMask , pieces [ YIDX ] , pieces [ MIDX ] , pieces [ DIDX ] , pieces [ HIDX ] , pieces [ IIDX ] , pieces [ SIDX ] , pieces [ UIDX ] ) ; \n\t$F59 ( fmt ) $F27059 ( sb ) } \n"}, {"code": "public HttpRequest contentLength ( final String value ) { \n\treturn contentLength ( Integer . parseInt ( value ) ) ; \n\t} \n"}, {"code": "public boolean draw ( Canvas canvas ) { \n\tupdate ( ) ; \n\tfinal float centerX = mBounds . centerX ( ) ; \n\tfinal float centerY = mBounds . height ( ) - mRadius ; \n\tcanvas . scale ( NUM00 , Math . min ( mGlowScaleY , NUM00 ) * mBaseGlowScale , centerX , NUM00 ) ; \n\tfinal float displacement = Math . max ( $F150757 ( Math , mDisplacement ) ) - NUM00 ; \n\tfloat translateX = mBounds . width ( ) * displacement / NUM00 ; \n\tmPaint . setAlpha ( $F11263 ( mGlowAlpha ) ) ; \n\tcanvas . drawCircle ( centerX + translateX , centerY , mRadius , mPaint ) ; \n\tboolean oneLastFrame = _BOOL ; \n\tif ( mState == STATE_RECEDE && mGlowScaleY == NUM00 ) { \n\t\tmState = STATE_IDLE ; \n\t\toneLastFrame = _BOOL ; \n\t\t} \n\treturn mState != STATE_IDLE || oneLastFrame ; \n\t} \n"}, {"code": "public VNXeCommandJob modifyLunAsync ( LunModifyParam param , String resourceId ) { \n\t$F7542 ( urlBld , URL_RESOURCE ) urlBld . append ( resourceId ) ; \n\turlBld . append ( URL_LUN_MODIFY_ACTION ) ; \n\t$F6947 ( _url , urlBld ) return postRequestAsync ( param ) ; \n\t} \n"}, {"code": "public String replace ( CharSequence target , CharSequence replacement ) { \n\t$F896 ( target ) $F896 ( replacement ) $F1822 ( ts , target ) int index = indexOf ( ts , NUM00 ) ; \n\t$F101463 ( index , this ) $F1822 ( rs , replacement ) $F7542 ( buffer , count ) $F1749 ( tl , target ) int tail = NUM00 ; \n\tdo { \n\t\tbuffer . append ( value , offset + tail , index - tail ) ; \n\t\tbuffer . append ( rs ) ; \n\t\ttail = index + tl ; \n\t\t} \n\twhile ( ( index = indexOf ( ts , tail ) ) != - NUM00 ) ; \n\tbuffer . append ( value , offset + tail , count - tail ) ; \n\t$F92 ( buffer ) } \n"}, {"code": "$F137271 ( close , deleteContents , directory ) "}, {"code": "public boolean similarTo ( Object o ) { \n\t$F1933 ( o , _BOOL ) if ( ! ( o instanceof SemanticConcept ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tSemanticConcept otherConcept = ( SemanticConcept ) o ; \n\t$F87074 synset_intersection = new $F87074 ( this . synsets ) ; \n\tsynset_intersection . retainAll ( otherConcept . synsets ) ; \n\t$F77773 ( synset_intersection , _BOOL ) $F2690 concept_intersection = new $F2690 ( this . concepts ) ; \n\tconcept_intersection . retainAll ( otherConcept . concepts ) ; \n\t$F3386 ( concept_intersection ) } \n"}, {"code": "public void jGoogleAnalyticsTracker $F360 ( eventType , version , trackerId ) { \n\tfinal JGoogleAnalyticsTracker tracker = new JGoogleAnalyticsTracker ( NUM00 , version , trackerId ) ; \n\tfinal FocusPoint focusPoint = new FocusPoint ( eventType . toLowerCase ( ) ) ; \n\ttracker . trackAsynchronously ( focusPoint ) ; \n\t} \n"}, {"code": "protected final Tuple addInternal ( Tuple t ) { \n\tif $F9793 ( m_tuples , t ) { \n\t\treturn t ; \n\t\t} \n\telse $F1337 } \n"}, {"code": "public void put ( Song song ) $F2202 ( mSongs , song ) "}, {"code": "$F1113 public PsiQuery childrenNamed ( $F1113 final Class < ? extends PsiNamedElement > clazz , $F1113 final String name ) { \n\tfinal List $F265759 result = new ArrayList $F265759 $F72 ; \n\tfor ( final PsiElement element : myPsiElements ) { \n\t\tfor ( final PsiNamedElement child : PsiTreeUtil . findChildrenOfType ( element , clazz ) ) { \n\t\t\tif $F3175 ( name , child ) $F207 ( result , child ) } \n\t\t} \n\treturn new PsiQuery ( result . toArray ( new PsiElement $F2313 ( result ) ) ) ; \n\t} \n"}, {"code": "private void emitMapPut $F6406 ( method , fieldName , builder ) { \n\t$F84 ( builder ) $F6407 ( builder , getMapPutterName , fieldName ) $F84 ( builder ) builder . append ( getTypeArgumentImplName ( ( ParameterizedType ) method . getGenericReturnType ( ) , NUM00 ) ) ; \n\t$F84 ( builder ) $F6407 ( builder , getEnsureName , fieldName ) $F84 ( builder ) builder . append ( fieldName ) ; \n\t$F84 ( builder ) $F84 ( builder ) } \n"}, {"code": "$F1 public boolean equals ( Object o ) { \n\treturn $F168407 ( o , hashCode ) ; \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\tif ( getUserObject ( ) instanceof TvShow ) { \n\t\tTvShow tvShow = ( TvShow ) getUserObject ( ) ; \n\t\treturn tvShow . getTitle ( ) ; \n\t\t} \n\t$F92 ( super ) } \n"}, {"code": "private $F5 parseJson ( String text ) { \n\ttext = text . substring ( text . indexOf ( NUM00 ) + SIZE_OF_EVENTS , text . indexOf ( NUM00 ) ) ; \n\t$F8728 ( events ) $F4975 ( text , events ) int startIndex = NUM00 , endIndex = NUM00 ; \n\twhile ( endIndex != - NUM00 ) { \n\t\tendIndex = text . indexOf ( NUM00 , startIndex + DELIMITER_SIZE ) ; \n\t\tString eventText = ( endIndex == - NUM00 ? text . substring ( startIndex ) : text . substring ( startIndex , endIndex ) ) ; \n\t\t$F26605 ( pattern , Pattern ) $F275 ( matcher , pattern , eventText ) eventText = matcher . replaceAll ( NUM00 ) ; \n\t\tpattern = Pattern . compile ( NUM00 ) ; \n\t\tmatcher = pattern . matcher ( eventText ) ; \n\t\tif $F281 ( matcher ) { \n\t\t\teventText = matcher . replaceFirst ( matcher . group ( NUM00 ) + NUM00 ) ; \n\t\t\t} \n\t\teventText = NUM00 + eventText ; \n\t\tstartIndex = endIndex + NUM00 ; \n\t\tevents . add ( eventText ) ; \n\t\t} \n\tCollections . reverse ( events ) ; \n\treturn events ; \n\t} \n"}, {"code": "$F1 public void removeTableModelListener ( TableModelListener l ) $F106 ( m_Listeners , l ) "}, {"code": "public StrBuilder replace $F120580 ( startIndex , endIndex , replaceStr ) { \n\tendIndex = validateRange ( startIndex , endIndex ) ; \n\t$F63276 ( insertLen , replaceStr ) replaceImpl ( startIndex , endIndex , endIndex - startIndex , replaceStr , insertLen ) ; \n\treturn this ; \n\t} \n"}, {"code": "public static void addPermissionRecursive ( Path path , PosixFilePermission permission ) throws IOException { \n\tchangePermissionsRecursive ( path , PermissionChange . ADD , Collections . singleton ( permission ) ) ; \n\t} \n"}, {"code": "private void runTimeoutTask $F72 { \n\twhile ( isActive ( ) ) { \n\t\treapTimeouts ( ) ; \n\t\ttry $F7595 ( Thread , _timeoutReapInterval ) $F3957 } \n\t} \n"}, {"code": "public IDevice learnEntity ( long macAddress , Short vlan , Integer ipv4Address , Long switchDPID , Integer switchPort , boolean processUpdates ) { \n\tList < IDeviceListener > listeners = deviceListeners . getOrderedListeners ( ) ; \n\tif ( ! processUpdates ) { \n\t\tdeviceListeners . clearListeners ( ) ; \n\t\t} \n\tVlanVid v ; \n\tIPv4Address i ; \n\tDatapathId d ; \n\tOFPort p ; \n\tif ( vlan != null && vlan . shortValue ( ) <= NUM00 ) vlan = null ; \n\tif ( ipv4Address != null && ipv4Address == NUM00 ) ipv4Address = null ; \n\tif ( vlan == null ) { \n\t\tv = VlanVid . ofVlan ( - NUM00 ) ; \n\t\t} \n\telse { \n\t\tv = VlanVid . ofVlan ( vlan ) ; \n\t\t} \n\tif ( ipv4Address == null ) { \n\t\ti = IPv4Address . NONE ; \n\t\t} \n\telse { \n\t\ti = IPv4Address . of ( ipv4Address ) ; \n\t\t} \n\tif ( switchDPID == null ) { \n\t\td = DatapathId . of ( NUM00 ) ; \n\t\t} \n\telse { \n\t\td = DatapathId . of ( switchDPID . longValue ( ) ) ; \n\t\t} \n\tif ( switchPort == null ) $F429599 ( p , OFPort ) else { \n\t\tp = OFPort . of ( switchPort ) ; \n\t\t} \n\tIDevice res = learnDeviceByEntity ( new Entity ( MacAddress . of ( macAddress ) , v , i , d , p , $F4094 ) ) ; \n\tif ( listeners != null ) { \n\t\tfor ( IDeviceListener listener : listeners ) { \n\t\t\tdeviceListeners . addListener ( NUM00 , listener ) ; \n\t\t\t} \n\t\t} \n\treturn res ; \n\t} \n"}, {"code": "public static boolean isValidTypeSignature ( String sig , boolean allowVoid ) { \n\t$F1749 ( len , sig ) return checkTypeSignature ( sig , NUM00 , len , allowVoid ) == len ; \n\t} \n"}, {"code": "public void testCase19 $F72 { \n\t$F221347 $F221350 int aSign = NUM00 ; \n\tint bSign = - NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F221355 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public static boolean hasVisibleChildren ( ActionGroup group , PresentationFactory factory , ActionManager actionManager , PerspectiveManager perspectiveManager ) { \n\tActionEvent event = new ActionEvent ( factory . getPresentation ( group ) , actionManager , perspectiveManager ) ; \n\tfor ( Action anAction : group . getChildren ( event ) ) { \n\t\tif ( anAction == null ) { \n\t\t\tLog . error ( Utils . class , NUM00 + group + NUM00 + factory . getPresentation ( group ) ) ; \n\t\t\t$F598 } \n\t\tif ( anAction instanceof Separator ) $F1448 final Presentation presentation = factory . getPresentation ( anAction ) ; \n\t\tanAction . update ( new ActionEvent ( presentation , actionManager , perspectiveManager ) ) ; \n\t\tif ( anAction instanceof ActionGroup ) { \n\t\t\tActionGroup childGroup = ( ActionGroup ) anAction ; \n\t\t\tif ( childGroup . isPopup ( ) ) { \n\t\t\t\tif ( $F181253 ( presentation ) ) $F1448 } \n\t\t\tif ( hasVisibleChildren ( childGroup , factory , actionManager , perspectiveManager ) ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if $F201893 ( presentation ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private static void checkArgReferences ( String typeSnippet , int numberOfArgs ) { \n\t$F1150 ( argRefMatcher , ARG_REF_PATTERN , typeSnippet ) while $F281 ( argRefMatcher ) { \n\t\tint index = Integer . parseInt ( argRefMatcher . group ( NUM00 ) , NUM00 ) - NUM00 ; \n\t\tPreconditions . checkArgument ( index >= NUM00 , NUM00 , argRefMatcher . group ( NUM00 ) ) ; \n\t\tPreconditions . checkArgument ( index < numberOfArgs , NUM00 , argRefMatcher . group ( NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void randomize $F72 $F9099 ( randomizeIncomingWeights , normalizeIncomingWeights ) "}, {"code": "public static void saveAsImage ( int x , int y , int width , int height , String path , CompressFormat compressFormat , int quality ) throws FileNotFoundException { \n\tBitmap bmp = getPixelsFromBuffer ( x , y , width , height ) ; \n\ttry { \n\t\t$F1705 ( file , path ) try $F88728 ( file ) $F12241 ( e1 ) $F4649 ( fos , file ) bmp . compress ( compressFormat , quality , fos ) ; \n\t\ttry $F29882 ( fos ) $F12241 ( e ) $F88744 ( fos , e ) } \n\tcatch ( FileNotFoundException e ) { \n\t\tthrow ( e ) ; \n\t\t} \n\t} \n"}, {"code": "private boolean isFileValid ( File file , String methodName ) { \n\tif ( file == null ) { \n\t\tLog . printConcatLine ( name , NUM00 , methodName , NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t$F20605 ( fileName , file ) if $F6036 ( fileName ) { \n\t\tLog . printConcatLine ( name , NUM00 + methodName , NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void removeSrcClass ( SootClass clz ) { \n\t$F139889 ( srcClasses , clz ) } \n"}, {"code": "private void updateRange ( double value ) $F19411 ( mMinValue , Math , value , mMaxValue ) "}, {"code": "JSONStringer close ( Scope empty , Scope nonempty , String closeBracket ) throws JSONException { \n\tScope context = peek ( ) ; \n\tif ( context != nonempty && context != empty ) $F19954 $F30606 ( stack ) $F83461 ( context , nonempty , newline ) out . append ( closeBracket ) ; \n\treturn this ; \n\t} \n"}, {"code": "public void append $F97 ( bytes ) { \n\t$F46502 ( append , bytes ) } \n"}, {"code": "public static boolean enoughSpaceOnPhone ( long updateSize ) { \n\treturn getRealSizeOnPhone ( ) > updateSize ; \n\t} \n"}, {"code": "public void cancelButtonActionPerformed $F72 { \n\teditMode = _BOOL ; \n\tcurNode = null ; \n\taddButton . setVisible ( _BOOL ) ; \n\teditButton . setVisible ( _BOOL ) ; \n\tdeleteButton . setVisible ( _BOOL ) ; \n\tdoneButton . setVisible ( _BOOL ) ; \n\tupdateButton . setVisible ( _BOOL ) ; \n\tcancelButton . setVisible ( _BOOL ) ; \n\tnodeAddrField . setVisible ( _BOOL ) ; \n\tnodeAddrStatic . setVisible ( _BOOL ) ; \n\tstatusText1 . setText ( stdStatus1 ) ; \n\tstatusText2 . setText ( stdStatus2 ) ; \n\tstatusText3 . setText ( stdStatus3 ) ; \n\t} \n"}, {"code": "public void addAttribute ( $F128895 attribute , Object value ) { \n\t$F896 ( attribute ) $F27731 ( text ) $F128903 ranges = attributeMap . get ( attribute ) ; \n\tif ( ranges == null ) { \n\t\tranges = new ArrayList $F128902 $F989 ; \n\t\tattributeMap . put ( attribute , ranges ) ; \n\t\t} \n\telse $F9096 ( ranges ) ranges . add ( new Range ( NUM00 , text . length ( ) , value ) ) ; \n\t} \n"}, {"code": "private Object stringToValue ( Object oldValue , String newValue ) throws ReplicatorException { \n\tif ( oldValue instanceof String ) { \n\t\treturn newValue ; \n\t\t} \n\telse if ( oldValue instanceof Integer ) $F62107 ( Integer , newValue ) else if ( oldValue instanceof SerialBlob ) { \n\t\ttry { \n\t\t\treturn DatabaseHelper . getSafeBlob ( newValue . getBytes ( ) ) ; \n\t\t\t} \n\t\tcatch ( SQLException e ) { \n\t\t\tthrow new ReplicatorException ( NUM00 + e , e ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\treturn newValue ; \n\t\t} \n\t} \n"}, {"code": "public void addNodesInDocOrder ( DTMIterator iterator , XPathContext support ) { \n\tif ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , null ) ) ; \n\tint node ; \n\twhile ( DTM . NULL != $F161934 ( node , iterator ) ) { \n\t\taddNodeInDocOrder ( node , support ) ; \n\t\t} \n\t} \n"}, {"code": "public String toZString $F72 { \n\t$F20818 ( buffer ) try { \n\t\tprintZ ( buffer ) ; \n\t\t} \n\t$F7078 ( e ) $F92 ( buffer ) } \n"}, {"code": "public TrieDictionary $F4203 build ( int baseId ) { \n\t$F12490 ( trieBytes , buildTrieBytes , baseId ) TrieDictionary $F4203 r = new TrieDictionary $F4203 ( trieBytes ) ; \n\treturn r ; \n\t} \n"}, {"code": "public void recordState ( DialogueState state , String name ) { \n\tstates . put ( name , state ) ; \n\tif $F2200 ( listModel , name ) { \n\t\tint position = name . contains ( CURRENT ) ? NUM00 : Math . min ( $F31806 ( listModel ) ) ; \n\t\tlistModel . add ( position , name ) ; \n\t\t} \n\t} \n"}, {"code": "public int writeUTF8 ( final CharSequence chars , int off , int len ) { \n\tif ( len > remaining ( ) ) $F19580 ( writeUTF8Slow , chars , off , len ) final Block block = current ; \n\tint limit = block . limit ; \n\tchar ch = NUM00 ; \n\tint octets = NUM00 ; \n\twhile ( len > NUM00 ) { \n\t\tch = chars . charAt ( off ) ; \n\t\t$F66497 ( ch , UTF8_2_OCTET_MIN_VALUE ) block . data [ limit ++ ] = ( byte ) ch ; \n\t\toctets ++ ; \n\t\toff ++ ; \n\t\tlen -- ; \n\t\t} \n\tblock . limit = limit ; \n\tif ( len > NUM00 ) { \n\t\tif ( ch < UTF8_3_OCTET_MIN_VALUE ) { \n\t\t\treturn octets + writeUTF8UpTo2Byte ( chars , off , len ) ; \n\t\t\t} \n\t\tif ( ch >= LOW_SURROGATE_FIRST && ch <= LOW_SURROGATE_LAST ) $F18931 ( ch ) if ( ch >= HIGH_SURROGATE_FIRST && ch <= HIGH_SURROGATE_LAST ) { \n\t\t\treturn octets + writeUTF8Slow ( chars , off , len ) ; \n\t\t\t} \n\t\treturn octets + writeUTF8UpTo3Byte ( chars , off , len ) ; \n\t\t} \n\treturn octets ; \n\t} \n"}, {"code": "public GeoServerWPSClient ( GeoServerConnection connection ) $F6988 ( this , connection ) "}, {"code": "protected ConnectionStateSSLv3 ( SSLSessionImpl session ) { \n\ttry { \n\t\tCipherSuite cipherSuite = session . cipherSuite ; \n\t\tboolean is_exportabe = cipherSuite . isExportable ( ) ; \n\t\thash_size = cipherSuite . getMACLength ( ) ; \n\t\tint key_size = ( is_exportabe ) ? cipherSuite . keyMaterial : cipherSuite . expandedKeyMaterial ; \n\t\tint iv_size = cipherSuite . ivSize ; \n\t\tblock_size = cipherSuite . getBlockSize ( ) ; \n\t\tString algName = cipherSuite . getBulkEncryptionAlgorithm ( ) ; \n\t\tString hashName = cipherSuite . getHashName ( ) ; \n\t\tif ( logger != null ) { \n\t\t\t$F8438 ( logger ) logger . println ( NUM00 + session . getCipherSuite ( ) ) ; \n\t\t\t$F7957 ( logger , algName ) $F7957 ( logger , hashName ) $F7957 ( logger , hash_size ) $F7957 ( logger , block_size ) $F7957 ( logger , iv_size ) $F7957 ( logger , key_size ) } \n\t\t$F56524 ( clientRandom , session ) $F56524 ( serverRandom , session ) $F96 key_block = new byte [ NUM00 * hash_size + NUM00 * key_size + NUM00 * iv_size ] ; \n\t\t$F148496 ( seed , clientRandom , serverRandom ) $F7057 ( System , serverRandom , seed ) $F11244 ( System , clientRandom , seed , serverRandom ) PRF . computePRF_SSLv3 ( key_block , session . master_secret , seed ) ; \n\t\t$F2175 ( client_mac_secret , hash_size ) $F2175 ( server_mac_secret , hash_size ) $F2175 ( client_key , key_size ) $F2175 ( server_key , key_size ) boolean is_client = ! session . isServer ; \n\t\t$F135 ( System , key_block , client_mac_secret , hash_size ) $F30985 ( System , key_block , hash_size , server_mac_secret ) System . arraycopy ( key_block , NUM00 * hash_size , client_key , NUM00 , key_size ) ; \n\t\tSystem . arraycopy ( key_block , NUM00 * hash_size + key_size , server_key , NUM00 , key_size ) ; \n\t\tIvParameterSpec clientIV = null ; \n\t\tIvParameterSpec serverIV = null ; \n\t\tif ( is_exportabe ) { \n\t\t\tif ( logger != null ) $F12204 ( logger ) $F5348 ( md5 , MessageDigest ) md5 . update ( client_key ) ; \n\t\t\tmd5 . update ( clientRandom ) ; \n\t\t\tmd5 . update ( serverRandom ) ; \n\t\t\t$F14611 ( client_key , md5 ) md5 . update ( server_key ) ; \n\t\t\tmd5 . update ( serverRandom ) ; \n\t\t\tmd5 . update ( clientRandom ) ; \n\t\t\t$F14611 ( server_key , md5 ) key_size = cipherSuite . expandedKeyMaterial ; \n\t\t\tif ( block_size != NUM00 ) { \n\t\t\t\tmd5 . update ( clientRandom ) ; \n\t\t\t\tmd5 . update ( serverRandom ) ; \n\t\t\t\tclientIV = new IvParameterSpec ( md5 . digest ( ) , NUM00 , iv_size ) ; \n\t\t\t\tmd5 . update ( serverRandom ) ; \n\t\t\t\tmd5 . update ( clientRandom ) ; \n\t\t\t\tserverIV = new IvParameterSpec ( md5 . digest ( ) , NUM00 , iv_size ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( block_size != NUM00 ) { \n\t\t\tclientIV = new IvParameterSpec ( key_block , NUM00 * hash_size + NUM00 * key_size , iv_size ) ; \n\t\t\tserverIV = new IvParameterSpec ( key_block , NUM00 * hash_size + NUM00 * key_size + iv_size , iv_size ) ; \n\t\t\t} \n\t\tif ( logger != null ) { \n\t\t\t$F7957 ( logger , is_exportabe ) $F8438 ( logger ) logger . print ( session . master_secret ) ; \n\t\t\t$F8438 ( logger ) logger . print ( clientRandom ) ; \n\t\t\t$F8438 ( logger ) logger . print ( serverRandom ) ; \n\t\t\t$F8438 ( logger ) logger . print ( client_mac_secret ) ; \n\t\t\t$F8438 ( logger ) logger . print ( server_mac_secret ) ; \n\t\t\t$F8438 ( logger ) logger . print ( client_key , NUM00 , key_size ) ; \n\t\t\t$F8438 ( logger ) logger . print ( server_key , NUM00 , key_size ) ; \n\t\t\tif ( clientIV != null ) { \n\t\t\t\t$F8438 ( logger ) logger . print ( clientIV . getIV ( ) ) ; \n\t\t\t\t$F8438 ( logger ) logger . print ( serverIV . getIV ( ) ) ; \n\t\t\t\t} \n\t\t\telse $F12204 ( logger ) } \n\t\tif ( algName == null ) { \n\t\t\t$F83645 ( encCipher ) ; \n\t\t\t$F83645 ( decCipher ) ; \n\t\t\t} \n\t\telse { \n\t\t\tencCipher = Cipher . getInstance ( algName ) ; \n\t\t\tdecCipher = Cipher . getInstance ( algName ) ; \n\t\t\tif ( is_client ) { \n\t\t\t\tencCipher . init ( Cipher . ENCRYPT_MODE , new SecretKeySpec ( client_key , NUM00 , key_size , algName ) , clientIV ) ; \n\t\t\t\tdecCipher . init ( Cipher . DECRYPT_MODE , new SecretKeySpec ( server_key , NUM00 , key_size , algName ) , serverIV ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tencCipher . init ( Cipher . ENCRYPT_MODE , new SecretKeySpec ( server_key , NUM00 , key_size , algName ) , serverIV ) ; \n\t\t\t\tdecCipher . init ( Cipher . DECRYPT_MODE , new SecretKeySpec ( client_key , NUM00 , key_size , algName ) , clientIV ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tmessageDigest = MessageDigest . getInstance ( hashName ) ; \n\t\tif ( is_client ) { \n\t\t\tmac_write_secret = client_mac_secret ; \n\t\t\tmac_read_secret = server_mac_secret ; \n\t\t\t} \n\t\telse { \n\t\t\tmac_write_secret = server_mac_secret ; \n\t\t\tmac_read_secret = client_mac_secret ; \n\t\t\t} \n\t\tif $F3057 ( hashName ) { \n\t\t\tpad_1 = SSLv3Constants . MD5pad1 ; \n\t\t\tpad_2 = SSLv3Constants . MD5pad2 ; \n\t\t\t} \n\t\telse { \n\t\t\tpad_1 = SSLv3Constants . SHApad1 ; \n\t\t\tpad_2 = SSLv3Constants . SHApad2 ; \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F301 ( e ) throw new AlertException ( AlertProtocol . INTERNAL_ERROR , new SSLProtocolException $F580 ) ; \n\t\t} \n\t} \n"}, {"code": "static boolean verifyZipFile ( File file ) { \n\ttry { \n\t\t$F170751 ( zipFile , file ) try $F172023 ( zipFile , _BOOL ) catch ( IOException e ) { \n\t\t\tLog . w ( $F71440 ( TAG , file ) ) ; \n\t\t\t} \n\t\t} \n\tcatch ( ZipException ex ) { \n\t\tLog . w ( TAG , $F62869 ( file ) , ex ) ; \n\t\t} \n\tcatch ( IOException ex ) { \n\t\tLog . w ( TAG , $F4929 ( file ) , ex ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "long cleanup ( long now ) { \n\tint inUseConnectionCount = NUM00 ; \n\tint idleConnectionCount = NUM00 ; \n\tRealConnection longestIdleConnection = null ; \n\tlong longestIdleDurationNs = Long . MIN_VALUE ; \n\tsynchronized ( this ) { \n\t\tfor ( Iterator < RealConnection > i = connections . iterator ( ) ; \n\t\ti . hasNext ( ) ; \n\t\t) { \n\t\t\tRealConnection connection = i . next ( ) ; \n\t\t\tif ( pruneAndGetAllocationCount ( connection , now ) > NUM00 ) $F118993 ( inUseConnectionCount ) idleConnectionCount ++ ; \n\t\t\tlong idleDurationNs = now - connection . idleAtNanos ; \n\t\t\t$F8399 ( idleDurationNs , longestIdleDurationNs , longestIdleConnection , connection ) } \n\t\tif ( longestIdleDurationNs >= this . keepAliveDurationNs || idleConnectionCount > this . maxIdleConnections ) $F106 ( connections , longestIdleConnection ) else if ( idleConnectionCount > NUM00 ) { \n\t\t\treturn keepAliveDurationNs - longestIdleDurationNs ; \n\t\t\t} \n\t\telse if ( inUseConnectionCount > NUM00 ) { \n\t\t\treturn keepAliveDurationNs ; \n\t\t\t} \n\t\telse $F340596 ( cleanupRunning , _BOOL ) } \n\tcloseQuietly ( longestIdleConnection . socket ( ) ) ; \n\t$F1082 } \n"}, {"code": "public StateInfo $F72 $F845 "}, {"code": "public boolean compare ( Object expected , Object current ) { \n\tif ( current != null ) { \n\t\tequal = current . equals ( expected ) ; \n\t\t} \n\telse if ( expected != null ) { \n\t\tequal = expected . equals ( NUM00 ) ; \n\t\t} \n\treturn equal ; \n\t} \n"}, {"code": "$F33495 ( seedBuffer , seedBufferOut , System , Process , BUILD_FINGERPRINT_AND_DEVICE_SERIAL , e ) "}, {"code": "boolean needToCheckExclude $F72 { \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static $F96 decode ( String hexa ) throws CoderException { \n\tif ( hexa == null ) { \n\t\tthrow new CoderException $F580 ; \n\t\t} \n\tif ( ( $F47012 ( hexa ) ) != NUM00 ) { \n\t\tthrow new CoderException $F580 ; \n\t\t} \n\t$F203657 ( tamArray , hexa ) $F2175 ( retorno , tamArray ) for ( $F119 ( i , tamArray ) ) { \n\t\tretorno [ i ] = hexToByte ( hexa . substring ( i * NUM00 , i * NUM00 + NUM00 ) ) ; \n\t\t} \n\treturn retorno ; \n\t} \n"}, {"code": "private List < UserNamespaceAuthorization > createUserNamespaceAuthorizationsFromEntities ( List < UserNamespaceAuthorizationEntity > userNamespaceAuthorizationEntities ) { \n\tList < UserNamespaceAuthorization > $F204 ( userNamespaceAuthorizations ) ; \n\tfor ( UserNamespaceAuthorizationEntity userNamespaceAuthorizationEntity : userNamespaceAuthorizationEntities ) $F3762 ( userNamespaceAuthorizations , createUserNamespaceAuthorizationFromEntity , userNamespaceAuthorizationEntity ) return userNamespaceAuthorizations ; \n\t} \n"}, {"code": "private void readHeader $F72 throws OpenStegoException { \n\tthis . dataHeader = new DCTDataHeader ( this , this . config ) ; \n\t} \n"}, {"code": "$F1 public synchronized void reset $F72 { \n\tpos = NUM00 ; \n\t} \n"}, {"code": "protected < T extends KeySpec > T engineGetKeySpec ( Key key , $F20474 keySpec ) throws InvalidKeySpecException { \n\tBigInteger p , q , g , x , y ; \n\tif ( key != null ) { \n\t\t$F896 ( keySpec ) if ( key instanceof DSAPrivateKey ) { \n\t\t\tDSAPrivateKey privateKey = ( DSAPrivateKey ) key ; \n\t\t\tif ( keySpec . equals ( DSAPrivateKeySpec . class ) ) { \n\t\t\t\t$F25145 ( x , privateKey ) DSAParams params = privateKey . getParams ( ) ; \n\t\t\t\tp = params . getP ( ) ; \n\t\t\t\tq = params . getQ ( ) ; \n\t\t\t\tg = params . getG ( ) ; \n\t\t\t\treturn ( T ) ( new DSAPrivateKeySpec ( x , p , q , g ) ) ; \n\t\t\t\t} \n\t\t\tif ( keySpec . equals ( PKCS8EncodedKeySpec . class ) ) { \n\t\t\t\treturn ( T ) ( new PKCS8EncodedKeySpec $F4697 ( key ) ) ; \n\t\t\t\t} \n\t\t\t$F109061 } \n\t\tif ( key instanceof DSAPublicKey ) { \n\t\t\tDSAPublicKey publicKey = ( DSAPublicKey ) key ; \n\t\t\tif ( keySpec . equals ( DSAPublicKeySpec . class ) ) { \n\t\t\t\t$F130222 ( y , publicKey ) DSAParams params = publicKey . getParams ( ) ; \n\t\t\t\tp = params . getP ( ) ; \n\t\t\t\tq = params . getQ ( ) ; \n\t\t\t\tg = params . getG ( ) ; \n\t\t\t\treturn ( T ) ( new DSAPublicKeySpec ( y , p , q , g ) ) ; \n\t\t\t\t} \n\t\t\tif ( keySpec . equals ( X509EncodedKeySpec . class ) ) { \n\t\t\t\treturn ( T ) ( new X509EncodedKeySpec $F4697 ( key ) ) ; \n\t\t\t\t} \n\t\t\t$F109061 } \n\t\t} \n\t$F109061 } \n"}, {"code": "protected void drawText ( String text1 , String text2 , int x , int y , Canvas c ) { \n\tif ( textPaint == null ) { \n\t\t$F98511 ( p ) p . setTypeface ( RobotoLightTypeface . getInstance ( context ) ) ; \n\t\tp . setColor ( textColor ) ; \n\t\tp . setTextSize ( NUM00 * pixelDensity ) ; \n\t\tthis . textPaint = p ; \n\t\t} \n\tfloat w = textPaint . measureText ( text1 , NUM00 , text1 . length ( ) ) ; \n\tint offset = ( int ) w / NUM00 ; \n\tc . drawText ( text1 , x - offset , y + ( NUM00 * pixelDensity ) , textPaint ) ; \n\tw = textPaint . measureText ( text2 , NUM00 , text2 . length ( ) ) ; \n\toffset = ( int ) w / NUM00 ; \n\tc . drawText ( text2 , x - offset , y + ( NUM00 * pixelDensity ) , textPaint ) ; \n\t} \n"}, {"code": "public boolean isLessThenOrEqualTo ( Percent Percent ) { \n\tassertDefined ( ) ; \n\tBigDecimal thisValue = notNull ( this ) ; \n\tBigDecimal parameter = notNull ( Percent ) ; \n\treturn $F348512 ( thisValue , parameter ) ; \n\t} \n"}, {"code": "public Object clone $F72 throws CloneNotSupportedException { \n\tPredicatedNodeTest clone = ( PredicatedNodeTest ) super . clone ( ) ; \n\tif ( ( null != this . m_proximityPositions ) && ( this . m_proximityPositions == clone . m_proximityPositions ) ) { \n\t\tclone . m_proximityPositions = new int [ this . m_proximityPositions . length ] ; \n\t\tSystem . arraycopy ( this . m_proximityPositions , NUM00 , clone . m_proximityPositions , NUM00 , this . m_proximityPositions . length ) ; \n\t\t} \n\tif ( clone . m_lpi == this ) clone . m_lpi = ( LocPathIterator ) clone ; \n\treturn clone ; \n\t} \n"}, {"code": "public static boolean pointOutsidePrefSize ( JTable table , int row , int column , Point p ) { \n\tif ( table . convertColumnIndexToModel ( column ) != NUM00 || row == - NUM00 ) { \n\t\treturn _BOOL ; \n\t\t} \n\tTableCellRenderer tcr = table . getCellRenderer ( row , column ) ; \n\tObject value = table . getValueAt ( row , column ) ; \n\tComponent cell = tcr . getTableCellRendererComponent ( table , value , _BOOL , _BOOL , row , column ) ; \n\t$F86864 ( itemSize , cell ) Rectangle cellBounds = table . getCellRect ( row , column , _BOOL ) ; \n\tcellBounds . width = itemSize . width ; \n\tcellBounds . height = itemSize . height ; \n\tassert ( p . x >= cellBounds . x && p . y >= cellBounds . y ) ; \n\treturn p . x > $F6108 ( cellBounds ) || p . y > $F6118 ( cellBounds ) ; \n\t} \n"}, {"code": "public Builder addSourceFolder ( $F4170 File folder ) $F18637 ( foldersToScan , folder , this ) "}, {"code": "public Method suspendSRDFGroupMethod ( final URI systemURI , final RemoteDirectorGroup group , final $F28584 sourceVolumes , final $F28584 targetVolumes ) { \n\treturn $F81871 ( SUSPEND_SRDF_GROUP_METHOD , systemURI , group , sourceVolumes , targetVolumes ) ; \n\t} \n"}, {"code": "private void fieldGoalAtt ( Team offense , Team defense ) { \n\tdouble fgDistRatio = Math . pow ( ( NUM00 - gameYardLine ) / NUM00 , NUM00 ) ; \n\tdouble fgAccRatio = Math . pow ( ( NUM00 - gameYardLine ) / NUM00 , NUM00 ) ; \n\tdouble fgDistChance = ( getHFadv ( ) + offense . getK ( NUM00 ) . ratKickPow - fgDistRatio * NUM00 ) ; \n\tdouble fgAccChance = ( getHFadv ( ) + offense . getK ( NUM00 ) . ratKickAcc - fgAccRatio * NUM00 ) ; \n\tif ( fgDistChance > NUM00 && fgAccChance * Math . random ( ) > NUM00 ) { \n\t\tif ( gamePoss ) { \n\t\t\thomeScore += NUM00 ; \n\t\t\tHomeKStats [ NUM00 ] ++ ; \n\t\t\tHomeKStats [ NUM00 ] ++ ; \n\t\t\t} \n\t\telse { \n\t\t\tawayScore += NUM00 ; \n\t\t\tAwayKStats [ NUM00 ] ++ ; \n\t\t\tAwayKStats [ NUM00 ] ++ ; \n\t\t\t} \n\t\tgameEventLog += getEventPrefix ( ) + offense . abbr + NUM00 + offense . getK ( NUM00 ) . name + NUM00 + ( NUM00 - gameYardLine ) + NUM00 ; \n\t\taddPointsQuarter ( NUM00 ) ; \n\t\toffense . getK ( NUM00 ) . statsFGMade ++ ; \n\t\toffense . getK ( NUM00 ) . statsFGAtt ++ ; \n\t\tif ( ! playingOT ) kickOff ( offense ) ; \n\t\telse resetForOT ( ) ; \n\t\t} \n\telse { \n\t\tgameEventLog += getEventPrefix ( ) + offense . abbr + NUM00 + offense . getK ( NUM00 ) . name + NUM00 + ( NUM00 - gameYardLine ) + NUM00 ; \n\t\toffense . getK ( NUM00 ) . statsFGAtt ++ ; \n\t\tif ( ! playingOT ) { \n\t\t\tgameYardLine = Math . max ( NUM00 - gameYardLine , NUM00 ) ; \n\t\t\tgameDown = NUM00 ; \n\t\t\tgameYardsNeed = NUM00 ; \n\t\t\tif ( gamePoss ) $F41850 ( HomeKStats ) else $F41850 ( AwayKStats ) gamePoss = ! gamePoss ; \n\t\t\t} \n\t\telse resetForOT ( ) ; \n\t\t} \n\tgameTime -= NUM00 ; \n\t} \n"}, {"code": "public static final $F96 unzip $F97 ( in ) throws IOException { \n\tByteArrayOutputStream outStream = new ByteArrayOutputStream ( EXPECTED_COMPRESSION_RATIO * in . length ) ; \n\tGZIPInputStream inStream = new GZIPInputStream $F24702 ( in ) ; \n\t$F2175 ( buf , BUF_SIZE ) while ( _BOOL ) { \n\t\t$F83249 ( size , inStream , buf ) $F137919 ( size ) $F11584 ( outStream , buf , size ) } \n\t$F59 ( outStream ) $F11316 ( outStream ) } \n"}, {"code": "$F1 public double calculateM ( double delta , double epsilon ) { \n\tdouble i = NUM00 ; \n\twhile ( conf ( i , delta ) > epsilon / NUM00 ) $F51403 ( i ) if ( i > NUM00 ) $F218903 ( i ) while ( conf ( i , delta ) > ( epsilon / NUM00 ) ) { \n\t\ti ++ ; \n\t\t} \n\treturn Math . ceil ( i ) ; \n\t} \n"}, {"code": "public static ServerSocket createServerSocket ( int port , InetAddress bindAddress ) throws IOException { \n\tServerSocket socket = null ; \n\tif ( SysProperties . ENABLE_ANONYMOUS_TLS ) $F5795 ( removeAnonFromLegacyAlgorithms ) setKeystore ( ) ; \n\tServerSocketFactory f = SSLServerSocketFactory . getDefault ( ) ; \n\tSSLServerSocket secureSocket ; \n\tif ( bindAddress == null ) { \n\t\tsecureSocket = ( SSLServerSocket ) f . createServerSocket ( port ) ; \n\t\t} \n\telse { \n\t\tsecureSocket = ( SSLServerSocket ) f . createServerSocket ( port , NUM00 , bindAddress ) ; \n\t\t} \n\tsecureSocket . setEnabledProtocols ( disableSSL ( secureSocket . getEnabledProtocols ( ) ) ) ; \n\tif ( SysProperties . ENABLE_ANONYMOUS_TLS ) { \n\t\t$F806 list = enableAnonymous ( secureSocket . getEnabledCipherSuites ( ) , secureSocket . getSupportedCipherSuites ( ) ) ; \n\t\tsecureSocket . setEnabledCipherSuites ( list ) ; \n\t\t} \n\tsocket = secureSocket ; \n\treturn socket ; \n\t} \n"}, {"code": "public void printBytes $F24576 ( data , offset , length ) throws IOException { \n\tint i ; \n\tfor ( ; \n\tlength >= NUM00 ; \n\tlength -= NUM00 ) { \n\t\tint chunk = ( $F528005 ( data , offset ) + $F38343 ( data , offset ) + $F21296 ( data , offset ) ) ; \n\t\tos . write ( base64encode ( chunk > > NUM00 ) ) ; \n\t\tos . write ( base64encode ( chunk > > NUM00 ) ) ; \n\t\tos . write ( base64encode ( chunk > > NUM00 ) ) ; \n\t\t$F160532 ( os , base64encode , chunk ) offset += NUM00 ; \n\t\t} \n\tif ( length == NUM00 ) { \n\t\tint chunk = $F528005 ( data , offset ) + $F21296 ( data , offset ) ; \n\t\tos . write ( base64encode ( chunk > > NUM00 ) ) ; \n\t\tos . write ( base64encode ( chunk > > NUM00 ) ) ; \n\t\t$F160532 ( os , base64encode , chunk ) $F3410 ( os ) } \n\telse if ( length == NUM00 ) { \n\t\tint chunk = data [ offset ] & NUM00 ; \n\t\tos . write ( base64encode ( chunk > > NUM00 ) ) ; \n\t\t$F160532 ( os , base64encode , chunk ) $F3410 ( os ) $F3410 ( os ) } \n\t} \n"}, {"code": "public void deleteVVset ( String nativeId ) throws Exception { \n\t$F973 ( _log ) ClientResponse clientResp = null ; \n\tfinal String path = MessageFormat . format ( URI_DELETE_CG , nativeId ) ; \n\t$F556 ( _log , path ) try { \n\t\tclientResp = delete ( path ) ; \n\t\tif ( clientResp == null ) { \n\t\t\t$F9464 ( _log ) throw new HP3PARException $F580 ; \n\t\t\t} \n\t\telse if ( clientResp . getStatus ( ) != NUM00 ) { \n\t\t\tString errResp = getResponseDetails ( clientResp ) ; \n\t\t\tthrow new HP3PARException ( errResp ) ; \n\t\t\t} \n\t\telse $F22715 ( _log ) } \n\t$F91522 ( e ) finally { \n\t\t$F2727 ( clientResp ) $F973 ( _log ) } \n\t} \n"}, {"code": "public void accept ( final AnnotationVisitor av ) { \n\tif ( av != null ) { \n\t\tif ( values != null ) { \n\t\t\tfor ( $F48125 ( i , values ) ) { \n\t\t\t\t$F123 ( name , values , i ) Object value = values . get ( i + NUM00 ) ; \n\t\t\t\taccept ( av , name , value ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F110334 ( av ) } \n\t} \n"}, {"code": "private int findKeyCommentIndex ( String keyName ) { \n\tfor ( $F2277 ( i , keyValComments ) ) { \n\t\t$F1729 ( t , keyValComments , i ) String targetedKey = NUM00 + keyName + NUM00 ; \n\t\t$F72106 ( t , targetedKey , i ) } \n\t$F15998 ( log , keyName ) $F150 } \n"}, {"code": "public boolean isExpired $F72 { \n\treturn ( cookieExpiryDate != null && cookieExpiryDate . getTime ( ) <= System . currentTimeMillis ( ) ) ; \n\t} \n"}, {"code": "$F141880 ( closeable , rethrown ) "}, {"code": "public static boolean isAddToHomeIntentSupported ( Context context ) { \n\t$F45547 ( pm , context ) Intent i = new Intent ( INSTALL_SHORTCUT ) ; \n\t$F45549 receivers = pm . queryBroadcastReceivers ( i , PackageManager . GET_INTENT_FILTERS ) ; \n\t$F3386 ( receivers ) } \n"}, {"code": "public RoundedIconGenerator ( int iconWidthPx , int iconHeightPx , int cornerRadiusPx , int backgroundColor , float textSizePx ) { \n\tmIconWidthPx = iconWidthPx ; \n\tmIconHeightPx = iconHeightPx ; \n\tmCornerRadiusPx = cornerRadiusPx ; \n\tmBackgroundRect = new RectF ( NUM00 , NUM00 , mIconWidthPx , mIconHeightPx ) ; \n\tmBackgroundPaint = new Paint ( Paint . ANTI_ALIAS_FLAG ) ; \n\tmBackgroundPaint . setColor ( backgroundColor ) ; \n\tmTextPaint = new TextPaint ( Paint . ANTI_ALIAS_FLAG ) ; \n\tmTextPaint . setColor ( Color . WHITE ) ; \n\tmTextPaint . setFakeBoldText ( _BOOL ) ; \n\tmTextPaint . setTextSize ( textSizePx ) ; \n\t$F319 ( textFontMetrics , mTextPaint ) mTextHeight = ( float ) Math . ceil ( textFontMetrics . bottom - textFontMetrics . top ) ; \n\tmTextYOffset = - textFontMetrics . top ; \n\t} \n"}, {"code": "InMemoryEntryStore $F72 { \n\tentries = Maps . newHashMap ( ) ; \n\ttopLevelEntries = Sets . newHashSet ( ) ; \n\t$F44889 ( children , HashMultimap ) } \n"}, {"code": "public void persistConnection ( Connection connection ) throws PersistenceException { \n\tMqttConnectOptions conOpts = connection . getConnectionOptions ( ) ; \n\tMqttMessage lastWill = conOpts . getWillMessage ( ) ; \n\tSQLiteDatabase db = getWritableDatabase ( ) ; \n\t$F20904 ( values ) values . put ( COLUMN_HOST , connection . getHostName ( ) ) ; \n\tvalues . put ( COLUMN_port , connection . getPort ( ) ) ; \n\tvalues . put ( COLUMN_client_ID , connection . getId ( ) ) ; \n\tvalues . put ( COLUMN_ssl , connection . isSSL ( ) ) ; \n\tvalues . put ( COLUMN_KEEP_ALIVE , conOpts . getKeepAliveInterval ( ) ) ; \n\tvalues . put ( COLUMN_TIME_OUT , conOpts . getConnectionTimeout ( ) ) ; \n\tvalues . put ( COLUMN_USER_NAME , conOpts . getUserName ( ) ) ; \n\tvalues . put ( COLUMN_TOPIC , conOpts . getWillDestination ( ) ) ; \n\t$F1469 password = conOpts . getPassword ( ) ; \n\tvalues . put ( COLUMN_CLEAN_SESSION , conOpts . isCleanSession ( ) ? NUM00 : NUM00 ) ; \n\tvalues . put ( COLUMN_PASSWORD , password != null ? String . valueOf ( password ) : null ) ; \n\tvalues . put ( COLUMN_MESSAGE , lastWill != null ? new String ( lastWill . getPayload ( ) ) : null ) ; \n\tvalues . put ( COLUMN_QOS , lastWill != null ? lastWill . getQos ( ) : NUM00 ) ; \n\tif ( lastWill == null ) $F248856 ( values , COLUMN_RETAINED ) else { \n\t\tvalues . put ( COLUMN_RETAINED , lastWill . isRetained ( ) ? NUM00 : NUM00 ) ; \n\t\t} \n\tlong newRowId = db . insert ( TABLE_CONNECTIONS , null , values ) ; \n\t$F59 ( db ) if ( newRowId == - NUM00 ) { \n\t\tthrow new PersistenceException ( NUM00 + connection . handle ( ) ) ; \n\t\t} \n\telse { \n\t\tconnection . assignPersistenceId ( newRowId ) ; \n\t\t} \n\t} \n"}, {"code": "public ClassAnnotator ( $F52326 codebase , Properties props ) { \n\tif ( props != null ) properties . putAll ( props ) ; \n\tsetAnnotationURLs ( codebase ) ; \n\t} \n"}, {"code": "public int next $F72 { \n\treturn mix ( gen . getAndIncrement ( ) ) ; \n\t} \n"}, {"code": "public CholeskyDecomposition ( Matrix Arg ) { \n\t$F3791 ( A , Arg ) $F323738 ( n , Arg ) $F10226 ( L , n ) isspd = ( Arg . getColumnDimension ( ) == n ) ; \n\tfor ( $F119 ( j , n ) ) { \n\t\t$F42658 ( Lrowj , L , j ) double d = NUM00 ; \n\t\tfor ( $F119 ( k , j ) ) { \n\t\t\t$F42658 ( Lrowk , L , k ) double s = NUM00 ; \n\t\t\tfor ( $F119 ( i , k ) ) $F323742 ( s , Lrowk , i , Lrowj ) Lrowj [ k ] = s = ( A [ j ] [ k ] - s ) / L [ k ] [ k ] ; \n\t\t\td = d + s * s ; \n\t\t\tisspd = isspd & ( A [ k ] [ j ] == A [ j ] [ k ] ) ; \n\t\t\t} \n\t\td = A [ j ] [ j ] - d ; \n\t\tisspd = isspd & ( d > NUM00 ) ; \n\t\tL [ j ] [ j ] = Math . sqrt ( Math . max ( d , NUM00 ) ) ; \n\t\tfor ( $F2634 ( k , j , n ) ) $F211213 ( L , j , k ) } \n\t} \n"}, {"code": "public InputStream put ( final URLConnection connection , final boolean flushCacheOnClose ) { \n\tfinal String key = getKey ( connection ) ; \n\t$F1275 ( key ) if ( ! isCacheable ( ( HttpURLConnection ) connection ) ) try { \n\t\tcache . remove ( key ) ; \n\t\t$F1274 } \n\t$F20154 String etag = connection . getHeaderField ( HEADER_ETAG ) ; \n\tif $F6036 ( etag ) $F1274 Editor editor ; \n\ttry { \n\t\teditor = cache . edit ( key ) ; \n\t\t} \n\t$F20154 $F1275 ( editor ) try $F65992 ( editor , ETAG , etag ) catch ( IOException e ) { \n\t\ttry { \n\t\t\t$F29036 ( editor ) } \n\t\t$F20287 $F1274 } \n\tInputStream input ; \n\ttry { \n\t\t$F7981 ( input , connection ) if ( ! ( input instanceof InflaterInputStream ) && ENCODING_GZIP . equals ( connection . getHeaderField ( HEADER_CONTENT_ENCODING ) ) ) input = new GZIPInputStream ( input ) ; \n\t\t} \n\t$F20154 OutputStream output ; \n\ttry { \n\t\toutput = editor . newOutputStream ( BODY ) ; \n\t\t} \n\t$F20154 if ( output != null ) return new CacheStream ( input , output , editor , this , flushCacheOnClose ) ; \n\telse $F1274 } \n"}, {"code": "public static $F806 parseTitle ( String title ) { \n\tString $F44675 = $F4582 ; \n\t$F397 ( title , v ) Pattern p = Pattern . compile ( NUM00 , Pattern . CASE_INSENSITIVE ) ; \n\t$F1150 ( m , p , title ) if $F281 ( m ) { \n\t\tv [ NUM00 ] = m . group ( NUM00 ) ; \n\t\tv [ NUM00 ] = m . group ( NUM00 ) ; \n\t\t} \n\telse { \n\t\tv [ NUM00 ] = title ; \n\t\t} \n\treturn v ; \n\t} \n"}, {"code": "public String sel $F72 $F2495 ( mSelection ) "}, {"code": "public double calculateExcitatoryRatio $F72 { \n\texcitatoryRatio = exSynapseSet . size ( ) / $F69510 ( size ) ; \n\tif $F35707 ( Double , excitatoryRatio ) $F1083 return excitatoryRatio ; \n\t} \n"}, {"code": "public void rootRemoved ( ISVNRepositoryLocation root ) { \n\t$F10531 ( it , listeners ) while $F2921 ( it ) { \n\t\t$F210422 ( listener , it ) listener . repositoryRemoved ( root ) ; \n\t\t} \n\t} \n"}, {"code": "public synchronized void insert ( double _priority , Object _data ) { \n\tnumElements ++ ; \n\tif ( numElements == queue . length ) { \n\t\tPriorityQueueNode [ ] tmp = new PriorityQueueNode [ ( int ) $F28143 ( queue ) ] ; \n\t\t$F7057 ( System , queue , tmp ) for ( int i = queue . length ; \n\t\ti < tmp . length ; \n\t\ti ++ ) { \n\t\t\ttmp [ i ] = new PriorityQueueNode $F72 ; \n\t\t\t} \n\t\tqueue = tmp ; \n\t\t} \n\tqueue [ numElements ] . data = _data ; \n\tqueue [ numElements ] . priority = _priority ; \n\treheapify ( numElements ) ; \n\t} \n"}, {"code": "protected Message $F72 $F845 "}, {"code": "protected String wrapLinuxCommand ( String command ) throws $F3 { \n\tString setGroup = NUM00 + getGid ( ) + NUM00 + getGid ( ) + NUM00 + getGid ( ) + NUM00 ; \n\tString setUser = NUM00 + getUid ( ) + NUM00 + getUid ( ) + NUM00 + getGid ( ) + NUM00 ; \n\tString chownCommand = NUM00 ; \n\treturn setGroup + NUM00 + setUser + NUM00 + chownCommand + NUM00 + command + NUM00 + chownCommand ; \n\t} \n"}, {"code": "public AbstractDMLQuery parseSqlQuery ( SQLQuery sqlQuery , ISpaceProxy space ) throws SQLException { \n\tAbstractDMLQuery query = ( AbstractDMLQuery ) getQueryFromCache ( getUniqueKey ( sqlQuery ) ) ; \n\ttry { \n\t\tif ( query == null ) { \n\t\t\t$F432107 ( _logger , Level ) SqlParser parser = initParser ( sqlQuery . getQuery ( ) ) ; \n\t\t\tquery = parse ( parser ) ; \n\t\t\tquery . setTableName ( sqlQuery . getTypeName ( ) ) ; \n\t\t\tquery . validateQuery ( space ) ; \n\t\t\tif ( ! query . isPrepared ( ) && ! query . containsSubQueries ( ) ) query . build ( ) ; \n\t\t\taddQueryToCache ( getUniqueKey ( sqlQuery ) , query ) ; \n\t\t\tif ( ! query . isPrepared ( ) ) return query ; \n\t\t\t} \n\t\tquery = query . clone ( ) ; \n\t\treturn query ; \n\t\t} \n\tcatch ( SQLException sqlEx ) { \n\t\tif $F6456 ( _logger , Level ) { \n\t\t\t_logger . log ( Level . FINE , NUM00 + sqlQuery . getQuery ( ) + NUM00 , sqlEx ) ; \n\t\t\t} \n\t\tthrow sqlEx ; \n\t\t} \n\tcatch ( Throwable t ) { \n\t\tif $F6456 ( _logger , Level ) { \n\t\t\t_logger . log ( Level . FINE , NUM00 + sqlQuery . getQuery ( ) + NUM00 , t ) ; \n\t\t\t} \n\t\tSQLException sqlEx = new SQLException ( NUM00 + sqlQuery . getQuery ( ) + NUM00 + t , NUM00 , - NUM00 ) ; \n\t\tsqlEx . initCause ( t ) ; \n\t\tthrow sqlEx ; \n\t\t} \n\t} \n"}, {"code": "private int indexOfElementInLevel ( int element , int level [ ] ) throws Exception { \n\tfor ( $F1139 ( i , level ) ) { \n\t\tif ( level [ i ] == element ) { \n\t\t\treturn i ; \n\t\t\t} \n\t\t} \n\tthrow new Exception ( NUM00 + m_nodes . get ( element ) . ID + NUM00 + NUM00 ) ; \n\t} \n"}, {"code": "$F1654 ( _attrs ) "}, {"code": "public String consumeTagName $F72 { \n\tint start = pos ; \n\twhile ( ! isEmpty ( ) && ( matchesWord ( ) || matchesAny ( $F7288 ) ) ) pos ++ ; \n\t$F6669 ( queue , start , pos ) } \n"}, {"code": "public void deepSort $F23416 ( setFeatureSequence ) { \n\tfeatureSequence = setFeatureSequence ; \n\tnumberOfLeaves = NUM00 ; \n\ttree = new MaryNode ( NUM00 , featureVectors . length ) ; \n\tsortNode ( NUM00 , tree ) ; \n\t} \n"}, {"code": "public void removeListeners $F72 $F9096 ( listeners ) "}, {"code": "public String decrypt ( String sCipherText ) { \n\tint nLen = ( sCipherText . length ( ) > > NUM00 ) & ~ NUM00 ; \n\tif ( nLen < BlowfishECB . BLOCKSIZE ) $F1274 $F96 cbciv = new byte [ BlowfishECB . BLOCKSIZE ] ; \n\tint nNumOfBytes = BinConverter . binHexToBytes ( sCipherText , cbciv , NUM00 , NUM00 , BlowfishECB . BLOCKSIZE ) ; \n\tif ( nNumOfBytes < BlowfishECB . BLOCKSIZE ) $F1274 m_bfish . setCBCIV ( cbciv ) ; \n\tnLen -= BlowfishECB . BLOCKSIZE ; \n\tif ( nLen == NUM00 ) $F1278 $F2175 ( buf , nLen ) nNumOfBytes = BinConverter . binHexToBytes ( sCipherText , buf , BlowfishECB . BLOCKSIZE * NUM00 , NUM00 , nLen ) ; \n\tif ( nNumOfBytes < nLen ) $F1274 m_bfish . decrypt ( buf ) ; \n\tint nPadByte = $F154004 ( buf ) ; \n\tif ( ( nPadByte > NUM00 ) || ( nPadByte < NUM00 ) ) nPadByte = NUM00 ; \n\tnNumOfBytes -= nPadByte ; \n\tif ( nNumOfBytes < NUM00 ) $F1278 return BinConverter . byteArrayToUNCString ( buf , NUM00 , nNumOfBytes ) ; \n\t} \n"}, {"code": "public static double L_RankLoss ( int y [ ] , int r [ ] ) { \n\tint L = y . length ; \n\t$F15277 ( tI ) $F15277 ( fI ) for ( $F119 ( j , L ) ) { \n\t\tif ( y [ j ] == NUM00 ) $F207 ( tI , j ) else $F207 ( fI , j ) } \n\tif $F133343 ( tI , fI ) { \n\t\tint c = NUM00 ; \n\t\tfor ( int k : tI ) { \n\t\t\tfor ( int l : fI ) { \n\t\t\t\tif ( position ( k , r ) < position ( l , r ) ) { \n\t\t\t\t\tc ++ ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\treturn ( double ) c / ( double ) ( tI . size ( ) * fI . size ( ) ) ; \n\t\t} \n\telse $F1083 } \n"}, {"code": "private double addRecursively ( $F302683 hull , Hierarchy < Cluster < Model > > hier , Cluster < Model > clus ) { \n\tfinal DBIDs ids = clus . getIDs ( ) ; \n\tdouble weight = ids . size ( ) ; \n\tfor ( $F134224 ( iter , ids ) ) { \n\t\t$F1986 projP = proj . fastProjectDataToRenderSpace ( rel . get ( iter ) ) ; \n\t\tif ( projP [ NUM00 ] != projP [ NUM00 ] || projP [ NUM00 ] != projP [ NUM00 ] ) $F1448 hull . add ( projP ) ; \n\t\t} \n\tfor ( Iter < Cluster < Model > > iter = hier . iterChildren ( clus ) ; \n\titer . valid ( ) ; \n\titer . advance ( ) ) { \n\t\tweight += NUM00 * addRecursively ( hull , hier , iter . get ( ) ) ; \n\t\t} \n\treturn weight ; \n\t} \n"}, {"code": "public void attributeUpdate ( PrintServiceAttributeEvent psae ) $F35578 ( log , psae ) "}, {"code": "public static boolean decodeToFile ( String dataToDecode , String filename ) { \n\tboolean success = _BOOL ; \n\t$F87751 bos = null ; \n\ttry { \n\t\tbos = new $F87751 ( new java . io . FileOutputStream ( filename ) , Base64 . DECODE ) ; \n\t\tbos . write ( dataToDecode . getBytes ( PREFERRED_ENCODING ) ) ; \n\t\tsuccess = _BOOL ; \n\t\t} \n\tcatch ( $F3258 e ) { \n\t\tsuccess = _BOOL ; \n\t\t} \n\tfinally $F87767 ( bos ) return success ; \n\t} \n"}, {"code": "public void evict $F72 throws Exception { \n\tassertOpen ( ) ; \n\tboolean isEmpty ; \n\tsynchronized ( this ) $F57332 ( isEmpty , pool ) if ( ! isEmpty ) { \n\t\tif ( softMinEvictableIdleTimeMillis > NUM00 ) { \n\t\t\tint numToEvict = getNumIdle ( ) - getMinIdle ( ) ; \n\t\t\tevict ( System . currentTimeMillis ( ) - softMinEvictableIdleTimeMillis , numToEvict ) ; \n\t\t\t} \n\t\tif ( minEvictableIdleTimeMillis > NUM00 ) { \n\t\t\tint numToEvict = getNumIdle ( ) ; \n\t\t\tevict ( System . currentTimeMillis ( ) - minEvictableIdleTimeMillis , numToEvict ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void generateRandomPopulation ( int population_size ) { \n\t$F980 ( logger ) for ( $F119 ( i , population_size ) ) { \n\t\tT individual = chromosomeFactory . getChromosome ( ) ; \n\t\tfor ( FitnessFunction $F1011 fitnessFunction : this . fitnessFunctions ) { \n\t\t\tindividual . addFitness ( fitnessFunction ) ; \n\t\t\t} \n\t\tpopulation . add ( individual ) ; \n\t\tif ( isFinished ( ) ) $F597 } \n\t$F25390 ( logger , population ) } \n"}, {"code": "public Session $F72 { \n\t$F657 ( uptime , System ) mMainHandler = new Handler ( Looper . getMainLooper ( ) ) ; \n\tmTimestamp = ( uptime / NUM00 ) < < NUM00 & ( ( ( uptime - ( ( uptime / NUM00 ) * NUM00 ) ) > > NUM00 ) / NUM00 ) ; \n\tmOrigin = NUM00 ; \n\ttry $F24081 ( sSignal ) $F887 } \n"}, {"code": "public List < Visitante > listar $F72 { \n\tList < Visitante > $F204 ( dados ) ; \n\ttry { \n\t\tString sql = NUM00 ; \n\t\tstm = conector . prepareStatement ( sql ) ; \n\t\trs = stm . executeQuery ( sql ) ; \n\t\twhile $F1682 ( rs ) { \n\t\t\tdados . add ( new Visitante ( rs . getInt ( NUM00 ) , rs . getString ( NUM00 ) , rs . getString ( NUM00 ) , rs . getString ( NUM00 ) , rs . getString ( NUM00 ) , rs . getString ( NUM00 ) , Tempo . toDate ( rs . getTimestamp ( NUM00 ) ) , rs . getString ( NUM00 ) , rs . getString ( NUM00 ) ) ) ; \n\t\t\t} \n\t\t$F59 ( stm ) $F59 ( rs ) } \n\tcatch ( SQLException ex ) { \n\t\tMensagem . erro ( NUM00 + ex ) ; \n\t\t} \n\treturn dados ; \n\t} \n"}, {"code": "private void assertAllFromTbl1 ( Statement stmt , $F806 ones , $F5078 twos ) throws SQLException { \n\t$F75096 ( rs , stmt ) int i = NUM00 ; \n\tfor ( ; \n\trs . next ( ) ; \n\ti ++ ) { \n\t\tassertTrue ( i < ones . length ) ; \n\t\tassertEquals ( ones [ i ] , rs . getString ( NUM00 ) ) ; \n\t\tassertEquals ( twos [ i ] , rs . getShort ( NUM00 ) ) ; \n\t\t} \n\tassertTrue ( i == ones . length ) ; \n\t} \n"}, {"code": "$F46605 ( value , builder , this ) "}, {"code": "private void insertBefore ( Instruction [ ] list , Instruction s ) { \n\tfor ( Instruction x : list ) { \n\t\ts . insertBefore ( x ) ; \n\t\t} \n\t} \n"}, {"code": "public static Builder newBuilder $F72 { \n\treturn new Builder $F72 ; \n\t} \n"}, {"code": "public int countArray $F4374 ( array ) { \n\treturn array . length ; \n\t} \n"}, {"code": "private void processUnprocessed $F72 { \n\tboolean clean_processings = Boolean . getBoolean ( NUM00 ) ; \n\tlogger . info ( NUM00 + NUM00 + clean_processings + NUM00 ) ; \n\tproductService . processUnprocessed ( ! clean_processings ) ; \n\t} \n"}, {"code": "public $F1986 popy ( double x_ [ ] ) { \n\treturn popY ( new double [ ] [ ] { \n\t\tx_ } \n\t) [ NUM00 ] ; \n\t} \n"}, {"code": "public void gotoFrame ( int frameNumber ) throws IOException { \n\tprint ( NUM00 , new String [ ] { \n\t\tInteger . toString ( frameNumber ) } \n\t) ; \n\t} \n"}, {"code": "$F73603 ( desc , c , pop , Type ) "}, {"code": "public void delete ( String name ) throws IOException { \n\t$F219378 ( name , SUBJECT_NAME , names ) encodeThis ( ) ; \n\t} \n"}, {"code": "public void pushElemAttributeSet ( ElemAttributeSet attrSet ) $F31742 ( m_attrSetStack , attrSet ) "}, {"code": "private void finishScrollStacks $F72 { \n\tcancelAnimation ( this , Property . STACK_SNAP ) ; \n\t$F3666 ( currentModelIndex , getTabStackIndex ) float delta = Math . abs ( currentModelIndex + mRenderedScrollOffset ) ; \n\tfloat target = - currentModelIndex ; \n\tif ( delta != NUM00 ) { \n\t\tlong duration = FLING_MIN_DURATION + ( long ) Math . abs ( delta * getFullScrollDistance ( ) / mFlingSpeed ) ; \n\t\taddToAnimation ( this , Property . STACK_SNAP , mRenderedScrollOffset , target , duration , NUM00 ) ; \n\t\t} \n\telse { \n\t\tsetProperty ( Property . STACK_SNAP , target ) ; \n\t\tif ( mTemporarySelectedStack != null ) { \n\t\t\tmTabModelSelector . selectModel ( mTemporarySelectedStack ) ; \n\t\t\tmTemporarySelectedStack = null ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public GeoDistanceBuilder addUnboundedFrom ( String key , double from ) { \n\tranges . add ( new Range ( key , from , null ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "private void sendResponse ( Document doc , MessageFactory messageFactory , String contentType , HttpServletResponse res ) throws IOException , SOAPException { \n\tSOAPMessage reply = messageFactory . createMessage ( ) ; \n\tSOAPHeader header = reply . getSOAPHeader ( ) ; \n\theader . detachNode ( ) ; \n\tSOAPBody replyBody = reply . getSOAPBody ( ) ; \n\tres . setHeader ( NUM00 , contentType ) ; \n\treplyBody . addDocument ( doc ) ; \n\treply . saveChanges ( ) ; \n\t$F147972 ( os , res ) reply . writeTo ( os ) ; \n\t$F1206 ( os ) } \n"}, {"code": "public static String replaceChars ( String str , String oldchars , char newchar ) { \n\tint pos = indexOfChars ( str , oldchars ) ; \n\t$F5881 ( pos , str ) $F7542 ( buf , str ) do { \n\t\tbuf . setCharAt ( pos , newchar ) ; \n\t\tpos = indexOfChars ( str , oldchars , pos + NUM00 ) ; \n\t\t} \n\twhile ( pos != - NUM00 ) ; \n\t$F92 ( buf ) } \n"}, {"code": "$F146067 ( zzBuffer , zzStartRead , zzMarkedPos ) "}, {"code": "public static String canonicalizePath ( String path , boolean discardRelativePrefix ) { \n\tint segmentStart = NUM00 ; \n\tint deletableSegments = NUM00 ; \n\tfor ( int i = NUM00 ; \n\ti <= path . length ( ) ; \n\t) { \n\t\tint nextSegmentStart ; \n\t\tif $F9615 ( i , path ) { \n\t\t\tnextSegmentStart = i ; \n\t\t\t} \n\t\telse if $F11983 ( path , i ) { \n\t\t\tnextSegmentStart = i + NUM00 ; \n\t\t\t} \n\t\telse $F118993 ( i ) if $F122896 ( i , segmentStart , path ) { \n\t\t\t$F122899 ( path , segmentStart , nextSegmentStart ) i = segmentStart ; \n\t\t\t} \n\t\telse if $F122896 ( i , segmentStart , path ) { \n\t\t\tif ( deletableSegments > NUM00 || discardRelativePrefix ) { \n\t\t\t\tdeletableSegments -- ; \n\t\t\t\tint prevSegmentStart = path . lastIndexOf ( NUM00 , segmentStart - NUM00 ) + NUM00 ; \n\t\t\t\t$F122899 ( path , prevSegmentStart , nextSegmentStart ) i = segmentStart = prevSegmentStart ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\ti ++ ; \n\t\t\t\tsegmentStart = i ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( i > NUM00 ) { \n\t\t\t\tdeletableSegments ++ ; \n\t\t\t\t} \n\t\t\ti ++ ; \n\t\t\tsegmentStart = i ; \n\t\t\t} \n\t\t} \n\treturn path ; \n\t} \n"}, {"code": "public InMemoryMessageExchangeStore ( final NetworkConfig config , TokenProvider tokenProvider ) { \n\t$F896 ( config ) $F896 ( tokenProvider ) this . tokenProvider = tokenProvider ; \n\tthis . config = config ; \n\t} \n"}, {"code": "public static void next $F72 { \n\ttry { \n\t\tif ( musicPlaybackService != null ) $F106111 ( musicPlaybackService ) } \n\tcatch ( final RemoteException ignored ) $F845 } \n"}, {"code": "public long startstack $F72 $F12907 ( Long , fields ) "}, {"code": "private void drawBitmapWithStroke ( Canvas canvas , Bitmap bitmap , int centerX , int centerY , float radius , Paint drawPaint ) { \n\t$F22950 ( drawPaint , Paint ) float strokeRadius = radius + mRadiusStrokeWidth ; \n\tdrawPaint . setXfermode ( new PorterDuffXfermode ( PorterDuff . Mode . CLEAR ) ) ; \n\tcanvas . drawCircle ( centerX , centerY , strokeRadius , drawPaint ) ; \n\tdrawPaint . setXfermode ( null ) ; \n\tfinal int $F192701 ( halfBitmapWidth , bitmap ) ; \n\tfinal int halfBitmapHeight = $F63370 ( bitmap ) ; \n\tBitmapShader bitmapShader = new BitmapShader ( bitmap , Shader . TileMode . REPEAT , Shader . TileMode . REPEAT ) ; \n\t$F28837 ( shaderMatrix ) float minSize = bitmap . getWidth ( ) > bitmap . getHeight ( ) ? bitmap . getHeight ( ) : bitmap . getWidth ( ) ; \n\tfloat scale = radius * NUM00 / minSize ; \n\tshaderMatrix . setScale ( scale , scale ) ; \n\tshaderMatrix . postTranslate ( centerX - ( halfBitmapWidth * scale ) , centerY - ( halfBitmapHeight * scale ) ) ; \n\tbitmapShader . setLocalMatrix ( shaderMatrix ) ; \n\tdrawPaint . setShader ( bitmapShader ) ; \n\tcanvas . drawCircle ( centerX , centerY , radius , drawPaint ) ; \n\tdrawPaint . setShader ( null ) ; \n\t} \n"}, {"code": "SNode awaitFulfill ( SNode s , boolean timed , long nanos ) { \n\t$F74107 ( deadline , timed , System , nanos ) $F686 ( w , Thread ) int spins = ( shouldSpin ( s ) ? ( timed ? maxTimedSpins : maxUntimedSpins ) : NUM00 ) ; \n\tfor ( $F589 ) { \n\t\tif $F84922 ( w ) s . tryCancel ( ) ; \n\t\tSNode m = s . match ; \n\t\t$F60730 ( m ) if ( timed ) { \n\t\t\t$F27353 ( nanos , deadline , System ) if ( nanos <= NUM00 ) { \n\t\t\t\ts . tryCancel ( ) ; \n\t\t\t\t$F598 } \n\t\t\t} \n\t\tif ( spins > NUM00 ) spins = shouldSpin ( s ) ? ( spins - NUM00 ) : NUM00 ; \n\t\telse if $F74129 ( s ) s . waiter = w ; \n\t\telse if ( ! timed ) LockSupport . park ( this ) ; \n\t\telse if ( nanos > spinForTimeoutThreshold ) LockSupport . parkNanos ( this , nanos ) ; \n\t\t} \n\t} \n"}, {"code": "public MqttDevice mqttDevice $F72 { \n\treturn mqttDevice ; \n\t} \n"}, {"code": "public AbbaLockingDetector startCollecting $F72 { \n\t$F40963 ( thread , this ) ; \n\tthread . setDaemon ( _BOOL ) ; \n\t$F2346 ( thread ) return this ; \n\t} \n"}, {"code": "$F83977 ( listener , mListeners ) "}, {"code": "protected Object readObjectOverride $F72 throws $F90681 { \n\t$F1338 ( input ) throw new IOException $F72 ; \n\t} \n"}, {"code": "public float toMeters ( double pixels ) { \n\treturn ( float ) ( pixels * METERS_PER_PIXELS ) ; \n\t} \n"}, {"code": "public static String searchRemoveFromCategory ( HttpServletRequest request , HttpServletResponse response ) { \n\t$F15914 ( delegator , request ) $F10362 ( productCategoryId , request ) String errMsg = null ; \n\ttry { \n\t\t$F78679 ( beganTransaction , TransactionUtil , DEFAULT_TX_TIMEOUT ) try { \n\t\t\tEntityListIterator eli = getProductSearchResults ( request ) ; \n\t\t\tif ( eli == null ) { \n\t\t\t\t$F78681 ( errMsg , UtilProperties , resource , UtilHttp , request ) ; \n\t\t\t\t$F34765 ( request , errMsg ) $F1278 } \n\t\t\tint numRemoved = NUM00 ; \n\t\t\tGenericValue searchResultView = null ; \n\t\t\twhile $F76177 ( searchResultView , eli ) { \n\t\t\t\t$F21024 ( productId , searchResultView ) numRemoved += delegator . removeByAnd ( NUM00 , $F78686 ( UtilMisc , productCategoryId , productId ) ) ; \n\t\t\t\t} \n\t\t\t$F59 ( eli ) $F2539 messageMap = UtilMisc . toMap ( NUM00 , Integer . toString ( numRemoved ) ) ; \n\t\t\t$F210959 ( errMsg , UtilProperties , resource , messageMap , UtilHttp , request ) $F34765 ( request , errMsg ) } \n\t\tcatch ( GenericEntityException e ) { \n\t\t\t$F210956 ( messageMap , UtilMisc , e ) $F210959 ( errMsg , UtilProperties , resource , messageMap , UtilHttp , request ) Debug . logError ( e , errMsg , module ) ; \n\t\t\t$F34765 ( request , errMsg ) TransactionUtil . rollback ( beganTransaction , errMsg , e ) ; \n\t\t\t$F1278 } \n\t\t$F78711 ( TransactionUtil , beganTransaction ) } \n\tcatch ( GenericTransactionException e ) { \n\t\t$F210956 ( messageMap , UtilMisc , e ) $F210959 ( errMsg , UtilProperties , resource , messageMap , UtilHttp , request ) Debug . logError ( e , errMsg , module ) ; \n\t\t$F34765 ( request , errMsg ) $F1278 } \n\t$F1278 } \n"}, {"code": "boolean addToBuffer ( char c ) throws IOException { \n\t$F1749 ( len , sb ) if ( len == NUM00 && c != CHAR_LT ) return _BOOL ; \n\tsb . append ( c ) ; \n\tif ( ++ len >= minTagLen ) { \n\t\tboolean isClosingTag = ( len >= NUM00 && sb . charAt ( NUM00 ) == CHAR_SL ) ; \n\t\tString substr ; \n\t\tif ( isClosingTag ) $F64779 ( substr , sb ) else $F64779 ( substr , sb ) for ( $F1139 ( i , EXCLUDE_TAGS ) ) { \n\t\t\tif $F11411 ( substr , EXCLUDE_TAGS , i ) { \n\t\t\t\tif ( isClosingTag ) { \n\t\t\t\t\tdepthDec ( i ) ; \n\t\t\t\t\tprintBuffer ( ) ; \n\t\t\t\t\tlastChar = NUM00 ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tdepthInc ( i ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static double length $F7635 ( x , y , z ) { \n\t$F100238 ( Math , x , y , z ) } \n"}, {"code": "public static $F4203 T jsonToObject $F92641 ( jsonString , klass ) { \n\tT objectFromJson = null ; \n\ttry { \n\t\tGfJsonObject jsonObject = new GfJsonObject ( jsonString ) ; \n\t\t$F33943 ( objectFromJson , klass ) $F23598 ( declaredMethods , klass ) Map < String , Method > methodsMap = new HashMap < String , Method > $F72 ; \n\t\tfor ( Method method : declaredMethods ) $F64959 ( methodsMap , method ) $F2199 ( noOfFields , jsonObject ) $F50737 ( keys , jsonObject ) while $F2921 ( keys ) { \n\t\t\t$F13714 ( key , keys ) Method method = methodsMap . get ( NUM00 + capitalize ( key ) ) ; \n\t\t\tif ( method != null ) { \n\t\t\t\t$F272051 ( parameterTypes , method ) if $F9634 ( parameterTypes ) { \n\t\t\t\t\t$F6969 parameterType = parameterTypes [ NUM00 ] ; \n\t\t\t\t\t$F16628 ( value , jsonObject , key ) if ( isPrimitiveOrWrapper ( parameterType ) ) $F199548 ( value , getPrimitiveOrWrapperValue , parameterType ) else if ( isArray ( parameterType ) ) $F176272 ( value , toArray , parameterType ) else if ( isList ( parameterType ) ) $F176272 ( value , toList , parameterType ) else if ( isMap ( parameterType ) ) $F176272 ( value , toMap , parameterType ) else if ( isSet ( parameterType ) ) $F176272 ( value , toSet , parameterType ) else { \n\t\t\t\t\t\tvalue = $F25730 ( jsonToObject , value , parameterType ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t$F226025 ( method , objectFromJson , value ) noOfFields -- ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tif ( noOfFields != NUM00 ) $F20855 ( jsonString , klass ) } \n\tcatch ( InstantiationException e ) $F12615 ( klass , e ) catch ( IllegalAccessException e ) $F12615 ( klass , e ) catch ( GfJsonException e ) $F12615 ( klass , e ) $F137279 ( klass , e ) catch ( InvocationTargetException e ) $F12615 ( klass , e ) return objectFromJson ; \n\t} \n"}, {"code": "private Cache createCache $F72 throws CacheException { \n\t$F859 ( props ) $F9266 ( props , LOCATORS ) $F9266 ( props , MCAST_PORT ) return CacheFactory . create ( DistributedSystem . connect ( props ) ) ; \n\t} \n"}, {"code": "public AttributeListPanel $F72 { \n\tm_Table . setSelectionMode ( ListSelectionModel . SINGLE_SELECTION ) ; \n\tm_Table . setColumnSelectionAllowed ( _BOOL ) ; \n\tm_Table . setPreferredScrollableViewportSize ( $F32534 ) ; \n\t$F9898 ( setLayout ) add ( new JScrollPane ( m_Table ) , BorderLayout . CENTER ) ; \n\t} \n"}, {"code": "protected $F20724 toArray $F72 { \n\tint i ; \n\tint n ; \n\tint ii ; \n\tint nn ; \n\tint x ; \n\tint y ; \n\t$F20725 ( result ) ; \n\t$F20725 ( tmpResult ) ; \n\tint cols ; \n\tint rows ; \n\tboolean valueExists ; \n\trows = getVisibleRowCount ( ) ; \n\tif ( getShowAverage ( ) ) { \n\t\trows ++ ; \n\t\t} \n\tcols = getVisibleColCount ( ) ; \n\tif ( getShowStdDev ( ) ) $F121129 ( cols ) else $F121129 ( cols ) result = new String [ rows + NUM00 ] [ cols + NUM00 ] ; \n\tresult [ NUM00 ] [ NUM00 ] = trimString ( NUM00 , getRowNameWidth ( ) ) ; \n\tx = NUM00 ; \n\tfor ( $F95978 ( ii , getColCount ) ) { \n\t\ti = getDisplayCol ( ii ) ; \n\t\t$F18649 ( getColHidden , i ) result [ NUM00 ] [ x ] = trimString ( removeFilterName ( getColName ( i ) ) , getColNameWidth ( ) ) ; \n\t\tx ++ ; \n\t\tif ( getShowStdDev ( ) ) { \n\t\t\tresult [ NUM00 ] [ x ] = NUM00 ; \n\t\t\tx ++ ; \n\t\t\t} \n\t\tresult [ NUM00 ] [ x ] = NUM00 ; \n\t\tx ++ ; \n\t\t} \n\ty = NUM00 ; \n\tfor ( $F95978 ( ii , getRowCount ) ) { \n\t\ti = getDisplayRow ( ii ) ; \n\t\tif ( ! getRowHidden ( i ) ) { \n\t\t\tresult [ y ] [ NUM00 ] = trimString ( removeFilterName ( getRowName ( i ) ) , getRowNameWidth ( ) ) ; \n\t\t\ty ++ ; \n\t\t\t} \n\t\t} \n\ty = NUM00 ; \n\tfor ( $F95978 ( ii , getRowCount ) ) { \n\t\ti = getDisplayRow ( ii ) ; \n\t\t$F18649 ( getRowHidden , i ) x = NUM00 ; \n\t\tfor ( $F95978 ( nn , getColCount ) ) { \n\t\t\tn = getDisplayCol ( nn ) ; \n\t\t\t$F18649 ( getColHidden , n ) valueExists = ( ! Double . isNaN ( getMean ( n , i ) ) ) ; \n\t\t\tif ( ! valueExists ) { \n\t\t\t\tresult [ y ] [ x ] = NUM00 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tresult [ y ] [ x ] = doubleToString ( getMean ( n , i ) , getMeanPrec ( ) ) ; \n\t\t\t\t} \n\t\t\tx ++ ; \n\t\t\tif ( getShowStdDev ( ) ) { \n\t\t\t\tif ( ! valueExists ) { \n\t\t\t\t\tresult [ y ] [ x ] = NUM00 ; \n\t\t\t\t\t} \n\t\t\t\telse if ( Double . isInfinite ( getStdDev ( n , i ) ) ) { \n\t\t\t\t\tresult [ y ] [ x ] = NUM00 ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tresult [ y ] [ x ] = doubleToString ( getStdDev ( n , i ) , getStdDevPrec ( ) ) ; \n\t\t\t\t\t} \n\t\t\t\tx ++ ; \n\t\t\t\t} \n\t\t\tif ( ! valueExists ) { \n\t\t\t\tresult [ y ] [ x ] = NUM00 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tswitch ( getSignificance ( n , i ) ) { \n\t\t\t\t\tcase SIGNIFICANCE_TIE : result [ y ] [ x ] = TIE_ \"STRING\" ; \n\t\t\t\t\t$F597 case SIGNIFICANCE_WIN : result [ y ] [ x ] = WIN_ \"STRING\" ; \n\t\t\t\t\t$F597 case SIGNIFICANCE_LOSS : result [ y ] [ x ] = LOSS_ \"STRING\" ; \n\t\t\t\t\t$F597 } \n\t\t\t\t} \n\t\t\tx ++ ; \n\t\t\t} \n\t\ty ++ ; \n\t\t} \n\tif ( getShowAverage ( ) ) { \n\t\ty = result . length - NUM00 ; \n\t\tx = NUM00 ; \n\t\tresult [ y ] [ NUM00 ] = NUM00 ; \n\t\tx ++ ; \n\t\tfor ( $F95978 ( ii , getColCount ) ) { \n\t\t\ti = getDisplayCol ( ii ) ; \n\t\t\t$F18649 ( getColHidden , i ) result [ y ] [ x ] = doubleToString ( getAverage ( i ) , getMeanPrec ( ) ) ; \n\t\t\tx ++ ; \n\t\t\tif ( getShowStdDev ( ) ) { \n\t\t\t\tresult [ y ] [ x ] = NUM00 ; \n\t\t\t\tx ++ ; \n\t\t\t\t} \n\t\t\tresult [ y ] [ x ] = NUM00 ; \n\t\t\tx ++ ; \n\t\t\t} \n\t\t} \n\ty = result . length - NUM00 ; \n\tx = NUM00 ; \n\tresult [ y ] [ NUM00 ] = LEFT_PARENTHESES + WIN_ <missing ';'> NUM00 + NUM00 + TIE_ <missing ';'> NUM00 + NUM00 + LOSS_ <missing ';'> NUM00 + RIGHT_PARENTHESES ; \n\tx ++ ; \n\tfor ( $F95978 ( ii , getColCount ) ) { \n\t\ti = getDisplayCol ( ii ) ; \n\t\t$F18649 ( getColHidden , i ) result [ y ] [ x ] = NUM00 ; \n\t\tx ++ ; \n\t\tif ( getShowStdDev ( ) ) { \n\t\t\tresult [ y ] [ x ] = NUM00 ; \n\t\t\tx ++ ; \n\t\t\t} \n\t\tresult [ y ] [ x ] = LEFT_PARENTHESES + getSignificanceCount ( i , SIGNIFICANCE_WIN ) + NUM00 + getSignificanceCount ( i , SIGNIFICANCE_TIE ) + NUM00 + getSignificanceCount ( i , SIGNIFICANCE_LOSS ) + RIGHT_PARENTHESES ; \n\t\tx ++ ; \n\t\t} \n\ttmpResult = new String [ result . length ] [ result [ NUM00 ] . length - NUM00 ] ; \n\tx = NUM00 ; \n\tfor ( i = NUM00 ; \n\ti < result [ NUM00 ] . length ; \n\ti ++ ) { \n\t\tif ( ( ( i == NUM00 ) && ( getShowStdDev ( ) ) ) || ( ( i == NUM00 ) && $F931 ( getShowStdDev ) ) ) $F1448 for ( $F6929 ( n , result ) ) { \n\t\t\ttmpResult [ n ] [ x ] = result [ n ] [ i ] ; \n\t\t\t} \n\t\tx ++ ; \n\t\t} \n\tresult = tmpResult ; \n\treturn result ; \n\t} \n"}, {"code": "private Environment $F72 { \n\tthrow ContractUtils . unreachable ( ) ; \n\t} \n"}, {"code": "public void removePhoto ( PhotoEntity photo ) $F106 ( photos , photo ) "}, {"code": "public static int binarySearch ( $F1986 array , int startIndex , int endIndex , double value ) { \n\tcheckIndexForBinarySearch ( array . length , startIndex , endIndex ) ; \n\t$F39428 ( longBits , Double , value ) int low = startIndex , mid = - NUM00 , high = endIndex - NUM00 ; \n\twhile ( low <= high ) { \n\t\t$F62498 ( mid , low , high ) if ( lessThan ( array [ mid ] , value ) ) { \n\t\t\tlow = mid + NUM00 ; \n\t\t\t} \n\t\telse if ( longBits == Double . doubleToLongBits ( array [ mid ] ) ) { \n\t\t\treturn mid ; \n\t\t\t} \n\t\telse { \n\t\t\thigh = mid - NUM00 ; \n\t\t\t} \n\t\t} \n\tif ( mid < NUM00 ) { \n\t\tint insertPoint = endIndex ; \n\t\tfor ( int index = startIndex ; \n\t\tindex < endIndex ; \n\t\tindex ++ ) { \n\t\t\tif ( value < array [ index ] ) { \n\t\t\t\tinsertPoint = index ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn - insertPoint - NUM00 ; \n\t\t} \n\treturn - mid - ( lessThan ( value , array [ mid ] ) ? NUM00 : NUM00 ) ; \n\t} \n"}, {"code": "public static void compute ( double minScore , double topPercent , double maxExpected , float minPercentIdentity , IReadBlock readBlock , String classificationName , BitSet activeMatchesForClassification ) { \n\t$F725 ( activeMatchesForClassification ) for ( int i = NUM00 ; \n\ti < readBlock . getNumberOfAvailableMatchBlocks ( ) ; \n\ti ++ ) { \n\t\tfinal IMatchBlock matchBlock = readBlock . getMatchBlock ( i ) ; \n\t\tif ( ! matchBlock . isIgnore ( ) && matchBlock . getBitScore ( ) >= minScore && matchBlock . getExpected ( ) <= maxExpected && matchBlock . getPercentIdentity ( ) >= minPercentIdentity ) { \n\t\t\tif ( matchBlock . getId ( classificationName ) > NUM00 ) activeMatchesForClassification . set ( i ) ; \n\t\t\t} \n\t\t} \n\tfloat bestScore = NUM00 ; \n\tfor ( $F304395 ( i , activeMatchesForClassification ) ; \n\ti != - NUM00 ; \n\t$F304396 ( i , activeMatchesForClassification ) ) { \n\t\tfinal IMatchBlock matchBlock = readBlock . getMatchBlock ( i ) ; \n\t\tfloat score = matchBlock . getBitScore ( ) ; \n\t\t$F15468 ( score , bestScore ) } \n\tapplyTopPercentFilter ( topPercent , bestScore , minPercentIdentity , readBlock , activeMatchesForClassification ) ; \n\t} \n"}, {"code": "public $F38234 toArray $F102871 ( a ) { \n\tif ( a . length != array . length ( ) ) { \n\t\tthrow new ElasticsearchGenerationException $F580 ; \n\t\t} \n\tfor ( $F1088 ( i , array ) ) $F15303 ( a , i , array ) return a ; \n\t} \n"}, {"code": "synchronized public void failOn ( Failure fail ) $F23232 ( failures , fail ) "}, {"code": "public void dump_stack $F72 { \n\t$F25700 ( stack , debug_message ) debug_message ( NUM00 ) ; \n\tfor ( $F2277 ( i , stack ) ) { \n\t\tdebug_message ( NUM00 + ( ( symbol ) stack . elementAt ( i ) ) . sym + NUM00 + ( ( symbol ) stack . elementAt ( i ) ) . parse_state ) ; \n\t\t} \n\tdebug_message ( NUM00 ) ; \n\t} \n"}, {"code": "private static $F2689 createCategoriesSet $F32029 ( categories ) { \n\t$F13750 ( result ) for ( String cat : categories ) { \n\t\tresult . add ( StringUtil . toLowerCase ( cat ) ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public void loadListener ( String serverKey ) throws GenericServiceException { \n\tServer server = servers . get ( serverKey ) ; \n\tif ( server == null ) throw new GenericServiceException $F580 ; \n\tloadListener ( serverKey , server ) ; \n\t} \n"}, {"code": "public void upload ( File file , long restartAt , FTPDataTransferListener listener ) throws IllegalStateException , FileNotFoundException , IOException , FTPIllegalReplyException , FTPException , FTPDataTransferException , FTPAbortedException { \n\tif $F1906 ( file ) { \n\t\tthrow new FileNotFoundException $F89450 ( file ) ; \n\t\t} \n\tInputStream inputStream = null ; \n\ttry { \n\t\t$F5335 ( inputStream , file ) } \n\tcatch ( IOException e ) { \n\t\tthrow new FTPDataTransferException ( e ) ; \n\t\t} \n\ttry { \n\t\tupload ( file . getName ( ) , inputStream , restartAt , restartAt , listener ) ; \n\t\t} \n\tcatch ( IllegalStateException e ) { \n\t\tthrow e ; \n\t\t} \n\t$F8012 ( e ) catch ( FTPIllegalReplyException e ) { \n\t\tthrow e ; \n\t\t} \n\tcatch ( FTPException e ) { \n\t\tthrow e ; \n\t\t} \n\tcatch ( FTPDataTransferException e ) { \n\t\tthrow e ; \n\t\t} \n\tcatch ( FTPAbortedException e ) { \n\t\tthrow e ; \n\t\t} \n\tfinally { \n\t\t$F73912 ( inputStream ) } \n\t} \n"}, {"code": "public SSLSocket createSSLSocket ( Socket socket ) throws IOException { \n\tSSLSocketFactory sf = ( ( SSLSocketFactory ) SSLSocketFactory . getDefault ( ) ) ; \n\tInetSocketAddress remoteAddress = ( InetSocketAddress ) socket . getRemoteSocketAddress ( ) ; \n\tSSLSocket s = ( SSLSocket ) ( sf . createSocket ( socket , remoteAddress . getHostName ( ) , socket . getPort ( ) , _BOOL ) ) ; \n\ts . setUseClientMode ( _BOOL ) ; \n\ts . setEnabledCipherSuites ( s . getSupportedCipherSuites ( ) ) ; \n\treturn s ; \n\t} \n"}, {"code": "private String formatNode ( RightThreadedBinaryNode $F4203 node ) { \n\tRightThreadedBinaryNode $F4203 n ; \n\t$F4000 ( response ) if ( ( n = node . getLeftSon ( ) ) != null ) $F9821 ( response , formatNode , n ) $F11659 ( response , node ) if ( ( n = node . getRightSon ( ) ) != null ) $F9821 ( response , formatNode , n ) $F84 ( response ) $F92 ( response ) } \n"}, {"code": "public static void unregisterMBean $F60993 ( mbeanInterface ) { \n\t$F21354 ( mbs , ManagementFactory ) try { \n\t\tObjectName name = generateMBeanObjectName ( mbeanInterface ) ; \n\t\tif ( mbs . isRegistered ( name ) ) { \n\t\t\t$F209111 ( logger , name ) mbs . unregisterMBean ( name ) ; \n\t\t\t} \n\t\telse { \n\t\t\tlogger . warn ( $F368 ( name ) ) ; \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new ServerRuntimeException ( NUM00 + mbeanInterface , e ) ; \n\t\t} \n\t} \n"}, {"code": "public void writeExif ( InputStream jpegStream , String exifOutFileName ) throws $F27136 { \n\t$F26831 ( jpegStream , exifOutFileName , NULL_ARGUMENT_ ) OutputStream s = null ; \n\ttry { \n\t\ts = getExifWriterStream ( exifOutFileName ) ; \n\t\tdoExifStreamIO ( jpegStream , s ) ; \n\t\t$F1206 ( s ) } \n\t$F27615 ( closeSilently , s , e ) $F59 ( s ) } \n"}, {"code": "public void sort $F134589 ( comparator ) { \n\tsynchronized ( mLock ) { \n\t\tif ( mOriginalValues != null ) $F57005 ( Collections , mOriginalValues , comparator ) else $F57005 ( Collections , mObjects , comparator ) } \n\t$F32367 ( mNotifyOnChange , notifyDataSetChanged ) } \n"}, {"code": "static boolean causedByRDE ( DiskAccessException dae ) { \n\tboolean result = _BOOL ; \n\tif ( dae != null ) { \n\t\t$F31570 ( cause , dae ) while ( cause != null ) { \n\t\t\tif ( cause instanceof RegionDestroyedException ) $F3468 ( result , _BOOL ) $F131447 ( cause ) } \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public JsonArray add ( String value ) { \n\tvalues . add ( Json . value ( value ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "public MagicVariablesArgumentsBundle ( $F4170 $F2539 arguments , $F4170 $F2539 variables , String layerName , $F4170 DisplayMetrics metrics ) { \n\tsuper ( arguments , metrics ) ; \n\tmVariables = variables ; \n\tmLayerNamePrefix = $F139654 ( layerName ) ; \n\t} \n"}, {"code": "@ HLEUnimplemented $F79740 public int sceUsbCamSetupVideoEx ( pspUsbCamSetupVideoExParam usbCamSetupVideoExParam , TPointer workArea , int workAreaSize ) { \n\tthis . workArea = workArea . getAddress ( ) ; \n\tthis . workAreaSize = workAreaSize ; \n\tresolution = convertResolutionExToResolution ( usbCamSetupVideoExParam . resolution ) ; \n\tframeRate = usbCamSetupVideoExParam . framerate ; \n\twhiteBalance = usbCamSetupVideoExParam . wb ; \n\tsaturation = usbCamSetupVideoExParam . saturation ; \n\tbrightness = usbCamSetupVideoExParam . brightness ; \n\tcontrast = usbCamSetupVideoExParam . contrast ; \n\tsharpness = usbCamSetupVideoExParam . sharpness ; \n\timageEffectMode = usbCamSetupVideoExParam . effectmode ; \n\tframeSize = usbCamSetupVideoExParam . framesize ; \n\tevLevel = usbCamSetupVideoExParam . evlevel ; \n\tif $F931 ( setupVideo ) { \n\t\tlog . warn ( String . format ( NUM00 ) ) ; \n\t\treturn SceKernelErrors . ERROR_USBCAM_NOT_READY ; \n\t\t} \n\t$F1082 } \n"}, {"code": "public List $F284080 loadAllDeepFromCursor ( Cursor cursor ) { \n\t$F23386 ( count , cursor ) List $F284080 list = new ArrayList $F284080 ( count ) ; \n\t$F23402 ( cursor , identityScope , count , list , loadCurrentDeep , _BOOL ) return list ; \n\t} \n"}, {"code": "public static Date convertISO8601toDate ( String dateString ) throws ParseException { \n\t$F121432 ( dateFormat ) $F126579 ( date , dateFormat , dateString ) return date ; \n\t} \n"}, {"code": "public static Document createDOM ( InputStream is ) throws ParserConfigurationException , SAXException , IOException { \n\t$F2218 ( dbf , DocumentBuilderFactory ) dbf . setValidating ( _BOOL ) ; \n\tdbf . setIgnoringComments ( _BOOL ) ; \n\tdbf . setIgnoringElementContentWhitespace ( _BOOL ) ; \n\tdbf . setNamespaceAware ( _BOOL ) ; \n\tdbf . setFeature ( XMLConstants . FEATURE_SECURE_PROCESSING , _BOOL ) ; \n\tdbf . setFeature ( DISALLOW_DOCTYPE_DECL , _BOOL ) ; \n\tdbf . setFeature ( EXTERNAL_GENERAL_ENTITIES , _BOOL ) ; \n\tdbf . setFeature ( EXTERNAL_PARAMETER_ENTITIES , _BOOL ) ; \n\tdbf . setFeature ( LOAD_EXTERNAL_DTD , _BOOL ) ; \n\tDocumentBuilder db = null ; \n\t$F6281 ( db , dbf ) db . setEntityResolver ( new NullResolver $F72 ) ; \n\tdb . setErrorHandler ( new SamlParserErrorHandler $F72 ) ; \n\t$F5651 ( db , is ) } \n"}, {"code": "$F198049 ( Double , getValue ) "}, {"code": "public void resetCount $F72 $F21827 ( msgCnt ) "}, {"code": "public void scheduleAtFixedRate $F61001 ( task , when , period ) { \n\t$F61005 ( period , when ) $F61009 ( delay , when , System ) scheduleImpl ( task , delay , period , _BOOL ) ; \n\t} \n"}, {"code": "void decodeAttributeBody $F65230 ( attributeValue , offset , length ) throws StunException $F65231 ( realm , length , System , attributeValue , offset ) "}, {"code": "public static void copyAssets ( Context context , String assetsFilename , File file , String mode ) throws $F3 { \n\tString abi = Build . CPU_ABI ; \n\tString libraryName ; \n\tif $F21935 ( abi ) { \n\t\tlibraryName = NUM00 ; \n\t\t} \n\telse if $F21935 ( abi ) { \n\t\tlibraryName = NUM00 ; \n\t\t} \n\telse if $F3578 ( abi ) { \n\t\tlibraryName = NUM00 ; \n\t\t} \n\telse $F932 AssetManager manager = context . getAssets ( ) ; \n\tfinal InputStream is = manager . open ( libraryName + NUM00 + assetsFilename ) ; \n\tcopyFile ( file , is , mode ) ; \n\t} \n"}, {"code": "public boolean is_same ( Object obj ) { \n\tif ( this == obj ) return _BOOL ; \n\t$F397 ( obj , _BOOL ) $F9904 ( getClass , obj , _BOOL ) HouseNumber other = ( HouseNumber ) obj ; \n\tif ( number == null ) { \n\t\t$F45206 ( name , other , _BOOL ) } \n\telse if $F45204 ( number , other ) return _BOOL ; \n\t$F45206 ( street , other , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "public static double nextUp ( double d ) { \n\tif ( d == Double . POSITIVE_INFINITY ) return d ; \n\telse { \n\t\td += NUM00 ; \n\t\treturn Double . longBitsToDouble ( Double . doubleToRawLongBits ( d ) + ( ( d >= NUM00 ) ? + NUM00 : - NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "public int threeWayDistance ( Key k1 , Key k2 ) { \n\t$F96 h0 = hash ; \n\t$F96 h1 = k1 . hash ; \n\t$F96 h2 = k2 . hash ; \n\tint mmi = mismatch ( h1 , h2 ) ; \n\tif ( mmi == - NUM00 ) $F1082 int h = Byte . toUnsignedInt ( h0 [ mmi ] ) ; \n\tint a = Byte . toUnsignedInt ( h1 [ mmi ] ) ; \n\tint b = Byte . toUnsignedInt ( h2 [ mmi ] ) ; \n\treturn Integer . compareUnsigned ( a ^ h , b ^ h ) ; \n\t} \n"}, {"code": "static $F96 discardWhitespace $F97 ( data ) { \n\tbyte groomedData [ ] = $F3027 ( data ) ; \n\tint bytesCopied = NUM00 ; \n\tfor ( $F1139 ( i , data ) ) { \n\t\tswitch ( data [ i ] ) { \n\t\t\t$F271981 $F271981 $F271981 $F271981 $F597 $F1267 groomedData [ bytesCopied ++ ] = data [ i ] ; \n\t\t\t} \n\t\t} \n\tbyte packedData [ ] = new byte [ bytesCopied ] ; \n\t$F135 ( System , groomedData , packedData , bytesCopied ) return packedData ; \n\t} \n"}, {"code": "public AsyncSelector $F72 throws IOException { \n\tthis ( Selector . open ( ) ) ; \n\t} \n"}, {"code": "public void removeChildAt ( int index ) { \n\tif ( ( index < NUM00 ) || ( children == null ) || $F6389 ( index , children ) ) { \n\t\t$F38324 } \n\tElement child = ( Element ) children . get ( index ) ; \n\tchild . setParent ( null ) ; \n\tchildren . remove ( index ) ; \n\t} \n"}, {"code": "private $F16501 diff_bisectSplit ( String text1 , String text2 , int x , int y , long deadline ) { \n\t$F11991 ( text1a , text1 , x ) $F11991 ( text2a , text2 , y ) $F12716 ( text1b , text1 , x ) $F12716 ( text2b , text2 , y ) $F40337 ( diffs , diff_main , text1a , text2a , _BOOL , deadline ) $F40337 ( diffsb , diff_main , text1b , text2b , _BOOL , deadline ) diffs . addAll ( diffsb ) ; \n\treturn diffs ; \n\t} \n"}, {"code": "private void paint ( Painter p , SynthContext ctx , Graphics g , int x , int y , int w , int h , AffineTransform transform ) { \n\tif ( p != null ) { \n\t\tif ( g instanceof Graphics2D ) { \n\t\t\t$F20230 ( gfx , g ) if ( transform != null ) $F25910 ( gfx , transform ) gfx . translate ( x , y ) ; \n\t\t\tp . paint ( gfx , ctx . getComponent ( ) , w , h ) ; \n\t\t\t$F86480 ( gfx , x , y ) if ( transform != null ) { \n\t\t\t\ttry { \n\t\t\t\t\tgfx . transform ( transform . createInverse ( ) ) ; \n\t\t\t\t\t} \n\t\t\t\tcatch ( NoninvertibleTransformException e ) $F302 ( e ) } \n\t\t\t} \n\t\telse { \n\t\t\t$F214300 ( img , w , h , BufferedImage ) $F5115 ( gfx , img ) if ( transform != null ) $F25910 ( gfx , transform ) p . paint ( gfx , ctx . getComponent ( ) , w , h ) ; \n\t\t\t$F355 ( gfx ) $F108383 ( g , img , x , y ) img = null ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "static void loadDirectory ( File file , ModuleCandidate candidate ) throws IOException { \n\t$F5459 ( files , file ) if ( files != null ) for ( File f : files ) loadSubDirectory ( file , f , candidate ) ; \n\t} \n"}, {"code": "public static boolean hasSuppressed ( $F5466 Throwable t , $F5466 $F78637 cls ) { \n\t$F133007 ( t , cls , _BOOL ) if ( t . getSuppressed ( ) != null ) { \n\t\tfor ( Throwable th : t . getSuppressed ( ) ) { \n\t\t\tif $F178804 ( cls , th ) return _BOOL ; \n\t\t\t$F19670 ( hasSuppressed , th , cls , _BOOL ) } \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "static int writeVarLong ( OutputStream out , long x ) throws IOException { \n\tint len = NUM00 ; \n\twhile $F220175 ( x ) { \n\t\tout . write ( ( byte ) ( NUM00 | ( x & NUM00 ) ) ) ; \n\t\tx >>>= NUM00 ; \n\t\tlen ++ ; \n\t\t} \n\t$F220182 ( out , x ) return ++ len ; \n\t} \n"}, {"code": "protected void engineUpdate ( byte b ) throws SignatureException { \n\tmessageDigest . update ( b ) ; \n\tneedsReset = _BOOL ; \n\t} \n"}, {"code": "$F92274 ( s , lock , this , p , first ) "}, {"code": "private boolean checkIfInitiatorForRPBeforeMigration ( Initiator initiator ) { \n\t$F1933 ( initiator , _BOOL ) boolean isRP = _BOOL ; \n\tif ( NullColumnValueGetter . isNullValue ( initiator . getHostName ( ) ) || ! NullColumnValueGetter . isNullURI ( initiator . getHost ( ) ) ) { \n\t\tisRP = _BOOL ; \n\t\t} \n\tlog . debug ( $F89332 ( isRP ) ) ; \n\treturn isRP ; \n\t} \n"}, {"code": "$F1 public Collection < SerialMessage > initialize ( boolean refresh ) { \n\tArrayList < SerialMessage > result = new ArrayList < SerialMessage > $F72 ; \n\tif ( isSupportRequestSupported == _BOOL && ( refresh == _BOOL || initialiseDone == _BOOL ) && getVersion ( ) > NUM00 ) $F33452 ( result , getSupportedMessage ) return result ; \n\t} \n"}, {"code": "public static $F131 sortCopy ( $F131 objects , Comparer comparer ) { \n\tint len = objects . length ; \n\t$F133 ( copy , len ) $F135 ( System , objects , copy , len ) sort ( copy , comparer ) ; \n\treturn copy ; \n\t} \n"}, {"code": "public static DMLConfig readConfigurationFile ( String configPath ) throws ParseException , FileNotFoundException { \n\tDMLConfig config = new DMLConfig $F72 ; \n\tif ( configPath != null ) { \n\t\ttry { \n\t\t\tconfig = new DMLConfig ( configPath , _BOOL ) ; \n\t\t\t} \n\t\tcatch ( FileNotFoundException fnfe ) { \n\t\t\t$F19652 ( LOG , configPath ) throw fnfe ; \n\t\t\t} \n\t\tcatch ( ParseException e ) { \n\t\t\tthrow e ; \n\t\t\t} \n\t\t} \n\telse { \n\t\ttry { \n\t\t\tconfig = new DMLConfig ( DEFAULT_SYSTEMML_CONFIG_FILEPATH , _BOOL ) ; \n\t\t\t} \n\t\tcatch ( FileNotFoundException fnfe ) { \n\t\t\tLOG . info ( NUM00 + NUM00 ) ; \n\t\t\tconfig = new DMLConfig $F72 ; \n\t\t\t} \n\t\tcatch ( ParseException e ) { \n\t\t\tthrow e ; \n\t\t\t} \n\t\t} \n\treturn config ; \n\t} \n"}, {"code": "default B withDefault ( String key , int value ) $F65298 ( withDefault , key , Integer , value ) "}, {"code": "private $F806 combineResultsFromMultipleReads $F159246 ( buffer , lastRead ) { \n\t$F806 t = new String $F12348 ( buffer , lastRead ) ; \n\t$F7057 ( System , buffer , t ) $F11244 ( System , lastRead , t , buffer ) return t ; \n\t} \n"}, {"code": "private static boolean isRetina $F72 { \n\tif ( SystemInfo . isAppleJvm ) $F2905 ( hasAppleRetinaDevice ) if ( SystemInfo . isMac ) { \n\t\tGraphicsEnvironment e = GraphicsEnvironment . getLocalGraphicsEnvironment ( ) ; \n\t\tGraphicsDevice [ ] devices = e . getScreenDevices ( ) ; \n\t\tfor ( GraphicsDevice device : devices ) $F283363 ( isOracleMacRetinaDevice , device , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected void scanCompilationUnits ( final List < ICompilationUnit > us ) throws IllegalArgumentException , CoreException { \n\tprogressMonitor . beginTask ( $F2310 ( us ) ) ; \n\tfor ( final ICompilationUnit : us ) scanCompilationUnit ( , newSubMonitor ( progressMonitor ) ) ; \n\t$F87122 ( progressMonitor ) } \n"}, {"code": "public void pOln ( Object o ) throws IOException { \n\t$F31458 ( pO , o ) pln ( ) ; \n\t} \n"}, {"code": "private void drawCombat ( final Graphics2D g2d , final int x , final int y , final int width , final int height ) { \n\tRectangle2D wrect = entity . getArea ( ) ; \n\tfinal Rectangle srect = new Rectangle ( ( int ) ( wrect . getX ( ) * IGameScreen . SIZE_UNIT_PIXELS ) , ( int ) ( wrect . getY ( ) * IGameScreen . SIZE_UNIT_PIXELS ) , ( int ) ( wrect . getWidth ( ) * IGameScreen . SIZE_UNIT_PIXELS ) , ( int ) ( wrect . getHeight ( ) * IGameScreen . SIZE_UNIT_PIXELS ) ) ; \n\tint circleHeight = ( int ) ( ( srect . height - NUM00 ) / SQRT2 ) ; \n\tcircleHeight = Math . max ( circleHeight , srect . height - IGameScreen . SIZE_UNIT_PIXELS / NUM00 ) ; \n\tif ( entity . isAttacking ( User . get ( ) ) ) { \n\t\tg2d . setColor ( RING_COLOR_ORANGE ) ; \n\t\tg2d . drawOval ( srect . x - NUM00 , $F6118 ( srect ) - circleHeight , srect . width , circleHeight ) ; \n\t\tg2d . drawOval ( srect . x , $F6118 ( srect ) - circleHeight , srect . width , circleHeight ) ; \n\t\tg2d . drawOval ( srect . x + NUM00 , $F6118 ( srect ) - circleHeight , srect . width , circleHeight ) ; \n\t\tdrawShadedOval ( g2d , srect . x + NUM00 , $F6118 ( srect ) - circleHeight + NUM00 , srect . width - NUM00 , circleHeight - NUM00 , RING_COLOR_ORANGE , _BOOL , _BOOL ) ; \n\t\t} \n\tif ( entity . isBeingAttacked ( ) ) { \n\t\tColor lineColor ; \n\t\tg2d . setColor ( RING_COLOR_RED ) ; \n\t\tif ( entity . isAttacking ( User . get ( ) ) ) { \n\t\t\tlineColor = RING_COLOR_RED ; \n\t\t\tdrawShadedOval ( g2d , srect . x - NUM00 , $F6118 ( srect ) - circleHeight - NUM00 , srect . width + NUM00 , circleHeight + NUM00 , RING_COLOR_RED , _BOOL , _BOOL ) ; \n\t\t\t} \n\t\telse { \n\t\t\tlineColor = RING_COLOR_DARK_RED ; \n\t\t\tg2d . drawOval ( srect . x - NUM00 , $F6118 ( srect ) - circleHeight , srect . width , circleHeight ) ; \n\t\t\tg2d . drawOval ( srect . x , $F6118 ( srect ) - circleHeight , srect . width , circleHeight ) ; \n\t\t\tg2d . drawOval ( srect . x + NUM00 , $F6118 ( srect ) - circleHeight , srect . width , circleHeight ) ; \n\t\t\tdrawShadedOval ( g2d , srect . x + NUM00 , $F6118 ( srect ) - circleHeight + NUM00 , srect . width - NUM00 , circleHeight - NUM00 , RING_COLOR_RED , _BOOL , _BOOL ) ; \n\t\t\tdrawShadedOval ( g2d , srect . x - NUM00 , $F6118 ( srect ) - circleHeight - NUM00 , srect . width + NUM00 , circleHeight + NUM00 , RING_COLOR_ORANGE , _BOOL , _BOOL ) ; \n\t\t\t} \n\t\tEnumSet < Direction > directions = EnumSet . noneOf ( Direction . class ) ; \n\t\tfor ( Entity attacker : entity . getAttackers ( ) ) { \n\t\t\tdirections . add ( Direction . getAreaDirectionTowardsArea ( entity . getArea ( ) , attacker . getArea ( ) ) ) ; \n\t\t\t} \n\t\tdrawArrows ( g2d , srect . x - NUM00 , $F6118 ( srect ) - circleHeight - NUM00 , srect . width + NUM00 , circleHeight + NUM00 , directions , lineColor ) ; \n\t\t} \n\telse if ( entity . isAttacking ( User . get ( ) ) ) { \n\t\tdrawShadedOval ( g2d , srect . x - NUM00 , $F6118 ( srect ) - circleHeight - NUM00 , srect . width + NUM00 , circleHeight + NUM00 , RING_COLOR_ORANGE , _BOOL , _BOOL ) ; \n\t\t} \n\tdrawAttack ( g2d , x , y , width , height ) ; \n\tif ( entity . isDefending ( ) ) { \n\t\tfinal int sx = $F6108 ( srect ) - ICON_OFFSET ; \n\t\tfinal int sy = y + height - NUM00 * ICON_OFFSET ; \n\t\tswitch ( entity . getResolution ( ) ) { \n\t\t\tcase BLOCKED : blockedSprite . draw ( g2d , sx , sy ) ; \n\t\t\t$F597 case MISSED : missedSprite . draw ( g2d , sx , sy ) ; \n\t\t\t$F597 case HIT : hitSprite . draw ( g2d , sx , sy ) ; \n\t\t\t$F597 $F1267 } \n\t\t} \n\t} \n"}, {"code": "public ActivityResolveInfo ( ResolveInfo resolveInfo ) $F6988 ( this , resolveInfo ) "}, {"code": "private static $F7329 postIndexedLSR $F68514 ( offset , environment , instructions , registerNodeValue1 , registerNodeValue2 , immediateNodeValue ) { \n\t$F7336 ( address , environment ) $F7336 ( tmpVar1 , environment ) $F7336 ( tmpVar2 , environment ) $F7336 ( index , environment ) long baseOffset = offset ; \n\t$F43813 ( instructions , ReilHelpers , baseOffset , dw , registerNodeValue1 , address ) instructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dw , registerNodeValue2 , dw , NUM00 + immediateNodeValue , qw , tmpVar1 ) ) ; \n\t$F7364 ( instructions , ReilHelpers , baseOffset , qw , tmpVar1 , dw , dWordBitMask , index ) $F43828 ( instructions , ReilHelpers , baseOffset , dw , registerNodeValue1 , index , tmpVar2 ) $F7341 ( instructions , ReilHelpers , baseOffset , dw , tmpVar2 , dWordBitMask , registerNodeValue1 ) $F7348 ( address , registerNodeValue1 ) } \n"}, {"code": "private void endFormals $F72 { \n\t$F430955 ( hasFormals , _BOOL , buf ) } \n"}, {"code": "public boolean nextIsSep $F72 { \n\tif ( $F15875 ( Character , str , currentPosition ) ) return _BOOL ; \n\telse return _BOOL ; \n\t} \n"}, {"code": "private String extractProjectNameFromUri $F116884 ( uri ) { \n\t$F24867 ( indexFinishProjectName , uri ) int indexStartProjectName = uri . lastIndexOf ( NUM00 ) != - NUM00 ? $F31603 ( uri ) : ( $F31603 ( uri ) ) ; \n\tif ( indexStartProjectName != NUM00 && indexStartProjectName < indexFinishProjectName ) $F102712 ( uri , indexStartProjectName , indexFinishProjectName ) if ( indexStartProjectName != NUM00 ) $F61217 ( uri , indexStartProjectName ) $F1278 } \n"}, {"code": "public final void addReference ( Object ref ) $F207 ( refSet , ref ) "}, {"code": "private void resetNotes2 $F72 { \n\tif ( errorInStatus2 ) { \n\t\tif ( editMode ) $F59925 ( statusText1 , editStatus2 ) else $F59925 ( statusText2 , stdStatus2 ) errorInStatus2 = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public RequirementsBuilder addRequireProperty ( String name , RequirementsBuilder builder ) { \n\taddProperty ( name , builder ) ; \n\trequiredProperties . add ( name ) ; \n\treturn this ; \n\t} \n"}, {"code": "private Cell detectAndAddHit ( float x , float y ) { \n\tfinal Cell cell = checkForNewHit ( x , y ) ; \n\tif ( cell != null ) { \n\t\tCell fillInGapCell = null ; \n\t\t$F462837 ( pattern , mPattern ) $F462857 ( pattern , lastCell , dRow , cell , dColumn , fillInRow , fillInColumn , Math , fillInGapCell , Cell ) $F462862 ( fillInGapCell , mPatternDrawLookup , addCellToPattern ) addCellToPattern ( cell ) ; \n\t\tif ( mEnableHapticFeedback ) { \n\t\t\t$F462866 ( performHapticFeedback , HapticFeedbackConstants ) } \n\t\treturn cell ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public HeadRule ( String dir , String rule ) { \n\t$F35105 ( tmp , P_TAGSETS , rule ) int i , size = tmp . length ; \n\tb_r2l = dir . equals ( DIR_RIGHT_TO_LEFT ) ; \n\ta_tagSets = new HeadTagSet [ size ] ; \n\tfor ( i = NUM00 ; \n\ti < size ; \n\ti ++ ) a_tagSets [ i ] = new HeadTagSet ( tmp [ i ] ) ; \n\t} \n"}, {"code": "public void testNegPosFirstShorter $F72 { \n\t$F50446 $F92469 int aSign = - NUM00 ; \n\tint bSign = NUM00 ; \n\tbyte $F3018 = { \n\t\t- NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F45034 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F7841 ( assertEquals , result ) } \n"}, {"code": "$F1 public $F4203 Future $F4203 submit $F41334 ( task ) { \n\tsynchronized ( this ) { \n\t\t$F5224 ( active ) long timeout = NUM00 ; \n\t\twhile ( queue . remainingCapacity ( ) == NUM00 ) { \n\t\t\ttry { \n\t\t\t\tif ( timeout <= giveupTime ) { \n\t\t\t\t\tThread . sleep ( DEFAULT_SLEEP ) ; \n\t\t\t\t\ttimeout += DEFAULT_SLEEP ; \n\t\t\t\t\t} \n\t\t\t\telse $F11389 } \n\t\t\t$F73196 ( e ) } \n\t\treturn super . submit ( task ) ; \n\t\t} \n\t} \n"}, {"code": "public void testSubtractMathContextDiffScalePosNeg $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\tString b = NUM00 ; \n\tint bScale = - NUM00 ; \n\tString c = NUM00 ; \n\tint cScale = - NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) $F1918 ( bNumber , b , bScale ) MathContext mc = new MathContext ( NUM00 , RoundingMode . DOWN ) ; \n\tBigDecimal result = aNumber . subtract ( bNumber , mc ) ; \n\t$F1925 ( assertEquals , c , result ) $F1928 ( assertEquals , cScale , result ) } \n"}, {"code": "protected XSQLDA allocateXSqlDa ( RowDescriptor rowDescriptor ) { \n\tif ( rowDescriptor == null || rowDescriptor . getCount ( ) == NUM00 ) { \n\t\tfinal XSQLDA xSqlDa = new XSQLDA $F989 ; \n\t\txSqlDa . sqld = xSqlDa . sqln = NUM00 ; \n\t\treturn xSqlDa ; \n\t\t} \n\tfinal XSQLDA xSqlDa = new XSQLDA $F90762 ( rowDescriptor ) ; \n\tfor ( $F90748 ( idx , rowDescriptor ) ) { \n\t\tfinal FieldDescriptor fieldDescriptor = rowDescriptor . getFieldDescriptor ( idx ) ; \n\t\tfinal XSQLVAR xSqlVar = xSqlDa . sqlvar [ idx ] ; \n\t\txSqlVar . sqltype = ( short ) ( fieldDescriptor . getType ( ) | NUM00 ) ; \n\t\txSqlVar . sqlsubtype = ( short ) fieldDescriptor . getSubType ( ) ; \n\t\txSqlVar . sqlscale = ( short ) fieldDescriptor . getScale ( ) ; \n\t\txSqlVar . sqllen = ( short ) fieldDescriptor . getLength ( ) ; \n\t\txSqlVar . sqlind = new ShortByReference $F72 ; \n\t\tfinal int requiredDataSize = fieldDescriptor . isVarying ( ) ? fieldDescriptor . getLength ( ) + NUM00 : fieldDescriptor . getLength ( ) + NUM00 ; \n\t\txSqlVar . sqldata = new Memory ( requiredDataSize ) ; \n\t\t} \n\treturn xSqlDa ; \n\t} \n"}, {"code": "public static void overwrite ( $F2469 vector , long val , int offset , int len ) { \n\tint idx = offset > > NUM00 ; \n\tint bitIdx = offset & NUM00 ; \n\tint truncatedValLen = Math . min ( len , NUM00 - bitIdx ) ; \n\tvector [ idx ] &= ~ ( maskBelow ( truncatedValLen ) < < bitIdx ) ; \n\tvector [ idx ] |= val < < bitIdx ; \n\tif ( len != truncatedValLen ) { \n\t\tlong mask = maskBelow ( len - truncatedValLen ) ; \n\t\tvector [ idx + NUM00 ] &= ~ mask ; \n\t\tvector [ idx + NUM00 ] |= ( val > > > truncatedValLen ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isEmpty ( String string ) { \n\t$F161848 ( string , _BOOL ) $F1964 ( string , EMPTY ) } \n"}, {"code": "public void addScrollViewListener ( WXScrollViewListener scrollViewListener ) $F2202 ( mScrollViewListeners , scrollViewListener ) "}, {"code": "$F146919 ( s , length , _BOOL , sum , i , digit , FormatException ) "}, {"code": "Callbacks tryGetCallbacks ( Callbacks oldCallbacks ) { \n\tsynchronized ( mLock ) { \n\t\t$F5972 ( mStopped ) $F1338 ( mCallbacks ) final Callbacks callbacks = mCallbacks . get ( ) ; \n\t\tif ( callbacks != oldCallbacks ) $F1337 if ( callbacks == null ) $F108257 ( Log , TAG ) return callbacks ; \n\t\t} \n\t} \n"}, {"code": "public void beginUpdateMemoryUsed ( long bytesUsed , boolean willSendEvent ) ; \n"}, {"code": "$F1 public Point translateJava2DToScreen ( Point2D java2DPoint ) { \n\tInsets insets = getInsets ( ) ; \n\tint x = ( int ) ( java2DPoint . getX ( ) * this . scaleX + insets . left ) ; \n\tint y = ( int ) ( java2DPoint . getY ( ) * this . scaleY + insets . top ) ; \n\treturn new Point ( x , y ) ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "protected FastMap $F4 readDeclaredProperties ( WidgetCreatorContext context ) { \n\tFastMap $F4 declaredProperties = new FastMap $F4 $F72 ; \n\tString backColor = context . readWidgetProperty ( NUM00 ) ; \n\tif $F22 ( backColor ) $F70195 ( declaredProperties , backColor ) String fontName = context . readWidgetProperty ( NUM00 ) ; \n\tif $F22 ( fontName ) $F70195 ( declaredProperties , fontName ) String fontSize = context . readWidgetProperty ( NUM00 ) ; \n\tif $F22 ( fontSize ) $F70195 ( declaredProperties , fontSize ) String foreColor = context . readWidgetProperty ( NUM00 ) ; \n\tif $F22 ( foreColor ) $F70195 ( declaredProperties , foreColor ) String justification = context . readWidgetProperty ( NUM00 ) ; \n\tif $F22 ( justification ) $F70195 ( declaredProperties , justification ) String bold = context . readWidgetProperty ( NUM00 ) ; \n\tif $F22 ( bold ) $F70195 ( declaredProperties , bold ) String italic = context . readWidgetProperty ( NUM00 ) ; \n\tif $F22 ( italic ) $F70195 ( declaredProperties , italic ) String subscript = context . readWidgetProperty ( NUM00 ) ; \n\tif $F22 ( subscript ) $F70195 ( declaredProperties , subscript ) String superscript = context . readWidgetProperty ( NUM00 ) ; \n\tif $F22 ( superscript ) $F70195 ( declaredProperties , superscript ) String underline = context . readWidgetProperty ( NUM00 ) ; \n\tif $F22 ( underline ) $F70195 ( declaredProperties , underline ) String strikethrough = context . readWidgetProperty ( NUM00 ) ; \n\tif $F22 ( strikethrough ) $F70195 ( declaredProperties , strikethrough ) return declaredProperties ; \n\t} \n"}, {"code": "private void updateTrafficProjections $F72 { \n\tList < AirMapTraffic > $F204 ( updated ) ; \n\tfor ( AirMapTraffic traffic : allTraffic ) { \n\t\tif ( traffic . getGroundSpeedKt ( ) > - NUM00 && traffic . getTrueHeading ( ) > - NUM00 ) { \n\t\t\tallTraffic . remove ( traffic ) ; \n\t\t\tCoordinate projected = projectedCoordinate ( traffic ) ; \n\t\t\ttraffic . setCoordinate ( projected ) ; \n\t\t\ttraffic . setShowAlert ( _BOOL ) ; \n\t\t\tallTraffic . add ( traffic ) ; \n\t\t\tupdated . add ( traffic ) ; \n\t\t\t} \n\t\t} \n\tnotifyUpdated ( updated ) ; \n\t} \n"}, {"code": "public static void logStackTrace ( Level level , Throwable throwable ) $F16625 ( logStackTrace , level , throwable ) "}, {"code": "public static float computeContrastBetweenColors ( int bg , int fg ) { \n\tfloat bgR = Color . red ( bg ) / NUM00 ; \n\tfloat bgG = Color . green ( bg ) / NUM00 ; \n\tfloat bgB = Color . blue ( bg ) / NUM00 ; \n\t$F121666 ( bgR , Math ) $F121666 ( bgG , Math ) $F121666 ( bgB , Math ) float bgL = NUM00 * bgR + NUM00 * bgG + NUM00 * bgB ; \n\tfloat fgR = Color . red ( fg ) / NUM00 ; \n\tfloat fgG = Color . green ( fg ) / NUM00 ; \n\tfloat fgB = Color . blue ( fg ) / NUM00 ; \n\t$F121666 ( fgR , Math ) $F121666 ( fgG , Math ) $F121666 ( fgB , Math ) float fgL = NUM00 * fgR + NUM00 * fgG + NUM00 * fgB ; \n\treturn Math . abs ( ( fgL + NUM00 ) / ( bgL + NUM00 ) ) ; \n\t} \n"}, {"code": "$F1 public int read $F72 throws IOException { \n\t$F7468 ( ch , super ) if ( ch != - NUM00 ) $F4050 ( branch , ch ) return ch ; \n\t} \n"}, {"code": "private SublimeBaseMenuItem addInternal ( int group , int id , CharSequence title , CharSequence hint , SublimeBaseMenuItem . ItemType itemType , boolean valueProvidedAsync , CharSequence badgeText , boolean showsIconSpace , boolean addedByUser ) { \n\tSublimeBaseMenuItem item ; \n\tboolean isGroupHeader = _BOOL ; \n\tswitch ( itemType ) { \n\t\tcase SEPARATOR : item = new SublimeSeparatorMenuItem ( this , group , id ) ; \n\t\t$F597 case BADGE : item = new SublimeTextWithBadgeMenuItem ( this , group , id , title , hint , valueProvidedAsync , badgeText , showsIconSpace ) ; \n\t\t$F597 case SWITCH : item = new SublimeSwitchMenuItem ( this , group , id , title , hint , valueProvidedAsync , showsIconSpace ) ; \n\t\t$F597 case CHECKBOX : item = new SublimeCheckboxMenuItem ( this , group , id , title , hint , valueProvidedAsync , showsIconSpace ) ; \n\t\t$F597 case GROUP_HEADER : isGroupHeader = _BOOL ; \n\t\titem = new SublimeGroupHeaderMenuItem ( this , group , id , title , hint , valueProvidedAsync , showsIconSpace ) ; \n\t\t$F597 $F1267 item = new SublimeTextMenuItem ( this , group , id , title , hint , valueProvidedAsync , showsIconSpace ) ; \n\t\t$F597 } \n\tcheckExistenceOfGroup ( group ) ; \n\tif ( isGroupHeader ) { \n\t\tcheckIfGroupHeaderAlreadyExistsForGroup ( group ) ; \n\t\tint index = findGroupIndex ( group ) ; \n\t\tif ( index >= NUM00 ) $F42308 ( mItems , index , item ) else $F207 ( mItems , item ) } \n\telse if ( addedByUser ) { \n\t\tif ( group != NO_GROUP_ID ) { \n\t\t\tint lastGroupIndex = findLastGroupIndex ( group ) ; \n\t\t\tmItems . add ( lastGroupIndex == mItems . size ( ) ? lastGroupIndex : lastGroupIndex + NUM00 , item ) ; \n\t\t\t} \n\t\telse $F207 ( mItems , item ) } \n\telse $F207 ( mItems , item ) onItemsChanged ( ) ; \n\treturn item ; \n\t} \n"}, {"code": "public static String decodeBCD ( final short bcd ) { \n\treturn String . format ( NUM00 , $F84701 ( bcd ) , bcd & NUM00 ) ; \n\t} \n"}, {"code": "public void drawBackground ( Graphics g ) { \n\tg . fillRect ( $F73489 ( getWidth , getHeight ) ) ; \n\t} \n"}, {"code": "public void put ( int key , int value ) { \n\tint i = binarySearch ( mKeys , NUM00 , mSize , key ) ; \n\tif ( i >= NUM00 ) { \n\t\tmValues [ i ] = value ; \n\t\t} \n\telse { \n\t\ti = ~ i ; \n\t\tif ( mSize >= mKeys . length ) { \n\t\t\t$F27092 ( n , Math , mSize , mKeys ) $F4120 ( nkeys , n ) $F4120 ( nvalues , n ) $F7057 ( System , mKeys , nkeys ) $F7057 ( System , mValues , nvalues ) mKeys = nkeys ; \n\t\t\tmValues = nvalues ; \n\t\t\t} \n\t\t$F27098 ( mSize , i , System , mKeys , mValues ) mKeys [ i ] = key ; \n\t\tmValues [ i ] = value ; \n\t\tmSize ++ ; \n\t\t} \n\t} \n"}, {"code": "public void addLayoutEditor ( LayoutEditor panel ) { \n\tif $F3817 ( panels ) { \n\t\tfor ( $F2277 ( i , panels ) ) { \n\t\t\tLayoutEditor ed = panels . get ( i ) ; \n\t\t\t$F19899 ( ed , panel ) } \n\t\t} \n\tpanels . add ( panel ) ; \n\t} \n"}, {"code": "void triggerWildcardExpander ( final $F92258 allFiles , final WildcardContext wildcardContext ) throws IOException { \n\t$F7028 ( LOG , allFiles ) if $F2979 ( allFiles ) { \n\t\tfinal String message = String . format ( NUM00 , wildcardContext . getWildcard ( ) ) ; \n\t\tLOG . warn ( message ) ; \n\t\t$F5614 ( message ) } \n\tif ( wildcardExpanderHandler != null ) { \n\t\ttry { \n\t\t\twildcardExpanderHandler . apply ( allFiles ) ; \n\t\t\t} \n\t\tcatch ( final IOException e ) { \n\t\t\tthrow e ; \n\t\t\t} \n\t\tcatch ( final Exception e ) { \n\t\t\t$F7028 ( LOG , e ) throw new IOException $F16296 ( e ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F45332 $F21697 ( MediaType ) $F2512 ( MediaType ) @ CheckPermission ( roles = { \n\tRole . TENANT_ADMIN } \n) $F2513 public IpInterfaceRestRep createIpInterface ( $F2515 ( id ) , IpInterfaceCreateParam createParam ) throws DatabaseException { \n\tHost host = queryObject ( $F2522 , id , _BOOL ) ; \n\tvalidateIpInterfaceData ( createParam , null ) ; \n\tIpInterface ipInterface = new IpInterface $F72 ; \n\tipInterface . setHost ( host . getId ( ) ) ; \n\tipInterface . setId ( URIUtil . createId ( IpInterface . class ) ) ; \n\tpopulateIpInterface ( createParam , ipInterface ) ; \n\t_dbClient . createObject ( ipInterface ) ; \n\tauditOp ( OperationTypeEnum . CREATE_HOST_IPINTERFACE , _BOOL , null , ipInterface . auditParameters ( ) ) ; \n\treturn map ( ipInterface ) ; \n\t} \n"}, {"code": "protected List < IEditProposal > collectEditProposals $F72 { \n\tList < IEditProposal > proposals = new ArrayList < IEditProposal > $F72 ; \n\tView selectedView = getSelectedView ( ) ; \n\tif ( selectedView != null ) { \n\t\tif ( proposalProviders != null ) { \n\t\t\tfor ( IEditProposalProvider provider : proposalProviders ) { \n\t\t\t\tfor ( IEditProposal editProposal : provider . getProposals ( selectedView ) ) { \n\t\t\t\t\tif ( editProposal . isApplicable ( ) ) proposals . add ( editProposal ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn proposals ; \n\t} \n"}, {"code": "public ExtensionQuery $F1947 ( pluginId , extensionPointName , attributeName ) { \n\tthis . pluginId = extensionPointName . contains ( NUM00 ) ? null : pluginId ; \n\tthis . extensionPointName = extensionPointName ; \n\tthis . attributeName = attributeName ; \n\t} \n"}, {"code": "private void ensureNamespaceExists ( Result result ) { \n\tDockerImage image = DockerImage . fromImageName ( result . name ) ; \n\tif ( image . getNamespace ( ) == null ) { \n\t\tresult . name = String . format ( NUM00 , DEFAULT_NAMESPACE , image . getRepository ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F9340 $F15228 of ( K k1 , V v1 , K k2 , V v2 , K k3 , V v3 , K k4 , V v4 , K k5 , V v5 ) { \n\tMap map = of ( ) ; \n\tmap . put ( k1 , v1 ) ; \n\tmap . put ( k2 , v2 ) ; \n\tmap . put ( k3 , v3 ) ; \n\tmap . put ( k4 , v4 ) ; \n\tmap . put ( k5 , v5 ) ; \n\treturn map ; \n\t} \n"}, {"code": "public void testFilteredClassifier $F72 { \n\tInstances data ; \n\tint i ; \n\t$F2329 ( m_FilteredClassifier ) try { \n\t\tdata = getFilteredClassifierData ( ) ; \n\t\tm_FilteredClassifier . buildClassifier ( data ) ; \n\t\tfor ( i = NUM00 ; \n\t\ti < data . numInstances ( ) ; \n\t\ti ++ ) { \n\t\t\tm_FilteredClassifier . classifyInstance ( data . instance ( i ) ) ; \n\t\t\t} \n\t\t} \n\t$F53525 ( fail , e ) } \n"}, {"code": "public static String upperFirstChar ( String string ) { \n\t$F1275 ( string ) if $F71860 ( string ) $F32484 ( string ) $F7542 ( sb , string ) sb . setCharAt ( NUM00 , Character . toUpperCase ( sb . charAt ( NUM00 ) ) ) ; \n\t$F92 ( sb ) } \n"}, {"code": "protected int chooseRandomIndexBasedOnProportions ( $F1986 proportionArray , Random random ) { \n\tdouble probSum ; \n\tdouble val ; \n\tint index ; \n\tdouble sum ; \n\tprobSum = Utils . sum ( proportionArray ) ; \n\tval = random . nextDouble ( ) * probSum ; \n\tindex = NUM00 ; \n\tsum = NUM00 ; \n\twhile ( ( sum <= val ) && ( index < proportionArray . length ) ) { \n\t\tsum += proportionArray [ index ++ ] ; \n\t\t} \n\treturn index - NUM00 ; \n\t} \n"}, {"code": "private void checkWidth ( final $F2027 rect ) { \n\t$F178172 ( x1 , rect ) $F178172 ( y2 , rect ) final int y1 = y2 + rect [ NUM00 ] ; \n\tfinal int x2 = x1 + rect [ NUM00 ] ; \n\t$F45132 ( x1 , pageX1 ) $F12283 ( x2 , pageX2 ) $F12283 ( y1 , pageY1 ) $F45132 ( y2 , pageY2 ) } \n"}, {"code": "$F1113 public static Map < RadComponent , List < RadComponent > > groupSiblings ( $F1113 List < ? extends RadComponent > components ) { \n\tMap < RadComponent , List < RadComponent > > siblingLists = new HashMap < RadComponent , List < RadComponent > > $F72 ; \n\t$F4975 ( components , siblingLists ) if $F10471 ( components ) { \n\t\tRadComponent component = components . get ( NUM00 ) ; \n\t\tsiblingLists . put ( component . getParent ( ) , Collections . singletonList ( component ) ) ; \n\t\treturn siblingLists ; \n\t\t} \n\tfor ( RadComponent component : components ) { \n\t\tRadComponent parent = component . getParent ( ) ; \n\t\tList < RadComponent > children = siblingLists . get ( parent ) ; \n\t\tif ( children == null ) { \n\t\t\tchildren = new ArrayList < RadComponent > $F72 ; \n\t\t\tsiblingLists . put ( parent , children ) ; \n\t\t\t} \n\t\tchildren . add ( component ) ; \n\t\t} \n\treturn siblingLists ; \n\t} \n"}, {"code": "private int countNonNewline $F36827 ( str , off , len ) { \n\tfor ( $F119 ( cnt , len ) ) { \n\t\tfinal int pos = off + cnt ; \n\t\tif $F44927 ( str , pos , UNIX_NEWLINE ) { \n\t\t\treturn cnt ; \n\t\t\t} \n\t\tif $F44927 ( str , pos , CARRIAGE_RETURN ) { \n\t\t\treturn cnt ; \n\t\t\t} \n\t\t} \n\treturn len ; \n\t} \n"}, {"code": "private static int convertSpanToSparseGrid ( int curIx , int span , $F128157 indexes ) { \n\tint lastIx = curIx + span ; \n\tint retSpan = NUM00 ; \n\tfor ( Integer ix : indexes ) { \n\t\tif ( ix <= curIx ) $F598 $F612 ( ix , lastIx ) retSpan ++ ; \n\t\t} \n\treturn retSpan ; \n\t} \n"}, {"code": "$F1 public boolean equals ( Object otherRules ) { \n\t$F3627 ( this , otherRules , _BOOL ) if ( otherRules instanceof ZoneRules ) { \n\t\tZoneRules other = ( ZoneRules ) otherRules ; \n\t\treturn $F3629 ( Arrays , standardTransitions , other ) && $F3629 ( Arrays , standardOffsets , other ) && $F3629 ( Arrays , savingsInstantTransitions , other ) && $F3629 ( Arrays , wallOffsets , other ) && $F3629 ( Arrays , lastRules , other ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public String description $F72 { \n\t$F83 ( sb ) if ( isCombo ( ) ) { \n\t\tint i = NUM00 ; \n\t\tfor ( NewComboLeg leg : m_comboLegs ) { \n\t\t\tif ( i ++ > NUM00 ) $F86 ( sb ) $F11659 ( sb , leg ) } \n\t\t} \n\telse { \n\t\tsb . append ( m_symbol ) ; \n\t\tapp ( sb , m_secType ) ; \n\t\tapp ( sb , m_exchange ) ; \n\t\tif ( m_exchange != null && m_exchange . equals ( NUM00 ) && m_primaryExch != null ) { \n\t\t\tapp ( sb , m_primaryExch ) ; \n\t\t\t} \n\t\tapp ( sb , m_expiry ) ; \n\t\tif ( m_strike != NUM00 ) { \n\t\t\tapp ( sb , m_strike ) ; \n\t\t\t} \n\t\tif ( m_right != Right . None ) { \n\t\t\tapp ( sb , m_right ) ; \n\t\t\t} \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "public void addClaimedSignerRole ( final String claimedSignerRole ) { \n\tif $F38892 ( claimedSignerRole ) $F895 $F30647 ( claimedSignerRoles ) claimedSignerRoles . add ( claimedSignerRole ) ; \n\t} \n"}, {"code": "$F1431 @ GwtIncompatible ( NUM00 ) public static < K extends Object , V extends Object > void writeMap ( $F15232 ( map ) , ObjectOutputStream stream ) throws IOException { \n\t$F27636 ( stream , map ) for ( $F15243 entry : map . entrySet ( ) ) { \n\t\tstream . writeObject ( entry . getKey ( ) ) ; \n\t\tstream . writeObject ( entry . getValue ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "protected void sleep ( int sleepMillis , int sleepNanos ) throws InterruptedException { \n\tThread . sleep ( sleepMillis , sleepNanos ) ; \n\t} \n"}, {"code": "public static void restorePreviousOutAndErrStream $F72 { \n\t$F24126 ( alreadyMuted ) System . setOut ( latestOut ) ; \n\tSystem . setErr ( latestErr ) ; \n\talreadyMuted = _BOOL ; \n\t} \n"}, {"code": "public static BigInteger CRT ( $F114477 congs , $F114477 moduli ) { \n\t$F81942 cs = ArrayConverter . convertListToArray ( congs ) ; \n\t$F81942 ms = ArrayConverter . convertListToArray ( moduli ) ; \n\treturn CRT ( cs , ms ) ; \n\t} \n"}, {"code": "private int measureHeight ( int measureSpec ) { \n\tint result = NUM00 ; \n\t$F20444 ( specMode , MeasureSpec , measureSpec ) $F23132 ( specSize , MeasureSpec , measureSpec ) mAscent = ( int ) mTextPaint . ascent ( ) ; \n\tif ( specMode == MeasureSpec . EXACTLY ) { \n\t\tresult = specSize ; \n\t\t} \n\telse { \n\t\tresult = ( int ) ( - mAscent + mTextPaint . descent ( ) ) + getPaddingTop ( ) + getPaddingBottom ( ) ; \n\t\t$F23140 ( specMode , MeasureSpec , result , Math , specSize ) } \n\treturn result ; \n\t} \n"}, {"code": "$F69921 ( b , off , len , length , data , enlarge , System , this ) "}, {"code": "public void testCase17 $F72 { \n\t$F221347 $F221350 int aSign = NUM00 ; \n\tint bSign = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F221355 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "protected < T extends TaskServiceDocument $F11685 , E extends Enum $F11685 > T waitForTaskCompletion $F92641 ( documentSelfLink , type ) throws Throwable { \n\treturn waitForPropertyValue ( documentSelfLink , type , TaskServiceDocument . FIELD_NAME_TASK_STAGE , Arrays . asList ( TaskStage . FINISHED , TaskStage . FAILED , TaskStage . CANCELLED ) , _BOOL , waitForStageChangeCountLonger ( ) ) ; \n\t} \n"}, {"code": "public Action ( String content , int priority ) { \n\t$F10588 ( this , content ) this . priority = priority ; \n\t} \n"}, {"code": "private List < EndIsland > findSurroundingIslands $F2026 ( chunkX , chunkY , chunksPerFragmentX , chunksPerFragmentY ) { \n\tList < EndIsland > result = new LinkedList < EndIsland > $F72 ; \n\tfor ( int y = - SURROUNDING_CHUNKS ; \n\ty <= chunksPerFragmentY + SURROUNDING_CHUNKS ; \n\ty ++ ) { \n\t\tfor ( int x = - SURROUNDING_CHUNKS ; \n\t\tx <= chunksPerFragmentX + SURROUNDING_CHUNKS ; \n\t\tx ++ ) { \n\t\t\tEndIsland island = tryCreateEndIsland ( chunkX + x , chunkY + y ) ; \n\t\t\t$F1140 ( island , result ) } \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "void insertFunction2 ( ByteBuffer bb ) { \n\t$F31263 ( baseSec , windowId ) bb . putInt ( baseSec ) ; \n\tInteger operId = operatorId ; \n\tfor ( $F6268 ( i ) ) { \n\t\tbyte num = ( byte ) ( operId > > NUM00 * ( NUM00 - i ) ) ; \n\t\tbb . put ( num ) ; \n\t\t} \n\tbb . putShort ( ( short ) ( windowId & NUM00 ) ) ; \n\tfor ( $F6268 ( i ) ) { \n\t\tbyte num = ( byte ) ( tupleId > > NUM00 * ( NUM00 - i ) ) ; \n\t\tbb . put ( num ) ; \n\t\t} \n\t} \n"}, {"code": "private static boolean calculateGap ( Rectangle a , Rectangle b , Rectangle gap ) { \n\tif $F82382 ( a , b ) { \n\t\tgap . width = NUM00 ; \n\t\treturn _BOOL ; \n\t\t} \n\tint ax1 = a . x ; \n\tint ax2 = $F6108 ( a ) ; \n\tint ay1 = a . y ; \n\tint ay2 = $F6118 ( a ) ; \n\tint bx1 = b . x ; \n\tint bx2 = $F6108 ( b ) ; \n\tint by1 = b . y ; \n\tint by2 = $F6118 ( b ) ; \n\tint xOverlap = Math . min ( ax2 , bx2 ) - Math . max ( ax1 , bx1 ) ; \n\tint yOverlap = Math . min ( ay2 , by2 ) - Math . max ( ay1 , by1 ) ; \n\tif ( xOverlap <= NUM00 && yOverlap <= NUM00 ) { \n\t\tgap . width = NUM00 ; \n\t\treturn _BOOL ; \n\t\t} \n\tif ( xOverlap > NUM00 ) { \n\t\tgap . x = Math . max ( ax1 , bx1 ) ; \n\t\tgap . y = ( ay1 > by1 ) ? by2 : ay2 ; \n\t\tgap . width = xOverlap ; \n\t\tgap . height = - yOverlap ; \n\t\t} \n\tif ( yOverlap > NUM00 ) { \n\t\tgap . x = ( ax1 > bx1 ) ? bx2 : ax2 ; \n\t\tgap . y = Math . max ( ay1 , by1 ) ; \n\t\tgap . width = - xOverlap ; \n\t\tgap . height = yOverlap ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean nextTile $F72 throws ModelControlException { \n\tboolean movedToRow = super . nextTile ( ) ; \n\tif ( movedToRow ) { \n\t\tcurTile = getTileIndex ( ) ; \n\t\tsetDisplayFieldValue ( TXT_PARENT_INDEX , parentIdx ) ; \n\t\tsetDisplayFieldValue ( TXT_CHOICE , choices [ curTile ] ) ; \n\t\tsetDisplayFieldValue ( TXT_INDEX , Integer . toString ( curTile ) ) ; \n\t\t} \n\treturn movedToRow ; \n\t} \n"}, {"code": "$F25527 ( REDUNDANT_OP_COMPACT_THRESHOLD , redundantOpCount , lruEntries ) "}, {"code": "public boolean hasMyomerBooster $F72 { \n\tfor ( Mounted mEquip : getMisc ( ) ) { \n\t\tMiscType mtype = ( MiscType ) mEquip . getType ( ) ; \n\t\tif ( mtype . hasFlag ( MiscType . F_MASC ) && ! mEquip . isInoperable ( ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static boolean isIntentAvailable ( Context context , String action ) { \n\tfinal PackageManager packageManager = context . getPackageManager ( ) ; \n\tfinal Intent intent = new Intent ( action ) ; \n\t$F12258 ( Log , MP_TAG , action ) $F45549 list = packageManager . queryIntentServices ( intent , PackageManager . MATCH_DEFAULT_ONLY ) ; \n\treturn $F3816 ( list ) ; \n\t} \n"}, {"code": "$F61852 public void test_wrap_02 $F72 throws SSLException { \n\tString host = NUM00 ; \n\tint port = NUM00 ; \n\t$F30909 ( bb , ByteBuffer ) $F30907 ( bbA , ByteBuffer ) SSLEngine sse = getEngine ( host , port ) ; \n\tsse . setUseClientMode ( _BOOL ) ; \n\ttry { \n\t\tsse . wrap ( bbA , - NUM00 , NUM00 , bb ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F191186 try { \n\t\tsse . wrap ( bbA , NUM00 , - NUM00 , bb ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F191186 try { \n\t\tsse . wrap ( bbA , bbA . length + NUM00 , bbA . length , bb ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F191186 try { \n\t\tsse . wrap ( bbA , NUM00 , bbA . length + NUM00 , bb ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F191186 } \n"}, {"code": "private void sendCONNECTRequest $F72 throws IOException { \n\t$F287270 ( port , url ) requests . set ( NUM00 , HTTP_CONNECT + NUM00 + connectRequestURI ( url ) + NUM00 + httpVersion , null ) ; \n\trequests . setIfNotSet ( NUM00 , userAgent ) ; \n\t$F107310 ( host , url ) if ( port != - NUM00 && port != url . getDefaultPort ( ) ) { \n\t\thost += NUM00 + String . valueOf ( port ) ; \n\t\t} \n\trequests . setIfNotSet ( NUM00 , host ) ; \n\trequests . setIfNotSet ( NUM00 , acceptString ) ; \n\tif ( http . getHttpKeepAliveSet ( ) ) { \n\t\trequests . setIfNotSet ( NUM00 , NUM00 ) ; \n\t\t} \n\tsetPreemptiveProxyAuthentication ( requests ) ; \n\tif $F58998 ( logger , PlatformLogger ) { \n\t\t$F7404 ( logger , requests ) } \n\thttp . writeRequests ( requests , null ) ; \n\t} \n"}, {"code": "private boolean isSelfSigned ( X509Certificate cert ) { \n\treturn signedBy ( cert , cert ) ; \n\t} \n"}, {"code": "$F133772 ( RequestMethod ) $F4586 public RestWrapper insert ( $F100302 $F100303 UserRoles userRoles , BindingResult bindingResult , Principal principal ) { \n\tRestWrapper restWrapper = null ; \n\t$F100315 ( bindingResult , bindingResultError ) try { \n\t\tcom . wipro . ats . bdre . md . dao . jpa . UserRoles jpaUserRoles = new com . wipro . ats . bdre . md . dao . jpa . UserRoles $F72 ; \n\t\tjpaUserRoles . setUserRoleId ( userRoles . getUserRoleId ( ) ) ; \n\t\tjpaUserRoles . setRole ( userRoles . getRole ( ) ) ; \n\t\tUsers users = new Users $F72 ; \n\t\tusers . setUsername ( userRoles . getUsername ( ) ) ; \n\t\tjpaUserRoles . setUsers ( users ) ; \n\t\tInteger userRolesId = userRolesDAO . insert ( jpaUserRoles ) ; \n\t\tuserRoles . setUserRoleId ( userRolesId ) ; \n\t\t$F4608 ( restWrapper , userRoles , RestWrapper ) LOGGER . info ( NUM00 + userRoles . getUserRoleId ( ) + NUM00 + principal . getName ( ) + userRoles ) ; \n\t\t} \n\t$F20495 ( LOGGER , e , restWrapper , RestWrapper ) return restWrapper ; \n\t} \n"}, {"code": "public Set $F29999 nearestWords ( final int distance , final WordToken ... start ) { \n\treturn nearestWords ( distance , null , Arrays . asList ( start ) ) ; \n\t} \n"}, {"code": "public DERUTCTime ( Date time ) { \n\t$F108456 ( dateF ) dateF . setTimeZone ( new SimpleTimeZone ( NUM00 , NUM00 ) ) ; \n\tthis . time = Strings . toByteArray ( dateF . format ( time ) ) ; \n\t} \n"}, {"code": "public void add ( String category , $F806 titles , $F1986 values ) $F148024 ( mCategories , category , mTitles , titles , mValues , values ) "}, {"code": "public void rewind $F72 { \n\tsynchronized ( used ) { \n\t\tfor ( ParameterPair pair : used ) { \n\t\t\tcurrent . addParameter ( pair . option , pair . value ) ; \n\t\t\t} \n\t\t$F725 ( used ) } \n\t} \n"}, {"code": "public $F536600 merge ( $F536600 intervals ) { \n\t$F536600 $F204 ( res ) ; \n\t$F45556 ( intervals , res ) $F84242 ( Collections , intervals ) Interval prev = null ; \n\tfor ( Interval i : intervals ) { \n\t\tif ( prev == null || prev . end < i . start ) { \n\t\t\tres . add ( i ) ; \n\t\t\tprev = i ; \n\t\t\t} \n\t\telse if ( i . end > prev . end ) { \n\t\t\tprev . end = i . end ; \n\t\t\t} \n\t\t} \n\treturn res ; \n\t} \n"}, {"code": "private String formatType ( Object typeRep ) { \n\tStringTokenizer tokenizer = new StringTokenizer ( typeRep . toString ( ) , NUM00 , _BOOL ) ; \n\t$F83 ( sb ) while $F14498 ( tokenizer ) { \n\t\t$F8095 ( token , tokenizer ) if ( $F1276 ( token ) || token . lastIndexOf ( NUM00 ) == - NUM00 ) sb . append ( token ) ; \n\t\telse { \n\t\t\t$F24867 ( index , token ) sb . append ( token . substring ( index + NUM00 ) ) ; \n\t\t\t} \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "$F1113 public static String sha1 ( $F1113 File keyStoreFile ) throws Exception $F59662 ( sha1 , keyStoreFile ) "}, {"code": "$F26827 ( w , h , oldw , oldh , super , setupBounds , setupPaints , invalidate ) "}, {"code": "$F1 public void panDomainAxes ( double panRange , PlotRenderingInfo info , Point2D source ) { \n\tXYPlot subplot = findSubplot ( info , source ) ; \n\t$F2329 ( subplot ) if ( ! subplot . isDomainPannable ( ) ) $F932 PlotRenderingInfo subplotInfo = info . getSubplotInfo ( info . getSubplotIndex ( source ) ) ; \n\t$F2329 ( subplotInfo ) for ( int i = NUM00 ; \n\ti < subplot . getDomainAxisCount ( ) ; \n\ti ++ ) { \n\t\tValueAxis domainAxis = subplot . getDomainAxis ( i ) ; \n\t\tif ( domainAxis != null ) { \n\t\t\tdomainAxis . pan ( panRange ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void init $F72 { \n\tstartController = new PourStartController $F72 ; \n\tstartController . setCheckView ( this ) ; \n\twaveController = new WaveController $F72 ; \n\twaveController . setCheckView ( this ) ; \n\tPourFinishController finishController = new PourFinishController $F72 ; \n\tfinishController . setCheckView ( this ) ; \n\tTickController tickController = new TickController $F72 ; \n\ttickController . setCheckView ( this ) ; \n\tList < BaseController > $F204 ( finishControllers ) ; \n\tfinishControllers . add ( finishController ) ; \n\tfinishControllers . add ( tickController ) ; \n\tthis . finishControllers = finishControllers ; \n\t} \n"}, {"code": "private JLabel createIconLabel ( JCheckBox checkBox ) { \n\tcheckBox . setOpaque ( _BOOL ) ; \n\tcheckBox . setSize ( checkBox . getMinimumSize ( ) ) ; \n\tImage image = new BufferedImage ( checkBox . getWidth ( ) , checkBox . getHeight ( ) , Transparency . TRANSLUCENT ) ; \n\t$F27516 ( g , image ) checkBox . paint ( g ) ; \n\t$F355 ( g ) return new JLabel ( new ImageIcon ( image ) ) ; \n\t} \n"}, {"code": "public void closeWindow $F72 { \n\tWindowEvent ev = new WindowEvent ( frame , WindowEvent . WINDOW_CLOSING ) ; \n\tframe . dispatchEvent ( ev ) ; \n\t} \n"}, {"code": "private void populateHostData ( Host host , HostParam param ) { \n\tif $F425662 ( param ) { \n\t\thost . setLabel ( param . getName ( ) ) ; \n\t\t} \n\tif ( param . getHostName ( ) != null ) { \n\t\thost . setHostName ( param . getHostName ( ) ) ; \n\t\t} \n\tif ( param . getCluster ( ) != null ) { \n\t\thost . setCluster ( param . getCluster ( ) ) ; \n\t\t} \n\tif ( param . getOsVersion ( ) != null ) { \n\t\thost . setOsVersion ( param . getOsVersion ( ) ) ; \n\t\t} \n\tif ( param . getUserName ( ) != null ) { \n\t\thost . setUsername ( param . getUserName ( ) ) ; \n\t\t} \n\tif ( param . getPassword ( ) != null ) { \n\t\t$F27486 ( host , param ) } \n\tif ( param . getPortNumber ( ) != null ) { \n\t\thost . setPortNumber ( param . getPortNumber ( ) ) ; \n\t\t} \n\tif ( param . getUseSsl ( ) != null ) { \n\t\thost . setUseSSL ( param . getUseSsl ( ) ) ; \n\t\t} \n\tif ( param . getType ( ) != null ) { \n\t\thost . setType ( param . getType ( ) ) ; \n\t\t} \n\tif ( param . getDiscoverable ( ) != null ) { \n\t\thost . setDiscoverable ( param . getDiscoverable ( ) ) ; \n\t\t} \n\tif ( param . getVcenterDataCenter ( ) != null ) { \n\t\thost . setVcenterDataCenter ( NullColumnValueGetter . isNullURI ( param . getVcenterDataCenter ( ) ) ? NullColumnValueGetter . getNullURI ( ) : param . getVcenterDataCenter ( ) ) ; \n\t\t} \n\tCluster cluster = null ; \n\tif ( ! NullColumnValueGetter . isNullURI ( param . getCluster ( ) ) ) { \n\t\tcluster = queryObject ( Cluster . class , param . getCluster ( ) , _BOOL ) ; \n\t\tif ( ! NullColumnValueGetter . isNullURI ( cluster . getVcenterDataCenter ( ) ) ) { \n\t\t\thost . setVcenterDataCenter ( cluster . getVcenterDataCenter ( ) ) ; \n\t\t\t} \n\t\tif ( ! NullColumnValueGetter . isNullURI ( cluster . getProject ( ) ) ) { \n\t\t\thost . setProject ( cluster . getProject ( ) ) ; \n\t\t\t} \n\t\t} \n\tif ( param . getBootVolume ( ) != null ) { \n\t\thost . setBootVolumeId ( NullColumnValueGetter . isNullURI ( param . getBootVolume ( ) ) ? NullColumnValueGetter . getNullURI ( ) : param . getBootVolume ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F5466 public AvdInfo createOrUpdateAvd ( $F5466 AvdInfo currentInfo , $F1113 String avdName , $F1113 Device device , $F1113 SystemImageDescription systemImageDescription , $F1113 ScreenOrientation orientation , boolean isCircular , $F5466 String sdCard , $F5466 File skinFolder , $F1113 $F2539 hardwareProperties , boolean createSnapshot ) { \n\tif $F931 ( initIfNecessary ) $F1337 File avdFolder ; \n\ttry { \n\t\tif ( currentInfo != null ) { \n\t\t\tavdFolder = new File ( currentInfo . getDataFolderPath ( ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tavdFolder = AvdInfo . getDefaultAvdFolder ( myAvdManager , avdName , myFileOp , _BOOL ) ; \n\t\t\t} \n\t\t} \n\tcatch ( AndroidLocation . AndroidLocationException e ) { \n\t\t$F30202 ( IJ_LOG , avdName , e ) $F1274 } \n\tDimension resolution = device . getScreenSize ( orientation ) ; \n\tassert resolution != null ; \n\tString skinName = null ; \n\tif ( skinFolder == null && isCircular ) { \n\t\tskinFolder = getRoundSkin ( systemImageDescription ) ; \n\t\t} \n\tif ( FileUtil . filesEqual ( skinFolder , AvdWizardUtils . NO_SKIN ) ) { \n\t\tskinFolder = null ; \n\t\t} \n\tif ( skinFolder == null ) { \n\t\tskinName = String . format ( NUM00 , Math . round ( resolution . getWidth ( ) ) , Math . round ( resolution . getHeight ( ) ) ) ; \n\t\t} \n\tif ( orientation == ScreenOrientation . LANDSCAPE ) { \n\t\thardwareProperties . put ( HardwareProperties . HW_INITIAL_ORIENTATION , ScreenOrientation . LANDSCAPE . getShortDisplayValue ( ) . toLowerCase ( Locale . ROOT ) ) ; \n\t\t} \n\tif ( currentInfo != null && ! $F3174 ( avdName , currentInfo ) ) { \n\t\tboolean success = myAvdManager . moveAvd ( currentInfo , avdName , currentInfo . getDataFolderPath ( ) , SDK_LOG ) ; \n\t\t$F81346 ( success ) } \n\treturn myAvdManager . createAvd ( avdFolder , avdName , systemImageDescription . getSystemImage ( ) , skinFolder , skinName , sdCard , hardwareProperties , device . getBootProps ( ) , createSnapshot , _BOOL , currentInfo != null , SDK_LOG ) ; \n\t} \n"}, {"code": "public void engineDeleteEntry ( String alias ) throws KeyStoreException { \n\tsynchronized ( entries ) { \n\t\tentries . remove ( $F91593 ( alias , Locale ) ) ; \n\t\t} \n\t} \n"}, {"code": "public DisjointSets ( int numElements ) { \n\t$F3936 ( array , numElements ) $F99493 ( Arrays , array ) } \n"}, {"code": "public final void printClusters ( PrintWriter out , List < ClusterData > clusterData , $F2027 matIndexToMsgInternalId ) throws AdeException { \n\t$F179708 ( m_finalClusters , updateClusters , clusterData , matIndexToMsgInternalId ) for ( Map . Entry < String , $F2306 > entry : m_finalClusters . entrySet ( ) ) { \n\t\t$F71216 ( n , entry ) final $F2306 c = entry . getValue ( ) ; \n\t\t$F70096 ( out , n ) for ( int m : c ) { \n\t\t\tout . printf ( NUM00 , matIndexToMsgInternalId [ m ] ) ; \n\t\t\t} \n\t\t$F21416 ( out ) } \n\t} \n"}, {"code": "protected void addToGUI ( JPanel gui , JTextField b , String cmd ) { \n\tb . setActionCommand ( cmd ) ; \n\tb . addActionListener ( this ) ; \n\tgui . add ( b ) ; \n\t} \n"}, {"code": "$F233307 ( index , mCategories , mValues ) "}, {"code": "static TokenStream wrap ( String fieldName , Analyzer indexAnalyzer , String content , char splitChar ) throws IOException { \n\tif ( indexAnalyzer . getOffsetGap ( fieldName ) != NUM00 ) $F29526 ( fieldName ) $F12747 ( splitCharIdx , content , splitChar ) if ( splitCharIdx == - NUM00 ) { \n\t\treturn indexAnalyzer . tokenStream ( fieldName , content ) ; \n\t\t} \n\tTokenStream subTokenStream = indexAnalyzer . tokenStream ( fieldName , content . substring ( NUM00 , splitCharIdx ) ) ; \n\treturn new MultiValueTokenStream ( subTokenStream , fieldName , indexAnalyzer , content , splitChar , splitCharIdx ) ; \n\t} \n"}, {"code": "public final boolean check_trace ( Polyline p_polyline , int p_half_width , int p_layer , NetNosList p_net_no_arr , int p_clearance_class_no , int p_max_recursion_depth , int p_max_via_recursion_depth , int p_max_spring_over_recursion_depth ) { \n\tAwtreeShapeSearch search_tree = search_tree_manager . get_default_tree ( ) ; \n\tint compensated_half_width = p_half_width + search_tree . get_clearance_compensation ( p_clearance_class_no , p_layer ) ; \n\tArrayList < ShapeTile > trace_shapes = p_polyline . offset_shapes ( compensated_half_width , NUM00 , p_polyline . corner_count ( ) ) ; \n\tfor ( $F3836 ( index , trace_shapes ) ) { \n\t\tShapeTile curr_trace_shape = trace_shapes . get ( index ) ; \n\t\tBrdFromSide from_side = new BrdFromSide ( p_polyline , index + NUM00 , curr_trace_shape ) ; \n\t\tboolean check_shove_ok = shove_trace_algo . shove_trace_check ( curr_trace_shape , from_side , null , p_layer , p_net_no_arr , p_clearance_class_no , p_max_recursion_depth , p_max_via_recursion_depth , p_max_spring_over_recursion_depth , null ) ; \n\t\t$F25096 ( check_shove_ok , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void delete ( File fileOrFolder ) throws IOException { \n\tif ( fileOrFolder != null ) delete ( fileOrFolder . toPath ( ) ) ; \n\t} \n"}, {"code": "public static $F1986 expandArrayD ( int bufferSize , $F1986 currentArray ) { \n\tif ( currentArray == null ) { \n\t\treturn new double [ bufferSize * NUM00 ] ; \n\t\t} \n\tint length = currentArray . length ; \n\t$F1986 ret = new double [ length + bufferSize * NUM00 ] ; \n\t$F135 ( System , currentArray , ret , length ) return ret ; \n\t} \n"}, {"code": "$F1431 public void postProcessBeanFactory ( ConfigurableListableBeanFactory configurableListableBeanFactory ) { \n\tif ( configurableListableBeanFactory . containsBean ( sessionFactoryBeanName ) ) { \n\t\tBeanDefinition sessionFactoryBeanDefinition = configurableListableBeanFactory . getBeanDefinition ( sessionFactoryBeanName ) ; \n\t\tMutablePropertyValues propertyValues = sessionFactoryBeanDefinition . getPropertyValues ( ) ; \n\t\tif ( mappingResources != null ) { \n\t\t\tPropertyValue propertyValue = propertyValues . getPropertyValue ( NUM00 ) ; \n\t\t\tif ( propertyValue == null ) { \n\t\t\t\tpropertyValue = new PropertyValue ( NUM00 , new ArrayList $F72 ) ; \n\t\t\t\tpropertyValues . addPropertyValue ( propertyValue ) ; \n\t\t\t\t} \n\t\t\tList existingMappingResources = ( List ) propertyValue . getValue ( ) ; \n\t\t\texistingMappingResources . addAll ( mappingResources ) ; \n\t\t\t} \n\t\tif ( annotatedClasses != null ) { \n\t\t\tPropertyValue propertyValue = propertyValues . getPropertyValue ( NUM00 ) ; \n\t\t\tif ( propertyValue == null ) { \n\t\t\t\tpropertyValue = new PropertyValue ( NUM00 , new ArrayList $F72 ) ; \n\t\t\t\tpropertyValues . addPropertyValue ( propertyValue ) ; \n\t\t\t\t} \n\t\t\tList existingMappingResources = ( List ) propertyValue . getValue ( ) ; \n\t\t\texistingMappingResources . addAll ( annotatedClasses ) ; \n\t\t\t} \n\t\tif ( configLocations != null ) { \n\t\t\tPropertyValue propertyValue = propertyValues . getPropertyValue ( NUM00 ) ; \n\t\t\tif ( propertyValue == null ) { \n\t\t\t\tpropertyValue = new PropertyValue ( NUM00 , new ArrayList $F72 ) ; \n\t\t\t\tpropertyValues . addPropertyValue ( propertyValue ) ; \n\t\t\t\t} \n\t\t\tList existingConfigLocations = ( List ) propertyValue . getValue ( ) ; \n\t\t\texistingConfigLocations . addAll ( configLocations ) ; \n\t\t\t} \n\t\tif ( hibernateProperties != null ) { \n\t\t\tPropertyValue propertyValue = propertyValues . getPropertyValue ( NUM00 ) ; \n\t\t\tif ( propertyValue == null ) { \n\t\t\t\tpropertyValue = new PropertyValue ( NUM00 , $F856 ) ; \n\t\t\t\tpropertyValues . addPropertyValue ( propertyValue ) ; \n\t\t\t\t} \n\t\t\tProperties existingHibernateProperties = ( Properties ) propertyValue . getValue ( ) ; \n\t\t\texistingHibernateProperties . putAll ( hibernateProperties ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tthrow new NoSuchBeanDefinitionException $F70412 ( sessionFactoryBeanName ) ; \n\t\t} \n\t} \n"}, {"code": "protected int encode ( double value , double lower , double upper , int nbits ) { \n\tif ( value < lower ) $F1082 int maxval = ( int ) ( Math . pow ( NUM00 , nbits ) - NUM00 ) ; \n\tif ( value >= upper ) return maxval ; \n\treturn ( int ) ( ( value - lower ) * ( ( maxval - NUM00 ) / ( upper - lower ) ) ) ; \n\t} \n"}, {"code": "public long skipBytes ( long n ) throws IOException { \n\tlong count = NUM00 ; \n\tlong gotsofar = NUM00 ; \n\tif ( inputStream == null ) { \n\t\treopen ( ) ; \n\t\tif ( inputStream == null ) { \n\t\t\treopen ( ) ; \n\t\t\t$F3575 } \n\t\t} \n\twhile ( count < n ) { \n\t\tgotsofar = inputStream . skip ( n - count ) ; \n\t\tif ( gotsofar == NUM00 ) { \n\t\t\t$F19652 ( Debug , n ) $F597 } \n\t\tcount += gotsofar ; \n\t\t} \n\tcount ( ( int ) count ) ; \n\treturn count ; \n\t} \n"}, {"code": "private void createLock $F72 throws IOException { \n\tsynchronized ( LockableFileWriter . class ) { \n\t\tif $F380343 ( lockFile ) $F152083 ( lockFile ) $F60829 ( lockFile ) } \n\t} \n"}, {"code": "public void handleTblDSAttributeMapListHrefActionRequest ( RequestInvocationEvent event ) throws ModelControlException { \n\ttry { \n\t\tMap values = getValues ( ) ; \n\t\tonBeforeSaveProfile ( values ) ; \n\t\t$F50322 ( setPageSessionAttribute , PROPERTY_ATTRIBUTE , values ) WSPPServiceDSAttributeMapListEditViewBean vb = ( WSPPServiceDSAttributeMapListEditViewBean ) getViewBean ( WSPPServiceDSAttributeMapListEditViewBean . class ) ; \n\t\tunlockPageTrail ( ) ; \n\t\tpassPgSessionMap ( vb ) ; \n\t\tvb . populateValues ( ( String ) getDisplayFieldValue ( NUM00 ) ) ; \n\t\t$F50333 ( vb , getRequestContext ) } \n\t$F123309 ( setInlineAlertMessage , CCAlert , e , forwardTo ) } \n"}, {"code": "private V doGet ( Object key ) { \n\t$F61745 ( key ) Comparator < $F35140 > cmp = comparator ; \n\touter : for ( $F589 ) { \n\t\tfor ( $F9341 b = findPredecessor ( key , cmp ) , n = b . next ; \n\t\t; \n\t\t) { \n\t\t\tObject v ; \n\t\t\tint c ; \n\t\t\tif ( n == null ) $F59811 $F35175 ( f , n ) $F45438 ( n , b ) if ( ( v = n . value ) == null ) { \n\t\t\t\tn . helpDelete ( b , f ) ; \n\t\t\t\t$F597 } \n\t\t\tif ( b . value == null || v == n ) $F597 if ( ( c = cpr ( cmp , key , n . key ) ) == NUM00 ) { \n\t\t\t\t$F1431 V vv = ( V ) v ; \n\t\t\t\treturn vv ; \n\t\t\t\t} \n\t\t\tif ( c < NUM00 ) $F59811 b = n ; \n\t\t\tn = f ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "void handleSwfLoadedEvent ( SwfLoadedEvent e ) { \n\tdumpSwfLoadedLine ( e ) ; \n\t} \n"}, {"code": "private void quickReply $F72 { \n\tquickReplySmsMessage = smsPopupPager . getActiveMessage ( ) ; \n\tquickReply ( quickReplySmsMessage . getReplyText ( ) ) ; \n\t} \n"}, {"code": "$F1 protected synchronized void write ( long offset , $F96 b ) throws IOException { \n\tif ( byteBuffer != null ) { \n\t\tbyteBuffer . position ( ( int ) offset ) ; \n\t\tbyteBuffer . put ( b ) ; \n\t\t} \n\telse { \n\t\tthrow new IOException $F29591 ( getPath ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean hasChanged $F72 { \n\treturn System . identityHashCode ( config ) != initialHash ; \n\t} \n"}, {"code": "void fixCompatibility ( View root ) { \n\tQueue < View > queue = new LinkedList < View > $F72 ; \n\tqueue . add ( root ) ; \n\tView view = null ; \n\twhile $F22655 ( view , queue ) { \n\t\tif ( view instanceof ViewGroup ) { \n\t\t\tViewGroup group = ( ViewGroup ) view ; \n\t\t\tfor ( $F140290 ( i , group ) ) { \n\t\t\t\tqueue . add ( group . getChildAt ( i ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected abstract Set < SocketAddress > bindInternal ( List < ? extends SocketAddress > localAddresses ) throws Exception ; \n"}, {"code": "public void substituteHeader ( int state , String header ) throws AuthLoginException { \n\t$F21954 ( debug , state , header ) if ( state > stateLength ) { \n\t\tthrow new AuthLoginException ( bundleName , NUM00 , $F327671 ( state ) ) ; \n\t\t} \n\t$F12090 ext = getCallback ( state ) ; \n\tif $F51363 ( ext ) { \n\t\t$F12117 ( bundleName ) } \n\tif ( ( header != null ) && $F35625 ( header ) ) { \n\t\tPagePropertiesCallback pc = ( PagePropertiesCallback ) ( ( $F12090 ) internal . get ( state - NUM00 ) ) [ NUM00 ] ; \n\t\tpc . setHeader ( header ) ; \n\t\t} \n\t} \n"}, {"code": "public static Service createService ( PatternTimetable timetable ) { \n\tCalendar calendar = new Calendar $F72 ; \n\tcalendar . monday = timetable . monday ? NUM00 : NUM00 ; \n\tcalendar . tuesday = timetable . tuesday ? NUM00 : NUM00 ; \n\tcalendar . wednesday = timetable . wednesday ? NUM00 : NUM00 ; \n\tcalendar . thursday = timetable . thursday ? NUM00 : NUM00 ; \n\tcalendar . friday = timetable . friday ? NUM00 : NUM00 ; \n\tcalendar . saturday = timetable . saturday ? NUM00 : NUM00 ; \n\tcalendar . sunday = timetable . sunday ? NUM00 : NUM00 ; \n\t$F4000 ( nameBuilder ) nameBuilder . append ( timetable . monday ? NUM00 : NUM00 ) ; \n\tnameBuilder . append ( timetable . monday ? NUM00 : NUM00 ) ; \n\tnameBuilder . append ( timetable . monday ? NUM00 : NUM00 ) ; \n\tnameBuilder . append ( timetable . monday ? NUM00 : NUM00 ) ; \n\tnameBuilder . append ( timetable . monday ? NUM00 : NUM00 ) ; \n\tnameBuilder . append ( timetable . monday ? NUM00 : NUM00 ) ; \n\tnameBuilder . append ( timetable . monday ? NUM00 : NUM00 ) ; \n\tService service = new Service $F3362 ( nameBuilder ) ; \n\tcalendar . start_date = NUM00 ; \n\tcalendar . end_date = NUM00 ; \n\tservice . calendar = calendar ; \n\treturn service ; \n\t} \n"}, {"code": "public boolean remove ( ImageInfo object ) { \n\tfinal int location = getLocation ( object ) ; \n\tfinal boolean removed = data . remove ( object ) ; \n\tnotifyItemRemoved ( location ) ; \n\treturn removed ; \n\t} \n"}, {"code": "public T allowedUsers ( User ... users ) { \n\tList $F284080 usersList = Arrays . asList ( users ) ; \n\tthis . userPredicate = null ; \n\treturn instance ( ) ; \n\t} \n"}, {"code": "VPlexDistributedDeviceInfo findDistributedDevice ( String deviceName ) throws VPlexApiException $F8587 ( findDistributedDevice , deviceName , _BOOL ) "}, {"code": "$F1431 public static < T extends Packet > void registerOutListener ( $F98259 ( type ) , Player player , $F54596 listener ) { \n\tNetworkManagerWrapper wrapper = wrapNetworkManager ( player ) ; \n\twrapper . registerOutgoingListener ( type , listener ) ; \n\t} \n"}, {"code": "static CopyState readCopyState ( DataInput in ) throws IOException { \n\t$F96 infosBytes = new byte [ in . readVInt ( ) ] ; \n\tin . readBytes ( infosBytes , NUM00 , infosBytes . length ) ; \n\tlong gen = in . readVLong ( ) ; \n\tlong version = in . readVLong ( ) ; \n\tMap < String , FileMetaData > files = readFilesMetaData ( in ) ; \n\tint count = in . readVInt ( ) ; \n\t$F13750 ( completedMergeFiles ) for ( $F119 ( i , count ) ) { \n\t\tcompletedMergeFiles . add ( in . readString ( ) ) ; \n\t\t} \n\tlong primaryGen = in . readVLong ( ) ; \n\treturn new CopyState ( files , version , gen , infosBytes , completedMergeFiles , primaryGen , null ) ; \n\t} \n"}, {"code": "public void notifyTasks $F72 { \n\tif ( tracker . shouldInterruptTask ( ) ) { \n\t\tfor ( Thread t : threadMap . values ( ) ) $F36257 ( t ) } \n\t} \n"}, {"code": "public RequestParams ( Object ... keysAndValues ) { \n\tint len = keysAndValues . length ; \n\t$F32249 ( len ) $F32257 ( i , len , key , String , keysAndValues , val , put ) } \n"}, {"code": "public boolean confirmOverwrite ( final File file ) { \n\tString message = $F2990 ( file ) ; \n\t$F131 options = $F4582 ; \n\treturn JOptionPane . YES_OPTION == JOptionPane . showOptionDialog ( null , message , NUM00 , JOptionPane . DEFAULT_OPTION , JOptionPane . WARNING_MESSAGE , null , options , options [ NUM00 ] ) ; \n\t} \n"}, {"code": "public TvShowUpdateDatasourceTask ( String datasource ) { \n\tsuper ( $F241237 ( BUNDLE ) + datasource + NUM00 ) ; \n\t$F90333 ( tvShowList , TvShowList ) $F216947 ( dataSources ) dataSources . add ( datasource ) ; \n\t} \n"}, {"code": "public int findLine ( int offset ) { \n\t$F40997 ( line , lineStarts ) while ( ( lineStarts [ line ] > offset ) && ( line > NUM00 ) ) { \n\t\tline -- ; \n\t\t} \n\treturn line ; \n\t} \n"}, {"code": "public void clear $F72 { \n\tSet $F310647 oldSelection = new HashSet $F310647 ( selection ) ; \n\t$F725 ( selection ) if $F5973 ( oldSelection ) { \n\t\tfireSelectionChanged ( oldSelection , selection ) ; \n\t\t} \n\t} \n"}, {"code": "public Object newNonMovableArray ( $F6969 componentType , int length ) { \n\t$F29130 ( Array , componentType , length ) } \n"}, {"code": "private void loadFileRecursively ( String path , Map < String , ThriftFileElement > loadedFiles ) throws IOException { \n\tThriftFileElement element = null ; \n\tFile dir = null ; \n\tFile file = findFirstExisting ( path , null ) ; \n\tif ( file != null ) { \n\t\tfile = file . getCanonicalFile ( ) ; \n\t\tif ( loadedFiles . containsKey ( file . getAbsolutePath ( ) ) ) $F932 dir = file . getParentFile ( ) ; \n\t\telement = loadSingleFile ( file . getParentFile ( ) , file . getName ( ) ) ; \n\t\t} \n\tif ( element == null ) { \n\t\tthrow new FileNotFoundException ( NUM00 + path + NUM00 + includePaths ) ; \n\t\t} \n\tloadedFiles . put ( file . getAbsolutePath ( ) , element ) ; \n\tImmutableList < IncludeElement > includes = element . includes ( ) ; \n\tif $F3817 ( includes ) { \n\t\tincludePaths . addFirst ( dir ) ; \n\t\tfor ( IncludeElement include : includes ) { \n\t\t\tif ( ! include . isCpp ( ) ) { \n\t\t\t\tloadFileRecursively ( include . path ( ) , loadedFiles ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F60607 ( includePaths ) } \n\t} \n"}, {"code": "public void assureProxyOk $F72 { \n\tif $F43263 ( socket ) $F5795 ( restart ) } \n"}, {"code": "$F1 public boolean add ( IMessage message ) $F8587 ( add , message , _BOOL ) "}, {"code": "public Key $F97 ( hash ) { \n\tif ( hash . length != SHA1_HASH_LENGTH ) { \n\t\tthrow new IllegalArgumentException $F75477 ( hash ) ; \n\t\t} \n\t$F5735 ( System , hash , this , SHA1_HASH_LENGTH ) } \n"}, {"code": "public static $F2027 concatAllInt ( $F2027 ... arrays ) { \n\tint totalLength = NUM00 ; \n\t$F18832 ( subArrayCount , arrays ) $F189285 ( i , subArrayCount , totalLength , arrays ) $F2027 $F189287 ( result , Arrays , arrays , totalLength ) ; \n\t$F26358 ( offset , arrays ) $F189290 ( i , subArrayCount , System , arrays , result , offset ) return result ; \n\t} \n"}, {"code": "private static RoadPermission roadFlagComparision ( Way iosmWay , String newTag , String newValue , EnumSet < EdgeStore . EdgeFlag > forwardExpected , EnumSet < EdgeStore . EdgeFlag > backwardExpected ) { \n\tWay osmWay = new Way $F72 ; \n\tStringJoiner stringJoiner = new StringJoiner $F580 ; \n\tfor ( OSMEntity . Tag tag : iosmWay . tags ) { \n\t\tosmWay . addTag ( tag . key , tag . value ) ; \n\t\tstringJoiner . add ( tag . key + NUM00 + tag . value ) ; \n\t\t} \n\tif ( newTag != null && newValue != null ) { \n\t\tosmWay . addTag ( newTag , newValue ) ; \n\t\tstringJoiner . add ( newTag + NUM00 + newValue ) ; \n\t\t} \n\tSet < EdgeStore . EdgeFlag > forwardFiltered ; \n\tSet < EdgeStore . EdgeFlag > backwardFiltered ; \n\tRoadPermission roadPermission = traversalPermissionLabeler . getPermissions ( osmWay ) ; \n\tforwardFiltered = filterFlags ( roadPermission . forward ) ; \n\tbackwardFiltered = filterFlags ( roadPermission . backward ) ; \n\tString tags = $F368 ( stringJoiner ) ; \n\tassertEquals ( tags , forwardExpected , forwardFiltered ) ; \n\tassertEquals ( tags , backwardExpected , backwardFiltered ) ; \n\treturn roadPermission ; \n\t} \n"}, {"code": "public void beginDisplay ( DisplayEvent event ) throws ModelControlException { \n\tIdentitySubjectModel subjectModel = getSubjectModel ( ) ; \n\tPolicyModel model = ( PolicyModel ) getModel ( ) ; \n\tsuper . beginDisplay ( event ) ; \n\tif ( ! canModify ) { \n\t\tMap mapValues = getDefaultValues ( ) ; \n\t\tif $F2772 ( mapValues ) { \n\t\t\tSet values = ( Set ) mapValues . get ( AMIdentityMembershipCondition . AM_IDENTITY_NAME ) ; \n\t\t\tSet identityNames = helper . getAMIdentityNames ( model . getUserSSOToken ( ) , values ) ; \n\t\t\tpropertySheetModel . setValue ( VALUES_MULTIPLE_CHOICE_VALUE , AMAdminUtils . getString ( identityNames , NUM00 , _BOOL ) ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tCCDropDownMenu menu = ( CCDropDownMenu ) getChild ( FILTER_TYPE ) ; \n\t\tMap supportedEntityTypes = model . getSupportedEntityTypes ( realmName ) ; \n\t\tOptionList entityTypes = createOptionList ( supportedEntityTypes ) ; \n\t\tentityTypes . add ( NUM00 , NUM00 , NUM00 ) ; \n\t\tmenu . setOptions ( entityTypes ) ; \n\t\t$F187587 ( menu ) CCAddRemove child = ( CCAddRemove ) getChild ( VALUES_MULTIPLE_CHOICE_VALUE ) ; \n\t\tchild . restoreStateData ( ) ; \n\t\tif ( ! submitCycle ) { \n\t\t\thelper . setSelectedIdentities ( child , model . getUserSSOToken ( ) , model . getUserLocale ( ) , this , getDefaultValues ( ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tOptionList possible = helper . createOptionList ( model . getUserSSOToken ( ) , model . getUserLocale ( ) , this , getPossibleValues ( subjectModel , realmName ) ) ; \n\t\t\tOptionList selected = addRemoveModel . getSelectedOptionList ( ) ; \n\t\t\tList selectedIds = AMAdminUtils . toList ( selected ) ; \n\t\t\tchild . resetStateData ( ) ; \n\t\t\taddRemoveModel . setAvailableOptionList ( possible ) ; \n\t\t\taddRemoveModel . setSelectedOptionList ( helper . createOptionList ( model . getUserSSOToken ( ) , model . getUserLocale ( ) , this , selectedIds ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public $F96 readBytes $F72 throws IOException { \n\tint len = readInt ( ) ; \n\t$F132643 ( len ) $F96 b = DataUtils . newBytes ( len ) ; \n\tin . readFully ( b ) ; \n\treturn b ; \n\t} \n"}, {"code": "protected int chunkSize ( int n ) { \n\tint power = $F2862 ( n ) ? initialChunkPower : Math . min ( initialChunkPower + n - NUM00 , AbstractSpinedBuffer . MAX_CHUNK_POWER ) ; \n\treturn NUM00 < < power ; \n\t} \n"}, {"code": "public String useRelativePathTipText $F72 $F2455 "}, {"code": "public Joiner join ( Class < ? extends DataObject > clazz , String alias , URI ... ids ) { \n\treturn join ( clazz , alias , new ArrayList < URI > $F6 ( Arrays , ids ) ) ; \n\t} \n"}, {"code": "$F172853 ( closeFile , _BOOL ) "}, {"code": "public List < Interface > showInterface $F72 throws NetworkDeviceControllerException { \n\tList < Interface > interfaces = new ArrayList < Interface > $F72 ; \n\tSSHPrompt [ ] prompts = { \n\t\tSSHPrompt . POUND , SSHPrompt . GREATER_THAN } \n\t; \n\t$F83 ( buf ) SSHPrompt prompt = sendWaitFor ( MDSDialogProperties . getString ( NUM00 ) , NUM00 , prompts , buf ) ; \n\t$F91090 ( lines , getLines , buf ) $F806 regex = { \n\t\tMDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) } \n\t; \n\t$F808 ( groups ) Interface intf = null ; \n\tfor ( String line : lines ) { \n\t\tint index = match ( line , regex , groups ) ; \n\t\tswitch ( index ) { \n\t\t\t$F3366 intf = new Interface ( groups [ NUM00 ] ) ; \n\t\t\tintf . setStatus ( groups [ NUM00 ] ) ; \n\t\t\tinterfaces . add ( intf ) ; \n\t\t\t$F597 $F3366 intf . setDescription ( groups [ NUM00 ] ) ; \n\t\t\t$F597 $F3366 intf . setWwpn ( groups [ NUM00 ] ) ; \n\t\t\t$F597 $F3366 intf . setMode ( groups [ NUM00 ] ) ; \n\t\t\tintf . setFcid ( groups [ NUM00 ] ) ; \n\t\t\t$F597 $F3366 intf . setVsan ( groups [ NUM00 ] ) ; \n\t\t\t$F597 $F3366 intf . setMode ( groups [ NUM00 ] ) ; \n\t\t\t$F597 } \n\t\t} \n\treturn interfaces ; \n\t} \n"}, {"code": "protected void clearDataLists ( int obdService ) { \n\tswitch ( obdService ) { \n\t\tcase OBD_SVC_DATA : case OBD_SVC_FREEZEFRAME : $F725 ( pidSupported ) $F725 ( PidPvs ) $F597 case OBD_SVC_READ_CODES : case OBD_SVC_PENDINGCODES : case OBD_SVC_PERMACODES : $F725 ( tCodes ) $F597 case OBD_SVC_VEH_INFO : $F725 ( pidSupported ) $F725 ( VidPvs ) $F597 } \n\t} \n"}, {"code": "public QuadEdge makeEdge ( Vertex o , Vertex d ) { \n\tQuadEdge q = QuadEdge . makeEdge ( o , d ) ; \n\tquadEdges . add ( q ) ; \n\treturn q ; \n\t} \n"}, {"code": "public static void sortSeqs $F24643 ( seqs ) { \n\t$F84242 ( Collections , seqs ) } \n"}, {"code": "default B with ( String key , long value ) $F65298 ( with , key , Long , value ) "}, {"code": "private void listDirectory ( File directory , RelativeDirectory subdirectory , Set < JavaFileObject . Kind > fileKinds , boolean recurse , ListBuffer $F69718 resultList ) { \n\tFile d = subdirectory . getFile ( directory ) ; \n\tif ( ! caseMapCheck ( d , subdirectory ) ) $F665 $F5459 ( files , d ) $F8249 ( files ) if ( sortFiles != null ) Arrays . sort ( files , sortFiles ) ; \n\tfor ( File f : files ) { \n\t\t$F20605 ( fname , f ) if $F3444 ( f ) { \n\t\t\tif ( recurse && SourceVersion . isIdentifier ( fname ) ) { \n\t\t\t\tlistDirectory ( directory , new RelativeDirectory ( subdirectory , fname ) , fileKinds , recurse , resultList ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( isValidFile ( fname , fileKinds ) ) { \n\t\t\t\tJavaFileObject fe = new RegularFileObject ( this , fname , new File ( d , fname ) ) ; \n\t\t\t\tresultList . append ( fe ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private Shape decodeEdge ( int width , int height ) { \n\t$F2268 ( path ) path . moveTo ( width - NUM00 , NUM00 ) ; \n\tpath . lineTo ( width - NUM00 , height - NUM00 ) ; \n\tpath . lineTo ( width - NUM00 , height - NUM00 ) ; \n\tpath . lineTo ( NUM00 , height - NUM00 ) ; \n\treturn path ; \n\t} \n"}, {"code": "public void dispose $F72 throws IabAsyncInProgressException { \n\tsynchronized ( mAsyncInProgressLock ) { \n\t\tif ( mAsyncInProgress ) { \n\t\t\tthrow new IabAsyncInProgressException $F54019 ( mAsyncOperation ) ; \n\t\t\t} \n\t\t} \n\tlogDebug ( NUM00 ) ; \n\tmSetupDone = _BOOL ; \n\tif ( mServiceConn != null ) { \n\t\tlogDebug ( NUM00 ) ; \n\t\tif ( mContext != null ) mContext . unbindService ( mServiceConn ) ; \n\t\t} \n\tmDisposed = _BOOL ; \n\tmContext = null ; \n\tmServiceConn = null ; \n\tmService = null ; \n\tmPurchaseListener = null ; \n\t} \n"}, {"code": "private void testScenario ( String aConfiguration , boolean anExpectingAnException , $F107547 aMethodsToCall ) throws Exception { \n\tif $F2979 ( aMethodsToCall ) { \n\t\ttestScenario ( aConfiguration , anExpectingAnException , ( Method ) null ) ; \n\t\t} \n\telse { \n\t\tfor ( Method myMethod : aMethodsToCall ) { \n\t\t\ttestScenario ( aConfiguration , anExpectingAnException , myMethod ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private static File createReserveDiskCacheDir ( Context context ) { \n\tFile cacheDir = StorageUtils . getCacheDirectory ( context , _BOOL ) ; \n\t$F109797 ( individualDir , cacheDir ) $F202511 ( individualDir , cacheDir ) return cacheDir ; \n\t} \n"}, {"code": "public boolean hasBeenCalled ( String resourceName ) $F298 ( uris , resourceName ) "}, {"code": "$F1 public void readExternal ( ObjectInput in ) throws $F6427 { \n\tsuper . readExternal ( in ) ; \n\t$F29712 ( isLeaf , in ) $F5961 ( numEntries , in ) } \n"}, {"code": "public ObjIdMap $F72 $F176695 ( this ) "}, {"code": "$F13429 ( criteria , createCriteriaInternal , oredCriteria ) "}, {"code": "public static ConnectionFactory newFailoverConnectionPool ( Set < LDAPURL > servers , String username , $F1469 password , int maxSize , int heartBeatInterval , String heartBeatTimeUnit , Options ldapOptions ) { \n\tList < ConnectionFactory > factories = new ArrayList < ConnectionFactory > $F716 ( servers ) ; \n\tfor ( LDAPURL ldapurl : servers ) { \n\t\tConnectionFactory cf = Connections . newFixedConnectionPool ( newConnectionFactory ( ldapurl , username , password , heartBeatInterval , heartBeatTimeUnit , ldapOptions ) , maxSize ) ; \n\t\tfactories . add ( cf ) ; \n\t\t} \n\treturn loadBalanceFactories ( factories ) ; \n\t} \n"}, {"code": "$F38752 ( _BOOL ) "}, {"code": "public PrintfFormat ( final String fmtArg ) throws IllegalArgumentException { \n\tthis ( Locale . getDefault ( ) , fmtArg ) ; \n\t} \n"}, {"code": "public static void initCause ( Throwable throwable , Throwable cause ) { \n\tif ( INIT_CAUSE_METHOD != null ) { \n\t\ttry { \n\t\t\t$F226025 ( INIT_CAUSE_METHOD , throwable , cause ) } \n\t\t$F3957 } \n\t} \n"}, {"code": "public MessagePropertyKey ( String description , Integer ordinal ) $F20755 ( this , description , ordinal ) "}, {"code": "$F173033 ( mode , node , Thread , pred , tail , compareAndSetTail , enq ) "}, {"code": "private void assertBounded ( $F44293 deserialized , boolean bounded ) { \n\tif ( bounded ) { \n\t\ttry { \n\t\t\t$F18793 ( deserialized ) fail ( ) ; \n\t\t\t} \n\t\t$F28069 } \n\telse { \n\t\tassertTrue ( deserialized . add ( NUM00 ) ) ; \n\t\tassertTrue ( deserialized . remove ( NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void paintBorder $F6065 ( c , g , x , y , width , height ) { \n\tJComponent comp = ( c instanceof JComponent ) ? ( JComponent ) c : null ; \n\tif ( g instanceof Graphics2D ) { \n\t\t$F20230 ( g2 , g ) g2 . translate ( x , y ) ; \n\t\tpaint ( g2 , comp , width , height ) ; \n\t\t$F86480 ( g2 , x , y ) } \n\telse { \n\t\tBufferedImage img = new BufferedImage ( IMG_SIZE , IMG_SIZE , BufferedImage . TYPE_INT_ARGB ) ; \n\t\t$F23475 ( g2 , img ) paint ( g2 , comp , width , height ) ; \n\t\t$F355 ( g2 ) ImageScalingHelper . paint ( g , x , y , width , height , img , INSETS , INSETS , ImageScalingHelper . PaintType . PAINT9_STRETCH , ImageScalingHelper . PAINT_ALL ) ; \n\t\t} \n\t} \n"}, {"code": "$F45923 public static LineByLineFileInputOperator restoreCheckPoint ( LineByLineFileInputOperator checkPointOper , ByteArrayOutputStream bos ) throws Exception { \n\tKryo kryo = new Kryo $F72 ; \n\tInput lInput = new Input $F87573 ( bos ) ; \n\tLineByLineFileInputOperator oper = kryo . readObject ( lInput , checkPointOper . getClass ( ) ) ; \n\t$F59 ( lInput ) return oper ; \n\t} \n"}, {"code": "$F192509 ( is , close , b , len , _BOOL , n , c , System , last ) "}, {"code": "private static synchronized boolean isSupportedImpl ( HttpCallerInfo hci ) { \n\tif ( supported == null ) { \n\t\tsupported = new HashMap $F91737 $F72 ; \n\t\tcache = new HashMap < String , Negotiator > $F72 ; \n\t\t} \n\tString hostname = hci . host ; \n\t$F37156 ( hostname ) $F65325 ( supported , hostname ) Negotiator neg = Negotiator . getNegotiator ( hci ) ; \n\tif ( neg != null ) { \n\t\tsupported . put ( hostname , _BOOL ) ; \n\t\tcache . put ( hostname , neg ) ; \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\tsupported . put ( hostname , _BOOL ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public CProjectConfiguration ( final INaviProject project , final ListenerProvider < IProjectListener > listeners , final SQLProvider provider , final int projectId , final String name , final String description , final Date creationDate , final Date modificationDate , final List < DebuggerTemplate > assignedDebuggers ) { \n\tm_project = project ; \n\tm_listeners = listeners ; \n\tm_provider = provider ; \n\tm_id = projectId ; \n\tm_name = name ; \n\tm_description = description ; \n\tm_creationDate = $F207437 ( creationDate ) ; \n\tm_modificationDate = $F207437 ( modificationDate ) ; \n\tm_assignedDebuggers = new ArrayList < DebuggerTemplate > ( assignedDebuggers ) ; \n\t} \n"}, {"code": "public Shape chartToScreenShape ( Shape s ) { \n\t$F13609 ( p ) Transform inverse = Transform . makeTranslation ( getAbsoluteX ( ) , getAbsoluteY ( ) ) ; \n\tif ( currentTransform != null ) { \n\t\tinverse . concatenate ( currentTransform ) ; \n\t\t} \n\tp . append ( s . getPathIterator ( inverse ) , _BOOL ) ; \n\treturn p ; \n\t} \n"}, {"code": "$F1 public void addShutdownWindow ( final Window window ) { \n\t$F14412 ( m_isShutDown , closeWindow , window ) synchronized ( this ) { \n\t\t$F14412 ( m_isShutDown , closeWindow , window ) m_windowsToCloseOnShutdown . add ( window ) ; \n\t\t} \n\t} \n"}, {"code": "public PerformanceLogger $F72 $F22067 ( time1 , System ) "}, {"code": "public AuthRequest authenticate ( List discoveries , String returnToUrl ) throws ConsumerException , MessageException $F32246 ( authenticate , discoveries , returnToUrl ) "}, {"code": "public Hash ( String hex ) { \n\tif $F35625 ( hex ) $F825 this . bytes = ByteUtils . reverse ( ByteUtils . fromHex ( hex ) ) ; \n\t} \n"}, {"code": "private $F806 diff_halfMatchI $F68141 ( longtext , shorttext , i ) { \n\tString seed = longtext . substring ( i , i + $F8196 ( longtext ) ) ; \n\tint j = - NUM00 ; \n\tString best_common = NUM00 ; \n\tString best_longtext_a = NUM00 , best_longtext_b = NUM00 ; \n\tString best_shorttext_a = NUM00 , best_shorttext_b = NUM00 ; \n\twhile $F96196 ( j , shorttext , seed ) { \n\t\tint prefixLength = diff_commonPrefix ( longtext . substring ( i ) , shorttext . substring ( j ) ) ; \n\t\tint suffixLength = diff_commonSuffix ( longtext . substring ( NUM00 , i ) , shorttext . substring ( NUM00 , j ) ) ; \n\t\tif $F143803 ( best_common , suffixLength , prefixLength ) { \n\t\t\tbest_common = shorttext . substring ( j - suffixLength , j ) + shorttext . substring ( j , j + prefixLength ) ; \n\t\t\t$F550209 ( best_longtext_a , longtext , i , suffixLength ) best_longtext_b = longtext . substring ( i + prefixLength ) ; \n\t\t\t$F550209 ( best_shorttext_a , shorttext , j , suffixLength ) best_shorttext_b = shorttext . substring ( j + prefixLength ) ; \n\t\t\t} \n\t\t} \n\tif ( $F9483 ( best_common ) >= longtext . length ( ) ) { \n\t\treturn new String [ ] { \n\t\t\tbest_longtext_a , best_longtext_b , best_shorttext_a , best_shorttext_b , best_common } \n\t\t; \n\t\t} \n\telse $F1337 } \n"}, {"code": "public boolean isNumericalRun ( String pin ) { \n\t$F22998 ( len , pin ) int prevDigit = Character . digit ( pin . charAt ( NUM00 ) , NUM00 ) ; \n\tint prevDiff = Integer . MAX_VALUE ; \n\tboolean isRun = _BOOL ; \n\tfor ( int i = NUM00 ; \n\tisRun && i < len ; \n\ti ++ ) { \n\t\tfinal int digit = Character . digit ( pin . charAt ( i ) , NUM00 ) ; \n\t\tfinal int diff = digit - prevDigit ; \n\t\tif ( prevDiff != Integer . MAX_VALUE && diff != prevDiff ) { \n\t\t\tisRun = _BOOL ; \n\t\t\t} \n\t\tprevDiff = diff ; \n\t\tprevDigit = digit ; \n\t\t} \n\treturn isRun ; \n\t} \n"}, {"code": "$F26827 ( w , h , oldw , oldh , super , setupBounds , setupPaints , invalidate ) "}, {"code": "public static int uriType ( String uri ) { \n\tif $F12703 ( uri ) { \n\t\treturn ABS_URI ; \n\t\t} \n\telse if $F3106 ( uri ) { \n\t\treturn ROOT_REL_URI ; \n\t\t} \n\telse { \n\t\treturn NOROOT_REL_URI ; \n\t\t} \n\t} \n"}, {"code": "$F103859 ( data , results , key ) "}, {"code": "public static void addGlue ( JComponent b , boolean horiz ) { \n\tb . add ( horiz ? Box . createHorizontalGlue ( ) : Box . createVerticalGlue ( ) ) ; \n\t} \n"}, {"code": "public static boolean isResourceReference ( String str ) { \n\treturn str . startsWith ( BIG_QUOTE_LEFT ) && str . endsWith ( BIG_QUOTE_RIGHT ) && str . charAt ( NUM00 ) == AT . charAt ( NUM00 ) ; \n\t} \n"}, {"code": "public boolean leave $F72 throws $F80658 { \n\tzooKeeper . delete ( rootPath + NUM00 + name , NUM00 ) ; \n\twhile ( _BOOL ) { \n\t\tsynchronized ( mutex ) { \n\t\t\t$F3803 list = zooKeeper . getChildren ( rootPath , _BOOL ) ; \n\t\t\tif $F3817 ( list ) $F28646 ( mutex ) else { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public Enumeration < ? extends Principal > members $F72 { \n\tVector $F35948 v = new Vector $F35948 $F989 ; \n\tv . addElement ( this ) ; \n\t$F1007 ( v ) } \n"}, {"code": "public SelectClause addWithAsProvidedName ( String propertyName , String asName ) { \n\tselectList . add ( new SelectClauseExpression ( new PropertyValueExpression ( propertyName ) , asName ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "public void addInterface ( String interfaceName ) { \n\tshort interfaceIndex = itsConstantPool . addClass ( interfaceName ) ; \n\t$F269561 ( itsInterfaces , Short , interfaceIndex ) } \n"}, {"code": "public static String cutFromIndexOf ( String string , String substring ) { \n\t$F12747 ( i , string , substring ) if ( i != - NUM00 ) { \n\t\t$F11978 ( string , i ) } \n\treturn string ; \n\t} \n"}, {"code": "private Response requestHttpGetFromRegistry ( String url ) throws RegistryException { \n\ttry { \n\t\tResponse resp = http . get ( url ) ; \n\t\tif ( resp != null && resp . content != null ) { \n\t\t\treturn resp ; \n\t\t\t} \n\t\telse { \n\t\t\tthrow new RegistryException ( TYPE . BAD_RESPONSE , NUM00 ) ; \n\t\t\t} \n\t\t} \n\tcatch ( ClassCastException e ) { \n\t\tthrow new RegistryException ( TYPE . BAD_RESPONSE , e ) ; \n\t\t} \n\tcatch ( ConnectException e ) { \n\t\tthrow new RegistryException ( TYPE . PROXY , e ) ; \n\t\t} \n\tcatch ( UnknownHostException e ) { \n\t\ttry { \n\t\t\thttp . get ( NUM00 ) ; \n\t\t\t} \n\t\tcatch ( Exception e1 ) { \n\t\t\tthrow new RegistryException ( TYPE . NO_INTERNET , e1 ) ; \n\t\t\t} \n\t\tthrow new RegistryException ( TYPE . SITE_DOWN , e ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tthrow new RegistryException ( TYPE . IO_ERROR , e ) ; \n\t\t} \n\tcatch ( URISyntaxException e ) { \n\t\tthrow new RegistryException ( TYPE . BAD_REQUEST , NUM00 + ( ( url != null ) ? url : NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void testIterator $F72 throws InterruptedException { \n\tLinkedBlockingQueue q = populatedQueue ( SIZE ) ; \n\t$F10531 ( it , q ) while $F2921 ( it ) { \n\t\tassertEquals ( it . next ( ) , q . take ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static Builder newBuilder $F72 { \n\treturn new Builder $F72 ; \n\t} \n"}, {"code": "public void init ( RemoteAuthenticatedUser currentUser ) $F6988 ( this , currentUser ) "}, {"code": "public static void invokeFinalize ( Object o ) throws Throwable { \n\to . finalize ( ) ; \n\t} \n"}, {"code": "private void removeTvShow ( TvShow tvShow ) { \n\tsynchronized ( root ) { \n\t\tTvShowTreeNode child = ( TvShowTreeNode ) nodeMap . get ( tvShow ) ; \n\t\tDefaultMutableTreeNode parent = root ; \n\t\tif ( child != null ) { \n\t\t\tint index = getIndexOfChild ( parent , child ) ; \n\t\t\tnodeMap . remove ( tvShow ) ; \n\t\t\tfor ( TvShowEpisode episode : new $F201 ( tvShow . getEpisodes ( ) ) ) { \n\t\t\t\tnodeMap . remove ( episode ) ; \n\t\t\t\tepisode . removePropertyChangeListener ( propertyChangeListener ) ; \n\t\t\t\t} \n\t\t\ttvShow . removePropertyChangeListener ( propertyChangeListener ) ; \n\t\t\tchild . removeAllChildren ( ) ; \n\t\t\t$F212163 ( child ) if ( index > - NUM00 ) { \n\t\t\t\t$F108352 ( event , this , parent , index , child ) for ( TreeModelListener listener : listeners ) { \n\t\t\t\t\ttry { \n\t\t\t\t\t\tlistener . treeNodesRemoved ( event ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\tcatch ( NullPointerException | ArrayIndexOutOfBoundsException npe ) $F845 } \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private ComplianceFeature checkEncryptPolicy ( org . wso2 . emm . agent . beans . Operation operation ) { \n\tboolean encryptStatus = ( devicePolicyManager . getStorageEncryptionStatus ( ) != devicePolicyManager . ENCRYPTION_STATUS_UNSUPPORTED && devicePolicyManager . getStorageEncryptionStatus ( ) != devicePolicyManager . ENCRYPTION_STATUS_INACTIVE ) ; \n\tif ( ( operation . isEnabled ( ) && encryptStatus ) || ( ! operation . isEnabled ( ) && ! encryptStatus ) ) { \n\t\tpolicy . setCompliance ( _BOOL ) ; \n\t\t} \n\telse { \n\t\tpolicy . setCompliance ( _BOOL ) ; \n\t\tpolicy . setMessage ( resources . getString ( R . string . error_encrypt_policy ) ) ; \n\t\t} \n\treturn policy ; \n\t} \n"}, {"code": "public static int instanceOf $F32751 ( o , c ) { \n\t$F397 ( o , FALSE ) return $F39078 ( c , o ) ? TRUE : FALSE ; \n\t} \n"}, {"code": "$F1 public void add ( int location , E object ) { \n\tinsertElementAt ( object , location ) ; \n\t} \n"}, {"code": "private long cacheResponseAge $F72 { \n\tlong apparentReceivedAge = servedDate != null ? Math . max ( NUM00 , receivedResponseMillis - servedDate . getTime ( ) ) : NUM00 ; \n\tlong receivedAge = ageSeconds != - NUM00 ? Math . max ( apparentReceivedAge , SECONDS . toMillis ( ageSeconds ) ) : apparentReceivedAge ; \n\tlong responseDuration = receivedResponseMillis - sentRequestMillis ; \n\tlong residentDuration = nowMillis - receivedResponseMillis ; \n\treturn receivedAge + responseDuration + residentDuration ; \n\t} \n"}, {"code": "$F1 public Void call $F72 throws Exception { \n\tMulticastSocket datagramSocket = null ; \n\tExecutorService service = null ; \n\ttry { \n\t\tdatagramSocket = new MulticastSocket ( port ) ; \n\t\tdatagramSocket . joinGroup ( group ) ; \n\t\tservice = Executors . newSingleThreadScheduledExecutor ( new DaemonThreadFactory $F580 ) ; \n\t\t$F4727 ( buffer , BUFFER_SIZE ) final DatagramPacket packet = new DatagramPacket ( buffer , NUM00 , buffer . length ) ; \n\t\tlistening = _BOOL ; \n\t\twhile ( _BOOL ) { \n\t\t\ttry { \n\t\t\t\tdatagramSocket . receive ( packet ) ; \n\t\t\t\tif $F2754 ( Thread ) $F5153 final IGangliaMessage msg = decodeRecord ( packet . getData ( ) , packet . getOffset ( ) , packet . getLength ( ) ) ; \n\t\t\t\tif ( msg != null ) { \n\t\t\t\t\tservice . submit ( new DispatchTask ( handler , msg ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tcatch ( Throwable t ) { \n\t\t\t\tlog . warn ( t , t ) ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn ( Void ) null ; \n\t\t} \n\tfinally { \n\t\t$F21333 ( service ) $F2727 ( datagramSocket ) listening = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "private static int arrayIndex ( int i ) { \n\treturn ( i > > SHIFT_PER_WORD ) ; \n\t} \n"}, {"code": "protected static void invalidateSwitchPoints $F72 { \n\tif ( LOG_ENABLED ) $F22715 ( LOG ) synchronized ( IndyInterface . class ) { \n\t\tSwitchPoint old = switchPoint ; \n\t\tswitchPoint = new SwitchPoint $F72 ; \n\t\tSwitchPoint . invalidateAll ( new SwitchPoint [ ] { \n\t\t\told } \n\t\t) ; \n\t\t} \n\t} \n"}, {"code": "public VdcConfig toConfigParam ( Properties vdcInfo ) { \n\tlog . info ( NUM00 , vdcInfo . getProperty ( GeoServiceJob . VDC_SHORT_ID ) ) ; \n\tVdcConfig vdcConfig = new VdcConfig $F72 ; \n\tvdcConfig . setId ( URIUtil . uri ( vdcInfo . getProperty ( GeoServiceJob . OPERATED_VDC_ID ) ) ) ; \n\tvdcConfig . setShortId ( vdcInfo . getProperty ( GeoServiceJob . VDC_SHORT_ID ) ) ; \n\tvdcConfig . setSecretKey ( vdcInfo . getProperty ( GeoServiceJob . VDC_SECRETE_KEY ) ) ; \n\tString name = vdcInfo . getProperty ( GeoServiceJob . VDC_NAME ) ; \n\tif $F13709 ( name ) { \n\t\tvdcConfig . setName ( name ) ; \n\t\t} \n\tString description = vdcInfo . getProperty ( GeoServiceJob . VDC_DESCRIPTION ) ; \n\tif $F13709 ( description ) { \n\t\tvdcConfig . setDescription ( description ) ; \n\t\t} \n\tString endPnt = vdcInfo . getProperty ( GeoServiceJob . VDC_API_ENDPOINT ) ; \n\tif ( endPnt != null ) { \n\t\tvdcConfig . setApiEndpoint ( endPnt ) ; \n\t\t} \n\tvdcConfig . setGeoCommandEndpoint ( vdcInfo . getProperty ( GeoServiceJob . VDC_GEOCOMMAND_ENDPOINT ) ) ; \n\tvdcConfig . setGeoDataEndpoint ( vdcInfo . getProperty ( GeoServiceJob . VDC_GEODATA_ENDPOINT ) ) ; \n\treturn vdcConfig ; \n\t} \n"}, {"code": "protected OSXAdapter ( String proxySignature , Object target , Method handler ) { \n\tthis . proxySignature = proxySignature ; \n\tthis . targetObject = target ; \n\tthis . targetMethod = handler ; \n\t} \n"}, {"code": "private double prediction ( Instance inst ) { \n\t$F1986 normalizedInstance = normalizedInstance ( inst ) ; \n\tdouble normalizedPrediction = prediction ( normalizedInstance ) ; \n\treturn denormalizedPrediction ( normalizedPrediction ) ; \n\t} \n"}, {"code": "protected Object finish ( Map settings ) throws WizardException { \n\treturn provider . finish ( settings ) ; \n\t} \n"}, {"code": "public boolean isValidAttachmentPoint ( DatapathId switchDPID , OFPort switchPort ) { \n\tif ( topology . isAttachmentPointPort ( switchDPID , switchPort ) == _BOOL ) return _BOOL ; \n\tif ( suppressAPs . contains ( new SwitchPort ( switchDPID , switchPort ) ) ) return _BOOL ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected void fireClusterChange ( long timestamp , String type , String message ) { \n\tif $F1032 ( listeners ) { \n\t\tClusterEvent event = new ClusterEvent ( this , timestamp , type , message ) ; \n\t\tVector targets ; \n\t\tsynchronized ( this ) { \n\t\t\ttargets = ( Vector ) listeners . clone ( ) ; \n\t\t\t} \n\t\t$F8484 ( e , targets ) while $F1444 ( e ) { \n\t\t\tClusterEventListener l = ( ClusterEventListener ) e . nextElement ( ) ; \n\t\t\tl . changeCluster ( event ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1017 ( request , container , mRequest , mContainers ) "}, {"code": "$F137271 ( close , deleteContents , directory ) "}, {"code": "public int rgbFor ( int pixel ) { \n\treturn surfaceType . rgbFor ( pixel , colorModel ) ; \n\t} \n"}, {"code": "private boolean checkForCarry ( final $F1469 ca1 , final int icarry ) { \n\tboolean carry = _BOOL ; \n\tif ( icarry < ca1 . length ) { \n\t\tif ( ca1 [ icarry ] == NUM00 || ca1 [ icarry ] == NUM00 || ca1 [ icarry ] == NUM00 || ca1 [ icarry ] == NUM00 ) { \n\t\t\tcarry = _BOOL ; \n\t\t\t} \n\t\telse if ( ca1 [ icarry ] == NUM00 ) { \n\t\t\tint ii = icarry + NUM00 ; \n\t\t\tfor ( $F255681 ( ii , ca1 ) ) { \n\t\t\t\tif ( ca1 [ ii ] != NUM00 ) $F5153 } \n\t\t\tcarry = ii < ca1 . length ; \n\t\t\tif ( ! carry && icarry > NUM00 ) { \n\t\t\t\tcarry = ( ca1 [ icarry - NUM00 ] == NUM00 || ca1 [ icarry - NUM00 ] == NUM00 || ca1 [ icarry - NUM00 ] == NUM00 || ca1 [ icarry - NUM00 ] == NUM00 || ca1 [ icarry - NUM00 ] == NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn carry ; \n\t} \n"}, {"code": "protected void addBottomComponent ( Component bottomComponent ) { \n\tc . weighty = NUM00 ; \n\tlayout . setConstraints ( bottomComponent , c ) ; \n\tcontentPanel . add ( bottomComponent ) ; \n\t} \n"}, {"code": "public static boolean deleteDirectoryFiles $F32029 ( inputFilePathsAndNames ) { \n\tif ( ( inputFilePathsAndNames == null ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tboolean didSuccessfullyDeleteAllFiles = _BOOL ; \n\ttry { \n\t\tfor ( String filePathAndName : inputFilePathsAndNames ) { \n\t\t\t$F1705 ( file , filePathAndName ) if $F4926 ( file ) { \n\t\t\t\tboolean deleteSuccess = deleteFile ( filePathAndName ) ; \n\t\t\t\tif ( ! deleteSuccess ) { \n\t\t\t\t\t$F630 ( logger , filePathAndName ) didSuccessfullyDeleteAllFiles = _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F246959 ( logger , e , System , StackTrace ) return _BOOL ; \n\t\t} \n\treturn didSuccessfullyDeleteAllFiles ; \n\t} \n"}, {"code": "public static File createTempDir ( File dir , boolean cleanup ) throws IOException { \n\tif ( $F4927 ( dir ) && $F1905 ( dir ) ) { \n\t\tthrow new IOException ( $F44379 ( String , dir ) ) ; \n\t\t} \n\tif ( cleanup ) { \n\t\taddCleanupHook ( dir . toPath ( ) ) ; \n\t\t} \n\treturn dir ; \n\t} \n"}, {"code": "public void emitInit $F72 { \n\t$F84 ( out ) $F16690 ( out , constName ) $F84 ( out ) out . append ( name ) ; \n\t$F84 ( out ) nl ( ) ; \n\tnextChunk ( ) ; \n\t} \n"}, {"code": "public static String readCookieIgnoreSpecialCharacters ( HttpServletRequest request , String cookieName ) { \n\tString cs = request . getHeader ( NUM00 ) ; \n\t$F1275 ( cs ) $F12747 ( start , cs , cookieName ) $F94834 ( start ) cs = cs . substring ( start + NUM00 + cookieName . length ( ) ) ; \n\t$F1384 ( end , cs ) $F45801 ( end , cs ) return cs ; \n\t} \n"}, {"code": "protected final void merge ( $F1113 Set < LocalResourceRepository > visited , $F1113 ResourceType type , $F1113 SetMultimap $F2538 seenQualifiers , $F1113 ListMultimap < String , ResourceItem > result ) { \n\t$F13678 ( visited , this ) visited . add ( this ) ; \n\tdoMerge ( visited , type , seenQualifiers , result ) ; \n\t} \n"}, {"code": "private $F96 translateTransferableString ( String str , long format ) throws IOException { \n\t$F2544 ( lFormat , Long , format ) String charset = getBestCharsetForTextFormat ( lFormat , null ) ; \n\t$F123 ( eoln , nativeEOLNs , lFormat ) if ( eoln != null ) { \n\t\t$F115 ( length , str ) StringBuffer buffer = new StringBuffer ( length * NUM00 ) ; \n\t\tfor ( $F119 ( i , length ) ) { \n\t\t\tif ( str . startsWith ( eoln , i ) ) { \n\t\t\t\tbuffer . append ( eoln ) ; \n\t\t\t\ti += $F1092 ( eoln ) ; \n\t\t\t\t$F598 } \n\t\t\t$F1280 ( c , str , i ) if ( c == NUM00 ) $F288 ( buffer , eoln ) else $F288 ( buffer , c ) } \n\t\t$F6947 ( str , buffer ) } \n\t$F45669 ( bytes , str , charset ) $F10158 ( terminators , nativeTerminators , lFormat ) if ( terminators != null ) { \n\t\t$F79839 ( numTerminators , terminators ) $F96 terminatedBytes = new byte [ bytes . length + numTerminators ] ; \n\t\t$F7057 ( System , bytes , terminatedBytes ) for ( int i = bytes . length ; \n\t\ti < terminatedBytes . length ; \n\t\ti ++ ) $F5629 ( terminatedBytes , i ) bytes = terminatedBytes ; \n\t\t} \n\treturn bytes ; \n\t} \n"}, {"code": "private $F96 createPreviewBuffer ( Size previewSize ) { \n\tint bitsPerPixel = ImageFormat . getBitsPerPixel ( ImageFormat . NV21 ) ; \n\tlong sizeInBits = previewSize . getHeight ( ) * previewSize . getWidth ( ) * bitsPerPixel ; \n\tint bufferSize = $F96308 ( Math , sizeInBits ) + NUM00 ; \n\t$F2175 ( byteArray , bufferSize ) $F23500 ( buffer , ByteBuffer , byteArray ) if ( ! buffer . hasArray ( ) || ( buffer . array ( ) != byteArray ) ) $F4639 mBytesToByteBuffer . put ( byteArray , buffer ) ; \n\treturn byteArray ; \n\t} \n"}, {"code": "public void add ( int pos , Box b ) { \n\tchildren . add ( pos , b ) ; \n\tb . parent = this ; \n\tb . elderParent = elderParent ; \n\t} \n"}, {"code": "public Position createPosition ( int offset ) throws BadLocationException { \n\twhile ( queue . poll ( ) != null ) { \n\t\tunusedMarks ++ ; \n\t\t} \n\tif ( unusedMarks > Math . max ( NUM00 , ( $F74216 ( marks ) ) ) ) $F5795 ( removeUnusedMarks ) int g0 = getGapStart ( ) ; \n\tint g1 = getGapEnd ( ) ; \n\tint index = ( offset < g0 ) ? offset : offset + ( g1 - g0 ) ; \n\tsearch . index = index ; \n\tint sortIndex = findSortIndex ( search ) ; \n\tMarkData m ; \n\tStickyPosition position ; \n\tif ( sortIndex < marks . size ( ) && ( m = marks . elementAt ( sortIndex ) ) . index == index && ( position = m . getPosition ( ) ) != null ) $F845 else { \n\t\tposition = new StickyPosition $F72 ; \n\t\tm = new MarkData ( index , position , queue ) ; \n\t\tposition . setMark ( m ) ; \n\t\tmarks . insertElementAt ( m , sortIndex ) ; \n\t\t} \n\treturn position ; \n\t} \n"}, {"code": "public static String pad ( String string , int n , String padding , boolean right ) { \n\t$F17370 ( n ) if $F7007 ( n , string ) $F35299 ( string , n ) else if $F9615 ( n , string ) { \n\t\treturn string ; \n\t\t} \n\tchar paddingChar ; \n\tif $F6036 ( padding ) { \n\t\tpaddingChar = NUM00 ; \n\t\t} \n\telse { \n\t\t$F7783 ( paddingChar , padding ) } \n\t$F7542 ( buff , n ) n -= string . length ( ) ; \n\tif ( right ) $F288 ( buff , string ) $F48485 ( i , n , buff , paddingChar ) $F135212 ( right , buff , string ) $F92 ( buff ) } \n"}, {"code": "private final void resetDTX ( AffineTransform at ) { \n\tfsref = null ; \n\tdtx = at ; \n\tinvdtx = null ; \n\tif ( ! dtx . isIdentity ( ) ) { \n\t\ttry { \n\t\t\tinvdtx = dtx . createInverse ( ) ; \n\t\t\t} \n\t\tcatch ( NoninvertibleTransformException e ) $F845 } \n\tif ( gti != null ) { \n\t\tgti . strikesRef = null ; \n\t\t} \n\t} \n"}, {"code": "public static void addActivityListener ( ActivityListener listener ) { \n\tif ( listener != null ) { \n\t\tstartTracking ( ) ; \n\t\tlisteners . add ( listener ) ; \n\t\t} \n\t} \n"}, {"code": "public void addMutedUsername ( final String username , final Date muteTill ) { \n\tif ( isUsernameMuted ( username ) ) { \n\t\tremoveMutedUsername ( username ) ; \n\t\t} \n\tTimestamp muteTillTs = null ; \n\tif ( muteTill != null ) { \n\t\tmuteTillTs = $F16812 ( muteTill ) ; \n\t\t} \n\t$F35577 ( s_logger , username ) final Connection con = Database . getConnection ( ) ; \n\ttry { \n\t\t$F500803 ( ps , con ) $F3916 ( ps , username ) ps . setTimestamp ( NUM00 , muteTillTs ) ; \n\t\t$F1699 ( ps ) $F59 ( ps ) $F17621 ( con ) } \n\tcatch ( final SQLException sqle ) { \n\t\tif ( sqle . getErrorCode ( ) == NUM00 ) { \n\t\t\ts_logger . info ( $F6165 ( username , sqle ) ) ; \n\t\t\t$F665 } \n\t\ts_logger . log ( Level . SEVERE , NUM00 + username , sqle ) ; \n\t\tthrow new IllegalStateException $F1783 ( sqle ) ; \n\t\t} \n\tfinally { \n\t\tDbUtil . closeConnection ( con ) ; \n\t\t} \n\t} \n"}, {"code": "private $F56522 doParse ( NetworkResponse response ) { \n\t$F56524 ( data , response ) $F280821 ( Log ) $F56530 ( decodeOptions ) Bitmap bitmap = null ; \n\t$F280821 ( Log ) decodeOptions . inJustDecodeBounds = _BOOL ; \n\tBitmapFactory . decodeByteArray ( data , NUM00 , data . length , decodeOptions ) ; \n\tint actualWidth = decodeOptions . outWidth ; \n\tint actualHeight = decodeOptions . outHeight ; \n\tint desiredWidth = getResizedDimension ( mMaxWidth , mMaxHeight , actualWidth , actualHeight , mScaleType ) ; \n\tint desiredHeight = getResizedDimension ( mMaxHeight , mMaxWidth , actualHeight , actualWidth , mScaleType ) ; \n\tdecodeOptions . inJustDecodeBounds = _BOOL ; \n\tdecodeOptions . inSampleSize = findBestSampleSize ( actualWidth , actualHeight , desiredWidth , desiredHeight ) ; \n\tBitmap tempBitmap = BitmapFactory . decodeByteArray ( data , NUM00 , data . length , decodeOptions ) ; \n\tif ( tempBitmap != null && ( tempBitmap . getWidth ( ) > desiredWidth || tempBitmap . getHeight ( ) > desiredHeight ) ) { \n\t\tbitmap = Bitmap . createScaledBitmap ( tempBitmap , desiredWidth , desiredHeight , _BOOL ) ; \n\t\t$F17551 ( tempBitmap ) } \n\telse { \n\t\tbitmap = tempBitmap ; \n\t\t} \n\tif ( bitmap == null ) { \n\t\treturn Response . error ( new ParseError ( response ) ) ; \n\t\t} \n\telse { \n\t\treturn Response . success ( bitmap , HttpHeaderParser . parseCacheHeaders ( response ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void applyComponentOrientation ( ComponentOrientation o ) { \n\tpossiblyFixCursor ( o . isLeftToRight ( ) ) ; \n\tsuper . applyComponentOrientation ( o ) ; \n\t} \n"}, {"code": "$F18907 ( mSelectedWidgets ) "}, {"code": "public void close $F72 throws IOException { \n\tif ( ! closed ) { \n\t\ttry $F5795 ( finish ) finally { \n\t\t\t$F59 ( out ) closed = _BOOL ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected abstract C newParcelableAdapterInstance $F11546 ( items ) ; \n"}, {"code": "public static void nextBytes $F97 ( bytes ) { \n\twasAccessed = _BOOL ; \n\tfor ( int i = NUM00 ; \n\ti < bytes . length ; \n\t) for ( int rnd = nextInt ( ) , n = Math . min ( bytes . length - i , NUM00 ) ; \n\tn -- > NUM00 ; \n\trnd >>= NUM00 ) $F11740 ( bytes , i , rnd ) } \n"}, {"code": "protected void drawLowFarOut ( double aRadius , Graphics2D g2 , double xx , double m ) { \n\tdouble side = aRadius * NUM00 ; \n\tg2 . draw ( new $F69931 ( xx - side , m - side , xx + side , m - side ) ) ; \n\tg2 . draw ( new $F69931 ( xx - side , m - side , xx , m ) ) ; \n\tg2 . draw ( new $F69931 ( xx + side , m - side , xx , m ) ) ; \n\t} \n"}, {"code": "public boolean isJavaLibraryClass $F72 { \n\tif ( $F132105 ( name ) || name . startsWith ( NUM00 ) || name . startsWith ( NUM00 ) ) return _BOOL ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private Set $F50005 objectNamesFromFilteredNamedObjects ( Set < NamedObject > list , QueryExp query ) { \n\tSet $F50005 result = new HashSet $F50005 $F72 ; \n\tif ( query == null ) { \n\t\tfor ( NamedObject no : list ) $F29791 ( result , no ) } \n\telse { \n\t\tfinal MBeanServer oldServer = QueryEval . getMBeanServer ( ) ; \n\t\tquery . setMBeanServer ( server ) ; \n\t\ttry { \n\t\t\tfor ( NamedObject no : list ) { \n\t\t\t\tboolean res ; \n\t\t\t\ttry { \n\t\t\t\t\tres = query . apply ( no . getName ( ) ) ; \n\t\t\t\t\t} \n\t\t\t\t$F28453 ( res , _BOOL ) if ( res ) $F29791 ( result , no ) } \n\t\t\t} \n\t\tfinally { \n\t\t\tquery . setMBeanServer ( oldServer ) ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F9863 ( child , dx , dy , _BOOL , checkHorizontal , mCallback , checkVertical , mTouchSlop , Math ) "}, {"code": "private Element createEndPoint $F19845 ( name , attrBinding , attrLocation , attrResponseLocation ) throws DOMException { \n\t$F826 ( name ) $F826 ( attrBinding ) $F826 ( attrLocation ) $F16570 ( endPt , doc , name ) endPt . setAttribute ( SAMLNames . BINDING , attrBinding ) ; \n\tendPt . setAttribute ( SAMLNames . LOCATION , attrLocation ) ; \n\tif ( attrResponseLocation != null ) { \n\t\tendPt . setAttribute ( SAMLNames . RESPLOC , attrResponseLocation ) ; \n\t\t} \n\treturn endPt ; \n\t} \n"}, {"code": "void putFile ( String relativePath , Codebase codebase ) { \n\ttry { \n\t\tFile dest = new File ( rootDirectory . getAbsolutePath ( ) , relativePath ) ; \n\t\tFile src = codebase . getFile ( relativePath ) ; \n\t\tboolean srcExists = filesystem . exists ( src ) ; \n\t\tboolean destExists = filesystem . exists ( dest ) ; \n\t\tboolean srcExecutable = filesystem . isExecutable ( src ) ; \n\t\tboolean destExecutable = filesystem . isExecutable ( dest ) ; \n\t\tif ( ! srcExists && ! destExists ) { \n\t\t\tthrow new MoeProblem ( NUM00 , relativePath , src , dest ) ; \n\t\t\t} \n\t\tif ( ! srcExists ) { \n\t\t\tutil . runSvnCommandWithWorkingDirectory ( rootDirectory . getAbsolutePath ( ) , NUM00 , relativePath ) ; \n\t\t\t$F665 } \n\t\ttry { \n\t\t\tfilesystem . makeDirsForFile ( dest ) ; \n\t\t\tfilesystem . copyFile ( src , dest ) ; \n\t\t\t} \n\t\tcatch ( IOException e ) { \n\t\t\tthrow new MoeProblem $F1783 ( e ) ; \n\t\t\t} \n\t\tif ( ! destExists ) { \n\t\t\tutil . runSvnCommandWithWorkingDirectory ( rootDirectory . getAbsolutePath ( ) , NUM00 , NUM00 , relativePath ) ; \n\t\t\t} \n\t\tString mimeType = guessMimeType ( relativePath ) ; \n\t\tif ( mimeType != null ) { \n\t\t\ttry { \n\t\t\t\tutil . runSvnCommandWithWorkingDirectory ( rootDirectory . getAbsolutePath ( ) , NUM00 , NUM00 , mimeType , relativePath ) ; \n\t\t\t\t} \n\t\t\tcatch ( CommandRunner . CommandException e ) $F218635 ( ui , relativePath ) } \n\t\tif ( destExecutable != srcExecutable ) { \n\t\t\tif ( srcExecutable ) { \n\t\t\t\tutil . runSvnCommandWithWorkingDirectory ( rootDirectory . getAbsolutePath ( ) , NUM00 , NUM00 , NUM00 , relativePath ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tutil . runSvnCommandWithWorkingDirectory ( rootDirectory . getAbsolutePath ( ) , NUM00 , NUM00 , relativePath ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( CommandRunner . CommandException e ) { \n\t\tthrow new MoeProblem ( NUM00 + e . stderr ) ; \n\t\t} \n\t} \n"}, {"code": "public String toString $F72 { \n\t$F280 ( buffer ) buffer . append ( toString ( getClass ( ) ) ) ; \n\t$F84 ( buffer ) $F16690 ( buffer , isUseDefault ) $F84 ( buffer ) buffer . append ( useLocaleFormat ) ; \n\t$F20974 ( pattern , buffer ) $F20974 ( locale , buffer ) $F84 ( buffer ) $F92 ( buffer ) } \n"}, {"code": "public void test_multipleResourceLocking_resources10_locktries10 $F72 throws Exception { \n\t$F859 ( properties ) $F154944 ( properties , TestOptions ) $F154946 ( properties , TestOptions ) $F130263 ( properties , TestOptions ) $F130265 ( properties , TestOptions ) $F130267 ( properties , TestOptions ) properties . setProperty ( TestOptions . MAX_LOCK_TRIES , NUM00 ) ; \n\t$F130271 ( properties , TestOptions ) $F130273 ( properties , TestOptions ) properties . setProperty ( TestOptions . TIMEOUT , Long . toString ( NUM00 * NUM00 ) ) ; \n\tdoComparisonTest ( properties ) ; \n\t} \n"}, {"code": "public void startElement $F42838 ( namespaceURI , localName , qName , atts ) throws $F2253 { \n\tthrow new StopParseException $F72 ; \n\t} \n"}, {"code": "public synchronized $F165983 ( newArray , count , System , buf ) "}, {"code": "$F97565 ( value , pattern , locale , calendar , format , _BOOL , fail , e ) "}, {"code": "private $F96 convertBitmapToBytes ( final Bitmap bitmap ) { \n\tint size = bitmap . getRowBytes ( ) * bitmap . getHeight ( ) ; \n\t$F39018 ( out , size ) try { \n\t\tif ( bitmap . compress ( Bitmap . CompressFormat . PNG , NUM00 , out ) ) $F234865 ( out ) $F1375 ( sLogger ) $F1274 } \n\tfinally { \n\t\tCloseableUtils . tryToClose ( out ) ; \n\t\t} \n\t} \n"}, {"code": "private static void saveTemplate ( File parentDir , FileTemplateBase template , final String lineSeparator ) throws IOException { \n\tfinal File templateFile = new File ( parentDir , encodeFileName ( template . getName ( ) , template . getExtension ( ) ) ) ; \n\tFileOutputStream fileOutputStream ; \n\ttry $F209257 ( fileOutputStream , templateFile ) catch ( FileNotFoundException e ) { \n\t\tFileUtil . delete ( templateFile ) ; \n\t\t$F10893 ( fileOutputStream , templateFile ) } \n\tOutputStreamWriter outputStreamWriter = new OutputStreamWriter ( fileOutputStream , CharsetToolkit . UTF8_CHARSET ) ; \n\t$F45667 ( content , template ) if $F1264 ( lineSeparator ) { \n\t\tcontent = StringUtil . convertLineSeparators ( content , lineSeparator ) ; \n\t\t} \n\toutputStreamWriter . write ( content ) ; \n\t$F59 ( outputStreamWriter ) $F59 ( fileOutputStream ) } \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F994 ( newVector ) $F9007 ( newVector ) $F1000 ( newVector ) $F1000 ( newVector ) $F9010 ( newVector , Collections , super ) $F1007 ( newVector ) } \n"}, {"code": "public void addComposite ( TransformTreeNode node ) $F207 ( parts , node ) "}, {"code": "protected static void postProcessFlood ( IHex [ ] hexSet , int modifier ) { \n\tint n ; \n\tIHex field ; \n\tITerrainFactory f = Terrains . getTerrainFactory ( ) ; \n\tfor ( $F6929 ( n , hexSet ) ) { \n\t\tfield = hexSet [ n ] ; \n\t\tint elev = field . getLevel ( ) - modifier ; \n\t\tif ( ( elev == NUM00 ) && ! ( field . containsTerrain ( Terrains . WATER ) ) && ! ( field . containsTerrain ( Terrains . PAVEMENT ) ) ) { \n\t\t\tfield . addTerrain ( f . createTerrain ( Terrains . SWAMP , NUM00 ) ) ; \n\t\t\t} \n\t\telse if ( elev < NUM00 ) { \n\t\t\tif ( elev < - NUM00 ) $F44867 ( elev ) field . removeAllTerrains ( ) ; \n\t\t\tfield . addTerrain ( f . createTerrain ( Terrains . WATER , - elev ) ) ; \n\t\t\tfield . setLevel ( modifier ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public ModuleHandle addModule ( String moduleName , String sessionKey ) { \n\tString sanitizedModuleName = generateUniqueNameIfNullOrEmpty ( moduleName , NUM00 ) ; \n\tModuleHandle moduleHandle = new ModuleHandle ( sanitizedModuleName , sessionKey ) ; \n\tsynchronized ( privateInstanceLock ) $F207 ( modules , moduleHandle ) setTerminated ( _BOOL ) ; \n\treturn moduleHandle ; \n\t} \n"}, {"code": "private static void expand2DigitNumber ( String numberString , WordRelation wordRelation , Item tokenItem ) { \n\tif $F4432 ( numberString ) { \n\t\tif $F4432 ( numberString ) $F845 else { \n\t\t\t$F63127 ( number , digit2num , numberString ) wordRelation . addWord ( tokenItem , number ) ; \n\t\t\t} \n\t\t} \n\telse if $F4432 ( numberString ) { \n\t\t$F63127 ( number , digit2enty , numberString ) wordRelation . addWord ( tokenItem , number ) ; \n\t\t} \n\telse if $F4432 ( numberString ) { \n\t\t$F63127 ( number , digit2teen , numberString ) wordRelation . addWord ( tokenItem , number ) ; \n\t\t} \n\telse { \n\t\t$F63127 ( enty , digit2enty , numberString ) wordRelation . addWord ( tokenItem , enty ) ; \n\t\texpandDigits ( $F47252 ( numberString ) , wordRelation , tokenItem ) ; \n\t\t} \n\t} \n"}, {"code": "protected int indexOf ( String buffer , int start , int end , char ch ) { \n\tfor ( int i = start ; \n\ti < end ; \n\ti ++ ) { \n\t\tif $F44927 ( buffer , i , ch ) { \n\t\t\treturn i ; \n\t\t\t} \n\t\t} \n\t$F150 } \n"}, {"code": "public Factory ( JavacMessages messages , String prefix ) { \n\tthis . prefix = prefix ; \n\tthis . formatter = new BasicDiagnosticFormatter ( messages ) ; \n\tdefaultErrorFlags = $F157944 ( EnumSet , DiagnosticFlag ) ; \n\t} \n"}, {"code": "$F1 protected boolean isFrontierEmpty $F72 { \n\tcleanUpFrontier ( ) ; \n\t$F4173 ( updateMetrics , frontier ) $F18904 ( frontier ) } \n"}, {"code": "public void testSetObject_int_Object_int_int $F72 throws SQLException { \n\tPreparedStatement ps = null ; \n\ttry { \n\t\tString query = NUM00 ; \n\t\tps = conn . prepareStatement ( query ) ; \n\t\tStatement st = null ; \n\t\ttry { \n\t\t\tps . setObject ( NUM00 , Integer . MAX_VALUE , Types . INTEGER , Integer . MAX_VALUE ) ; \n\t\t\t$F1699 ( ps ) $F2715 ( st , conn ) st . execute ( NUM00 + Integer . MAX_VALUE ) ; \n\t\t\t$F19095 ( rs , st ) assertEquals ( NUM00 , getCount ( rs ) ) ; \n\t\t\t} \n\t\t$F137812 ( st ) query = NUM00 ; \n\t\tps = conn . prepareStatement ( query ) ; \n\t\ttry { \n\t\t\tps . setObject ( NUM00 , NUM00 , Types . CHAR , Integer . MIN_VALUE ) ; \n\t\t\t$F1699 ( ps ) $F2715 ( st , conn ) $F131050 ( st ) $F19095 ( rs , st ) assertEquals ( NUM00 , getCount ( rs ) ) ; \n\t\t\t} \n\t\t$F137812 ( st ) query = NUM00 ; \n\t\tps = conn . prepareStatement ( query ) ; \n\t\tBigDecimal bd2 = $F185880 ; \n\t\tps . setObject ( NUM00 , bd2 , Types . DECIMAL , NUM00 ) ; \n\t\t$F1699 ( ps ) query = NUM00 ; \n\t\tps = conn . prepareStatement ( query ) ; \n\t\tDate $F40924 ( d ) ; \n\t\ttry { \n\t\t\tps . setObject ( NUM00 , d , Types . DATE , - NUM00 ) ; \n\t\t\t$F1699 ( ps ) $F2715 ( st , conn ) st . execute ( NUM00 + d . getTime ( ) + NUM00 ) ; \n\t\t\t$F19095 ( rs , st ) assertEquals ( NUM00 , getCount ( rs ) ) ; \n\t\t\t} \n\t\t$F137812 ( st ) query = NUM00 ; \n\t\tps = conn . prepareStatement ( query ) ; \n\t\ttry { \n\t\t\tps . setObject ( NUM00 , NUM00 , Types . BLOB , NUM00 ) ; \n\t\t\t$F1699 ( ps ) } \n\t\t$F137812 ( st ) } \n\t$F137812 ( ps ) try { \n\t\tps . setObject ( NUM00 , NUM00 , Types . CHAR , Integer . MIN_VALUE ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F31184 } \n"}, {"code": "$F1 public boolean isEnabled $F72 { \n\tif ( ( attributeSelectionPanel != null ) && ! isValueOnly ( ) ) $F68134 ( attributeSelectionPanel ) else { \n\t\tif ( this . crsComboBox != null ) $F68134 ( crsComboBox ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F20296 ( mRootDirectory , VolleyLog , files , file , fis , entry , CacheHeader , putEntry ) "}, {"code": "public static double variance $F280936 ( x , mean ) { \n\tdouble var = NUM00 ; \n\tint count = x . length ; \n\tfor ( double aX : x ) { \n\t\tif $F35707 ( Double , aX ) { \n\t\t\tcount -- ; \n\t\t\t} \n\t\telse { \n\t\t\tdouble diff = aX - mean ; \n\t\t\tvar += diff * diff ; \n\t\t\t} \n\t\t} \n\tif ( count < NUM00 ) { \n\t\tcount = NUM00 ; \n\t\t} \n\telse $F218903 ( count ) return var / ( double ) count ; \n\t} \n"}, {"code": "private void stashRequestUser ( RequestAndResponse requestAndResponse ) { \n\tif ( requestAndResponse . wasUserAlreadyStashed ) $F932 requestAndResponse . wasUserAlreadyStashed = _BOOL ; \n\tfinal User user = dbLogic . getUserById ( getEffectiveUserId ( requestAndResponse ) ) ; \n\tif ( user != null ) { \n\t\trequestAndResponse . userIsAdmin = user . getIsAdmin ( ) ; \n\t\trequestAndResponse . userIsAccountClosed = user . getIsAccountClosed ( ) ; \n\t\trequestAndResponse . userOptions = user . getOptions ( ) ; \n\t\t} \n\telse { \n\t\trequestAndResponse . userOptions = NUM00 ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void sendLocationList $F72 { \n\tList $F80423 locationList = lm . getLocationsByNameList ( ) ; \n\t$F95963 ( location ) for ( Location loc : locationList ) { \n\t\tlocation = new $F53625 $F989 ; \n\t\tlocation . add ( new Attribute ( LOCATIONS , loc ) ) ; \n\t\ttry { \n\t\t\tsendMessage ( location ) ; \n\t\t\t} \n\t\tcatch ( IOException ioe ) { \n\t\t\t$F74568 ( log , loc ) } \n\t\t} \n\t} \n"}, {"code": "protected void serializeText ( Text node ) throws SAXException { \n\tif ( fNextIsRaw ) { \n\t\tfNextIsRaw = _BOOL ; \n\t\tfSerializer . processingInstruction ( javax . xml . transform . Result . PI_DISABLE_OUTPUT_ESCAPING , NUM00 ) ; \n\t\tdispatachChars ( node ) ; \n\t\tfSerializer . processingInstruction ( javax . xml . transform . Result . PI_ENABLE_OUTPUT_ESCAPING , NUM00 ) ; \n\t\t} \n\telse { \n\t\tboolean bDispatch = _BOOL ; \n\t\t$F53987 ( fFeatures , WELLFORMED , isTextWellFormed , node ) boolean isElementContentWhitespace = _BOOL ; \n\t\tif ( fIsLevel3DOM ) $F57332 ( isElementContentWhitespace , node ) if ( isElementContentWhitespace ) { \n\t\t\tif $F18594 ( fFeatures , ELEM_CONTENT_WHITESPACE ) { \n\t\t\t\tbDispatch = _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tbDispatch = _BOOL ; \n\t\t\t} \n\t\tif ( ! applyFilter ( node , NodeFilter . SHOW_TEXT ) ) $F932 $F72524 ( bDispatch , dispatachChars , node ) } \n\t} \n"}, {"code": "$F1 public boolean isInsideSoftWrap ( $F1113 VisualPosition visual ) $F8587 ( isInsideSoftWrap , visual , _BOOL ) "}, {"code": "static public InputStream findClusterXML ( String _clusterXML ) { \n\tString schemaNameToBeUsed = _clusterXML ; \n\tInputStream schemaInputStream ; \n\tString schemaFilePath = Constants . Container . CONTAINER_CONFIG_DIRECTORY + NUM00 + schemaNameToBeUsed + ClusterXML . CLUSTER_XML_FILE_SUFFIX ; \n\tschemaInputStream = getResourceStream ( schemaFilePath ) ; \n\tif ( schemaInputStream != null ) { \n\t\tif $F78772 ( _logger , Level ) { \n\t\t\t$F115765 ( _logger , getResourceURL , schemaNameToBeUsed ) } \n\t\treturn schemaInputStream ; \n\t\t} \n\telse { \n\t\tString defaultSchemaFileName = Constants . Container . CONTAINER_CONFIG_DIRECTORY + NUM00 + Constants . Schemas . DEFAULT_SCHEMA + ClusterXML . CLUSTER_XML_FILE_SUFFIX ; \n\t\tschemaInputStream = getResourceStream ( defaultSchemaFileName ) ; \n\t\tif ( schemaInputStream != null ) { \n\t\t\tif $F89967 ( _logger , Level ) { \n\t\t\t\t_logger . warning ( NUM00 + schemaFilePath + NUM00 + getResourceURL ( defaultSchemaFileName ) + NUM00 ) ; \n\t\t\t\t} \n\t\t\treturn schemaInputStream ; \n\t\t\t} \n\t\telse { \n\t\t\tif $F89967 ( _logger , Level ) $F37856 ( _logger , defaultSchemaFileName ) } \n\t\t} \n\treturn schemaInputStream ; \n\t} \n"}, {"code": "public boolean isValid ( World world ) { \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void clear $F72 { \n\t$F114494 ( Arrays , ritems , rsize ) $F114494 ( Arrays , pitems , psize ) rsize = NUM00 ; \n\tpsize = NUM00 ; \n\t} \n"}, {"code": "private ParsePosition next ( final ParsePosition pos ) { \n\tpos . setIndex ( pos . getIndex ( ) + NUM00 ) ; \n\treturn pos ; \n\t} \n"}, {"code": "public final AC growPrio ( int p ) $F8587 ( growPrio , p , curIx ) "}, {"code": "private int flush ( int offset ) { \n\ttry { \n\t\t$F11584 ( _os , _buffer , offset ) _offset = NUM00 ; \n\t\t$F1082 } \n\tcatch ( IOException e ) { \n\t\tthrow new H3ExceptionOut ( e ) ; \n\t\t} \n\t} \n"}, {"code": "protected String generateSectionLabel ( PieDataset dataset , Comparable key ) { \n\tString result = null ; \n\tif ( dataset != null ) { \n\t\t$F131 items = createItemArray ( dataset , key ) ; \n\t\tresult = MessageFormat . format ( this . labelFormat , items ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public synchronized void removeGraphListener ( GraphListener cl ) $F106 ( m_graphListeners , cl ) "}, {"code": "abstract protected void doFadeIn $F72 ; \n"}, {"code": "public void exec $F8306 ( description , baseCommand ) throws BackupException { \n\texec ( description , baseCommand , null , null , null , _BOOL , _BOOL ) ; \n\t} \n"}, {"code": "$F71540 ( offset , txt , getText , i , Integer , setText , String ) "}, {"code": "public static ServiceConfiguration create ( InputStream inStream ) throws $F248925 { \n\ttry { \n\t\tcheckNotNull ( inStream ) ; \n\t\t$F2697 ( properties ) properties . load ( inStream ) ; \n\t\treturn ( create ( properties ) ) ; \n\t\t} \n\t$F14364 ( inStream ) } \n"}, {"code": "$F25545 ( i , count , buf , newbuf , mPool , System ) "}, {"code": "protected $F2027 splitSentence ( String sentence ) { \n\t$F6542 ( w , sentence ) $F22974 ( words , w ) for ( $F1139 ( i , w ) ) words [ i ] = Vocabulary . id ( w [ i ] ) ; \n\treturn words ; \n\t} \n"}, {"code": "public static boolean isFailure ( List < Action > actions ) $F18905 ( actions ) "}, {"code": "public void addToDictionary ( String s ) { \n\t$F15308 ( getAutoComplete ) if ( dict == null ) { \n\t\tsetUp ( ) ; \n\t\tthis . dict = createDefaultDictionary ( ) ; \n\t\t} \n\tdict . addEntry ( s . trim ( ) ) ; \n\t} \n"}, {"code": "public static $F26352 deep_copy ( int M [ ] [ ] ) { \n\t$F26352 C = new int [ M . length ] [ ] ; \n\tfor ( $F1139 ( i , C ) ) { \n\t\tC [ i ] = Arrays . copyOf ( M [ i ] , M [ i ] . length ) ; \n\t\t} \n\treturn C ; \n\t} \n"}, {"code": "public final boolean checkTag ( int identifier ) { \n\treturn Arrays . binarySearch ( identifiers [ NUM00 ] , identifier ) >= NUM00 ; \n\t} \n"}, {"code": "public void waitForMessageToArrive $F72 { \n\t$F973 ( LOG ) $F657 ( start , System ) synchronized ( messages ) { \n\t\ttry { \n\t\t\twhile ( hasReceivedMessage ( ) ) $F34522 ( messages ) } \n\t\tcatch ( InterruptedException e ) $F10090 ( LOG , e ) } \n\t$F5740 ( end , System , start ) $F9472 ( LOG , end ) } \n"}, {"code": "public Date ( String date ) { \n\t$F6542 ( fields , date ) $F231344 ( fields ) $F51416 ( month , Integer , fields ) $F51416 ( day , Integer , fields ) $F51416 ( year , Integer , fields ) if ( ! isValid ( month , day , year ) ) $F824 } \n"}, {"code": "public static void copy ( File src , File dst ) throws IOException { \n\tif $F3444 ( src ) { \n\t\tensureDirectoryExists ( dst ) ; \n\t\t$F1894 ( filesList , src ) for ( String file : filesList ) { \n\t\t\t$F4453 ( srcFile , src , file ) $F4453 ( destFile , dst , file ) copy ( srcFile , destFile ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tcopyFile ( src , dst ) ; \n\t\t} \n\t} \n"}, {"code": "public MapObjects ( PokemonGo api ) $F6988 ( this , api ) "}, {"code": "$F1 public $F96 read ( int length ) throws IOException { \n\tif ( length > available ( ) ) { \n\t\tthrow new EndOfBufferException $F72 ; \n\t\t} \n\t$F2175 ( res , length ) $F21535 ( System , buffer , read_pos , res , length ) read_pos = read_pos + length ; \n\treturn res ; \n\t} \n"}, {"code": "public String encode ( String pString ) throws EncoderException { \n\t$F1338 ( pString ) try $F23983 ( encode , pString , getDefaultCharset ) $F265978 ( e ) } \n"}, {"code": "public void testSortsAccordingNumberOfAttributes $F72 throws Exception $F234199 ( dom1 , XppFactory , dom2 , assertEquals , comparator , xpath ) "}, {"code": "static void incrementKeepAliveCount $F72 { \n\tsynchronized ( keepAliveLock ) { \n\t\tkeepAliveCount ++ ; \n\t\tif ( reaper == null ) { \n\t\t\treaper = AccessController . doPrivileged ( new NewThreadAction ( new Reaper $F72 , NUM00 , _BOOL ) ) ; \n\t\t\t$F2346 ( reaper ) } \n\t\tif ( gcLatencyRequest == null ) { \n\t\t\tgcLatencyRequest = GC . requestLatency ( gcInterval ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "static MethodHandle makeCollectArguments ( MethodHandle target , MethodHandle collector , int collectArgPos , boolean retainOriginalArgs ) { \n\tMethodType targetType = target . type ( ) ; \n\tMethodType collectorType = collector . type ( ) ; \n\tint collectArgCount = collectorType . parameterCount ( ) ; \n\t$F6969 collectValType = collectorType . returnType ( ) ; \n\tint collectValCount = ( collectValType == $F78753 ? NUM00 : NUM00 ) ; \n\tMethodType srcType = targetType . dropParameterTypes ( collectArgPos , collectArgPos + collectValCount ) ; \n\tif ( ! retainOriginalArgs ) { \n\t\tsrcType = srcType . insertParameterTypes ( collectArgPos , collectorType . parameterList ( ) ) ; \n\t\t} \n\tMethodType lambdaType = srcType . invokerType ( ) ; \n\tName [ ] names = arguments ( NUM00 , lambdaType ) ; \n\tfinal int collectNamePos = names . length - NUM00 ; \n\tfinal int targetNamePos = names . length - NUM00 ; \n\tName [ ] collectorArgs = Arrays . copyOfRange ( names , NUM00 + collectArgPos , NUM00 + collectArgPos + collectArgCount ) ; \n\tnames [ collectNamePos ] = new Name ( collector , $F2486 ( collectorArgs ) ) ; \n\tName [ ] targetArgs = new Name [ targetType . parameterCount ( ) ] ; \n\tint inputArgPos = NUM00 ; \n\tint targetArgPos = NUM00 ; \n\tint chunk = collectArgPos ; \n\tSystem . arraycopy ( names , inputArgPos , targetArgs , targetArgPos , chunk ) ; \n\tinputArgPos += chunk ; \n\ttargetArgPos += chunk ; \n\tif ( collectValType != $F78753 ) $F49219 ( targetArgs , targetArgPos , names , collectNamePos ) chunk = collectArgCount ; \n\tif ( retainOriginalArgs ) $F21534 ( System , names , inputArgPos , targetArgs , targetArgPos , chunk ) inputArgPos += chunk ; \n\tchunk = targetArgs . length - targetArgPos ; \n\tSystem . arraycopy ( names , inputArgPos , targetArgs , targetArgPos , chunk ) ; \n\tassert ( inputArgPos + chunk == collectNamePos ) ; \n\tnames [ targetNamePos ] = new Name ( target , $F2486 ( targetArgs ) ) ; \n\tLambdaForm form = new LambdaForm ( NUM00 , lambdaType . parameterCount ( ) , names ) ; \n\treturn SimpleMethodHandle . make ( srcType , form ) ; \n\t} \n"}, {"code": "public InSpacePredicate ( Object ... values ) { \n\t_inValues = $F22202 ; \n\tfor ( Object value : values ) $F207 ( _inValues , value ) } \n"}, {"code": "private static void delete ( File f ) { \n\tif $F3444 ( f ) { \n\t\tfor ( $F3445 ( c , f ) ) { \n\t\t\tdelete ( c ) ; \n\t\t\t} \n\t\t} \n\tif $F7119 ( f ) { \n\t\tPrintStream err = System . err ; \n\t\t$F7957 ( err , f ) } \n\t} \n"}, {"code": "protected $F3803 prepareSortKeyStatements ( List < SortKey > sortKeys ) { \n\t$F10144 ( keys ) for ( $F2277 ( i , sortKeys ) ) { \n\t\tSortKey sortKey = sortKeys . get ( i ) ; \n\t\tkeys . add ( explicitMapping . getDbColumnName ( sortKey . getField ( ) ) + ( sortKey . isAscendingOrder ( ) ? NUM00 : NUM00 ) ) ; \n\t\t} \n\treturn keys ; \n\t} \n"}, {"code": "public static String experimenterToString ( OFInstructionExperimenter inst , Logger log ) { \n\treturn Long . toString ( inst . getExperimenter ( ) ) ; \n\t} \n"}, {"code": "$F20664 public void elementType $F21324 ( name , model , memberOf , flags ) { \n\tElementType e = new ElementType ( name , model , memberOf , flags , this ) ; \n\ttheElementTypes . put ( name . toLowerCase ( ) , e ) ; \n\tif ( memberOf == M_ROOT ) theRoot = e ; \n\t} \n"}, {"code": "public static void printMagnitudes $F72 { \n\tprintMagnitudes ( System . out ) ; \n\t} \n"}, {"code": "private Optional < CuratorFramework > createClient ( String zookeeperUrl ) { \n\tif $F16093 ( StringUtils , zookeeperUrl ) { \n\t\tCuratorFramework client = ConfigurationsUtils . getClient ( zookeeperUrl ) ; \n\t\t$F2346 ( client ) $F122628 ( Optional , client ) } \n\telse $F21170 ( Optional ) } \n"}, {"code": "public static String addCvDescription $F1947 ( toolTip , cvDescription , mask ) { \n\tString descString = cvDescription ; \n\tString temp = getMaskDescription ( mask ) ; \n\tif $F4012 ( temp ) $F15894 ( descString , temp ) if ( PaneProgFrame . getShowCvNumbers ( ) && ( descString != null ) ) { \n\t\tif ( toolTip == null ) { \n\t\t\ttoolTip = descString ; \n\t\t\t} \n\t\telse { \n\t\t\ttoolTip = addTextHTMLaware ( toolTip , NUM00 + descString + NUM00 ) ; \n\t\t\t} \n\t\t} \n\telse $F23170 ( toolTip ) return toolTip ; \n\t} \n"}, {"code": "public final static int readRawUntil ( final StringBuilder out , final String in , final int start , final char end ) { \n\tint pos = start ; \n\twhile $F7007 ( pos , in ) { \n\t\t$F1090 ( ch , in , pos ) $F15290 ( ch , end ) out . append ( ch ) ; \n\t\tpos ++ ; \n\t\t} \n\treturn $F9615 ( pos , in ) ? - NUM00 : pos ; \n\t} \n"}, {"code": "private static void convertToHTML40 ( AttributeSet from , MutableAttributeSet to ) { \n\t$F252639 ( keys , from ) String value = NUM00 ; \n\twhile $F1444 ( keys ) { \n\t\t$F20039 ( key , keys ) if ( key instanceof CSS . Attribute ) { \n\t\t\tvalue = value + NUM00 + key + NUM00 + from . getAttribute ( key ) + NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tto . addAttribute ( key , from . getAttribute ( key ) ) ; \n\t\t\t} \n\t\t} \n\tif $F4012 ( value ) { \n\t\tto . addAttribute ( HTML . Attribute . STYLE , value ) ; \n\t\t} \n\t} \n"}, {"code": "public synchronized void close $F72 throws IOException { \n\t$F8249 ( in ) $F59 ( in ) in = null ; \n\tbuf = null ; \n\t} \n"}, {"code": "$F65857 ( connection , oldFactory , sc , SSLContext , trustAllCerts , newFactory , LOG , LOG_TAG , e ) "}, {"code": "public void updateAmount $F72 $F7429 ( setAmt , getTotalAmount ) "}, {"code": "public void testCreationUnique $F72 { \n\tInstances data ; \n\t$F95963 ( atts ) String relName ; \n\trelName = NUM00 ; \n\t$F53628 ( atts ) ; \n\tatts . add ( $F84263 ) ; \n\tatts . add ( $F84263 ) ; \n\tatts . add ( new Attribute $F6600 ) ; \n\tatts . add ( new Attribute ( NUM00 , new $F5 ( $F196441 ( Arrays ) ) ) ) ; \n\tatts . add ( new Attribute ( NUM00 , new $F5 ( Arrays . asList ( $F78037 ) ) ) ) ; \n\tatts . add ( new Attribute ( NUM00 , ( $F5 ) null ) ) ; \n\tdata = new Instances ( relName , atts , NUM00 ) ; \n\tassertEquals ( NUM00 , relName , data . relationName ( ) ) ; \n\tassertEquals ( NUM00 , atts . size ( ) , data . numAttributes ( ) ) ; \n\t} \n"}, {"code": "private void updateLegends $F72 { \n\tif ( m_span == null ) { \n\t\t$F26681 ( m_span ) } \n\t$F58099 ( padder ) $F58099 ( padd2 ) m_span . setPreferredSize ( new Dimension ( $F29854 ( m_span ) , ( $F2958 ( m_plots ) ) * NUM00 ) ) ; \n\tm_span . setMaximumSize ( new Dimension ( $F29854 ( m_span ) , ( $F2958 ( m_plots ) ) * NUM00 ) ) ; \n\tLegendEntry tmp ; \n\t$F78338 ( gb ) $F78338 ( gb2 ) $F45960 ( constraints ) $F7600 ( m_span ) padder . setLayout ( gb ) ; \n\tm_span . setLayout ( gb2 ) ; \n\t$F76547 ( constraints , GridBagConstraints ) constraints . gridx = NUM00 ; \n\tconstraints . gridy = NUM00 ; \n\tconstraints . weightx = NUM00 ; \n\t$F45961 ( constraints , GridBagConstraints ) constraints . gridwidth = NUM00 ; \n\tconstraints . gridheight = NUM00 ; \n\t$F184708 ( constraints ) padder . add ( m_span , constraints ) ; \n\tconstraints . gridx = NUM00 ; \n\tconstraints . gridy = NUM00 ; \n\tconstraints . weightx = NUM00 ; \n\t$F45970 ( constraints , GridBagConstraints ) constraints . gridwidth = NUM00 ; \n\tconstraints . gridheight = NUM00 ; \n\tconstraints . weighty = NUM00 ; \n\t$F184708 ( constraints ) padder . add ( padd2 , constraints ) ; \n\tconstraints . weighty = NUM00 ; \n\tsetViewportView ( padder ) ; \n\t$F76547 ( constraints , GridBagConstraints ) constraints . gridx = NUM00 ; \n\tconstraints . gridy = NUM00 ; \n\tconstraints . weightx = NUM00 ; \n\t$F45961 ( constraints , GridBagConstraints ) constraints . gridwidth = NUM00 ; \n\tconstraints . gridheight = NUM00 ; \n\tconstraints . weighty = NUM00 ; \n\t$F184708 ( constraints ) for ( $F2277 ( i , m_plots ) ) { \n\t\ttmp = new LegendEntry ( m_plots . get ( i ) , i ) ; \n\t\tconstraints . gridy = i ; \n\t\tm_span . add ( tmp , constraints ) ; \n\t\t} \n\t} \n"}, {"code": "public String evaluate ( XPathContext xctxt , int context , org . apache . xml . utils . PrefixResolver nsNode ) throws $F1872 { \n\tif ( null != m_simpleString ) { \n\t\treturn m_simpleString ; \n\t\t} \n\telse if ( null != m_parts ) { \n\t\tfinal FastStringBuffer buf = getBuffer ( ) ; \n\t\tString out = null ; \n\t\t$F2199 ( n , m_parts ) try { \n\t\t\tfor ( $F119 ( i , n ) ) { \n\t\t\t\t$F97670 ( part , m_parts , i ) part . evaluate ( xctxt , buf , context , nsNode ) ; \n\t\t\t\t} \n\t\t\t$F6947 ( out , buf ) } \n\t\tfinally { \n\t\t\tif ( USE_OBJECT_POOL ) { \n\t\t\t\tStringBufferPool . free ( buf ) ; \n\t\t\t\t} \n\t\t\telse $F357905 ( buf ) } \n\t\treturn out ; \n\t\t} \n\telse $F2455 } \n"}, {"code": "public static $F96 readDex ( File file ) throws IOException { \n\treturn readDex ( file . toPath ( ) ) ; \n\t} \n"}, {"code": "public void addUpdateListener ( AnimatorUpdateListener listener ) { \n\tif ( mUpdateListeners == null ) { \n\t\tmUpdateListeners = new ArrayList < AnimatorUpdateListener > $F72 ; \n\t\t} \n\tmUpdateListeners . add ( listener ) ; \n\t} \n"}, {"code": "public void runCommercial ( String stream , int length ) { \n\tif $F4251 ( stream ) { \n\t\tcommercialResult ( stream , NUM00 , TwitchApi . RequestResult . FAILED ) ; \n\t\t} \n\telse { \n\t\tString channel = NUM00 + stream ; \n\t\tif ( isChannelOpen ( channel ) ) { \n\t\t\tg . printLine ( channel , NUM00 + length + NUM00 ) ; \n\t\t\t} \n\t\telse { \n\t\t\tg . printLine ( NUM00 + length + NUM00 + stream + NUM00 ) ; \n\t\t\t} \n\t\tapi . runCommercial ( stream , settings . getString ( NUM00 ) , length ) ; \n\t\t} \n\t} \n"}, {"code": "public void addSubTree ( int index , $F27878 children ) { \n\tList < NodeDescriptor > nodeDescriptors = convertTreeNodesHelper ( children ) ; \n\troots . addChildren ( index , nodeDescriptors ) ; \n\t$F245843 ( nodes ) for ( NodeDescriptor child : nodeDescriptors ) { \n\t\tnodes . add ( child . getNode ( ) ) ; \n\t\t} \n\tif $F5973 ( nodes ) { \n\t\tfireEvent ( new StoreAddEvent ( index , nodes ) ) ; \n\t\t} \n\t} \n"}, {"code": "void generateWhile ( Tree . WhileStatement that ) { \n\tTree . WhileClause whileClause = that . getWhileClause ( ) ; \n\tList < VarHolder > vars = specialConditionsAndBlock ( whileClause . getConditionList ( ) , whileClause . getBlock ( ) , NUM00 , _BOOL ) ; \n\tfor ( VarHolder v : vars ) { \n\t\tv . forget ( ) ; \n\t\t} \n\t} \n"}, {"code": "public static double igamma ( double a , double x ) { \n\tdouble coef = ( Math . exp ( - x ) * Math . pow ( x , a ) ) / gamma ( a ) ; \n\tdouble sum = NUM00 ; \n\tfor ( $F6268 ( i ) ) { \n\t\tsum += ( gamma ( a ) / gamma ( a + NUM00 + ( double ) i ) ) * Math . pow ( x , ( double ) i ) ; \n\t\t} \n\treturn ( coef * sum ) ; \n\t} \n"}, {"code": "public void initializeActiveSlotsList ( String slots ) { \n\t$F30647 ( activeSlotsList ) for ( $F55140 ( s , slots ) ) $F207 ( activeSlotsList , s ) } \n"}, {"code": "private static String convertActionTypeToIntent ( RamlActionType actionType , boolean isTargetCollection ) { \n\tswitch ( actionType ) { \n\t\tcase DELETE : $F1278 case GET : $F1278 case POST : if ( isTargetCollection ) $F2455 case PUT : $F1278 case PATCH : $F1278 $F1267 $F1278 } \n\t} \n"}, {"code": "public static String hide ( final String key ) { \n\treturn isHidden ( key ) ? key : HIDDEN_PREFIX . concat ( key ) ; \n\t} \n"}, {"code": "private synchronized IMqttToken removeMqttToken ( Bundle data ) { \n\tString activityToken = data . getString ( MqttServiceConstants . CALLBACK_ACTIVITY_TOKEN ) ; \n\tif ( activityToken != null ) { \n\t\t$F27213 ( tokenNumber , Integer , activityToken ) IMqttToken token = tokenMap . get ( tokenNumber ) ; \n\t\ttokenMap . delete ( tokenNumber ) ; \n\t\treturn token ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public static boolean isExplicitAllType $F4374 ( types ) { \n\treturn types != null && types . length == NUM00 && ALL . equals ( types [ NUM00 ] ) ; \n\t} \n"}, {"code": "public static double incompleteBetaFraction2 $F7635 ( a , b , x ) { \n\tdouble xk , pk , pkm1 , pkm2 , qk , qkm1 , qkm2 ; \n\tdouble k1 , k2 , k3 , k4 , k5 , k6 , k7 , k8 ; \n\tdouble r , t , ans , z , thresh ; \n\tint n ; \n\tk1 = a ; \n\tk2 = b - NUM00 ; \n\tk3 = a ; \n\tk4 = a + NUM00 ; \n\tk5 = NUM00 ; \n\tk6 = a + b ; \n\tk7 = a + NUM00 ; \n\t; \n\tk8 = a + NUM00 ; \n\tpkm2 = NUM00 ; \n\tqkm2 = NUM00 ; \n\tpkm1 = NUM00 ; \n\tqkm1 = NUM00 ; \n\tz = x / ( NUM00 - x ) ; \n\tans = NUM00 ; \n\tr = NUM00 ; \n\tn = NUM00 ; \n\tthresh = NUM00 * MACHEP ; \n\tdo { \n\t\txk = - ( z * k1 * k2 ) / ( k3 * k4 ) ; \n\t\tpk = pkm1 + pkm2 * xk ; \n\t\tqk = qkm1 + qkm2 * xk ; \n\t\tpkm2 = pkm1 ; \n\t\tpkm1 = pk ; \n\t\tqkm2 = qkm1 ; \n\t\tqkm1 = qk ; \n\t\txk = ( z * k5 * k6 ) / ( k7 * k8 ) ; \n\t\tpk = pkm1 + pkm2 * xk ; \n\t\tqk = qkm1 + qkm2 * xk ; \n\t\tpkm2 = pkm1 ; \n\t\tpkm1 = pk ; \n\t\tqkm2 = qkm1 ; \n\t\tqkm1 = qk ; \n\t\tif ( qk != NUM00 ) { \n\t\t\tr = pk / qk ; \n\t\t\t} \n\t\tif ( r != NUM00 ) { \n\t\t\tt = Math . abs ( ( ans - r ) / r ) ; \n\t\t\tans = r ; \n\t\t\t} \n\t\telse { \n\t\t\tt = NUM00 ; \n\t\t\t} \n\t\t$F88060 ( t , thresh , ans ) k1 += NUM00 ; \n\t\tk2 -= NUM00 ; \n\t\tk3 += NUM00 ; \n\t\tk4 += NUM00 ; \n\t\tk5 += NUM00 ; \n\t\tk6 += NUM00 ; \n\t\tk7 += NUM00 ; \n\t\tk8 += NUM00 ; \n\t\tif ( $F149599 ( Math , qk , pk ) > big ) $F149602 ( pkm2 , biginv , pkm1 , qkm2 , qkm1 ) if ( $F7637 ( Math , qk , biginv ) || $F7637 ( Math , pk , biginv ) ) $F149602 ( pkm2 , big , pkm1 , qkm2 , qkm1 ) } \n\twhile ( ++ n < NUM00 ) ; \n\treturn ans ; \n\t} \n"}, {"code": "private String readUntil ( $F1469 delimiter , boolean returnText ) throws $F139192 { \n\tint start = position ; \n\tStringBuilder result = null ; \n\tif ( returnText && text != null ) { \n\t\t$F6932 ( result ) result . append ( text ) ; \n\t\t} \n\tsearch : while ( _BOOL ) { \n\t\tif ( position + delimiter . length > limit ) { \n\t\t\tif ( start < position && returnText ) { \n\t\t\t\t$F39896 ( result ) $F14090 ( result , buffer , start , position ) } \n\t\t\tif ( ! fillBuffer ( delimiter . length ) ) { \n\t\t\t\tcheckRelaxed ( UNEXPECTED_EOF ) ; \n\t\t\t\ttype = COMMENT ; \n\t\t\t\t$F1274 } \n\t\t\tstart = position ; \n\t\t\t} \n\t\tfor ( $F1139 ( i , delimiter ) ) { \n\t\t\tif $F219258 ( buffer , position , i , delimiter ) { \n\t\t\t\tposition ++ ; \n\t\t\t\tcontinue search ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F597 } \n\tint end = position ; \n\tposition += delimiter . length ; \n\tif ( ! returnText ) $F1337 else $F139251 ( result , stringPool , buffer , start , end ) } \n"}, {"code": "public boolean exists ( String key ) $F8587 ( exists , key , _BOOL ) "}, {"code": "private Config $F72 $F184395 "}, {"code": "public boolean isLeaf $F72 $F52232 ( children ) "}, {"code": "public static void drawShadow ( final Rectangle2D rect , final Graphics2D g2 ) { \n\t$F317 ( g2S , g2 ) Rectangle2D shadow = new $F1634 ( rect . getX ( ) + NUM00 , rect . getY ( ) + ProcessDrawer . HEADER_HEIGHT + NUM00 , rect . getWidth ( ) , rect . getHeight ( ) - ProcessDrawer . HEADER_HEIGHT ) ; \n\t$F13609 ( bottom ) bottom . moveTo ( shadow . getX ( ) , rect . getMaxY ( ) ) ; \n\tbottom . lineTo ( rect . getMaxX ( ) , rect . getMaxY ( ) ) ; \n\tbottom . lineTo ( shadow . getMaxX ( ) , shadow . getMaxY ( ) ) ; \n\tbottom . lineTo ( shadow . getMinX ( ) , shadow . getMaxY ( ) ) ; \n\t$F2272 ( bottom ) g2S . setPaint ( new GradientPaint ( $F10740 ( rect ) , ( float ) rect . getMaxY ( ) , Color . gray , $F10740 ( rect ) , ( float ) shadow . getMaxY ( ) , TRANSPARENT_GRAY ) ) ; \n\tg2S . fill ( bottom ) ; \n\t$F13609 ( right ) right . moveTo ( rect . getMaxX ( ) , shadow . getMinY ( ) ) ; \n\tright . lineTo ( shadow . getMaxX ( ) , shadow . getMinY ( ) ) ; \n\tright . lineTo ( shadow . getMaxX ( ) , shadow . getMaxY ( ) ) ; \n\tright . lineTo ( rect . getMaxX ( ) , rect . getMaxY ( ) ) ; \n\t$F2272 ( right ) g2S . setPaint ( new GradientPaint ( ( float ) rect . getMaxX ( ) , $F10783 ( shadow ) , Color . gray , ( float ) shadow . getMaxX ( ) , $F10783 ( shadow ) , TRANSPARENT_GRAY ) ) ; \n\tg2S . fill ( right ) ; \n\t$F355 ( g2S ) } \n"}, {"code": "$F129060 ( views , direction , focusableMode , focusableCount , descendantFocusability , getDescendantFocusability , FOCUS_BLOCK_DESCENDANTS , i , getChildCount , child , getChildAt , VISIBLE , ii , infoForChild , mCurItem , FOCUS_AFTER_DESCENDANTS , isFocusable , FOCUSABLES_TOUCH_MODE , isInTouchMode , isFocusableInTouchMode , this ) "}, {"code": "private boolean isValid ( CharSequence text ) { \n\tfor ( $F1088 ( i , text ) ) { \n\t\t$F1280 ( c , text , i ) boolean valid = $F31339 ( c ) || $F56314 ( c ) || $F56314 ( c ) ; \n\t\t$F42316 ( valid , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void interrupt ( final Thread thread ) { \n\t$F36258 ( thread ) } \n"}, {"code": "private void writeObject $F9338 ( s ) throws $F3258 { \n\t$F9339 ( s ) $F27636 ( s , attrs ) Enumeration $F8625 attrEnum = attrs . elements ( ) ; \n\twhile $F1444 ( attrEnum ) { \n\t\ts . writeObject ( attrEnum . nextElement ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static Container east ( Component east ) { \n\treturn Container . encloseIn ( new BorderLayout $F72 , east , BorderLayout . EAST ) ; \n\t} \n"}, {"code": "public static $F131 putAll $F72 { \n\tRegion region = cache . getRegion ( Region . SEPARATOR + REGION_NAME ) ; \n\tassertNotNull ( region ) ; \n\ttry { \n\t\tMap map = new LinkedHashMap $F72 ; \n\t\tmap . put ( PUTALL_KEY1 , PUTALL_VALUE1 ) ; \n\t\tmap . put ( PUTALL_KEY2 , PUTALL_VALUE2 ) ; \n\t\tmap . put ( PUTALL_KEY3 , PUTALL_VALUE3 ) ; \n\t\tmap . put ( PUTALL_KEY4 , PUTALL_VALUE4 ) ; \n\t\tmap . put ( PUTALL_KEY5 , PUTALL_VALUE5 ) ; \n\t\tregion . putAll ( map , NUM00 ) ; \n\t\tEventID [ ] evids = new EventID $F380 ; \n\t\tevids [ NUM00 ] = putAlleventId1 ; \n\t\tevids [ NUM00 ] = putAlleventId2 ; \n\t\tevids [ NUM00 ] = putAlleventId3 ; \n\t\tevids [ NUM00 ] = putAlleventId4 ; \n\t\tevids [ NUM00 ] = putAlleventId5 ; \n\t\tassertNotNull ( evids [ NUM00 ] ) ; \n\t\tassertNotNull ( evids [ NUM00 ] ) ; \n\t\tassertNotNull ( evids [ NUM00 ] ) ; \n\t\tassertNotNull ( evids [ NUM00 ] ) ; \n\t\tassertNotNull ( evids [ NUM00 ] ) ; \n\t\treturn evids ; \n\t\t} \n\t$F17395 ( fail , e ) $F1274 } \n"}, {"code": "public void loadLayout ( File oFile , boolean newTab ) { \n\tloadLayout ( oFile , newTab , _BOOL ) ; \n\t} \n"}, {"code": "public void track ( File file , Object marker , FileDeleteStrategy deleteStrategy ) { \n\t$F896 ( file ) addTracker ( file . getPath ( ) , marker , deleteStrategy ) ; \n\t} \n"}, {"code": "public static void CF5 $F50490 ( x , f , c , nx ) { \n\tdouble sum1 = NUM00 ; \n\tdouble sum2 = NUM00 ; \n\tdouble yj ; \n\tfor ( $F9993 ( j , nx ) ) { \n\t\tif ( j % NUM00 == NUM00 ) { \n\t\t\tyj = x [ j - NUM00 ] - NUM00 * x [ NUM00 ] * Math . cos ( NUM00 * PI * x [ NUM00 ] + j * PI / nx ) ; \n\t\t\tsum1 += $F63533 ( yj , Math , PI ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F63531 ( yj , x , j , Math , PI , nx ) if ( j == NUM00 ) { \n\t\t\t\tsum2 += yj < NUM00 - NUM00 * Math . sqrt ( NUM00 ) ? Math . abs ( yj ) : ( NUM00 + $F94029 ( yj ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsum2 += $F63533 ( yj , Math , PI ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tf [ NUM00 ] = x [ NUM00 ] + sum1 ; \n\tf [ NUM00 ] = NUM00 - x [ NUM00 ] + sum2 ; \n\tc [ NUM00 ] = x [ NUM00 ] - NUM00 * x [ NUM00 ] * Math . sin ( NUM00 * x [ NUM00 ] * PI + NUM00 * PI / nx ) - NUM00 * x [ NUM00 ] + NUM00 ; \n\t} \n"}, {"code": "$F42603 ( path , WINDOWS_SEPARATOR , UNIX_SEPARATOR ) "}, {"code": "public boolean hasParameter ( String name ) { \n\treturn _parameters . hasParameter ( name ) ; \n\t} \n"}, {"code": "$F1 public long freeMemory ( long windowId ) throws IOException { \n\tlong size = keyStream . dataSizeUpToWindow ( windowId ) + valueStream . dataSizeUpToWindow ( windowId ) ; \n\twindowsForFreeMemory . add ( windowId ) ; \n\treturn size ; \n\t} \n"}, {"code": "public static boolean isSQL99NonReservedKeyword ( String identifier ) { \n\t$F896 ( identifier ) return Arrays . binarySearch ( SQL99_NON_RESERVED , identifier . toUpperCase ( ) ) >= NUM00 ; \n\t} \n"}, {"code": "$F1431 public static $F4203 void sort ( $F5675 list , $F38875 ( comparator ) ) { \n\t$F10809 array = list . toArray ( ( $F10809 ) $F103414 ( list ) ) ; \n\tArrays . sort ( array , comparator ) ; \n\tint i = NUM00 ; \n\t$F55529 it = list . listIterator ( ) ; \n\twhile $F2921 ( it ) { \n\t\t$F24630 ( it ) it . set ( array [ i ++ ] ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public long handleCommit ( final long commitTime ) { \n\tif ( error != null ) throw new IndexInconsistentError ( error ) ; \n\tfinal IRootBlockView view = journal . getRootBlockView ( ) ; \n\tfinal ByteBuffer rbv = view . asReadOnlyBuffer ( ) ; \n\tfinal ByteBuffer bb = ByteBuffer . allocate ( rbv . capacity ( ) ) ; \n\tfor ( int i = NUM00 ; \n\ti < rbv . capacity ( ) ; \n\ti ++ ) { \n\t\tbb . put ( rbv . get ( ) ) ; \n\t\t} \n\t$F14257 ( bb ) return journal . write ( bb ) ; \n\t} \n"}, {"code": "public boolean isAppendTaskName $F72 { \n\treturn appendTaskName ; \n\t} \n"}, {"code": "public static final String toString ( String str ) { \n\t$F1747 ( str ) $F1538 ( buffer ) toByteArray ( buffer , str ) ; \n\t$F92 ( buffer ) } \n"}, {"code": "public static $F13096 makeRandomCacheEntry ( $F96 data , boolean isExpired , boolean needsRefresh ) { \n\t$F6822 ( random ) $F13096 entry = new $F13096 $F72 ; \n\tif ( data != null ) $F6988 ( entry , data ) else { \n\t\tentry . data = $F13106 ( random ) ; \n\t\t} \n\tentry . etag = $F13111 ( String , random ) ; \n\tentry . lastModified = random . nextLong ( ) ; \n\tentry . ttl = isExpired ? NUM00 : Long . MAX_VALUE ; \n\tentry . softTtl = needsRefresh ? NUM00 : Long . MAX_VALUE ; \n\treturn entry ; \n\t} \n"}, {"code": "public static double max $F9830 ( data ) { \n\tdouble max = Double . NaN ; \n\tfor ( $F1139 ( i , data ) ) { \n\t\t$F155599 ( Double , data , i ) if ( Double . isNaN ( max ) || data [ i ] > max ) max = data [ i ] ; \n\t\t} \n\treturn max ; \n\t} \n"}, {"code": "private static boolean isStartElement ( String line ) { \n\t$F24867 ( first , line ) $F24867 ( last , line ) if ( last < first ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\t$F24867 ( firstEnd , line ) $F24867 ( lastEnd , line ) if ( ( firstEnd != first ) && ( ( lastEnd + NUM00 ) != last ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "long readLong $F72 throws IOException { \n\treturn ( ( $F116968 ( _is ) < < NUM00 ) | ( $F116968 ( _is ) < < NUM00 ) | ( $F116968 ( _is ) < < NUM00 ) | ( $F116968 ( _is ) < < NUM00 ) | ( $F116968 ( _is ) < < NUM00 ) | ( $F116968 ( _is ) < < NUM00 ) | ( $F116968 ( _is ) < < NUM00 ) | ( $F116968 ( _is ) ) ) ; \n\t} \n"}, {"code": "$F1 public Instance remove ( int index ) $F20067 ( m_Instances , index ) "}, {"code": "protected static String extractAccessKey ( String s3uri ) { \n\treturn s3uri . substring ( $F12707 ( s3uri ) , s3uri . indexOf ( NUM00 , $F12707 ( s3uri ) ) ) ; \n\t} \n"}, {"code": "public boolean doTransaction ( DB db , Object threadstate ) throws WorkloadException { \n\tboolean ret = _BOOL ; \n\t$F25238 ( st , System ) String op = operationchooser . nextString ( ) ; \n\tif $F87842 ( op ) { \n\t\tret = doTransactionRead ( db ) ; \n\t\t} \n\telse if $F87842 ( op ) { \n\t\tret = doTransactionUpdate ( db ) ; \n\t\t} \n\telse if $F87842 ( op ) { \n\t\tret = doTransactionInsert ( db ) ; \n\t\t} \n\telse if $F87842 ( op ) { \n\t\tret = doTransactionScan ( db ) ; \n\t\t} \n\telse { \n\t\tret = doTransactionReadModifyWrite ( db ) ; \n\t\t} \n\t$F25238 ( en , System ) _measurements . measure ( _operations . get ( op ) , $F90472 ( en , st ) ) ; \n\tif ( ret ) _measurements . reportReturnCode ( _operations . get ( op ) , - NUM00 ) ; \n\telse { \n\t\t_measurements . reportReturnCode ( _operations . get ( op ) , NUM00 ) ; \n\t\t} \n\tactualopcount . addAndGet ( NUM00 ) ; \n\treturn ret ; \n\t} \n"}, {"code": "public ToStringHelper addValue ( boolean value ) $F35308 ( addHolder , String , value ) "}, {"code": "public static void copyExcept ( Object src , Object dst , int oldSize , int removeIndex ) { \n\tif ( removeIndex > NUM00 && oldSize > NUM00 ) $F138343 ( System , src , dst , removeIndex ) if ( removeIndex < oldSize ) { \n\t\tSystem . arraycopy ( src , removeIndex + NUM00 , dst , removeIndex , oldSize - removeIndex - NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public SiteMonitor $F4374 ( urlList ) { \n\tsiteUrlList = urlList ; \n\t} \n"}, {"code": "private Set unionIPRange $F7233 ( ipWithSubmask1 , ipWithSubmask2 ) { \n\t$F19850 ( set ) if ( Arrays . areEqual ( ipWithSubmask1 , ipWithSubmask2 ) ) $F207 ( set , ipWithSubmask1 ) else $F23287 ( set , ipWithSubmask1 , ipWithSubmask2 ) return set ; \n\t} \n"}, {"code": "public Optional < BlazeVertex > vertex ( final String vertexId ) { \n\ttry ( final CloseableIterator $F130408 it = vertices ( vertexId ) ) { \n\t\tfinal Optional < BlazeVertex > v = it . hasNext ( ) ? Optional . of ( ( BlazeVertex ) it . next ( ) ) : Optional . empty ( ) ; \n\t\tif $F2921 ( it ) $F1155 ( vertexId ) return v ; \n\t\t} \n\t} \n"}, {"code": "public static long addAndGet ( AtomicLong current , long toAdd ) { \n\tlong u , r ; \n\tdo { \n\t\t$F16478 ( r , current ) if ( r == Long . MAX_VALUE ) { \n\t\t\treturn Long . MAX_VALUE ; \n\t\t\t} \n\t\tu = addCap ( r , toAdd ) ; \n\t\t} \n\twhile $F59753 ( current , r , u ) ; \n\treturn u ; \n\t} \n"}, {"code": "private void start ( HttpServletRequest request , HttpServletResponse response ) throws IOException { \n\t$F10362 ( label , request ) $F10362 ( detail , request ) MonKey key = getMonKey ( label , detail , DEFAULT_UNITS ) ; \n\tstartMon ( key ) ; \n\t$F70095 ( out , response ) out . println ( OK + NUM00 + label ) ; \n\t} \n"}, {"code": "public double norm $F72 { \n\tdouble sum = NUM00 ; \n\tfor ( $F1139 ( i , components ) ) $F60596 ( sum , components , i ) $F41531 ( Math , sum ) } \n"}, {"code": "public static double P_Harmonic ( int $F129596 , int Ypred [ ] [ ] ) { \n\tint allMissings = NUM00 ; \n\tint N = Y . length ; \n\tdouble loss = NUM00 ; \n\tfor ( $F119 ( i , N ) ) { \n\t\tif ( allMissing ( Y [ i ] ) ) $F118993 ( allMissings ) double curLoss = P_Harmonic ( Y [ i ] , Ypred [ i ] ) ; \n\t\tif $F35707 ( Double , curLoss ) $F118993 ( allMissings ) loss += curLoss ; \n\t\t} \n\treturn loss / $F250385 ( N , allMissings ) ; \n\t} \n"}, {"code": "public void writeEntry ( CCacheOutputStream cos ) throws IOException { \n\tcos . write16 ( adType ) ; \n\tcos . write32 ( adData . length ) ; \n\t$F17918 ( cos , adData ) } \n"}, {"code": "public CloseableAnimatedBitmap ( List < Bitmap > bitmaps , $F3807 durations , ResourceReleaser < Bitmap > resourceReleaser ) { \n\tPreconditions . checkNotNull ( bitmaps ) ; \n\tPreconditions . checkState ( $F14764 ( bitmaps ) , NUM00 ) ; \n\t$F9404 ( mBitmaps ) $F9404 ( mBitmapReferences ) for ( Bitmap bitmap : bitmaps ) { \n\t\tmBitmapReferences . add ( CloseableReference . of ( bitmap , resourceReleaser ) ) ; \n\t\tmBitmaps . add ( bitmap ) ; \n\t\t} \n\tmDurations = Preconditions . checkNotNull ( durations ) ; \n\tPreconditions . checkState ( $F56339 ( mDurations , mBitmaps ) , NUM00 ) ; \n\t} \n"}, {"code": "public static String readLabelFile $F7613 ( entrySeparator , ensureInitialBoundary , trfname ) throws IOException { \n\t$F51387 ( lab , trfname ) try { \n\t\tXwavesLabelfileReader xlds = new XwavesLabelfileReader ( trfname ) ; \n\t\tString result = StringUtils . join ( entrySeparator , xlds . getLabelSymbols ( ) ) ; \n\t\tif ( ensureInitialBoundary && $F4434 ( result ) ) { \n\t\t\tresult = NUM00 + entrySeparator + result ; \n\t\t\t} \n\t\treturn result ; \n\t\t} \n\t$F3229 ( lab ) } \n"}, {"code": "ConverterSet add ( Converter converter , Converter [ ] removed ) { \n\tConverter [ ] converters = iConverters ; \n\tint length = converters . length ; \n\tfor ( $F119 ( i , length ) ) { \n\t\tConverter existing = converters [ i ] ; \n\t\tif $F1238 ( converter , existing ) { \n\t\t\tif ( removed != null ) { \n\t\t\t\tremoved [ NUM00 ] = null ; \n\t\t\t\t} \n\t\t\treturn this ; \n\t\t\t} \n\t\tif ( converter . getSupportedType ( ) == existing . getSupportedType ( ) ) { \n\t\t\tConverter [ ] copy = new Converter [ length ] ; \n\t\t\tfor ( $F119 ( j , length ) ) { \n\t\t\t\tif ( j != i ) $F15086 ( copy , j , converters ) else { \n\t\t\t\t\tcopy [ j ] = converter ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( removed != null ) { \n\t\t\t\tremoved [ NUM00 ] = existing ; \n\t\t\t\t} \n\t\t\treturn new ConverterSet ( copy ) ; \n\t\t\t} \n\t\t} \n\tConverter [ ] copy = new Converter [ length + NUM00 ] ; \n\t$F135 ( System , converters , copy , length ) copy [ length ] = converter ; \n\tif ( removed != null ) { \n\t\tremoved [ NUM00 ] = null ; \n\t\t} \n\treturn new ConverterSet ( copy ) ; \n\t} \n"}, {"code": "private void parse $F72 throws SAXException { \n\tXStream xstream = ( XStream ) properties . get ( CONFIGURED_XSTREAM_PROPERTY ) ; \n\tif ( xstream == null ) { \n\t\txstream = new XStream $F72 ; \n\t\t} \n\tfinal $F11654 source = ( $F11654 ) properties . get ( SOURCE_OBJECT_LIST_PROPERTY ) ; \n\tif $F4251 ( source ) { \n\t\tthrow new SAXException ( NUM00 + SOURCE_OBJECT_LIST_PROPERTY + NUM00 ) ; \n\t\t} \n\ttry { \n\t\tstartDocument ( _BOOL ) ; \n\t\tfor ( final Object name : source ) { \n\t\t\txstream . marshal ( name , this ) ; \n\t\t\t} \n\t\tendDocument ( _BOOL ) ; \n\t\t} \n\tcatch ( final StreamException e ) { \n\t\tif ( e . getCause ( ) instanceof SAXException ) { \n\t\t\tthrow ( SAXException ) e . getCause ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F6287 ( e ) } \n\t\t} \n\t} \n"}, {"code": "private SortedMap < MessageUid , MaildirMessageName > truncateMap ( Map < MessageUid , MaildirMessageName > map , MessageUid from , MessageUid to ) { \n\tTreeMap < MessageUid , MaildirMessageName > sortedMap ; \n\tif ( map instanceof TreeMap $F5162 ) sortedMap = ( TreeMap < MessageUid , MaildirMessageName > ) map ; \n\telse sortedMap = new TreeMap < MessageUid , MaildirMessageName > ( map ) ; \n\tif ( to != null ) return sortedMap . subMap ( from , to . next ( ) ) ; \n\treturn sortedMap . tailMap ( from ) ; \n\t} \n"}, {"code": "public void dumpIndex ( boolean showBounds ) throws IOException { \n\tbyte ixRecord [ ] = new byte [ SPATIAL_INDEX_RECORD_LENGTH ] ; \n\tint recNum = NUM00 ; \n\t$F2329 ( shpFileName ) BinaryBufferedFile ssx = new BinaryBufferedFile ( ssx ( shpFileName ) ) ; \n\t$F927 ( ssx ) while ( _BOOL ) { \n\t\t$F65003 ( result , ssx , ixRecord , SPATIAL_INDEX_RECORD_LENGTH ) if ( result <= NUM00 ) { \n\t\t\t$F9472 ( logger , recNum ) $F597 } \n\t\telse { \n\t\t\trecNum ++ ; \n\t\t\tint offset = readBEInt ( ixRecord , NUM00 ) ; \n\t\t\tint length = readBEInt ( ixRecord , NUM00 ) ; \n\t\t\tlogger . info ( NUM00 + recNum + NUM00 + offset + NUM00 + length + ( showBounds ? ( NUM00 + readLEDouble ( ixRecord , NUM00 ) + NUM00 + readLEDouble ( ixRecord , NUM00 ) + NUM00 + readLEDouble ( ixRecord , NUM00 ) + NUM00 + readLEDouble ( ixRecord , NUM00 ) ) : NUM00 ) ) ; \n\t\t\t} \n\t\t} \n\t$F59 ( ssx ) } \n"}, {"code": "private static boolean compareParam ( String jdiffParam , Type reflectionParamType ) { \n\t$F1933 ( jdiffParam , _BOOL ) String reflectionParam = typeToString ( reflectionParamType ) ; \n\t$F12418 ( jdiffParam , reflectionParam , _BOOL ) $F1384 ( jdiffParamEndOffset , jdiffParam ) $F1384 ( reflectionParamEndOffset , reflectionParam ) if $F6099 ( jdiffParamEndOffset , reflectionParamEndOffset ) { \n\t\t$F45799 ( jdiffParam , jdiffParamEndOffset ) $F45799 ( reflectionParam , reflectionParamEndOffset ) $F1964 ( jdiffParam , reflectionParam ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void randomNumber $F11072 ( num , n ) { \n\tfor ( $F119 ( j , n ) ) { \n\t\tnum [ j ] = $F34940 ( Math ) ; \n\t\t} \n\t} \n"}, {"code": "$F119089 ( text , builder , index , chr , t , Integer ) "}, {"code": "public void writeTo ( OutputStream out ) throws IOException { \n\tByteString [ ] cachedFlushBuffers ; \n\t$F96 cachedBuffer ; \n\tint cachedBufferPos ; \n\tsynchronized ( this ) { \n\t\tcachedFlushBuffers = flushedBuffers . toArray ( new ByteString $F2313 ( flushedBuffers ) ) ; \n\t\tcachedBuffer = buffer ; \n\t\tcachedBufferPos = bufferPos ; \n\t\t} \n\tfor ( ByteString byteString : cachedFlushBuffers ) $F356076 ( byteString , out ) out . write ( copyArray ( cachedBuffer , cachedBufferPos ) ) ; \n\t} \n"}, {"code": "private void checkHeadingsHierarchy ( Elements elements , TestSolutionHandler testSolutionHandler ) { \n\tif $F2979 ( elements ) { \n\t\ttestSolutionHandler . addTestSolution ( TestSolution . NOT_APPLICABLE ) ; \n\t\t$F665 } \n\tTestSolution checkResult = TestSolution . PASSED ; \n\t$F335184 iter = elements . iterator ( ) ; \n\t$F84573 ( element , iter ) int indexOfReference = getHeaderIndex ( element ) ; \n\tint currentIndex ; \n\tint previousIndex = indexOfReference ; \n\tElement elementOfReference = element ; \n\tElement previousElement = element ; \n\twhile $F2921 ( iter ) { \n\t\t$F45366 ( element , iter ) currentIndex = getHeaderIndex ( element ) ; \n\t\tif ( currentIndex != - NUM00 ) { \n\t\t\tif ( currentIndex - previousIndex >= NUM00 ) { \n\t\t\t\tcheckResult = TestSolution . FAILED ; \n\t\t\t\taddSourceCodeRemark ( TestSolution . FAILED , element , HEADER_NOT_HIERARCHICALLY_WELL_DEFINED_MSG , getEvidenceElement ( PREVIOUS_H_TAG_INDEX_EE , getEvidenceElementMsg ( previousIndex , previousElement ) ) ) ; \n\t\t\t\t} \n\t\t\telse if ( currentIndex < indexOfReference ) { \n\t\t\t\tcheckResult = TestSolution . FAILED ; \n\t\t\t\taddSourceCodeRemark ( TestSolution . FAILED , element , HEADER_NOT_HIERARCHICALLY_WELL_DEFINED_MSG , getEvidenceElement ( FIRST_H_TAG_INDEX_EE , getEvidenceElementMsg ( indexOfReference , elementOfReference ) ) ) ; \n\t\t\t\t} \n\t\t\tpreviousIndex = currentIndex ; \n\t\t\tpreviousElement = element ; \n\t\t\t} \n\t\t} \n\ttestSolutionHandler . addTestSolution ( checkResult ) ; \n\t} \n"}, {"code": "public Iterator $F115413 iterator $F72 $F16048 ( elements ) "}, {"code": "public void mouseWheelMoved ( MouseWheelEvent e ) { \n\tboolean accepted = checkModifiers ( e ) ; \n\tif ( accepted == _BOOL ) { \n\t\t$F128225 vv = ( $F128225 ) e . getSource ( ) ; \n\t\tPoint2D mouse = e . getPoint ( ) ; \n\t\tPoint2D center = vv . getCenter ( ) ; \n\t\tint amount = e . getWheelRotation ( ) ; \n\t\tif ( zoomAtMouse ) { \n\t\t\tif ( amount > NUM00 ) { \n\t\t\t\tscaler . scale ( vv , in , mouse ) ; \n\t\t\t\t} \n\t\t\telse if ( amount < NUM00 ) { \n\t\t\t\tscaler . scale ( vv , out , mouse ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( amount > NUM00 ) { \n\t\t\t\tscaler . scale ( vv , in , center ) ; \n\t\t\t\t} \n\t\t\telse if ( amount < NUM00 ) { \n\t\t\t\tscaler . scale ( vv , out , center ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F60335 ( e ) $F8798 ( vv ) } \n\t} \n"}, {"code": "public File createNewFolder ( File containingDir ) throws IOException { \n\t$F31068 ( containingDir ) File newFolder = createFileObject ( containingDir , newFolderString ) ; \n\tint i = NUM00 ; \n\twhile ( newFolder . exists ( ) && i < NUM00 ) { \n\t\tnewFolder = createFileObject ( containingDir , MessageFormat . format ( newFolderNextString , new Integer ( i ) ) ) ; \n\t\ti ++ ; \n\t\t} \n\tif $F3428 ( newFolder ) $F144276 ( newFolder ) else $F1908 ( newFolder ) return newFolder ; \n\t} \n"}, {"code": "protected void assertFuncEquals $F74419 ( inputs ) throws Exception { \n\tSolrQueryRequest req = req ( ) ; \n\ttry { \n\t\tassertFuncEquals ( req , inputs ) ; \n\t\t} \n\t$F3229 ( req ) } \n"}, {"code": "private void handleStartElement ( XMLStreamReader parser , $F6870 childrenFound , Handler handler , $F2100 ( values ) , Stack < $F2689 > stack , boolean recordStarted ) throws IOException , XMLStreamException { \n\tNode n = getMatchingNode ( parser , childNodes ) ; \n\t$F20530 ( decends ) if ( n != null ) { \n\t\tchildrenFound . add ( n ) ; \n\t\tn . parse ( parser , handler , values , stack , recordStarted ) ; \n\t\t$F665 } \n\tNode dn = this ; \n\tdo { \n\t\tif ( dn . wildCardNodes != null ) { \n\t\t\tn = getMatchingNode ( parser , dn . wildCardNodes ) ; \n\t\t\tif ( n != null ) { \n\t\t\t\tchildrenFound . add ( n ) ; \n\t\t\t\tn . parse ( parser , handler , values , stack , recordStarted ) ; \n\t\t\t\t$F597 } \n\t\t\tfor ( Node nn : dn . wildCardNodes ) $F51860 ( decends , nn ) } \n\t\tdn = dn . wildAncestor ; \n\t\t} \n\twhile ( dn != null ) ; \n\tif ( n == null ) { \n\t\tint count = NUM00 ; \n\t\twhile ( count != NUM00 ) { \n\t\t\t$F128162 ( token , parser ) if ( token == START_ELEMENT ) { \n\t\t\t\tNode nn = ( Node ) decends . get ( parser . getLocalName ( ) ) ; \n\t\t\t\tif ( nn != null ) { \n\t\t\t\t\tchildrenFound . add ( nn ) ; \n\t\t\t\t\tnn . parse ( parser , handler , values , stack , recordStarted ) ; \n\t\t\t\t\t} \n\t\t\t\telse count ++ ; \n\t\t\t\t} \n\t\t\telse if ( token == END_ELEMENT ) count -- ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean equivalent ( IMFMarkerType other ) { \n\t$F1933 ( other , _BOOL ) boolean result = _BOOL ; \n\tresult &= offset . equals ( other . getOffset ( ) ) ; \n\tresult &= label . equivalent ( other . getLabel ( ) ) ; \n\treturn result ; \n\t} \n"}, {"code": "public static Discretization discretize ( $F1986 _data , $F1986 cutoffs , String variableName , $F3803 categories ) { \n\t$F18045 ( cutoffs ) for ( $F21583 ( i , cutoffs ) ) { \n\t\tif ( ! ( cutoffs [ i ] <= cutoffs [ i + NUM00 ] ) ) $F895 } \n\t$F18045 ( variableName ) int numCategories = cutoffs . length + NUM00 ; \n\tif ( categories != null && categories . size ( ) != numCategories ) { \n\t\tthrow new IllegalArgumentException $F76899 ; \n\t\t} \n\tDiscreteVariable variable ; \n\tif ( categories == null ) { \n\t\tvariable = new DiscreteVariable ( variableName , numCategories ) ; \n\t\t} \n\telse { \n\t\tvariable = new DiscreteVariable ( variableName , categories ) ; \n\t\t} \n\t$F22974 ( discreteData , _data ) loop : for ( $F1139 ( i , _data ) ) { \n\t\tif $F1998 ( Double , _data , i ) { \n\t\t\tdiscreteData [ i ] = DiscreteVariable . MISSING_VALUE ; \n\t\t\t$F598 } \n\t\tfor ( $F1139 ( j , cutoffs ) ) { \n\t\t\tif ( _data [ i ] > Double . NEGATIVE_INFINITY && _data [ i ] < Double . POSITIVE_INFINITY && _data [ i ] < cutoffs [ j ] ) { \n\t\t\t\tdiscreteData [ i ] = j ; \n\t\t\t\tcontinue loop ; \n\t\t\t\t} \n\t\t\t} \n\t\tdiscreteData [ i ] = cutoffs . length ; \n\t\t} \n\treturn new Discretization ( variable , discreteData ) ; \n\t} \n"}, {"code": "public static $F17804 loadWorkspaceScreensDb ( Context context ) { \n\tfinal ContentResolver contentResolver = context . getContentResolver ( ) ; \n\tfinal Uri screensUri = LauncherSettings . WorkspaceScreens . CONTENT_URI ; \n\tfinal Cursor sc = contentResolver . query ( screensUri , null , null , null , LauncherSettings . WorkspaceScreens . SCREEN_RANK ) ; \n\t$F17809 ( screenIds ) try { \n\t\tfinal int idIndex = sc . getColumnIndexOrThrow ( LauncherSettings . WorkspaceScreens . _ID ) ; \n\t\twhile $F12260 ( sc ) { \n\t\t\ttry { \n\t\t\t\tscreenIds . add ( sc . getLong ( idIndex ) ) ; \n\t\t\t\t} \n\t\t\tcatch ( Exception e ) { \n\t\t\t\tLauncher . addDumpLog ( TAG , NUM00 + NUM00 + e , _BOOL ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F14364 ( sc ) return screenIds ; \n\t} \n"}, {"code": "private boolean renderOutput ( Node node , InternalContextAdapter context , Writer writer ) throws IOException , MethodInvocationException , ResourceNotFoundException { \n\tString arg = NUM00 ; \n\t$F24276 ( node , rsvc , _BOOL ) Object value = node . value ( context ) ; \n\t$F24276 ( value , rsvc , _BOOL ) $F6947 ( arg , value ) Resource resource = null ; \n\ttry { \n\t\tresource = rsvc . getContent ( arg , getInputEncoding ( context ) ) ; \n\t\t} \n\tcatch ( ResourceNotFoundException rnfe ) { \n\t\trsvc . error ( NUM00 + arg + NUM00 + context . getCurrentTemplateName ( ) + NUM00 + getLine ( ) + NUM00 + getColumn ( ) + NUM00 ) ; \n\t\tthrow rnfe ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\trsvc . error ( NUM00 + arg + NUM00 + context . getCurrentTemplateName ( ) + NUM00 + getLine ( ) + NUM00 + getColumn ( ) + NUM00 + e ) ; \n\t\t} \n\t$F397 ( resource , _BOOL ) writer . write ( ( String ) resource . getData ( ) ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected String e ( String s ) throws Exception { \n\treturn fmt . format ( parser . parse ( s , null ) ) ; \n\t} \n"}, {"code": "public static boolean equals ( $F8748 field1 , $F8748 field2 ) $F17603 ( field1 , field2 , Arrays ) "}, {"code": "public Matrix4 multiplyByScale $F7635 ( xScale , yScale , zScale ) { \n\t$F1986 m = this . m ; \n\tm [ NUM00 ] *= xScale ; \n\tm [ NUM00 ] *= xScale ; \n\tm [ NUM00 ] *= xScale ; \n\tm [ NUM00 ] *= xScale ; \n\tm [ NUM00 ] *= yScale ; \n\tm [ NUM00 ] *= yScale ; \n\tm [ NUM00 ] *= yScale ; \n\tm [ NUM00 ] *= yScale ; \n\tm [ NUM00 ] *= zScale ; \n\tm [ NUM00 ] *= zScale ; \n\tm [ NUM00 ] *= zScale ; \n\tm [ NUM00 ] *= zScale ; \n\treturn this ; \n\t} \n"}, {"code": "public void changeState $F72 { \n\tlinked = ! linked ; \n\tlink = linked ? linkedImIc . getImage ( ) : unlinkedImIc . getImage ( ) ; \n\trepaint ( ) ; \n\t} \n"}, {"code": "public static Geometry bufferBySegments ( Geometry g , double distance ) { \n\tGeometry segs = LineHandlingFunctions . extractSegments ( g ) ; \n\t$F95016 ( posDist , Math , distance ) Geometry segBuf = bufferByComponents ( segs , posDist ) ; \n\tif ( distance < NUM00 ) return g . difference ( segBuf ) ; \n\treturn g . union ( segBuf ) ; \n\t} \n"}, {"code": "public void recordEndTime $F72 { \n\tint msDiff = ( int ) ( System . currentTimeMillis ( ) - _currentRequestStartTime . get ( ) ) ; \n\t$F10635 ( _log , msDiff ) updateOrResetReqRspAvgLstHr ( updateOrResetReqRspAvgLstMin ( msDiff , _BOOL ) , _BOOL ) ; \n\tupdateMinMaxReqRspMs ( msDiff ) ; \n\tif ( msDiff >= SUSPISCIOUS_RSP_TIME_MS ) { \n\t\t$F18177 ( _alertLog , MessageFormat , msDiff ) } \n\t$F7042 ( _currentRequestStartTime ) } \n"}, {"code": "private boolean isAccessibleUserToKibana $F32029 ( filters ) { \n\tif $F3578 ( filters ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean clear $F72 { \n\ttry $F13478 ( list , fireTableDataChanged ) $F7474 ( _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "public static final int typeIndex ( Class type ) { \n\t$F749 list = primitiveTypes ; \n\tint n = list . length ; \n\tfor ( $F119 ( i , n ) ) if ( list [ i ] == type ) return i ; \n\tthrow new RuntimeException $F47919 ( type ) ; \n\t} \n"}, {"code": "public boolean load ( File fi ) throws JmriConfigureXmlException $F8587 ( load , fi , _BOOL ) "}, {"code": "public String parameterToString ( Object param ) { \n\tif ( param == null ) $F2455 else if ( param instanceof Date ) { \n\t\treturn formatDate ( ( Date ) param ) ; \n\t\t} \n\telse if ( param instanceof Collection ) { \n\t\t$F83 ( b ) for ( Object o : ( Collection ) param ) { \n\t\t\t$F47101 ( b ) $F111183 ( b , String , o ) } \n\t\t$F92 ( b ) } \n\telse $F62107 ( String , param ) } \n"}, {"code": "public void testBug66947 $F72 throws Exception { \n\tConnection con = null ; \n\ttry { \n\t\t$F2697 ( props ) $F2699 ( props ) $F2699 ( props ) $F2699 ( props ) con = getConnectionWithProps ( props ) ; \n\t\tPreparedStatement ps1_1 ; \n\t\tPreparedStatement ps1_2 ; \n\t\tString query = NUM00 ; \n\t\tps1_1 = con . prepareStatement ( query ) ; \n\t\t$F1699 ( ps1_1 ) $F59 ( ps1_1 ) ps1_2 = con . prepareStatement ( query ) ; \n\t\tassertSame ( NUM00 , ps1_1 , ps1_2 ) ; \n\t\t$F1699 ( ps1_2 ) $F59 ( ps1_2 ) $F59 ( ps1_2 ) ps1_1 = con . prepareStatement ( query ) ; \n\t\tassertNotSame ( NUM00 , ps1_2 , ps1_1 ) ; \n\t\t$F1699 ( ps1_1 ) $F59 ( ps1_1 ) $F59 ( ps1_1 ) PreparedStatement ps2_1 ; \n\t\tPreparedStatement ps2_2 ; \n\t\tPreparedStatement ps3_1 ; \n\t\tPreparedStatement ps3_2 ; \n\t\t$F57556 ( ps1_1 , con ) $F1699 ( ps1_1 ) $F59 ( ps1_1 ) $F57556 ( ps2_1 , con ) $F1699 ( ps2_1 ) $F59 ( ps2_1 ) $F57556 ( ps3_1 , con ) $F1699 ( ps3_1 ) $F59 ( ps3_1 ) $F57556 ( ps1_2 , con ) assertNotSame ( NUM00 , ps1_1 , ps1_2 ) ; \n\t\t$F57556 ( ps2_2 , con ) assertSame ( NUM00 , ps2_1 , ps2_2 ) ; \n\t\t$F57556 ( ps3_2 , con ) assertSame ( NUM00 , ps3_1 , ps3_2 ) ; \n\t\t} \n\t$F14364 ( con ) } \n"}, {"code": "private void calculateGridSizes ( float numbersRadius , float xCenter , float yCenter , float textSize , $F5415 textGridHeights , $F5415 textGridWidths ) { \n\tfloat offset1 = numbersRadius ; \n\tfloat offset2 = numbersRadius * ( ( float ) Math . sqrt ( NUM00 ) ) / NUM00 ; \n\tfloat offset3 = numbersRadius / NUM00 ; \n\tmPaint . setTextSize ( textSize ) ; \n\tyCenter -= $F143339 ( mPaint ) ; \n\ttextGridHeights [ NUM00 ] = yCenter - offset1 ; \n\ttextGridWidths [ NUM00 ] = xCenter - offset1 ; \n\ttextGridHeights [ NUM00 ] = yCenter - offset2 ; \n\ttextGridWidths [ NUM00 ] = xCenter - offset2 ; \n\ttextGridHeights [ NUM00 ] = yCenter - offset3 ; \n\ttextGridWidths [ NUM00 ] = xCenter - offset3 ; \n\ttextGridHeights [ NUM00 ] = yCenter ; \n\ttextGridWidths [ NUM00 ] = xCenter ; \n\ttextGridHeights [ NUM00 ] = yCenter + offset3 ; \n\ttextGridWidths [ NUM00 ] = xCenter + offset3 ; \n\ttextGridHeights [ NUM00 ] = yCenter + offset2 ; \n\ttextGridWidths [ NUM00 ] = xCenter + offset2 ; \n\ttextGridHeights [ NUM00 ] = yCenter + offset1 ; \n\ttextGridWidths [ NUM00 ] = xCenter + offset1 ; \n\t} \n"}, {"code": "$F148243 ( checkNotClosed , trimToSize , trimToFileCount , journalWriter ) "}, {"code": "private final $F806 _expandSeenNames $F4374 ( oldShared ) { \n\tint len = oldShared . length ; \n\t$F806 newShared ; \n\tif ( len == NUM00 ) { \n\t\tnewShared = _smileBufferRecycler . allocSeenNamesBuffer ( ) ; \n\t\tif ( newShared == null ) { \n\t\t\tnewShared = new String [ SmileBufferRecycler . DEFAULT_NAME_BUFFER_LENGTH ] ; \n\t\t\t} \n\t\t} \n\telse if ( len == SmileConstants . MAX_SHARED_NAMES ) { \n\t\tnewShared = oldShared ; \n\t\t_seenNameCount = NUM00 ; \n\t\t} \n\telse { \n\t\tint newSize = ( len == SmileBufferRecycler . DEFAULT_ <missing ';'> NUM00 <missing ';'> _VALUE_BUFFER_LENGTH ) ? NUM00 : SmileConstants . MAX_SHARED_NAMES ; \n\t\t$F58180 ( newShared , newSize ) $F7057 ( System , oldShared , newShared ) } \n\treturn newShared ; \n\t} \n"}, {"code": "public void addRequestProperty ( String key , String value ) { \n\t$F57478 ( connected ) $F1149 ( key ) if ( requests == null ) requests = new MessageHeader $F72 ; \n\trequests . add ( key , value ) ; \n\t} \n"}, {"code": "ServerMember update ( Address clientAddress , Instant time ) { \n\tif ( clientAddress != null ) { \n\t\tthis . clientAddress = clientAddress ; \n\t\tif ( time . isAfter ( updated ) ) { \n\t\t\tthis . updated = Assert . notNull ( time , NUM00 ) ; \n\t\t\t} \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "public static boolean isOrgLevelOnly ( int AD_Client_ID , int AD_Table_ID ) { \n\tBoolean share = isShared ( AD_Client_ID , AD_Table_ID ) ; \n\tif ( share != null ) return $F84104 ( share ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public Runnable decrementAsRunnable $F72 { \n\treturn mDecrementRunnable ; \n\t} \n"}, {"code": "$F1 public void actionPerformed ( ActionEvent event ) { \n\t$F35563 ( command , event ) if $F3057 ( command ) $F5795 ( attemptModifyBackgroundPaint ) } \n"}, {"code": "public $F96 serializeToBuffer ( Object o ) throws IOException { \n\t$F1538 ( bufOut ) try { \n\t\tserialize ( bufOut , o ) ; \n\t\t$F1206 ( bufOut ) $F11316 ( bufOut ) } \n\t$F3229 ( bufOut ) } \n"}, {"code": "ModulePointer resolve ( String modName ) { \n\treturn ( ModulePointer ) context . get ( modName ) ; \n\t} \n"}, {"code": "protected ConnectionStateTLS ( SSLSessionImpl session ) { \n\ttry { \n\t\tCipherSuite cipherSuite = session . cipherSuite ; \n\t\thash_size = cipherSuite . getMACLength ( ) ; \n\t\tboolean is_exportabe = cipherSuite . isExportable ( ) ; \n\t\tint key_size = ( is_exportabe ) ? cipherSuite . keyMaterial : cipherSuite . expandedKeyMaterial ; \n\t\tint iv_size = cipherSuite . ivSize ; \n\t\tblock_size = cipherSuite . getBlockSize ( ) ; \n\t\tString algName = cipherSuite . getBulkEncryptionAlgorithm ( ) ; \n\t\tString macName = cipherSuite . getHmacName ( ) ; \n\t\tif ( logger != null ) { \n\t\t\t$F8438 ( logger ) logger . println ( $F2989 ( cipherSuite ) ) ; \n\t\t\t$F7957 ( logger , algName ) $F7957 ( logger , macName ) $F7957 ( logger , hash_size ) $F7957 ( logger , block_size ) $F7957 ( logger , iv_size ) $F7957 ( logger , key_size ) } \n\t\t$F56524 ( clientRandom , session ) $F56524 ( serverRandom , session ) $F96 key_block = new byte [ NUM00 * hash_size + NUM00 * key_size + NUM00 * iv_size ] ; \n\t\t$F148496 ( seed , clientRandom , serverRandom ) $F7057 ( System , serverRandom , seed ) $F11244 ( System , clientRandom , seed , serverRandom ) PRF . computePRF ( key_block , session . master_secret , KEY_EXPANSION_LABEL , seed ) ; \n\t\t$F2175 ( client_mac_secret , hash_size ) $F2175 ( server_mac_secret , hash_size ) $F2175 ( client_key , key_size ) $F2175 ( server_key , key_size ) boolean is_client = ! session . isServer ; \n\t\t$F135 ( System , key_block , client_mac_secret , hash_size ) $F30985 ( System , key_block , hash_size , server_mac_secret ) System . arraycopy ( key_block , NUM00 * hash_size , client_key , NUM00 , key_size ) ; \n\t\tSystem . arraycopy ( key_block , NUM00 * hash_size + key_size , server_key , NUM00 , key_size ) ; \n\t\tIvParameterSpec clientIV = null ; \n\t\tIvParameterSpec serverIV = null ; \n\t\tif ( is_exportabe ) { \n\t\t\t$F7057 ( System , clientRandom , seed ) $F11244 ( System , serverRandom , seed , clientRandom ) $F96 final_client_key = new byte [ cipherSuite . expandedKeyMaterial ] ; \n\t\t\t$F96 final_server_key = new byte [ cipherSuite . expandedKeyMaterial ] ; \n\t\t\tPRF . computePRF ( final_client_key , client_key , CLIENT_WRITE_KEY_LABEL , seed ) ; \n\t\t\tPRF . computePRF ( final_server_key , server_key , SERVER_WRITE_KEY_LABEL , seed ) ; \n\t\t\tclient_key = final_client_key ; \n\t\t\tserver_key = final_server_key ; \n\t\t\tif ( block_size != NUM00 ) { \n\t\t\t\t$F11778 ( iv_block , iv_size ) PRF . computePRF ( iv_block , null , IV_BLOCK_LABEL , seed ) ; \n\t\t\t\tclientIV = new IvParameterSpec ( iv_block , NUM00 , iv_size ) ; \n\t\t\t\tserverIV = new IvParameterSpec ( iv_block , iv_size , iv_size ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( block_size != NUM00 ) { \n\t\t\tclientIV = new IvParameterSpec ( key_block , NUM00 * ( hash_size + key_size ) , iv_size ) ; \n\t\t\tserverIV = new IvParameterSpec ( key_block , NUM00 * ( hash_size + key_size ) + iv_size , iv_size ) ; \n\t\t\t} \n\t\tif ( logger != null ) { \n\t\t\t$F7957 ( logger , is_exportabe ) $F8438 ( logger ) logger . print ( session . master_secret ) ; \n\t\t\t$F8438 ( logger ) logger . print ( clientRandom ) ; \n\t\t\t$F8438 ( logger ) logger . print ( serverRandom ) ; \n\t\t\t$F8438 ( logger ) logger . print ( client_mac_secret ) ; \n\t\t\t$F8438 ( logger ) logger . print ( server_mac_secret ) ; \n\t\t\t$F8438 ( logger ) logger . print ( client_key ) ; \n\t\t\t$F8438 ( logger ) logger . print ( server_key ) ; \n\t\t\tif ( clientIV == null ) $F12204 ( logger ) else { \n\t\t\t\t$F8438 ( logger ) logger . print ( clientIV . getIV ( ) ) ; \n\t\t\t\t$F8438 ( logger ) logger . print ( serverIV . getIV ( ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( algName == null ) { \n\t\t\t$F83645 ( encCipher ) ; \n\t\t\t$F83645 ( decCipher ) ; \n\t\t\t} \n\t\telse { \n\t\t\tencCipher = Cipher . getInstance ( algName ) ; \n\t\t\tdecCipher = Cipher . getInstance ( algName ) ; \n\t\t\tif ( is_client ) { \n\t\t\t\t$F222121 ( encCipher , Cipher , client_key , algName , clientIV ) $F94768 ( decCipher , Cipher , server_key , algName , serverIV ) } \n\t\t\telse { \n\t\t\t\t$F222121 ( encCipher , Cipher , server_key , algName , serverIV ) $F94768 ( decCipher , Cipher , client_key , algName , clientIV ) } \n\t\t\t} \n\t\tencMac = Mac . getInstance ( macName ) ; \n\t\tdecMac = Mac . getInstance ( macName ) ; \n\t\tif ( is_client ) { \n\t\t\t$F222127 ( encMac , client_mac_secret , macName ) $F222127 ( decMac , server_mac_secret , macName ) } \n\t\telse { \n\t\t\t$F222127 ( encMac , server_mac_secret , macName ) $F222127 ( decMac , client_mac_secret , macName ) } \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F301 ( e ) throw new AlertException ( AlertProtocol . INTERNAL_ERROR , new SSLProtocolException $F580 ) ; \n\t\t} \n\t} \n"}, {"code": "public void startElement $F42838 ( namespaceURI , localName , name , atts ) throws $F2253 { \n\tElemContext elemContext = m_elemContext ; \n\tif ( elemContext . m_startTagOpen ) $F42845 ( closeStartTag , elemContext , _BOOL ) else if ( m_cdataTagOpen ) $F62354 ( closeCDATA , m_cdataTagOpen , _BOOL ) else $F62355 ( m_needToCallStartDocument , startDocumentInternal , _BOOL ) if ( m_needToOutputDocTypeDecl ) { \n\t\tString n = name ; \n\t\tif $F6036 ( n ) { \n\t\t\tn = localName ; \n\t\t\t} \n\t\toutputDocTypeDecl ( n ) ; \n\t\t} \n\tif $F49270 ( namespaceURI ) { \n\t\tsuper . startElement ( namespaceURI , localName , name , atts ) ; \n\t\t$F665 } \n\ttry { \n\t\tElemDesc elemDesc = getElemDesc2 ( name ) ; \n\t\tint elemFlags = elemDesc . getFlags ( ) ; \n\t\tif ( m_doIndent ) { \n\t\t\tboolean isBlockElement = ( elemFlags & ElemDesc . BLOCK ) != NUM00 ; \n\t\t\tif ( m_ispreserve ) m_ispreserve = _BOOL ; \n\t\t\telse if ( ( null != elemContext . m_elementName ) && ( ! m_inBlockElem || isBlockElement ) ) $F21847 ( m_startNewLine , _BOOL , indent ) m_inBlockElem = ! isBlockElement ; \n\t\t\t} \n\t\t$F27424 ( atts , addAttributes ) m_isprevtext = _BOOL ; \n\t\t$F42851 ( writer , m_writer ) $F3410 ( writer ) writer . write ( name ) ; \n\t\t$F42855 ( m_tracer , firePseudoAttributes ) if ( ( elemFlags & ElemDesc . EMPTY ) != NUM00 ) { \n\t\t\tm_elemContext = elemContext . push ( ) ; \n\t\t\tm_elemContext . m_elementName = name ; \n\t\t\tm_elemContext . m_elementDesc = elemDesc ; \n\t\t\t$F665 } \n\t\telse { \n\t\t\telemContext = elemContext . push ( namespaceURI , localName , name ) ; \n\t\t\tm_elemContext = elemContext ; \n\t\t\telemContext . m_elementDesc = elemDesc ; \n\t\t\telemContext . m_isRaw = ( elemFlags & ElemDesc . RAW ) != NUM00 ; \n\t\t\t} \n\t\tif ( ( elemFlags & ElemDesc . HEADELEM ) != NUM00 ) { \n\t\t\tcloseStartTag ( ) ; \n\t\t\telemContext . m_startTagOpen = _BOOL ; \n\t\t\tif ( ! m_omitMetaTag ) { \n\t\t\t\t$F32367 ( m_doIndent , indent ) $F3410 ( writer ) String encoding = getEncoding ( ) ; \n\t\t\t\tString encode = Encodings . getMimeEncoding ( encoding ) ; \n\t\t\t\twriter . write ( encode ) ; \n\t\t\t\t$F3410 ( writer ) } \n\t\t\t} \n\t\t} \n\t$F6289 ( e ) } \n"}, {"code": "public void addCertStore ( CertStore store ) { \n\t$F2329 ( store ) if ( certStores == null ) { \n\t\tcertStores = new ArrayList < CertStore > $F72 ; \n\t\t} \n\tcertStores . add ( store ) ; \n\t} \n"}, {"code": "public NarClassLoader ( final File narWorkingDirectory ) throws $F125668 { \n\tsuper ( new URL $F380 ) ; \n\tthis . narWorkingDirectory = narWorkingDirectory ; \n\tupdateClasspath ( narWorkingDirectory ) ; \n\t} \n"}, {"code": "public Block block $F72 { \n\treturn block ; \n\t} \n"}, {"code": "public static TypeBinding [ ] substitute ( Substitution substitution , TypeBinding [ ] originalTypes ) { \n\t$F1275 ( originalTypes ) TypeBinding [ ] substitutedTypes = originalTypes ; \n\tfor ( $F21059 ( i , length , originalTypes ) ) { \n\t\tTypeBinding originalType = originalTypes [ i ] ; \n\t\tTypeBinding substitutedParameter = substitute ( substitution , originalType ) ; \n\t\tif ( substitutedParameter != originalType ) { \n\t\t\tif ( substitutedTypes == originalTypes ) { \n\t\t\t\tSystem . arraycopy ( originalTypes , NUM00 , substitutedTypes = new TypeBinding [ length ] , NUM00 , i ) ; \n\t\t\t\t} \n\t\t\tsubstitutedTypes [ i ] = substitutedParameter ; \n\t\t\t} \n\t\telse if ( substitutedTypes != originalTypes ) { \n\t\t\tsubstitutedTypes [ i ] = originalType ; \n\t\t\t} \n\t\t} \n\treturn substitutedTypes ; \n\t} \n"}, {"code": "private boolean checkIfScrolling ( $F5415 lastPoints , MotionEvent ev ) { \n\t$F12457 ( point ) point [ NUM00 ] = ev . getRawX ( ) ; \n\tpoint [ NUM00 ] = ev . getRawY ( ) ; \n\tfloat delta = getDistance ( lastPoints , point ) ; \n\treturn Math . abs ( delta ) > mSlop ; \n\t} \n"}, {"code": "public void testMergeOneFilterIntoDocumentWithSameFilter $F72 throws Exception { \n\t$F44 ( srcXml ) $F34646 ( srcWebXml , WebXmlIo , srcXml ) $F34646 ( mergeWebXml , WebXmlIo , srcXml ) $F34648 ( merger , srcWebXml ) merger . mergeFilters ( mergeWebXml ) ; \n\t$F100788 ( assertTrue , WebXmlUtils , srcWebXml ) } \n"}, {"code": "public Edge ( S src , Symbol symbol , S dest ) { \n\tthis . src = src ; \n\tthis . symbol = symbol ; \n\tthis . dest = dest ; \n\tthis . srcItem = src . getFirstItem ( ) ; \n\tthis . hashCache = calcHashCode ( ) ; \n\t} \n"}, {"code": "public void push ( final Type value ) { \n\tif ( value == null ) { \n\t\tmv . visitInsn ( Opcodes . ACONST_NULL ) ; \n\t\t} \n\telse { \n\t\tswitch ( value . getSort ( ) ) { \n\t\t\tcase Type . BOOLEAN : mv . visitFieldInsn ( Opcodes . GETSTATIC , NUM00 , NUM00 , CLDESC ) ; \n\t\t\t$F597 case Type . CHAR : mv . visitFieldInsn ( Opcodes . GETSTATIC , NUM00 , NUM00 , CLDESC ) ; \n\t\t\t$F597 case Type . BYTE : mv . visitFieldInsn ( Opcodes . GETSTATIC , NUM00 , NUM00 , CLDESC ) ; \n\t\t\t$F597 case Type . SHORT : mv . visitFieldInsn ( Opcodes . GETSTATIC , NUM00 , NUM00 , CLDESC ) ; \n\t\t\t$F597 case Type . INT : mv . visitFieldInsn ( Opcodes . GETSTATIC , NUM00 , NUM00 , CLDESC ) ; \n\t\t\t$F597 case Type . FLOAT : mv . visitFieldInsn ( Opcodes . GETSTATIC , NUM00 , NUM00 , CLDESC ) ; \n\t\t\t$F597 case Type . LONG : mv . visitFieldInsn ( Opcodes . GETSTATIC , NUM00 , NUM00 , CLDESC ) ; \n\t\t\t$F597 case Type . DOUBLE : mv . visitFieldInsn ( Opcodes . GETSTATIC , NUM00 , NUM00 , CLDESC ) ; \n\t\t\t$F597 $F1267 mv . visitLdcInsn ( value ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F4562 ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , fuzzyThreshold , scaleFactor , isTouchEvent , deltaValue , currentScrollValue , scrollValue , HORIZONTAL , VERTICAL , mode , newScrollValue , PullToRefreshBase , Log , LOG_TAG , State , Math ) "}, {"code": "public ExtendedTextLabel createExtended ( Font font , CoreMetrics lm , Decoration decorator , int start , int limit ) { \n\tif ( start >= limit || start < lineStart || limit > lineLimit ) $F20855 ( start , limit ) int level = lineBidi == null ? NUM00 : lineBidi . getLevelAt ( start - lineStart ) ; \n\tint linedir = ( lineBidi == null || lineBidi . baseIsLeftToRight ( ) ) ? NUM00 : NUM00 ; \n\tint layoutFlags = flags & ~ NUM00 ; \n\tif $F69047 ( level ) layoutFlags |= NUM00 ; \n\tif $F69047 ( linedir ) layoutFlags |= NUM00 ; \n\tTextSource source = new StandardTextSource ( text , start , limit - start , lineStart , lineLimit - lineStart , level , layoutFlags , font , frc , lm ) ; \n\treturn new ExtendedTextSourceLabel ( source , decorator ) ; \n\t} \n"}, {"code": "public static String rightPad $F41200 ( s , minLength , filling ) { \n\t$F1749 ( ln , s ) $F24599 ( minLength , ln , s ) $F7542 ( res , minLength ) res . append ( s ) ; \n\tint dif = minLength - ln ; \n\t$F48485 ( i , dif , res , filling ) $F92 ( res ) } \n"}, {"code": "public final boolean isSupported ( String feature , String version ) { \n\treturn implementation . hasFeature ( feature , version ) ; \n\t} \n"}, {"code": "public void clear $F72 { \n\tfullyLock ( ) ; \n\ttry { \n\t\tfor ( $F13430 p , h = head ; \n\t\t$F53563 ( p , h ) ; \n\t\th = p ) { \n\t\t\th . next = h ; \n\t\t\tp . item = null ; \n\t\t\t} \n\t\thead = last ; \n\t\tif ( count . getAndSet ( NUM00 ) == capacity ) $F702 ( notFull ) } \n\t$F49978 ( fullyUnlock ) } \n"}, {"code": "private static String readQuotedDescriptor ( final SubstringReader reader , final boolean allowCompatChars ) throws DecodeException { \n\tint length = NUM00 ; \n\treader . skipWhitespaces ( ) ; \n\ttry { \n\t\t$F277866 ( c , reader ) if ( c != NUM00 ) { \n\t\t\tthrow DecodeException . error ( ERR_ATTR_SYNTAX_EXPECTED_QUOTE_AT_POS1 . get ( reader . pos ( ) - NUM00 , c ) ) ; \n\t\t\t} \n\t\t$F115573 ( reader ) while $F175289 ( c , reader ) { \n\t\t\tif ( length == NUM00 && ! isAlpha ( c ) ) { \n\t\t\t\tthrow DecodeException . error ( ERR_ATTR_SYNTAX_ILLEGAL_CHAR_IN_ <missing ';'> NUM00 <missing ';'> _OID1 . get ( c , reader . pos ( ) - NUM00 ) ) ; \n\t\t\t\t} \n\t\t\tif ( ! isKeyChar ( c , allowCompatChars ) ) { \n\t\t\t\tthrow DecodeException . error ( ERR_ATTR_SYNTAX_ILLEGAL_CHAR_IN_ <missing ';'> NUM00 <missing ';'> _OID1 . get ( c , reader . pos ( ) - NUM00 ) ) ; \n\t\t\t\t} \n\t\t\tlength ++ ; \n\t\t\t} \n\t\t$F2268 ( reader ) final String descr = reader . read ( length ) ; \n\t\t$F61262 ( reader ) return descr ; \n\t\t} \n\tcatch ( final StringIndexOutOfBoundsException e ) { \n\t\tthrow DecodeException . error ( ERR_ATTR_SYNTAX_TRUNCATED_VALUE1 . get ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public String toCSV $F72 { \n\t$F83 ( builder ) $F84 ( builder ) $F84 ( builder ) for ( T predicted : classes ) $F181853 ( builder , String , predicted ) $F84 ( builder ) String firstColumnLabel = NUM00 ; \n\tfor ( T actual : classes ) { \n\t\tbuilder . append ( firstColumnLabel ) ; \n\t\tfirstColumnLabel = NUM00 ; \n\t\t$F64611 ( builder , String , actual ) for ( T predicted : classes ) { \n\t\t\t$F19976 ( builder , getCount , actual , predicted ) $F84 ( builder ) } \n\t\t$F6407 ( builder , getActualTotal , actual ) $F84 ( builder ) } \n\t$F84 ( builder ) for ( T predicted : classes ) { \n\t\t$F6407 ( builder , getPredictedTotal , predicted ) $F84 ( builder ) } \n\t$F84 ( builder ) $F92 ( builder ) } \n"}, {"code": "public void testCase9 $F72 { \n\t$F70249 $F10679 int aSign = NUM00 ; \n\tint bSign = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F10683 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F10686 ( assertEquals , result ) } \n"}, {"code": "public Object assignIdValue ( Object data , Number val , ObjectCache objectCache ) throws SQLException { \n\tObject idVal = dataPersister . convertIdNumber ( val ) ; \n\tif ( idVal == null ) { \n\t\tthrow new SQLException ( NUM00 + dataPersister + NUM00 + this ) ; \n\t\t} \n\telse { \n\t\tassignField ( data , idVal , _BOOL , objectCache ) ; \n\t\treturn idVal ; \n\t\t} \n\t} \n"}, {"code": "public static void writeSwappedInteger ( OutputStream output , int value ) throws IOException { \n\t$F96974 ( output , value ) $F96974 ( output , value ) $F96974 ( output , value ) $F96974 ( output , value ) } \n"}, {"code": "public final boolean isOpen $F72 { \n\treturn closed . get ( ) == _BOOL ; \n\t} \n"}, {"code": "public static $F529 performFindList $F28485 ( dctx , context ) { \n\t$F294466 ( viewSize , context ) if ( viewSize == null ) $F66088 ( viewSize , Integer ) $F545 ( context , viewSize ) $F294466 ( viewIndex , context ) if ( viewIndex == null ) $F66088 ( viewIndex , Integer ) $F545 ( context , viewIndex ) $F157005 ( result , performFind , dctx , context ) int start = viewIndex . intValue ( ) * viewSize . intValue ( ) ; \n\t$F6261 list = null ; \n\tInteger listSize = NUM00 ; \n\ttry { \n\t\tEntityListIterator it = ( EntityListIterator ) result . get ( NUM00 ) ; \n\t\tlist = it . getPartialList ( start + NUM00 , viewSize ) ; \n\t\tlistSize = it . getResultsSizeAfterPartialList ( ) ; \n\t\t$F59 ( it ) } \n\tcatch ( Exception e ) { \n\t\tDebug . logInfo ( NUM00 + e , module ) ; \n\t\t} \n\t$F545 ( result , listSize ) $F545 ( result , list ) $F36382 ( result ) return result ; \n\t} \n"}, {"code": "public static String soapToString ( SOAPElement element ) { \n\treturn domToString ( element . getOwnerDocument ( ) ) ; \n\t} \n"}, {"code": "$F1 public void close $F72 throws IOException { \n\ttry $F881 ( out ) $F105993 ( lockFile ) } \n"}, {"code": "$F35402 ( context , cameraManager ) "}, {"code": "$F1 public boolean equals ( Object x , Object y ) throws HibernateException { \n\t$F83534 ( x , y ) $F1964 ( x , y ) } \n"}, {"code": "$F1 public final void writeBoolean ( boolean v ) throws IOException $F323871 ( dis , v ) "}, {"code": "public void train $F32029 ( sFileNames ) { \n\t$F13712 ( iFile , sFileNames ) while $F2921 ( iFile ) { \n\t\tString sText = utils . loadFileToString ( iFile . next ( ) ) ; \n\t\ttrain ( sText ) ; \n\t\t} \n\t} \n"}, {"code": "public void testFindSpringOpenLdapWithLimit $F72 { \n\tLdapProxy proxy = getLdapOpenLdap ( ) ; \n\tList result = null ; \n\tint limit = NUM00 ; \n\ttry { \n\t\tresult = proxy . find ( getLdapSearchVO ( NUM00 , limit , NUM00 , NUM00 , null , LdapScopeConstants . SCOPE_SUBTREE ) ) ; \n\t\t} \n\t$F3957 assertNotNull ( result ) ; \n\tif ( result != null ) { \n\t\t$F43476 ( assertEquals , limit , result ) } \n\t} \n"}, {"code": "public PrintfFormat ( String fmtArg ) throws IllegalArgumentException { \n\tthis ( Locale . getDefault ( ) , fmtArg ) ; \n\t} \n"}, {"code": "static double svd_pythag ( double a , double b ) { \n\tdouble p , r , s , t , u , temp ; \n\tp = svd_dmax ( $F44398 ( Math , a , b ) ) ; \n\tif ( p != NUM00 ) { \n\t\ttemp = svd_dmin ( $F44398 ( Math , a , b ) ) / p ; \n\t\tr = temp * temp ; \n\t\tt = NUM00 + r ; \n\t\twhile ( t != NUM00 ) { \n\t\t\ts = r / t ; \n\t\t\tu = NUM00 + NUM00 * s ; \n\t\t\tp *= u ; \n\t\t\ttemp = s / u ; \n\t\t\tr *= temp * temp ; \n\t\t\tt = NUM00 + r ; \n\t\t\t} \n\t\t} \n\treturn p ; \n\t} \n"}, {"code": "public final void append ( FastStringBuffer value ) { \n\t$F8249 ( value ) $F1749 ( strlen , value ) $F163790 ( strlen ) int copyfrom = NUM00 ; \n\t$F16051 ( chunk , m_array , m_lastChunk ) int available = m_chunkSize - m_firstFree ; \n\twhile ( strlen > NUM00 ) { \n\t\t$F46170 ( available , strlen ) int sourcechunk = ( copyfrom + value . m_chunkSize - NUM00 ) > > > value . m_chunkBits ; \n\t\tint sourcecolumn = copyfrom & value . m_chunkMask ; \n\t\tint runlength = value . m_chunkSize - sourcecolumn ; \n\t\t$F46170 ( runlength , available ) System . arraycopy ( value . m_array [ sourcechunk ] , sourcecolumn , m_array [ m_lastChunk ] , m_firstFree , runlength ) ; \n\t\tif ( runlength != available ) System . arraycopy ( value . m_array [ sourcechunk + NUM00 ] , NUM00 , m_array [ m_lastChunk ] , m_firstFree + runlength , available - runlength ) ; \n\t\tstrlen -= available ; \n\t\tcopyfrom += available ; \n\t\t$F163794 ( strlen , i , m_array , m_lastChunk , newarray , System , chunk , m_rebundleBits , m_chunkBits , m_maxChunkBits , m_innerFSB , this , m_chunkSize , available , m_firstFree ) } \n\tm_firstFree += available ; \n\t} \n"}, {"code": "public static void writeFixInt32 ( final OutputStream output , final int val ) throws IOException { \n\t$F88317 ( output , val ) $F88317 ( output , val ) $F88317 ( output , val ) $F88315 ( output , val ) } \n"}, {"code": "public static void queueCubeLoad ( ICubicWorld world , CubeIO loader , CubeProviderServer cache , int x , int y , int z , Consumer < Cube > runnable ) { \n\tQueuedCube key = new QueuedCube ( x , y , z , world ) ; \n\tAsyncCubeIOProvider task = cubeTasks . get ( key ) ; \n\tif ( task == null ) { \n\t\ttask = new AsyncCubeIOProvider ( key , loader ) ; \n\t\ttask . addCallback ( runnable ) ; \n\t\tcubeTasks . put ( key , task ) ; \n\t\tpool . execute ( task ) ; \n\t\t} \n\telse { \n\t\ttask . addCallback ( runnable ) ; \n\t\t} \n\tColumn loadedColumn ; \n\tif ( ( loadedColumn = cache . getLoadedColumn ( x , z ) ) == null ) { \n\t\tcache . asyncGetColumn ( x , z , IProviderExtras . Requirement . LIGHT , null ) ; \n\t\t} \n\telse { \n\t\ttask . setColumn ( loadedColumn ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isObjectAvailableNow ( final boolean enabled , final Date availableFrom , final Date availableTo , final Date now ) { \n\t$F42316 ( enabled , _BOOL ) if ( availableFrom != null && now . before ( availableFrom ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( availableTo != null && now . after ( availableTo ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void buttonClicked ( ActionEvent e ) ; \n"}, {"code": "private long loadLargestMessageId $F72 { \n\tReleaseMessage releaseMessage = releaseMessageRepository . findTopByOrderByIdDesc ( ) ; \n\treturn releaseMessage == null ? NUM00 : releaseMessage . getId ( ) ; \n\t} \n"}, {"code": "public void removeChangeListener ( ChangeListener l ) { \n\t$F8249 ( listeners ) listeners . remove ( l ) ; \n\t} \n"}, {"code": "public static RequestLog dump $F72 { \n\tRequestLog current = RLOG . get ( ) ; \n\tRequestLog copy = new RequestLog ( current ) ; \n\t$F725 ( current ) $F7042 ( RLOG ) return copy ; \n\t} \n"}, {"code": "public static String urlDecode ( String str ) { \n\ttry { \n\t\treturn ( URLDecoder . decode ( str , NUM00 ) ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\treturn $F580 ; \n\t\t} \n\t} \n"}, {"code": "public void testThenAcceptBoth_exceptionalCompletion $F72 throws Throwable { \n\tfor ( $F40424 ( m , ExecutionMode ) ) for ( $F2703 ( fFirst , _BOOL ) ) for ( $F2703 ( failFirst , _BOOL ) ) for ( $F127409 ( v1 ) ) { \n\t\t$F127411 ( f ) $F127411 ( g ) $F181556 ( ex ) final SubtractAction r1 = new SubtractAction ( m ) ; \n\t\tfinal SubtractAction r2 = new SubtractAction ( m ) ; \n\t\tfinal SubtractAction r3 = new SubtractAction ( m ) ; \n\t\tfinal $F70219 fst = fFirst ? f : g ; \n\t\tfinal $F70219 snd = ! fFirst ? f : g ; \n\t\t$F159507 ( complete1 , failFirst ) $F159507 ( complete2 , failFirst ) final $F159508 h1 = m . thenAcceptBoth ( f , g , r1 ) ; \n\t\t$F159512 ( assertTrue , complete1 ) final $F159508 h2 = m . thenAcceptBoth ( f , g , r2 ) ; \n\t\tcheckIncomplete ( h1 ) ; \n\t\tcheckIncomplete ( h2 ) ; \n\t\t$F159512 ( assertTrue , complete2 ) final $F159508 h3 = m . thenAcceptBoth ( f , g , r3 ) ; \n\t\tcheckCompletedWithWrappedException ( h1 , ex ) ; \n\t\tcheckCompletedWithWrappedException ( h2 , ex ) ; \n\t\tcheckCompletedWithWrappedException ( h3 , ex ) ; \n\t\t$F159513 ( r1 ) $F159513 ( r2 ) $F159513 ( r3 ) checkCompletedNormally ( failFirst ? snd : fst , v1 ) ; \n\t\tcheckCompletedExceptionally ( failFirst ? fst : snd , ex ) ; \n\t\t} \n\t} \n"}, {"code": "protected DefaultListModel stringToModel ( String s ) { \n\tDefaultListModel result ; \n\tString tmpStr ; \n\tint i ; \n\tboolean quote ; \n\t$F806 find ; \n\t$F806 replace ; \n\tint index ; \n\tresult = $F215229 ; \n\tfind = $F20551 ; \n\treplace = $F20551 ; \n\tfor ( $F6929 ( i , find ) ) { \n\t\ttmpStr = NUM00 ; \n\t\twhile $F4012 ( s ) { \n\t\t\tindex = s . indexOf ( find [ i ] ) ; \n\t\t\tif ( index > - NUM00 ) { \n\t\t\t\ttmpStr += s . substring ( NUM00 , index ) + replace [ i ] ; \n\t\t\t\t$F6943 ( s , index ) } \n\t\t\telse { \n\t\t\t\ttmpStr += s ; \n\t\t\t\ts = NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\ts = tmpStr ; \n\t\t} \n\tquote = _BOOL ; \n\ttmpStr = NUM00 ; \n\tfor ( $F23302 ( i , s ) ) { \n\t\tif $F11983 ( s , i ) { \n\t\t\tquote = ! quote ; \n\t\t\ttmpStr += NUM00 + s . charAt ( i ) ; \n\t\t\t} \n\t\telse if $F11983 ( s , i ) { \n\t\t\tif ( quote ) { \n\t\t\t\ttmpStr += NUM00 + s . charAt ( i ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif $F3106 ( tmpStr ) $F8994 ( tmpStr ) result . addElement ( tmpStr ) ; \n\t\t\t\ttmpStr = NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\ttmpStr += NUM00 + s . charAt ( i ) ; \n\t\t\t} \n\t\t} \n\tif $F1264 ( tmpStr ) { \n\t\tif $F3106 ( tmpStr ) $F8994 ( tmpStr ) result . addElement ( tmpStr ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public void testGetTables $F72 throws Exception { \n\t$F9236 ( dmd , con ) ResultSet rs = dmd . getTables ( null , null , null , null ) ; \n\tassertNotNull ( rs ) ; \n\t$F59 ( rs ) } \n"}, {"code": "public void addAll $F11639 ( collection ) { \n\tif ( mEventDelegate != null ) mEventDelegate . addData ( $F2908 ( collection ) ) ; \n\tif ( collection != null && $F6886 ( collection ) ) { \n\t\tsynchronized ( mLock ) $F21926 ( mObjects , collection ) } \n\t$F32367 ( mNotifyOnChange , notifyDataSetChanged ) } \n"}, {"code": "public static void resetCurrentFileList ( String logName ) { \n\tcurrentFileList . remove ( PREFIX + logName ) ; \n\t} \n"}, {"code": "void initComposeState $F72 { \n\tm_composeState = new ComposeState $F72 ; \n\t} \n"}, {"code": "$F1 public abstract List < JToolBar > createToolBars ( Application a , $F5466 View p ) ; \n"}, {"code": "public static Date parseDate ( String dateValue ) throws DateParseException $F59662 ( parseDate , dateValue ) "}, {"code": "public RegexFileFilter ( String pattern , IOCase caseSensitivity ) { \n\t$F826 ( pattern ) int flags = NUM00 ; \n\tif ( caseSensitivity != null && ! caseSensitivity . isCaseSensitive ( ) ) { \n\t\tflags = Pattern . CASE_INSENSITIVE ; \n\t\t} \n\tthis . pattern = Pattern . compile ( pattern , flags ) ; \n\t} \n"}, {"code": "public static synchronized ResultSet executeQuery ( String sqlStatement ) { \n\tlogger . trace ( String . format ( NUM00 , sqlStatement ) ) ; \n\tResultSet R = null ; \n\tfinal Statement S = getStatement ( ) ; \n\tif ( S == null ) { \n\t\t$F9464 ( logger ) $F1274 } \n\ttry { \n\t\tR = S . executeQuery ( sqlStatement ) ; \n\t\tlogger . trace ( NUM00 + ( null == R ) ) ; \n\t\treturn R ; \n\t\t} \n\tcatch ( Throwable t ) { \n\t\tsurfaceThrowable ( String . format ( NUM00 , sqlStatement ) , t ) ; \n\t\tcleanup ( S , R ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public void write $F97 ( buf ) throws IOException { \n\toutput . write ( buf ) ; \n\tbytesWritten += buf . length ; \n\t} \n"}, {"code": "public static String urlEncode $F156952 ( s ) { \n\t$F4158 ( s ) try $F31978 ( URLEncoder , s ) catch ( UnsupportedEncodingException e ) $F184395 } \n"}, {"code": "protected static boolean checkRawModulesTables ( final CConnection connection , final String databaseName , final int rawModuleId ) { \n\t$F1832 ( Preconditions , connection ) $F1832 ( Preconditions , databaseName ) Preconditions . checkArgument ( rawModuleId > NUM00 , NUM00 , rawModuleId ) ; \n\tfinal ImmutableSet $F4 rawTableNames = ImmutableSet . of ( String . format ( CTableNames . RAW_ADDRESS_COMMENTS_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_ADDRESS_REFERENCES_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_BASE_TYPES , rawModuleId ) , String . format ( CTableNames . RAW_BASIC_BLOCK_INSTRUCTIONS_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_BASIC_BLOCKS_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_CALLGRAPH_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_CONTROL_FLOW_GRAPHS_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_EXPRESSION_NODES_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_EXPRESSION_SUBSTITUTIONS_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_EXPRESSION_TREE_NODES_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_EXPRESSION_TREES_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_EXPRESSION_TYPES_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_FUNCTIONS_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_INSTRUCTIONS_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_OPERANDS_TABLE , rawModuleId ) , String . format ( CTableNames . RAW_SECTIONS , rawModuleId ) , String . format ( CTableNames . RAW_EXPRESSION_TYPE_INSTANCES , rawModuleId ) , String . format ( CTableNames . RAW_TYPE_INSTACES , rawModuleId ) , String . format ( CTableNames . RAW_TYPES , rawModuleId ) ) ; \n\tfinal Pair < CConnection , String > cacheKey = $F24652 ( connection , databaseName ) ; \n\tif ( PostgreSQLDatabaseFunctions . queryCache ( cacheKey , rawTableNames ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\tif ( ! PostgreSQLDatabaseFunctions . fillCache ( cacheKey ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\treturn PostgreSQLDatabaseFunctions . queryCache ( cacheKey , rawTableNames ) ; \n\t\t} \n\t} \n"}, {"code": "public Currency read ( String symbol ) { \n\treturn Currency . getInstance ( symbol ) ; \n\t} \n"}, {"code": "public static float parseFloat ( String s ) { \n\tif $F1238 ( POSITIVE_INFINITY , s ) $F90685 ( Float ) else if $F1238 ( NEGATIVE_INFINITY , s ) $F86429 ( Float ) else if $F1238 ( NaN , s ) $F6623 ( Float ) else { \n\t\ts = trimPlusSign ( s ) ; \n\t\treturn Float . parseFloat ( s ) ; \n\t\t} \n\t} \n"}, {"code": "public Object newInstance ( Class javaContentInterface ) throws JAXBException { \n\tif ( javaContentInterface == null ) { \n\t\tthrow new JAXBException ( Messages . format ( Messages . CI_NOT_NULL ) ) ; \n\t\t} \n\ttry { \n\t\tClass c = gi . getDefaultImplementation ( javaContentInterface ) ; \n\t\tif ( c == null ) throw new JAXBException ( Messages . format ( Messages . MISSING_INTERFACE , javaContentInterface ) ) ; \n\t\t$F101944 ( c ) } \n\tcatch ( Exception e ) { \n\t\tthrow new JAXBException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public void requestPasswordForShareViaLink ( boolean createShare ) { \n\tSharePasswordDialogFragment dialog = SharePasswordDialogFragment . newInstance ( mFile , createShare ) ; \n\tdialog . show ( getFragmentManager ( ) , SharePasswordDialogFragment . PASSWORD_FRAGMENT ) ; \n\t} \n"}, {"code": "private void forceOutOfMemory $F72 { \n\t$F12181 ( junk ) for ( $F589 ) { \n\t\tjunk . add ( $F87103 ) ; \n\t\t} \n\t} \n"}, {"code": "$F112793 ( key , entry , pruneIfNeeded , file , getFileForKey , fos , e , success , VolleyLog , putEntry , deleted ) "}, {"code": "public static double enlargementScaled ( SpatialComparable exist , SpatialComparable addit , double scale ) { \n\tfinal int dim = assertSameDimensionality ( exist , addit ) ; \n\tdouble v1 = NUM00 ; \n\tdouble v2 = NUM00 ; \n\tfor ( $F119 ( i , dim ) ) { \n\t\tfinal double emin = exist . getMin ( i ) ; \n\t\tfinal double emax = exist . getMax ( i ) ; \n\t\tfinal double amin = addit . getMin ( i ) ; \n\t\tfinal double amax = addit . getMax ( i ) ; \n\t\tfinal double min = Math . min ( emin , amin ) ; \n\t\tfinal double max = Math . max ( emax , amax ) ; \n\t\tv1 *= ( max - min ) * scale ; \n\t\tv2 *= ( emax - emin ) * scale ; \n\t\t} \n\treturn v2 - v1 ; \n\t} \n"}, {"code": "public void intersection ( Rectangle2D r ) { \n\t$F16699 ( status , INVALID ) if ( status == EMPTY ) { \n\t\tsetClip ( r ) ; \n\t\tstatus = INUSE ; \n\t\t$F665 } \n\tclip [ NUM00 ] = Math . max ( clip [ NUM00 ] , r . getMinX ( ) ) ; \n\tclip [ NUM00 ] = Math . max ( clip [ NUM00 ] , r . getMinY ( ) ) ; \n\tclip [ NUM00 ] = Math . min ( clip [ NUM00 ] , r . getMaxX ( ) ) ; \n\tclip [ NUM00 ] = Math . min ( clip [ NUM00 ] , r . getMaxY ( ) ) ; \n\t} \n"}, {"code": "public boolean canGetInt $F72 { \n\treturn canGet ( $F37010 ) ; \n\t} \n"}, {"code": "$F68085 ( t , lastWaiter , Node , unlinkCancelledWaiters , node , Thread , firstWaiter ) "}, {"code": "void clear $F72 ; \n"}, {"code": "@ TCB static String stripBannedCodeunits ( String s ) { \n\tint safeLimit = longestPrefixOfGoodCodeunits ( s ) ; \n\t$F7879 ( safeLimit , s ) $F7542 ( sb , s ) stripBannedCodeunits ( sb , safeLimit ) ; \n\t$F92 ( sb ) } \n"}, {"code": "public static void assertLinewiseEquals $F1947 ( message , expected , actual ) { \n\ttry ( Scanner expectedScanner = new Scanner ( expected ) ; \n\tScanner actualScanner = new Scanner ( actual ) ) { \n\t\tString expectedLine = null ; \n\t\tString actualLine = null ; \n\t\tint lineCounter = NUM00 ; \n\t\twhile $F41385 ( expectedScanner ) { \n\t\t\texpectedLine = expectedScanner . nextLine ( ) ; \n\t\t\tif $F41385 ( actualScanner ) { \n\t\t\t\tactualLine = actualScanner . nextLine ( ) ; \n\t\t\t\t} \n\t\t\telse $F35015 ( fail , lineCounter , expectedLine ) assertEquals ( NUM00 + lineCounter + NUM00 + message + NUM00 + expected + NUM00 + actual , expectedLine , actualLine ) ; \n\t\t\t++ lineCounter ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void warning ( String msg , Throwable th ) { \n\twarning ( msg ) ; \n\t$F301 ( th ) } \n"}, {"code": "$F32569 ( panel , cols , rows , filler , filled_cell_11 , _BOOL , cc , Box , index ) "}, {"code": "public String fullForm $F2236 ( str , lowString ) { \n\tString ret = lowString ; \n\tPrefixEntry found = prefixMap . get ( str ) ; \n\tif ( found != null ) { \n\t\tret = found . prefixSingular + ret ; \n\t\t} \n\telse { \n\t\tfor ( PrefixEntry entry : prefixEndList ) { \n\t\t\tif ( str . endsWith ( entry . keyword ) ) { \n\t\t\t\tret = Grammar . addPrefixIfNotAlreadyThere ( ret , entry . prefixSingular , entry . prefixPlural ) ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "public void clearPasswordExpirationWarnedTime $F72 { \n\toperations . add ( PasswordPolicyStateOperationType . CLEAR_PASSWORD_EXPIRATION_WARNED_TIME ) ; \n\t} \n"}, {"code": "private static Locale strip ( Locale locale ) { \n\t$F270887 ( language , locale ) String country = locale . getCountry ( ) ; \n\tString variant = locale . getVariant ( ) ; \n\tif $F5973 ( variant ) { \n\t\tvariant = NUM00 ; \n\t\t} \n\telse if $F5973 ( country ) { \n\t\tcountry = NUM00 ; \n\t\t} \n\telse if $F5973 ( language ) { \n\t\tlanguage = NUM00 ; \n\t\t} \n\telse $F1337 return new Locale ( language , country , variant ) ; \n\t} \n"}, {"code": "private void appendTimeZone ( StringBuffer buffer , int count , boolean generalTimeZone ) { \n\tif ( generalTimeZone ) { \n\t\tTimeZone tz = calendar . getTimeZone ( ) ; \n\t\tboolean daylight = ( calendar . get ( Calendar . DST_OFFSET ) != NUM00 ) ; \n\t\tint style = count < NUM00 ? TimeZone . SHORT : TimeZone . LONG ; \n\t\tif ( ! formatData . customZoneStrings ) { \n\t\t\tbuffer . append ( tz . getDisplayName ( daylight , style , formatData . locale ) ) ; \n\t\t\t$F665 } \n\t\tString custom = TimeZoneNames . getDisplayName ( formatData . zoneStrings , tz . getID ( ) , daylight , style ) ; \n\t\tif ( custom != null ) { \n\t\t\tbuffer . append ( custom ) ; \n\t\t\t$F665 } \n\t\t} \n\tappendNumericTimeZone ( buffer , count , generalTimeZone ) ; \n\t} \n"}, {"code": "public void removeListeners $F72 { \n\tif ( globalListener != null ) { \n\t\ttry { \n\t\t\tInvokerHelper . invokeMethod ( currentObject , NUM00 , globalListener ) ; \n\t\t\t} \n\t\t$F3957 globalListener = null ; \n\t\t} \n\tif ( localListener != null ) { \n\t\ttry { \n\t\t\tInvokerHelper . invokeMethod ( currentObject , NUM00 , $F40356 ( propertyName , localListener ) ) ; \n\t\t\t} \n\t\t$F3957 localListener = null ; \n\t\t} \n\tif ( syntheticFullBinding != null ) { \n\t\tsyntheticFullBinding . unbind ( ) ; \n\t\t} \n\t} \n"}, {"code": "public static String padLeft ( String str , int totalChars ) { \n\t$F12553 ( str ) $F83 ( sb ) for ( int i = NUM00 ; \n\ti < totalChars - str . length ( ) ; \n\ti ++ ) $F86 ( sb ) sb . append ( str ) ; \n\t$F92 ( sb ) } \n"}, {"code": "public void showScores ( boolean flag ) { \n\tmShowScores = flag ; \n\tSwingUtilities . invokeLater ( null ) ; \n\t} \n"}, {"code": "public static void write ( File file , CharSequence data , boolean append ) throws IOException { \n\twrite ( file , data , Charset . defaultCharset ( ) , append ) ; \n\t} \n"}, {"code": "protected double kernelHelper ( int n , $F1469 s , int endIndexS , $F1469 t , int endIndexT ) { \n\tif ( n <= NUM00 ) $F4915 ( getReturnValue , n ) if ( Math . min ( endIndexS + NUM00 , endIndexT + NUM00 ) < n ) $F4915 ( getReturnValue , n ) int adr = NUM00 ; \n\tif ( m_useRecursionCache ) { \n\t\tadr = m_multX * n + m_multY * endIndexS + m_multZ * endIndexT ; \n\t\tif ( cachekhK [ adr % maxCache ] == adr + NUM00 ) { \n\t\t\treturn cachekh [ adr % maxCache ] ; \n\t\t\t} \n\t\t} \n\tdouble result = NUM00 ; \n\tresult = m_lambda * kernelHelper ( n , s , endIndexS - NUM00 , t , endIndexT ) + kernelHelper2 ( n , s , endIndexS , t , endIndexT ) ; \n\tif ( m_useRecursionCache ) { \n\t\tcachekhK [ adr % maxCache ] = adr + NUM00 ; \n\t\tcachekh [ adr % maxCache ] = result ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "protected Connection openH2Connection ( boolean autocommit ) throws SQLException { \n\t$F2699 ( System ) String dbName = NUM00 ; \n\tConnection conn = DriverManager . getConnection ( NUM00 + dbName + NUM00 ) ; \n\tconn . setAutoCommit ( autocommit ) ; \n\treturn conn ; \n\t} \n"}, {"code": "private void emitClear ( String fieldName , StringBuilder builder ) { \n\t$F84 ( builder ) $F6407 ( builder , getClearName , fieldName ) $F84 ( builder ) $F6407 ( builder , getEnsureName , fieldName ) $F84 ( builder ) builder . append ( fieldName ) ; \n\t$F84 ( builder ) $F84 ( builder ) } \n"}, {"code": "$F13735 ( prefix , namespace , attName , attValue , xmlWriter ) "}, {"code": "protected void startRecoarding $F72 { \n\t$F725 ( coordinates ) enabled = _BOOL ; \n\t} \n"}, {"code": "public void addInputMethodListener ( InputMethodListener l ) { \n\tm_textPane . addInputMethodListener ( l ) ; \n\t} \n"}, {"code": "public void addFooterView $F123554 ( v , data , isSelectable ) { \n\t$F123559 ( info ) info . view = v ; \n\tinfo . data = data ; \n\tinfo . isSelectable = isSelectable ; \n\tmFooterViewInfos . add ( info ) ; \n\tif ( mAdapter != null && mObserver != null ) { \n\t\tmObserver . onChanged ( ) ; \n\t\t} \n\t} \n"}, {"code": "public static void load ( String url ) { \n\tString driver = getDriver ( url ) ; \n\t$F25302 ( driver , loadUserClass ) } \n"}, {"code": "public void addDocument ( Document d ) { \n\tif ( ! m_readMode ) { \n\t\ttry { \n\t\t\twriter . addDocument ( d ) ; \n\t\t\t$F725 ( m_hitCountCache ) } \n\t\t$F12241 ( e ) } \n\telse { \n\t\t$F50706 } \n\t} \n"}, {"code": "protected void putCommand ( final Class commandClass , final $F806 names ) { \n\tCheck . isTrue ( names . length > NUM00 , NUM00 ) ; \n\t_commandsToCanonicalNames . put ( commandClass , names [ NUM00 ] ) ; \n\tfor ( $F1139 ( i , names ) ) { \n\t\t_aliasesToCommands . put ( names [ i ] , commandClass ) ; \n\t\t} \n\t} \n"}, {"code": "protected void writeColumnAutoIncrementStmt ( Table table , Column column , StringBuilder ddl ) $F86 ( ddl ) "}, {"code": "private void SaveGCMData $F72 { \n\ttry { \n\t\tSharedPreferences preferences = getSharedPreferences ( ) ; \n\t\t$F37526 ( editor , preferences ) editor . putString ( PREFS_PUSHER_APP_ID_KEY , mPusherAppId ) ; \n\t\teditor . putString ( PREFS_PUSHER_URL_KEY , mPusherUrl ) ; \n\t\teditor . putString ( PREFS_PUSHER_FILE_TAG_KEY , mPusherBaseFileTag ) ; \n\t\t$F17621 ( editor ) } \n\tcatch ( Exception e ) { \n\t\tLog . e ( LOG_TAG , $F9309 ( e ) ) ; \n\t\t} \n\t} \n"}, {"code": "final void runWorker ( Worker w ) { \n\t$F686 ( wt , Thread ) Runnable task = w . firstTask ; \n\tw . firstTask = null ; \n\t$F704 ( w ) boolean completedAbruptly = _BOOL ; \n\ttry { \n\t\twhile ( task != null || ( task = getTask ( ) ) != null ) { \n\t\t\t$F8934 ( w ) if ( ( $F38219 ( runStateAtLeast , ctl , STOP ) || ( Thread . interrupted ( ) && $F38219 ( runStateAtLeast , ctl , STOP ) ) ) && $F147861 ( wt ) ) $F7589 ( wt ) try { \n\t\t\t\tbeforeExecute ( wt , task ) ; \n\t\t\t\tThrowable thrown = null ; \n\t\t\t\ttry $F21688 ( task ) catch ( RuntimeException x ) $F234985 ( thrown , x ) catch ( Error x ) $F234985 ( thrown , x ) catch ( Throwable x ) { \n\t\t\t\t\tthrown = x ; \n\t\t\t\t\tthrow new Error ( x ) ; \n\t\t\t\t\t} \n\t\t\t\t$F168670 ( afterExecute , task , thrown ) } \n\t\t\tfinally { \n\t\t\t\ttask = null ; \n\t\t\t\tw . completedTasks ++ ; \n\t\t\t\t$F704 ( w ) } \n\t\t\t} \n\t\tcompletedAbruptly = _BOOL ; \n\t\t} \n\t$F168670 ( processWorkerExit , w , completedAbruptly ) } \n"}, {"code": "public void writeBlockLight ( ByteBuf output ) { \n\toutput . writeBytes ( blockLight . getHandle ( ) ) ; \n\t} \n"}, {"code": "private static final boolean compareAndSetWaitStatus ( Node node , int expect , int update ) { \n\treturn unsafe . compareAndSwapInt ( node , waitStatusOffset , expect , update ) ; \n\t} \n"}, {"code": "public String search $F72 throws Exception $F27427 ( executeQuery , SUCCESS ) "}, {"code": "public String next ( Pattern pattern ) { \n\tcheckOpen ( ) ; \n\tcheckNotNull ( pattern ) ; \n\tmatchSuccessful = _BOOL ; \n\tsaveCurrentStatus ( ) ; \n\tif $F931 ( setTokenRegion ) { \n\t\trecoverPreviousStatus ( ) ; \n\t\t$F6746 } \n\tmatcher . usePattern ( pattern ) ; \n\tif $F1152 ( matcher ) { \n\t\trecoverPreviousStatus ( ) ; \n\t\tthrow new InputMismatchException $F72 ; \n\t\t} \n\tmatchSuccessful = _BOOL ; \n\t$F256438 ( matcher ) } \n"}, {"code": "public void addNewDuration ( long duration ) { \n\t$F5224 ( callsNumber ) total . addAndGet ( duration ) ; \n\tsynchronized ( lock ) { \n\t\tif ( duration < minimum . longValue ( ) ) $F24242 ( minimum , duration ) if ( duration > maximum . longValue ( ) ) $F24242 ( maximum , duration ) } \n\t} \n"}, {"code": "private void paintBackgroundSolid ( Graphics2D g , JComponent c , int x , int y , int width , int height ) { \n\t$F59175 ( color , c ) if ( type == CommonControlState . DISABLED ) { \n\t\tcolor = new Color ( color . getRed ( ) , color . getGreen ( ) , color . getBlue ( ) , NUM00 ) ; \n\t\t} \n\tShape s = shapeGenerator . createRoundRectangle ( x - NUM00 , y - NUM00 , width + NUM00 , height + NUM00 , CornerSize . BORDER ) ; \n\tg . setPaint ( color ) ; \n\tg . fill ( s ) ; \n\tif ( isPaintLineSeperators ( c ) ) { \n\t\tpaintLineSeparator ( g , c , width , height ) ; \n\t\t} \n\t} \n"}, {"code": "public static void addAttributeDefaultValues ( String serviceName , String subSchemaName , String schemaType , String attributeName , Set defaultValues ) throws UpgradeException { \n\tString classMethod = NUM00 ; \n\tif $F6299 ( debug ) { \n\t\tdebug . message ( classMethod + NUM00 ) ; \n\t\tdebug . message ( NUM00 + serviceName + NUM00 + attributeName ) ; \n\t\t} \n\tServiceSchema ss = getServiceSchema ( serviceName , subSchemaName , schemaType ) ; \n\ttry { \n\t\tMap attributeDefaults = ss . getAttributeDefaults ( ) ; \n\t\t$F125374 ( oldAttrValues , attributeDefaults , attributeName ) Set newAttrValues = $F21545 ( oldAttrValues ) ? new HashSet $F72 : new HashSet ( oldAttrValues ) ; \n\t\tnewAttrValues . addAll ( defaultValues ) ; \n\t\tss . setAttributeDefaults ( attributeName , newAttrValues ) ; \n\t\t} \n\tcatch ( SSOException ssoe ) { \n\t\tthrow new UpgradeException $F580 ; \n\t\t} \n\tcatch ( SMSException sme ) { \n\t\tthrow new UpgradeException $F3487 ; \n\t\t} \n\t} \n"}, {"code": "private String encodeProduct $F72 { \n\t$F280 ( tokens ) $F113775 ( it , productTokens ) while $F2921 ( it ) { \n\t\t$F53197 ( tokens , it ) } \n\t$F92 ( tokens ) } \n"}, {"code": "public boolean isMetadataModifiedSinceLastPublication $F72 { \n\treturn metadataModifiedSinceLastPublication ; \n\t} \n"}, {"code": "public Options resourceDirs $F11301 ( value ) { \n\t$F725 ( resourceDirs ) resourceDirs . addAll ( value ) ; \n\treturn this ; \n\t} \n"}, {"code": "private final String _decodeShortUnicodeName ( int len ) throws $F54472 { \n\tint outPtr = NUM00 ; \n\t$F1469 outBuf = _textBuffer . emptyAndGetCurrentSegment ( ) ; \n\tint inPtr = _inputPtr ; \n\t_inputPtr += len ; \n\tfinal $F2027 codes = SmileConstants . sUtf8UnitLengths ; \n\t$F71887 ( inBuf , _inputBuffer ) for ( int end = inPtr + len ; \n\tinPtr < end ; \n\t) { \n\t\t$F1473 ( i , inBuf , inPtr ) int code = codes [ i ] ; \n\t\tif ( code != NUM00 ) { \n\t\t\tswitch ( code ) { \n\t\t\t\t$F3366 i = $F74254 ( i ) | $F44579 ( inBuf , inPtr ) ; \n\t\t\t\t$F597 $F3366 i = $F74254 ( i ) | $F196796 ( inBuf , inPtr ) | $F44579 ( inBuf , inPtr ) ; \n\t\t\t\t$F597 $F3366 i = $F74254 ( i ) | $F196796 ( inBuf , inPtr ) | $F196796 ( inBuf , inPtr ) | $F44579 ( inBuf , inPtr ) ; \n\t\t\t\ti -= NUM00 ; \n\t\t\t\toutBuf [ outPtr ++ ] = ( char ) ( NUM00 | ( i > > NUM00 ) ) ; \n\t\t\t\ti = NUM00 | ( i & NUM00 ) ; \n\t\t\t\t$F597 $F1267 $F52251 ( _reportError , Integer , i ) } \n\t\t\t} \n\t\t$F1479 ( outBuf , outPtr , i ) } \n\t_textBuffer . setCurrentLength ( outPtr ) ; \n\treturn _textBuffer . contentsAsString ( ) ; \n\t} \n"}, {"code": "private static ClassNode makeType ( ClassNode cn , boolean usingClass ) { \n\tif ( usingClass ) { \n\t\tClassNode clazzType = CLASS_Type . getPlainNodeReference ( ) ; \n\t\tclazzType . setGenericsTypes ( new GenericsType [ ] { \n\t\t\tnew GenericsType ( cn ) } \n\t\t) ; \n\t\treturn clazzType ; \n\t\t} \n\telse { \n\t\treturn cn ; \n\t\t} \n\t} \n"}, {"code": "void pushImportURL ( String hrefUrl ) $F31742 ( m_importStack , hrefUrl ) "}, {"code": "protected String toMessage $F3501 ( results ) { \n\t$F83 ( builder ) if ( results != null ) { \n\t\tfor ( $F19318 ( entry , results ) ) { \n\t\t\tbuilder . append ( entry . getKey ( ) + NUM00 + entry . getValue ( ) + NUM00 ) ; \n\t\t\t} \n\t\t} \n\t$F92 ( builder ) } \n"}, {"code": "public TestTree sort $F72 { \n\tCollections . sort ( suites ) ; \n\t$F22620 ( suites ) return this ; \n\t} \n"}, {"code": "public static $F80820 addToArray ( $F80820 array , Collection < EventBean > eventsToAdd ) { \n\t$F80820 newArray = new EventBean [ $F229470 ( array , eventsToAdd ) ] ; \n\t$F7057 ( System , array , newArray ) int counter = array . length ; \n\tfor ( EventBean eventToAdd : eventsToAdd ) $F52339 ( newArray , counter , eventToAdd ) return newArray ; \n\t} \n"}, {"code": "$F58902 ( name , threadId , mFinished , mMarkers , SystemClock ) "}, {"code": "public static String replace $F1947 ( a , b , c ) { \n\t$F80469 ( result , c ) int i = NUM00 ; \n\t$F12747 ( j , c , a ) while ( j >= i ) { \n\t\t$F13037 ( result , c , i , j ) result . append ( b ) ; \n\t\t$F46880 ( i , j , a ) j = c . indexOf ( a , i ) ; \n\t\t} \n\tresult . append ( $F83851 ( c , i ) ) ; \n\t$F92 ( result ) } \n"}, {"code": "protected void onPageScrolled $F3665 ( position , offset , offsetPixels ) { \n\tif ( mDecorChildCount > NUM00 ) $F3695 ( scrollY , getScrollY , paddingTop , getPaddingTop , paddingBottom , getPaddingBottom , height , getHeight , childCount , getChildCount , i , child , getChildAt , lp , vgrav , Gravity , childTop , Math , childOffset ) dispatchOnPageScrolled ( position , offset , offsetPixels ) ; \n\tif ( mPageTransformer != null ) { \n\t\t$F3666 ( scrollY , getScrollY ) $F3666 ( childCount , getChildCount ) for ( $F119 ( i , childCount ) ) { \n\t\t\tfinal View child = getChildAt ( i ) ; \n\t\t\t$F3670 ( lp , child ) $F3727 ( lp ) final float transformPos = ( float ) ( child . getTop ( ) - scrollY ) / getClientHeight ( ) ; \n\t\t\tmPageTransformer . transformPage ( child , transformPos ) ; \n\t\t\t} \n\t\t} \n\tmCalledSuper = _BOOL ; \n\t} \n"}, {"code": "private void reflectMemberVariablesInFinalButton $F72 { \n\tfinal boolean lastPageReached = ( viewPager . getCurrentItem ( ) + NUM00 ) == pages . size ( ) ; \n\tfinal boolean buttonShouldBeInvisible = ! lastPageReached || finalButtonDisabled ; \n\tfinal boolean buttonIsCurrentlyInvisible = finalButton . getVisibility ( ) == View . INVISIBLE ; \n\tfinal boolean shouldUpdateButton = buttonShouldBeInvisible != buttonIsCurrentlyInvisible ; \n\tif ( shouldUpdateButton ) { \n\t\tfinal Animator buttonAnimator = buttonShouldBeInvisible ? buttonAnimatorFactory . newFinalButtonDisappearAnimator ( finalButton ) : buttonAnimatorFactory . newFinalButtonAppearAnimator ( finalButton ) ; \n\t\t$F270375 ( buttonShouldBeInvisible , disableButton , buttonAnimator , finalButton , enableButton ) } \n\t} \n"}, {"code": "public void testDecoder6 $F72 { \n\tboolean res ; \n\tString originalAppIdName = mAppIdName ; \n\tint originalContentTypeValue = mContentTypeValue ; \n\t$F6822 ( rd ) for ( $F1139 ( i , OMA_APPLICATION_ID_NAMES ) ) { \n\t\tmAppIdName = OMA_APPLICATION_ID_NAMES [ i ] ; \n\t\t$F57832 ( mContentTypeValue , rd ) $F57834 ( pdu , createPDU ) $F57836 ( pduDecoder , pdu ) res = $F57837 ( pduDecoder , mWspHeaderStart , mWspHeaderLen ) ; \n\t\tassertTrue ( res ) ; \n\t\tint index = $F335316 ( pduDecoder ) ; \n\t\tres = pduDecoder . decodeXWapApplicationId ( index ) ; \n\t\tassertTrue ( res ) ; \n\t\tLog . d ( LOG_TAG , NUM00 + mAppIdName + NUM00 + pduDecoder . getValueString ( ) + NUM00 ) ; \n\t\tassertTrue ( mAppIdName . equals ( pduDecoder . getValueString ( ) ) ) ; \n\t\t} \n\tmAppIdName = originalAppIdName ; \n\tmContentTypeValue = originalContentTypeValue ; \n\t} \n"}, {"code": "public final void removeAll $F72 { \n\t$F725 ( actionList ) $F725 ( constraintsList ) needSorting = _BOOL ; \n\t} \n"}, {"code": "private static boolean isWritable ( $F4170 final File file ) { \n\tboolean isExisting = file . exists ( ) ; \n\ttry { \n\t\t$F46293 ( output , file , _BOOL ) ; \n\t\t$F29053 ( output ) } \n\tcatch ( java . io . FileNotFoundException e ) { \n\t\treturn _BOOL ; \n\t\t} \n\tboolean result = file . canWrite ( ) ; \n\tif ( ! isExisting ) $F19636 ( file ) return result ; \n\t} \n"}, {"code": "public GmPublishingPriority $F72 $F845 "}, {"code": "private RelyingParty validateRelyingParty ( HttpServletRequest request , String tenantName ) { \n\t$F18062 ( Validate , request ) Validate . notEmpty ( tenantName , NUM00 ) ; \n\tDefaultIdmAccessorFactory idmFactory = new DefaultIdmAccessorFactory $F72 ; \n\t$F18062 ( Validate , idmFactory ) IdmAccessor idmAccessor = idmFactory . getIdmAccessor ( ) ; \n\tidmAccessor . setTenant ( tenantName ) ; \n\tString encodedEntityId = request . getParameter ( Shared . RELYINGPARTY_ENTITYID ) ; \n\tif $F4251 ( encodedEntityId ) { \n\t\t$F9464 ( logger ) $F1274 } \n\tString rpEntityId = new String ( Base64 . decode ( encodedEntityId ) ) ; \n\tRelyingParty rp = idmAccessor . getRelyingPartyByUrl ( rpEntityId ) ; \n\tif ( rp != null ) { \n\t\treturn rp ; \n\t\t} \n\telse $F337969 ( logger , rpEntityId ) } \n"}, {"code": "public void rotateZ ( double theta ) { \n\tMatrix3D tmp = new Matrix3D $F72 ; \n\t$F54226 ( c , Math , theta ) $F33859 ( s , Math , theta ) $F54228 ( tmp , c ) tmp . set ( NUM00 , NUM00 , - s ) ; \n\t$F54228 ( tmp , s ) $F54228 ( tmp , c ) preMultiply ( tmp ) ; \n\t} \n"}, {"code": "public ServiceHost startFactory ( Service instanceService ) { \n\tfinal Class < ? extends Service > serviceClass = instanceService . getClass ( ) ; \n\treturn startFactory ( serviceClass , null ) ; \n\t} \n"}, {"code": "void wakeOut $F72 { \n\tOnAvailable outFlow = _outFlow ; \n\t$F2329 ( outFlow ) if ( _creditsIn <= _queue . head ( ) ) $F932 StateOutPipe stateOld ; \n\tStateOutPipe stateNew ; \n\tdo { \n\t\t$F16478 ( stateOld , _stateOutRef ) if ( ! stateOld . isFull ( ) ) $F932 stateNew = stateOld . toWake ( ) ; \n\t\t} \n\twhile $F59753 ( _stateOutRef , stateOld , stateNew ) ; \n\ttry ( OutboxAmp outbox = OutboxAmp . currentOrCreate ( _outRef . services ( ) ) ) { \n\t\tObjects . requireNonNull ( outbox ) ; \n\t\tPipeWakeOutMessage $F4203 msg = new PipeWakeOutMessage $F200 ( outbox , _outRef , this , outFlow ) ; \n\t\toutbox . offer ( msg ) ; \n\t\t} \n\t} \n"}, {"code": "public ConstraintMap createAssignmentConstraints ( final AnnotatedTypeMirror assignedTo , final AnnotatedTypeMirror boxedReturnType , final AnnotatedExecutableType methodType , final Set < AFConstraint > afArgumentConstraints , final Map < TypeVariable , AnnotatedTypeMirror > inferredArgs , final Set < TypeVariable > targets , final AnnotatedTypeFactory typeFactory ) { \n\tfinal LinkedList < AFConstraint > $F19827 ( assignmentAfs ) ; \n\tfor ( AnnotatedTypeVariable typeParam : methodType . getTypeVariables ( ) ) { \n\t\tfinal TypeVariable target = typeParam . getUnderlyingType ( ) ; \n\t\tfinal AnnotatedTypeMirror inferredType = inferredArgs . get ( target ) ; \n\t\tif ( inferredType != null ) { \n\t\t\tassignmentAfs . add ( new A2F ( inferredType , typeParam . getUpperBound ( ) ) ) ; \n\t\t\tassignmentAfs . add ( new F2A ( typeParam . getLowerBound ( ) , inferredType ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tassignmentAfs . add ( new F2A ( typeParam , typeParam . getUpperBound ( ) ) ) ; \n\t\t\tassignmentAfs . add ( new A2F ( typeParam . getLowerBound ( ) , typeParam ) ) ; \n\t\t\t} \n\t\t} \n\tfor ( AFConstraint argConstraint : afArgumentConstraints ) { \n\t\tif ( argConstraint instanceof F2A ) $F207 ( assignmentAfs , argConstraint ) } \n\tLinkedList < AFConstraint > $F19827 ( substitutedAssignmentConstraints ) ; \n\tfor ( AFConstraint afConstraint : assignmentAfs ) { \n\t\tsubstitutedAssignmentConstraints . add ( afConstraint . substitute ( inferredArgs ) ) ; \n\t\t} \n\tfinal AnnotatedTypeMirror substitutedReturnType = TypeArgInferenceUtil . substitute ( inferredArgs , boxedReturnType ) ; \n\tsubstitutedAssignmentConstraints . add ( new F2A ( substitutedReturnType , assignedTo ) ) ; \n\tfinal Set < AFConstraint > $F22304 ( reducedConstraints ) ; \n\treduceAfConstraints ( typeFactory , reducedConstraints , substitutedAssignmentConstraints , targets ) ; \n\tfinal Set < TUConstraint > tuAssignmentConstraints = afToTuConstraints ( reducedConstraints , targets ) ; \n\taddConstraintsBetweenTargets ( tuAssignmentConstraints , targets , _BOOL , typeFactory ) ; \n\treturn constraintMapBuilder . build ( targets , tuAssignmentConstraints , typeFactory ) ; \n\t} \n"}, {"code": "public static int columnsNumber ( char c , int x , int prevX , int plainSpaceSize ) { \n\tif ( c != NUM00 ) $F1083 int result = ( x - prevX ) / plainSpaceSize ; \n\tif ( ( x - prevX ) % plainSpaceSize > NUM00 ) { \n\t\tresult ++ ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private Optional ( T value ) $F36568 ( this , Objects , value ) "}, {"code": "public KafkaMessageListenerContainer ( ConsumerFactory $F9340 consumerFactory , ContainerProperties containerProperties , TopicPartitionInitialOffset ... topicPartitions ) { \n\tsuper ( containerProperties ) ; \n\t$F18062 ( Assert , consumerFactory ) this . consumerFactory = consumerFactory ; \n\tif ( topicPartitions != null ) { \n\t\t$F17879 ( this , Arrays , topicPartitions ) } \n\telse { \n\t\tthis . topicPartitions = containerProperties . getTopicPartitions ( ) ; \n\t\t} \n\t} \n"}, {"code": "public void engineDeleteEntry ( String alias ) throws KeyStoreException { \n\tKey k = ( Key ) keys . remove ( alias ) ; \n\tCertificate c = ( Certificate ) certs . remove ( alias ) ; \n\tif ( c != null ) { \n\t\tchainCerts . remove ( new CertId ( c . getPublicKey ( ) ) ) ; \n\t\t} \n\tif ( k != null ) { \n\t\tString id = ( String ) localIds . remove ( alias ) ; \n\t\tif ( id != null ) { \n\t\t\tc = ( Certificate ) keyCerts . remove ( id ) ; \n\t\t\t} \n\t\tif ( c != null ) { \n\t\t\tchainCerts . remove ( new CertId ( c . getPublicKey ( ) ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private String toString ( Matcher m , int group ) { \n\treturn ( group == NUM00 ) ? NUM00 : m . group ( group ) ; \n\t} \n"}, {"code": "public PlaLineInt translate_by ( PlaVectorInt p_vector ) { \n\tif ( p_vector . equals ( PlaVectorInt . ZERO ) ) return this ; \n\tPlaPointInt new_a = point_a . translate_by ( p_vector ) ; \n\tPlaPointInt new_b = point_b . translate_by ( p_vector ) ; \n\treturn new PlaLineInt ( new_a , new_b ) ; \n\t} \n"}, {"code": "$F1431 final void reject ( Runnable command ) { \n\thandler . rejectedExecution ( command , this ) ; \n\t} \n"}, {"code": "private int calculateMenuMargin $F72 { \n\tWindowManager wm = ( WindowManager ) getSystemService ( Context . WINDOW_SERVICE ) ; \n\tDisplay display = wm . getDefaultDisplay ( ) ; \n\t$F101628 ( size ) display . getSize ( size ) ; \n\tint height = size . y ; \n\treturn ( int ) Math . round ( height * MENU_MARGIN_RELATIVE_MODIFIER ) ; \n\t} \n"}, {"code": "public void addRam ( AttackAction ea ) { \n\tpendingRams . addElement ( ea ) ; \n\tprocessGameEvent ( new GameNewActionEvent ( this , ea ) ) ; \n\t} \n"}, {"code": "public static $F3807 createColors ( Resources r , $F2027 colors ) { \n\t$F67791 ( result ) for ( int i : colors ) { \n\t\tresult . add ( r . getColor ( i ) ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public void testConfigFileProperty $F72 throws Exception { \n\tFile configHome = new File ( configuration . getHome ( ) ) ; \n\tassertTrue ( NUM00 , $F1891 ( configHome ) ) ; \n\tFile existingFile = createFile ( configHome , NUM00 , NUM00 ) ; \n\tassertEquals ( NUM00 , readFile ( existingFile ) ) ; \n\tString fileName = NUM00 ; \n\tString fileContents = NUM00 ; \n\tFile file = createFile ( configFileDirectory , fileName , fileContents ) ; \n\tFileConfig configFile = new FileConfig $F72 ; \n\tconfigFile . setFile ( getAbsolutePath ( file ) ) ; \n\tconfigFile . setToFile ( NUM00 ) ; \n\tconfigFile . setOverwrite ( _BOOL ) ; \n\tconfigFile . setConfigfile ( _BOOL ) ; \n\t$F2699 ( configuration ) configuration . setConfigFileProperty ( configFile ) ; \n\tconfiguration . doConfigure ( null ) ; \n\tFile copiedFile = new File ( configuration . getHome ( ) + NUM00 ) ; \n\tassertTrue ( NUM00 , copiedFile . exists ( ) ) ; \n\tassertEquals ( NUM00 , readFile ( copiedFile ) ) ; \n\t} \n"}, {"code": "protected $F96 generateSalt $F72 { \n\treturn HEADER . getBytes ( Constants . UTF8 ) ; \n\t} \n"}, {"code": "public void addListener ( final ProjectorListener projectorListener ) { \n\tif ( listeners == null ) { \n\t\tlisteners = new ArrayList < ProjectorListener > $F72 ; \n\t\t} \n\tlisteners . add ( projectorListener ) ; \n\t} \n"}, {"code": "protected TupleExpr selectNextTupleExpr ( List < TupleExpr > expressions , Map < TupleExpr , Double > cardinalityMap , Map < TupleExpr , List $F134071 > varsMap , Map < Var , Integer > varFreqMap , $F2689 boundVars ) { \n\tTupleExpr result = null ; \n\tif $F3817 ( expressions ) { \n\t\tdouble lowestCardinality = Double . POSITIVE_INFINITY ; \n\t\tfor ( TupleExpr tupleExpr : expressions ) { \n\t\t\tdouble cardinality = getTupleExprCardinality ( tupleExpr , cardinalityMap , varsMap , varFreqMap , boundVars ) ; \n\t\t\tif ( cardinality < lowestCardinality || result == null ) { \n\t\t\t\tlowestCardinality = cardinality ; \n\t\t\t\tresult = tupleExpr ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse $F36987 ( result , expressions ) return result ; \n\t} \n"}, {"code": "public static void writeBcdNumber ( OutputStream os , String number ) throws IOException { \n\tint bcd = NUM00 ; \n\tint n = NUM00 ; \n\tfor ( $F1088 ( i , number ) ) { \n\t\tswitch $F31372 ( number , i ) { \n\t\t\t$F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 $F1262 bcd |= NUM00 ; \n\t\t\t$F597 } \n\t\tn ++ ; \n\t\tif ( n == NUM00 ) { \n\t\t\tos . write ( bcd ) ; \n\t\t\tn = NUM00 ; \n\t\t\tbcd = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tbcd >>= NUM00 ; \n\t\t\t} \n\t\t} \n\tif ( n == NUM00 ) { \n\t\tbcd |= NUM00 ; \n\t\tos . write ( bcd ) ; \n\t\t} \n\t} \n"}, {"code": "public void addMessage ( String message ) { \n\tmessages . addLast ( message ) ; \n\tif $F60125 ( messages , MAX_HISTORY ) { \n\t\t$F60607 ( messages ) } \n\t$F8935 ( pointer , messages ) } \n"}, {"code": "$F1219 protected void startExecutor ( final int container ) { \n\t$F556 ( LOG , container ) final Process containerExecutor = startExecutorProcess ( container ) ; \n\tprocessToContainer . put ( containerExecutor , container ) ; \n\t$F556 ( LOG , container ) startExecutorMonitor ( container , containerExecutor ) ; \n\t} \n"}, {"code": "public static Date stringToDate ( String s , DateFormat formatter ) { \n\ttry $F57093 ( formatter , s ) catch ( ParseException e ) $F1337 } \n"}, {"code": "public void accept ( AbstractReporter r ) { \n\tr . testStart ( this ) ; \n\tr . browserInfoEntry ( browserInfoEntry ) ; \n\tIterator < LogEntry > entryIterator = logEntries . iterator ( ) ; \n\twhile $F2921 ( entryIterator ) { \n\t\tLogEntry entry = entryIterator . next ( ) ; \n\t\tif $F87568 ( entryIterator ) { \n\t\t\tentry . setLast ( _BOOL ) ; \n\t\t\t} \n\t\tvisit ( entry , r ) ; \n\t\t} \n\tr . testEnd ( this ) ; \n\t} \n"}, {"code": "private void loadLatestExtensionVersions $F72 { \n\ttry { \n\t\tList $F7942 all = registryManager . getExtensions ( ) ; \n\t\tif $F5973 ( all ) $F14373 ( setLatestExtensionVersions , getLatestVersions , all ) } \n\tcatch ( RegistryException e ) { \n\t\tString msg = RegistryException . logRegistryException ( e . getType ( ) , this ) ; \n\t\twarnings . addStartupError ( msg ) ; \n\t\tLOG . error ( msg ) ; \n\t\tmsg = getText ( NUM00 , new String [ ] { \n\t\t\tcfg . getRegistryUrl ( ) } \n\t\t) ; \n\t\twarnings . addStartupError ( msg ) ; \n\t\tLOG . error ( msg ) ; \n\t\t} \n\tfinally { \n\t\tif $F9774 ( getLatestExtensionVersions ) { \n\t\t\tsetLatestExtensionVersions ( new ArrayList $F7942 $F72 ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void startNode ( Node node ) throws $F2253 { \n\tif ( node instanceof Locator ) { \n\t\tLocator loc = ( Locator ) node ; \n\t\tfLocator . setColumnNumber ( loc . getColumnNumber ( ) ) ; \n\t\tfLocator . setLineNumber ( loc . getLineNumber ( ) ) ; \n\t\tfLocator . setPublicId ( loc . getPublicId ( ) ) ; \n\t\tfLocator . setSystemId ( loc . getSystemId ( ) ) ; \n\t\t} \n\telse { \n\t\tfLocator . setColumnNumber ( NUM00 ) ; \n\t\tfLocator . setLineNumber ( NUM00 ) ; \n\t\t} \n\tswitch $F6708 ( node ) { \n\t\tcase Node . DOCUMENT_TYPE_NODE : serializeDocType ( ( DocumentType ) node , _BOOL ) ; \n\t\t$F597 case Node . COMMENT_NODE : serializeComment ( ( Comment ) node ) ; \n\t\t$F597 case Node . DOCUMENT_FRAGMENT_NODE : $F597 case Node . DOCUMENT_NODE : $F597 case Node . ELEMENT_NODE : serializeElement ( ( Element ) node , _BOOL ) ; \n\t\t$F597 case Node . PROCESSING_INSTRUCTION_NODE : serializePI ( ( ProcessingInstruction ) node ) ; \n\t\t$F597 case Node . CDATA_SECTION_NODE : serializeCDATASection ( ( CDATASection ) node ) ; \n\t\t$F597 case Node . TEXT_NODE : serializeText ( ( Text ) node ) ; \n\t\t$F597 case Node . ENTITY_REFERENCE_NODE : serializeEntityReference ( ( EntityReference ) node , _BOOL ) ; \n\t\t$F597 $F1267 } \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\t$F20818 ( sb ) format ( $F106703 ( getYear ) , NUM00 , sb ) ; \n\t$F84 ( sb ) format ( $F106703 ( getMonth ) , NUM00 , sb ) ; \n\t$F84 ( sb ) format ( getDate ( ) , NUM00 , sb ) ; \n\t$F92 ( sb ) } \n"}, {"code": "public void testClearBitNegativeInside2 $F72 { \n\t$F17888 int aSign = - NUM00 ; \n\tint number = NUM00 ; \n\tbyte $F3018 = { \n\t\t- NUM00 , NUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , NUM00 , - NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F32957 ( result , aNumber , number ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F7841 ( assertEquals , result ) } \n"}, {"code": "public void testCompareGreaterScale2 $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\tString b = NUM00 ; \n\tint bScale = NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) $F1918 ( bNumber , b , bScale ) int result = - NUM00 ; \n\t$F1960 ( assertEquals , result , aNumber , bNumber ) } \n"}, {"code": "public int read $F72 throws IOException { \n\tint val ; \n\tif ( $F7614 ( val , is ) < NUM00 ) $F7629 if ( bo == NUM00 ) { \n\t\tval = ( char ) ( ( val < < NUM00 ) | $F353757 ( is ) ) ; \n\t\t} \n\telse { \n\t\tval = ( char ) ( $F82091 ( is ) | ( val & NUM00 ) ) ; \n\t\t} \n\treturn val ; \n\t} \n"}, {"code": "public void cancelAutoCompletion $F72 { \n\tif ( inCompletion ) { \n\t\ttextField . setText ( textBefore ) ; \n\t\ttextField . setCaretPosition ( caretPosBefore ) ; \n\t\tprevCompletion = null ; \n\t\tprevCompletionIndex = NUM00 ; \n\t\tinCompletion = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "$F73303 ( axis , trans , prevImageSize , imageSize , prevViewSize , viewSize , drawableSize , m , Matrix , percentage , Math ) "}, {"code": "public $F987 listOptions $F72 { \n\t$F20795 ( result ) $F424068 ( result ) $F9010 ( result , Collections , super ) $F1007 ( result ) } \n"}, {"code": "public ClientPropertiesBuilder withProxyHostName ( String proxyHostName ) { \n\tproperties . setProperty ( CLIENT_SERVICE_PROXY_HOST_NAME , proxyHostName ) ; \n\treturn this ; \n\t} \n"}, {"code": "public static void verifySetterMethods ( $F6969 clazz , MappedField ... fields ) { \n\tString methodName = null ; \n\tString fieldName = null ; \n\t$F20126 ( fieldType ) try { \n\t\tfor ( MappedField field : fields ) { \n\t\t\t$F32928 ( fieldName , field ) $F86218 ( fieldType , field ) String customSet = field . setMethod ( ) ; \n\t\t\tif ( ! isNull ( customSet ) && ! customSet . equals ( Constants . DEFAULT_ACCESSOR_VALUE ) ) try { \n\t\t\t\tclazz . getMethod ( customSet , fieldType ) ; \n\t\t\t\tfield . setMethod ( customSet ) ; \n\t\t\t\t$F598 } \n\t\t\tcatch ( Exception e ) { \n\t\t\t\tError . customMethod ( NUM00 , customSet , clazz ) ; \n\t\t\t\t} \n\t\t\tmethodName = mSet ( fieldName ) ; \n\t\t\tclazz . getMethod ( methodName , fieldType ) ; \n\t\t\tfield . setMethod ( methodName ) ; \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) { \n\t\tError . method ( methodName , fieldName , clazz ) ; \n\t\t} \n\t} \n"}, {"code": "private E dequeue $F72 { \n\t$F48385 ( items , this ) $F138442 ( x , items , takeIndex ) items [ takeIndex ] = null ; \n\ttakeIndex = inc ( takeIndex ) ; \n\tcount -- ; \n\tif ( itrs != null ) itrs . elementDequeued ( ) ; \n\t$F702 ( notFull ) return x ; \n\t} \n"}, {"code": "static public String randomPositiveFloat ( int whole , int decimal ) { \n\t$F83 ( output ) output . append ( $F6823 ( rnd ) ) ; \n\tfor ( $F4864 ( i , whole ) ) { \n\t\toutput . append ( rnd . nextInt ( NUM00 ) ) ; \n\t\t} \n\t$F84 ( output ) for ( $F119 ( i , decimal ) ) { \n\t\toutput . append ( rnd . nextInt ( NUM00 ) ) ; \n\t\t} \n\t$F92 ( output ) } \n"}, {"code": "public static Variation attemptToGetAsVariant ( String part ) { \n\ttry { \n\t\tStoneTypes var = StoneTypes . valueOf ( part . toUpperCase ( ) ) ; \n\t\tif ( var != null ) { \n\t\t\tVariation bv = new Variation $F72 ; \n\t\t\tbv . setValue ( var . value ( ) ) ; \n\t\t\treturn bv ; \n\t\t\t} \n\t\t} \n\t$F3957 try { \n\t\tWoodTypes var = WoodTypes . valueOf ( part . toUpperCase ( ) ) ; \n\t\tif ( var != null ) { \n\t\t\tVariation bv = new Variation $F72 ; \n\t\t\tbv . setValue ( var . value ( ) ) ; \n\t\t\treturn bv ; \n\t\t\t} \n\t\t} \n\t$F3957 try { \n\t\tFlowerTypes var = FlowerTypes . fromValue ( part ) ; \n\t\tif ( var != null ) { \n\t\t\tVariation bv = new Variation $F72 ; \n\t\t\tbv . setValue ( var . value ( ) ) ; \n\t\t\treturn bv ; \n\t\t\t} \n\t\t} \n\t$F3957 try { \n\t\tEntityTypes var = EntityTypes . fromValue ( part ) ; \n\t\tif ( var != null ) { \n\t\t\tVariation bv = new Variation $F72 ; \n\t\t\tbv . setValue ( var . value ( ) ) ; \n\t\t\treturn bv ; \n\t\t\t} \n\t\t} \n\t$F3957 try { \n\t\tMonsterEggTypes var = MonsterEggTypes . fromValue ( part ) ; \n\t\tif ( var != null ) { \n\t\t\tVariation bv = new Variation $F72 ; \n\t\t\tbv . setValue ( var . value ( ) ) ; \n\t\t\treturn bv ; \n\t\t\t} \n\t\t} \n\t$F3957 try { \n\t\tShapeTypes var = ShapeTypes . fromValue ( part ) ; \n\t\tif ( var != null ) { \n\t\t\tVariation bv = new Variation $F72 ; \n\t\t\tbv . setValue ( var . value ( ) ) ; \n\t\t\treturn bv ; \n\t\t\t} \n\t\t} \n\t$F3957 try { \n\t\tHalfTypes var = HalfTypes . fromValue ( part ) ; \n\t\tif ( var != null ) { \n\t\t\tVariation bv = new Variation $F72 ; \n\t\t\tbv . setValue ( var . value ( ) ) ; \n\t\t\treturn bv ; \n\t\t\t} \n\t\t} \n\t$F3957 $F1274 } \n"}, {"code": "public void resetTextBoxIndexesExcept ( $F11868 excludedList ) { \n\t$F11868 unusedTextBoxIndexes = new $F87074 ( points . getTextBoxIndexes ( ) ) ; \n\tunusedTextBoxIndexes . removeAll ( excludedList ) ; \n\tfor ( Integer index : unusedTextBoxIndexes ) { \n\t\tpoints . removeTextBox ( index ) ; \n\t\t} \n\t} \n"}, {"code": "public IDevice learnEntity ( long macAddress , Short vlan , Integer ipv4Address , Long switchDPID , Integer switchPort , boolean processUpdates ) { \n\tList < IDeviceListener > listeners = deviceListeners . getOrderedListeners ( ) ; \n\tif ( ! processUpdates ) { \n\t\tdeviceListeners . clearListeners ( ) ; \n\t\t} \n\tif ( vlan != null && vlan . shortValue ( ) <= NUM00 ) vlan = null ; \n\tif ( ipv4Address != null && ipv4Address == NUM00 ) ipv4Address = null ; \n\tIDevice res = learnDeviceByEntity ( new Entity ( macAddress , vlan , ipv4Address , switchDPID , switchPort , $F4094 ) ) ; \n\tif ( listeners != null ) { \n\t\tfor ( IDeviceListener listener : listeners ) { \n\t\t\tdeviceListeners . addListener ( NUM00 , listener ) ; \n\t\t\t} \n\t\t} \n\treturn res ; \n\t} \n"}, {"code": "public $F1986 levelZeroData $F72 { \n\tList $F64793 levelZeroBuffers = bufferMap . get ( NUM00 ) ; \n\tint length = NUM00 ; \n\tfor ( Buffer buffer : levelZeroBuffers ) { \n\t\tif ( ! buffer . hasCapacity ( ) ) { \n\t\t\tlength += buffer . size ; \n\t\t\t} \n\t\telse { \n\t\t\tlength += buffer . next ; \n\t\t\t} \n\t\t} \n\tint pos = NUM00 ; \n\tint currLen ; \n\t$F26202 ( out , length ) for ( Buffer buffer : levelZeroBuffers ) { \n\t\tif ( ! buffer . hasCapacity ( ) ) { \n\t\t\tcurrLen = buffer . size ; \n\t\t\t} \n\t\telse { \n\t\t\tcurrLen = buffer . next ; \n\t\t\t} \n\t\tSystem . arraycopy ( buffer . data , NUM00 , out , pos , currLen ) ; \n\t\tpos += currLen ; \n\t\t} \n\treturn out ; \n\t} \n"}, {"code": "$F32797 ( sourcePosition , referencePosition , srcAndRefPositions , referenceCount , a , System ) "}, {"code": "public $F806 showVersion $F72 throws NetworkDeviceControllerException { \n\t$F808 ( returnVal ) SSHPrompt [ ] prompts = { \n\t\tSSHPrompt . MDS_POUND , SSHPrompt . MDS_GREATER_THAN } \n\t; \n\t$F83 ( buf ) SSHPrompt prompt = sendWaitFor ( MDSDialogProperties . getString ( NUM00 ) , NUM00 , prompts , buf ) ; \n\t$F91090 ( lines , getLines , buf ) $F806 regex = { \n\t\tMDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) } \n\t; \n\t$F808 ( groups ) for ( String line : lines ) { \n\t\tint index = match ( line , regex , groups ) ; \n\t\tswitch ( index ) { \n\t\t\t$F3366 $F603 ( returnVal , groups ) $F597 $F3366 $F603 ( returnVal , groups ) $F597 $F3366 $F603 ( returnVal , groups ) $F597 } \n\t\t} \n\treturn returnVal ; \n\t} \n"}, {"code": "public static int countMatches ( String string , char c ) { \n\tint n = NUM00 ; \n\tfor ( $F2998 ( tc , string ) ) { \n\t\tif ( c == tc ) n ++ ; \n\t\t} \n\treturn n ; \n\t} \n"}, {"code": "private ImageIcon addColor ( ImageIcon icon , Color color ) { \n\tif ( icon == null || color == null ) { \n\t\treturn icon ; \n\t\t} \n\tBufferedImage newImage = new BufferedImage ( icon . getIconWidth ( ) , icon . getIconWidth ( ) , BufferedImage . TYPE_INT_ARGB ) ; \n\t$F27516 ( g , newImage ) g . setColor ( color ) ; \n\tg . drawImage ( icon . getImage ( ) , NUM00 , NUM00 , color , null ) ; \n\t$F355 ( g ) $F34728 ( newImage ) } \n"}, {"code": "public static $F96 readAllLimited ( InputStream inStr , int limit ) throws IOException { \n\t$F1538 ( buf ) pipeAllLimited ( inStr , limit , buf ) ; \n\t$F11316 ( buf ) } \n"}, {"code": "protected String searchFor ( final String target , String start ) $F6001 ( searchFor , target , start ) "}, {"code": "private int validatePreloadOrder ( CacheConfiguration [ ] cfgs ) throws IgniteCheckedException { \n\tint maxOrder = NUM00 ; \n\tfor ( CacheConfiguration cfg : cfgs ) { \n\t\tint rebalanceOrder = cfg . getRebalanceOrder ( ) ; \n\t\tif ( rebalanceOrder > NUM00 ) { \n\t\t\tif ( cfg . getCacheMode ( ) == LOCAL ) throw new IgniteCheckedException ( NUM00 + NUM00 + U . maskName ( cfg . getName ( ) ) ) ; \n\t\t\tif ( cfg . getRebalanceMode ( ) == CacheRebalanceMode . NONE ) throw new IgniteCheckedException ( NUM00 + NUM00 + U . maskName ( cfg . getName ( ) ) + NUM00 + cfg . getRebalanceMode ( ) + NUM00 + cfg . getRebalanceOrder ( ) + NUM00 ) ; \n\t\t\t$F19410 ( maxOrder , Math , rebalanceOrder ) } \n\t\telse if ( rebalanceOrder < NUM00 ) throw new IgniteCheckedException ( NUM00 + NUM00 + U . maskName ( cfg . getName ( ) ) + NUM00 + rebalanceOrder + NUM00 ) ; \n\t\t} \n\treturn maxOrder ; \n\t} \n"}, {"code": "public void execute $F72 { \n\tmPlayer . setLoopMode ( mDoLoop ) ; \n\t$F40963 ( mThread , this ) ; \n\t$F2346 ( mThread ) } \n"}, {"code": "$F1 public void removeEnvVar ( EnvVar envVar ) $F275325 ( envVar , envVarList ) "}, {"code": "static private String calcThreshold ( double scoreThreshold , double lambda ) { \n\tfinal double logProbThreshold = Math . log ( NUM00 - scoreThreshold / NUM00 ) ; \n\tint maxNum = NUM00 ; \n\tif ( calcLogProb ( maxNum , lambda ) > logProbThreshold ) $F2455 int minNum = NUM00 ; \n\twhile ( minNum < maxNum ) { \n\t\tfinal int midNum = ( maxNum + minNum ) / NUM00 ; \n\t\tfinal boolean passThreshold = calcLogProb ( midNum , lambda ) <= logProbThreshold ; \n\t\tif ( passThreshold ) { \n\t\t\tmaxNum = midNum ; \n\t\t\t} \n\t\telse { \n\t\t\t$F15290 ( midNum , minNum ) minNum = midNum ; \n\t\t\t} \n\t\t} \n\t$F23209 ( Integer , maxNum ) } \n"}, {"code": "private Scope peek $F72 throws JSONException { \n\tif $F2979 ( stack ) $F19954 $F24150 ( stack ) } \n"}, {"code": "public void testIsSigned $F72 { \n\ttry { \n\t\tassertFalse ( rsmd . isSigned ( NUM00 ) ) ; \n\t\t} \n\t$F125502 ( fail , e1 ) try { \n\t\trsmd . isSigned ( NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F31184 } \n"}, {"code": "public static int indexOfLastSeparator ( String filename ) { \n\t$F43349 ( filename ) $F162792 ( lastUnixPos , filename , UNIX_SEPARATOR ) $F162792 ( lastWindowsPos , filename , WINDOWS_SEPARATOR ) $F85710 ( Math , lastUnixPos , lastWindowsPos ) } \n"}, {"code": "public static boolean pointInView ( View v , float localX , float localY , float slop ) { \n\treturn localX >= - slop && localY >= - slop && localX < ( v . getWidth ( ) + slop ) && localY < ( v . getHeight ( ) + slop ) ; \n\t} \n"}, {"code": "@ Category ( FlakyTest . class ) $F32043 public void test_FPAmetadataFetch $F72 { \n\tfinal Host host = Host . getHost ( NUM00 ) ; \n\t$F32047 ( server1 , host ) $F32047 ( server2 , host ) $F32047 ( server3 , host ) $F32047 ( server4 , host ) Boolean simpleFPR = _BOOL ; \n\tfinal int portLocator = AvailablePort . getRandomAvailablePort ( AvailablePort . SOCKET ) ; \n\tfinal String hostLocator = NetworkUtils . getServerHostName ( server1 . getHost ( ) ) ; \n\tfinal String locator = hostLocator + NUM00 + portLocator + NUM00 ; \n\t$F188761 ( server3 ) try { \n\t\tList < FixedPartitionAttributes > fpaList = new ArrayList < FixedPartitionAttributes > $F72 ; \n\t\tfpaList . add ( FixedPartitionAttributes . createFixedPartition ( NUM00 , _BOOL , NUM00 ) ) ; \n\t\tfpaList . add ( FixedPartitionAttributes . createFixedPartition ( NUM00 , _BOOL , NUM00 ) ) ; \n\t\tInteger port1 = ( Integer ) server1 . invoke ( null ) ; \n\t\t$F725 ( fpaList ) fpaList . add ( FixedPartitionAttributes . createFixedPartition ( NUM00 , _BOOL , NUM00 ) ) ; \n\t\tInteger port2 = ( Integer ) server2 . invoke ( null ) ; \n\t\t$F725 ( fpaList ) createClientWithLocator ( hostLocator , portLocator ) ; \n\t\tputIntoPartitionedRegionsThreeQs ( ) ; \n\t\tgetFromPartitionedRegionsFor3Qs ( ) ; \n\t\tWait . pause ( NUM00 ) ; \n\t\t$F188761 ( server1 ) $F188761 ( server2 ) int totalBucketOnServer = NUM00 ; \n\t\ttotalBucketOnServer += ( Integer ) server1 . invoke ( null ) ; \n\t\ttotalBucketOnServer += ( Integer ) server2 . invoke ( null ) ; \n\t\tint currentRedundancy = NUM00 ; \n\t\tverifyMetadata ( totalBucketOnServer , currentRedundancy ) ; \n\t\tupdateIntoSinglePRFor3Qs ( ) ; \n\t\t$F725 ( fpaList ) fpaList . add ( FixedPartitionAttributes . createFixedPartition ( NUM00 , _BOOL , NUM00 ) ) ; \n\t\tfpaList . add ( FixedPartitionAttributes . createFixedPartition ( NUM00 , _BOOL , NUM00 ) ) ; \n\t\tfpaList . add ( FixedPartitionAttributes . createFixedPartition ( NUM00 , _BOOL , NUM00 ) ) ; \n\t\tfpaList . add ( FixedPartitionAttributes . createFixedPartition ( NUM00 , _BOOL , NUM00 ) ) ; \n\t\tInteger port4 = ( Integer ) server4 . invoke ( null ) ; \n\t\tWait . pause ( NUM00 ) ; \n\t\tputIntoPartitionedRegions ( ) ; \n\t\tgetFromPartitionedRegions ( ) ; \n\t\tWait . pause ( NUM00 ) ; \n\t\t$F188761 ( server1 ) $F188761 ( server2 ) $F188761 ( server4 ) totalBucketOnServer = NUM00 ; \n\t\ttotalBucketOnServer += ( Integer ) server1 . invoke ( null ) ; \n\t\ttotalBucketOnServer += ( Integer ) server2 . invoke ( null ) ; \n\t\ttotalBucketOnServer += ( Integer ) server4 . invoke ( null ) ; \n\t\tupdateIntoSinglePR ( ) ; \n\t\t} \n\tfinally { \n\t\t$F188761 ( server3 ) } \n\t} \n"}, {"code": "private static $F24901 unrollBounds ( final Map < $F24904 , Type > typeArguments , final $F24901 bounds ) { \n\t$F24901 result = bounds ; \n\tint i = NUM00 ; \n\tfor ( $F255681 ( i , result ) ) { \n\t\tfinal Type unrolled = unrollVariables ( typeArguments , result [ i ] ) ; \n\t\tif ( unrolled == null ) { \n\t\t\tresult = ArrayUtils . remove ( result , i -- ) ; \n\t\t\t} \n\t\telse { \n\t\t\tresult [ i ] = unrolled ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public void deleteQuota ( String id ) throws IsilonException { \n\tdelete ( _baseUrl . resolve ( URI_QUOTAS ) , id , NUM00 ) ; \n\t} \n"}, {"code": "$F13429 ( criteria , createCriteriaInternal , oredCriteria ) "}, {"code": "public static $F2539 createBasicAuthHeader ( String username , String password , $F2540 ( headerMap ) ) { \n\tif ( headerMap == null ) $F23429 ( headerMap ) String credentials = username + NUM00 + password ; \n\tString base64EncodedCredentials = Base64 . encodeToString ( credentials . getBytes ( ) , Base64 . NO_WRAP ) ; \n\theaderMap . put ( NUM00 , NUM00 + base64EncodedCredentials ) ; \n\treturn headerMap ; \n\t} \n"}, {"code": "private void addExtentEntry $F72 { \n\textentModel . addNewEntry ( ) ; \n\tremoveExtentButton . setEnabled ( _BOOL ) ; \n\t} \n"}, {"code": "private TransportNetwork checkCached ( String networkId ) { \n\ttry { \n\t\tString filename = networkId + NUM00 + R5Version . version + NUM00 ; \n\t\tFile cacheLocation = new File ( cacheDir , networkId + NUM00 + R5Version . version + NUM00 ) ; \n\t\tif $F3428 ( cacheLocation ) $F10635 ( LOG , cacheLocation ) else { \n\t\t\t$F10635 ( LOG , cacheLocation ) if ( sourceBucket != null ) { \n\t\t\t\t$F973 ( LOG ) S3Object tn ; \n\t\t\t\ttry { \n\t\t\t\t\ttn = s3 . getObject ( sourceBucket , filename ) ; \n\t\t\t\t\t} \n\t\t\t\tcatch ( AmazonServiceException ex ) $F11048 ( LOG ) $F1907 ( cacheDir ) $F10635 ( LOG , cacheLocation ) $F4649 ( fos , cacheLocation ) InputStream is = tn . getObjectContent ( ) ; \n\t\t\t\ttry $F5990 ( ByteStreams , is , fos ) $F4651 ( is , fos ) } \n\t\t\telse $F11048 ( LOG ) } \n\t\t$F10635 ( LOG , cacheLocation ) $F4647 ( fis , cacheLocation ) try $F57043 ( TransportNetwork , fis ) $F3229 ( fis ) } \n\tcatch ( Exception e ) $F236732 ( LOG , e ) } \n"}, {"code": "public int countTokens $F72 { \n\tint count = NUM00 ; \n\tboolean inToken = _BOOL ; \n\tfor ( int i = position , length = string . length ( ) ; \n\ti < length ; \n\ti ++ ) { \n\t\tif ( delimiters . indexOf ( string . charAt ( i ) , NUM00 ) >= NUM00 ) { \n\t\t\tif ( returnDelimiters ) count ++ ; \n\t\t\tif ( inToken ) { \n\t\t\t\tcount ++ ; \n\t\t\t\tinToken = _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tinToken = _BOOL ; \n\t\t\t} \n\t\t} \n\tif ( inToken ) count ++ ; \n\treturn count ; \n\t} \n"}, {"code": "void readFile ( File file ) throws org . jdom2 . JDOMException , $F3258 { \n\tXmlFile xf = new XmlFile $F90279 ; \n\txf . rootFromFile ( file ) ; \n\t} \n"}, {"code": "public boolean isAllGranted $F72 { \n\tint count = NUM00 ; \n\tfor ( $F2277 ( i , mPerms ) ) { \n\t\tif ( $F67701 ( mPerms , mUserPermission , i ) == PackageManager . PERMISSION_GRANTED ) count ++ ; \n\t\t} \n\treturn count == mPerms . size ( ) ; \n\t} \n"}, {"code": "protected void execute ( Runnable evt ) $F44547 ( executor , evt ) "}, {"code": "private void sendNextMessageOverNetwork $F72 throws Exception { \n\tRawData raw = outgoing . take ( ) ; \n\t$F61745 ( raw ) sendNext ( raw ) ; \n\t} \n"}, {"code": "$F26827 ( w , h , oldw , oldh , super , setupBounds , setupPaints , invalidate ) "}, {"code": "public void addAttributeFor ( final Field field ) $F207 ( fieldToUseAsAttribute , field ) "}, {"code": "public boolean isSessionToken ( String token ) { \n\tsynchronized ( sessionTokens ) $F298 ( sessionTokens , token ) } \n"}, {"code": "public static double rootMeansSquaredError $F6762 ( real , predicted ) { \n\tdouble ret = NUM00 ; \n\tfor ( $F1139 ( i , real ) ) { \n\t\tret += Math . pow ( $F17318 ( real , i , predicted ) , NUM00 ) ; \n\t\t} \n\treturn Math . sqrt ( ret / real . length ) ; \n\t} \n"}, {"code": "public void export ( ByteBuffer buf ) { \n\tbuf . putInt ( seqId ) ; \n\tif ( info . isRowBlockEnabled ( ) ) buf . putInt ( nRows ) ; \n\texport ( primaryKey , buf ) ; \n\tfor ( ByteArray cb : cellBlocks ) { \n\t\texport ( cb , buf ) ; \n\t\t} \n\t} \n"}, {"code": "private $F530 createAccDetailmap ( String glcode , BigDecimal debitAmount , BigDecimal creditAmount ) { \n\t$F223986 ( accountdetailmap ) accountdetailmap . put ( VoucherConstant . GLCODE , glcode ) ; \n\taccountdetailmap . put ( VoucherConstant . DEBITAMOUNT , debitAmount ) ; \n\taccountdetailmap . put ( VoucherConstant . CREDITAMOUNT , creditAmount ) ; \n\taccountdetailmap . put ( VoucherConstant . FUNCTIONCODE , getFunctionaryCode ( ) ) ; \n\treturn accountdetailmap ; \n\t} \n"}, {"code": "private void rotateRight $F17573 ( root ) { \n\t$F17575 ( pivot , root ) $F17577 ( right , root ) $F17575 ( pivotLeft , pivot ) $F17579 ( pivotRight , pivot ) root . left = pivotRight ; \n\t$F17581 ( pivotRight , root ) replaceInParent ( root , pivot ) ; \n\tpivot . right = root ; \n\troot . parent = pivot ; \n\t$F17587 ( root , Math , right , pivotRight ) $F17592 ( pivot , Math , root , pivotLeft ) } \n"}, {"code": "private static int byteCompaction ( int mode , $F2027 codewords , Charset encoding , int codeIndex , StringBuilder result ) { \n\t$F1538 ( decodedBytes ) if ( mode == BYTE_COMPACTION_MODE_LATCH ) { \n\t\tint count = NUM00 ; \n\t\tlong value = NUM00 ; \n\t\t$F11844 ( byteCompactedCodewords ) boolean end = _BOOL ; \n\t\tint nextCode = codewords [ codeIndex ++ ] ; \n\t\twhile ( ( codeIndex < codewords [ NUM00 ] ) && ! end ) { \n\t\t\tbyteCompactedCodewords [ count ++ ] = nextCode ; \n\t\t\tvalue = NUM00 * value + nextCode ; \n\t\t\tnextCode = codewords [ codeIndex ++ ] ; \n\t\t\tif $F62764 ( nextCode , TEXT_COMPACTION_MODE_LATCH , BYTE_COMPACTION_MODE_LATCH , NUMERIC_COMPACTION_MODE_LATCH , BYTE_COMPACTION_MODE_LATCH_6 , BEGIN_MACRO_PDF417_CONTROL_BLOCK , BEGIN_MACRO_PDF417_OPTIONAL_FIELD , MACRO_PDF417_TERMINATOR ) { \n\t\t\t\tcodeIndex -- ; \n\t\t\t\tend = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F62775 ( count , j , decodedBytes , value ) } \n\t\t\t} \n\t\tif ( codeIndex == codewords [ NUM00 ] && nextCode < TEXT_COMPACTION_MODE_LATCH ) $F52339 ( byteCompactedCodewords , count , nextCode ) for ( $F119 ( i , count ) ) { \n\t\t\tdecodedBytes . write ( ( byte ) byteCompactedCodewords [ i ] ) ; \n\t\t\t} \n\t\t} \n\telse if ( mode == BYTE_COMPACTION_MODE_LATCH_6 ) { \n\t\tint count = NUM00 ; \n\t\tlong value = NUM00 ; \n\t\tboolean end = _BOOL ; \n\t\twhile $F38554 ( codeIndex , codewords , end ) { \n\t\t\tint code = codewords [ codeIndex ++ ] ; \n\t\t\tif ( code < TEXT_COMPACTION_MODE_LATCH ) { \n\t\t\t\tcount ++ ; \n\t\t\t\tvalue = NUM00 * value + code ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif $F62764 ( code , TEXT_COMPACTION_MODE_LATCH , BYTE_COMPACTION_MODE_LATCH , NUMERIC_COMPACTION_MODE_LATCH , BYTE_COMPACTION_MODE_LATCH_6 , BEGIN_MACRO_PDF417_CONTROL_BLOCK , BEGIN_MACRO_PDF417_OPTIONAL_FIELD , MACRO_PDF417_TERMINATOR ) { \n\t\t\t\t\tcodeIndex -- ; \n\t\t\t\t\tend = _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t$F62775 ( count , j , decodedBytes , value ) } \n\t\t} \n\tresult . append ( new String ( decodedBytes . toByteArray ( ) , encoding ) ) ; \n\treturn codeIndex ; \n\t} \n"}, {"code": "private void updateRadioLinks $F72 { \n\tm_advanceDataSetFirst . setEnabled ( m_GeneratorPropertyPanel . getEditorActive ( ) ) ; \n\tm_advanceIteratorFirst . setEnabled ( m_GeneratorPropertyPanel . getEditorActive ( ) ) ; \n\tif ( m_Exp != null ) { \n\t\tif ( ! m_GeneratorPropertyPanel . getEditorActive ( ) ) { \n\t\t\tm_Exp . setAdvanceDataSetFirst ( _BOOL ) ; \n\t\t\t} \n\t\telse { \n\t\t\tm_Exp . setAdvanceDataSetFirst ( m_advanceDataSetFirst . isSelected ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void update ( long value ) { \n\t$F5224 ( count ) sample . update ( value ) ; \n\tsetMax ( value ) ; \n\tsetMin ( value ) ; \n\tsum . getAndAdd ( value ) ; \n\tupdateVariance ( value ) ; \n\t} \n"}, {"code": "$F1 public void drawSeries $F36949 ( canvas , paint , points , renderer , yAxisValue , seriesIndex , startIndex ) { \n\t$F14782 ( paint , renderer ) $F5597 ( paint , Style ) $F2199 ( length , points ) XYValueSeries series = ( XYValueSeries ) mDataset . getSeriesAt ( seriesIndex ) ; \n\tdouble max = series . getMaxValue ( ) ; \n\tdouble coef = MAX_BUBBLE_SIZE / max ; \n\tfor ( $F6225 ( i , length ) ) { \n\t\tdouble size = series . getValue ( startIndex + i / NUM00 ) * coef + MIN_BUBBLE_SIZE ; \n\t\tdrawCircle ( canvas , paint , points . get ( i ) , points . get ( i + NUM00 ) , ( float ) size ) ; \n\t\t} \n\t} \n"}, {"code": "$F199553 ( signature , pos , getChar , checkFormalTypeParameters , checkClassTypeSignature ) "}, {"code": "public static $F96 select ( String appId , String suffix ) { \n\tString cardletAid = FIDESMO_AID_PREFIX + appId + suffix ; \n\treturn select ( cardletAid ) ; \n\t} \n"}, {"code": "public List < Properties > findAvailableProperties ( String uri ) throws IOException { \n\t$F725 ( _resourcesNotLoaded ) String fulluri = _path + uri ; \n\tList < Properties > $F204 ( properties ) ; \n\t$F104855 resources = getResources ( fulluri ) ; \n\twhile $F1444 ( resources ) { \n\t\tURL url = resources . nextElement ( ) ; \n\t\ttry { \n\t\t\tProperties props = loadProperties ( url ) ; \n\t\t\tproperties . add ( props ) ; \n\t\t\t} \n\t\tcatch ( Exception notAvailable ) { \n\t\t\t_resourcesNotLoaded . add ( url . toExternalForm ( ) ) ; \n\t\t\t} \n\t\t} \n\treturn properties ; \n\t} \n"}, {"code": "void internalAddRootEntry ( ProjectComparisonEntry entry ) $F207 ( entries , entry ) "}, {"code": "public static Source fromURL ( URL url , Charset cs ) throws IOException { \n\tURI uri ; \n\ttry { \n\t\turi = url . toURI ( ) ; \n\t\t} \n\tcatch ( URISyntaxException e ) $F19592 ( e ) try ( $F35899 ( is , url ) ) $F19580 ( fromStream , is , uri , cs ) } \n"}, {"code": "public synchronized void addZoomListener ( ZoomListener listener ) $F207 ( mZoomListeners , listener ) "}, {"code": "public void testMergeOneServletIntoDocumentWithAnotherServlet $F72 throws Exception { \n\t$F44 ( srcXml ) $F34646 ( srcWebXml , WebXmlIo , srcXml ) $F44 ( mergeXml ) $F34646 ( mergeWebXml , WebXmlIo , mergeXml ) $F34648 ( merger , srcWebXml ) merger . merge ( mergeWebXml ) ; \n\tassertTrue ( WebXmlUtils . hasServlet ( srcWebXml , NUM00 ) ) ; \n\tassertTrue ( WebXmlUtils . hasServlet ( srcWebXml , NUM00 ) ) ; \n\t} \n"}, {"code": "public RE extractRE $F72 throws InterruptedException { \n\tarden ( ) ; \n\tif $F5973 ( coeffs ) $F11389 return unionREs ( terms ) ; \n\t} \n"}, {"code": "$F1309 public static void runFinalizersOnExit ( boolean run ) { \n\tfinalizeOnExit = run ; \n\t} \n"}, {"code": "public void addResult ( AMIdentity id , Map attrs ) { \n\tsearchResults . add ( id ) ; \n\tresultsMap . put ( id , attrs ) ; \n\t} \n"}, {"code": "public < T extends IntentionAction & LocalQuickFix > void registerBatchFix ( $F1113 T fix , $F5466 TextRange range , $F5466 final HighlightDisplayKey key ) { \n\tif ( range == null ) { \n\t\trange = new TextRange ( myStartOffset , myEndOffset ) ; \n\t\t} \n\tif ( myBatchFixes == null ) { \n\t\tmyBatchFixes = new ArrayList < QuickFixInfo > $F72 ; \n\t\t} \n\tmyBatchFixes . add ( new QuickFixInfo ( fix , range , key ) ) ; \n\t} \n"}, {"code": "protected void createFile ( ZipEntry entry ) { \n\tIPath pathname = new Path $F27949 ( entry ) ; \n\tZipEntry parent ; \n\tif ( pathname . segmentCount ( ) == NUM00 ) { \n\t\tparent = root ; \n\t\t} \n\telse { \n\t\tparent = ( ZipEntry ) directoryEntryCache . get ( pathname . removeLastSegments ( NUM00 ) ) ; \n\t\t} \n\taddToChildren ( parent , entry ) ; \n\t} \n"}, {"code": "public void testHasAttributes1 $F72 throws Throwable { \n\tDocument doc ; \n\tNodeList addrList ; \n\tNode addrNode ; \n\tboolean state ; \n\t$F236 ( doc , load , builder ) $F237 ( addrList , doc ) $F238 ( addrNode , addrList ) state = addrNode . hasAttributes ( ) ; \n\tassertFalse ( NUM00 , state ) ; \n\t} \n"}, {"code": "public void startDocument ( XMLLocator locator , String encoding , NamespaceContext namespaceContext , Augmentations augs ) throws XNIException { \n\tfNamespaceContext = namespaceContext ; \n\ttry { \n\t\tif ( fDocumentHandler != null ) { \n\t\t\tif ( locator != null ) { \n\t\t\t\tfDocumentHandler . setDocumentLocator ( new LocatorProxy ( locator ) ) ; \n\t\t\t\t} \n\t\t\tfDocumentHandler . startDocument ( ) ; \n\t\t\t} \n\t\tif ( fContentHandler != null ) { \n\t\t\tif ( locator != null ) { \n\t\t\t\tfContentHandler . setDocumentLocator ( new LocatorProxy ( locator ) ) ; \n\t\t\t\t} \n\t\t\tfContentHandler . startDocument ( ) ; \n\t\t\t} \n\t\t} \n\t$F122277 ( e ) } \n"}, {"code": "$F1 public String dumpWindowHierarchy ( boolean compressed ) { \n\tdevice . setCompressedLayoutHeirarchy ( compressed ) ; \n\ttry { \n\t\t$F1538 ( os ) device . dumpWindowHierarchy ( os ) ; \n\t\t$F59 ( os ) $F1662 ( os ) } \n\t$F35546 ( e ) $F12241 ( e ) finally { \n\t\tdevice . setCompressedLayoutHeirarchy ( _BOOL ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public void registerObserver ( RuleChangesObserver observer ) $F207 ( observers , observer ) "}, {"code": "private void sendUpdateHeartbeats $F72 { \n\tHeartbeatServiceLocal heartbeat = _bartender . getHeartbeatLocal ( ) ; \n\tif ( heartbeat != null ) { \n\t\theartbeat . updateHeartbeats ( ) ; \n\t\t} \n\t} \n"}, {"code": "public void serialize ( String name , $F96 message , OutputStream out ) throws IOException { \n\t$F96 header = new byte [ NUM00 + COMMAND_LEN + NUM00 + NUM00 ] ; \n\tuint32ToByteArrayBE ( params . getPacketMagic ( ) , header , NUM00 ) ; \n\tfor ( int i = NUM00 ; \n\ti < name . length ( ) && i < COMMAND_LEN ; \n\ti ++ ) { \n\t\theader [ NUM00 + i ] = ( byte ) ( name . codePointAt ( i ) & NUM00 ) ; \n\t\t} \n\tUtils . uint32ToByteArrayLE ( message . length , header , NUM00 + COMMAND_LEN ) ; \n\t$F12490 ( hash , doubleDigest , message ) System . arraycopy ( hash , NUM00 , header , NUM00 + COMMAND_LEN + NUM00 , NUM00 ) ; \n\tout . write ( header ) ; \n\tout . write ( message ) ; \n\tif $F585 ( log ) log . debug ( NUM00 , name , bytesToHexString ( header ) + bytesToHexString ( message ) ) ; \n\t} \n"}, {"code": "public SSLEngine initSslEngine ( boolean client ) throws Exception { \n\tKeyStore keyStore = loadKeystore ( properties . sslKeyStorePath ( ) , properties . sslKeyStorePassword ( ) ) ; \n\t$F154263 ( keyManagerFactory , KeyManagerFactory ) keyManagerFactory . init ( keyStore , keyStoreKeyPass ( properties ) ) ; \n\tKeyStore trustStore ; \n\tif ( properties . sslTrustStorePath ( ) != null ) { \n\t\t$F980 ( LOGGER ) trustStore = loadKeystore ( properties . sslTrustStorePath ( ) , properties . sslTrustStorePassword ( ) ) ; \n\t\t} \n\telse { \n\t\ttrustStore = keyStore ; \n\t\t$F980 ( LOGGER ) } \n\t$F154263 ( trustManagerFactory , TrustManagerFactory ) trustManagerFactory . init ( trustStore ) ; \n\t$F217902 keyManagers = keyManagerFactory . getKeyManagers ( ) ; \n\t$F154264 trustManagers = trustManagerFactory . getTrustManagers ( ) ; \n\t$F5348 ( sslContext , SSLContext ) sslContext . init ( keyManagers , trustManagers , null ) ; \n\tSSLEngine sslEngine = sslContext . createSSLEngine ( ) ; \n\tsslEngine . setUseClientMode ( client ) ; \n\tsslEngine . setWantClientAuth ( _BOOL ) ; \n\tsslEngine . setEnabledProtocols ( sslEngine . getSupportedProtocols ( ) ) ; \n\tsslEngine . setEnabledCipherSuites ( sslEngine . getSupportedCipherSuites ( ) ) ; \n\tsslEngine . setEnableSessionCreation ( _BOOL ) ; \n\treturn sslEngine ; \n\t} \n"}, {"code": "public GetBufferedRandomAccessSource ( IRandomAccessSource source ) { \n\tthis . source = source ; \n\tthis . getBuffer = new byte [ ( int ) Math . min ( Math . max ( $F8196 ( source ) , NUM00 ) , NUM00 ) ] ; \n\tthis . getBufferStart = - NUM00 ; \n\tthis . getBufferEnd = - NUM00 ; \n\t} \n"}, {"code": "public ArgParser ( String pName ) { \n\tprogramName = pName ; \n\t$F20637 ( args ) args . add ( new HelpArg $F72 ) ; \n\t} \n"}, {"code": "public void testSetBitZero $F72 { \n\t$F45030 int aSign = NUM00 ; \n\tint number = NUM00 ; \n\t$F15143 $F3023 ( aNumber , aSign , aBytes ) $F43462 ( result , aNumber , number ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public static String convertBooleanArrToString ( Boolean [ ] noDictionaryDimsMapping ) { \n\t$F83 ( builder ) int index = NUM00 ; \n\tfor ( $F255681 ( index , noDictionaryDimsMapping ) ) { \n\t\t$F6939 ( builder , noDictionaryDimsMapping , index ) builder . append ( CarbonCommonConstants . COMA_SPC_CHARACTER ) ; \n\t\t} \n\tint lastIndex = builder . lastIndexOf ( CarbonCommonConstants . COMA_SPC_CHARACTER ) ; \n\tString str = - NUM00 != lastIndex ? builder . substring ( NUM00 , lastIndex ) : builder . toString ( ) ; \n\treturn str ; \n\t} \n"}, {"code": "$F1 protected void drawAxisLine ( Graphics2D g2 , double cursor , Rectangle2D dataArea , RectangleEdge edge ) { \n\tLine2D axisLine = null ; \n\tdouble c = cursor ; \n\tif ( edge == RectangleEdge . TOP ) { \n\t\taxisLine = new $F69931 ( dataArea . getX ( ) , c , dataArea . getMaxX ( ) , c ) ; \n\t\t} \n\telse if ( edge == RectangleEdge . BOTTOM ) { \n\t\taxisLine = new $F69931 ( dataArea . getX ( ) , c , dataArea . getMaxX ( ) , c ) ; \n\t\t} \n\telse if ( edge == RectangleEdge . LEFT ) { \n\t\taxisLine = new $F69931 ( c , dataArea . getY ( ) , c , dataArea . getMaxY ( ) ) ; \n\t\t} \n\telse if ( edge == RectangleEdge . RIGHT ) { \n\t\taxisLine = new $F69931 ( c , dataArea . getY ( ) , c , dataArea . getMaxY ( ) ) ; \n\t\t} \n\tg2 . setPaint ( getAxisLinePaint ( ) ) ; \n\tg2 . setStroke ( getAxisLineStroke ( ) ) ; \n\t$F75734 ( saved , g2 , RenderingHints ) $F75737 ( g2 , RenderingHints ) g2 . draw ( axisLine ) ; \n\t$F75739 ( g2 , RenderingHints , saved ) boolean drawUpOrRight = _BOOL ; \n\tboolean drawDownOrLeft = _BOOL ; \n\tif ( this . positiveArrowVisible ) { \n\t\tif ( this . inverted ) { \n\t\t\tdrawDownOrLeft = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\tdrawUpOrRight = _BOOL ; \n\t\t\t} \n\t\t} \n\tif ( this . negativeArrowVisible ) { \n\t\tif ( this . inverted ) { \n\t\t\tdrawUpOrRight = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\tdrawDownOrLeft = _BOOL ; \n\t\t\t} \n\t\t} \n\tif ( drawUpOrRight ) { \n\t\tdouble x = NUM00 ; \n\t\tdouble y = NUM00 ; \n\t\tShape arrow = null ; \n\t\tif ( edge == RectangleEdge . TOP || edge == RectangleEdge . BOTTOM ) { \n\t\t\t$F25146 ( x , dataArea ) y = cursor ; \n\t\t\tarrow = this . rightArrow ; \n\t\t\t} \n\t\telse if ( edge == RectangleEdge . LEFT || edge == RectangleEdge . RIGHT ) { \n\t\t\tx = cursor ; \n\t\t\ty = dataArea . getMinY ( ) ; \n\t\t\tarrow = this . upArrow ; \n\t\t\t} \n\t\t$F34721 ( transformer ) transformer . setToTranslation ( x , y ) ; \n\t\tShape shape = transformer . createTransformedShape ( arrow ) ; \n\t\tg2 . fill ( shape ) ; \n\t\tg2 . draw ( shape ) ; \n\t\t} \n\tif ( drawDownOrLeft ) { \n\t\tdouble x = NUM00 ; \n\t\tdouble y = NUM00 ; \n\t\tShape arrow = null ; \n\t\tif ( edge == RectangleEdge . TOP || edge == RectangleEdge . BOTTOM ) { \n\t\t\tx = dataArea . getMinX ( ) ; \n\t\t\ty = cursor ; \n\t\t\tarrow = this . leftArrow ; \n\t\t\t} \n\t\telse if ( edge == RectangleEdge . LEFT || edge == RectangleEdge . RIGHT ) { \n\t\t\tx = cursor ; \n\t\t\t$F25149 ( y , dataArea ) arrow = this . downArrow ; \n\t\t\t} \n\t\t$F34721 ( transformer ) transformer . setToTranslation ( x , y ) ; \n\t\tShape shape = transformer . createTransformedShape ( arrow ) ; \n\t\tg2 . fill ( shape ) ; \n\t\tg2 . draw ( shape ) ; \n\t\t} \n\t} \n"}, {"code": "public static void saveXStream ( File saveTo , Object model , Instances header ) throws Exception { \n\t$F168755 ( v ) v . add ( model ) ; \n\t$F1140 ( header , v ) $F51919 ( v ) XStream . write ( saveTo . getAbsolutePath ( ) , v ) ; \n\t} \n"}, {"code": "private void sortAndCollapse $F72 { \n\tCollections . sort ( mSpans ) ; \n\tmAddsSinceSort = NUM00 ; \n\t$F10531 ( iter , mSpans ) Span span = null ; \n\tif $F2921 ( iter ) { \n\t\tspan = ( Span ) iter . next ( ) ; \n\t\t} \n\twhile $F2921 ( iter ) { \n\t\tSpan nextSpan = ( Span ) iter . next ( ) ; \n\t\tif ( span . subsume ( nextSpan ) ) $F38599 ( iter ) else { \n\t\t\tspan = nextSpan ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public int splitRandomly ( ArrayModifiableDBIDs ind , int begin , int end , DoubleDataStore tpro , Random rand ) { \n\tfinal int nele = end - begin ; \n\t$F150948 ( it , ind ) double rs = tpro . doubleValue ( it . seek ( begin + rand . nextInt ( nele ) ) ) ; \n\tint minInd = begin , maxInd = end - NUM00 ; \n\twhile ( minInd < maxInd ) { \n\t\tdouble currEle = tpro . doubleValue ( it . seek ( minInd ) ) ; \n\t\tif ( currEle > rs ) { \n\t\t\twhile ( minInd < maxInd && tpro . doubleValue ( it . seek ( maxInd ) ) > rs ) { \n\t\t\t\tmaxInd -- ; \n\t\t\t\t} \n\t\t\t$F15290 ( minInd , maxInd ) ind . swap ( minInd , maxInd ) ; \n\t\t\tmaxInd -- ; \n\t\t\t} \n\t\tminInd ++ ; \n\t\t} \n\tif ( minInd == end - NUM00 ) { \n\t\t$F62498 ( minInd , begin , end ) } \n\treturn minInd ; \n\t} \n"}, {"code": "public static String noPrefix ( String path , String prefix ) { \n\t$F10578 ( Objects , path ) $F10578 ( Objects , prefix ) return path . startsWith ( prefix ) ? $F8182 ( path , prefix ) : path ; \n\t} \n"}, {"code": "protected void publish $F72 throws MqttException , IOException { \n\tsampleClientPub = new SampleAsyncCallback ( url , clientIdPub , cleanSession , quietMode , userName , password ) ; \n\tif ( sampleClientPub != null ) { \n\t\tString topic = NUM00 ; \n\t\tint qos = NUM00 ; \n\t\tString message = NUM00 ; \n\t\ttry { \n\t\t\tsampleClientPub . publish ( topic , qos , message . getBytes ( ) ) ; \n\t\t\t} \n\t\t$F86388 ( e ) } \n\t} \n"}, {"code": "public void remove ( IAdaptable a ) $F106 ( children , a ) "}, {"code": "public static IntStream concat ( IntStream a , IntStream b ) { \n\tObjects . requireNonNull ( a ) ; \n\tObjects . requireNonNull ( b ) ; \n\tSpliterator . OfInt split = new Streams . ConcatSpliterator . OfInt ( a . spliterator ( ) , b . spliterator ( ) ) ; \n\tIntStream stream = StreamSupport . intStream ( split , a . isParallel ( ) || b . isParallel ( ) ) ; \n\treturn stream . onClose ( Streams . composedClose ( a , b ) ) ; \n\t} \n"}, {"code": "public boolean equals ( String expected , String actual ) { \n\treturn framework . equals ( expected , actual ) ; \n\t} \n"}, {"code": "public LoginConfiguration forceAuth ( String forceAuthReqParam ) { \n\tforceAuth = Boolean . parseBoolean ( forceAuthReqParam ) ; \n\treturn this ; \n\t} \n"}, {"code": "public UserConfig fetch ( UserConfig config ) { \n\tconfig . addCredentials ( this ) ; \n\t$F77623 ( xml , POST , this , config ) Element root = parse ( xml ) ; \n\t$F1338 ( root ) try { \n\t\tUserConfig $F340894 ( user ) ; \n\t\tuser . parseXML ( root ) ; \n\t\treturn user ; \n\t\t} \n\t$F77633 ( this , SDKException , exception ) } \n"}, {"code": "@ MethodDesc ( description = NUM00 , usage = NUM00 ) public void stop $F72 throws Exception { \n\ttry { \n\t\thandleEventSynchronous ( new StopEvent $F72 ) ; \n\t\tif ( doneLatch != null ) $F94601 ( doneLatch ) } \n\tcatch ( Exception e ) { \n\t\t$F5197 ( logger , e ) throw new Exception $F3362 ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public void dispose $F72 throws IabAsyncInProgressException { \n\tsynchronized ( mAsyncInProgressLock ) { \n\t\tif ( mAsyncInProgress ) { \n\t\t\tthrow new IabAsyncInProgressException $F54019 ( mAsyncOperation ) ; \n\t\t\t} \n\t\t} \n\tlogDebug ( NUM00 ) ; \n\tmSetupDone = _BOOL ; \n\tif ( mServiceConn != null ) { \n\t\tlogDebug ( NUM00 ) ; \n\t\tif ( mContext != null ) mContext . unbindService ( mServiceConn ) ; \n\t\t} \n\tmDisposed = _BOOL ; \n\tmContext = null ; \n\tmServiceConn = null ; \n\tmService = null ; \n\tmPurchaseListener = null ; \n\t} \n"}, {"code": "$F1 public void pushMessageAsync ( Message msg ) throws org . apache . thrift . TException $F14411 ( pushMessageSync , msg ) "}, {"code": "public boolean writeCharacteristic ( String address , String serviceUUID , String characteristicUUID , $F96 value ) { \n\tBluetoothGatt bluetoothGatt = mBluetoothGattMap . get ( address ) ; \n\tif ( bluetoothGatt != null ) { \n\t\tBluetoothGattService service = bluetoothGatt . getService ( UUID . fromString ( serviceUUID ) ) ; \n\t\tBluetoothGattCharacteristic characteristic = service . getCharacteristic ( UUID . fromString ( characteristicUUID ) ) ; \n\t\tcharacteristic . setValue ( value ) ; \n\t\treturn bluetoothGatt . writeCharacteristic ( characteristic ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public String linkForMessage ( ProtoElement element ) { \n\tif ( isExternalFile ( element . getFile ( ) ) ) { \n\t\tString fullName = element . getFullName ( ) ; \n\t\treturn String . format ( NUM00 , fullName , fullName ) ; \n\t\t} \n\telse { \n\t\tString simpleName = element . getSimpleName ( ) ; \n\t\treturn String . format ( NUM00 , simpleName , simpleName ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F4203 $F5676 read ( InputStream fileStream , String charsetName , ITransformer $F94549 transformer ) throws FileNotFoundException { \n\tScanner scanner = new Scanner ( fileStream , charsetName ) ; \n\t$F5676 $F204 ( list ) ; \n\twhile $F41385 ( scanner ) { \n\t\tString line = scanner . nextLine ( ) ; \n\t\tlist . add ( transformer . transform ( line ) ) ; \n\t\t} \n\t$F59 ( scanner ) return list ; \n\t} \n"}, {"code": "public boolean remove ( JsonElement element ) $F20067 ( elements , element ) "}, {"code": "public TSink $F2147 sendBytes ( TStream $F2147 stream ) { \n\t$F10578 ( Objects , stream ) return sendBinary ( stream , null ) ; \n\t} \n"}, {"code": "private void sortBrokerItems ( BrokerItem [ ] brokerItems , int sortType ) { \n\tArrays . sort ( brokerItems , BrokerItem . getComparatoryByType ( sortType ) ) ; \n\t} \n"}, {"code": "protected boolean needToEscapeXMLSpecialCharacters $F1947 ( hostEntityID , remoteEntityID , realm ) { \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void updatePathConstraints ( TestChromosome test ) { \n\tList < BranchCondition > pathCondition = ConcolicExecution . getSymbolicPath ( test ) ; \n\tpathConditions . put ( test , pathCondition ) ; \n\t} \n"}, {"code": "public void test_journal_oneIndexNoData $F72 throws IOException , InterruptedException , ExecutionException { \n\tfinal File out = File . createTempFile ( getName ( ) , Options . JNL ) ; \n\ttry { \n\t\tfinal Journal src = getStore ( getProperties ( ) ) ; \n\t\ttry { \n\t\t\tfinal String NAME = NUM00 ; \n\t\t\tsrc . registerIndex ( new IndexMetadata ( NAME , UUID . randomUUID ( ) ) ) ; \n\t\t\t$F17621 ( src ) final Future < Journal > f = src . compact ( out ) ; \n\t\t\tfinal Journal newJournal = f . get ( ) ; \n\t\t\ttry { \n\t\t\t\tassertNotNull ( newJournal . getIndex ( NAME ) ) ; \n\t\t\t\tAbstractBTreeTestCase . assertSameBTree ( src . getIndex ( NAME ) , newJournal . getIndex ( NAME ) ) ; \n\t\t\t\t} \n\t\t\t$F17625 ( newJournal ) } \n\t\t$F17625 ( src ) } \n\t$F105993 ( out ) } \n"}, {"code": "public static boolean p2pLoader ( ClassLoader ldr ) { \n\treturn ldr instanceof GridDeploymentInfo ; \n\t} \n"}, {"code": "private static String removeSubTrailers ( String decodedSubject ) { \n\tint subStringStart = NUM00 ; \n\t$F1749 ( subStringEnd , decodedSubject ) $F1749 ( originalSize , decodedSubject ) int curPos = originalSize - NUM00 ; \n\twhile ( _BOOL ) { \n\t\tchar c = decodedSubject . charAt ( curPos -- ) ; \n\t\tif ( c == WS ) { \n\t\t\tsubStringEnd -- ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( subStringEnd > FWD_PARENS . length ( ) && decodedSubject . endsWith ( FWD_PARENS ) ) { \n\t\t\t\tsubStringEnd -= FWD_PARENS . length ( ) ; \n\t\t\t\t} \n\t\t\t$F597 } \n\t\t} \n\tdecodedSubject = decodedSubject . substring ( subStringStart , subStringEnd ) ; \n\treturn decodedSubject ; \n\t} \n"}, {"code": "$F13429 ( criteria , createCriteriaInternal , oredCriteria ) "}, {"code": "boolean nextSource $F72 throws IOException { \n\tif $F2921 ( mSourceIt ) { \n\t\tfinal InputStream is = mSourceIt . next ( ) ; \n\t\tif ( is == null ) { \n\t\t\tmSource = null ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\tmSource = new BufferedInputStream ( is , FileUtils . BUFFERED_STREAM_SIZE ) ; \n\t\t\t} \n\t\tmSourceClosed = _BOOL ; \n\t\tmInputBufferPosition = NUM00 ; \n\t\tmInputBufferLength = NUM00 ; \n\t\tmBufferLength = NUM00 ; \n\t\tmBufferPosition = NUM00 ; \n\t\treturn _BOOL ; \n\t\t} \n\t$F2727 ( mSource ) mSource = null ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static $F96 bitmapToBytes ( Bitmap bm ) { \n\t$F5475 ( bytes ) if ( bm != null ) { \n\t\t$F1538 ( baos ) $F125872 ( bm , Bitmap , baos ) $F3031 ( bytes , baos ) } \n\treturn bytes ; \n\t} \n"}, {"code": "public static String inflate ( String name ) $F8587 ( inflate , name , gPrefix ) "}, {"code": "public void addPriorityHandler ( WarningHandler handler ) $F207 ( _priorityHandlers , handler ) "}, {"code": "private synchronized void readObject $F154558 ( s ) throws $F6427 { \n\t$F6428 ( s ) init ( getMask ( actions ) ) ; \n\t} \n"}, {"code": "public void printLenString ( String v ) throws IOException { \n\tif ( v == null ) { \n\t\t$F25097 ( os ) $F25097 ( os ) } \n\telse { \n\t\t$F1749 ( len , v ) $F34529 ( os , len ) os . write ( len ) ; \n\t\tprintString ( v , NUM00 , len ) ; \n\t\t} \n\t} \n"}, {"code": "$F41720 ( value , absMin , absMax , absValue , Math ) "}, {"code": "private void writeAttr ( String name , String val ) throws IOException { \n\twriteAttr ( name , val , _BOOL ) ; \n\t} \n"}, {"code": "final private String syntaxDef2SyntaxDesc ( Attributes attrs ) throws NamingException { \n\t$F8755 ( syntaxDesc ) Attribute attr = null ; \n\tint count = NUM00 ; \n\tattr = attrs . get ( NUMERICOID_ID ) ; \n\tif ( attr != null ) { \n\t\t$F6407 ( syntaxDesc , writeNumericOID , attr ) count ++ ; \n\t\t} \n\telse { \n\t\tthrow new ConfigurationException $F3487 ; \n\t\t} \n\tattr = attrs . get ( DESC_ID ) ; \n\t$F223946 ( attr , syntaxDesc , writeQDString , count ) if $F1765 ( count , attrs ) { \n\t\tString attrId = null ; \n\t\tfor ( NamingEnumeration < $F187854 > ae = attrs . getAll ( ) ; \n\t\tae . hasMoreElements ( ) ; \n\t\t) { \n\t\t\t$F45366 ( attr , ae ) attrId = attr . getID ( ) ; \n\t\t\tif $F22081 ( attrId , NUMERICOID_ID , DESC_ID ) $F1448 else $F9821 ( syntaxDesc , writeQDStrings , attr ) } \n\t\t} \n\t$F84 ( syntaxDesc ) $F92 ( syntaxDesc ) } \n"}, {"code": "$F1 public void write ( Buffer buffer , boolean isEnd ) throws IOException { \n\tif ( _s == null ) { \n\t\tbuffer . free ( ) ; \n\t\t$F665 } \n\ttry { \n\t\t_needsFlush = _BOOL ; \n\t\tif $F45851 ( buffer ) { \n\t\t\t$F90433 ( _totalWriteBytes , buffer ) _s . write ( buffer . direct ( ) ) ; \n\t\t\t$F665 } \n\t\t$F90433 ( _totalWriteBytes , buffer ) while $F4012 ( buffer ) { \n\t\t\t$F725 ( _writeBuffer ) buffer . read ( _writeBuffer ) ; \n\t\t\t$F14257 ( _writeBuffer ) _s . write ( _writeBuffer ) ; \n\t\t\t} \n\t\t} \n\tcatch ( IOException e ) { \n\t\tIOException exn = ClientDisconnectException . create ( this + NUM00 + e , e ) ; \n\t\ttry $F5795 ( close ) catch ( IOException e1 ) $F845 throw exn ; \n\t\t} \n\tfinally { \n\t\tbuffer . free ( ) ; \n\t\t} \n\t} \n"}, {"code": "private static void skipMemberValue ( int tag , ByteBuffer buf ) { \n\tswitch ( tag ) { \n\t\t$F1262 buf . getInt ( ) ; \n\t\t$F597 $F1262 skipAnnotation ( buf , _BOOL ) ; \n\t\t$F597 $F117753 ( skipArray , buf ) $F1267 buf . getShort ( ) ; \n\t\t} \n\t} \n"}, {"code": "protected void recursiveNestedJoin ( EventBean lookupEvent , int nestingOrderIndex , $F80820 currentPath , Collection $F324611 result , ExprEvaluatorContext exprEvaluatorContext ) { \n\tList $F324611 nestedResult = new LinkedList $F324611 $F72 ; \n\tExecNode nestedExecNode = childNodes . get ( nestingOrderIndex ) ; \n\tnestedExecNode . process ( lookupEvent , currentPath , nestedResult , exprEvaluatorContext ) ; \n\tboolean isLastStream = ( nestingOrderIndex == nestingOrderLength - NUM00 ) ; \n\tif ( ! isLastStream ) { \n\t\tfor ( $F80820 row : nestedResult ) { \n\t\t\tEventBean lookup = row [ nestedStreams [ nestingOrderIndex ] ] ; \n\t\t\trecursiveNestedJoin ( lookup , nestingOrderIndex + NUM00 , row , result , exprEvaluatorContext ) ; \n\t\t\t} \n\t\t$F665 } \n\tfor ( $F80820 row : nestedResult ) $F207 ( result , row ) } \n"}, {"code": "public String generateMinimalMATSimConfig $F72 { \n\tConfig config = new Config $F72 ; \n\tConfigGroup ippcm = config . createModule ( MatrixBasedPtRouterConfigGroup . GROUP_NAME ) ; \n\tippcm . addParam ( MatrixBasedPtRouterConfigGroup . PT_STOPS , this . ptStops ) ; \n\tippcm . addParam ( MatrixBasedPtRouterConfigGroup . USING_PT_STOPS , NUM00 ) ; \n\tippcm . addParam ( MatrixBasedPtRouterConfigGroup . PT_TRAVEL_TIMES_AND_DISTANCES_SWITCH , this . useTravelTimesAndDistances ) ; \n\tChangeModeConfigGroup changeModeConfig = ConfigUtils . addOrGetModule ( config , ChangeModeConfigGroup . CONFIG_MODULE , ChangeModeConfigGroup . class ) ; \n\t$F64831 ( str ) changeModeConfig . setModes ( str ) ; \n\treturn writeConfigFile ( config ) ; \n\t} \n"}, {"code": "public RecordedRequest takeRequest $F72 throws InterruptedException { \n\treturn requestQueue . take ( ) ; \n\t} \n"}, {"code": "private int convertLocationToColumn ( int x , int y ) { \n\tif ( cellWidth > NUM00 ) { \n\t\tif ( layoutOrientation == JList . VERTICAL ) $F1083 $F3970 ( insets , list ) int col ; \n\t\tif ( isLeftToRight ) { \n\t\t\t$F276994 ( col , x , insets , cellWidth ) } \n\t\telse { \n\t\t\tcol = ( list . getWidth ( ) - x - insets . right - NUM00 ) / cellWidth ; \n\t\t\t} \n\t\tif ( col < NUM00 ) $F1083 else if ( col >= columnCount ) $F143681 ( columnCount ) return col ; \n\t\t} \n\t$F1082 } \n"}, {"code": "public static $F11300 findFilesInDir ( File directory , FilenameFilter filter ) { \n\tVector $F11299 files = new Vector $F11299 $F72 ; \n\t$F5459 ( entries , directory ) for ( File entry : entries ) { \n\t\tif ( filter == null || filter . accept ( directory , entry . getName ( ) ) ) $F207 ( files , entry ) if $F3444 ( entry ) $F78674 ( files , findFilesInDir , entry , filter ) } \n\treturn files ; \n\t} \n"}, {"code": "public String generateDrop ( String table ) { \n\t$F280 ( result ) $F84 ( result ) result . append ( table ) ; \n\t$F84 ( result ) $F92 ( result ) } \n"}, {"code": "private void registerChildListeners $F72 { \n\tIterator $F39994 iter = fChildListeners . iterator ( ) ; \n\twhile $F2921 ( iter ) { \n\t\tPropertyChangeListener listener = iter . next ( ) ; \n\t\tlistener . register ( ) ; \n\t\t} \n\t} \n"}, {"code": "boolean isScrollOutOfBounds $F72 { \n\treturn Float . compare ( getScrollAmountOutOfBounds ( mStackScrollP ) , NUM00 ) != NUM00 ; \n\t} \n"}, {"code": "private void refreshIndexForDimensionFields ( String rowId , DimensionRow dimensionRow , DimensionRow dimensionRowOld ) { \n\ttry { \n\t\tfor ( DimensionField field : dimension . getDimensionFields ( ) ) { \n\t\t\tif ( field == dimension . getKey ( ) ) $F1448 if ( dimensionRowOld != null ) { \n\t\t\t\t$F1729 ( oldRowValue , dimensionRowOld , field ) String oldRowValueKey = DimensionStoreKeyUtils . getRowKey ( field . getName ( ) , oldRowValue ) ; \n\t\t\t\t$F1729 ( oldRowValuesKeysJson , keyValueStore , oldRowValueKey ) $F806 oldRowValueSKeys = objectMapper . readValue ( oldRowValuesKeysJson , $F18548 ) ; \n\t\t\t\t$F2689 oldRowValuesKeySet = new $F22301 $F6 ( Arrays , oldRowValueSKeys ) ; \n\t\t\t\toldRowValuesKeySet . remove ( rowId ) ; \n\t\t\t\tif $F2979 ( oldRowValuesKeySet ) $F106 ( keyValueStore , oldRowValueKey ) else { \n\t\t\t\t\tString updatedOldRowValueSKeys = objectMapper . writeValueAsString ( oldRowValuesKeySet ) ; \n\t\t\t\t\tkeyValueStore . put ( oldRowValueKey , updatedOldRowValueSKeys ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t$F1729 ( rowValue , dimensionRow , field ) String rowValueKey = DimensionStoreKeyUtils . getRowKey ( field . getName ( ) , rowValue ) ; \n\t\t\t$F1729 ( rowValueSKeys , keyValueStore , rowValueKey ) $F116112 ( rowValueSKeySet ) if ( rowValueSKeys != null ) { \n\t\t\t\trowValueSKeySet . addAll ( Arrays . asList ( objectMapper . readValue ( rowValueSKeys , $F18548 ) ) ) ; \n\t\t\t\t} \n\t\t\trowValueSKeySet . add ( rowId ) ; \n\t\t\tString updatedRowValueSKeys = objectMapper . writeValueAsString ( rowValueSKeySet ) ; \n\t\t\tkeyValueStore . put ( rowValueKey , updatedRowValueSKeys ) ; \n\t\t\t} \n\t\t} \n\tcatch ( IOException e ) $F202031 ( LOG , e ) } \n"}, {"code": "public List $F12038 reduceInstructions ( final List $F12038 instructions ) { \n\t$F790 ( lock ) try { \n\t\tthis . instructions = instructions ; \n\t\tstackSizeSimulator . buildStackSizes ( instructions ) ; \n\t\treturn reduceInstructionsInternal ( instructions ) ; \n\t\t} \n\t$F796 ( lock ) } \n"}, {"code": "protected boolean isLockedLocally ( UUID newOwnerID ) { \n\treturn $F19068 ( thisNode , getOwnerNode ) || thisNode . equals ( newOwnerID ) ; \n\t} \n"}, {"code": "private boolean tryToMove ( float deltaY ) { \n\tif ( ( deltaY > NUM00 && mCurrentPos == NUM00 ) ) { \n\t\tif ( DEBUG ) { \n\t\t\tLog . d ( LOG_TAG , String . format ( NUM00 ) ) ; \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\tif ( ( deltaY < NUM00 && mCurrentPos == - mHeaderHeight ) ) { \n\t\tif ( DEBUG ) { \n\t\t\tLog . d ( LOG_TAG , String . format ( NUM00 ) ) ; \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\tint to = mCurrentPos + ( int ) deltaY ; \n\tif ( to < - mHeaderHeight ) { \n\t\tif ( DEBUG ) { \n\t\t\tLog . d ( LOG_TAG , String . format ( NUM00 ) ) ; \n\t\t\t} \n\t\tto = - mHeaderHeight ; \n\t\t} \n\tif ( to > NUM00 ) { \n\t\tif ( DEBUG ) { \n\t\t\tLog . d ( LOG_TAG , String . format ( NUM00 ) ) ; \n\t\t\t} \n\t\tto = NUM00 ; \n\t\t} \n\treturn moveTo ( to ) ; \n\t} \n"}, {"code": "public void testCompareNegNeg2 $F72 { \n\t$F7829 $F79258 int aSign = - NUM00 ; \n\tint bSign = - NUM00 ; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F79260 ( assertEquals , aNumber , bNumber ) } \n"}, {"code": "public void deletePoint ( int position ) { \n\tint renderType = poly . getRenderType ( ) ; \n\tProjection proj = getProjection ( ) ; \n\tboolean needToHookUp = _BOOL ; \n\tif ( position <= NUM00 && isEnclosed ( ) ) { \n\t\tenclose ( _BOOL ) ; \n\t\tneedToHookUp = _BOOL ; \n\t\t} \n\tif ( renderType == OMGraphic . RENDERTYPE_LATLON ) { \n\t\t$F36253 ( Debug ) if ( proj != null ) { \n\t\t\t$F1986 ll = poly . getLatLonArray ( ) ; \n\t\t\t$F284341 ( newll , ll ) int actualPosition = ( position == Integer . MAX_VALUE ? ll . length : position * NUM00 ) ; \n\t\t\tif ( actualPosition >= ll . length ) { \n\t\t\t\t$F12508 ( System , ll , newll ) position = $F33765 ( ll ) / NUM00 ; \n\t\t\t\t} \n\t\t\telse if ( actualPosition <= NUM00 ) { \n\t\t\t\t$F12508 ( System , ll , newll ) position = NUM00 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F135 ( System , ll , newll , actualPosition ) $F86533 ( System , ll , actualPosition , newll ) } \n\t\t\tpoly . setLocation ( newll , poly . getUnits ( ) ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\t$F36253 ( Debug ) int currentLength = poly . xs . length ; \n\t\t$F2027 newxs = new int [ currentLength - NUM00 ] ; \n\t\t$F2027 newys = new int [ currentLength - NUM00 ] ; \n\t\tif ( position >= currentLength ) { \n\t\t\tSystem . arraycopy ( poly . xs , NUM00 , newxs , NUM00 , currentLength - NUM00 ) ; \n\t\t\tSystem . arraycopy ( poly . ys , NUM00 , newys , NUM00 , currentLength - NUM00 ) ; \n\t\t\tposition = currentLength - NUM00 ; \n\t\t\t} \n\t\telse if ( position <= NUM00 ) { \n\t\t\tSystem . arraycopy ( poly . xs , NUM00 , newxs , NUM00 , currentLength - NUM00 ) ; \n\t\t\tSystem . arraycopy ( poly . ys , NUM00 , newys , NUM00 , currentLength - NUM00 ) ; \n\t\t\tposition = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\t$F192677 ( System , poly , newxs , position ) System . arraycopy ( poly . xs , position + NUM00 , newxs , position , currentLength - position - NUM00 ) ; \n\t\t\t$F192679 ( System , poly , newys , position ) System . arraycopy ( poly . ys , position + NUM00 , newys , position , currentLength - position - NUM00 ) ; \n\t\t\t} \n\t\tif ( poly . getRenderType ( ) == OMGraphic . RENDERTYPE_OFFSET ) { \n\t\t\tpoly . setLocation ( poly . lat , poly . lon , poly . getUnits ( ) , newxs , newys ) ; \n\t\t\t} \n\t\telse { \n\t\t\tpoly . setLocation ( newxs , newys ) ; \n\t\t\t} \n\t\t} \n\tif ( proj != null ) { \n\t\tpoly . regenerate ( proj ) ; \n\t\t} \n\tGrabPoint gp = ( GrabPoint ) polyGrabPoints . remove ( position ) ; \n\tif ( gpo != null && gp != null ) { \n\t\tgpo . removeGrabPoint ( gp ) ; \n\t\t} \n\t$F72524 ( needToHookUp , enclose , _BOOL ) } \n"}, {"code": "$F1 public boolean deleteLeftWord $F72 { \n\tmInputConnection . beginBatchEdit ( ) ; \n\tif ( mInputConnection . getSelectedText ( NUM00 ) != null ) { \n\t\tmInputConnection . commitText ( NUM00 , NUM00 ) ; \n\t\t} \n\telse { \n\t\tCharSequence beforeCursor = mInputConnection . getTextBeforeCursor ( MAX_DELETABLE_CONTEXT , NUM00 ) ; \n\t\tif ( beforeCursor != null ) { \n\t\t\t$F1749 ( beforeCursorLength , beforeCursor ) $F1150 ( m , WHITESPACE_AND_TOKEN , beforeCursor ) int lastIndex = NUM00 ; \n\t\t\twhile $F281 ( m ) { \n\t\t\t\tlastIndex = beforeCursorLength == m . end ( ) ? m . start ( ) : m . end ( ) ; \n\t\t\t\t} \n\t\t\tif ( lastIndex > NUM00 ) { \n\t\t\t\tmInputConnection . deleteSurroundingText ( beforeCursorLength - lastIndex , NUM00 ) ; \n\t\t\t\t} \n\t\t\telse if ( beforeCursorLength < MAX_DELETABLE_CONTEXT ) { \n\t\t\t\tmInputConnection . deleteSurroundingText ( beforeCursorLength , NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tmInputConnection . endBatchEdit ( ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static double cdf ( double val , double rate ) { \n\t$F96078 ( val ) return $F3155 ( Math , rate , val ) ; \n\t} \n"}, {"code": "public static DataSet readContinuous ( File file , char delimiter ) throws IOException { \n\treturn readInContinuousData ( file , delimiter , Collections . singleton ( NUM00 ) ) ; \n\t} \n"}, {"code": "public static String generateNativeGuidForStoragePortFromIndication ( String sourceInstanceSystemName , String portNetworkId ) { \n\t$F806 splitedString = sourceInstanceSystemName . split ( Constants . PATH_DELIMITER_REGEX ) ; \n\treturn String . format ( NUM00 , splitedString [ NUM00 ] , splitedString [ NUM00 ] , portNetworkId ) ; \n\t} \n"}, {"code": "protected boolean arePathsContiguous ( $F131691 paths ) { \n\tif ( rowMapper == null || paths . length < NUM00 ) return _BOOL ; \n\telse { \n\t\tBitSet bitSet = new BitSet $F989 ; \n\t\tint anIndex , counter , min ; \n\t\tint pathCount = paths . length ; \n\t\tint validCount = NUM00 ; \n\t\t$F131691 tempPath = new TreePath $F380 ; \n\t\t$F603 ( tempPath , paths ) min = rowMapper . getRowsForPaths ( tempPath ) [ NUM00 ] ; \n\t\tfor ( counter = NUM00 ; \n\t\tcounter < pathCount ; \n\t\tcounter ++ ) { \n\t\t\tif ( paths [ counter ] != null ) { \n\t\t\t\ttempPath [ NUM00 ] = paths [ counter ] ; \n\t\t\t\t$F2027 rows = rowMapper . getRowsForPaths ( tempPath ) ; \n\t\t\t\t$F1933 ( rows , _BOOL ) anIndex = rows [ NUM00 ] ; \n\t\t\t\tif ( anIndex == - NUM00 || anIndex < ( min - pathCount ) || anIndex > ( min + pathCount ) ) return _BOOL ; \n\t\t\t\t$F7547 ( anIndex , min ) if $F87318 ( bitSet , anIndex ) { \n\t\t\t\t\tbitSet . set ( anIndex ) ; \n\t\t\t\t\tvalidCount ++ ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tint maxCounter = validCount + min ; \n\t\tfor ( counter = min ; \n\t\tcounter < maxCounter ; \n\t\tcounter ++ ) if $F87318 ( bitSet , counter ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public FastStringReader ( String s ) { \n\tthis . str = s ; \n\tthis . length = s . length ( ) ; \n\t} \n"}, {"code": "private static int arrayIndex ( int i ) { \n\treturn ( i > > SHIFT_PER_WORD ) ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "static void updateStyle ( JTextComponent c , SeaGlassContext context , String prefix ) { \n\tSeaGlassStyle style = ( SeaGlassStyle ) context . getStyle ( ) ; \n\tColor color = c . getCaretColor ( ) ; \n\tif ( color == null || color instanceof UIResource ) { \n\t\tc . setCaretColor ( ( Color ) style . get ( context , prefix + NUM00 ) ) ; \n\t\t} \n\tColor fg = c . getForeground ( ) ; \n\tif ( fg == null || fg instanceof UIResource ) { \n\t\tfg = style . getColorForState ( context , ColorType . TEXT_FOREGROUND ) ; \n\t\tif ( fg != null ) { \n\t\t\tc . setForeground ( fg ) ; \n\t\t\t} \n\t\t} \n\tObject ar = style . get ( context , prefix + NUM00 ) ; \n\tif ( ar instanceof Number ) { \n\t\tc . putClientProperty ( NUM00 , ar ) ; \n\t\t} \n\tcontext . setComponentState ( SELECTED | FOCUSED ) ; \n\tColor s = c . getSelectionColor ( ) ; \n\tif ( s == null || s instanceof UIResource ) { \n\t\tc . setSelectionColor ( style . getColor ( context , ColorType . TEXT_BACKGROUND ) ) ; \n\t\t} \n\tColor sfg = c . getSelectedTextColor ( ) ; \n\tif ( sfg == null || sfg instanceof UIResource ) { \n\t\tc . setSelectedTextColor ( style . getColor ( context , ColorType . TEXT_FOREGROUND ) ) ; \n\t\t} \n\tcontext . setComponentState ( DISABLED ) ; \n\tColor dfg = c . getDisabledTextColor ( ) ; \n\tif ( dfg == null || dfg instanceof UIResource ) { \n\t\tc . setDisabledTextColor ( style . getColor ( context , ColorType . TEXT_FOREGROUND ) ) ; \n\t\t} \n\tInsets margin = c . getMargin ( ) ; \n\tif ( margin == null || margin instanceof UIResource ) { \n\t\tmargin = ( Insets ) style . get ( context , prefix + NUM00 ) ; \n\t\tif ( margin == null ) { \n\t\t\tmargin = SeaGlassLookAndFeel . EMPTY_UIRESOURCE_INSETS ; \n\t\t\t} \n\t\tc . setMargin ( margin ) ; \n\t\t} \n\t$F185684 ( caret , c ) if ( caret instanceof UIResource ) { \n\t\tObject o = style . get ( context , prefix + NUM00 ) ; \n\t\tif ( o != null && o instanceof Integer ) { \n\t\t\t$F179073 ( rate , o ) caret . setBlinkRate ( rate . intValue ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F20664 $F1 protected void onMeasure ( int widthMeasureSpec , int heightMeasureSpec ) { \n\t$F20444 ( widthMode , MeasureSpec , widthMeasureSpec ) $F20444 ( heightMode , MeasureSpec , heightMeasureSpec ) $F23132 ( maxWidth , MeasureSpec , widthMeasureSpec ) $F23132 ( maxHeight , MeasureSpec , heightMeasureSpec ) if ( widthMode == MeasureSpec . UNSPECIFIED ) maxWidth = Integer . MAX_VALUE ; \n\tif ( heightMode == MeasureSpec . UNSPECIFIED ) maxHeight = Integer . MAX_VALUE ; \n\tint paddingLeft = getPaddingLeft ( ) ; \n\tint paddingTop = getPaddingTop ( ) ; \n\tint paddingRight = getPaddingRight ( ) ; \n\tint paddingBottom = getPaddingBottom ( ) ; \n\tint maxRightBound = maxWidth - paddingRight ; \n\tint maxBottomBound = maxHeight - paddingBottom ; \n\tint left ; \n\tint top ; \n\tint right ; \n\tint bottom ; \n\tint rightBound = paddingLeft ; \n\tint maxRightNoPadding = rightBound ; \n\tint bottomBound ; \n\tint lastMaxBottom = paddingTop ; \n\tint maxBottom = lastMaxBottom ; \n\tint childWidth ; \n\tint childHeight ; \n\tint lineStartIndex = NUM00 ; \n\tint lineEndIndex = NUM00 ; \n\t$F725 ( rectList ) int childCount = getChildCount ( ) ; \n\tfor ( $F119 ( index , childCount ) ) { \n\t\tfinal View child = getChildAt ( index ) ; \n\t\tchild . measure ( MeasureSpec . UNSPECIFIED , MeasureSpec . UNSPECIFIED ) ; \n\t\tif ( child . getVisibility ( ) == View . GONE ) $F598 final AutoWrapLayout . LayoutParams lp = ( AutoWrapLayout . LayoutParams ) child . getLayoutParams ( ) ; \n\t\tchildWidth = child . getMeasuredWidth ( ) ; \n\t\tchildHeight = child . getMeasuredHeight ( ) ; \n\t\tleft = rightBound + lp . leftMargin ; \n\t\tright = left + childWidth ; \n\t\trightBound = right + lp . rightMargin ; \n\t\tif ( rightBound > maxRightBound ) { \n\t\t\tlineEndIndex = index ; \n\t\t\tadjustBaseLine ( maxBottom - lastMaxBottom , lineStartIndex , lineEndIndex ) ; \n\t\t\t$F612 ( maxBottom , maxBottomBound ) if ( lineEndIndex == lineStartIndex ) { \n\t\t\t\tchild . measure ( MeasureSpec . makeMeasureSpec ( maxWidth - paddingLeft - paddingRight - lp . leftMargin - lp . rightMargin , MeasureSpec . AT_MOST ) , MeasureSpec . UNSPECIFIED ) ; \n\t\t\t\tchildWidth = child . getMeasuredWidth ( ) ; \n\t\t\t\tchildHeight = child . getMeasuredHeight ( ) ; \n\t\t\t\t} \n\t\t\tleft = paddingLeft + lp . leftMargin ; \n\t\t\tright = left + childWidth ; \n\t\t\trightBound = right + lp . rightMargin ; \n\t\t\tlastMaxBottom = maxBottom ; \n\t\t\ttop = lastMaxBottom + lp . topMargin ; \n\t\t\tbottom = top + childHeight ; \n\t\t\tbottomBound = bottom + lp . bottomMargin ; \n\t\t\tlineStartIndex = index ; \n\t\t\t} \n\t\telse { \n\t\t\ttop = lastMaxBottom + lp . topMargin ; \n\t\t\tbottom = top + childHeight ; \n\t\t\tbottomBound = bottom + lp . bottomMargin ; \n\t\t\t} \n\t\t$F15468 ( rightBound , maxRightNoPadding ) $F15468 ( bottomBound , maxBottom ) $F28883 ( rect ) rect . left = left ; \n\t\trect . top = top ; \n\t\trect . right = right ; \n\t\trect . bottom = bottom ; \n\t\trectList . add ( rect ) ; \n\t\t} \n\tadjustBaseLine ( maxBottom - lastMaxBottom , lineStartIndex , rectList . size ( ) ) ; \n\tint measuredWidth ; \n\tint measuredHeight ; \n\tif ( widthMode == MeasureSpec . EXACTLY ) measuredWidth = maxWidth ; \n\telse measuredWidth = maxRightNoPadding + paddingRight ; \n\tif ( heightMode == MeasureSpec . EXACTLY ) measuredHeight = maxHeight ; \n\telse { \n\t\tmeasuredHeight = maxBottom + paddingBottom ; \n\t\tif ( heightMode == MeasureSpec . AT_MOST ) measuredHeight = measuredHeight > maxHeight ? maxHeight : measuredHeight ; \n\t\t} \n\tsetMeasuredDimension ( measuredWidth , measuredHeight ) ; \n\t} \n"}, {"code": "public final void wait $F72 throws $F87326 $F73598 ( wait ) "}, {"code": "public QueryStringQueryBuilder field ( String field , float boost ) { \n\t$F9406 ( fields ) fields . add ( field ) ; \n\tif ( fieldsBoosts == null ) { \n\t\tfieldsBoosts = new ObjectFloatHashMap $F200 $F72 ; \n\t\t} \n\tfieldsBoosts . put ( field , boost ) ; \n\treturn this ; \n\t} \n"}, {"code": "public static String nowDateString ( String format ) { \n\t$F13438 ( df , format ) return $F52170 ( df ) ; \n\t} \n"}, {"code": "protected void initStreamBufferSize $F72 { \n\tString streamBufferSizeParam = getInitParameter ( NUM00 ) ; \n\tsetStreamBufferSize ( ( streamBufferSizeParam == null ) ? DEFAULT_STREAM_BUFFER_SIZE : Integer . parseInt ( streamBufferSizeParam ) ) ; \n\tif ( isDebug ( ) ) { \n\t\tlog ( NUM00 + getStreamBufferSize ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void registerSensor ( Sensor s , int i ) { \n\tif ( ( i < NUM00 ) || ( i > ( ( numInputCards ( ) * bitsPerCard ) - NUM00 ) ) || ( i > MAXSENSORS ) ) { \n\t\tlog . error ( NUM00 + Integer . toString ( i + NUM00 ) ) ; \n\t\t$F665 } \n\thasActiveSensors = _BOOL ; \n\tif ( sensorArray [ i ] == null ) { \n\t\tsensorArray [ i ] = s ; \n\t\t$F8790 ( lastUsedSensor , i ) } \n\telse { \n\t\tlog . warn ( NUM00 + Integer . toString ( ( getNodeAddress ( ) * SerialSensorManager . SENSORSPERUA ) + i + NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static Number asNumber ( String value , Supplier $F7482 defaultValueProvider ) { \n\tif ( value != null ) { \n\t\ttry $F62107 ( Short , value ) catch ( NumberFormatException e1 ) { \n\t\t\ttry $F62107 ( Integer , value ) catch ( NumberFormatException e2 ) { \n\t\t\t\ttry $F62107 ( Long , value ) catch ( NumberFormatException e3 ) { \n\t\t\t\t\ttry $F62107 ( Float , value ) catch ( NumberFormatException e4 ) { \n\t\t\t\t\t\ttry $F62107 ( Double , value ) catch ( NumberFormatException e5 ) { \n\t\t\t\t\t\t\ttry { \n\t\t\t\t\t\t\t\treturn new BigInteger ( value ) ; \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\tcatch ( NumberFormatException e6 ) { \n\t\t\t\t\t\t\t\ttry { \n\t\t\t\t\t\t\t\t\treturn new BigDecimal ( value ) ; \n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\tcatch ( NumberFormatException e7 ) $F845 } \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn defaultValueProvider != null ? defaultValueProvider . get ( ) : null ; \n\t} \n"}, {"code": "public final void sample $F72 { \n\tlong sum = _sum . getAndSet ( NUM00 ) ; \n\tint count = _count . getAndSet ( NUM00 ) ; \n\tif ( count != NUM00 ) _value = sum / ( double ) count ; \n\telse _value = NUM00 ; \n\t} \n"}, {"code": "private String applyReplacement ( final BidiMap replacement , String contents ) { \n\tfor ( $F85 ( key , replacement ) ) { \n\t\t$F71197 ( attributeName , key ) $F123 ( attributeInitials , replacement , key ) contents = contents . replaceAll ( JSONSerialisation . jsonAttributeName ( attributeName ) , JSONSerialisation . jsonAttributeName ( attributeInitials ) ) ; \n\t\t} \n\treturn contents ; \n\t} \n"}, {"code": "public KeyImpl ( KerberosPrincipal principal , $F1469 password , String algorithm ) { \n\ttry { \n\t\tPrincipalName princ = new PrincipalName $F27949 ( principal ) ; \n\t\tEncryptionKey key = new EncryptionKey ( password , princ . getSalt ( ) , algorithm ) ; \n\t\tthis . keyBytes = key . getBytes ( ) ; \n\t\tthis . keyType = key . getEType ( ) ; \n\t\t} \n\tcatch ( KrbException e ) $F1787 ( e ) } \n"}, {"code": "public static AnnotationBinding [ ] addStandardAnnotations ( AnnotationBinding [ ] recordedAnnotations , long annotationTagBits , LookupEnvironment env ) { \n\tint count = NUM00 ; \n\tif ( ( annotationTagBits & TagBits . AnnotationTargetMASK ) != NUM00 ) count ++ ; \n\tif ( ( annotationTagBits & TagBits . AnnotationRetentionMASK ) != NUM00 ) count ++ ; \n\tif ( ( annotationTagBits & TagBits . AnnotationDeprecated ) != NUM00 ) count ++ ; \n\tif ( ( annotationTagBits & TagBits . AnnotationDocumented ) != NUM00 ) count ++ ; \n\tif ( ( annotationTagBits & TagBits . AnnotationInherited ) != NUM00 ) count ++ ; \n\tif ( ( annotationTagBits & TagBits . AnnotationOverride ) != NUM00 ) count ++ ; \n\tif ( ( annotationTagBits & TagBits . AnnotationSuppressWarnings ) != NUM00 ) count ++ ; \n\tif ( ( annotationTagBits & TagBits . AnnotationPolymorphicSignature ) != NUM00 ) count ++ ; \n\tif ( ( annotationTagBits & TagBits . AnnotationSafeVarargs ) != NUM00 ) count ++ ; \n\t$F116 ( count , recordedAnnotations ) int index = recordedAnnotations . length ; \n\tAnnotationBinding [ ] result = new AnnotationBinding [ index + count ] ; \n\t$F135 ( System , recordedAnnotations , result , index ) if ( ( annotationTagBits & TagBits . AnnotationTargetMASK ) != NUM00 ) result [ index ++ ] = buildTargetAnnotation ( annotationTagBits , env ) ; \n\tif ( ( annotationTagBits & TagBits . AnnotationRetentionMASK ) != NUM00 ) result [ index ++ ] = buildRetentionAnnotation ( annotationTagBits , env ) ; \n\tif ( ( annotationTagBits & TagBits . AnnotationDeprecated ) != NUM00 ) result [ index ++ ] = buildMarkerAnnotation ( TypeConstants . JAVA_LANG_DEPRECATED , env ) ; \n\tif ( ( annotationTagBits & TagBits . AnnotationDocumented ) != NUM00 ) result [ index ++ ] = buildMarkerAnnotation ( TypeConstants . JAVA_LANG_ANNOTATION_DOCUMENTED , env ) ; \n\tif ( ( annotationTagBits & TagBits . AnnotationInherited ) != NUM00 ) result [ index ++ ] = buildMarkerAnnotation ( TypeConstants . JAVA_LANG_ANNOTATION_INHERITED , env ) ; \n\tif ( ( annotationTagBits & TagBits . AnnotationOverride ) != NUM00 ) result [ index ++ ] = buildMarkerAnnotation ( TypeConstants . JAVA_LANG_OVERRIDE , env ) ; \n\tif ( ( annotationTagBits & TagBits . AnnotationSuppressWarnings ) != NUM00 ) result [ index ++ ] = buildMarkerAnnotation ( TypeConstants . JAVA_LANG_SUPPRESSWARNINGS , env ) ; \n\tif ( ( annotationTagBits & TagBits . AnnotationPolymorphicSignature ) != NUM00 ) result [ index ++ ] = buildMarkerAnnotationForMemberType ( TypeConstants . JAVA_LANG_INVOKE_METHODHANDLE_$_POLYMORPHICSIGNATURE , env ) ; \n\tif ( ( annotationTagBits & TagBits . AnnotationSafeVarargs ) != NUM00 ) result [ index ++ ] = buildMarkerAnnotation ( TypeConstants . JAVA_LANG_SAFEVARARGS , env ) ; \n\treturn result ; \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\tString result = NUM00 ; \n\tresult += getCompatibilityState ( ) ; \n\tif ( m_Instances == null ) { \n\t\tresult += NUM00 ; \n\t\t} \n\telse { \n\t\tresult += NUM00 + $F224768 ( Utils , m_Instances ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public static void process ( List < Packages > pkgList ) throws Exception { \n\tinit ( ) ; \n\t$F6542 ( temps , templates ) $F112797 ( vmFiles , temps ) for ( $F1139 ( i , temps ) ) { \n\t\tvmFiles [ i ] = temps [ i ] + NUM00 ; \n\t\t} \n\tfor ( Packages pkg : pkgList ) { \n\t\tfor ( String vmFile : vmFiles ) { \n\t\t\tgenerator ( vmFile , pkg ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean check ( final Direction dir , final boolean facing ) { \n\tif ( this . dir != dir ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( this . facing != facing ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F42358 ( now , System ) $F232230 ( now , expiration , _BOOL ) expiration = now + DELAY ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void parse ( String path ) throws Exception { \n\tif ( path != null ) { \n\t\t$F3935 ( count , path ) $F104602 ( data , count ) $F16116 ( path , count , data ) } \n\tpath ( ) ; \n\t} \n"}, {"code": "public void recordVariable ( String typeDesc , String varName , int varNo , SymbolTable tbl ) throws CompileError { \n\tchar c ; \n\tint dim = NUM00 ; \n\twhile ( $F31375 ( c , typeDesc , dim ) == NUM00 ) ++ dim ; \n\tint type = MemberResolver . descToType ( c ) ; \n\tString cname = null ; \n\tif ( type == CLASS ) { \n\t\tif ( dim == NUM00 ) $F238294 ( cname , typeDesc ) else cname = typeDesc . substring ( dim + NUM00 , $F1092 ( typeDesc ) ) ; \n\t\t} \n\tDeclarator decl = new Declarator ( type , cname , dim , varNo , new Symbol ( varName ) ) ; \n\ttbl . append ( varName , decl ) ; \n\t} \n"}, {"code": "protected synchronized void readDontVerify $F72 throws IOException , FileEncryptionException { \n\tif ( backingRandomAccessFile . length ( ) < headerSize ( ) ) $F112401 long oldpos = backingRandomAccessFile . getFilePointer ( ) ; \n\t$F927 ( backingRandomAccessFile ) $F96 header_data = new byte [ headerSize ( ) - FileHeader . AUTH_TAG_SIZE ] ; \n\tbackingRandomAccessFile . read ( header_data ) ; \n\tbackingRandomAccessFile . seek ( oldpos ) ; \n\tDataInputStream istream = new DataInputStream $F24702 ( header_data ) ; \n\t$F82619 ( tmpmagic , PANBOX_FILE_MAGIC ) istream . read ( tmpmagic ) ; \n\tif $F1209 ( Arrays , tmpmagic , PANBOX_FILE_MAGIC ) $F112401 $F82619 ( tmpversion , PANBOX_FILE_VERSION ) istream . read ( tmpversion ) ; \n\tif $F1209 ( Arrays , tmpversion , PANBOX_FILE_VERSION ) { \n\t\tthrow new FileEncryptionException $F3943 ( PANBOX_FILE_VERSION ) ; \n\t\t} \n\tthis . shareKeyVersion = istream . readInt ( ) ; \n\t$F59 ( istream ) } \n"}, {"code": "$F13735 ( prefix , namespace , attName , attValue , xmlWriter ) "}, {"code": "private boolean isMediaTypeSupported ( String media ) { \n\tfor ( $F1139 ( i , SUPPORTED_MEDIA_TYPES ) ) { \n\t\tif $F11411 ( media , SUPPORTED_MEDIA_TYPES , i ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void export_dependencies ( JCas jcas ) { \n\tdependencies = new LinkedHashMap < Token , List < Dependency > > $F72 ; \n\t$F40119 nonGoverned = new ArrayList $F40118 $F57797 ( nodes ) ; \n\tfor ( Dependency dependency : select ( jcas , Dependency . class ) ) { \n\t\tToken governor = dependency . getGovernor ( ) ; \n\t\tToken dependent = dependency . getDependent ( ) ; \n\t\tList < Dependency > l = dependencies . get ( governor ) ; \n\t\tif ( l == null ) { \n\t\t\tdependencies . put ( governor , new ArrayList < Dependency > $F72 ) ; \n\t\t\tl = dependencies . get ( governor ) ; \n\t\t\t} \n\t\tl . add ( dependency ) ; \n\t\tnonGoverned . remove ( dependent ) ; \n\t\t} \n\tfor ( Token t : nonGoverned ) { \n\t\ttraverseDependents ( t , NUM00 , - NUM00 ) ; \n\t\twriteToFile ( NUM00 , componentId , NUM00 , NUM00 , NUM00 ) ; \n\t\tcomponentId ++ ; \n\t\t} \n\t} \n"}, {"code": "public static $F1469 fix83600 $F53421 ( signature ) { \n\tif ( signature == null || signature . length < NUM00 ) return signature ; \n\treturn Signature . removeCapture ( signature ) ; \n\t} \n"}, {"code": "public static boolean isNetworkAvailable ( Context context ) { \n\t$F40395 ( connectivityManager , context , Context ) $F40397 ( info , connectivityManager ) return $F93520 ( info ) ; \n\t} \n"}, {"code": "public static String randomRegexpishString ( Random r ) $F41330 ( randomRegexpishString , r ) "}, {"code": "public List < ExpectedPartitionValueEntity > createExpectedPartitionValueEntities $F13322 ( partitionKeyGroupName , expectedPartitionValues ) { \n\tPartitionKeyGroupEntity partitionKeyGroupEntity = partitionKeyGroupDao . getPartitionKeyGroupByName ( partitionKeyGroupName ) ; \n\tif ( partitionKeyGroupEntity == null ) { \n\t\tpartitionKeyGroupEntity = partitionKeyGroupDaoTestHelper . createPartitionKeyGroupEntity ( partitionKeyGroupName ) ; \n\t\t} \n\tList < ExpectedPartitionValueEntity > $F204 ( expectedPartitionValueEntities ) ; \n\tfor ( String expectedPartitionValue : expectedPartitionValues ) { \n\t\tExpectedPartitionValueEntity expectedPartitionValueEntity = new ExpectedPartitionValueEntity $F72 ; \n\t\texpectedPartitionValueEntity . setPartitionKeyGroup ( partitionKeyGroupEntity ) ; \n\t\texpectedPartitionValueEntity . setPartitionValue ( expectedPartitionValue ) ; \n\t\texpectedPartitionValueEntities . add ( expectedPartitionValueDao . saveAndRefresh ( expectedPartitionValueEntity ) ) ; \n\t\t} \n\treturn expectedPartitionValueEntities ; \n\t} \n"}, {"code": "public String toString $F72 $F2905 ( text ) "}, {"code": "public static LowMemoryWatcher register ( $F1113 Runnable runnable ) { \n\treturn new LowMemoryWatcher ( runnable ) ; \n\t} \n"}, {"code": "$F82890 ( dout , getMessage ) "}, {"code": "public Object extractHardRef ( Object o ) { \n\tSoftReference w = ( SoftReference ) o ; \n\tif ( w != null ) $F1522 ( w ) $F1274 } \n"}, {"code": "public static String formatLong ( long number ) $F35907 ( intFormat , number ) "}, {"code": "public static void uncontribute ( ComponentAddon component ) { \n\tcontributedComponents . remove ( component ) ; \n\tif ( currentAddon != null ) { \n\t\tcomponent . uninitialize ( currentAddon ) ; \n\t\t} \n\t} \n"}, {"code": "public synchronized int copyDirect ( int pageId , OutputStream out ) throws IOException { \n\t$F2175 ( buffer , pageSize ) $F55825 ( pageId , pageCount ) file . seek ( ( long ) pageId < < pageSizeShift ) ; \n\tfile . readFullyDirect ( buffer , NUM00 , pageSize ) ; \n\treadCount ++ ; \n\t$F11584 ( out , buffer , pageSize ) return pageId + NUM00 ; \n\t} \n"}, {"code": "public void writeRawBytes ( final $F96 value , int offset , int length ) throws IOException { \n\tif ( limit - position >= length ) $F21534 ( System , value , offset , buffer , position , length ) else { \n\t\tthrow new OutOfSpaceException ( position , limit ) ; \n\t\t} \n\t} \n"}, {"code": "private void assertBackupStatus ( final BackupStatus backupStatus ) { \n\tMap < DistributedMember , Set < PersistentID > > backupMap = backupStatus . getBackedUpDiskStores ( ) ; \n\tassertFalse ( backupMap . isEmpty ( ) ) ; \n\tfor ( DistributedMember member : backupMap . keySet ( ) ) { \n\t\tfor ( PersistentID id : backupMap . get ( member ) ) { \n\t\t\tassertNotNull ( id . getHost ( ) ) ; \n\t\t\tassertNotNull ( id . getUUID ( ) ) ; \n\t\t\tassertNotNull ( id . getDirectory ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "@ RequestMapping ( $F3144 ) public void metadataError ( Locale locale , @ PathVariable ( $F3144 ) String tenant , HttpServletResponse response ) throws IOException { \n\tlogger . info ( $F89018 ( locale , tenant ) ) ; \n\tmetadataDefaultTenantBindingError ( locale , response ) ; \n\t} \n"}, {"code": "public synchronized void checkState ( State ... requiredStates ) throws IllegalStateException { \n\tfor ( State requiredState : requiredStates ) { \n\t\t$F7224 ( requiredState , currentState ) } \n\tthrow new IllegalStateException ( String . format ( Locale . US , NUM00 , Lists . newArrayList ( requiredStates ) , currentState ) ) ; \n\t} \n"}, {"code": "public void sortMovies $F72 { \n\tsynchronized ( movies ) { \n\t\tUtils . sortList ( movies , MOVIE_SET_COMPARATOR ) ; \n\t\t$F725 ( movieIds ) for ( Movie movie : movies ) { \n\t\t\tmovieIds . add ( movie . getDbId ( ) ) ; \n\t\t\t} \n\t\t} \n\tfirePropertyChange ( NUM00 , null , movies ) ; \n\t} \n"}, {"code": "public KeyValueListParser ( String pairDelimiterRegex , String keyValDelimiterRegex ) { \n\tpairDelimiter = Pattern . compile ( pairDelimiterRegex ) ; \n\tkeyValDelimiter = Pattern . compile ( keyValDelimiterRegex ) ; \n\t} \n"}, {"code": "private synchronized boolean pollStatsBroker ( Destination queue ) { \n\tstatsMessageListener . setDestination ( queue ) ; \n\tTimestamp timestamp = $F32 ( System ) ; \n\tLOGGER . debug ( NUM00 + getQueueName ( queue ) + NUM00 + timestamp ) ; \n\tjmsTemplate . execute ( STATS_BROKER_DESTINATION + getQueueName ( queue ) , new ProducerCallbackImpl ( statsQueue ) ) ; \n\ttry { \n\t\t$F165308 ( Thread ) } \n\t$F3101 ( e ) return statsMessageListener . getStats ( ) != null ; \n\t} \n"}, {"code": "public File makeAcceptable ( File pathname ) { \n\tif ( accept ( pathname ) ) { \n\t\treturn pathname ; \n\t\t} \n\telse { \n\t\treturn new File ( pathname . getPath ( ) + NUM00 + defaultExtension ) ; \n\t\t} \n\t} \n"}, {"code": "private static int handleDpadVertical ( int iconIndex , int cntX , int cntY , $F26353 ( matrix ) , int increment ) { \n\tint newIconIndex = NOOP ; \n\t$F77087 ( matrix ) int xPos = - NUM00 ; \n\tint yPos = - NUM00 ; \n\tfor ( $F119 ( i , cntX ) ) { \n\t\tfor ( $F119 ( j , cntY ) ) { \n\t\t\tif ( matrix [ i ] [ j ] == iconIndex ) { \n\t\t\t\txPos = i ; \n\t\t\t\tyPos = j ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( DEBUG ) { \n\t\tLog . v ( TAG , String . format ( NUM00 , xPos , yPos , iconIndex ) ) ; \n\t\t} \n\tfor ( int y = yPos + increment ; \n\tNUM00 <= y && y < cntY && NUM00 <= y ; \n\ty += increment ) { \n\t\tif ( ( newIconIndex = inspectMatrix ( xPos , y , cntX , cntY , matrix ) ) != NOOP && newIconIndex != ALL_APPS_COLUMN ) { \n\t\t\treturn newIconIndex ; \n\t\t\t} \n\t\t} \n\tint nextXPos1 ; \n\tint nextXPos2 ; \n\tboolean haveCrossedAllAppsColumn1 = _BOOL ; \n\tboolean haveCrossedAllAppsColumn2 = _BOOL ; \n\tint y = - NUM00 ; \n\tfor ( $F119 ( coeff , cntX ) ) { \n\t\tnextXPos1 = xPos + coeff * increment ; \n\t\tnextXPos2 = xPos - coeff * increment ; \n\t\ty = yPos + increment * coeff ; \n\t\t$F77102 ( inspectMatrix , nextXPos1 , y , cntX , cntY , matrix , ALL_APPS_COLUMN , haveCrossedAllAppsColumn1 , _BOOL ) $F77102 ( inspectMatrix , nextXPos2 , y , cntX , cntY , matrix , ALL_APPS_COLUMN , haveCrossedAllAppsColumn2 , _BOOL ) for ( ; \n\t\tNUM00 <= y && y < cntY ; \n\t\ty = y + increment ) { \n\t\t\tint offset1 = haveCrossedAllAppsColumn1 && y < cntY - NUM00 ? increment : NUM00 ; \n\t\t\tnewIconIndex = inspectMatrix ( nextXPos1 + offset1 , y , cntX , cntY , matrix ) ; \n\t\t\t$F77104 ( newIconIndex , NOOP ) int offset2 = haveCrossedAllAppsColumn2 && y < cntY - NUM00 ? - increment : NUM00 ; \n\t\t\tnewIconIndex = inspectMatrix ( nextXPos2 + offset2 , y , cntX , cntY , matrix ) ; \n\t\t\t$F77104 ( newIconIndex , NOOP ) } \n\t\t} \n\treturn newIconIndex ; \n\t} \n"}, {"code": "private static boolean edgeIntersectsCellBoundary ( S2Point a , S2Point b , S2Cell cell ) { \n\tS2Point [ ] vertices = new S2Point $F380 ; \n\tfor ( $F809 ( i ) ) { \n\t\tvertices [ i ] = cell . getVertex ( i ) ; \n\t\t} \n\tfor ( $F809 ( i ) ) { \n\t\tS2Point fromPoint = vertices [ i ] ; \n\t\tS2Point toPoint = vertices [ ( i + NUM00 ) % NUM00 ] ; \n\t\tif ( lenientCrossing ( a , b , fromPoint , toPoint ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void generateLegalTimesTree $F72 { \n\tint k0 = KeyEvent . KEYCODE_0 ; \n\tint k1 = KeyEvent . KEYCODE_1 ; \n\tint k2 = KeyEvent . KEYCODE_2 ; \n\tint k3 = KeyEvent . KEYCODE_3 ; \n\tint k4 = KeyEvent . KEYCODE_4 ; \n\tint k5 = KeyEvent . KEYCODE_5 ; \n\tint k6 = KeyEvent . KEYCODE_6 ; \n\tint k7 = KeyEvent . KEYCODE_7 ; \n\tint k8 = KeyEvent . KEYCODE_8 ; \n\tint k9 = KeyEvent . KEYCODE_9 ; \n\t$F58037 ( mLegalTimesTree ) $F58066 ( mIs24HourMode , minuteFirstDigit , k0 , k1 , k2 , k3 , k4 , k5 , minuteSecondDigit , k6 , k7 , k8 , k9 , firstDigit , mLegalTimesTree , secondDigit , thirdDigit , ampm , getAmOrPmKeyCode , AM , PM , fourthDigit ) } \n"}, {"code": "protected void updateOverlayContents ( LookAt lookAt , Camera camera ) { \n\tlatView . setText ( formatLatitude ( lookAt . latitude ) ) ; \n\tlonView . setText ( formatLongitude ( lookAt . longitude ) ) ; \n\taltView . setText ( formatAltitude ( camera . altitude ) ) ; \n\t} \n"}, {"code": "public String jsTypeName ( TypeRef typeRef ) { \n\tswitch $F48178 ( typeRef ) { \n\t\tcase TYPE_MESSAGE : $F1278 case TYPE_ENUM : $F1278 $F1267 { \n\t\t\tString name = PRIMITIVE_TYPE_NAMES . get ( typeRef . getKind ( ) ) ; \n\t\t\tif $F48189 ( Strings , name ) { \n\t\t\t\treturn name ; \n\t\t\t\t} \n\t\t\tthrow new IllegalArgumentException ( NUM00 + typeRef . getKind ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F112793 ( key , entry , pruneIfNeeded , file , getFileForKey , fos , e , success , VolleyLog , putEntry , deleted ) "}, {"code": "public StateMachine createStateMachine ( StateMachineDefinition stateMachineDefinition ) { \n\tfinal Map < EventDefinition , EventData > eventDataMap = stateMachineDefinition . getEventDataMap ( ) ; \n\tSet $F137768 allEvents = createAllEvents ( eventDataMap ) ; \n\tSet < StateDefinition > stateDefinitions = stateMachineDefinition . getStates ( ) ; \n\t$F7433 $F9626 ( states ) ; \n\tfor ( StateDefinition stateDefinition : stateDefinitions ) { \n\t\tState state = convertStateDefinitionToState ( stateDefinition ) ; \n\t\tstates . add ( state ) ; \n\t\t} \n\tStateMachine stateMachine = new StateMachine ( stateMachineDefinition . getVersion ( ) , stateMachineDefinition . getName ( ) , stateMachineDefinition . getDescription ( ) , states , stateMachineDefinition . getCorrelationId ( ) ) ; \n\tstateMachinesDAO . create ( stateMachine ) ; \n\tfor ( Event event : allEvents ) { \n\t\tevent . setStateMachineInstanceId ( stateMachine . getId ( ) ) ; \n\t\teventPersistenceService . persistEvent ( event ) ; \n\t\t} \n\tfor ( State state : stateMachine . getStates ( ) ) { \n\t\tauditDAO . create ( new AuditRecord ( stateMachine . getId ( ) , state . getId ( ) , NUM00 , Status . initialized , null , null ) ) ; \n\t\t} \n\treturn stateMachine ; \n\t} \n"}, {"code": "protected void sqrtLayout ( VisualTable labels ) { \n\tRectangle2D b = getLayoutBounds ( ) ; \n\tdouble breadth = getBreadth ( b ) ; \n\tdouble span = m_hi - m_lo ; \n\tdouble splo = MathLib . safeSqrt ( m_prevlo ) ; \n\tdouble spspan = MathLib . safeSqrt ( m_prevhi ) - splo ; \n\tdouble vlo = Math . pow ( NUM00 , Math . floor ( MathLib . safeLog10 ( m_lo ) ) ) ; \n\tdouble slo = MathLib . safeSqrt ( m_lo ) ; \n\tdouble sspan = MathLib . safeSqrt ( m_hi ) - slo ; \n\tIterator iter = labels . tuples ( ) ; \n\twhile $F2921 ( iter ) { \n\t\t$F163591 ( item , iter ) reset ( item ) ; \n\t\tdouble v = item . getDouble ( VALUE ) ; \n\t\tdouble x = span == NUM00 ? NUM00 : ( ( MathLib . safeSqrt ( v ) - slo ) / sspan ) * breadth ; \n\t\tset ( item , x , b ) ; \n\t\t} \n\tIndex index = labels . index ( VALUE ) ; \n\tdouble step = getLinearStep ( span , breadth / span ) ; \n\t$F211985 ( step ) int r ; \n\tfor ( double x , v = vlo ; \n\tv <= m_hi ; \n\tv += step ) { \n\t\tx = ( ( MathLib . safeSqrt ( v ) - slo ) / sspan ) * breadth ; \n\t\tif ( x < - NUM00 ) $F1448 else if ( $F86155 ( r , index , v ) >= NUM00 ) { \n\t\t\tVisualItem item = labels . getItem ( r ) ; \n\t\t\titem . setVisible ( _BOOL ) ; \n\t\t\titem . setEndVisible ( _BOOL ) ; \n\t\t\t} \n\t\telse { \n\t\t\tVisualItem item = labels . addItem ( ) ; \n\t\t\titem . set ( LABEL , m_nf . format ( v ) ) ; \n\t\t\titem . setDouble ( VALUE , v ) ; \n\t\t\tdouble f = spspan == NUM00 ? NUM00 : ( ( MathLib . safeSqrt ( v ) - splo ) / spspan ) ; \n\t\t\tif ( f <= NUM00 || f >= NUM00 ) { \n\t\t\t\titem . setStartVisible ( _BOOL ) ; \n\t\t\t\t} \n\t\t\tset ( item , f * breadth , b ) ; \n\t\t\tset ( item , x , b ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void dispose $F72 { \n\tclearListeners ( ) ; \n\t$F44159 ( attributes ) removed ( null ) ; \n\t} \n"}, {"code": "private void readObject ( ObjectInputStream in ) throws $F6427 { \n\t$F6428 ( in ) registrarID = new ServiceID ( in ) ; \n\t$F6434 ( server ) } \n"}, {"code": "public Shape triangle_right $F2267 ( x , y , height ) { \n\t$F2268 ( m_path ) m_path . moveTo ( x , y + height ) ; \n\tm_path . lineTo ( x + height , y + height / NUM00 ) ; \n\tm_path . lineTo ( x , y ) ; \n\t$F2272 ( m_path ) return m_path ; \n\t} \n"}, {"code": "public static terminal find ( String with_name ) { \n\tif ( with_name == null ) $F1274 else return ( terminal ) _all . get ( with_name ) ; \n\t} \n"}, {"code": "public LayoutBlock createNewLayoutBlock ( String systemName , String userName ) { \n\tLayoutBlock block = null ; \n\tif $F3581 ( userName ) { \n\t\t$F9464 ( log ) $F1274 } \n\tblock = getByUserName ( userName ) ; \n\t$F115475 ( block ) String sName = NUM00 ; \n\tif ( systemName == null ) { \n\t\tboolean found = _BOOL ; \n\t\twhile ( found ) { \n\t\t\tsName = NUM00 + blkNum ; \n\t\t\tblkNum ++ ; \n\t\t\tblock = getBySystemName ( sName ) ; \n\t\t\t$F20614 ( block , found , _BOOL ) } \n\t\t} \n\telse { \n\t\tblock = getBySystemName ( ( systemName . toUpperCase ( ) ) ) ; \n\t\t$F115475 ( block ) sName = systemName . toUpperCase ( ) ; \n\t\t} \n\tblock = new LayoutBlock ( sName , userName ) ; \n\tregister ( block ) ; \n\treturn block ; \n\t} \n"}, {"code": "$F1 public void modifyNonstaticJPedalParameters ( final Map values ) throws PdfException { \n\toptions . set ( values ) ; \n\tif ( values . containsKey ( JPedalSettings . DISPLAY_BACKGROUND ) ) $F845 } \n"}, {"code": "public static String escapeRegex ( final String regex ) { \n\t$F1150 ( match , REGEX_CHARS , regex ) return match . replaceAll ( NUM00 ) ; \n\t} \n"}, {"code": "public CharBuffer ( String string ) { \n\t$F115 ( length , string ) int capacity = length + MIN_CAPACITY ; \n\tinit ( new char [ capacity ] , NUM00 , length ) ; \n\tstring . getChars ( NUM00 , length , buffer ( ) , NUM00 ) ; \n\t} \n"}, {"code": "private void updatePromoVisibility ( float percentage ) { \n\tif ( isPromoAvailable ( ) ) { \n\t\tmPromoVisible = _BOOL ; \n\t\tmPromoHeightPx = Math . round ( MathUtils . clamp ( percentage * mPromoContentHeightPx , NUM00 , mPromoContentHeightPx ) ) ; \n\t\tmPromoOpacity = percentage ; \n\t\t} \n\telse { \n\t\tmPromoVisible = _BOOL ; \n\t\tmPromoHeightPx = NUM00 ; \n\t\tmPromoOpacity = NUM00 ; \n\t\t} \n\t} \n"}, {"code": "private ValueGeometry ( $F96 bytes , Geometry geometry ) { \n\tthis . bytes = bytes ; \n\tthis . geometry = geometry ; \n\tthis . hashCode = Arrays . hashCode ( bytes ) ; \n\t} \n"}, {"code": "$F1 public void do_after_propagation $F72 { \n\tfor ( HeapInsIntervalManager im : new_pts . values ( ) ) $F29882 ( im ) new_pts = new HashMap < AllocNode , HeapInsIntervalManager > $F72 ; \n\t} \n"}, {"code": "static boolean isExist ( String libName , int version ) { \n\tString file = _targetSoFile ( libName , version ) ; \n\t$F1705 ( a , file ) $F2948 ( a ) } \n"}, {"code": "private void finishCommon $F72 { \n\tif $F5973 ( unknownSubjects ) { \n\t\tif $F86322 ( statements , restoredStatements ) { \n\t\t\tthrow new BadSubjectException ( unknownSubjects . keySet ( ) , uris ) ; \n\t\t\t} \n\t\telse { \n\t\t\tlog . info ( NUM00 , unknownSubjects . keySet ( ) , uris . entityData ( ) , uris . entity ( ) ) ; \n\t\t\t} \n\t\t} \n\tif ( revisionId == null ) { \n\t\tthrow new ContainedException ( NUM00 + statements ) ; \n\t\t} \n\tif ( lastModified == null ) { \n\t\tthrow new ContainedException ( NUM00 + statements ) ; \n\t\t} \n\tfor ( Pair < URI , Literal > dataStatement : dataStatements ) { \n\t\tstatements . add ( new StatementImpl ( entityUriImpl , dataStatement . getLeft ( ) , dataStatement . getRight ( ) ) ) ; \n\t\t} \n\tstatements . addAll ( restoredStatements ) ; \n\t} \n"}, {"code": "public static final void showGUIMessage ( final String user_message , final BufferedImage image , final String title ) { \n\t$F2329 ( image ) final ImagePanel display = new ImagePanel ( image ) ; \n\t$F30057 ( display ) if ( user_message != null ) { \n\t\tdisplay . add ( new JLabel ( user_message ) , BorderLayout . SOUTH ) ; \n\t\t} \n\t$F43592 ( width , image ) $F43590 ( height , image ) display . setSize ( new Dimension ( width + NUM00 , height + NUM00 ) ) ; \n\tJOptionPane . showConfirmDialog ( contentPane , display , title , JOptionPane . DEFAULT_OPTION , JOptionPane . PLAIN_MESSAGE ) ; \n\t} \n"}, {"code": "private void dynInit $F72 $F845 "}, {"code": "$F1 public Path call $F72 throws Exception { \n\tfinal Set < FileVisitOption > options ; \n\tif ( followLinks ) { \n\t\toptions = EnumSet . of ( FileVisitOption . FOLLOW_LINKS ) ; \n\t\t} \n\telse { \n\t\toptions = EnumSet . noneOf ( FileVisitOption . class ) ; \n\t\t} \n\t$F102990 ( logger , String , path ) try { \n\t\tFiles . walkFileTree ( path , options , maxDepth , this ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tlogger . log ( Level . SEVERE , String . format ( NUM00 , path ) , e ) ; \n\t\tthrow e ; \n\t\t} \n\t$F102990 ( logger , String , path ) return path ; \n\t} \n"}, {"code": "private void baselineLayout ( int origin , int size ) { \n\tint ascent ; \n\tint descent ; \n\tif ( baselineAnchoredToTop ) { \n\t\tascent = prefAscent ; \n\t\tdescent = size - ascent ; \n\t\t} \n\telse { \n\t\tascent = size - prefDescent ; \n\t\tdescent = prefDescent ; \n\t\t} \n\tfor ( Spring spring : springs ) { \n\t\tAlignment alignment = spring . getAlignment ( ) ; \n\t\tif ( alignment == null || alignment == Alignment . BASELINE ) { \n\t\t\tint baseline = spring . getBaseline ( ) ; \n\t\t\tif ( baseline >= NUM00 ) { \n\t\t\t\tint springMax = spring . getMaximumSize ( VERTICAL ) ; \n\t\t\t\tint springPref = spring . getPreferredSize ( VERTICAL ) ; \n\t\t\t\tint height = springPref ; \n\t\t\t\tint y ; \n\t\t\t\tswitch ( spring . getBaselineResizeBehavior ( ) ) { \n\t\t\t\t\tcase CONSTANT_ASCENT : y = origin + ascent - baseline ; \n\t\t\t\t\theight = Math . min ( descent , springMax - baseline ) + baseline ; \n\t\t\t\t\t$F597 case CONSTANT_DESCENT : height = Math . min ( ascent , springMax - springPref + baseline ) + ( springPref - baseline ) ; \n\t\t\t\t\ty = origin + ascent + ( springPref - baseline ) - height ; \n\t\t\t\t\t$F597 $F1267 y = origin + ascent - baseline ; \n\t\t\t\t\t$F597 } \n\t\t\t\tspring . setSize ( VERTICAL , y , height ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsetChildSize ( spring , VERTICAL , origin , size ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tsetChildSize ( spring , VERTICAL , origin , size ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static int readInt ( final JSONArray jsonArray , final int index , final boolean required , final boolean notNull ) throws JSONException { \n\tif ( required ) { \n\t\treturn jsonArray . getInt ( index ) ; \n\t\t} \n\t$F3652 ( notNull , jsonArray , index , String , Locale , NULL_VALUE_FORMAT_ARRAY ) int value = NUM00 ; \n\tif $F3653 ( jsonArray , index ) { \n\t\tvalue = jsonArray . getInt ( index ) ; \n\t\t} \n\treturn value ; \n\t} \n"}, {"code": "$F5105 ( pcl , m_pcSupport ) "}, {"code": "private void unregisterDependent ( Preference dependent ) $F4579 ( mDependents , dependent ) "}, {"code": "private void validateStoragePolicySelection ( StoragePolicySelection storagePolicySelection ) { \n\t$F18062 ( Assert , storagePolicySelection ) businessObjectDataHelper . validateBusinessObjectDataKey ( storagePolicySelection . getBusinessObjectDataKey ( ) , _BOOL , _BOOL ) ; \n\tstoragePolicyHelper . validateStoragePolicyKey ( storagePolicySelection . getStoragePolicyKey ( ) ) ; \n\tAssert . notNull ( storagePolicySelection . getStoragePolicyVersion ( ) , NUM00 ) ; \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\t$F280 ( text ) if ( m_cobwebTree == null ) $F2455 else { \n\t\tm_cobwebTree . dumpTree ( NUM00 , text ) ; \n\t\treturn NUM00 + m_numberMerges + NUM00 + m_numberSplits + NUM00 + numberOfClusters ( ) + NUM00 + text . toString ( ) + NUM00 ; \n\t\t} \n\t} \n"}, {"code": "public static Object toArray ( $F7922 collection , $F6969 componentType ) { \n\tif $F24204 ( componentType ) { \n\t\tObject array = Array . newInstance ( componentType , collection . size ( ) ) ; \n\t\tint index = NUM00 ; \n\t\tfor ( Object value : collection ) { \n\t\t\tArray . set ( array , index ++ , value ) ; \n\t\t\t} \n\t\treturn array ; \n\t\t} \n\treturn collection . toArray ( ( $F131 ) Array . newInstance ( componentType , collection . size ( ) ) ) ; \n\t} \n"}, {"code": "GradleException formatViolationsFor ( Formatter formatter , $F11300 problemFiles ) throws IOException { \n\treturn new GradleException ( DiffMessageFormatter . messageFor ( this , formatter , problemFiles ) ) ; \n\t} \n"}, {"code": "public void labelDistances ( Hypergraph $F27593 graph , V root ) { \n\tlabelDistances ( graph , Collections . singleton ( root ) ) ; \n\t} \n"}, {"code": "public static $F9737 toString ( float d ) { \n\tfloat m = Math . abs ( d ) ; \n\tif ( d == POSITIVE_INFINITY ) $F2455 else if ( d == NEGATIVE_INFINITY ) $F2455 else if ( d == NUM00 ) $F2455 else if $F152867 ( m ) { \n\t\tString str = toStringImpl ( d , _BOOL ) ; \n\t\t$F7782 ( chars , str ) $F40997 ( i , chars ) char c ; \n\t\twhile ( i >= NUM00 && ( c = chars [ i ] ) == NUM00 ) { \n\t\t\ti -- ; \n\t\t\t} \n\t\tif ( i < NUM00 || $F8907 ( str ) ) { \n\t\t\treturn str ; \n\t\t\t} \n\t\telse if ( chars [ i ] == NUM00 || chars [ i ] == NUM00 ) { \n\t\t\ti ++ ; \n\t\t\t} \n\t\treturn $F1399 ( str , i ) ; \n\t\t} \n\telse $F8587 ( toStringImpl , d , _BOOL ) } \n"}, {"code": "public int position $F72 { \n\treturn lineBuffer == null ? NUM00 : lineBuffer . length ( ) ; \n\t} \n"}, {"code": "$F1017 ( request , container , mRequest , mContainers ) "}, {"code": "public void addFrequency ( Frequency frequency ) $F207 ( frequencies , frequency ) "}, {"code": "public final static HeaderElement parseHeaderElement $F45528 ( value , parser ) throws ParseException { \n\t$F826 ( value ) $F45529 ( parser , SaveHeaderValueParser ) $F45535 ( buffer , value ) buffer . append ( value ) ; \n\tSaveParserCursor cursor = new SaveParserCursor ( $F34024 ( value ) ) ; \n\treturn parser . parseHeaderElement ( buffer , cursor ) ; \n\t} \n"}, {"code": "public static $F536600 sliceIntervals ( Interval interval , TimeGrain timeGrain ) { \n\tDateTime intervalEnd = interval . getEnd ( ) ; \n\tDateTime sliceStart = interval . getStart ( ) ; \n\tDateTime periodStart = timeGrain . roundFloor ( sliceStart ) ; \n\tif $F2137 ( sliceStart , periodStart ) { \n\t\tLOG . info ( NUM00 , interval , timeGrain , periodStart ) ; \n\t\t$F11416 ( periodStart ) } \n\t$F536600 $F204 ( intervalSlices ) ; \n\twhile ( sliceStart . isBefore ( intervalEnd ) ) { \n\t\tDateTime sliceEnd = DateTimeUtils . addTimeGrain ( sliceStart , timeGrain ) ; \n\t\tInterval slicedInterval = new Interval ( sliceStart , sliceEnd ) ; \n\t\tif $F2200 ( interval , slicedInterval ) { \n\t\t\t$F21153 ( LOG , interval , timeGrain ) $F824 } \n\t\tintervalSlices . add ( slicedInterval ) ; \n\t\tsliceStart = sliceEnd ; \n\t\t} \n\tLOG . debug ( NUM00 , interval , intervalSlices . size ( ) , timeGrain ) ; \n\treturn intervalSlices ; \n\t} \n"}, {"code": "$F13735 ( prefix , namespace , attName , attValue , xmlWriter ) "}, {"code": "public void testHasAttributes1 $F72 throws Throwable { \n\tDocument doc ; \n\tNodeList addrList ; \n\tNode addrNode ; \n\tboolean state ; \n\t$F236 ( doc , load , builder ) $F237 ( addrList , doc ) $F238 ( addrNode , addrList ) state = addrNode . hasAttributes ( ) ; \n\tassertFalse ( NUM00 , state ) ; \n\t} \n"}, {"code": "public boolean isGerund $F72 $F121470 ( typeString , VERB_GERUND ) "}, {"code": "protected void error ( String msg , Exception e ) throws $F2253 { \n\tSAXSourceLocator locator = getLocator ( ) ; \n\t$F1875 ( handler , m_stylesheetProcessor ) TransformerException pe ; \n\tif ( ! ( e instanceof TransformerException ) ) { \n\t\tpe = ( null == e ) ? new TransformerException ( msg , locator ) : new TransformerException ( msg , locator , e ) ; \n\t\t} \n\telse pe = ( TransformerException ) e ; \n\tif ( null != handler ) { \n\t\ttry $F16034 ( handler , pe ) $F2262 ( te ) } \n\telse throw new $F2253 ( pe ) ; \n\t} \n"}, {"code": "private JsonObject createRequest ( $F2100 ( headers ) , String uri , HttpMethod method , JsonObject payload ) { \n\t$F364018 ( request ) $F466990 ( jsonHeaders ) $F22620 ( headers ) $F545 ( request , jsonHeaders ) $F545 ( request , uri ) $F108920 ( request , method ) $F545 ( request , payload ) return request ; \n\t} \n"}, {"code": "public void runTest $F72 throws Throwable { \n\tDocument doc ; \n\tNodeList elementList ; \n\tNode nameNode ; \n\tCharacterData child ; \n\t$F236 ( doc , load , _BOOL ) $F237 ( elementList , doc ) $F238 ( nameNode , elementList ) $F241 ( child , nameNode ) { \n\t\tboolean success = _BOOL ; \n\t\ttry { \n\t\t\tchild . replaceData ( - NUM00 , NUM00 , NUM00 ) ; \n\t\t\t} \n\t\t$F250 ( success , ex , DOMException ) assertTrue ( NUM00 , success ) ; \n\t\t} \n\t} \n"}, {"code": "private long downloadTlogFiles ( File tmpTlogDir , long latestGeneration ) throws Exception { \n\t$F556 ( LOG , tlogFilesToDownload ) tlogFilesDownloaded = Collections . synchronizedList ( $F203 ) ; \n\tlong bytesDownloaded = NUM00 ; \n\t$F152093 ( status , tmpTlogDir ) if ( ! status ) { \n\t\tthrow new SolrException ( SolrException . ErrorCode . SERVER_ERROR , $F2989 ( tmpTlogDir ) ) ; \n\t\t} \n\tfor ( $F46397 ( file , tlogFilesToDownload ) ) { \n\t\tString saveAs = ( String ) ( file . get ( ALIAS ) == null ? file . get ( NAME ) : file . get ( ALIAS ) ) ; \n\t\tlocalFileFetcher = new LocalFsFileFetcher ( tmpTlogDir , file , saveAs , TLOG_FILE , latestGeneration ) ; \n\t\tcurrentFile = file ; \n\t\tlocalFileFetcher . fetchFile ( ) ; \n\t\tbytesDownloaded += localFileFetcher . getBytesDownloaded ( ) ; \n\t\ttlogFilesDownloaded . add ( new $F4188 ( file ) ) ; \n\t\t} \n\treturn bytesDownloaded ; \n\t} \n"}, {"code": "static WindowsFileAttributes readAttributes ( long handle ) throws WindowsException { \n\tNativeBuffer buffer = NativeBuffers . getNativeBuffer ( SIZEOF_FILE_INFORMATION ) ; \n\ttry { \n\t\t$F14662 ( address , buffer ) GetFileInformationByHandle ( handle , address ) ; \n\t\tint reparseTag = NUM00 ; \n\t\t$F149755 ( fileAttrs , unsafe , address , OFFSETOF_FILE_INFORMATION_ATTRIBUTES ) if ( isReparsePoint ( fileAttrs ) ) { \n\t\t\tint size = MAXIMUM_REPARSE_DATA_BUFFER_SIZE ; \n\t\t\tNativeBuffer reparseBuffer = NativeBuffers . getNativeBuffer ( size ) ; \n\t\t\ttry { \n\t\t\t\tDeviceIoControlGetReparsePoint ( handle , reparseBuffer . address ( ) , size ) ; \n\t\t\t\treparseTag = ( int ) unsafe . getLong ( reparseBuffer . address ( ) ) ; \n\t\t\t\t} \n\t\t\t$F33835 ( reparseBuffer ) } \n\t\treturn fromFileInformation ( address , reparseTag ) ; \n\t\t} \n\t$F33835 ( buffer ) } \n"}, {"code": "protected void addAllForReplay ( Collection $F447507 participants ) { \n\tIterator $F447507 it = participants . iterator ( ) ; \n\twhile $F2921 ( it ) { \n\t\tParticipant p = it . next ( ) ; \n\t\treplayCompletion ( p ) ; \n\t\t} \n\t} \n"}, {"code": "public static JPanel createCheckbox ( String boxlabel , $F806 buttons , $F8748 checked , ActionListener al ) { \n\tJPanel jp = createPaletteJPanel ( boxlabel ) ; \n\tfor ( $F1139 ( j , buttons ) ) { \n\t\tJCheckBox jcb = new JCheckBox ( buttons [ j ] ) ; \n\t\tjcb . setActionCommand ( Integer . toString ( j ) ) ; \n\t\tif ( al != null ) jcb . addActionListener ( al ) ; \n\t\tjcb . setSelected ( checked [ j ] ) ; \n\t\tjp . add ( jcb ) ; \n\t\t} \n\treturn jp ; \n\t} \n"}, {"code": "public static void copy ( DimensionsEvent aeDest , DimensionsEvent aeSrc ) { \n\tGPOMutable destAggs = aeDest . getAggregates ( ) ; \n\tGPOMutable srcAggs = aeSrc . getAggregates ( ) ; \n\tif ( srcAggs . getFieldsBoolean ( ) != null ) { \n\t\tSystem . arraycopy ( srcAggs . getFieldsBoolean ( ) , NUM00 , destAggs . getFieldsBoolean ( ) , NUM00 , srcAggs . getFieldsBoolean ( ) . length ) ; \n\t\t} \n\tif ( srcAggs . getFieldsCharacter ( ) != null ) { \n\t\tSystem . arraycopy ( srcAggs . getFieldsCharacter ( ) , NUM00 , destAggs . getFieldsCharacter ( ) , NUM00 , srcAggs . getFieldsCharacter ( ) . length ) ; \n\t\t} \n\tif ( srcAggs . getFieldsString ( ) != null ) { \n\t\tSystem . arraycopy ( srcAggs . getFieldsString ( ) , NUM00 , destAggs . getFieldsString ( ) , NUM00 , srcAggs . getFieldsString ( ) . length ) ; \n\t\t} \n\tif ( srcAggs . getFieldsShort ( ) != null ) { \n\t\tSystem . arraycopy ( srcAggs . getFieldsShort ( ) , NUM00 , destAggs . getFieldsShort ( ) , NUM00 , srcAggs . getFieldsShort ( ) . length ) ; \n\t\t} \n\tif ( srcAggs . getFieldsInteger ( ) != null ) { \n\t\tSystem . arraycopy ( srcAggs . getFieldsInteger ( ) , NUM00 , destAggs . getFieldsInteger ( ) , NUM00 , srcAggs . getFieldsInteger ( ) . length ) ; \n\t\t} \n\tif ( srcAggs . getFieldsLong ( ) != null ) { \n\t\tSystem . arraycopy ( srcAggs . getFieldsLong ( ) , NUM00 , destAggs . getFieldsLong ( ) , NUM00 , srcAggs . getFieldsLong ( ) . length ) ; \n\t\t} \n\tif ( srcAggs . getFieldsFloat ( ) != null ) { \n\t\tSystem . arraycopy ( srcAggs . getFieldsFloat ( ) , NUM00 , destAggs . getFieldsFloat ( ) , NUM00 , srcAggs . getFieldsFloat ( ) . length ) ; \n\t\t} \n\tif ( srcAggs . getFieldsDouble ( ) != null ) { \n\t\tSystem . arraycopy ( srcAggs . getFieldsDouble ( ) , NUM00 , destAggs . getFieldsDouble ( ) , NUM00 , srcAggs . getFieldsDouble ( ) . length ) ; \n\t\t} \n\t} \n"}, {"code": "public static double assignProbabilitiesToInstances ( Relation < ? extends NumberVector > relation , List < ? extends EMClusterModel $F1011 > models , WritableDataStore $F42619 probClusterIGivenX ) { \n\t$F10162 ( k , models ) double emSum = NUM00 ; \n\tfor ( $F42632 ( iditer , relation ) ) { \n\t\t$F69812 ( vec , relation , iditer ) $F9662 ( probabilities , k ) { \n\t\t\tint i = NUM00 ; \n\t\t\tfor ( EMClusterModel $F1011 m : models ) { \n\t\t\t\tprobabilities [ i ] = m . estimateDensity ( vec ) ; \n\t\t\t\t++ i ; \n\t\t\t\t} \n\t\t\t} \n\t\tdouble priorProbability = NUM00 ; \n\t\tfor ( $F119 ( i , k ) ) { \n\t\t\tpriorProbability += probabilities [ i ] ; \n\t\t\t} \n\t\tdouble logP = Math . max ( Math . log ( priorProbability ) , MIN_LOGLIKELIHOOD ) ; \n\t\temSum += ( logP == logP ) ? logP : NUM00 ; \n\t\t$F9662 ( clusterProbabilities , k ) if ( priorProbability > NUM00 ) { \n\t\t\tfor ( $F119 ( i , k ) ) { \n\t\t\t\tclusterProbabilities [ i ] = probabilities [ i ] / priorProbability ; \n\t\t\t\t} \n\t\t\t} \n\t\tprobClusterIGivenX . put ( iditer , clusterProbabilities ) ; \n\t\t} \n\treturn emSum / relation . size ( ) ; \n\t} \n"}, {"code": "$F42603 ( path , WINDOWS_SEPARATOR , UNIX_SEPARATOR ) "}, {"code": "public static String asString ( URI value ) { \n\treturn $F65975 ( value ) ; \n\t} \n"}, {"code": "public Kernel ( int offset , $F1986 values ) { \n\t$F17879 ( this , Arrays , values ) this . offset = offset ; \n\t} \n"}, {"code": "private void initializeWorkList $F72 { \n\tfor ( GVCongruenceClass c : B ) { \n\t\tif $F10471 ( c ) $F1448 Iterator < ValueGraphVertex > i = c . iterator ( ) ; \n\t\tValueGraphVertex first = i . next ( ) ; \n\t\twhile $F2921 ( i ) { \n\t\t\tValueGraphVertex v = i . next ( ) ; \n\t\t\tif ( ! checkCongruence ( first , v ) ) { \n\t\t\t\tworkList . push ( c ) ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 protected void beforeModelLinked ( EObject model , IDiagnosticConsumer diagnosticsConsumer ) { \n\tImportedNamesAdapter adapter = ImportedNamesAdapter . find ( model . eResource ( ) ) ; \n\t$F10834 ( adapter ) UnionMemberScope . clearCachedComposedMembers ( model ) ; \n\t} \n"}, {"code": "protected abstract void addFile ( String relativeFilename ) throws CommandException ; \n"}, {"code": "public void treeExpanded ( TreeExpansionEvent event ) { \n\tinspectorWindow . updateView ( Director . ALL ) ; \n\t} \n"}, {"code": "public void convertInfixToPostfix ( String infixExp ) throws Exception { \n\tm_originalInfix = infixExp ; \n\tinfixExp = Utils . removeSubstring ( infixExp , NUM00 ) ; \n\tinfixExp = Utils . replaceSubstring ( infixExp , NUM00 , NUM00 ) ; \n\tinfixExp = Utils . replaceSubstring ( infixExp , NUM00 , NUM00 ) ; \n\tinfixExp = Utils . replaceSubstring ( infixExp , NUM00 , NUM00 ) ; \n\tinfixExp = Utils . replaceSubstring ( infixExp , NUM00 , NUM00 ) ; \n\tinfixExp = Utils . replaceSubstring ( infixExp , NUM00 , NUM00 ) ; \n\tinfixExp = Utils . replaceSubstring ( infixExp , NUM00 , NUM00 ) ; \n\tinfixExp = Utils . replaceSubstring ( infixExp , NUM00 , NUM00 ) ; \n\tinfixExp = Utils . replaceSubstring ( infixExp , NUM00 , NUM00 ) ; \n\tinfixExp = Utils . replaceSubstring ( infixExp , NUM00 , NUM00 ) ; \n\tinfixExp = Utils . replaceSubstring ( infixExp , NUM00 , NUM00 ) ; \n\tStringTokenizer tokenizer = new StringTokenizer ( infixExp , OPERATORS , _BOOL ) ; \n\tm_postFixExpVector = new Vector < ExpressionComponent > $F72 ; \n\twhile $F14498 ( tokenizer ) { \n\t\t$F8095 ( tok , tokenizer ) if $F4012 ( tok ) { \n\t\t\thandleOperand ( tok ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( $F95813 ( isOperator , tok ) ) { \n\t\t\t\thandleOperator ( tok ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\thandleOperand ( tok ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tm_previousTok = tok ; \n\t\t} \n\twhile $F84882 ( m_operatorStack ) { \n\t\tString popop = ( String ) ( m_operatorStack . pop ( ) ) ; \n\t\tif $F66132 ( popop ) $F9451 m_postFixExpVector . addElement ( new Operator $F49313 ( popop ) ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean hasItem ( T object ) { \n\tsynchronized ( mLock ) $F298 ( source , object ) } \n"}, {"code": "private static boolean versionMatches ( Integer v1 , int v2 ) { \n\tif ( v1 == null || v1 == NUM00 || v2 == NUM00 ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F1964 ( v1 , v2 ) } \n"}, {"code": "protected void onFailedClosingUrlConnection ( URLConnection urlConnection , IOException cause ) $F845 "}, {"code": "private void onSchemaComplexType ( Element schemaComplexType , DatatypeElementFactory elementFactory ) { \n\t$F335184 iter = schemaComplexType . elementIterator ( XSD_ATTRIBUTE ) ; \n\twhile $F2921 ( iter ) { \n\t\t$F84573 ( xsdAttribute , iter ) String name = xsdAttribute . attributeValue ( NUM00 ) ; \n\t\tQName qname = getQName ( name ) ; \n\t\tXSDatatype dataType = dataTypeForXsdAttribute ( xsdAttribute ) ; \n\t\tif ( dataType != null ) { \n\t\t\telementFactory . setAttributeXSDatatype ( qname , dataType ) ; \n\t\t\t} \n\t\t} \n\tElement schemaSequence = schemaComplexType . element ( XSD_SEQUENCE ) ; \n\t$F38251 ( schemaSequence , onChildElements , elementFactory ) Element schemaChoice = schemaComplexType . element ( XSD_CHOICE ) ; \n\t$F38251 ( schemaChoice , onChildElements , elementFactory ) Element schemaAll = schemaComplexType . element ( XSD_ALL ) ; \n\t$F38251 ( schemaAll , onChildElements , elementFactory ) } \n"}, {"code": "private void pushAnnotatorsRef ( String values ) { \n\tannotatorsRef . push ( annotatorsRef . peek ( ) ) ; \n\tsetAnnotatorsRef ( values ) ; \n\t} \n"}, {"code": "public String versionCompact $F72 $F16566 ( properties ) "}, {"code": "private void sequenceQuery ( QueryEntry entry , ServerSessionContext session , CompletableFuture < QueryResponse > future ) { \n\tif ( entry . getSequence ( ) > session . getCommandSequence ( ) ) { \n\t\tsession . registerSequenceQuery ( entry . getSequence ( ) , null ) ; \n\t\t} \n\telse { \n\t\tindexQuery ( entry , future ) ; \n\t\t} \n\t} \n"}, {"code": "private boolean expungeStaleEntries $F72 { \n\t$F116 ( size , _BOOL ) Object r ; \n\tboolean result = _BOOL ; \n\twhile $F22655 ( r , queue ) { \n\t\tresult = _BOOL ; \n\t\t$F68169 ( e , r ) int h = e . hash ; \n\t\t$F44136 ( i , indexFor , h , table ) Entry prev = table [ i ] ; \n\t\tEntry p = prev ; \n\t\twhile ( p != null ) { \n\t\t\tEntry next = p . next ; \n\t\t\tif ( p == e ) { \n\t\t\t\tif ( prev == e ) table [ i ] = next ; \n\t\t\t\telse prev . next = next ; \n\t\t\t\te . next = null ; \n\t\t\t\tsize -- ; \n\t\t\t\t$F597 } \n\t\t\tprev = p ; \n\t\t\tp = next ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public static $F4203 $F5675 rest $F18644 ( l ) { \n\treturn $F31807 ( l ) ; \n\t} \n"}, {"code": "public static $F3807 createRanges ( int ... startEnds ) { \n\tassert startEnds . length % NUM00 == NUM00 ; \n\t$F15277 ( ret ) for ( $F1139 ( si , startEnds ) ) { \n\t\tfinal int start = startEnds [ si ++ ] ; \n\t\tfinal int end = startEnds [ si ] ; \n\t\tassert end >= start ; \n\t\tret . ensureCapacity ( ret . size ( ) + ( ( end - start ) + NUM00 ) ) ; \n\t\tfor ( int i = start ; \n\t\ti <= end ; \n\t\ti ++ ) { \n\t\t\t$F368241 ( ret , i ) } \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "$F234188 ( webClient ) "}, {"code": "public void findAndUndo ( Object someObj ) { \n\tif ( someObj instanceof com . bbn . openmap . MapBean ) { \n\t\t$F22806 ( logger ) MapBean map = getMapBean ( ) ; \n\t\tif ( map != null && map == ( MapBean ) someObj ) $F82623 ( setMapBean ) } \n\t} \n"}, {"code": "public Timestamp recalculateEstimatedCompletionDate ( Long priority , Timestamp startDate ) { \n\tif ( exist ( ) ) { \n\t\tgetProductionRunRoutingTasks ( ) ; \n\t\t$F21009 ( quantity , getQuantity ) Timestamp endDate = null ; \n\t\tfor ( Iterator $F6260 iter = productionRunRoutingTasks . iterator ( ) ; \n\t\titer . hasNext ( ) ; \n\t\t) { \n\t\t\tGenericValue routingTask = iter . next ( ) ; \n\t\t\tif ( priority . compareTo ( routingTask . getLong ( NUM00 ) ) <= NUM00 ) { \n\t\t\t\tlong totalTime = ProductionRun . getEstimatedTaskTime ( routingTask , quantity , dispatcher ) ; \n\t\t\t\tendDate = TechDataServices . addForward ( TechDataServices . getTechDataCalendar ( routingTask ) , startDate , totalTime ) ; \n\t\t\t\t$F113827 ( routingTask , startDate ) $F113827 ( routingTask , endDate ) startDate = endDate ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn endDate ; \n\t\t} \n\telse $F1337 } \n"}, {"code": "public void addDocumentType ( DocumentType documentType ) $F207 ( mDocumentTypes , documentType ) "}, {"code": "public boolean tableExists ( DatabaseMetaData dbMetaData , String tableName ) throws SQLException { \n\treturn ( tableExistsCaseSensitive ( dbMetaData , tableName ) || tableExistsCaseSensitive ( dbMetaData , $F184776 ( tableName , Locale ) ) || tableExistsCaseSensitive ( dbMetaData , $F137650 ( tableName , Locale ) ) ) ; \n\t} \n"}, {"code": "public void testHasAttributes1 $F72 throws Throwable { \n\tDocument doc ; \n\tElement element ; \n\tNodeList elementList ; \n\tboolean hasAttributes ; \n\t$F236 ( doc , load , builder ) $F237 ( elementList , doc ) $F90846 ( element , elementList ) $F54171 ( hasAttributes , element ) assertFalse ( NUM00 , hasAttributes ) ; \n\t$F237 ( elementList , doc ) $F90846 ( element , elementList ) $F54171 ( hasAttributes , element ) assertTrue ( NUM00 , hasAttributes ) ; \n\t} \n"}, {"code": "private static Position nextTokenPos ( Position pos , Token [ ] [ ] spec ) { \n\t$F1338 ( pos ) int nextItem = pos . item + NUM00 ; \n\tif ( ( nextItem < spec [ pos . line ] . length ) && ( ( pos . line < pcalEnd . line ) || ( nextItem < pcalEnd . item ) ) ) { \n\t\treturn new Position ( pos . line , nextItem ) ; \n\t\t} \n\tint nextLine = pos . line + NUM00 ; \n\twhile ( ( nextLine < spec . length ) && ( spec [ nextLine ] . length == NUM00 ) ) { \n\t\tnextLine ++ ; \n\t\t} \n\tif ( ( nextLine < spec . length ) && ( ( nextLine < pcalEnd . line ) || ( ( nextLine == pcalEnd . line ) && ( NUM00 < pcalEnd . item ) ) ) ) { \n\t\treturn new Position ( nextLine , NUM00 ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public void update ( GL10 gl ) { \n\tif $F3817 ( taskQueue ) { \n\t\tGLResorceTask res ; \n\t\twhile $F22655 ( res , taskQueue ) { \n\t\t\tres . perform ( gl ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static $F1986 HPDInterval ( double proportion , $F1986 x , $F2027 indices ) { \n\tdouble minRange = Double . MAX_VALUE ; \n\tint hpdIndex = NUM00 ; \n\tfinal int diff = ( int ) Math . round ( proportion * $F111967 ( x ) ) ; \n\tfor ( int i = NUM00 ; \n\ti <= ( x . length - diff ) ; \n\ti ++ ) { \n\t\tfinal double minValue = x [ indices [ i ] ] ; \n\t\tfinal double maxValue = x [ indices [ i + diff - NUM00 ] ] ; \n\t\tfinal double range = Math . abs ( maxValue - minValue ) ; \n\t\t$F5322 ( range , minRange , hpdIndex , i ) } \n\treturn new double [ ] { \n\t\tx [ indices [ hpdIndex ] ] , x [ indices [ hpdIndex + diff - NUM00 ] ] } \n\t; \n\t} \n"}, {"code": "private void checkIfDirectoriesExist $F6751 ( disk_dirs ) { \n\tDiskStoreFactoryImpl . checkIfDirectoriesExist ( disk_dirs ) ; \n\t} \n"}, {"code": "$F192509 ( is , close , b , len , _BOOL , n , c , System , last ) "}, {"code": "public void addPortToAlreadyAllocatedContext ( StoragePort port , StorageHADomain haDomain , StorageSystem . Type arrayType , String switchName ) { \n\tString engine = getEngine ( port , haDomain , arrayType ) ; \n\t$F1140 ( engine , _alreadyAllocatedEngines ) String directorType = getDirectorType ( arrayType , haDomain ) ; \n\t$F1140 ( directorType , _alreadyAllocatedDirectorTypes ) String director = getDirector ( port , haDomain ) ; \n\t$F1140 ( director , _alreadyAllocatedDirectors ) String cpu = getCpu ( port , haDomain , arrayType ) ; \n\t$F1140 ( cpu , _alreadyAllocatedCpus ) $F1140 ( switchName , _alreadyAllocatedSwitches ) } \n"}, {"code": "$F1 public void drawSeries $F36949 ( canvas , paint , points , renderer , yAxisValue , seriesIndex , startIndex ) { \n\t$F14782 ( paint , renderer ) $F5597 ( paint , Style ) $F2199 ( length , points ) XYValueSeries series = ( XYValueSeries ) mDataset . getSeriesAt ( seriesIndex ) ; \n\tdouble max = series . getMaxValue ( ) ; \n\tdouble coef = MAX_BUBBLE_SIZE / max ; \n\tfor ( $F6225 ( i , length ) ) { \n\t\tdouble size = series . getValue ( startIndex + i / NUM00 ) * coef + MIN_BUBBLE_SIZE ; \n\t\tdrawCircle ( canvas , paint , points . get ( i ) , points . get ( i + NUM00 ) , ( float ) size ) ; \n\t\t} \n\t} \n"}, {"code": "public String convert $F72 { \n\tif ( s == null ) { \n\t\ttry { \n\t\t\t$F5950 ( bs , bytes ) $F5337 ( d , bs ) $F1540 ( buf , d ) $F80728 ( sHashCode , buf ) return buf ; \n\t\t\t} \n\t\tcatch ( IOException e ) $F2455 } \n\treturn s ; \n\t} \n"}, {"code": "public static void writeListOfLongs ( List list , boolean hasLongIDs , DataOutput out ) throws IOException { \n\tif ( list == null ) { \n\t\t$F150188 ( out ) } \n\telse { \n\t\t$F27636 ( out , list ) out . writeBoolean ( hasLongIDs ) ; \n\t\tfor ( $F2774 ( it , list ) ) { \n\t\t\tLong l = ( Long ) it . next ( ) ; \n\t\t\tif ( hasLongIDs ) { \n\t\t\t\tout . writeLong ( l . longValue ( ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tout . writeInt ( ( int ) l . longValue ( ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean isDefined ( Object attrName ) $F69736 ( table , attrName ) "}, {"code": "private void showPreloadingStage $F72 { \n\tStage preloadingStage = new Stage ( StageStyle . UNDECORATED ) ; \n\tpreloadingStage . initOwner ( primaryStage ) ; \n\tpreloadingStage . setScene ( new PreloadingScene $F72 ) ; \n\t$F114746 ( preloadingStage ) primaryStage . setOnShowing ( null ) ; \n\t} \n"}, {"code": "$F1 public void clear $F72 { \n\tif ( elementCount > NUM00 ) { \n\t\telementCount = NUM00 ; \n\t\t$F17838 ( Arrays , elementData ) modCount ++ ; \n\t\twhile ( referenceQueue . poll ( ) != null ) $F845 } \n\t} \n"}, {"code": "public V remove ( Object key ) { \n\tint hash = hash ( key . hashCode ( ) ) ; \n\t$F108030 s = segmentForHash ( hash ) ; \n\treturn s == null ? null : s . remove ( key , hash , null ) ; \n\t} \n"}, {"code": "public void test_copyStream_fullBlock $F72 throws IOException { \n\tfinal String id = NUM00 ; \n\tfinal int version = NUM00 ; \n\t$F6822 ( r ) $F4727 ( expected , BLOCK_SIZE ) r . nextBytes ( expected ) ; \n\tassertEquals ( NUM00 , expected . length , repo . copyStream ( id , version , new ByteArrayInputStream ( expected ) ) ) ; \n\tassertEquals ( NUM00 , NUM00 , repo . getBlockCount ( id , version ) ) ; \n\tassertSameIterator ( NUM00 , new Long $F78264 , repo . blocks ( id , version ) ) ; \n\tassertEquals ( NUM00 , expected , read ( repo . inputStream ( id , version ) ) ) ; \n\t} \n"}, {"code": "public void runTest $F72 throws Throwable { \n\tDocument doc ; \n\tNodeList elementList ; \n\tNode nameNode ; \n\tCharacterData child ; \n\tString badString ; \n\t$F236 ( doc , load , _BOOL ) $F237 ( elementList , doc ) $F238 ( nameNode , elementList ) $F241 ( child , nameNode ) { \n\t\tboolean success = _BOOL ; \n\t\ttry { \n\t\t\tbadString = child . substringData ( $F72322 ) ; \n\t\t\t} \n\t\t$F250 ( success , ex , DOMException ) assertTrue ( NUM00 , success ) ; \n\t\t} \n\t} \n"}, {"code": "private static int ipToBytes ( String ip , $F96 bytes , boolean mustHave4 ) throws IPMatcherException { \n\t$F6542 ( parts , ip ) if ( parts . length > NUM00 || mustHave4 && parts . length != NUM00 ) { \n\t\tthrow new IPMatcherException ( NUM00 + ip ) ; \n\t\t} \n\ttry { \n\t\tfor ( $F1139 ( i , parts ) ) { \n\t\t\tint p = Integer . parseInt ( parts [ i ] ) ; \n\t\t\tif $F19274 ( p ) { \n\t\t\t\tthrow new IPMatcherException ( NUM00 + ip ) ; \n\t\t\t\t} \n\t\t\tbytes [ i ] = ( byte ) ( p < NUM00 ? p : p - NUM00 ) ; \n\t\t\t} \n\t\t} \n\tcatch ( NumberFormatException nfe ) { \n\t\tthrow new IPMatcherException ( NUM00 + ip , nfe ) ; \n\t\t} \n\treturn parts . length ; \n\t} \n"}, {"code": "public static void CF2 $F50490 ( x , f , c , nx ) { \n\tint count1 = NUM00 ; \n\tint count2 = NUM00 ; \n\tdouble sum1 = NUM00 ; \n\tdouble sum2 = NUM00 ; \n\tdouble yj ; \n\tdouble N = NUM00 ; \n\tdouble a = NUM00 ; \n\tdouble t ; \n\tfor ( $F9993 ( j , nx ) ) { \n\t\t$F94025 ( yj , x , j , Math , PI , nx ) if ( j % NUM00 == NUM00 ) { \n\t\t\t$F94025 ( yj , x , j , Math , PI , nx ) sum1 += yj * yj ; \n\t\t\tcount1 ++ ; \n\t\t\t} \n\t\telse { \n\t\t\tyj = x [ j - NUM00 ] - Math . cos ( NUM00 * PI * x [ NUM00 ] + j * PI / nx ) ; \n\t\t\tsum2 += yj * yj ; \n\t\t\tcount2 ++ ; \n\t\t\t} \n\t\t} \n\t$F50506 ( f , x , sum1 , count1 ) f [ NUM00 ] = $F116006 ( Math , x ) + NUM00 * sum2 / ( double ) count2 ; \n\tt = f [ NUM00 ] + Math . sqrt ( f [ NUM00 ] ) - a * Math . sin ( N * PI * ( Math . sqrt ( f [ NUM00 ] ) - f [ NUM00 ] + NUM00 ) ) - NUM00 ; \n\tc [ NUM00 ] = MYSIGN ( t ) * Math . abs ( t ) / ( NUM00 + Math . exp ( NUM00 * Math . abs ( t ) ) ) ; \n\t} \n"}, {"code": "protected void reply ( RequestContext context , String key , String message ) { \n\ttry { \n\t\tHttpServletRequest request = context . getRequest ( ) ; \n\t\tString filename = request . getRemoteAddr ( ) ; \n\t\tend ( filename , key , message ) ; \n\t\t} \n\t$F3957 } \n"}, {"code": "protected void addHeaders ( HttpURLConnection connection , String tenantId ) { \n\tif ( tenantId == null ) { \n\t\ttenantId = PropertyUtil . getProperty ( PropertyUtil . HAWKULAR_TENANT ) ; \n\t\t} \n\tif ( tenantId != null ) { \n\t\tconnection . setRequestProperty ( HAWKULAR_TENANT , tenantId ) ; \n\t\t} \n\tif ( authorization == null && username != null ) { \n\t\tString authString = username + NUM00 + password ; \n\t\tString encoded = encoder . encodeToString ( authString . getBytes ( ) ) ; \n\t\tauthorization = NUM00 + encoded ; \n\t\t} \n\tif ( authorization != null ) { \n\t\t$F197920 ( connection , authorization ) } \n\t} \n"}, {"code": "public void addLongSelectionListener ( SelectionListener listener ) { \n\t$F10057 ( listener ) if ( hexEditControl == null ) { \n\t\t$F21432 ( listOfLongListeners ) listOfLongListeners . add ( listener ) ; \n\t\t} \n\telse { \n\t\thexEditControl . addLongSelectionListener ( listener ) ; \n\t\t} \n\t} \n"}, {"code": "public void println $F72 throws IOException { \n\tout . write ( strategy . getPrinterNewline ( ) ) ; \n\tnewLine = _BOOL ; \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\t$F83 ( sb ) $F84 ( sb ) boolean firstTime = _BOOL ; \n\tfor ( Entry $F20665 entry : mCapabilities . entrySet ( ) ) { \n\t\t$F87 ( firstTime , _BOOL , sb ) $F79971 ( sb , entry ) $F84 ( sb ) $F79973 ( sb , entry ) $F84 ( sb ) $F92 ( mCapabilities ) } \n\t$F92 ( sb ) } \n"}, {"code": "$F120210 ( maximumPullScroll , getMaximumPullScroll , pLeft , getPaddingLeft , pTop , getPaddingTop , pRight , getPaddingRight , pBottom , getPaddingBottom , getPullToRefreshScrollDirection , HORIZONTAL , mMode , mHeaderLayout , mFooterLayout , VERTICAL , DEBUG , Log , LOG_TAG , String , setPadding ) "}, {"code": "public Debug ( String clientID , ClientComms comms ) { \n\tthis . clientID = clientID ; \n\tthis . comms = comms ; \n\tlog . setResourceName ( clientID ) ; \n\t} \n"}, {"code": "protected String alterCase ( String value ) { \n\tswitch ( getCase ( ) ) { \n\t\tcase UPPERCASE : return value . toUpperCase ( ) ; \n\t\tcase LOWERCASE : $F32484 ( value ) $F1267 return value ; \n\t\t} \n\t} \n"}, {"code": "private boolean isAckRequired $F72 { \n\treturn this . ackRequired ; \n\t} \n"}, {"code": "$F1 public synchronized String toString $F72 { \n\t$F40722 ( elementCount ) int length = elementCount - NUM00 ; \n\tStringBuffer buffer = new StringBuffer ( elementCount * NUM00 ) ; \n\t$F84 ( buffer ) for ( $F119 ( i , length ) ) { \n\t\t$F40728 ( elementData , i , this , buffer ) $F84 ( buffer ) } \n\t$F40728 ( elementData , length , this , buffer ) $F84 ( buffer ) $F92 ( buffer ) } \n"}, {"code": "void addReporter $F36827 ( textReporter , xx , yy ) { \n\tReporterIcon l = new ReporterIcon ( this ) ; \n\tl . setReporter ( textReporter ) ; \n\tl . setLocation ( xx , yy ) ; \n\tl . setSize ( $F29854 ( l ) , $F320997 ( l ) ) ; \n\tl . setDisplayLevel ( LABELS ) ; \n\tsetDirty ( _BOOL ) ; \n\tputItem ( l ) ; \n\t} \n"}, {"code": "private void drawSelectionRectangle ( Graphics2D g2 ) { \n\tif ( this . selectionRectangle != null ) { \n\t\tif ( this . fillSelectionRectangle ) { \n\t\t\tg2 . setPaint ( this . selectionFillPaint ) ; \n\t\t\tg2 . fill ( selectionRectangle ) ; \n\t\t\t} \n\t\telse { \n\t\t\tg2 . setPaint ( this . selectionOutlinePaint ) ; \n\t\t\tg2 . draw ( selectionRectangle ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F23145 ( measureSpec , result , specMode , MeasureSpec , specSize , mRadius , getPaddingTop , getPaddingBottom , Math ) "}, {"code": "public ConversionException ( final Throwable cause ) { \n\t$F3270 ( super , cause ) this . cause = cause ; \n\t} \n"}, {"code": "private boolean hasConnectivityToAllSystems ( Initiator initiator , $F46217 storageSystems , ExportGroup exportGroup ) { \n\treturn hasConnectivityToAllSystems ( initiator , storageSystems , null , exportGroup ) ; \n\t} \n"}, {"code": "$F1 public boolean onTouchEvent ( MotionEvent event ) { \n\t$F18937 ( isEnabled , _BOOL ) int pointerIndex ; \n\t$F19472 ( action , event ) switch ( action & MotionEvent . ACTION_MASK ) { \n\t\tcase MotionEvent . ACTION_DOWN : $F19476 ( mActivePointerId , event ) pointerIndex = event . findPointerIndex ( mActivePointerId ) ; \n\t\tmDownMotionX = event . getX ( pointerIndex ) ; \n\t\tpressedThumb = evalPressedThumb ( mDownMotionX ) ; \n\t\tif ( pressedThumb == null ) $F19497 ( super , event ) setPressed ( _BOOL ) ; \n\t\tinvalidate ( ) ; \n\t\tonStartTrackingTouch ( ) ; \n\t\ttrackTouchEvent ( event ) ; \n\t\tattemptClaimDrag ( ) ; \n\t\t$F597 case MotionEvent . ACTION_MOVE : if ( pressedThumb != null ) { \n\t\t\t$F222012 ( mIsDragging , trackTouchEvent , event , pointerIndex , mActivePointerId , x , Math , mDownMotionX , mScaledTouchSlop , setPressed , _BOOL , invalidate , onStartTrackingTouch , attemptClaimDrag ) $F19513 ( notifyWhileDragging , listener , this , getSelectedMinValue , getSelectedMaxValue ) } \n\t\t$F597 case MotionEvent . ACTION_UP : $F222018 ( mIsDragging , trackTouchEvent , event , onStopTrackingTouch , setPressed , _BOOL , onStartTrackingTouch ) pressedThumb = null ; \n\t\tinvalidate ( ) ; \n\t\t$F19521 ( listener , this , getSelectedMinValue , getSelectedMaxValue ) $F597 $F222021 ( MotionEvent , index , event , mDownMotionX , mActivePointerId , invalidate ) $F222022 ( MotionEvent , onSecondaryPointerUp , event , invalidate ) $F222023 ( MotionEvent , mIsDragging , onStopTrackingTouch , setPressed , _BOOL , invalidate ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "private Derivation $F247984 constructDerivation ( Derivation $F247984 markedNode , int sourceInputId , FeatureExtractor $F247984 featurizer , Scorer < FV > scorer , SearchHeuristic $F247984 heuristic , OutputSpace $F247984 outputSpace ) { \n\tfinal List $F457453 $F19827 ( nodes ) ; \n\tDerivation $F247984 p = markedNode ; \n\twhile ( p != null ) { \n\t\t$F6965 ( nodes , p ) p = p . parent ; \n\t\t} \n\tp = markedNode . bestChild ; \n\twhile ( p != null ) { \n\t\tnodes . add ( p ) ; \n\t\tp = p . bestChild ; \n\t\t} \n\tDerivation $F247984 goalHyp = null ; \n\tfor ( Derivation $F247984 node : nodes ) { \n\t\tgoalHyp = goalHyp == null ? node : new Derivation $F200 ( sourceInputId , node . rule , goalHyp . length , goalHyp , featurizer , scorer , heuristic , outputSpace ) ; \n\t\t} \n\treturn goalHyp ; \n\t} \n"}, {"code": "public void testPlusMathContextPositive $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\tint precision = NUM00 ; \n\tRoundingMode rm = RoundingMode . FLOOR ; \n\t$F9512 ( mc , precision , rm ) String c = NUM00 ; \n\tint cScale = NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) BigDecimal res = aNumber . plus ( mc ) ; \n\t$F1925 ( assertEquals , c , res ) $F1928 ( assertEquals , cScale , res ) } \n"}, {"code": "public void testRadix24Neg $F72 $F214959 ( value , radix , aNumber , result , assertTrue ) "}, {"code": "private static IAbstractNode convertOr ( final CommonTree ast ) throws RecognitionException { \n\tfinal List < IAbstractNode > children = new ArrayList < IAbstractNode > $F72 ; \n\tfor ( final Object childObject : ast . getChildren ( ) ) { \n\t\tchildren . add ( convert ( ( CommonTree ) childObject ) ) ; \n\t\t} \n\treturn new CAbstractOrExpression ( children ) ; \n\t} \n"}, {"code": "public JDialog displayPanelInWindow ( final JPanel panel , String title ) { \n\tJDialog frame = new GenericJDialog $F72 ; \n\tframe . setContentPane ( panel ) ; \n\t$F30070 ( frame ) frame . setTitle ( title ) ; \n\tframe . setVisible ( _BOOL ) ; \n\treturn frame ; \n\t} \n"}, {"code": "$F32186 ( reader , this , _BOOL ) "}, {"code": "public static void compress $F72 { \n\tString s = BinaryStdIn . readString ( ) ; \n\t$F7782 ( input , s ) $F4120 ( freq , R ) for ( $F1139 ( i , input ) ) freq [ input [ i ] ] ++ ; \n\tNode root = buildTrie ( freq ) ; \n\t$F12914 ( st , R ) buildCode ( st , root , NUM00 ) ; \n\twriteTrie ( root ) ; \n\tBinaryStdOut . write ( input . length ) ; \n\tfor ( $F1139 ( i , input ) ) { \n\t\tString code = st [ input [ i ] ] ; \n\t\tfor ( $F1088 ( j , code ) ) { \n\t\t\tif $F11983 ( code , j ) $F4050 ( BinaryStdOut , _BOOL ) else if $F11983 ( code , j ) $F4050 ( BinaryStdOut , _BOOL ) else $F4638 } \n\t\t} \n\t$F59 ( BinaryStdOut ) } \n"}, {"code": "public Builder withTokenizer ( Class < ? extends TokenizerFactory > factory , $F2540 ( params ) ) throws IOException { \n\t$F10578 ( Objects , factory ) tokenizer . set ( applyResourceLoader ( newFactoryClassInstance ( factory , applyDefaultParams ( params ) ) ) ) ; \n\tcomponentsAdded = _BOOL ; \n\treturn this ; \n\t} \n"}, {"code": "protected double computeAzimuthLabelOffset ( double radius , double maxRadius ) { \n\treturn Math . asin ( AZIMUTH_LABEL_OFFSET * maxRadius / radius ) ; \n\t} \n"}, {"code": "protected void addResource ( List defaults , String bundleName ) { \n\tResourceBundle bundle = ResourceBundle . getBundle ( bundleName ) ; \n\tfor ( Enumeration keys = bundle . getKeys ( ) ; \n\tkeys . hasMoreElements ( ) ; \n\t) { \n\t\t$F14952 ( key , keys ) defaults . add ( key ) ; \n\t\tdefaults . add ( bundle . getObject ( key ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void displayChanged $F72 $F7429 ( executeDisplayChangedOnEDT , getGraphicsConfiguration ) "}, {"code": "$F1 public String toString $F72 { \n\t$F83 ( sb ) Calendar dateTime = new GregorianCalendar ( GMT ) ; \n\tlong localTime = value ; \n\tif ( tzShift != null ) { \n\t\tlocalTime += tzShift . longValue ( ) * NUM00 ; \n\t\t} \n\tdateTime . setTimeInMillis ( localTime ) ; \n\ttry { \n\t\tappendInt ( sb , $F21621 ( dateTime , Calendar ) , NUM00 ) ; \n\t\t$F84 ( sb ) appendInt ( sb , $F21623 ( dateTime , Calendar ) + NUM00 , NUM00 ) ; \n\t\t$F84 ( sb ) appendInt ( sb , $F21625 ( dateTime , Calendar ) , NUM00 ) ; \n\t\tif ( ! dateOnly ) { \n\t\t\t$F84 ( sb ) appendInt ( sb , $F13065 ( dateTime , Calendar ) , NUM00 ) ; \n\t\t\t$F84 ( sb ) appendInt ( sb , $F21629 ( dateTime , Calendar ) , NUM00 ) ; \n\t\t\t$F84 ( sb ) appendInt ( sb , $F21631 ( dateTime , Calendar ) , NUM00 ) ; \n\t\t\tif ( dateTime . isSet ( Calendar . MILLISECOND ) ) { \n\t\t\t\t$F84 ( sb ) appendInt ( sb , $F59274 ( dateTime , Calendar ) , NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( tzShift != null ) { \n\t\t\tif ( $F179074 ( tzShift ) ) $F86 ( sb ) else { \n\t\t\t\t$F79839 ( absTzShift , tzShift ) if ( tzShift > NUM00 ) $F86 ( sb ) else { \n\t\t\t\t\t$F84 ( sb ) absTzShift = - absTzShift ; \n\t\t\t\t\t} \n\t\t\t\tint tzHours = absTzShift / NUM00 ; \n\t\t\t\tint tzMinutes = absTzShift % NUM00 ; \n\t\t\t\tappendInt ( sb , tzHours , NUM00 ) ; \n\t\t\t\t$F84 ( sb ) appendInt ( sb , tzMinutes , NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( ArrayIndexOutOfBoundsException e ) $F9491 ( e ) $F92 ( sb ) } \n"}, {"code": "private static Stream < Method > extractMethods ( Class clazz ) { \n\ttry { \n\t\t$F23596 methods = clazz . getMethods ( ) ; \n\t\tif $F3305 ( methods ) { \n\t\t\t$F122628 ( Stream , methods ) } \n\t\t} \n\tcatch ( Exception | Error e ) $F66732 ( LOG , clazz , e ) $F21169 ( Stream ) } \n"}, {"code": "$F1 public void updateServerAddress ( Application application , String dockerManagerIP , String serverPort , String serverManagerPort ) { \n\tString suffixCloudUnit = application . getSuffixCloudUnitIO ( ) ; \n\tJedisPool pool = null ; \n\tJedis jedis = null ; \n\ttry { \n\t\tpool = new JedisPool ( new JedisPoolConfig $F72 , redisIp , Integer . parseInt ( redisPort ) , NUM00 ) ; \n\t\tjedis = pool . getResource ( ) ; \n\t\tString subNameSpace = concatSubNameSpace ( application ) ; \n\t\tString key = subNameSpace + suffixCloudUnit ; \n\t\tString frontend = $F188906 ( key ) ; \n\t\tjedis . lset ( frontend , NUM00 , NUM00 + dockerManagerIP + NUM00 + serverPort ) ; \n\t\tString frontendServerManager = $F188906 ( key ) ; \n\t\tjedis . lset ( frontendServerManager , NUM00 , NUM00 + dockerManagerIP + NUM00 + serverManagerPort ) ; \n\t\t} \n\tcatch ( JedisConnectionException | UnsupportedEncodingException e ) $F5198 ( logger , e ) finally { \n\t\tif ( jedis != null ) $F17624 ( pool ) } \n\t} \n"}, {"code": "protected void remove ( int itemPosition ) { \n\tif ( itemPosition >= NUM00 && itemPosition < getItemCount ( ) ) $F106 ( list , itemPosition ) } \n"}, {"code": "protected String chooseRandomEnemys $F72 { \n\tfinal $F3803 enemyList = new $F28830 $F57797 ( enemyForces ) ; \n\t$F10162 ( enemySize , enemyList ) final int position = Rand . rand ( enemySize ) ; \n\t$F8313 ( enemyList , position ) } \n"}, {"code": "public boolean isRouteToDestValid ( Block protecting , Block destination ) { \n\tif ( protecting == destination ) { \n\t\t$F980 ( log ) if ( getAdjacency ( protecting ) != null ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\telse if ( getValidRoute ( protecting , destination ) != null ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void sortPools ( $F37270 storagePools ) { \n\t_portMetricsProcessor . computeStoragePoolsAvgPortMetrics ( storagePools ) ; \n\tCollections . sort ( storagePools , _storagePoolComparator ) ; \n\t} \n"}, {"code": "public RhythmGroup addOverlays ( Collection < RhythmOverlay > overlays ) { \n\tmOverlays . addAll ( overlays ) ; \n\tif ( mCurrentOverlayIndex == NO_OVERLAY ) $F73598 ( selectOverlay ) return this ; \n\t} \n"}, {"code": "public static Resource forPath ( final String path ) throws UnknownResourceException { \n\tResource resource ; \n\tif ( path . startsWith ( ClasspathResource . PREFIX + NUM00 ) ) { \n\t\tresource = new ClasspathResource ( path ) ; \n\t\t} \n\telse if ( path . startsWith ( FileResource . PREFIX + NUM00 ) ) { \n\t\tresource = new FileResource ( path ) ; \n\t\t} \n\telse { \n\t\tresource = forPath ( FileResource . PREFIX + NUM00 + path ) ; \n\t\t} \n\treturn resource ; \n\t} \n"}, {"code": "private static boolean isOlderThanLeopard $F72 { \n\t$F27462 ( version , System ) $F17727 ( tk , version ) $F24697 ( major , Integer , tk ) $F24697 ( minor , Integer , tk ) return major == NUM00 && minor < NUM00 ; \n\t} \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F20795 ( newVector ) $F1000 ( newVector ) $F1000 ( newVector ) $F9007 ( newVector ) $F9007 ( newVector ) $F1000 ( newVector ) $F1000 ( newVector ) $F9007 ( newVector ) $F9010 ( newVector , Collections , super ) $F1007 ( newVector ) } \n"}, {"code": "public static String xmlContentEscape ( String s ) { \n\t$F83 ( sb ) for ( $F1088 ( i , s ) ) { \n\t\t$F1280 ( c , s , i ) switch ( c ) { \n\t\t\t$F2999 ( sb ) $F2999 ( sb ) $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F597 $F38142 ( sb , c ) } \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "private void feedForward ( Vec input , List < Vec > activations , List < Vec > derivatives ) { \n\tVec x = input ; \n\tfor ( $F2277 ( i , Ws ) ) { \n\t\tMatrix W_i = Ws . get ( i ) ; \n\t\tVec b_i = bs . get ( i ) ; \n\t\tVec a_i = activations . get ( i ) ; \n\t\ta_i . zeroOut ( ) ; \n\t\tW_i . multiply ( x , NUM00 , a_i ) ; \n\t\ta_i . mutableAdd ( b_i ) ; \n\t\ta_i . applyFunction ( f ) ; \n\t\tVec d_i = derivatives . get ( i ) ; \n\t\ta_i . copyTo ( d_i ) ; \n\t\td_i . applyFunction ( f . getD ( ) ) ; \n\t\tx = a_i ; \n\t\t} \n\t} \n"}, {"code": "private File findFile ( File directory , String name ) throws FileNotFoundException { \n\t$F4453 ( file , directory , name ) if $F3428 ( file ) { \n\t\treturn file ; \n\t\t} \n\tfor ( String child : directory . list ( ) ) { \n\t\tif $F8397 ( child , name ) { \n\t\t\treturn new File ( directory , child ) ; \n\t\t\t} \n\t\t} \n\t$F352240 ( file ) } \n"}, {"code": "public static boolean compareResults ( SolrClient controlClient , SolrClient cloudClient ) throws SolrServerException , IOException { \n\t$F37759 ( compareResults , controlClient , cloudClient ) } \n"}, {"code": "public $F5 GetElementList ( String xPathExpression ) { \n\ttry { \n\t\t$F8728 ( values ) $F11654 nodeList = XPath . selectNodes ( this . xmlDocument , xPathExpression ) ; \n\t\t$F33242 ( iter , nodeList ) while $F2921 ( iter ) { \n\t\t\torg . jdom . Element element = ( org . jdom . Element ) iter . next ( ) ; \n\t\t\tvalues . add ( element . getText ( ) ) ; \n\t\t\t} \n\t\treturn values ; \n\t\t} \n\tcatch ( Exception ex ) { \n\t\t$F36591 ( LOG , ex ) $F1274 } \n\t} \n"}, {"code": "public static CLContext createContextFromCurrentGL $F72 { \n\tRuntimeException first = null ; \n\tfor ( CLPlatform platform : listPlatforms ( ) ) { \n\t\ttry { \n\t\t\tCLContext ctx = platform . createContextFromCurrentGL ( ) ; \n\t\t\t$F60730 ( ctx ) } \n\t\tcatch ( RuntimeException ex ) { \n\t\t\t$F22996 ( first , ex ) } \n\t\t} \n\t$F7076 ( first ) } \n"}, {"code": "public void collapseTree $F72 { \n\tfor ( int i = NUM00 ; \n\ti < tree . getRowCount ( ) ; \n\t++ i ) { \n\t\ttree . collapseRow ( i ) ; \n\t\t} \n\t} \n"}, {"code": "static void queuePlayerCapeReplacement ( AbstractClientPlayer player ) { \n\tfinal String displayName = player . getDisplayNameString ( ) ; \n\t$F10635 ( Logger , displayName ) THREAD_POOL . submit ( null ) ; \n\t} \n"}, {"code": "public void removeVetoableChangeListener ( VetoableChangeListener listener ) { \n\tif ( listener != null ) { \n\t\tsynchronized ( this ) { \n\t\t\tif ( vetoableSupport != null ) { \n\t\t\t\tvetoableSupport . removeVetoableChangeListener ( listener ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public StreamThroughput ( String statusMessagePrefix ) { \n\tm_instanceCount = NUM00 ; \n\tm_sampleCount = NUM00 ; \n\tm_numSamples = NUM00 ; \n\tm_cumulativeTime = NUM00 ; \n\t$F3224 ( m_startTime , System ) m_statusMessagePrefix = statusMessagePrefix ; \n\t} \n"}, {"code": "protected void parseCommand $F74419 ( args ) { \n\tfor ( String arg : args ) { \n\t\tfinal Command command = Command . valueOfName ( arg ) ; \n\t\tif ( command != null ) $F87181 ( setCommand , command ) } \n\t} \n"}, {"code": "@ RequestMapping ( $F3144 , method = RequestMethod . PUT ) public ResponseEntity < Bookmark > editBookmark ( @ PathVariable ( $F3144 ) String username , @ PathVariable ( $F3144 ) int bookmarkId , $F151143 String json ) throws IOException , BookmarkNotFoundException , IllegalAccessException , InvocationTargetException { \n\tOptional < Bookmark > optional = bookmarksRepository . findByIdAndUserUsername ( bookmarkId , username ) ; \n\tif $F16464 ( optional ) { \n\t\t$F44214 ( mapper ) $F2539 changeMap = mapper . readValue ( json , HashMap . class ) ; \n\t\tBookmark bookmark = optional . get ( ) ; \n\t\tBeanUtils . populate ( bookmark , changeMap ) ; \n\t\tbookmark = bookmarksRepository . save ( bookmark ) ; \n\t\treturn new $F151149 ( bookmark , HttpStatus . OK ) ; \n\t\t} \n\telse { \n\t\tthrow new BookmarkNotFoundException ( NUM00 + bookmarkId ) ; \n\t\t} \n\t} \n"}, {"code": "$F28896 ( index , paint , bounds , title , getTitle ) "}, {"code": "public static String convertFromUtf32 $F74721 ( text , startPos , endPos ) { \n\t$F83 ( sb ) for ( int i = startPos ; \n\ti < endPos ; \n\ti ++ ) { \n\t\t$F29840 ( sb , convertFromUtf32ToCharArray , text , i ) } \n\t$F92 ( sb ) } \n"}, {"code": "public void createBounds $F72 { \n\tif ( isEmpty ( ) || hasSingleElement ( ) ) $F36980 ( mBounds ) int l = Integer . MAX_VALUE ; \n\tint t = Integer . MAX_VALUE ; \n\tint r = NUM00 ; \n\tint b = NUM00 ; \n\tfor ( Selection . Element selection : getElements ( ) ) { \n\t\tConstraintWidget w = selection . widget ; \n\t\tl = Math . min ( w . getDrawX ( ) , l ) ; \n\t\tt = Math . min ( w . getDrawY ( ) , t ) ; \n\t\tr = Math . max ( w . getDrawRight ( ) , r ) ; \n\t\tb = Math . max ( w . getDrawBottom ( ) , b ) ; \n\t\t} \n\tConstraintWidget bounds = new ConstraintWidget ( l , t , r - l , b - t ) ; \n\tbounds . setCompanionWidget ( WidgetCompanion . create ( bounds ) ) ; \n\tmBounds = new Element ( bounds ) ; \n\tupdateOriginFromBounds ( ) ; \n\t} \n"}, {"code": "$F63065 ( row , start , counters , numCounters , Arrays , end , NotFoundException , isWhite , counterPosition , i ) "}, {"code": "public static $F131 findMethodWithListParameters ( Object service , String methodName , $F11654 args ) { \n\t$F130560 ( arguments , args ) $F58400 ( i , args , arguments ) return findMethodWithListParameters ( service , methodName , arguments ) ; \n\t} \n"}, {"code": "static int firstIllegalCharacter ( String source ) { \n\tfor ( $F1088 ( i , source ) ) { \n\t\tif ( isLegal ( source . charAt ( i ) ) == _BOOL ) { \n\t\t\treturn i ; \n\t\t\t} \n\t\t} \n\t$F150 } \n"}, {"code": "private CoderResult decodeByteBufferToCharacterBuffer ( boolean endOfInput ) throws DecodingException { \n\t$F14257 ( buffer ) return decodeMoreBytesToCharacterBuffer ( endOfInput ) ; \n\t} \n"}, {"code": "protected void newFastClockMinute $F72 { \n\tfor ( $F5373 ( i , delayedTrains ) ) { \n\t\tActiveTrain at = delayedTrains . get ( i ) ; \n\t\tif ( ( ! at . getStarted ( ) ) && at . getDelayedStart ( ) != ActiveTrain . NODELAY ) { \n\t\t\tif ( at . getDelayedStart ( ) == ActiveTrain . TIMEDDELAY ) { \n\t\t\t\tif ( isFastClockTimeGE ( at . getDepartureTimeHr ( ) , at . getDepartureTimeMin ( ) ) ) { \n\t\t\t\t\tat . setStarted ( ) ; \n\t\t\t\t\tdelayedTrains . remove ( i ) ; \n\t\t\t\t\tif ( _AutoAllocate ) { \n\t\t\t\t\t\tautoAllocate . scanAllocationRequestList ( allocationRequests ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( at . getStarted ( ) && at . getStatus ( ) == ActiveTrain . READY && at . reachedRestartPoint ( ) ) { \n\t\t\tif ( isFastClockTimeGE ( at . getRestartDepartHr ( ) , at . getRestartDepartMin ( ) ) ) { \n\t\t\t\t$F31134 ( at ) delayedTrains . remove ( i ) ; \n\t\t\t\tif ( _AutoAllocate ) { \n\t\t\t\t\tautoAllocate . scanAllocationRequestList ( allocationRequests ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void add ( final CreatureRespawnPoint point ) $F207 ( respawnPoints , point ) "}, {"code": "private void loadOrgAccessRole ( ArrayList < OrgAccess > list ) { \n\tPreparedStatement pstmt = null ; \n\tResultSet rs = null ; \n\tString sql = NUM00 + NUM00 ; \n\ttry { \n\t\t$F213538 ( pstmt , DB , sql , get_TrxName ) pstmt . setInt ( NUM00 , getAD_Role_ID ( ) ) ; \n\t\t$F47578 ( rs , pstmt ) while $F1682 ( rs ) { \n\t\t\tMRoleOrgAccess oa = new MRoleOrgAccess ( getCtx ( ) , rs , get_TrxName ( ) ) ; \n\t\t\tloadOrgAccessAdd ( list , new OrgAccess ( oa . getAD_Client_ID ( ) , oa . getAD_Org_ID ( ) , oa . isReadOnly ( ) ) ) ; \n\t\t\t} \n\t\t} \n\t$F230362 ( log , Level , sql , e ) finally $F161384 ( DB , rs , pstmt ) } \n"}, {"code": "public void testBytesAsSource $F72 throws Exception { \n\tString JSON = NUM00 ; \n\t$F151317 ( b , JSON ) int offset = NUM00 ; \n\tint len = b . length ; \n\t$F96 src = new byte [ offset + len + offset ] ; \n\t$F6483 ( System , b , src , offset , len ) JsonFactory jf = new JsonFactory $F72 ; \n\tJsonParser jp = jf . createJsonParser ( src , offset , len ) ; \n\tassertToken ( JsonToken . START_ARRAY , jp . nextToken ( ) ) ; \n\tassertToken ( JsonToken . VALUE1BER_INT , jp . nextToken ( ) ) ; \n\tassertEquals ( NUM00 , jp . getIntValue ( ) ) ; \n\tassertToken ( JsonToken . VALUE1BER_INT , jp . nextToken ( ) ) ; \n\tassertEquals ( NUM00 , jp . getIntValue ( ) ) ; \n\tassertToken ( JsonToken . VALUE1BER_INT , jp . nextToken ( ) ) ; \n\tassertEquals ( NUM00 , jp . getIntValue ( ) ) ; \n\tassertToken ( JsonToken . VALUE1BER_INT , jp . nextToken ( ) ) ; \n\tassertEquals ( NUM00 , jp . getIntValue ( ) ) ; \n\tassertToken ( JsonToken . END_ARRAY , jp . nextToken ( ) ) ; \n\t$F67384 ( assertNull , jp ) ; \n\t$F59 ( jp ) } \n"}, {"code": "public $F132633 engineGenerateCertificate ( InputStream in ) throws CertificateException { \n\tif ( currentStream == null ) $F132634 ( currentStream , in , sData , sDataObjectCount ) else if ( currentStream != in ) $F132634 ( currentStream , in , sData , sDataObjectCount ) try { \n\t\tif ( sData != null ) { \n\t\t\tif $F39465 ( sDataObjectCount , sData ) $F2905 ( getCertificate ) else { \n\t\t\t\tsData = null ; \n\t\t\t\tsDataObjectCount = NUM00 ; \n\t\t\t\t$F1274 } \n\t\t\t} \n\t\tPushbackInputStream pis = new PushbackInputStream ( in ) ; \n\t\t$F7468 ( tag , pis ) $F132643 ( tag ) pis . unread ( tag ) ; \n\t\tif ( tag != NUM00 ) $F4915 ( readPEMCertificate , pis ) else { \n\t\t\treturn readDERCertificate ( new ASN1InputStream ( pis ) ) ; \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new ExCertificateException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public String toString ( Object value ) $F4915 ( toPrettyString , value ) "}, {"code": "$F1 public $F37278 generateRollingPeriods ( DateTimeUnit dateTimeUnit ) { \n\tCalendar cal = getCalendar ( ) ; \n\t$F37280 ( dateTimeUnit ) dateTimeUnit = cal . minusMonths ( dateTimeUnit , NUM00 ) ; \n\t$F37282 ( periods , Lists ) for ( $F6268 ( i ) ) { \n\t\t$F12366 ( periods , createPeriod , dateTimeUnit , cal ) dateTimeUnit = cal . plusMonths ( dateTimeUnit , NUM00 ) ; \n\t\t} \n\treturn periods ; \n\t} \n"}, {"code": "$F1431 public synchronized T findCounter ( $F40588 counterKey ) throws IllegalAccessException , InstantiationException { \n\t$F6391 ( counter , cache , counterKey ) if ( counter == null ) { \n\t\t$F33943 ( counter , counterType ) cache . put ( counterKey , counter ) ; \n\t\t} \n\treturn counter ; \n\t} \n"}, {"code": "public static Uri addMessageToUri ( ContentResolver resolver , Uri uri , String address , String body , String subject , Long date , boolean read , boolean deliveryReport , long threadId ) { \n\t$F41874 ( values ) values . put ( Sms . ADDRESS , address ) ; \n\tif ( date != null ) { \n\t\tvalues . put ( Sms . DATE , date ) ; \n\t\t} \n\tvalues . put ( Sms . READ , read ? Integer . valueOf ( NUM00 ) : Integer . valueOf ( NUM00 ) ) ; \n\tvalues . put ( Sms . SUBJECT , subject ) ; \n\tvalues . put ( Sms . BODY , body ) ; \n\tif ( deliveryReport ) { \n\t\tvalues . put ( Sms . STATUS , Sms . STATUS_PENDING ) ; \n\t\t} \n\tif ( threadId != - NUM00 ) { \n\t\tvalues . put ( Sms . THREAD_ID , threadId ) ; \n\t\t} \n\treturn resolver . insert ( uri , values ) ; \n\t} \n"}, {"code": "public void runTest $F72 throws Throwable { \n\tDocument doc ; \n\tNodeList elementList ; \n\tNode nameNode ; \n\tCharacterData child ; \n\tString childData ; \n\t$F236 ( doc , load , _BOOL ) $F237 ( elementList , doc ) $F238 ( nameNode , elementList ) $F241 ( child , nameNode ) $F4055 ( childData , child ) assertEquals ( NUM00 , NUM00 , childData ) ; \n\t} \n"}, {"code": "protected void engineSetMode ( String mode ) { \n\tif $F14072 ( mode ) $F18931 ( mode ) } \n"}, {"code": "private void computeDoublesForAllZoomLevels $F72 { \n\tint numFrames = mSoundFile . getNumFrames ( ) ; \n\t$F2027 frameGains = mSoundFile . getFrameGains ( ) ; \n\t$F9662 ( smoothedGains , numFrames ) if ( numFrames == NUM00 ) { \n\t\t$F603 ( smoothedGains , frameGains ) } \n\telse if ( numFrames == NUM00 ) $F232808 ( smoothedGains , frameGains ) else if ( numFrames > NUM00 ) { \n\t\tsmoothedGains [ NUM00 ] = ( double ) ( ( frameGains [ NUM00 ] / NUM00 ) + ( frameGains [ NUM00 ] / NUM00 ) ) ; \n\t\tfor ( $F4864 ( i , numFrames ) ) { \n\t\t\tsmoothedGains [ i ] = ( double ) ( ( frameGains [ i - NUM00 ] / NUM00 ) + ( frameGains [ i ] / NUM00 ) + ( frameGains [ i + NUM00 ] / NUM00 ) ) ; \n\t\t\t} \n\t\tsmoothedGains [ numFrames - NUM00 ] = ( double ) ( ( frameGains [ numFrames - NUM00 ] / NUM00 ) + ( frameGains [ numFrames - NUM00 ] / NUM00 ) ) ; \n\t\t} \n\tdouble maxGain = NUM00 ; \n\tfor ( $F119 ( i , numFrames ) ) { \n\t\tif ( smoothedGains [ i ] > maxGain ) { \n\t\t\tmaxGain = smoothedGains [ i ] ; \n\t\t\t} \n\t\t} \n\tdouble scaleFactor = NUM00 ; \n\tif ( maxGain > NUM00 ) { \n\t\tscaleFactor = NUM00 / maxGain ; \n\t\t} \n\tmaxGain = NUM00 ; \n\tint gainHist [ ] = $F4468 ; \n\tfor ( $F119 ( i , numFrames ) ) { \n\t\tint smoothedGain = ( int ) ( smoothedGains [ i ] * scaleFactor ) ; \n\t\t$F26242 ( smoothedGain ) $F127072 ( smoothedGain ) $F15468 ( smoothedGain , maxGain ) gainHist [ smoothedGain ] ++ ; \n\t\t} \n\tdouble minGain = NUM00 ; \n\tint sum = NUM00 ; \n\twhile ( minGain < NUM00 && sum < numFrames / NUM00 ) { \n\t\tsum += gainHist [ ( int ) minGain ] ; \n\t\tminGain ++ ; \n\t\t} \n\tsum = NUM00 ; \n\twhile ( maxGain > NUM00 && sum < numFrames / NUM00 ) { \n\t\tsum += gainHist [ ( int ) maxGain ] ; \n\t\tmaxGain -- ; \n\t\t} \n\t$F9662 ( heights , numFrames ) double range = maxGain - minGain ; \n\tfor ( $F119 ( i , numFrames ) ) { \n\t\tdouble value = ( smoothedGains [ i ] * scaleFactor - minGain ) / range ; \n\t\t$F26242 ( value ) $F127072 ( value ) heights [ i ] = value * value ; \n\t\t} \n\talgo ( mSoundFile . getNumFrames ( ) ) ; \n\t$F152626 ( totalZooms , algoValues ) ; \n\tmNumZoomLevels = totalZooms ; \n\t$F3936 ( mLenByZoomLevel , totalZooms ) $F10254 ( mZoomFactorByZoomLevel , totalZooms ) mValuesByZoomLevel = new double [ totalZooms ] [ ] ; \n\tmLenByZoomLevel [ NUM00 ] = numFrames * NUM00 ; \n\tmZoomFactorByZoomLevel [ NUM00 ] = NUM00 ; \n\tmValuesByZoomLevel [ NUM00 ] = new double [ mLenByZoomLevel [ NUM00 ] ] ; \n\tif ( numFrames > NUM00 ) { \n\t\tmValuesByZoomLevel [ NUM00 ] [ NUM00 ] = NUM00 * heights [ NUM00 ] ; \n\t\t$F400280 ( mValuesByZoomLevel , heights ) } \n\tfor ( $F119 ( i , numFrames ) ) { \n\t\tmValuesByZoomLevel [ NUM00 ] [ NUM00 * i ] = NUM00 * ( heights [ i - NUM00 ] + heights [ i ] ) ; \n\t\tmValuesByZoomLevel [ NUM00 ] [ NUM00 * i + NUM00 ] = heights [ i ] ; \n\t\t} \n\tmLenByZoomLevel [ NUM00 ] = numFrames ; \n\tmValuesByZoomLevel [ NUM00 ] = new double [ mLenByZoomLevel [ NUM00 ] ] ; \n\tmZoomFactorByZoomLevel [ NUM00 ] = NUM00 ; \n\tfor ( int i = NUM00 ; \n\ti < mLenByZoomLevel [ NUM00 ] ; \n\ti ++ ) { \n\t\tmValuesByZoomLevel [ NUM00 ] [ i ] = heights [ i ] ; \n\t\t} \n\tint location = NUM00 ; \n\tfor ( $F119 ( j , totalZooms ) ) { \n\t\tmLenByZoomLevel [ j ] = algoValues . get ( location ) ; \n\t\tmValuesByZoomLevel [ j ] = new double [ mLenByZoomLevel [ j ] ] ; \n\t\tmZoomFactorByZoomLevel [ j ] = mZoomFactorByZoomLevel [ j - NUM00 ] / NUM00 ; \n\t\tfor ( $F66767 ( i , mLenByZoomLevel , j ) ) { \n\t\t\tmValuesByZoomLevel [ j ] [ i ] = NUM00 * ( mValuesByZoomLevel [ j - NUM00 ] [ ( int ) ( divisorValues . get ( location ) * i ) ] + mValuesByZoomLevel [ j - NUM00 ] [ ( int ) ( divisorValues . get ( location ) * i ) + NUM00 ] ) ; \n\t\t\t} \n\t\tlocation ++ ; \n\t\t} \n\t$F16229 ( Log ) mInitialized = _BOOL ; \n\t} \n"}, {"code": "$F1431 private void expungeStaleEntries $F72 { \n\tsynchronized ( sync ) { \n\t\tListWeakReference r ; \n\t\twhile ( ( r = ( ListWeakReference ) queue . poll ( ) ) != null ) { \n\t\t\tListEntry le = r . getListEntry ( ) ; \n\t\t\t$F12747 ( i , list , le ) if ( i != - NUM00 ) $F106 ( list , i ) } \n\t\t} \n\t} \n"}, {"code": "protected void work ( final IResource resource , final List < WorkItem > resources , IProgressMonitor monitor ) { \n\tIPreferenceStore store = FindbugsPlugin . getPluginPreferences ( getProject ( ) ) ; \n\tboolean runAsJob = store . getBoolean ( FindBugsConstants . KEY_RUN_ANALYSIS_AS_EXTRA_JOB ) ; \n\tFindBugsJob fbJob = new StartedFromBuilderJob ( $F2990 ( resource ) , resource , resources ) ; \n\tif ( runAsJob ) { \n\t\tif ( DEBUG ) { \n\t\t\t$F138169 ( FindbugsPlugin ) } \n\t\tFindBugsJob . cancelSimilarJobs ( fbJob ) ; \n\t\tif ( DEBUG ) { \n\t\t\t$F138169 ( FindbugsPlugin ) } \n\t\tfbJob . scheduleAsSystem ( ) ; \n\t\tif ( DEBUG ) { \n\t\t\t$F138169 ( FindbugsPlugin ) } \n\t\t} \n\telse { \n\t\tif ( DEBUG ) { \n\t\t\t$F138169 ( FindbugsPlugin ) } \n\t\tfbJob . run ( monitor ) ; \n\t\tif ( DEBUG ) { \n\t\t\t$F138169 ( FindbugsPlugin ) } \n\t\t} \n\t} \n"}, {"code": "public void fireVetoableChange $F109214 ( name , oldValue , newValue ) throws PropertyVetoException { \n\tsuper . fireVetoableChange ( name , oldValue , newValue ) ; \n\tbeanContextChildSupport . fireVetoableChange ( name , oldValue , newValue ) ; \n\t} \n"}, {"code": "$F1 public void onFullBackup ( FullBackupDataOutput output ) throws IOException { \n\tif ( mVolumes != null ) { \n\t\tif ( DEBUG ) Slog . i ( TAG , NUM00 + mVolumes . length + NUM00 ) ; \n\t\t$F11293 ( externalFilesDirFilter ) final File externalAndroidRoot = new File ( Environment . getExternalStorageDirectory ( ) , Environment . DIRECTORY_ANDROID ) ; \n\t\texternalFilesDirFilter . add ( externalAndroidRoot . getCanonicalPath ( ) ) ; \n\t\tfor ( $F1139 ( i , mVolumes ) ) { \n\t\t\tStorageVolume v = mVolumes [ i ] ; \n\t\t\tString domain = FullBackup . SHARED_PREFIX + i ; \n\t\t\tfullBackupFileTree ( null , domain , v . getPath ( ) , externalFilesDirFilter , output ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static void removeConnectionList ( Integer tab ) { \n\tTABBED_CONNECTIONS . remove ( tab . intValue ( ) ) ; \n\t} \n"}, {"code": "protected void paintRangeRings ( Point2D originPnt , Point2D dest , Graphics graphics , MapBean theMap ) { \n\tGeo originGeo = new Geo ( originPnt . getY ( ) , originPnt . getX ( ) , _BOOL ) ; \n\tGeo destGeo = new Geo ( dest . getY ( ) , dest . getX ( ) , _BOOL ) ; \n\t$F55455 ( distance , originGeo , destGeo ) for ( int i = NUM00 ; \n\ti <= Math . max ( NUM00 , numRings ) ; \n\ti ++ ) { \n\t\tdouble ringDist = distance * ( double ) i ; \n\t\tpaintCircle ( originGeo , ringDist , graphics , theMap ) ; \n\t\tpaintLabel ( originGeo , ringDist , graphics , theMap ) ; \n\t\t} \n\t} \n"}, {"code": "$F79402 ( path , UNIX_SEPARATOR , WINDOWS_SEPARATOR ) "}, {"code": "public void translateAndAppendPending ( int backoff ) throws UnsupportedEncodingException { \n\tint bufferEnd = current - backoff ; \n\tint len = bufferEnd - complete ; \n\toutput . append ( new String ( input , offset + complete , len , charset ) ) ; \n\tcomplete = bufferEnd ; \n\t} \n"}, {"code": "$F1 public Trie optimize ( Trie orig ) { \n\tList $F11616 cmds = orig . cmds ; \n\t$F99479 $F204 ( rows ) ; \n\t$F99479 orows = orig . rows ; \n\tint remap [ ] = $F2315 ( orows ) ; \n\tfor ( $F5373 ( j , orows ) ) { \n\t\tliftUp ( orows . get ( j ) , orows ) ; \n\t\t} \n\t$F99493 ( Arrays , remap ) rows = removeGaps ( orig . root , orows , new ArrayList $F33449 $F72 , remap ) ; \n\treturn new Trie ( orig . forward , remap [ orig . root ] , cmds , rows ) ; \n\t} \n"}, {"code": "private Handler $F8317 installAfterHandler ( final HttpServerRequest request , final Buffer buffer , final List < Listener > afterListener ) { \n\tHandler $F8317 afterHandler = null ; \n\treturn afterHandler ; \n\t} \n"}, {"code": "private void tryShutdown $F72 { \n\tif ( isClosing ( ) && isOkToClose ( ) ) $F80909 ( shutdown , closeFuture ) } \n"}, {"code": "public StorageEntity createStorageEntity ( String storageName , StoragePlatformEntity storagePlatformEntity , $F32586 attributes ) { \n\tStorageEntity storageEntity = new StorageEntity $F72 ; \n\tstorageEntity . setName ( storageName ) ; \n\tstorageEntity . setStoragePlatform ( storagePlatformEntity ) ; \n\tif $F20899 ( CollectionUtils , attributes ) { \n\t\tList < StorageAttributeEntity > $F204 ( attributeEntities ) ; \n\t\tstorageEntity . setAttributes ( attributeEntities ) ; \n\t\tfor ( Attribute attribute : attributes ) { \n\t\t\tStorageAttributeEntity attributeEntity = new StorageAttributeEntity $F72 ; \n\t\t\tattributeEntities . add ( attributeEntity ) ; \n\t\t\tattributeEntity . setStorage ( storageEntity ) ; \n\t\t\t$F69429 ( attributeEntity , attribute ) attributeEntity . setValue ( attribute . getValue ( ) ) ; \n\t\t\t} \n\t\t} \n\t$F11907 ( storageDao , storageEntity ) } \n"}, {"code": "public void displayInfoLine ( String infoLine , int labelDesignator ) { \n\tif ( infoLineHolder != null ) { \n\t\tsetLabel ( $F22 ( infoLine ) ? infoLine : fudgeString , labelDesignator ) ; \n\t\t} \n\t} \n"}, {"code": "public Console format $F4353 ( format , args ) { \n\t$F139504 ( f , writer ) f . format ( format , args ) ; \n\t$F1206 ( f ) return this ; \n\t} \n"}, {"code": "$F234188 ( webClient ) "}, {"code": "public void testSignerStringIdentityScope $F72 throws Exception { \n\tSigner s = new SignerStub ( NUM00 , IdentityScope . getSystemScope ( ) ) ; \n\tassertNotNull ( s ) ; \n\t$F64976 ( assertEquals , s ) assertSame ( IdentityScope . getSystemScope ( ) , s . getScope ( ) ) ; \n\t$F330425 ( assertNull , s ) try { \n\t\tSigner s2 = new SignerStub ( NUM00 , IdentityScope . getSystemScope ( ) ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\tcatch ( KeyManagementException e ) $F845 Signer s2 = new SignerStub $F8320 ; \n\t$F12110 ( assertNull , s2 ) } \n"}, {"code": "private static void decodeAnsiX12Segment ( BitSource bits , StringBuilder result ) throws FormatException { \n\t$F11844 ( cValues ) do { \n\t\t$F46340 ( bits ) $F2847 ( firstByte , bits ) $F32905 ( firstByte ) $F46342 ( parseTwoBytes , firstByte , bits , cValues ) for ( $F6268 ( i ) ) { \n\t\t\tint cValue = cValues [ i ] ; \n\t\t\tif ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue < NUM00 ) $F46359 ( result , cValue ) else if ( cValue < NUM00 ) $F46359 ( result , cValue ) else $F2172 ( FormatException ) } \n\t\t} \n\twhile $F2892 ( bits ) ; \n\t} \n"}, {"code": "public TSink $F2147 sendBytes ( TStream $F2147 stream ) { \n\t$F10578 ( Objects , stream ) return sendBinary ( stream , null ) ; \n\t} \n"}, {"code": "public static Object invokeStaticMethod ( BshClassManager bcm , Class clas , String methodName , $F131 args ) throws ReflectError , UtilEvalError , InvocationTargetException { \n\t$F980 ( Interpreter ) Method method = resolveExpectedJavaMethod ( bcm , clas , null , methodName , args , _BOOL ) ; \n\treturn invokeMethod ( method , null , args ) ; \n\t} \n"}, {"code": "$F5803 ( drawable , getDrawable , matrix , prevMatrix , drawableWidth , drawableHeight , scaleX , viewWidth , scaleY , viewHeight , mScaleType , CENTER , CENTER_CROP , Math , CENTER_INSIDE , FIT_CENTER , FIT_XY , redundantXSpace , redundantYSpace , matchViewWidth , matchViewHeight , isZoomed , imageRenderedAtLeastOnce , normalizedScale , prevMatchViewWidth , prevMatchViewHeight , savePreviousImageValues , m , Matrix , transX , transY , prevActualWidth , actualWidth , getImageWidth , translateMatrixAfterRotate , prevViewWidth , prevActualHeight , actualHeight , getImageHeight , prevViewHeight , fixTrans , setImageMatrix ) "}, {"code": "protected AbstractRegexNPAnnotator ( String pattern , boolean caseSensitive , double confidence ) { \n\tthis ( Pattern . compile ( pattern , caseSensitive ? NUM00 : Pattern . CASE_INSENSITIVE ) , NUM00 , confidence ) ; \n\t} \n"}, {"code": "private static void removeLoopSafepoint ( StructuredGraph graph ) { \n\tLoopBeginNode loopBegin = findFirstLoop ( graph ) ; \n\tloopBegin . disableSafepoint ( ) ; \n\t} \n"}, {"code": "protected abstract void bindItem ( DataBoundViewHolder $F4203 holder , int position , $F6689 payloads ) ; \n"}, {"code": "public void testCase7 $F72 { \n\t$F70249 $F10679 int aSign = NUM00 ; \n\tint bSign = NUM00 ; \n\t$F161334 $F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F3024 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public synchronized void add ( double minValue , double maxValue ) $F30090 ( super , minValue , mMaxValues , maxValue ) "}, {"code": "public static Date daysBefore ( Date dateInst , int numDays ) { \n\tif ( ( numDays <= NUM00 ) || ( dateInst == null ) ) $F26853 final Calendar $F13062 ( cal ) ; \n\tcal . setTime ( dateInst ) ; \n\tcal . add ( Calendar . DAY_OF_YEAR , - numDays ) ; \n\t$F11894 ( cal ) } \n"}, {"code": "public final int remainingCapacity $F72 { \n\treturn Math . max ( NUM00 , capacity - cache . size ( ) ) ; \n\t} \n"}, {"code": "$F112611 ( encoded , base64Data , len , removeWhiteSpace , FOURBYTE , numberQuadruple , b1 , b2 , b3 , b4 , d1 , d2 , d3 , d4 , i , encodedIndex , dataIndex , decodedData , isData , base64Alphabet , isPad , tmp , System ) "}, {"code": "$F1 public void writeExternal ( ObjectOutput out ) throws IOException { \n\tsuper . writeExternal ( out ) ; \n\tout . writeObject ( conservativeApproximation ) ; \n\t} \n"}, {"code": "int putData ( Object data ) throws FitsException { \n\tlong lsize = ArrayFuncs . computeLSize ( data ) ; \n\tif ( lsize > Integer . MAX_VALUE ) { \n\t\tthrow new FitsException $F580 ; \n\t\t} \n\t$F29204 ( size , lsize ) expandHeap ( size ) ; \n\t$F39018 ( bo , size ) try { \n\t\tBufferedDataOutputStream o = new BufferedDataOutputStream ( bo ) ; \n\t\to . writeArray ( data ) ; \n\t\t$F1206 ( o ) $F59 ( o ) } \n\tcatch ( IOException e ) { \n\t\tthrow new FitsException ( NUM00 , e ) ; \n\t\t} \n\tSystem . arraycopy ( bo . toByteArray ( ) , NUM00 , this . heap , this . heapSize , size ) ; \n\tint oldOffset = this . heapSize ; \n\tthis . heapSize += size ; \n\treturn oldOffset ; \n\t} \n"}, {"code": "public void paint ( Graphics g ) { \n\ttry { \n\t\tsuper . paint ( g ) ; \n\t\t} \n\t$F3957 int focusedRow = getFocusedRow ( _BOOL ) ; \n\tif ( focusedRow != - NUM00 && focusedRow < getRowCount ( ) ) { \n\t\tBorder rowBorder = UIManager . getBorder ( NUM00 ) ; \n\t\tif ( rowBorder != null ) { \n\t\t\tRectangle rect = getCellRect ( focusedRow , NUM00 , _BOOL ) ; \n\t\t\trect . width = getWidth ( ) ; \n\t\t\trowBorder . paintBorder ( this , g , rect . x , rect . y , rect . width , rect . height ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void add ( final JLabel label , final JTextField field ) { \n\tpanel . add ( label ) ; \n\tpanel . add ( field ) ; \n\tif ( previous == null ) { \n\t\tlayout . putConstraint ( SpringLayout . NORTH , panel , - SPACING , SpringLayout . NORTH , label ) ; \n\t\t} \n\telse { \n\t\tlayout . putConstraint ( SpringLayout . NORTH , label , SPACING , SpringLayout . SOUTH , previous ) ; \n\t\t} \n\tlayout . putConstraint ( SpringLayout . WEST , panel , - SPACING , SpringLayout . WEST , label ) ; \n\tlayout . putConstraint ( SpringLayout . SOUTH , panel , SPACING , SpringLayout . SOUTH , label ) ; \n\tlayout . putConstraint ( SpringLayout . EAST , field , - SPACING , SpringLayout . EAST , panel ) ; \n\tlayout . putConstraint ( SpringLayout . WEST , field , - ( TEXT_FIELD_WIDTH + SPACING ) , SpringLayout . EAST , panel ) ; \n\tlayout . putConstraint ( SpringLayout . SOUTH , field , SPACING , SpringLayout . SOUTH , label ) ; \n\tprevious = label ; \n\t} \n"}, {"code": "private void onTrackPointStart ( Attributes attributes ) { \n\tlatitude = attributes . getValue ( ATTRIBUTE_LAT ) ; \n\tlongitude = attributes . getValue ( ATTRIBUTE_LON ) ; \n\taltitude = null ; \n\ttime = null ; \n\t} \n"}, {"code": "public static $F96 combine ( final $F3510 dataChunks ) { \n\tint totalSize = NUM00 ; \n\tfor ( final $F96 dataPart : dataChunks ) { \n\t\ttotalSize += dataPart . length ; \n\t\t} \n\t$F4727 ( data , totalSize ) int index = NUM00 ; \n\tfor ( final $F96 dataPart : dataChunks ) $F181805 ( System , dataPart , data , index ) return data ; \n\t} \n"}, {"code": "public void commit ( $F132235 resources , String comment , boolean keepLocks , IProgressMonitor monitor ) throws TeamException { \n\tif ( monitor == null ) { \n\t\tmonitor = new NullProgressMonitor $F72 ; \n\t\t} \n\tMap table = getProviderMapping ( resources ) ; \n\t$F125370 ( keySet , table ) monitor . beginTask ( NUM00 , $F62428 ( keySet ) ) ; \n\tmonitor . setTaskName ( Policy . bind ( NUM00 ) ) ; \n\t$F19402 ( iterator , keySet ) while $F2921 ( iterator ) { \n\t\tIProgressMonitor subMonitor = new SubProgressMonitor ( monitor , NUM00 ) ; \n\t\tSVNTeamProvider provider = ( SVNTeamProvider ) iterator . next ( ) ; \n\t\tList list = ( List ) table . get ( provider ) ; \n\t\t$F132235 providerResources = ( $F132235 ) $F132245 ( list ) ; \n\t\tprovider . checkin ( providerResources , comment , keepLocks , IResource . DEPTH_INFINITE , subMonitor ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean canSpawnWorkers $F72 { \n\tboolean canSpawnWorker = _BOOL ; \n\tif ( verboseLogLevel > NUM00 ) { \n\t\tUtilities . verboseLog ( NUM00 + gridName + NUM00 + tier + NUM00 + maxTierDepth + NUM00 + lifeRemaining ( ) + NUM00 + maximumLifeMillis ) ; \n\t\t} \n\tif $F1264 ( gridName ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( clusterState != null ) { \n\t\tLong timeSinceClusterLastUpdatedClusterState = System . currentTimeMillis ( ) - clusterState . getLastUpdated ( ) ; \n\t\tUtilities . verboseLog ( NUM00 + timeSinceClusterLastUpdatedClusterState ) ; \n\t\tif ( timeSinceClusterLastUpdatedClusterState > NUM00 * gridCheckInterval * NUM00 ) { \n\t\t\tUtilities . verboseLog ( $F368 ( clusterState ) ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t$F3627 ( tier , maxTierDepth , _BOOL ) if ( lifeRemaining ( ) < ( maximumLifeMillis * NUM00 ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tswitch ( tier ) { \n\t\t$F85396 ( canSpawnWorker , _BOOL ) $F85396 ( canSpawnWorker , _BOOL ) $F85396 ( canSpawnWorker , _BOOL ) $F85396 ( canSpawnWorker , _BOOL ) $F1267 if ( gridThrottle ) { \n\t\t\tcanSpawnWorker = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\tcanSpawnWorker = _BOOL ; \n\t\t\t} \n\t\t} \n\treturn canSpawnWorker ; \n\t} \n"}, {"code": "public boolean equals ( Object object ) { \n\tif ( object == null || ! ( object instanceof SessionID ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tSessionID another = ( SessionID ) object ; \n\t$F12738 ( encryptedString , another ) } \n"}, {"code": "public static boolean areIdentical ( String playerIdent , OfflinePlayer compareTo ) $F139962 ( playerIdent , getIdentificationForAsString , compareTo ) "}, {"code": "Builder addLenient ( String name , String value ) { \n\tnamesAndValues . add ( name ) ; \n\t$F28871 ( namesAndValues , value ) return this ; \n\t} \n"}, {"code": "protected String stringWithoutHeader $F72 { \n\t$F280 ( text ) for ( $F50810 ( i , numInstances ) ) { \n\t\t$F6407 ( text , instance , i ) if ( i < numInstances ( ) - NUM00 ) $F86 ( text ) } \n\t$F92 ( text ) } \n"}, {"code": "protected boolean isAlwaysNonNull ( Value v ) { \n\treturn _BOOL ; \n\t} \n"}, {"code": "public final $F4203 void removeInternal ( $F5675 list , int position ) { \n\tif ( hasHeaderView ( ) && position == NUM00 ) $F665 if ( enableLoadMore ( ) && position == getItemCount ( ) - NUM00 ) $F665 if $F3817 ( list ) { \n\t\tsynchronized ( mLock ) { \n\t\t\tlist . remove ( hasHeaderView ( ) ? position - NUM00 : position ) ; \n\t\t\t} \n\t\tremoveNotifyExternal ( position ) ; \n\t\tnotifyItemRemoved ( position ) ; \n\t\t} \n\t} \n"}, {"code": "public AMPrimaryMastHeadViewBean ( String name ) { \n\tsuper ( name ) ; \n\t} \n"}, {"code": "public boolean consumedGesture $F72 { \n\treturn reacted ; \n\t} \n"}, {"code": "private void initializeLayer ( $F372817 layer , NeuronUpdateRule nodeType , int nodes ) { \n\tfor ( $F119 ( i , nodes ) ) { \n\t\tNeuron node = new Neuron ( getParentNetwork ( ) , nodeType ) ; \n\t\tlayer . add ( node ) ; \n\t\t} \n\t} \n"}, {"code": "public static double angle ( Coordinate p ) { \n\treturn $F33880 ( Math , p ) ; \n\t} \n"}, {"code": "public void fireNeuronMoved ( final Neuron moved ) { \n\tfor ( NeuronListener listener : neuronListeners ) { \n\t\tlistener . neuronMoved ( new NetworkEvent $F257385 ( this , moved ) ) ; \n\t\t} \n\t} \n"}, {"code": "public IOUtils $F72 $F5795 ( super ) "}, {"code": "public static X509Certificate createCertificateFromBytes $F97 ( certBytes ) { \n\tX509Certificate cert = null ; \n\tCertificateFactory certFactory ; \n\ttry { \n\t\t$F6161 ( certFactory , CertificateFactory ) InputStream in = new ByteArrayInputStream ( certBytes ) ; \n\t\tcert = $F28048 ( certFactory , in ) ; \n\t\t} \n\tcatch ( CertificateException e ) { \n\t\tlogger . warn ( NUM00 + NUM00 , e ) ; \n\t\t} \n\treturn cert ; \n\t} \n"}, {"code": "void handleSelectionChanged ( String selection ) { \n\tif ( mDidExpandSelection ) $F24818 ( mDidExpandSelection , _BOOL ) if $F4251 ( selection ) { \n\t\tscheduleInvalidTapNotification ( ) ; \n\t\tif ( mSelectionType == SelectionType . TAP ) $F10990 ( resetSelectionStates ) } \n\tif $F1032 ( selection ) $F5795 ( unscheduleInvalidTapNotification ) mSelectedText = selection ; \n\tif ( mWasTapGestureDetected ) { \n\t\tmSelectionType = SelectionType . TAP ; \n\t\thandleSelection ( selection , mSelectionType ) ; \n\t\tmWasTapGestureDetected = _BOOL ; \n\t\t} \n\telse { \n\t\tmHandler . handleSelectionModification ( selection , mX , mY ) ; \n\t\t} \n\t} \n"}, {"code": "public TermsAckParser parse $F72 throws $F49817 $F49826 ( factory , SAXParserFactory , parser , mInputSource , this , e ) "}, {"code": "public static String format ( final String value , String ... params ) { \n\tvalidate ( value , NULL_ <missing ';'> NUM00 <missing ';'> $F38386 NULL_ NUM00 <missing ';'> $F38387 ; \n\t$F26605 ( p , Pattern ) $F1150 ( m , p , value ) String result = value ; \n\twhile $F281 ( m ) { \n\t\t$F24135 ( paramNumber , Integer , m ) if ( params == null || paramNumber >= params . length ) { \n\t\t\tthrow new IllegalArgumentException ( NUM00 + m . group ( ) ) ; \n\t\t\t} \n\t\tresult = result . replace ( m . group ( ) , params [ paramNumber ] ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public Builder server ( String server ) { \n\tif ( server . endsWith ( NUM00 ) == _BOOL ) $F2365 ( server ) this . server = server ; \n\treturn this ; \n\t} \n"}, {"code": "private ResponsePacket executeCount ( QueryTemplatePacket template , IJSpace space , Transaction txn ) throws SQLException { \n\ttry { \n\t\ttemplate . setRouting ( getRouting ( ) ) ; \n\t\ttemplate . setExplainPlan ( getExplainPlan ( ) ) ; \n\t\tint count = space . count ( template , txn , getReadModifier ( ) ) ; \n\t\tResponsePacket response = new ResponsePacket $F72 ; \n\t\t$F29684 values = new Object $F387 ; \n\t\tvalues [ NUM00 ] [ NUM00 ] = count ; \n\t\tResultEntry result = new ResultEntry ( new String $F57620 ( getCountColumnName ) , new String $F57620 ( getCountColumnLabel ) , $F21904 , values ) ; \n\t\tresponse . setResultEntry ( result ) ; \n\t\treturn response ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tif $F68674 ( _logger , Level ) { \n\t\t\t_logger . log ( Level . SEVERE , e . getMessage ( ) , e ) ; \n\t\t\t} \n\t\tthrow new SQLException ( NUM00 + e , NUM00 , - NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "void deriveConfidenceValue ( double baseCount ) { \n\tif ( Utils . isMissingValue ( m_confidence ) && ! Utils . isMissingValue ( baseCount ) && baseCount > NUM00 ) { \n\t\tm_confidence = m_recordCount / baseCount ; \n\t\t} \n\t} \n"}, {"code": "public ModifiableSolrParams add $F71933 ( name , val ) { \n\t$F806 old = vals . put ( name , val ) ; \n\tif ( old != null ) { \n\t\tif ( val == null || val . length < NUM00 ) { \n\t\t\t$F51228 ( both , old ) $F7057 ( System , old , both ) both [ old . length ] = null ; \n\t\t\tvals . put ( name , both ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F806 both = new String $F12348 ( old , val ) ; \n\t\t\t$F7057 ( System , old , both ) $F11244 ( System , val , both , old ) vals . put ( name , both ) ; \n\t\t\t} \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "private AStarNode jump $F83794 ( nextX , nextY , nextZ , px , pz ) { \n\tint y = nextY ; \n\tint dist = currentNode . getG ( ) + ( Math . abs ( nextX - currentNode . x ) + $F105708 ( Math , y , currentNode ) + Math . abs ( nextZ - currentNode . z ) ) ; \n\tint dx = nextX - px ; \n\tint dz = nextZ - pz ; \n\tint py = y ; \n\ty = getGroundNodeHeight ( nextX , py , nextZ ) ; \n\tif ( y == NUM00 ) $F1337 else if ( targetNode . x == nextX && targetNode . z == nextZ && targetNode . y == y || dist >= MAX_SKIP_DISTANCE ) { \n\t\treturn new AStarNode ( nextX , y , nextZ , dist , currentNode , targetNode ) ; \n\t\t} \n\tint nxY = ( dx != NUM00 ) ? getGroundNodeHeight ( nextX + dx , y , nextZ ) : NUM00 ; \n\tint nzY = ( dz != NUM00 ) ? getGroundNodeHeight ( nextX , y , nextZ + dz ) : NUM00 ; \n\tif ( dx != NUM00 && dz != NUM00 ) { \n\t\tif ( ( getGroundNodeHeight ( nextX - dx , y , nextZ + dz ) != NUM00 && getGroundNodeHeight ( nextX - dx , py , nextZ ) == NUM00 ) || ( getGroundNodeHeight ( nextX + dx , y , nextZ - dz ) != NUM00 && getGroundNodeHeight ( nextX , py , nextZ - dz ) == NUM00 ) ) { \n\t\t\treturn new AStarNode ( nextX , y , nextZ , dist , currentNode , targetNode ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( dx != NUM00 ) { \n\t\t\tif ( nxY != y || ( getGroundNodeHeight ( nextX , y , nextZ + NUM00 ) == NUM00 && getGroundNodeHeight ( nextX + dx , nxY , nextZ + NUM00 ) != NUM00 ) || ( getGroundNodeHeight ( nextX , y , nextZ - NUM00 ) == NUM00 && getGroundNodeHeight ( nextX + dx , nxY , nextZ - NUM00 ) != NUM00 ) ) { \n\t\t\t\treturn new AStarNode ( nextX , y , nextZ , dist , currentNode , targetNode ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( nzY != y || ( getGroundNodeHeight ( nextX + NUM00 , y , nextZ ) == NUM00 && getGroundNodeHeight ( nextX + NUM00 , nzY , nextZ + dz ) != NUM00 ) || ( getGroundNodeHeight ( nextX - NUM00 , y , nextZ ) == NUM00 && getGroundNodeHeight ( nextX - NUM00 , nzY , nextZ + dz ) != NUM00 ) ) { \n\t\t\t\treturn new AStarNode ( nextX , y , nextZ , dist , currentNode , targetNode ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( dx != NUM00 && dz != NUM00 ) { \n\t\tAStarNode jx = jump ( nextX + dx , y , nextZ , nextX , nextZ ) ; \n\t\tAStarNode jy = jump ( nextX , y , nextZ + dz , nextX , nextZ ) ; \n\t\tif ( jx != null || jy != null ) { \n\t\t\treturn new AStarNode ( nextX , y , nextZ , dist , currentNode , targetNode ) ; \n\t\t\t} \n\t\t} \n\tif ( nxY != NUM00 || nzY != NUM00 ) { \n\t\treturn jump ( nextX + dx , y , nextZ + dz , nextX , nextZ ) ; \n\t\t} \n\telse $F1337 } \n"}, {"code": "public ByteArrayDataSource ( InputStream is , String type ) { \n\ttry { \n\t\t$F1538 ( os ) int ch ; \n\t\t$F254305 ( ch , is , os ) $F3031 ( m_data , os ) } \n\tcatch ( IOException ioex ) { \n\t\tlog . log ( Level . WARNING , NUM00 , ioex ) ; \n\t\t} \n\tif $F22 ( type ) m_type = type ; \n\t} \n"}, {"code": "Object toType $F97551 ( value , pattern , locale ) { \n\tCalendar calendar = toCalendar ( value , pattern , locale ) ; \n\treturn toType ( calendar ) ; \n\t} \n"}, {"code": "public void addLimitLine ( LimitLine l ) { \n\tmLimitLines . add ( l ) ; \n\tif $F3817 ( mLimitLines ) $F259302 ( Log ) } \n"}, {"code": "public void readData ( DataInput din ) throws IOException { \n\t$F89921 ( function , din ) data = ( short ) ( din . readShort ( ) & NUM00 ) ; \n\t} \n"}, {"code": "int readResults ( final $F96 b , final int bPos , final int bAvail , final Context context ) { \n\tif ( context . buffer != null ) { \n\t\tfinal int len = Math . min ( available ( context ) , bAvail ) ; \n\t\tSystem . arraycopy ( context . buffer , context . readPos , b , bPos , len ) ; \n\t\tcontext . readPos += len ; \n\t\tif ( context . readPos >= context . pos ) { \n\t\t\tcontext . buffer = null ; \n\t\t\t} \n\t\treturn len ; \n\t\t} \n\treturn context . eof ? EOF : NUM00 ; \n\t} \n"}, {"code": "public static int inflate ( $F96 previous , int previousLength , $F96 current , int currentLength , $F96 result ) { \n\tif ( previous == null ) { \n\t\t$F135 ( System , current , result , currentLength ) return currentLength ; \n\t\t} \n\tint length = NUM00 ; \n\tint start1 = NUM00 ; \n\tint start2 = NUM00 ; \n\twhile ( start1 < previousLength && start2 < currentLength ) { \n\t\tint end1 = start1 ; \n\t\twhile ( end1 < previousLength && previous [ end1 ] != NUM00 ) { \n\t\t\tend1 ++ ; \n\t\t\t} \n\t\tint end2 = start2 ; \n\t\twhile ( end2 < currentLength && current [ end2 ] != NUM00 ) { \n\t\t\tend2 ++ ; \n\t\t\t} \n\t\tif ( current [ start2 ] == NUM00 && end2 == start2 + NUM00 ) { \n\t\t\tfor ( int i = start1 ; \n\t\t\ti < end1 ; \n\t\t\ti ++ ) result [ length ++ ] = previous [ i ] ; \n\t\t\t} \n\t\telse { \n\t\t\tfor ( int i = start2 ; \n\t\t\ti < end2 ; \n\t\t\ti ++ ) result [ length ++ ] = current [ i ] ; \n\t\t\t} \n\t\tif ( end2 < currentLength ) result [ length ++ ] = NUM00 ; \n\t\tstart1 = end1 + NUM00 ; \n\t\tstart2 = end2 + NUM00 ; \n\t\t} \n\treturn length ; \n\t} \n"}, {"code": "public $F131 toArray $F72 { \n\t$F48385 ( items , this ) $F677 ( lock , this ) $F790 ( lock ) try { \n\t\t$F4711 ( count , this ) $F133 ( a , count ) int n = items . length - takeIndex ; \n\t\tif ( count <= n ) { \n\t\t\t$F21535 ( System , items , takeIndex , a , count ) } \n\t\telse { \n\t\t\t$F21535 ( System , items , takeIndex , a , n ) System . arraycopy ( items , NUM00 , a , n , count - n ) ; \n\t\t\t} \n\t\treturn a ; \n\t\t} \n\t$F796 ( lock ) } \n"}, {"code": "$F26776 ( container , mContainers ) "}, {"code": "public IOUtils $F72 $F5795 ( super ) "}, {"code": "$F21572 ( doc , elementList , nameNode , child , childData , load , _BOOL , assertEquals ) "}, {"code": "private void Legends ( $F3803 legends_list , $F3807 color_code_list ) { \n\t$F339 ( textPaint , Color ) textPaint . setTextSize ( NUM00 ) ; \n\tint $F146568 ( left , graphwidth ) ; \n\tfor ( $F2277 ( i , legends_list ) ) { \n\t\t$F1729 ( label , legends_list , i ) float text_width = textPaint . measureText ( label , NUM00 , label . length ( ) ) ; \n\t\t$F85651 ( color , color_code_list , i ) if ( ! ( ( graphwidth - legendLeft ) > ( text_width + NUM00 ) ) ) { \n\t\t\tlegendTop -= NUM00 ; \n\t\t\tlegendLeft = left ; \n\t\t\t} \n\t\taddLegends ( canvas , color , legendTop , legendLeft , legendRight , legendBottom , label ) ; \n\t\tlegendLeft += ( ( int ) text_width + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private void fetchMetadata ( TableMapLogEvent tableEvent ) throws SQLException , ReplicatorException { \n\tif ( metadataCache == null ) metadataCache = new TableMetadataCache $F989 ; \n\tTable table = metadataCache . retrieve ( tableEvent . getDatabaseName ( ) , tableEvent . getTableName ( ) ) ; \n\tif ( table == null || table . getTableId ( ) != tableEvent . getTableId ( ) ) { \n\t\tprepareMetadataConnection ( ) ; \n\t\ttable = metadataConnection . findTable ( tableEvent . getDatabaseName ( ) , tableEvent . getTableName ( ) , _BOOL ) ; \n\t\tif ( table != null ) { \n\t\t\ttable . setTableId ( tableEvent . getTableId ( ) ) ; \n\t\t\tmetadataCache . store ( table ) ; \n\t\t\t} \n\t\t} \n\telse if $F585 ( logger ) logger . debug ( NUM00 + tableEvent . getDatabaseName ( ) + NUM00 + tableEvent . getTableName ( ) + NUM00 ) ; \n\tif ( table == null ) { \n\t\tlogger . warn ( NUM00 + tableEvent . getDatabaseName ( ) + NUM00 + tableEvent . getTableName ( ) ) ; \n\t\t} \n\telse { \n\t\ttableEvent . setTable ( table ) ; \n\t\t} \n\t} \n"}, {"code": "public String encode $F72 { \n\t$F280 ( sb ) encode ( sb ) ; \n\t$F92 ( sb ) } \n"}, {"code": "$F1 public int read $F24576 ( buf , offset , len ) throws IOException { \n\tint available = _available ; \n\tif ( available > NUM00 ) { \n\t\t$F16700 ( len , Math , available ) len = _next . read ( buf , offset , len ) ; \n\t\tif ( len > NUM00 ) { \n\t\t\t_available -= len ; \n\t\t\t} \n\t\t} \n\telse if ( available == NUM00 ) { \n\t\t_available = readChunkLength ( ) ; \n\t\tif ( _available > NUM00 ) { \n\t\t\t$F16700 ( len , Math , _available ) len = _next . read ( buf , offset , len ) ; \n\t\t\tif ( len > NUM00 ) _available -= len ; \n\t\t\t} \n\t\telse { \n\t\t\t_available = - NUM00 ; \n\t\t\tlen = - NUM00 ; \n\t\t\t} \n\t\t} \n\telse $F44867 ( len ) return len ; \n\t} \n"}, {"code": "$F1 public void flush $F72 { \n\tFlushTask task ; \n\tsynchronized ( logRecords ) { \n\t\ttask = new FlushTask ( new $F5 ( logRecords ) ) ; \n\t\t$F725 ( logRecords ) } \n\t$F21687 ( task ) } \n"}, {"code": "public static ArrayList < Page > pageCreatorButtons ( ArrayList < Page > pages , Item manualType ) { \n\tArrayList < Page > $F204 ( newPages ) ; \n\t$F2199 ( pageAmount , pages ) int times = NUM00 ; \n\twhile ( pageAmount > NUM00 ) { \n\t\tArrayList < Page > $F204 ( pagesTemp ) ; \n\t\tpagesTemp . addAll ( pages . subList ( NUM00 * times , ( pageAmount > NUM00 ? NUM00 + NUM00 * times : NUM00 * times + pageAmount ) ) ) ; \n\t\tint height = NUM00 ; \n\t\tArrayList < ManualWidgetBase > $F204 ( widgets ) ; \n\t\tfor ( Page page : pagesTemp ) { \n\t\t\twidgets . add ( new ButtonWidget ( NUM00 , NUM00 + height , page ) ) ; \n\t\t\theight += NUM00 ; \n\t\t\t} \n\t\tnewPages . add ( new Page ( NUM00 + times , ( ArrayList < ManualWidgetBase > ) widgets . clone ( ) , _BOOL , manualType ) ) ; \n\t\t$F725 ( widgets ) $F725 ( pagesTemp ) pageAmount -= NUM00 ; \n\t\ttimes ++ ; \n\t\t} \n\treturn newPages ; \n\t} \n"}, {"code": "public void testPosPosFirstLonger $F72 { \n\t$F37335 $F37339 int aSign = NUM00 ; \n\tint bSign = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F37344 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "protected $F3803 createNewExportMaskWorkflowForInitiators ( $F28584 initiatorURIs , ExportGroup exportGroup , Workflow workflow , $F186003 ( volumeMap ) , StorageSystem storage , String token , String previousStep ) throws Exception { \n\t$F24645 ( newSteps ) if $F5973 ( initiatorURIs ) { \n\t\tMap $F159997 computeResourceToInitiators = mapInitiatorsToComputeResource ( exportGroup , initiatorURIs ) ; \n\t\tfor ( Map . Entry $F159997 resourceEntry : computeResourceToInitiators . entrySet ( ) ) { \n\t\t\t$F3477 ( computeKey , resourceEntry ) $F28584 computeInitiatorURIs = resourceEntry . getValue ( ) ; \n\t\t\t$F102990 ( _log , String , computeKey ) GenExportMaskCreateWorkflowResult result = generateDeviceSpecificExportMaskCreateWorkFlow ( workflow , previousStep , storage , exportGroup , computeInitiatorURIs , volumeMap , token ) ; \n\t\t\tpreviousStep = result . getStepId ( ) ; \n\t\t\tnewSteps . add ( previousStep ) ; \n\t\t\t} \n\t\t} \n\tif ( newSteps . isEmpty ( ) && previousStep != null ) $F207 ( newSteps , previousStep ) return newSteps ; \n\t} \n"}, {"code": "public boolean isLessThen ( Percent Percent ) { \n\tassertDefined ( ) ; \n\tBigDecimal thisValue = notNull ( this ) ; \n\tBigDecimal parameter = notNull ( Percent ) ; \n\treturn $F25292 ( thisValue , parameter ) ; \n\t} \n"}, {"code": "$F1 public URI toEdgeURI ( final Object key ) { \n\t$F17718 ( toURI , key ) } \n"}, {"code": "short readShort $F72 throws IOException { \n\t$F52634 ( mDexFile , tmpBuf ) if ( isBigEndian ) { \n\t\treturn ( short ) ( $F358766 ( tmpBuf ) ) ; \n\t\t} \n\telse { \n\t\treturn ( short ) ( $F358766 ( tmpBuf ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static List < INaviProject > loadProjects ( final AbstractSQLProvider provider , final DebuggerTemplateManager debuggerManager ) throws CouldntLoadDataException { \n\tPostgreSQLDatabaseFunctions . checkArguments ( provider , debuggerManager ) ; \n\tfinal CConnection connection = provider . getConnection ( ) ; \n\tfinal List < INaviProject > $F204 ( projects ) ; \n\tif ( ! PostgreSQLHelpers . hasTable ( connection , CTableNames . PROJECTS_TABLE ) ) { \n\t\treturn projects ; \n\t\t} \n\tString query = NUM00 + NUM00 + CTableNames . ADDRESS_SPACES_TABLE + NUM00 + CTableNames . PROJECTS_TABLE + NUM00 + NUM00 + CTableNames . PROJECTS_TABLE ; \n\ttry ( ResultSet resultSet = connection . executeQuery ( query , _BOOL ) ) { \n\t\twhile $F1682 ( resultSet ) { \n\t\t\t$F10411 ( projectId , resultSet ) $F435445 ( name , PostgreSQLHelpers , resultSet ) $F435445 ( description , PostgreSQLHelpers , resultSet ) $F10411 ( addressSpaceCount , resultSet ) final Timestamp creationDate = resultSet . getTimestamp ( NUM00 ) ; \n\t\t\tfinal Timestamp modificationDate = resultSet . getTimestamp ( NUM00 ) ; \n\t\t\tfinal List < DebuggerTemplate > debuggers = PostgreSQLDatabaseFunctions . getAssignedDebuggers ( connection , projectId , debuggerManager ) ; \n\t\t\tprojects . add ( new CProject ( projectId , name , description == null ? NUM00 : description , creationDate , modificationDate , addressSpaceCount , debuggers , provider ) ) ; \n\t\t\t} \n\t\t} \n\tcatch ( final SQLException e ) { \n\t\tthrow new CouldntLoadDataException ( e ) ; \n\t\t} \n\treturn new ArrayList < INaviProject > ( projects ) ; \n\t} \n"}, {"code": "public String syllabify ( String phoneString ) { \n\t$F28830 phoneList = splitIntoAllophones ( phoneString ) ; \n\tsyllabify ( phoneList ) ; \n\t$F83 ( sb ) for ( String p : phoneList ) { \n\t\t$F275070 ( sb ) sb . append ( p ) ; \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "$F1 protected Node removeFromFrontier $F72 { \n\tcleanUpFrontier ( ) ; \n\tNode result = frontier . remove ( ) ; \n\t$F4173 ( updateMetrics , frontier ) setExplored ( result ) ; \n\treturn result ; \n\t} \n"}, {"code": "public static boolean isFile ( String path ) { \n\t$F1705 ( f , path ) return f . isFile ( ) ; \n\t} \n"}, {"code": "public boolean equals ( Object object ) { \n\tif ( ! ( object instanceof ObjectInstance ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tObjectInstance val = ( ObjectInstance ) object ; \n\tif ( ! name . equals ( val . getObjectName ( ) ) ) return _BOOL ; \n\tif ( className == null ) return ( val . getClassName ( ) == null ) ; \n\treturn className . equals ( val . getClassName ( ) ) ; \n\t} \n"}, {"code": "public ZookeeperEmbedded ( int port ) { \n\tthis . port = port ; \n\tthis . logDir = new File ( System . getProperty ( NUM00 ) , NUM00 + port ) ; \n\t} \n"}, {"code": "public BasicCondition ( String variable , Value value , Relation relation ) { \n\tthis . variable = Template . create ( variable ) ; \n\tthis . templateValue = Template . create ( value . toString ( ) ) ; \n\tthis . groundValue = value ; \n\tthis . relation = relation ; \n\t} \n"}, {"code": "public static $F2689 readStopwordsPath ( Path path , boolean lowercase ) throws IOException { \n\treturn readStopwordsInputStream ( Files . newInputStream ( path ) , lowercase ) ; \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\t$F83 ( sRep ) $F84 ( sRep ) sRep . append ( articleID ) ; \n\t$F84 ( sRep ) sRep . append ( revisionCounter ) ; \n\t$F84 ( sRep ) sRep . append ( timeStamp ) ; \n\t$F84 ( sRep ) sRep . append ( revisionId ) ; \n\tif ( revisionText != null ) { \n\t\t$F84 ( sRep ) sRep . append ( revisionText . length ( ) ) ; \n\t\t} \n\t$F84 ( sRep ) $F92 ( sRep ) } \n"}, {"code": "private void breakBarrier $F72 { \n\tgeneration . broken = _BOOL ; \n\tcount = parties ; \n\t$F39065 ( trip ) } \n"}, {"code": "public $F14699 filter ( $F14699 points , double tolerance ) { \n\t$F27342 ( tolerance , points ) keep = new boolean $F2313 ( points ) ; \n\tswitch ( mType ) { \n\t\tcase DOUGLAS_PEUCKER : return reduceWithDouglasPeuker ( points , tolerance ) ; \n\t\tcase NONE : return points ; \n\t\t$F1267 return points ; \n\t\t} \n\t} \n"}, {"code": "protected void sendLogEvent ( String component , String message , Callback $F1432 callback ) { \n\tString syslogMessage = String . format ( Locale . US , NUM00 , getSysLogFormattedDate ( ) , utils . getApplicationName ( context ) , component , message ) ; \n\tsendDataOverUDP ( syslogMessage , callback ) ; \n\t} \n"}, {"code": "public static < T extends Throwable > T writeStackTraces ( T throwable , StreamOutput out ) throws IOException { \n\t$F143937 ( stackTrace , throwable ) out . writeVInt ( stackTrace . length ) ; \n\tfor ( StackTraceElement element : stackTrace ) { \n\t\tout . writeString ( element . getClassName ( ) ) ; \n\t\tout . writeOptionalString ( element . getFileName ( ) ) ; \n\t\tout . writeString ( element . getMethodName ( ) ) ; \n\t\tout . writeVInt ( element . getLineNumber ( ) ) ; \n\t\t} \n\tThrowable [ ] suppressed = throwable . getSuppressed ( ) ; \n\tout . writeVInt ( suppressed . length ) ; \n\tfor ( Throwable t : suppressed ) { \n\t\tout . writeThrowable ( t ) ; \n\t\t} \n\treturn throwable ; \n\t} \n"}, {"code": "public DistributedLogMultiStreamWriter build $F72 { \n\tPreconditions . checkArgument ( $F45081 ( _streams ) , NUM00 ) ; \n\t$F1832 ( Preconditions , _client ) $F1832 ( Preconditions , _codec ) Preconditions . checkArgument ( _firstSpeculativeTimeoutMs > NUM00 && _firstSpeculativeTimeoutMs <= _maxSpeculativeTimeoutMs && _speculativeBackoffMultiplier > NUM00 && _maxSpeculativeTimeoutMs < _requestTimeoutMs , NUM00 ) ; \n\treturn new DistributedLogMultiStreamWriter ( _streams , _client , Math . min ( _bufferSize , MAX_LOGRECORDSET_SIZE ) , _flushIntervalMicros , _requestTimeoutMs , _firstSpeculativeTimeoutMs , _maxSpeculativeTimeoutMs , _speculativeBackoffMultiplier , _codec , _ticker , _executorService ) ; \n\t} \n"}, {"code": "$F131106 ( number , testValidity , string ) "}, {"code": "private ImageElement ( int AD_PrintFormatItem_ID ) { \n\tloadAttachment ( AD_PrintFormatItem_ID ) ; \n\t} \n"}, {"code": "public ThreadRegisterValues ( final ThreadRegisters values ) { \n\tm_tid = values . getTid ( ) ; \n\tfor ( final RegisterValue value : values . getRegisters ( ) ) { \n\t\tm_values . add ( new Register ( value ) ) ; \n\t\t} \n\t} \n"}, {"code": "public LauncherDiscoveryRequestBuilder configurationParameters $F3501 ( configurationParameters ) { \n\t$F18062 ( Preconditions , configurationParameters ) $F22620 ( configurationParameters ) return this ; \n\t} \n"}, {"code": "public boolean isTriggered $F72 $F28110 ( checkbox ) "}, {"code": "public void addAll $F97618 ( index , data ) { \n\tint dataLen = data . length ; \n\t$F32905 ( dataLen ) int newcap = size + $F35376 ( dataLen ) + NUM00 ; \n\tensureCapacity ( newcap ) ; \n\t$F75427 ( System , array , index , dataLen , size ) $F6483 ( System , data , array , index , dataLen ) size += dataLen ; \n\t} \n"}, {"code": "public int read $F97 ( b ) throws $F3258 { \n\treturn $F39529 ( read , b ) ; \n\t} \n"}, {"code": "$F36345 ( tag , msg , args , sLevel , LEVEL_ERROR , String , Log ) "}, {"code": "private static float calculateScore ( final $F2027 playCounts ) { \n\t$F1084 ( playCounts ) float score = NUM00 ; \n\tfor ( int i = NUM00 ; \n\ti < Math . min ( playCounts . length , NUM_WEEKS ) ; \n\ti ++ ) { \n\t\tscore += playCounts [ i ] * getScoreMultiplierForWeek ( i ) ; \n\t\t} \n\treturn score ; \n\t} \n"}, {"code": "public void removeScanningCallback ( OneSheeldScanningCallback scanningCallback ) $F6860 ( scanningCallback , scanningCallbacks ) "}, {"code": "public void paintRect ( Graphics g , JComponent c , int x , int y , int w , int h ) { \n\t$F5112 ( bounds , c ) check ( bounds ) ; \n\tg . drawImage ( m_backImage , x , y , x + w , h + y , x , y , x + w , y + h , c ) ; \n\t} \n"}, {"code": "$F1 public final void sample $F72 { \n\t_value = _acquireCount . get ( ) - _releaseCount . get ( ) ; \n\t} \n"}, {"code": "$F9749 ( namespace , attName , attValue , xmlWriter , registerPrefix ) "}, {"code": "private boolean isPageBreak ( int row ) { \n\tfor ( $F2277 ( i , m_pageBreak ) ) { \n\t\t$F10158 ( rr , m_pageBreak , i ) if ( rr . intValue ( ) + NUM00 == row ) return _BOOL ; \n\t\telse if ( rr . intValue ( ) > row ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public ExecutorService shutdown $F72 { \n\t$F733 ( pool ) return pool ; \n\t} \n"}, {"code": "public static boolean isPropositionSymbolIdentifierPart ( char ch ) { \n\treturn Character . isJavaIdentifierPart ( ch ) ; \n\t} \n"}, {"code": "public static void o ( Zdiagmat D ) { \n\to ( D , Parameters . OutputFieldWidth , Parameters . OutputFracPlaces ) ; \n\t} \n"}, {"code": "public int search ( String txt ) { \n\t$F1749 ( M , pat ) $F1749 ( N , txt ) int skip ; \n\tfor ( int i = NUM00 ; \n\ti <= N - M ; \n\ti += skip ) { \n\t\tskip = NUM00 ; \n\t\tfor ( $F18298 ( j , M ) ) { \n\t\t\tif ( pat . charAt ( j ) != txt . charAt ( i + j ) ) { \n\t\t\t\tskip = Math . max ( NUM00 , j - right [ txt . charAt ( i + j ) ] ) ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t$F116 ( skip , i ) } \n\treturn N ; \n\t} \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F994 ( newVector ) $F9007 ( newVector ) $F1000 ( newVector ) $F1007 ( newVector ) } \n"}, {"code": "public String toChars $F23416 ( indices ) { \n\tStringBuilder $F144303 ( s , indices ) ; \n\tfor ( $F1139 ( i , indices ) ) $F29840 ( s , toChar , indices , i ) $F92 ( s ) } \n"}, {"code": "public static final String trunc $F16495 ( str , length ) { \n\t$F5522 ( str ) if ( str . length ( ) <= length ) { \n\t\treturn str ; \n\t\t} \n\t$F35298 ( str , length ) } \n"}, {"code": "public void clearTransactions ( int fromHeight ) { \n\t$F790 ( lock ) try { \n\t\tif ( fromHeight == NUM00 ) { \n\t\t\t$F725 ( unspent ) $F725 ( spent ) $F725 ( pending ) $F725 ( dead ) $F725 ( transactions ) } \n\t\telse $F59421 } \n\t$F796 ( lock ) } \n"}, {"code": "$F1 public boolean load ( final Player player , $F20109 ( args ) ) { \n\t$F131210 ( groovyBinding , player ) if ( args != null ) { \n\t\tgroovyBinding . setVariable ( NUM00 , $F10148 ( args ) ) ; \n\t\t} \n\telse { \n\t\tgroovyBinding . setVariable ( NUM00 , $F382 ) ; \n\t\t} \n\tfinal GroovyShell interp = new GroovyShell ( groovyBinding ) ; \n\tboolean ret = _BOOL ; \n\tpreExecute ( player , args ) ; \n\ttry { \n\t\t$F15885 ( f , groovyScript ) interp . evaluate ( f ) ; \n\t\t} \n\tcatch ( final Exception e ) { \n\t\t$F30202 ( logger , groovyScript , e ) $F3270 ( setMessage , e ) ret = _BOOL ; \n\t\t} \n\tcatch ( final Error e ) { \n\t\t$F30202 ( logger , groovyScript , e ) $F3270 ( setMessage , e ) ret = _BOOL ; \n\t\t} \n\tpostExecute ( player , args , ret ) ; \n\treturn ( ret ) ; \n\t} \n"}, {"code": "$F43398 ( animator , ValueAnimator , nameValueList , mPendingAnimations , propertyMask , propertyCount , i , nameValuesHolder , mAnimatorMap , mAnimatorEventListener , mStartDelaySet , mStartDelay , mDurationSet , mDuration , mInterpolatorSet , mInterpolator ) "}, {"code": "private void cleanDirtyRegion ( float eventX , float eventY ) { \n\tdirtyRect . left = Math . min ( lastTouchX , eventX ) ; \n\tdirtyRect . right = Math . max ( lastTouchX , eventX ) ; \n\tdirtyRect . top = Math . min ( lastTouchY , eventY ) ; \n\tdirtyRect . bottom = Math . max ( lastTouchY , eventY ) ; \n\t} \n"}, {"code": "public Sort $F4374 ( fields ) { \n\tthis ( fields , new boolean [ fields . length ] ) ; \n\tArrays . fill ( m_ascend , _BOOL ) ; \n\t} \n"}, {"code": "$F1 public boolean wasSuccessful $F72 { \n\treturn isFinished ( ) && getCurrentPoints ( ) >= successThreashold ; \n\t} \n"}, {"code": "void startLocatingPhone $F72 { \n\tIntent intent = new Intent ( sContext , LocationService . class ) ; \n\tintent . setAction ( LocationService . START_SERVICE ) ; \n\tintent . putExtra ( NUM00 , this . mAnswerTo ) ; \n\tsContext . startService ( intent ) ; \n\t} \n"}, {"code": "public void deleteResourceConfig ( String clusterName , ResourceType resourceType , String dsName ) throws ConfigurationException { \n\tif $F9774 ( getClusterHome ) { \n\t\tthrow $F82717 ; \n\t\t} \n\tFile resources = getDir ( getResourceConfigDirName ( getClusterHome ( ) , clusterName , resourceType ) ) ; \n\tString delFileName = $F98442 ( resources , File ) + dsName + NUM00 ; \n\tdelFile ( delFileName ) ; \n\t} \n"}, {"code": "public BusMovement ( BusMovement proto ) { \n\tsuper ( proto ) ; \n\tthis . controlSystem = proto . controlSystem ; \n\tthis . id = nextID ++ ; \n\tcontrolSystem . registerBus ( this ) ; \n\tstartMode = _BOOL ; \n\t} \n"}, {"code": "private int removeNext $F72 { \n\t$F4975 ( lastUsageDates , INVALID_SIZE ) Long oldestUsage = null ; \n\tFile mostLongUsedFile = null ; \n\tSet < Entry < File , Long > > entries = lastUsageDates . entrySet ( ) ; \n\tsynchronized ( lastUsageDates ) { \n\t\tfor ( Entry < File , Long > entry : entries ) { \n\t\t\tif ( mostLongUsedFile == null ) { \n\t\t\t\t$F76754 ( mostLongUsedFile , entry ) $F37891 ( oldestUsage , entry ) } \n\t\t\telse { \n\t\t\t\tLong lastValueUsage = entry . getValue ( ) ; \n\t\t\t\tif ( lastValueUsage < oldestUsage ) { \n\t\t\t\t\toldestUsage = lastValueUsage ; \n\t\t\t\t\t$F76754 ( mostLongUsedFile , entry ) } \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tint fileSize = NUM00 ; \n\tif ( mostLongUsedFile != null ) { \n\t\tif $F3428 ( mostLongUsedFile ) { \n\t\t\tfileSize = getSize ( mostLongUsedFile ) ; \n\t\t\tif $F220007 ( mostLongUsedFile ) $F106 ( lastUsageDates , mostLongUsedFile ) } \n\t\telse $F106 ( lastUsageDates , mostLongUsedFile ) } \n\treturn fileSize ; \n\t} \n"}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "private void createGui $F72 { \n\tfor ( final IResultsPanel panel : m_factory ) { \n\t\tm_tabbedPane . addTab ( panel . getTitle ( ) , panel . getComponent ( ) ) ; \n\t\t} \n\tadd ( m_tabbedPane , BorderLayout . CENTER ) ; \n\tm_tabbedPane . setVisible ( _BOOL ) ; \n\t} \n"}, {"code": "public static float generateRandomFloatBetween ( float lowerLimit , float upperLimit ) { \n\treturn lowerLimit + ( ( upperLimit - lowerLimit ) * _r . nextFloat ( ) ) ; \n\t} \n"}, {"code": "public SGenItemProviderAdapterFactory $F72 $F85307 ( supportedTypes ) "}, {"code": "private void kdRangeSearch ( int left , int right , int axis , O query , ModifiableDoubleDBIDList res , DBIDArrayIter iter , double radius ) { \n\tif ( right - left <= leafsize ) { \n\t\tfor ( iter . seek ( left ) ; \n\t\titer . getOffset ( ) < right ; \n\t\titer . advance ( ) ) { \n\t\t\tdouble dist = norm . distance ( query , relation . get ( iter ) ) ; \n\t\t\tcountObjectAccess ( ) ; \n\t\t\tcountDistanceComputation ( ) ; \n\t\t\tif ( dist <= radius ) $F42308 ( res , dist , iter ) } \n\t\t$F665 } \n\tfinal int middle = ( left + right ) > > > NUM00 ; \n\tO split = relation . get ( iter . seek ( middle ) ) ; \n\tcountObjectAccess ( ) ; \n\tfinal double delta = split . doubleValue ( axis ) - query . doubleValue ( axis ) ; \n\tfinal boolean onleft = ( delta >= NUM00 ) ; \n\tfinal boolean onright = ( delta <= NUM00 ) ; \n\tfinal boolean close = $F146434 ( Math , delta , radius ) ; \n\tfinal int next = ( axis + NUM00 ) % dims ; \n\tif ( close ) { \n\t\t$F55584 ( dist , norm , query , split ) countDistanceComputation ( ) ; \n\t\tif ( dist <= radius ) { \n\t\t\tassert ( iter . getOffset ( ) == middle ) ; \n\t\t\tres . add ( dist , iter ) ; \n\t\t\t} \n\t\t} \n\tif ( left < middle && ( onleft || close ) ) { \n\t\tkdRangeSearch ( left , middle , next , query , res , iter , radius ) ; \n\t\t} \n\tif ( middle + NUM00 < right && ( onright || close ) ) { \n\t\tkdRangeSearch ( middle + NUM00 , right , next , query , res , iter , radius ) ; \n\t\t} \n\t} \n"}, {"code": "private void handleStartElement ( XMLStreamReader parser , $F6870 childrenFound , Handler handler , $F2100 ( values ) , Stack < $F2689 > stack , boolean recordStarted ) throws IOException , XMLStreamException { \n\tNode n = getMatchingNode ( parser , childNodes ) ; \n\t$F20530 ( decends ) if ( n != null ) { \n\t\tchildrenFound . add ( n ) ; \n\t\tn . parse ( parser , handler , values , stack , recordStarted ) ; \n\t\t$F665 } \n\tNode dn = this ; \n\tdo { \n\t\tif ( dn . wildCardNodes != null ) { \n\t\t\tn = getMatchingNode ( parser , dn . wildCardNodes ) ; \n\t\t\tif ( n != null ) { \n\t\t\t\tchildrenFound . add ( n ) ; \n\t\t\t\tn . parse ( parser , handler , values , stack , recordStarted ) ; \n\t\t\t\t$F597 } \n\t\t\tfor ( Node nn : dn . wildCardNodes ) $F51860 ( decends , nn ) } \n\t\tdn = dn . wildAncestor ; \n\t\t} \n\twhile ( dn != null ) ; \n\tif ( n == null ) { \n\t\tint count = NUM00 ; \n\t\twhile ( count != NUM00 ) { \n\t\t\t$F128162 ( token , parser ) if ( token == START_ELEMENT ) { \n\t\t\t\tNode nn = ( Node ) decends . get ( parser . getLocalName ( ) ) ; \n\t\t\t\tif ( nn != null ) { \n\t\t\t\t\tchildrenFound . add ( nn ) ; \n\t\t\t\t\tnn . parse ( parser , handler , values , stack , recordStarted ) ; \n\t\t\t\t\t} \n\t\t\t\telse count ++ ; \n\t\t\t\t} \n\t\t\telse if ( token == END_ELEMENT ) count -- ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void connect $F72 { \n\tif ( ! connected ) { \n\t\tupdateInfo ( ) ; \n\t\tString connectString = NUM00 + connectAddress + NUM00 + connectPort ; \n\t\tif ( $F107041 ( clientId ) ) { \n\t\t\tout ( getDate ( ) + Messages . MqttClientView_15 + connectString + Messages . MqttClientView_16 ) ; \n\t\t\t$F665 } \n\t\ttry { \n\t\t\tif ( firstConnect ) { \n\t\t\t\tmqttClient = new MqttClient ( connectString , clientId ) ; \n\t\t\t\tmqttClient . setCallback ( this ) ; \n\t\t\t\tfirstConnect = _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( MqttException e ) { \n\t\t\tout ( getDate ( ) + Messages . MqttClientView_17 + e . getMessage ( ) ) ; \n\t\t\t$F301 ( e ) } \n\t\tconnOpts = new MqttConnectOptions $F72 ; \n\t\tconnOpts . setCleanSession ( cleanStart ) ; \n\t\tconnOpts . setConnectionTimeout ( NUM00 ) ; \n\t\tconnOpts . setKeepAliveInterval ( keepAlive ) ; \n\t\tif ( $F20 ( username ) && $F20 ( password ) ) { \n\t\t\tconnOpts . setPassword ( password . toCharArray ( ) ) ; \n\t\t\tconnOpts . setUserName ( username ) ; \n\t\t\t} \n\t\tif ( useWill ) { \n\t\t\tif $F3581 ( willTopic ) { \n\t\t\t\tout ( Messages . MqttClientView_19 ) ; \n\t\t\t\t$F665 } \n\t\t\tconnOpts . setWill ( mqttClient . getTopic ( willTopic ) , willMessage . getBytes ( ) , willQos , willRetain ) ; \n\t\t\t} \n\t\ttry { \n\t\t\tout ( getDate ( ) + Messages . MqttClientView_20 + connectString ) ; \n\t\t\tmqttClient . connect ( connOpts ) ; \n\t\t\tconnected = _BOOL ; \n\t\t\tout ( getDate ( ) + Messages . MqttClientView_21 + clientId ) ; \n\t\t\t} \n\t\tcatch ( MqttException e ) { \n\t\t\tout ( getDate ( ) + Messages . MqttClientView_22 + e . getMessage ( ) ) ; \n\t\t\t$F301 ( e ) } \n\t\t} \n\telse { \n\t\tout ( Messages . MqttClientView_23 ) ; \n\t\t} \n\t} \n"}, {"code": "static void checkTypeRefAndPath ( int typeRef , TypePath typePath ) { \n\tint mask = NUM00 ; \n\tswitch $F14870 ( typeRef ) { \n\t\tcase TypeReference . CLASS_TYPE_PARAMETER : case TypeReference . METHOD_TYPE_PARAMETER : case TypeReference . METHOD_FORMAL_PARAMETER : mask = NUM00 ; \n\t\t$F597 case TypeReference . FIELD : case TypeReference . METHOD_RETURN : case TypeReference . METHOD_RECEIVER : case TypeReference . LOCAL_VARIABLE : case TypeReference . RESOURCE_VARIABLE : case TypeReference . INSTANCEOF : case TypeReference . NEW : case TypeReference . CONSTRUCTOR_REFERENCE : case TypeReference . METHOD_REFERENCE : mask = NUM00 ; \n\t\t$F597 case TypeReference . CLASS_EXTENDS : case TypeReference . CLASS_TYPE_PARAMETER_BOUND : case TypeReference . METHOD_TYPE_PARAMETER_BOUND : case TypeReference . THROWS : case TypeReference . EXCEPTION_PARAMETER : mask = NUM00 ; \n\t\t$F597 case TypeReference . CAST : case TypeReference . CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT : case TypeReference . METHOD_INVOCATION_TYPE_ARGUMENT : case TypeReference . CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT : case TypeReference . METHOD_REFERENCE_TYPE_ARGUMENT : mask = NUM00 ; \n\t\t$F597 $F1267 throw new IllegalArgumentException ( NUM00 + Integer . toHexString ( typeRef > > > NUM00 ) ) ; \n\t\t} \n\tif ( ( typeRef & ~ mask ) != NUM00 ) { \n\t\tthrow new IllegalArgumentException $F184522 ( Integer , typeRef ) ; \n\t\t} \n\tif ( typePath != null ) { \n\t\tfor ( $F184528 ( i , typePath ) ) { \n\t\t\tint step = typePath . getStep ( i ) ; \n\t\t\tif ( step != TypePath . ARRAY_ELEMENT && step != TypePath . INNER_TYPE && step != TypePath . TYPE_ARGUMENT && step != TypePath . WILDCARD_BOUND ) $F20855 ( i , typePath ) if ( step != TypePath . TYPE_ARGUMENT && typePath . getStepArgument ( i ) != NUM00 ) $F20855 ( i , typePath ) } \n\t\t} \n\t} \n"}, {"code": "synchronized void addTracer ( Tracer tracer ) { \n\tif $F9793 ( curTracers , tracer ) { \n\t\tLOG . trace ( $F293537 ( toString , tracer ) ) ; \n\t\t} \n\t} \n"}, {"code": "private void grow $F72 { \n\tint newCap = ( entries . length < < NUM00 ) + NUM00 ; \n\t$F133 ( newEntries , newCap ) $F135 ( System , entries , newEntries , size ) entries = newEntries ; \n\t} \n"}, {"code": "public void damage ( double value ) { \n\tsetValue ( Math . max ( NUM00 , getValue ( ) - value ) ) ; \n\t} \n"}, {"code": "@ Ignore ( NUM00 ) $F32043 public void testConcurrentEventsOnEmptyRegion $F72 $F5795 ( versionTestConcurrentEventsOnEmptyRegion ) "}, {"code": "public Graph $F72 { \n\t$F93427 ( roots ) ; \n\t$F93427 ( nodes ) ; \n\tstring = NUM00 ; \n\t} \n"}, {"code": "private static String trimVersion ( String apiVersion ) { \n\tif ( apiVersion == null ) $F1337 else { \n\t\t$F6542 ( versionParts , apiVersion ) return $F8528 ( versionParts ) ; \n\t\t} \n\t} \n"}, {"code": "private Inventory queryInventory ( boolean querySkuDetails , $F3803 moreItemSkus ) throws IabException { \n\tcheckNotDisposed ( ) ; \n\tcheckSetupDone ( NUM00 ) ; \n\ttry { \n\t\tInventory inv = new Inventory $F72 ; \n\t\tint r = queryPurchases ( inv , ITEM_TYPE_INAPP ) ; \n\t\tif ( r != BILLING_RESPONSE_RESULT_OK ) { \n\t\t\tthrow new IabException ( r , NUM00 ) ; \n\t\t\t} \n\t\tif ( querySkuDetails ) { \n\t\t\tr = querySkuDetails ( ITEM_TYPE_INAPP , inv , moreItemSkus ) ; \n\t\t\tif ( r != BILLING_RESPONSE_RESULT_OK ) { \n\t\t\t\tthrow new IabException ( r , NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( mSubscriptionsSupported ) { \n\t\t\tr = queryPurchases ( inv , ITEM_TYPE_SUBS ) ; \n\t\t\tif ( r != BILLING_RESPONSE_RESULT_OK ) { \n\t\t\t\tthrow new IabException ( r , NUM00 ) ; \n\t\t\t\t} \n\t\t\tif ( querySkuDetails ) { \n\t\t\t\tr = querySkuDetails ( ITEM_TYPE_SUBS , inv , moreItemSkus ) ; \n\t\t\t\tif ( r != BILLING_RESPONSE_RESULT_OK ) { \n\t\t\t\t\tthrow new IabException ( r , NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\treturn inv ; \n\t\t} \n\tcatch ( RemoteException e ) { \n\t\tthrow new IabException ( IABHELPER_REMOTE_EXCEPTION , NUM00 , e ) ; \n\t\t} \n\tcatch ( JSONException e ) { \n\t\tthrow new IabException ( IABHELPER_BAD_RESPONSE , NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void incomingObject ( IAnalyzedInterval analyzedInterval ) throws AdeException { \n\tif ( ! m_percentilesWithEmptyIntervals && analyzedInterval . getNumUniqueMessageIds ( ) == NUM00 ) $F932 final double rawScore = calcRawScore ( analyzedInterval ) ; \n\tif ( ! SeenHugeLogProb ( analyzedInterval ) ) { \n\t\tm_rawScores . add ( rawScore ) ; \n\t\t++ m_intervalCount ; \n\t\t} \n\t} \n"}, {"code": "public static String readFileAsString ( File file , String encoding ) throws IOException { \n\tByteBuffer buffer = readFile ( file ) ; \n\tif ( null == encoding ) { \n\t\tencoding = NUM00 ; \n\t\t} \n\tString converted = new String ( buffer . array ( ) , encoding ) ; \n\treturn converted ; \n\t} \n"}, {"code": "public EmBayesEstimatorEditor ( EmBayesEstimatorWrapper emBayesEstWrapper ) { \n\tthis ( emBayesEstWrapper . getEstimateBayesIm ( ) , emBayesEstWrapper . getDataSet ( ) ) ; \n\t} \n"}, {"code": "private boolean saveDataToDisk ( boolean exit , boolean complete , String updatedSaveName ) $F33971 ( saveDataToDisk , exit , complete , updatedSaveName , _BOOL ) "}, {"code": "public static final void writeMapXml ( Map val , String name , XmlSerializer out , WriteMapCallback callback ) throws $F52182 { \n\t$F18827 ( val , out ) $F18823 ( out ) $F18831 ( name , out ) writeMapXml ( val , out , callback ) ; \n\t$F18825 ( out ) } \n"}, {"code": "public boolean needPreloadKey ( int idx ) { \n\treturn preloadKeys != null && preloadKeys . get ( idx ) ; \n\t} \n"}, {"code": "public int generateChallengeToken ( InetSocketAddress address ) { \n\t$F8254 ( token , random ) challengeTokens . put ( address , token ) ; \n\treturn token ; \n\t} \n"}, {"code": "$F1 public void perform ( IR ir ) { \n\tfor ( $F32409 e = ir . getBasicBlocks ( ) ; \n\te . hasMoreElements ( ) ; \n\t) { \n\t\t$F32413 ( bb , e ) if $F2979 ( bb ) $F598 container . counter2 ++ ; \n\t\tif ( bb . getInfrequent ( ) ) { \n\t\t\tcontainer . counter1 ++ ; \n\t\t\tif ( ir . options . FREQ_FOCUS_EFFORT ) $F598 } \n\t\tfor ( $F12039 ie = bb . forwardInstrEnumerator ( ) ; \n\t\tie . hasMoreElements ( ) ; \n\t\t) { \n\t\t\t$F12043 ( s , ie ) if ( TypeCheck . conforms ( s ) && ( invertNullAndTypeChecks ( s ) || pushTypeCheckBelowIf ( s , ir ) ) ) { \n\t\t\t\tie = bb . forwardInstrEnumerator ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F32569 ( panel , cols , rows , filler , filled_cell_11 , _BOOL , cc , Box , index ) "}, {"code": "public void runWithRetries ( RetryableTask task ) throws Exception { \n\tboolean maxSleepIntervalHit = _BOOL ; \n\tfor ( $F119 ( i , numAttempts ) ) { \n\t\ttry { \n\t\t\t$F21687 ( task ) $F665 } \n\t\tcatch ( Exception e ) { \n\t\t\tif ( i == numAttempts - NUM00 ) { \n\t\t\t\tthrow e ; \n\t\t\t\t} \n\t\t\tint sleepTime ; \n\t\t\tif ( maxSleepIntervalHit ) { \n\t\t\t\tsleepTime = maxSleepInterval ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tsleepTime = baseSleepInterval * $F59200 ( Math , i ) ; \n\t\t\t\t} \n\t\t\t$F186360 ( LOG , sleepTime , e ) try { \n\t\t\t\t$F28300 ( Thread , sleepTime ) } \n\t\t\tcatch ( InterruptedException ie ) $F526539 ( LOG , ie ) } \n\t\t} \n\t} \n"}, {"code": "public Object pack $F72 { \n\tif ( collection ) { \n\t\tList l = ( List ) value ; \n\t\tif ( Types . isArray ( type ) ) { \n\t\t\t$F131 o = ( $F131 ) Array . newInstance ( itemType , l . size ( ) ) ; \n\t\t\tl . toArray ( o ) ; \n\t\t\treturn o ; \n\t\t\t} \n\t\t} \n\treturn value ; \n\t} \n"}, {"code": "public void removeRequest ( InterruptRequest interruptRequest ) $F23075 ( interruptRequestQueue , interruptRequest ) "}, {"code": "$F1 public final void onHeatmapFailed $F72 { \n\tupdatePending = _BOOL ; \n\t} \n"}, {"code": "$F20664 $F5466 public static Drawable inflate ( boolean forceSystemHandlingWhenPossible , $F4170 Resources resources , @ DrawableRes int id ) { \n\tboolean systemHandling = isSystemHandling ( forceSystemHandlingWhenPossible ) ; \n\tLog . d ( LOG_TAG , String . format ( NUM00 , Integer . toHexString ( id ) , systemHandling ) ) ; \n\tif ( systemHandling ) { \n\t\treturn resources . getDrawable ( id , null ) ; \n\t\t} \n\ttry { \n\t\t$F8187 ( VectorDrawable , resources , id ) } \n\tcatch ( Resources . NotFoundException e ) $F1337 } \n"}, {"code": "public static long objectFieldOffset ( Field field ) { \n\treturn UNSAFE . objectFieldOffset ( field ) ; \n\t} \n"}, {"code": "public void addAnnotation $F21013 ( annotation , x , y ) { \n\tmAnnotations . add ( annotation ) ; \n\tmStringXY . put ( x , y ) ; \n\t} \n"}, {"code": "protected synchronized void write ( long offset , $F96 b ) throws IOException { \n\tif ( byteBuffer != null ) { \n\t\tbyteBuffer . position ( ( int ) offset ) ; \n\t\tbyteBuffer . put ( b ) ; \n\t\t} \n\telse { \n\t\tthrow new IOException $F29591 ( getPath ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F96 ivCipherConcat $F7233 ( iv , cipherText ) { \n\t$F148496 ( combined , iv , cipherText ) $F7057 ( System , iv , combined ) $F11244 ( System , cipherText , combined , iv ) return combined ; \n\t} \n"}, {"code": "long timestamp ( long timestamp ) { \n\tthis . timestamp = Math . max ( this . timestamp , timestamp ) ; \n\treturn this . timestamp ; \n\t} \n"}, {"code": "public MaterialPackage ( MaterialPackageBO materialPackageBO , List < GenericTrack > genericTracks ) { \n\tsuper ( materialPackageBO ) ; \n\tthis . materialPackageBO = materialPackageBO ; \n\tthis . genericTracks = Collections . unmodifiableList ( genericTracks ) ; \n\t} \n"}, {"code": "public Edge findEdgeInSameDirection ( Coordinate p0 , Coordinate p1 ) { \n\tfor ( $F2277 ( i , edges ) ) { \n\t\tEdge e = ( Edge ) edges . get ( i ) ; \n\t\t$F237836 ( eCoord , e ) if ( matchInSameDirection ( p0 , p1 , eCoord [ NUM00 ] , eCoord [ NUM00 ] ) ) return e ; \n\t\tif ( matchInSameDirection ( p0 , p1 , $F8528 ( eCoord ) , $F8528 ( eCoord ) ) ) return e ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public void acquireProbabilities ( final String string ) { \n\tif $F3599 ( string ) $F932 for ( $F38840 ( i , string ) ) { \n\t\tfinal char previousChar = string . charAt ( i - NUM00 ) ; \n\t\tfinal char currentChar = string . charAt ( i - NUM00 ) ; \n\t\t$F1090 ( nextChar , string , i ) final String key = previousChar + NUM00 + currentChar ; \n\t\t$F2201 ( sequences , key ) HashMap < Character , Integer > probabilities = sequenceProbabilities . get ( key ) ; \n\t\tif ( probabilities == null ) { \n\t\t\t$F23429 ( probabilities ) sequenceProbabilities . put ( key , probabilities ) ; \n\t\t\t} \n\t\tint existingValue = probabilities . getOrDefault ( nextChar , NUM00 ) ; \n\t\t++ existingValue ; \n\t\tprobabilities . put ( nextChar , existingValue ) ; \n\t\t} \n\t} \n"}, {"code": "protected final void resolveIssue ( HealthIssue healthIssue ) { \n\tEventBus eventBus ; \n\tboolean wasIssueActive ; \n\tsynchronized ( mLock ) { \n\t\tif ( mHealthEventBus == null ) { \n\t\t\tLOG . w ( NUM00 + NUM00 , healthIssue . toString ( ) ) ; \n\t\t\t$F665 } \n\t\teventBus = mHealthEventBus ; \n\t\twasIssueActive = mActiveIssues . remove ( healthIssue ) ; \n\t\t} \n\tif ( wasIssueActive ) { \n\t\teventBus . post ( healthIssue . resolved ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F96 decode ( String s ) $F8587 ( decode , s , NO_OPTIONS ) "}, {"code": "private static boolean test ( ODatabaseDocumentPool pool , String dbURL , String user , String password , boolean finalTry ) { \n\tODatabaseDocumentTx db = null ; \n\ttry { \n\t\t$F973 ( logger ) db = pool . acquire ( dbURL , user , password ) ; \n\t\tIterator < ODocument > iter = db . browseClass ( NUM00 ) ; \n\t\tif $F2921 ( iter ) $F106111 ( iter ) } \n\tcatch ( OException ex ) { \n\t\tif ( finalTry ) $F58539 ( logger , ex ) else $F11589 ( logger , ex ) return _BOOL ; \n\t\t} \n\t$F14364 ( db ) return _BOOL ; \n\t} \n"}, {"code": "$F1 public void agg ( Object newVal ) { \n\tif $F2456 ( newVal ) { \n\t\t$F114166 ( values , newVal ) $F23500 ( buffer , ByteBuffer , values ) $F23501 ( buffer ) while $F5720 ( buffer ) { \n\t\t\tvalueSet . add ( buffer . getInt ( ) ) ; \n\t\t\t} \n\t\t$F665 } \n\telse { \n\t\tdouble value = new Double $F3362 ( newVal ) ; \n\t\tagg ( value ) ; \n\t\t} \n\t} \n"}, {"code": "private void displayEasterEgg ( CommandSender sender ) { \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\tsender . sendMessage ( StringEscapeUtils . unescapeJava ( NUM00 ) ) ; \n\t} \n"}, {"code": "public boolean isUnparsedEntity ( String entityName ) { \n\tEntity entity = ( Entity ) fEntities . get ( entityName ) ; \n\t$F1933 ( entity , _BOOL ) return entity . isUnparsed ( ) ; \n\t} \n"}, {"code": "$F122160 ( out ) "}, {"code": "$F31980 ( text , URLEncoder ) "}, {"code": "protected void processFocusEvent ( FocusEvent evt ) { \n\tsuper . processFocusEvent ( evt ) ; \n\tif ( evt . getID ( ) == FocusEvent . FOCUS_LOST ) { \n\t\t$F42855 ( popup , hidePopup ) } \n\t} \n"}, {"code": "$F1 public synchronized void addRequestProperty ( String key , String value ) { \n\tif ( connected || connecting ) $F4638 $F1149 ( key ) if ( isExternalMessageHeaderAllowed ( key , value ) ) { \n\t\trequests . add ( key , value ) ; \n\t\tif $F14072 ( key ) $F42308 ( userHeaders , key , value ) } \n\t} \n"}, {"code": "public void execute ( AbortableTask task ) { \n\tAbortingRunnable ar = new AbortingRunnable ( task ) ; \n\ttasks . add ( ar ) ; \n\ttry $F44547 ( exec , ar ) catch ( RejectedExecutionException e ) { \n\t\ttasks . remove ( ar ) ; \n\t\tthrow e ; \n\t\t} \n\t} \n"}, {"code": "default ByteBuffer serialize ( T value ) { \n\tByteBuffer buffer = ByteBuffer . allocate ( size ( value ) ) ; \n\tserialize ( value , buffer ) ; \n\treturn buffer ; \n\t} \n"}, {"code": "private void loadSubmissions $F72 { \n\t$F725 ( submissions ) $F806 users = JPlagCentral . usersList ( ) ; \n\tfor ( $F1139 ( i , users ) ) { \n\t\tAccessStructure [ ] subm = JPlagCentral . listAccessStructures ( users [ i ] ) ; \n\t\tif $F180527 ( subm ) { \n\t\t\t$F68861 ( j , subm , submissions ) } \n\t\t} \n\t} \n"}, {"code": "private void subFormat ( int patternCharIndex , int count , FieldDelegate delegate , StringBuffer buffer , boolean useDateFormatSymbols ) { \n\tint maxIntCount = Integer . MAX_VALUE ; \n\tString current = null ; \n\t$F1749 ( beginOffset , buffer ) int field = PATTERN_INDEX_TO_CALENDAR_FIELD [ patternCharIndex ] ; \n\tint value ; \n\tif ( field == CalendarBuilder . WEEK_YEAR ) { \n\t\tif ( calendar . isWeekDateSupported ( ) ) { \n\t\t\tvalue = calendar . getWeekYear ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\tpatternCharIndex = PATTERN_YEAR ; \n\t\t\tfield = PATTERN_INDEX_TO_CALENDAR_FIELD [ patternCharIndex ] ; \n\t\t\tvalue = calendar . get ( field ) ; \n\t\t\t} \n\t\t} \n\telse if ( field == CalendarBuilder . ISO_DAY_OF_WEEK ) { \n\t\tvalue = CalendarBuilder . toISODayOfWeek ( calendar . get ( Calendar . DAY_OF_WEEK ) ) ; \n\t\t} \n\telse $F6045 ( value , calendar , field ) int style = ( count >= NUM00 ) ? Calendar . LONG : Calendar . SHORT ; \n\tif ( ! useDateFormatSymbols && field < Calendar . ZONE_OFFSET && patternCharIndex != PATTERN_MONTH_STANDALONE ) { \n\t\tcurrent = calendar . getDisplayName ( field , style , locale ) ; \n\t\t} \n\tswitch ( patternCharIndex ) { \n\t\tcase PATTERN_ERA : if ( useDateFormatSymbols ) { \n\t\t\t$F806 eras = formatData . getEras ( ) ; \n\t\t\tif ( value < eras . length ) { \n\t\t\t\tcurrent = eras [ value ] ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F23170 ( current ) $F597 case PATTERN_WEEK_YEAR : case PATTERN_YEAR : if ( calendar instanceof GregorianCalendar ) { \n\t\t\tif ( count != NUM00 ) { \n\t\t\t\tzeroPaddingNumber ( value , count , maxIntCount , buffer ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tzeroPaddingNumber ( value , NUM00 , NUM00 , buffer ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( current == null ) { \n\t\t\t\tzeroPaddingNumber ( value , style == Calendar . LONG ? NUM00 : count , maxIntCount , buffer ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F597 case PATTERN_MONTH : if ( useDateFormatSymbols ) { \n\t\t\t$F806 months ; \n\t\t\tif ( count >= NUM00 ) { \n\t\t\t\tmonths = formatData . getMonths ( ) ; \n\t\t\t\tcurrent = months [ value ] ; \n\t\t\t\t} \n\t\t\telse if ( count == NUM00 ) { \n\t\t\t\tmonths = formatData . getShortMonths ( ) ; \n\t\t\t\tcurrent = months [ value ] ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( count < NUM00 ) { \n\t\t\t\tcurrent = null ; \n\t\t\t\t} \n\t\t\telse if ( forceStandaloneForm ) { \n\t\t\t\tcurrent = calendar . getDisplayName ( field , style | NUM00 , locale ) ; \n\t\t\t\tif ( current == null ) { \n\t\t\t\t\tcurrent = calendar . getDisplayName ( field , style , locale ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tif ( current == null ) { \n\t\t\tzeroPaddingNumber ( value + NUM00 , count , maxIntCount , buffer ) ; \n\t\t\t} \n\t\t$F597 case PATTERN_MONTH_STANDALONE : assert current == null ; \n\t\tif ( locale == null ) { \n\t\t\t$F806 months ; \n\t\t\tif ( count >= NUM00 ) { \n\t\t\t\tmonths = formatData . getMonths ( ) ; \n\t\t\t\tcurrent = months [ value ] ; \n\t\t\t\t} \n\t\t\telse if ( count == NUM00 ) { \n\t\t\t\tmonths = formatData . getShortMonths ( ) ; \n\t\t\t\tcurrent = months [ value ] ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( count >= NUM00 ) { \n\t\t\t\tcurrent = calendar . getDisplayName ( field , style | NUM00 , locale ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( current == null ) { \n\t\t\tzeroPaddingNumber ( value + NUM00 , count , maxIntCount , buffer ) ; \n\t\t\t} \n\t\t$F597 case PATTERN_HOUR_OF_DAY1 : if ( current == null ) { \n\t\t\tif ( value == NUM00 ) { \n\t\t\t\tzeroPaddingNumber ( calendar . getMaximum ( Calendar . HOUR_OF_DAY ) + NUM00 , count , maxIntCount , buffer ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tzeroPaddingNumber ( value , count , maxIntCount , buffer ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F597 case PATTERN_DAY_OF_WEEK : if ( useDateFormatSymbols ) { \n\t\t\t$F806 weekdays ; \n\t\t\tif ( count >= NUM00 ) { \n\t\t\t\tweekdays = formatData . getWeekdays ( ) ; \n\t\t\t\tcurrent = weekdays [ value ] ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tweekdays = formatData . getShortWeekdays ( ) ; \n\t\t\t\tcurrent = weekdays [ value ] ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F597 case PATTERN_AM_PM : if ( useDateFormatSymbols ) { \n\t\t\t$F806 ampm = formatData . getAmPmStrings ( ) ; \n\t\t\tcurrent = ampm [ value ] ; \n\t\t\t} \n\t\t$F597 case PATTERN_HOUR1 : if ( current == null ) { \n\t\t\tif ( value == NUM00 ) { \n\t\t\t\tzeroPaddingNumber ( calendar . getLeastMaximum ( Calendar . HOUR ) + NUM00 , count , maxIntCount , buffer ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tzeroPaddingNumber ( value , count , maxIntCount , buffer ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F597 case PATTERN_ZONE_NAME : if ( current == null ) { \n\t\t\tif ( formatData . locale == null || formatData . isZoneStringsSet ) { \n\t\t\t\tint zoneIndex = formatData . getZoneIndex ( calendar . getTimeZone ( ) . getID ( ) ) ; \n\t\t\t\tif ( zoneIndex == - NUM00 ) { \n\t\t\t\t\tvalue = calendar . get ( Calendar . ZONE_OFFSET ) + calendar . get ( Calendar . DST_OFFSET ) ; \n\t\t\t\t\tbuffer . append ( ZoneInfoFile . toCustomID ( value ) ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tint index = ( calendar . get ( Calendar . DST_OFFSET ) == NUM00 ) ? NUM00 : NUM00 ; \n\t\t\t\t\tif ( count < NUM00 ) { \n\t\t\t\t\t\tindex ++ ; \n\t\t\t\t\t\t} \n\t\t\t\t\t$F20724 zoneStrings = formatData . getZoneStringsWrapper ( ) ; \n\t\t\t\t\t$F53015 ( buffer , zoneStrings , zoneIndex , index ) } \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tTimeZone tz = calendar . getTimeZone ( ) ; \n\t\t\t\tboolean daylight = ( calendar . get ( Calendar . DST_OFFSET ) != NUM00 ) ; \n\t\t\t\tint tzstyle = ( count < NUM00 ? TimeZone . SHORT : TimeZone . LONG ) ; \n\t\t\t\tbuffer . append ( tz . getDisplayName ( daylight , tzstyle , formatData . locale ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F597 case PATTERN_ZONE_VALUE : value = ( calendar . get ( Calendar . ZONE_OFFSET ) + calendar . get ( Calendar . DST_OFFSET ) ) / NUM00 ; \n\t\tint width = NUM00 ; \n\t\tif ( value >= NUM00 ) $F86 ( buffer ) else { \n\t\t\twidth ++ ; \n\t\t\t} \n\t\tint num = ( value / NUM00 ) * NUM00 + ( value % NUM00 ) ; \n\t\tCalendarUtils . sprintf0d ( buffer , num , width ) ; \n\t\t$F597 case PATTERN_ISO_ZONE : value = calendar . get ( Calendar . ZONE_OFFSET ) + calendar . get ( Calendar . DST_OFFSET ) ; \n\t\tif ( value == NUM00 ) $F257374 ( buffer ) value /= NUM00 ; \n\t\tif ( value >= NUM00 ) $F86 ( buffer ) else { \n\t\t\t$F84 ( buffer ) value = - value ; \n\t\t\t} \n\t\tCalendarUtils . sprintf0d ( buffer , value / NUM00 , NUM00 ) ; \n\t\t$F7256 ( count ) if ( count == NUM00 ) $F86 ( buffer ) CalendarUtils . sprintf0d ( buffer , value % NUM00 , NUM00 ) ; \n\t\t$F597 $F1267 if ( current == null ) { \n\t\t\tzeroPaddingNumber ( value , count , maxIntCount , buffer ) ; \n\t\t\t} \n\t\t$F597 } \n\t$F13324 ( current , buffer ) int fieldID = PATTERN_INDEX_TO_DATE_FORMAT_FIELD [ patternCharIndex ] ; \n\tField f = PATTERN_INDEX_TO_DATE_FORMAT_FIELD_ID [ patternCharIndex ] ; \n\tdelegate . formatted ( fieldID , f , f , beginOffset , buffer . length ( ) , buffer ) ; \n\t} \n"}, {"code": "$F1431 public boolean onTouchEvent ( MotionEvent event ) { \n\ttry { \n\t\tint pointerCount = multiTouchSupported ? ( Integer ) m_getPointerCount . invoke ( event ) : NUM00 ; \n\t\tif ( DEBUG ) Log . i ( NUM00 , NUM00 + multiTouchSupported + NUM00 + mMode + NUM00 + handleSingleTouchEvents + NUM00 + pointerCount ) ; \n\t\tif ( mMode == MODE_NOTHING && ! handleSingleTouchEvents && pointerCount == NUM00 ) return _BOOL ; \n\t\tif ( DEBUG ) $F16229 ( Log ) int action = event . getAction ( ) ; \n\t\tint histLen = event . getHistorySize ( ) / pointerCount ; \n\t\tfor ( $F9993 ( histIdx , histLen ) ) { \n\t\t\tboolean processingHist = histIdx < histLen ; \n\t\t\tif ( ! multiTouchSupported || pointerCount == NUM00 ) { \n\t\t\t\tif ( DEBUG ) $F16229 ( Log ) xVals [ NUM00 ] = processingHist ? event . getHistoricalX ( histIdx ) : event . getX ( ) ; \n\t\t\t\tyVals [ NUM00 ] = processingHist ? event . getHistoricalY ( histIdx ) : event . getY ( ) ; \n\t\t\t\tpressureVals [ NUM00 ] = processingHist ? event . getHistoricalPressure ( histIdx ) : event . getPressure ( ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( DEBUG ) $F16229 ( Log ) $F17565 ( numPointers , Math , pointerCount , MAX_TOUCH_POINTS ) if ( DEBUG && pointerCount > MAX_TOUCH_POINTS ) $F16229 ( Log ) for ( $F119 ( ptrIdx , numPointers ) ) { \n\t\t\t\t\tint ptrId = ( Integer ) m_getPointerId . invoke ( event , ptrIdx ) ; \n\t\t\t\t\tpointerIds [ ptrIdx ] = ptrId ; \n\t\t\t\t\txVals [ ptrIdx ] = ( Float ) ( processingHist ? m_getHistoricalX . invoke ( event , ptrIdx , histIdx ) : m_getX . invoke ( event , ptrIdx ) ) ; \n\t\t\t\t\tyVals [ ptrIdx ] = ( Float ) ( processingHist ? m_getHistoricalY . invoke ( event , ptrIdx , histIdx ) : m_getY . invoke ( event , ptrIdx ) ) ; \n\t\t\t\t\tpressureVals [ ptrIdx ] = ( Float ) ( processingHist ? m_getHistoricalPressure . invoke ( event , ptrIdx , histIdx ) : m_getPressure . invoke ( event , ptrIdx ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tdecodeTouchEvent ( pointerCount , xVals , yVals , pressureVals , pointerIds , processingHist ? MotionEvent . ACTION_MOVE : action , processingHist ? _BOOL : action != MotionEvent . ACTION_UP && ( action & ( $F76927 ( ACTION_POINTER_INDEX_SHIFT ) ) ) != ACTION_POINTER_UP && action != MotionEvent . ACTION_CANCEL , processingHist ? event . getHistoricalEventTime ( histIdx ) : event . getEventTime ( ) ) ; \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tLog . e ( NUM00 , NUM00 , e ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public static Bit valueOf ( String bit ) throws NumberFormatException { \n\tfinal int i = Integer . parseInt ( bit ) ; \n\tif ( i != NUM00 && i != NUM00 ) { \n\t\t$F58968 ( bit ) } \n\treturn ( i > NUM00 ) ? TRUE : FALSE ; \n\t} \n"}, {"code": "public boolean next $F72 throws EOFException { \n\tif ( limit >= fileSize ) { \n\t\tthrow new EOFException $F580 ; \n\t\t} \n\tif ( mem . getLongVolatile ( Structure . Limit ) <= limit ) { \n\t\treturn _BOOL ; \n\t\t} \n\tbyte commit = mem . getByteVolatile ( limit ) ; \n\tbyte rollback = mem . getByteVolatile ( limit + Length . Commit ) ; \n\tif ( rollback == Rollback . Set ) { \n\t\tlimit += Length . RecordHeader + recordSize ; \n\t\ttimeoutCounter = NUM00 ; \n\t\ttimerStart = NUM00 ; \n\t\treturn _BOOL ; \n\t\t} \n\tif ( commit == Commit . Set ) { \n\t\ttimeoutCounter = NUM00 ; \n\t\ttimerStart = NUM00 ; \n\t\treturn _BOOL ; \n\t\t} \n\ttimeoutCounter ++ ; \n\tif ( timeoutCounter >= MAX_TIMEOUT_COUNT ) { \n\t\tif ( timerStart == NUM00 ) $F22067 ( timerStart , System ) else { \n\t\t\tif ( System . currentTimeMillis ( ) - timerStart >= maxTimeout ) { \n\t\t\t\tmem . putByteVolatile ( limit + Length . Commit , Rollback . Set ) ; \n\t\t\t\tlimit += Length . RecordHeader + recordSize ; \n\t\t\t\ttimeoutCounter = NUM00 ; \n\t\t\t\ttimerStart = NUM00 ; \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private int composeComponent ( int a , int b ) { \n\treturn Math . min ( b + b * a / DIMMING_FACTOR , NUM00 ) ; \n\t} \n"}, {"code": "$F95779 ( out , remaining , count , buf , buffers , c , Math ) "}, {"code": "public void removeTreeModelListener ( TreeModelListener l ) $F130709 ( treeModelListeners , l ) "}, {"code": "public URIName ( String name ) throws IOException { \n\ttry { \n\t\turi = new URI ( name ) ; \n\t\t} \n\tcatch ( URISyntaxException use ) $F19606 ( name , use ) if ( uri . getScheme ( ) == null ) $F3496 ( name ) host = uri . getHost ( ) ; \n\tif ( host != null ) { \n\t\tif $F4432 ( host ) { \n\t\t\t$F13881 ( ipV6Host , host ) try { \n\t\t\t\thostIP = new IPAddressName ( ipV6Host ) ; \n\t\t\t\t} \n\t\t\tcatch ( IOException ioe ) { \n\t\t\t\tthrow new IOException ( NUM00 + NUM00 + name ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\ttry { \n\t\t\t\thostDNS = new DNSName ( host ) ; \n\t\t\t\t} \n\t\t\tcatch ( IOException ioe ) { \n\t\t\t\ttry { \n\t\t\t\t\thostIP = new IPAddressName ( host ) ; \n\t\t\t\t\t} \n\t\t\t\tcatch ( Exception ioe2 ) { \n\t\t\t\t\tthrow new IOException ( $F38 + name ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public ProjectedStream addView ( String namespace , String name , $F240647 parameters ) { \n\tviews . add ( View . create ( namespace , name , parameters ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "protected int read ( SpeechRecord recorder , $F96 buffer ) { \n\tint len = buffer . length ; \n\t$F65003 ( numOfBytes , recorder , buffer , len ) int status = getStatus ( numOfBytes , len ) ; \n\tif ( status == NUM00 ) { \n\t\t$F6483 ( System , buffer , mRecording , mRecordedLength , numOfBytes ) mRecordedLength += len ; \n\t\t} \n\treturn status ; \n\t} \n"}, {"code": "public void touch $F72 { \n\tcandiesStore = null ; \n\t} \n"}, {"code": "public ZoneRules toRules ( String zoneId ) { \n\t$F10578 ( Objects , zoneId ) if $F2979 ( windowList ) $F4639 final List < ZoneOffsetTransition > $F9187 ( standardTransitionList ) ; \n\tfinal List < ZoneOffsetTransition > $F9187 ( transitionList ) ; \n\tfinal List < ZoneOffsetTransitionRule > $F9187 ( lastTransitionRuleList ) ; \n\tfinal TZWindow firstWindow = windowList . get ( NUM00 ) ; \n\tZoneOffset loopStandardOffset = firstWindow . standardOffset ; \n\tint loopSavings = NUM00 ; \n\tif ( firstWindow . fixedSavingAmountSecs != null ) { \n\t\tloopSavings = firstWindow . fixedSavingAmountSecs ; \n\t\t} \n\tfinal ZoneOffset firstWallOffset = ZoneOffset . ofTotalSeconds ( loopStandardOffset . getTotalSeconds ( ) + loopSavings ) ; \n\tLocalDateTime loopWindowStart = LocalDateTime . of ( YEAR_MIN_VALUE , NUM00 , NUM00 , NUM00 , NUM00 ) ; \n\tZoneOffset loopWindowOffset = firstWallOffset ; \n\tfor ( TZWindow window : windowList ) { \n\t\twindow . tidy ( loopWindowStart . getYear ( ) ) ; \n\t\tInteger effectiveSavings = window . fixedSavingAmountSecs ; \n\t\tif ( effectiveSavings == null ) { \n\t\t\teffectiveSavings = NUM00 ; \n\t\t\tfor ( TZRule rule : window . ruleList ) { \n\t\t\t\tif ( rule . toEpochSecond ( loopStandardOffset , loopSavings ) > loopWindowStart . toEpochSecond ( loopWindowOffset ) ) $F5153 effectiveSavings = rule . savingAmountSecs ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( loopStandardOffset . equals ( window . standardOffset ) == _BOOL ) { \n\t\t\tstandardTransitionList . add ( new ZoneOffsetTransition ( LocalDateTime . ofEpochSecond ( loopWindowStart . toEpochSecond ( loopWindowOffset ) , NUM00 , loopStandardOffset ) , loopStandardOffset , window . standardOffset ) ) ; \n\t\t\tloopStandardOffset = window . standardOffset ; \n\t\t\t} \n\t\tZoneOffset effectiveWallOffset = ZoneOffset . ofTotalSeconds ( loopStandardOffset . getTotalSeconds ( ) + effectiveSavings ) ; \n\t\tif ( loopWindowOffset . equals ( effectiveWallOffset ) == _BOOL ) { \n\t\t\ttransitionList . add ( new ZoneOffsetTransition ( loopWindowStart , loopWindowOffset , effectiveWallOffset ) ) ; \n\t\t\t} \n\t\tloopSavings = effectiveSavings ; \n\t\tfor ( TZRule rule : window . ruleList ) { \n\t\t\tif ( rule . isTransition ( loopSavings ) ) { \n\t\t\t\tZoneOffsetTransition trans = rule . toTransition ( loopStandardOffset , loopSavings ) ; \n\t\t\t\tif ( trans . toEpochSecond ( ) < loopWindowStart . toEpochSecond ( loopWindowOffset ) == _BOOL && trans . toEpochSecond ( ) < window . createDateTimeEpochSecond ( loopSavings ) ) { \n\t\t\t\t\ttransitionList . add ( trans ) ; \n\t\t\t\t\tloopSavings = rule . savingAmountSecs ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tfor ( TZRule lastRule : window . lastRuleList ) { \n\t\t\tlastTransitionRuleList . add ( lastRule . toTransitionRule ( loopStandardOffset , loopSavings ) ) ; \n\t\t\tloopSavings = lastRule . savingAmountSecs ; \n\t\t\t} \n\t\tloopWindowOffset = window . createWallOffset ( loopSavings ) ; \n\t\tloopWindowStart = LocalDateTime . ofEpochSecond ( window . createDateTimeEpochSecond ( loopSavings ) , NUM00 , loopWindowOffset ) ; \n\t\t} \n\treturn new ZoneRules ( firstWindow . standardOffset , firstWallOffset , standardTransitionList , transitionList , lastTransitionRuleList ) ; \n\t} \n"}, {"code": "public static int hash ( Object o ) { \n\tint h = o == null ? NUM00 : o instanceof $F96 ? Arrays . hashCode ( $F2457 ( o ) ) : o . hashCode ( ) ; \n\th += ( h < < NUM00 ) ^ NUM00 ; \n\t$F159351 ( h ) $F159353 ( h ) $F159351 ( h ) h += ( h < < NUM00 ) + ( h < < NUM00 ) ; \n\treturn h ^ $F14870 ( h ) ; \n\t} \n"}, {"code": "public void addParseTemplate ( String parseTemplate ) $F207 ( parseTemplates , parseTemplate ) "}, {"code": "private void attachImageFromCamera $F72 { \n\ttry { \n\t\tif ( null != mShootedPicturePath ) { \n\t\t\tUri uri = Uri . fromFile ( new File ( mShootedPicturePath ) ) ; \n\t\t\ttry { \n\t\t\t\tBitmap previewBitmap = VectorApp . getSavedPickerImagePreview ( ) ; \n\t\t\t\tString thumbnailPath = getThumbnailPath ( mShootedPicturePath ) ; \n\t\t\t\tint rotationAngle = ImageUtils . getRotationAngleForBitmap ( VectorMediasPickerActivity . this , uri ) ; \n\t\t\t\tif ( NUM00 != rotationAngle ) { \n\t\t\t\t\tandroid . graphics . Matrix bitmapMatrix = new android . graphics . Matrix $F72 ; \n\t\t\t\t\tbitmapMatrix . postRotate ( NUM00 - rotationAngle ) ; \n\t\t\t\t\tpreviewBitmap = Bitmap . createBitmap ( previewBitmap , NUM00 , NUM00 , previewBitmap . getWidth ( ) , previewBitmap . getHeight ( ) , bitmapMatrix , _BOOL ) ; \n\t\t\t\t\t} \n\t\t\t\t$F1705 ( file , thumbnailPath ) $F4649 ( outStream , file ) $F26834 ( previewBitmap , Bitmap , outStream ) $F1206 ( outStream ) $F59 ( outStream ) } \n\t\t\tcatch ( Exception e ) $F13955 ( Log , LOG_TAG ) $F53033 ( conData ) Intent $F192736 ( intent ) ; \n\t\t\tintent . setData ( uri ) ; \n\t\t\tintent . putExtras ( conData ) ; \n\t\t\tsetResult ( RESULT_OK , intent ) ; \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) $F11707 ( setResult , RESULT_CANCELED ) finally { \n\t\tVectorApp . setSavedCameraImagePreview ( null ) ; \n\t\tfinish ( ) ; \n\t\t} \n\t} \n"}, {"code": "private double minIgnoreNaN ( double a , double b ) { \n\t$F95699 ( Double , a , b ) $F95699 ( Double , b , a ) $F95700 ( Math , a , b ) } \n"}, {"code": "public ObjectName preRegister ( MBeanServer server , ObjectName name ) throws Exception { \n\tsetMBeanServer ( server ) ; \n\tif ( name == null ) { \n\t\tname = new ObjectName ( server . getDefaultDomain ( ) + NUM00 + ServiceName . MLET ) ; \n\t\t} \n\tthis . mletObjectName = name ; \n\treturn this . mletObjectName ; \n\t} \n"}, {"code": "static String matchStringOrThrow ( Pattern p , ToDateParser params , $F40588 aEnum ) { \n\tString s = params . getInputStr ( ) ; \n\t$F275 ( matcher , p , s ) if $F55142 ( matcher ) { \n\t\tthrowException ( params , format ( NUM00 , aEnum . name ( ) ) ) ; \n\t\t} \n\treturn matcher . group ( NUM00 ) ; \n\t} \n"}, {"code": "String sourceFormForInitializer ( AnnotationValue annotationValue , ProcessingEnvironment processingEnv , String memberName , Element context ) { \n\tSourceFormVisitor visitor = new InitializerSourceFormVisitor ( processingEnv , memberName , context ) ; \n\t$F83 ( sb ) visitor . visit ( annotationValue , sb ) ; \n\t$F92 ( sb ) } \n"}, {"code": "static ByteBuffer newByteBuffer ( int capacity ) { \n\t$F87627 ( newbb , ByteBuffer , capacity ) $F31290 ( newbb , ByteOrder ) return newbb ; \n\t} \n"}, {"code": "public synchronized void add $F7635 ( x , y , value ) { \n\tsuper . add ( x , y ) ; \n\tmValue . add ( value ) ; \n\tupdateRange ( value ) ; \n\t} \n"}, {"code": "private void validateCollectionAttribute ( CollectionAttribute collection , $F2689 allCollections ) { \n\t$F5768 ( collection , allCollections ) for ( RestMethod restMethod : collection . getMethods ( ) ) { \n\t\tif ( allCollections . contains ( restMethod . getRestFullMethodName ( ) ) ) { \n\t\t\taspect . warning ( SimpleLocation . TOPLEVEL , $F39 , collection . getFullName ( ) , restMethod . getRestMethodName ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F13735 ( prefix , namespace , attName , attValue , xmlWriter ) "}, {"code": "public void putStringNoNull ( String s ) { \n\tensureCapacity ( $F9483 ( s ) ) ; \n\tSystem . arraycopy ( s . getBytes ( ) , NUM00 , this . byteBuffer , this . position , s . length ( ) ) ; \n\tthis . position += s . length ( ) ; \n\t} \n"}, {"code": "public void externalEntityDecl ( String name , XMLResourceIdentifier identifier , Augmentations augs ) throws XNIException { \n\ttry { \n\t\tif ( fDeclHandler != null ) { \n\t\t\tString publicId = identifier . getPublicId ( ) ; \n\t\t\tString systemId = fResolveDTDURIs ? identifier . getExpandedSystemId ( ) : identifier . getLiteralSystemId ( ) ; \n\t\t\tfDeclHandler . externalEntityDecl ( name , publicId , systemId ) ; \n\t\t\t} \n\t\t} \n\t$F122277 ( e ) } \n"}, {"code": "public HoltWintersModelBuilder alpha ( double alpha ) $F5584 ( this , alpha ) "}, {"code": "public static $F147000 ClassDescriptor createClassDescriptorFromFieldSignature ( String signature ) { \n\t$F1384 ( start , signature ) $F6664 ( start ) $F12712 ( end , signature , start ) $F6664 ( end ) return $F97645 ( createClassDescriptor , signature , start , end ) ; \n\t} \n"}, {"code": "private static ServiceTicketResponse checkGetNfcServiceTicketResponse ( ServiceTicketResponse serviceTicketResponse ) throws RpcException { \n\t$F10635 ( logger , serviceTicketResponse ) switch $F52729 ( serviceTicketResponse ) { \n\t\tcase OK : $F597 $F52738 ( SYSTEM_ERROR , serviceTicketResponse ) case NOT_FOUND : throw new DatastoreNotFoundException $F52730 ( serviceTicketResponse ) ; \n\t\t$F1267 throw new RpcException ( String . format ( NUM00 , serviceTicketResponse . getError ( ) ) ) ; \n\t\t} \n\treturn serviceTicketResponse ; \n\t} \n"}, {"code": "public void schedule ( TimerTask task , long delay ) { \n\t$F30465 ( delay ) sched ( task , System . currentTimeMillis ( ) + delay , NUM00 ) ; \n\t} \n"}, {"code": "public void filledEllipse $F12359 ( x , y , semiMajorAxis , semiMinorAxis ) { \n\t$F30465 ( semiMajorAxis ) $F30465 ( semiMinorAxis ) double xs = scaleX ( x ) ; \n\tdouble ys = scaleY ( y ) ; \n\tdouble ws = factorX ( NUM00 * semiMajorAxis ) ; \n\tdouble hs = factorY ( NUM00 * semiMinorAxis ) ; \n\tif ( ws <= NUM00 && hs <= NUM00 ) pixel ( x , y ) ; \n\telse offscreen . fill ( new $F35359 ( xs - ws / NUM00 , ys - hs / NUM00 , ws , hs ) ) ; \n\tdraw ( ) ; \n\t} \n"}, {"code": "static $F96 discardWhitespace $F97 ( data ) { \n\tbyte groomedData [ ] = $F3027 ( data ) ; \n\tint bytesCopied = NUM00 ; \n\tfor ( $F1139 ( i , data ) ) { \n\t\tswitch ( data [ i ] ) { \n\t\t\t$F271981 $F271981 $F271981 $F271981 $F597 $F1267 groomedData [ bytesCopied ++ ] = data [ i ] ; \n\t\t\t} \n\t\t} \n\tbyte packedData [ ] = new byte [ bytesCopied ] ; \n\t$F135 ( System , groomedData , packedData , bytesCopied ) return packedData ; \n\t} \n"}, {"code": "$F1 public Cursor swapCursor ( Cursor newCursor ) { \n\tmAlphabetIndexer . setCursor ( newCursor ) ; \n\treturn super . swapCursor ( newCursor ) ; \n\t} \n"}, {"code": "public void lockFlushing $F72 { \n\t$F8934 ( flushLock ) } \n"}, {"code": "public static boolean canBeRandomized ( Class clazz ) { \n\treturn ClassUtils . isPrimitiveOrWrapper ( clazz ) || clazz . equals ( $F10062 ) || clazz . equals ( IDiscordClient . class ) ; \n\t} \n"}, {"code": "public static String generateNativeGuid ( String deviceType , String serialNumber ) { \n\treturn String . format ( NUM00 , _deviceTypeMap . get ( deviceType ) , serialNumber ) ; \n\t} \n"}, {"code": "public static SecretKeys keys ( String keysStr ) throws InvalidKeyException { \n\t$F6542 ( keysArr , keysStr ) if $F11845 ( keysArr ) $F825 else { \n\t\t$F134490 ( confidentialityKey , Base64 , keysArr , BASE64_FLAGS ) $F134496 ( confidentialityKey , AES_KEY_LENGTH_BITS ) $F134490 ( integrityKey , Base64 , keysArr , BASE64_FLAGS ) $F134496 ( integrityKey , HMAC_KEY_LENGTH_BITS ) return new SecretKeys ( new SecretKeySpec ( confidentialityKey , NUM00 , confidentialityKey . length , CIPHER ) , new SecretKeySpec ( integrityKey , HMAC_ALGORITHM ) ) ; \n\t\t} \n\t} \n"}, {"code": "public WritableRaster createWritableChild ( int x , int y , int width , int height , int x0 , int y0 , int bandList [ ] ) { \n\t$F238725 ( x , this ) $F238726 ( y , this ) $F238732 ( x , width , this ) $F238738 ( y , height , this ) SampleModel sm ; \n\t$F238739 ( bandList , sm , sampleModel ) int deltaX = x0 - x ; \n\tint deltaY = y0 - y ; \n\treturn new ShortBandedRaster $F238741 ( sm , dataBuffer , x0 , y0 , width , height , sampleModelTranslateX , deltaX , sampleModelTranslateY , deltaY , this ) ; \n\t} \n"}, {"code": "private void sortChildren ( final JCriteriumTreeNode parentNode ) { \n\tfinal List < JCriteriumTreeNode > operators = new ArrayList < JCriteriumTreeNode > $F72 ; \n\tfinal List < JCriteriumTreeNode > conditions = new ArrayList < JCriteriumTreeNode > $F72 ; \n\tfinal List < JCriteriumTreeNode > minus = new ArrayList < JCriteriumTreeNode > $F72 ; \n\tfinal $F58020 children = parentNode . children ( ) ; \n\twhile $F1444 ( children ) { \n\t\tfinal JCriteriumTreeNode child = ( JCriteriumTreeNode ) children . nextElement ( ) ; \n\t\tfinal ICriterium type = child . getCriterium ( ) ; \n\t\tif ( type instanceof CConditionCriterium ) $F207 ( conditions , child ) else $F207 ( operators , child ) } \n\tparentNode . removeAllChildren ( ) ; \n\tfor ( final JCriteriumTreeNode child : operators ) { \n\t\tparentNode . add ( child ) ; \n\t\tchild . setParent ( parentNode ) ; \n\t\t} \n\tfor ( final JCriteriumTreeNode child : conditions ) { \n\t\tparentNode . add ( child ) ; \n\t\tchild . setParent ( parentNode ) ; \n\t\t} \n\tfor ( final JCriteriumTreeNode child : minus ) { \n\t\tparentNode . add ( child ) ; \n\t\tchild . setParent ( parentNode ) ; \n\t\t} \n\t} \n"}, {"code": "public static int poisson ( double lambda ) { \n\tint k = NUM00 ; \n\tdouble p = NUM00 ; \n\t$F23792 ( L , Math , lambda ) do { \n\t\tk ++ ; \n\t\tp *= uniform ( ) ; \n\t\t} \n\twhile ( p >= L ) ; \n\treturn k - NUM00 ; \n\t} \n"}, {"code": "public String build ( String input ) { \n\tinputString = input ; \n\tinputIndex = NUM00 ; \n\t$F3935 ( inputLength , input ) $F7398 ( outputString ) char nextChar ; \n\twhile ( ( nextChar = get ( ) ) != NUM00 && outputString . length ( ) < maxOutputLength ) { \n\t\tif ( nextChar == NUM00 ) { \n\t\t\tif ( inputStartsWith ( NUM00 ) ) { \n\t\t\t\tString nextChars = peek ( NUM00 ) ; \n\t\t\t\tboolean haveBangComment = _BOOL ; \n\t\t\t\tif ( $F145545 ( nextChars ) ) { \n\t\t\t\t\thaveBangComment = _BOOL ; \n\t\t\t\t\tfor ( $F1088 ( i , nextChars ) ) { \n\t\t\t\t\t\tif $F118383 ( Character , nextChars , i ) $F3468 ( haveBangComment , _BOOL ) } \n\t\t\t\t\t} \n\t\t\t\tif ( haveBangComment ) { \n\t\t\t\t\tskip ( NUM00 ) ; \n\t\t\t\t\tString contents = getToDelimiter ( NUM00 ) ; \n\t\t\t\t\tif ( contents != null ) { \n\t\t\t\t\t\tput ( contents ) ; \n\t\t\t\t\t\tskip ( NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tput ( nextChar ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if ( inputStartsWith ( NUM00 ) ) { \n\t\t\t\tif ( getToDelimiter ( NUM00 ) != null ) skip ( NUM00 ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tput ( nextChar ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( nextChar == NUM00 ) { \n\t\t\tif ( inputStartsWith ( NUM00 ) ) { \n\t\t\t\tString tail = peek ( NUM00 ) ; \n\t\t\t\tif ( tail == null ) $F5153 else { \n\t\t\t\t\tif ( $F74603 ( Character , tail ) ) { \n\t\t\t\t\t\tString buf = getToEndOfLine ( ) ; \n\t\t\t\t\t\t$F43187 ( skip , buf ) put ( NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse put ( nextChar ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tput ( nextChar ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( nextChar == NUM00 ) $F1210 ( put ) else { \n\t\t\tput ( nextChar ) ; \n\t\t\t} \n\t\t} \n\t$F92 ( outputString ) } \n"}, {"code": "public boolean isBuiltinSoundAvailable ( String soundIdentifier ) $F69736 ( builtinSounds , soundIdentifier ) "}, {"code": "public $F13710 iterateSerializers $F72 $F16048 ( serializers ) "}, {"code": "private static void checkKey ( String key ) throws MalformedObjectNameException { \n\t$F1149 ( key ) $F22998 ( len , key ) if ( len == NUM00 ) throw new MalformedObjectNameException $F580 ; \n\t$F9609 ( k , key ) final int endKey = parseKey ( k , NUM00 ) ; \n\tif ( endKey < len ) throw new MalformedObjectNameException ( NUM00 + k [ endKey ] + NUM00 ) ; \n\t} \n"}, {"code": "public abstract boolean isShutdown $F72 ; \n"}, {"code": "protected abstract void init $F72 ; \n"}, {"code": "private void drawArc ( Canvas canvas ) { \n\tif ( mCurrentDashMode . equals ( DASH_MODE . DOWNLOAD ) ) { \n\t\tmnIndeterminateStartPosition += ( NUM00 - mnProgress ) * mnStartSpeed ; \n\t\tif ( ( mnIndeterminateStartPosition > CIRCULAR_FACTOR ) || ( mnIndeterminateStartPosition < NUM00 ) ) { \n\t\t\tmnIndeterminateStartPosition = NUM00 ; \n\t\t\t} \n\t\t$F28883 ( currRect ) getLocalVisibleRect ( currRect ) ; \n\t\tfloat nRingBoundaryInner = mnRingRadius - ( mnRingWidth / NUM00 ) - ( mnArcWidth / NUM00 ) ; \n\t\tmArcRect . set ( mnViewCenter - nRingBoundaryInner , mnViewCenter - nRingBoundaryInner , mnViewCenter + nRingBoundaryInner , mnViewCenter + nRingBoundaryInner ) ; \n\t\tmPaint . setColor ( mArcColor ) ; \n\t\tmPaint . setStyle ( Paint . Style . STROKE ) ; \n\t\tmPaint . setStrokeWidth ( mnArcWidth ) ; \n\t\tmPaint . setStrokeCap ( Paint . Cap . ROUND ) ; \n\t\tcanvas . drawArc ( mArcRect , mnIndeterminateStartPosition , mnArcLength , _BOOL , mPaint ) ; \n\t\t} \n\t} \n"}, {"code": "public static String formatDateTime ( $F22273 date , String format , String locale , String timeZone ) { \n\tSimpleDateFormat dateFormat = getDateFormat ( format , locale , timeZone ) ; \n\tsynchronized ( dateFormat ) $F35907 ( dateFormat , date ) } \n"}, {"code": "$F48363 ( input , offset , len , flags , decoder , _BOOL , temp , System ) "}, {"code": "$F107211 ( md5Model , animModel , defaultColour , invJointMatrices , calcInJointMatrices , animatedFrames , processAnimationFrames , list , md5Mesh , mesh , generateMesh , handleTexture , meshes , result ) "}, {"code": "protected MessageDigest ( String algorithm ) $F6988 ( this , algorithm ) "}, {"code": "private void createGui $F72 { \n\t$F40881 ( topPanel ) $F40881 ( innerTopPanel ) innerTopPanel . add ( m_stdEditPanel ) ; \n\ttopPanel . add ( innerTopPanel ) ; \n\t$F40881 ( debuggerChooserPanel ) $F40871 ( debuggerChooserPanel ) m_checkedList = new JCheckedListbox $F200 ( new Vector < DebuggerTemplate > $F72 , _BOOL ) ; \n\tupdateCheckedListPanel ( ) ; \n\tfinal JScrollPane debuggerScrollPane = new JScrollPane ( m_checkedList ) ; \n\tm_checkedListPanel . add ( debuggerScrollPane ) ; \n\t$F30063 ( debuggerChooserPanel , m_checkedListPanel , BorderLayout ) $F167982 ( debuggerChooserPanel ) $F114439 ( debuggerChooserPanel ) $F30069 ( innerTopPanel , debuggerChooserPanel , BorderLayout ) $F40901 ( buttonPanel ) $F40867 ( buttonPanel ) buttonPanel . add ( $F26679 ) ; \n\tbuttonPanel . add ( m_saveButton ) ; \n\t$F30069 ( topPanel , buttonPanel , BorderLayout ) final JPanel bottomPanel = new CAddressSpacesTablePanel ( m_table ) ; \n\tfinal JScrollPane scrollPane = new JScrollPane ( m_table ) ; \n\tbottomPanel . setBorder ( m_titledBorder ) ; \n\tsetBorder ( new EmptyBorder $F13777 ) ; \n\tbottomPanel . add ( scrollPane ) ; \n\tfinal JSplitPane splitPane = new JSplitPane ( JSplitPane . VERTICAL_SPLIT , _BOOL , topPanel , bottomPanel ) ; \n\tsplitPane . setOneTouchExpandable ( _BOOL ) ; \n\tsplitPane . setDividerLocation ( splitPane . getMinimumDividerLocation ( ) ) ; \n\t$F242063 ( splitPane ) add ( splitPane ) ; \n\t} \n"}, {"code": "public static $F2027 mergeSort $F23416 ( a ) { \n\tif $F9634 ( a ) return a ; \n\t$F2027 x = mergeSort ( Arrays . copyOfRange ( a , NUM00 , a . length / NUM00 ) ) ; \n\t$F2027 y = mergeSort ( Arrays . copyOfRange ( a , a . length / NUM00 , a . length ) ) ; \n\treturn merge ( x , y ) ; \n\t} \n"}, {"code": "private void copyACls ( final List < AccessControlLevel > accessControlLevels2 ) { \n\tfor ( AccessControlLevel acl : this . accessControlLevels ) { \n\t\taccessControlLevels2 . add ( new AccessControlLevel ( acl ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void put ( ByteBuffer byteBuffer , int contentLength ) { \n\tif ( contentLength > ( bytes . length - this . contentLength ) ) $F825 byteBuffer . get ( bytes , this . contentLength , contentLength ) ; \n\tthis . contentLength += contentLength ; \n\t} \n"}, {"code": "private void handleResponse ( AvsResponse response ) { \n\tboolean checkAfter = $F10471 ( avsQueue ) ; \n\tif ( response != null ) { \n\t\tfor ( $F5373 ( i , response ) ) { \n\t\t\tif ( response . get ( i ) instanceof AvsReplaceAllItem || response . get ( i ) instanceof AvsReplaceEnqueuedItem ) { \n\t\t\t\t$F725 ( avsQueue ) response . remove ( i ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tLog . i ( $F46477 ( TAG , response ) ) ; \n\t\tavsQueue . addAll ( response ) ; \n\t\t} \n\t$F8801 ( checkAfter , checkQueue ) } \n"}, {"code": "protected synchronized void request ( String stream ) { \n\t$F48075 ( stream ) stream = $F91593 ( stream , Locale ) ; \n\tFollowerInfo cachedInfo = cached . get ( stream ) ; \n\tif ( cachedInfo == null || checkTimePassed ( cachedInfo ) ) { \n\t\tif ( type == Follower . Type . FOLLOWER ) { \n\t\t\tapi . requestFollowers ( stream ) ; \n\t\t\t} \n\t\telse if ( type == Follower . Type . SUBSCRIBER ) { \n\t\t\tapi . requestSubscribers ( stream ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( type == Follower . Type . FOLLOWER ) { \n\t\t\tlistener . receivedFollowers ( cachedInfo ) ; \n\t\t\t} \n\t\telse if ( type == Follower . Type . SUBSCRIBER ) { \n\t\t\tlistener . receivedSubscribers ( cachedInfo ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "boolean removeViewIfHidden ( View view ) { \n\t$F228646 ( index , mCallback , view ) if ( index == - NUM00 ) { \n\t\tif ( mHiddenViews . remove ( view ) && DEBUG ) $F4639 return _BOOL ; \n\t\t} \n\tif $F73204 ( mBucket , index ) { \n\t\tmBucket . remove ( index ) ; \n\t\tmCallback . removeViewAt ( index ) ; \n\t\tif ( ! mHiddenViews . remove ( view ) && DEBUG ) $F4639 return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public String consumeCssIdentifier $F72 { \n\tint start = pos ; \n\twhile ( ! isEmpty ( ) && ( matchesWord ( ) || matchesAny ( NUM00 , NUM00 ) ) ) pos ++ ; \n\t$F6669 ( queue , start , pos ) } \n"}, {"code": "@ Ignore ( NUM00 ) $F32043 public void testPopulate1kbwrites $F72 { \n\t$F4727 ( value , ENTRY_SIZE ) $F26770 ( Arrays , value ) for ( $F119 ( i , OP_COUNT ) ) { \n\t\t$F8500 ( region , i , value ) } \n\tcloseDown ( ) ; \n\t} \n"}, {"code": "public void serialize ( KXmlSerializer serializer ) throws IOException { \n\tserializer . startTag ( ns , TAG ) ; \n\tserializeAttribute ( serializer , NAME_ATTR , mName ) ; \n\tserializeAttribute ( serializer , APP_PACKAGE_NAME_ATTR , mAppPackageName ) ; \n\tserializeAttribute ( serializer , DIGEST_ATTR , getDigest ( ) ) ; \n\tif $F1238 ( SIGNATURE_TEST_PKG , mName ) { \n\t\tserializer . attribute ( ns , NUM00 , NUM00 ) ; \n\t\t} \n\tmSuiteRoot . serialize ( serializer ) ; \n\tserializer . endTag ( ns , TAG ) ; \n\t} \n"}, {"code": "public ActivityResolveInfo ( ResolveInfo resolveInfo ) $F6988 ( this , resolveInfo ) "}, {"code": "public void rollback ( Throwable t ) { \n\t$F8922 ( log , tempFile , t ) try { \n\t\tfileContentStore . delete ( tempFile , node ) ; \n\t\t} \n\tcatch ( Exception e ) $F47950 ( t , e ) } \n"}, {"code": "protected void parseGeometryString $F72 { \n\tint i = NUM00 ; \n\t$F39526 ( bytes , geometryString ) xgrav = new String ( bytes , NUM00 , NUM00 ) ; \n\tfor ( $F6929 ( i , bytes ) ) { \n\t\tif ( ( bytes [ i ] == NUM00 ) || ( bytes [ i ] == NUM00 ) ) $F597 } \n\tif ( i == bytes . length ) $F665 ygrav = ( bytes [ i ] == NUM00 ) ? NUM00 : NUM00 ; \n\txpos = Integer . parseInt ( new String ( bytes , NUM00 , i - NUM00 ) ) ; \n\t++ i ; \n\typos = Integer . parseInt ( new String $F218 ( bytes , i ) ) ; \n\t} \n"}, {"code": "$F1 protected final synchronized boolean writeData ( ByteBuffer data ) { \n\tAionServerPacket packet = sendMsgQueue . pollFirst ( ) ; \n\t$F1933 ( packet , _BOOL ) packet . setBuf ( data ) ; \n\tpacket . write ( this ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected boolean position ( Projection proj ) { \n\tif ( proj == null ) { \n\t\t$F22806 ( logger ) return _BOOL ; \n\t\t} \n\t$F23468 ( projWidth , proj ) $F23469 ( projHeight , proj ) switch ( renderType ) { \n\t\tcase RENDERTYPE_LATLON : if ( ! proj . isPlotable ( lat , lon ) ) { \n\t\t\t$F22808 ( DEBUG , logger ) setNeedToReposition ( _BOOL ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tpoint1 = ( Point ) proj . forward ( lat , lon , $F22495 ) ; \n\t\t$F597 case RENDERTYPE_XY : point1 = new Point ( x , y ) ; \n\t\t$F597 case RENDERTYPE_OFFSET : if ( ! proj . isPlotable ( lat , lon ) ) { \n\t\t\t$F22808 ( DEBUG , logger ) setNeedToReposition ( _BOOL ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tpoint1 = ( Point ) proj . forward ( lat , lon , $F22495 ) ; \n\t\tpoint1 . x += x ; \n\t\tpoint1 . y += y ; \n\t\t$F597 case RENDERTYPE_UNKNOWN : $F22808 ( DEBUG , logger ) if ( lat == NUM00 && lon == NUM00 ) { \n\t\t\tif ( x == NUM00 && y == NUM00 ) { \n\t\t\t\t$F22808 ( DEBUG , logger ) point1 = new Point ( - width , - height ) ; \n\t\t\t\t$F99935 ( point2 ) ; \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tpoint1 = new Point ( x , y ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( ! proj . isPlotable ( lat , lon ) ) { \n\t\t\t\t$F22806 ( logger ) return _BOOL ; \n\t\t\t\t} \n\t\t\tpoint1 = ( Point ) proj . forward ( lat , lon , $F22495 ) ; \n\t\t\t} \n\t\t$F597 } \n\t$F99935 ( point2 ) ; \n\tpoint2 . x = point1 . x + width ; \n\tpoint2 . y = point1 . y + height ; \n\tsetNeedToReposition ( _BOOL ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public synchronized int lastIndexOf ( Object object , int location ) { \n\tif ( location < elementCount ) { \n\t\tif ( object != null ) { \n\t\t\tfor ( $F141 ( i , location ) ) { \n\t\t\t\tif $F145 ( object , elementData , i ) { \n\t\t\t\t\treturn i ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tfor ( $F141 ( i , location ) ) { \n\t\t\t\tif ( elementData [ i ] == null ) { \n\t\t\t\t\treturn i ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t$F150 } \n\tthrow arrayIndexOutOfBoundsException ( location , elementCount ) ; \n\t} \n"}, {"code": "$F1 public boolean canUndo $F72 $F3387 ( m_UndoList ) "}, {"code": "public $F21637 insert ( int offset , char c ) { \n\tinternal . insert ( offset , c ) ; \n\treturn this ; \n\t} \n"}, {"code": "public static boolean isAbsolutePath ( String systemId ) { \n\t$F397 ( systemId , _BOOL ) $F15885 ( file , systemId ) return file . isAbsolute ( ) ; \n\t} \n"}, {"code": "protected void calculateDestination ( IFile uxf , ICompilationUnit referencingCompilationUnit , Destination dest ) throws CoreException { \n\tIFile uxfDest = calculateImgDestination ( uxf , referencingCompilationUnit ) ; \n\tif ( uxfDest != null ) { \n\t\tdest . imgFileDestination = uxfDest ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void onEvent ( ProjectEvent event ) { \n\tif ( event . getType ( ) == ProjectEvent . EventType . UPDATED || event . getType ( ) == ProjectEvent . EventType . CREATED ) { \n\t\tupdate ( event ) ; \n\t\t} \n\t} \n"}, {"code": "protected abstract boolean onMouseClick ( Point point ) ; \n"}, {"code": "private void remeasure ( int width , int height ) { \n\t$F146568 ( MAX_UNEXPANDED_ALLDAY_HEIGHT , MIN_UNEXPANDED_ALLDAY_EVENT_HEIGHT ) ; \n\tMAX_UNEXPANDED_ALLDAY_HEIGHT = Math . min ( MAX_UNEXPANDED_ALLDAY_HEIGHT , height / NUM00 ) ; \n\tMAX_UNEXPANDED_ALLDAY_HEIGHT = Math . max ( MAX_UNEXPANDED_ALLDAY_HEIGHT , ( int ) MIN_UNEXPANDED_ALLDAY_EVENT_HEIGHT * NUM00 ) ; \n\t$F2118 ( mMaxUnexpandedAlldayEventCount , MAX_UNEXPANDED_ALLDAY_HEIGHT , MIN_UNEXPANDED_ALLDAY_EVENT_HEIGHT ) for ( $F119 ( day , mNumDays ) ) { \n\t\tmEarliestStartHour [ day ] = NUM00 ; \n\t\tmHasAllDayEvent [ day ] = _BOOL ; \n\t\t} \n\tint maxAllDayEvents = mMaxAlldayEvents ; \n\tmMinCellHeight = Math . max ( ( height - DAY_HEADER_HEIGHT ) / NUM00 , ( int ) MIN_EVENT_HEIGHT ) ; \n\t$F8790 ( mCellHeight , mMinCellHeight ) mFirstCell = DAY_HEADER_HEIGHT ; \n\tint allDayHeight = NUM00 ; \n\tif ( maxAllDayEvents > NUM00 ) { \n\t\tint maxAllAllDayHeight = height - DAY_HEADER_HEIGHT - MIN_HOURS_HEIGHT ; \n\t\tif ( maxAllDayEvents == NUM00 ) { \n\t\t\tallDayHeight = SINGLE_ALLDAY_HEIGHT ; \n\t\t\t} \n\t\telse if ( maxAllDayEvents <= mMaxUnexpandedAlldayEventCount ) { \n\t\t\tallDayHeight = maxAllDayEvents * MAX_HEIGHT_OF_ONE_ALLDAY_EVENT ; \n\t\t\t$F8789 ( allDayHeight , MAX_UNEXPANDED_ALLDAY_HEIGHT ) } \n\t\telse { \n\t\t\tif ( mAnimateDayHeight != NUM00 ) { \n\t\t\t\tallDayHeight = Math . max ( mAnimateDayHeight , MAX_UNEXPANDED_ALLDAY_HEIGHT ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F53239 ( allDayHeight , maxAllDayEvents , MIN_UNEXPANDED_ALLDAY_EVENT_HEIGHT ) if ( ! mShowAllAllDayEvents && allDayHeight > MAX_UNEXPANDED_ALLDAY_HEIGHT ) { \n\t\t\t\t\t$F53239 ( allDayHeight , mMaxUnexpandedAlldayEventCount , MIN_UNEXPANDED_ALLDAY_EVENT_HEIGHT ) } \n\t\t\t\telse $F8789 ( allDayHeight , maxAllAllDayHeight ) } \n\t\t\t} \n\t\tmFirstCell = DAY_HEADER_HEIGHT + allDayHeight + ALLDAY_TOP_MARGIN ; \n\t\t} \n\telse { \n\t\tmSelectionAllday = _BOOL ; \n\t\t} \n\tmAlldayHeight = allDayHeight ; \n\tmGridAreaHeight = height - mFirstCell ; \n\tint allDayIconWidth = mExpandAlldayDrawable . getIntrinsicWidth ( ) ; \n\tmExpandAllDayRect . left = Math . max ( ( mHoursWidth - allDayIconWidth ) / NUM00 , EVENT_ALL_DAY_TEXT_LEFT_MARGIN ) ; \n\tmExpandAllDayRect . right = Math . min ( mExpandAllDayRect . left + allDayIconWidth , mHoursWidth - EVENT_ALL_DAY_TEXT_RIGHT_MARGIN ) ; \n\tmExpandAllDayRect . bottom = mFirstCell - EXPAND_ALL_DAY_BOTTOM_MARGIN ; \n\tmExpandAllDayRect . top = mExpandAllDayRect . bottom - mExpandAlldayDrawable . getIntrinsicHeight ( ) ; \n\tmNumHours = mGridAreaHeight / ( mCellHeight + HOUR_GAP ) ; \n\tmEventGeometry . setHourHeight ( mCellHeight ) ; \n\tfinal long minimumDurationMillis = ( long ) ( MIN_EVENT_HEIGHT * DateUtils . MINUTE_IN_MILLIS / ( mCellHeight / NUM00 ) ) ; \n\tEvent . computePositions ( mEvents , minimumDurationMillis ) ; \n\tmMaxViewStartY = HOUR_GAP + NUM00 * ( mCellHeight + HOUR_GAP ) - mGridAreaHeight ; \n\tif ( DEBUG ) { \n\t\t$F110901 ( Log , TAG , mViewStartY ) $F110901 ( Log , TAG , mMaxViewStartY ) } \n\tif ( mViewStartY > mMaxViewStartY ) $F21847 ( mViewStartY , mMaxViewStartY , computeFirstHour ) if ( mFirstHour == - NUM00 ) { \n\t\tinitFirstHour ( ) ; \n\t\tmFirstHourOffset = NUM00 ; \n\t\t} \n\tif ( mFirstHourOffset >= mCellHeight + HOUR_GAP ) { \n\t\tmFirstHourOffset = mCellHeight + HOUR_GAP - NUM00 ; \n\t\t} \n\tmViewStartY = mFirstHour * ( mCellHeight + HOUR_GAP ) - mFirstHourOffset ; \n\tfinal int eventAreaWidth = mNumDays * ( mCellWidth + DAY_GAP ) ; \n\tif ( mSelectedEvent != null && mLastPopupEventID != mSelectedEvent . id ) { \n\t\tmPopup . dismiss ( ) ; \n\t\t} \n\tmPopup . setWidth ( eventAreaWidth - NUM00 ) ; \n\tmPopup . setHeight ( WindowManager . LayoutParams . WRAP_CONTENT ) ; \n\t} \n"}, {"code": "public void updateVisibleIds $F149310 ( priority ) { \n\tif ( mNativeTabContentManager != NUM00 ) { \n\t\tint $F156906 ( idsSize , Math , mFullResThumbnailsMaxSize , priority ) ; \n\t\tif ( idsSize != mPriorityTabIds . length ) $F200542 ( mPriorityTabIds , idsSize ) $F149311 ( i , idsSize , mPriorityTabIds , priority ) nativeUpdateVisibleIds ( mNativeTabContentManager , mPriorityTabIds ) ; \n\t\t} \n\t} \n"}, {"code": "public final void walkGraph ( Hashtable semNodesTable ) { \n\t$F16747 ( uid , myUID ) $F36819 ( semNodesTable , uid ) $F8500 ( semNodesTable , myUID , this ) } \n"}, {"code": "private void requestFragmenting ( IgfsEntryInfo fileInfo ) { \n\tIgfsFileMap map = fileInfo . fileMap ( ) ; \n\tassert map != null && ! map . ranges ( ) . isEmpty ( ) ; \n\tMap < UUID , Collection < IgfsFileAffinityRange > > grpMap = U . newHashMap ( map . ranges ( ) . size ( ) ) ; \n\tfor ( IgfsFileAffinityRange range : map . ranges ( ) ) { \n\t\tUUID nodeId = igfsCtx . data ( ) . affinityNode ( range . affinityKey ( ) ) . id ( ) ; \n\t\tCollection < IgfsFileAffinityRange > nodeRanges = grpMap . get ( nodeId ) ; \n\t\tif ( nodeRanges == null ) { \n\t\t\t$F19919 ( nodeRanges ) grpMap . put ( nodeId , nodeRanges ) ; \n\t\t\t} \n\t\tnodeRanges . addAll ( range . split ( igfsCtx . data ( ) . groupBlockSize ( ) ) ) ; \n\t\t} \n\t$F252768 nodeIds = new IdentityHashSet $F57797 ( grpMap ) ; \n\t$F50717 ( log , fileInfo , nodeIds ) Object old = fragmentingFiles . putIfAbsent ( fileInfo . id ( ) , nodeIds ) ; \n\tassert old == null ; \n\tfor ( Map . Entry < UUID , Collection < IgfsFileAffinityRange > > entry : grpMap . entrySet ( ) ) { \n\t\tUUID nodeId = entry . getKey ( ) ; \n\t\tIgfsFragmentizerRequest msg = new IgfsFragmentizerRequest ( fileInfo . id ( ) , entry . getValue ( ) ) ; \n\t\ttry { \n\t\t\tif $F585 ( log ) log . debug ( NUM00 + nodeId + NUM00 + fileInfo . id ( ) + NUM00 + msg + NUM00 ) ; \n\t\t\tsendWithRetries ( nodeId , msg ) ; \n\t\t\t} \n\t\tcatch ( IgniteCheckedException e ) { \n\t\t\tif ( e . hasCause ( ClusterTopologyCheckedException . class ) ) { \n\t\t\t\t$F51620 ( log , nodeId ) } \n\t\t\telse U . error ( log , NUM00 + nodeId + NUM00 + msg + NUM00 , e ) ; \n\t\t\tnodeIds . remove ( nodeId ) ; \n\t\t\t} \n\t\t} \n\tif $F2979 ( nodeIds ) { \n\t\t$F51620 ( log , fileInfo ) fragmentingFiles . remove ( fileInfo . id ( ) , nodeIds ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean showPreviousNotification $F72 { \n\tint i = getSelectedIndex ( ) ; \n\tif ( i != - NUM00 && i > NUM00 ) { \n\t\tmodel . setSelectedItem ( model . getElementAt ( i - NUM00 ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public void writeExternal ( ObjectOutput out ) throws IOException { \n\tsuper . writeExternal ( out ) ; \n\tout . writeBoolean ( isLeaf ) ; \n\tout . writeInt ( numEntries ) ; \n\t} \n"}, {"code": "protected void addInputNode_internal ( BNode inputNode ) { \n\tif $F102751 ( inputNodes , inputNode ) { \n\t\tlog . warning ( $F145106 ( inputNode , nodeId ) ) ; \n\t\t} \n\t$F33163 ( inputNodes , inputNode ) } \n"}, {"code": "public static void initialize ( final CDatabaseConfiguration configuration ) throws CouldntLoadDriverException , CouldntConnectException , SQLException { \n\tcheckDriver ( configuration ) ; \n\tfinal String url = POSTGRES_DRIVER + NUM00 + configuration . getHost ( ) + NUM00 + POSTGRES_DEFAULT_DB ; \n\tConnection connection = null ; \n\ttry { \n\t\tconnection = DriverManager . getConnection ( url , configuration . getUser ( ) , configuration . getPassword ( ) ) ; \n\t\t} \n\tcatch ( final SQLException exception ) { \n\t\tCUtilityFunctions . logException ( exception ) ; \n\t\tthrow new CouldntConnectException ( exception , exception . getErrorCode ( ) , exception . getSQLState ( ) ) ; \n\t\t} \n\tfinal String statement = $F2990 ( configuration ) ; \n\tfinal PreparedStatement preparedStatement = connection . prepareStatement ( statement ) ; \n\ttry { \n\t\t$F1699 ( preparedStatement ) } \n\t$F4651 ( preparedStatement , connection ) } \n"}, {"code": "public List < FCEndpoint > showFcnsDatabase ( Integer vsanId ) throws NetworkDeviceControllerException { \n\t$F20666 vsanToWwns = getVsanWwns ( vsanId ) ; \n\tList < FCEndpoint > connections = new ArrayList < FCEndpoint > $F72 ; \n\tSSHPrompt [ ] prompts = { \n\t\tSSHPrompt . MDS_POUND , SSHPrompt . MDS_GREATER_THAN } \n\t; \n\t$F83 ( buf ) $F21024 ( cmd , MDSDialogProperties ) if ( vsanId != null ) { \n\t\tcmd = cmd + MDSDialogProperties . getString ( NUM00 ) + vsanId . toString ( ) + NUM00 ; \n\t\t} \n\telse $F2365 ( cmd ) SSHPrompt prompt = sendWaitFor ( cmd , defaultTimeout , prompts , buf ) ; \n\t$F91090 ( lines , getLines , buf ) $F806 regex = { \n\t\tMDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) , MDSDialogProperties . getString ( NUM00 ) } \n\t; \n\t$F808 ( groups ) FCEndpoint conn = null ; \n\tfor ( String line : lines ) { \n\t\tint index = match ( line , regex , groups , Pattern . CASE_INSENSITIVE ) ; \n\t\tswitch ( index ) { \n\t\t\t$F3366 conn = new FCEndpoint $F72 ; \n\t\t\tconn . setFabricId ( groups [ NUM00 ] ) ; \n\t\t\tconn . setFcid ( groups [ NUM00 ] ) ; \n\t\t\tString fabricWwn = vsanToWwns . get ( $F141195 ( groups ) ) ; \n\t\t\tif ( fabricWwn != null ) { \n\t\t\t\tconn . setFabricWwn ( fabricWwn ) ; \n\t\t\t\t} \n\t\t\tconnections . add ( conn ) ; \n\t\t\t$F597 $F3366 conn . setRemotePortName ( groups [ NUM00 ] ) ; \n\t\t\t$F597 $F3366 conn . setRemoteNodeName ( groups [ NUM00 ] ) ; \n\t\t\t$F597 $F3366 conn . setSwitchPortName ( groups [ NUM00 ] ) ; \n\t\t\t$F597 $F3366 conn . setSwitchInterface ( groups [ NUM00 ] ) ; \n\t\t\t$F597 $F3366 conn . setSwitchName ( groups [ NUM00 ] ) ; \n\t\t\t$F597 $F3366 conn . setRemotePortAlias ( groups [ NUM00 ] ) ; \n\t\t\t} \n\t\t} \n\treturn connections ; \n\t} \n"}, {"code": "private void registerObjectRead ( Object obj , int handle , boolean unshared ) throws IOException { \n\t$F65989 ( unshared , obj , UNSHARED_OBJ ) int index = handle - ObjectStreamConstants . baseWireHandle ; \n\t$F115 ( size , objectsRead ) while ( index > size ) { \n\t\t$F722 ( objectsRead ) ++ size ; \n\t\t} \n\tif ( index == size ) $F207 ( objectsRead , obj ) else $F65992 ( objectsRead , index , obj ) } \n"}, {"code": "public static void addExtensionHeader ( String headerName , String className ) $F19138 ( nameMap , headerName , className ) "}, {"code": "$F9088 ( frame , interpreter , top , changes , _BOOL , i , locals , v , values ) "}, {"code": "public static void keytool ( String cmd ) { \n\t$F556 ( log , cmd ) $F8728 ( list ) $F17727 ( st , cmd ) String quoteBuffer = null ; \n\twhile $F14498 ( st ) { \n\t\t$F8095 ( token , st ) if ( quoteBuffer == null ) { \n\t\t\tif $F3106 ( token ) $F64779 ( quoteBuffer , token ) else list . add ( token ) ; \n\t\t\t} \n\t\telse quoteBuffer += NUM00 + token ; \n\t\tif $F8991 ( token ) { \n\t\t\t$F13881 ( str , quoteBuffer ) list . add ( str ) ; \n\t\t\tquoteBuffer = null ; \n\t\t\t} \n\t\t} \n\t$F5442 ( args , list ) list . toArray ( args ) ; \n\ttry { \n\t\tKeyTool . main ( args ) ; \n\t\t} \n\t$F3957 } \n"}, {"code": "private void smoothSnapToPosition ( int scrollY , int availableScrollHeight , AlphabeticalAppsList . FastScrollSectionInfo info ) { \n\tmRv . removeCallbacks ( mSmoothSnapNextFrameRunnable ) ; \n\tmRv . removeCallbacks ( mFastScrollToTargetSectionRunnable ) ; \n\ttrackAllChildViews ( ) ; \n\tif ( mHasFastScrollTouchSettled ) { \n\t\tmCurrentFastScrollSection = info . sectionName ; \n\t\tmTargetFastScrollSection = null ; \n\t\tupdateTrackedViewsFastScrollFocusState ( ) ; \n\t\t} \n\telse { \n\t\tmCurrentFastScrollSection = null ; \n\t\tmTargetFastScrollSection = info . sectionName ; \n\t\tmHasFastScrollTouchSettled = _BOOL ; \n\t\tupdateTrackedViewsFastScrollFocusState ( ) ; \n\t\tmRv . postDelayed ( mFastScrollToTargetSectionRunnable , mHasFastScrollTouchSettledAtLeastOnce ? REPEAT_TOUCH_SETTLING_DURATION : INITIAL_TOUCH_SETTLING_DURATION ) ; \n\t\t} \n\tint newScrollY = Math . min ( availableScrollHeight , mRv . getPaddingTop ( ) + mRv . getTop ( info . fastScrollToItem . rowIndex ) ) ; \n\tint numFrames = mFastScrollFrames . length ; \n\tfor ( $F119 ( i , numFrames ) ) { \n\t\tmFastScrollFrames [ i ] = ( newScrollY - scrollY ) / numFrames ; \n\t\t} \n\tmFastScrollFrameIndex = NUM00 ; \n\tmRv . postOnAnimation ( mSmoothSnapNextFrameRunnable ) ; \n\t} \n"}, {"code": "private void updatePropertyToValue2 $F72 throws Exception { \n\tproperties . put ( TEST_KEY , TEST_VALUE_2 ) ; \n\tupdatePropertiesFile ( ) ; \n\t} \n"}, {"code": "public void unassignServices ( String universalId , Set serviceNames ) throws AMConsoleException { \n\tif $F2772 ( serviceNames ) { \n\t\t$F808 ( params ) params [ NUM00 ] = universalId ; \n\t\tString currentSvc = NUM00 ; \n\t\ttry { \n\t\t\tAMIdentity amid = IdUtils . getIdentity ( getUserSSOToken ( ) , universalId ) ; \n\t\t\tfor ( $F2774 ( iter , serviceNames ) ) { \n\t\t\t\t$F103384 ( currentSvc , iter ) params [ NUM00 ] = currentSvc ; \n\t\t\t\tlogEvent ( NUM00 , params ) ; \n\t\t\t\tamid . unassignService ( currentSvc ) ; \n\t\t\t\tlogEvent ( NUM00 , params ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( SSOException e ) $F21560 ( paramsEx , universalId , currentSvc , getErrorString , e , logEvent , debug ) catch ( IdRepoException e ) $F21560 ( paramsEx , universalId , currentSvc , getErrorString , e , logEvent , debug ) } \n\t} \n"}, {"code": "private $F81733 expandCluster ( final $F81733 cluster , final T point , $F95121 ( neighbors ) , $F60962 ( points ) , final Map < Clusterable , PointStatus > visited ) { \n\tcluster . addPoint ( point ) ; \n\tvisited . put ( point , PointStatus . PART_OF_CLUSTER ) ; \n\t$F5675 seeds = new $F5676 ( neighbors ) ; \n\tint index = NUM00 ; \n\twhile $F1765 ( index , seeds ) { \n\t\tfinal T current = seeds . get ( index ) ; \n\t\tPointStatus pStatus = visited . get ( current ) ; \n\t\tif ( pStatus == null ) { \n\t\t\tfinal $F5675 currentNeighbors = getNeighbors ( current , points ) ; \n\t\t\tif $F29395 ( currentNeighbors , minPts ) $F176272 ( seeds , merge , currentNeighbors ) } \n\t\tif ( pStatus != PointStatus . PART_OF_CLUSTER ) { \n\t\t\tvisited . put ( current , PointStatus . PART_OF_CLUSTER ) ; \n\t\t\tcluster . addPoint ( current ) ; \n\t\t\t} \n\t\tindex ++ ; \n\t\t} \n\treturn cluster ; \n\t} \n"}, {"code": "private static Address GetFloatArrayElements $F61479 ( env , arrayJREF , isCopyAddress ) { \n\t$F4274 ( traceJNI , VM ) $F4275 ( RuntimeEntrypoints ) try { \n\t\t$F5415 sourceArray = ( $F5415 ) env . getJNIRef ( arrayJREF ) ; \n\t\tint size = sourceArray . length ; \n\t\tif $F131563 ( MemoryManager , sourceArray ) $F131565 ( JNIGenericHelpers , isCopyAddress , _BOOL , Magic , sourceArray ) else { \n\t\t\tAddress copyBuffer = sysCall . sysMalloc ( size < < LOG_BYTES_IN_FLOAT ) ; \n\t\t\t$F131575 ( copyBuffer , env , Address ) Memory . memcopy ( copyBuffer , Magic . objectAsAddress ( sourceArray ) , size < < LOG_BYTES_IN_FLOAT ) ; \n\t\t\tJNIGenericHelpers . setBoolStar ( isCopyAddress , _BOOL ) ; \n\t\t\treturn copyBuffer ; \n\t\t\t} \n\t\t} \n\t$F131582 ( traceJNI , unexpected , System , env , Address ) } \n"}, {"code": "$F1 public int parse ( DateTimeParseContext context , CharSequence text , int position ) { \n\t$F115 ( length , text ) if ( position > length ) $F81129 if ( position == length ) { \n\t\treturn ~ position ; \n\t\t} \n\t$F1280 ( nextChar , text , position ) if $F37111 ( nextChar ) { \n\t\treturn parseOffsetBased ( context , text , position , position , OffsetIdPrinterParser . INSTANCE_ID_Z ) ; \n\t\t} \n\telse if ( length >= position + NUM00 ) { \n\t\t$F17494 ( nextNextChar , text , position ) if ( context . charEquals ( nextChar , NUM00 ) && context . charEquals ( nextNextChar , NUM00 ) ) { \n\t\t\tif ( length >= position + NUM00 && context . charEquals ( text . charAt ( position + NUM00 ) , NUM00 ) ) { \n\t\t\t\treturn parseOffsetBased ( context , text , position , position + NUM00 , OffsetIdPrinterParser . INSTANCE_ID_ZERO ) ; \n\t\t\t\t} \n\t\t\treturn parseOffsetBased ( context , text , position , position + NUM00 , OffsetIdPrinterParser . INSTANCE_ID_ZERO ) ; \n\t\t\t} \n\t\telse if ( context . charEquals ( nextChar , NUM00 ) && length >= position + NUM00 && context . charEquals ( nextNextChar , NUM00 ) && context . charEquals ( text . charAt ( position + NUM00 ) , NUM00 ) ) { \n\t\t\treturn parseOffsetBased ( context , text , position , position + NUM00 , OffsetIdPrinterParser . INSTANCE_ID_ZERO ) ; \n\t\t\t} \n\t\t} \n\tPrefixTree tree = getTree ( context ) ; \n\tParsePosition ppos = new ParsePosition ( position ) ; \n\tString parsedZoneId = tree . match ( text , ppos ) ; \n\tif ( parsedZoneId == null ) { \n\t\tif ( context . charEquals ( nextChar , NUM00 ) ) { \n\t\t\tcontext . setParsed ( ZoneOffset . UTC ) ; \n\t\t\treturn position + NUM00 ; \n\t\t\t} \n\t\treturn ~ position ; \n\t\t} \n\tcontext . setParsed ( ZoneId . of ( parsedZoneId ) ) ; \n\treturn ppos . getIndex ( ) ; \n\t} \n"}, {"code": "private void prepareTransfers $F72 throws LibUsbException { \n\tif ( mAvailableTransfers == null ) { \n\t\tmAvailableTransfers = new LinkedTransferQueue $F200 $F72 ; \n\t\tfor ( $F119 ( x , TRANSFER_BUFFER_POOL_SIZE ) ) { \n\t\t\tTransfer transfer = LibUsb . allocTransfer ( ) ; \n\t\t\tif ( transfer == null ) { \n\t\t\t\tthrow new LibUsbException ( NUM00 , LibUsb . ERROR_NO_MEM ) ; \n\t\t\t\t} \n\t\t\tfinal ByteBuffer buffer = ByteBuffer . allocateDirect ( mBufferSize ) ; \n\t\t\tLibUsb . fillBulkTransfer ( transfer , mDeviceHandle , USB_ENDPOINT , buffer , BufferProcessor . this , NUM00 , USB_TIMEOUT_US ) ; \n\t\t\tmAvailableTransfers . add ( transfer ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void outputFullLines $F72 throws IOException { \n\tfor ( $F589 ) { \n\t\t$F1384 ( leftLen , leftBuf ) $F44858 ( leftLen ) $F1384 ( rightLen , rightBuf ) $F44858 ( rightLen ) if ( leftLen != NUM00 ) { \n\t\t\tout . write ( leftBuf . substring ( NUM00 , leftLen ) ) ; \n\t\t\t} \n\t\tif ( rightLen != NUM00 ) { \n\t\t\twriteSpaces ( out , leftWidth - leftLen ) ; \n\t\t\tout . write ( rightBuf . substring ( NUM00 , rightLen ) ) ; \n\t\t\t} \n\t\t$F3410 ( out ) leftBuf . delete ( NUM00 , leftLen + NUM00 ) ; \n\t\trightBuf . delete ( NUM00 , rightLen + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "@ Secured public void addPay_Simple ( long userId , BigDecimal amount , Date created , PaymentType payType , String details , boolean updateCache ) throws ConcurrentUpdateSqlException , Exception { \n\tcheckAccessFor_ADMIN ( ) ; \n\tamount = amount . abs ( ) ; \n\tlong id = universal . nextSeqFor ( payments ) ; \n\tPaymentExt payment = PaymentExt . createSystemPayment ( id , userId , amount , created , payType , details ) ; \n\tBigDecimal newVal = doPayment ( userId , payment , updateCache ) ; \n\tlog . info ( NUM00 + userId + ( newVal != null ? NUM00 + newVal : NUM00 ) + NUM00 + getReqInfoStr ( ) ) ; \n\t} \n"}, {"code": "public void registerUnregisteredNamespaces $F72 { \n\tfor ( $F2277 ( i , m_unregisteredExtensions ) ) { \n\t\t$F123 ( ns , m_unregisteredExtensions , i ) ExtensionNamespaceSupport extNsSpt = defineJavaNamespace ( ns ) ; \n\t\t$F67023 ( extNsSpt , m_extensions ) } \n\t} \n"}, {"code": "private void removeAllObjects $F72 { \n\t$F980 ( logger ) $F725 ( texts ) } \n"}, {"code": "public Builder deleteDisplayName $F72 $F18794 ( deleteFields , this ) "}, {"code": "public static Type newType ( AST ast , VariableDeclaration declaration ) { \n\t$F37759 ( newType , ast , declaration ) } \n"}, {"code": "$F10188 ( close , Util , directory ) "}, {"code": "private void waitForIteratorsCleared ( IgniteCache $F8434 cache , int secs ) throws InterruptedException { \n\tfor ( $F119 ( i , secs ) ) { \n\t\ttry { \n\t\t\tcache . size ( ) ; \n\t\t\tcheckIteratorsCleared ( ) ; \n\t\t\t} \n\t\tcatch ( AssertionFailedError e ) { \n\t\t\tif ( i == NUM00 ) { \n\t\t\t\tfor ( $F50810 ( j , gridCount ) ) executeOnLocalOrRemoteJvm ( j , new PrintIteratorStateTask $F72 ) ; \n\t\t\t\tthrow e ; \n\t\t\t\t} \n\t\t\t$F973 ( log ) $F9470 ( Thread ) } \n\t\t} \n\t} \n"}, {"code": "public void addLifecycleListener ( LifecycleListener lifecycleListener ) $F2202 ( lifecycleListeners , lifecycleListener ) "}, {"code": "private int indexOf ( String fullPath ) { \n\tfor ( int i = NUM00 , length = this . relativePaths . length ; \n\ti < length ; \n\ti ++ ) { \n\t\tString currentRelativePath = this . relativePaths [ i ] ; \n\t\t$F45557 ( currentRelativePath ) String currentContainerPath = this . containerPaths [ i ] ; \n\t\tString currentFullPath = $F1276 ( currentRelativePath ) ? currentContainerPath : ( currentContainerPath + NUM00 + currentRelativePath ) ; \n\t\t$F158832 ( encloses , currentFullPath , fullPath , i ) } \n\t$F150 } \n"}, {"code": "boolean destroyVolume ( boolean force ) { \n\tNaElement $F89079 ( elem ) ; \n\t$F89083 ( elem , Boolean , force ) $F89084 ( elem , name ) try { \n\t\tserver . invokeElem ( elem ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tString msg = NUM00 + name ; \n\t\tlog . error ( msg , e ) ; \n\t\tthrow new NetAppException ( msg , e ) ; \n\t\t} \n\t} \n"}, {"code": "public static GeneralPath stackSpline ( GeneralPath p , $F5415 pts , float epsilon , float slack , boolean closed , float tx , float ty ) { \n\tint npoints = NUM00 ; \n\tfor ( ; \n\tnpoints < pts . length ; \n\t++ npoints ) if $F1998 ( Float , pts , npoints ) $F597 return stackSpline ( p , pts , NUM00 , npoints / NUM00 , epsilon , slack , closed , tx , ty ) ; \n\t} \n"}, {"code": "private boolean validateCooldownSetting ( String appId , AutoScalerPolicyTrigger policyTrigger , String triggerId ) { \n\tAutoScalingDataStore stateStore = AutoScalingDataStoreFactory . getAutoScalingDataStore ( ) ; \n\tAppAutoScaleState appState = null ; \n\tappState = stateStore . getScalingState ( appId ) ; \n\tif ( appState == null ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse if ( ( appState . getInstanceCountState ( ) != ScalingStateManager . SCALING_STATE_COMPLETED ) && ( appState . getInstanceCountState ( ) != ScalingStateManager . SCALING_STATE_FAILED ) ) { \n\t\tlong lastStartTime = appState . getLastActionStartTime ( ) ; \n\t\t$F657 ( currentTime , System ) boolean timeExpired = ( currentTime - lastStartTime ) > this . eventTimeout ; \n\t\tif ( timeExpired ) { \n\t\t\t$F630 ( logger , appId ) return _BOOL ; \n\t\t\t} \n\t\t$F630 ( logger , appId ) return _BOOL ; \n\t\t} \n\telse { \n\t\tlong cooldownEndtime = appState . getLastActionEndTime ( ) + NUM00 * getCooldownSecs ( policyTrigger , triggerId ) ; \n\t\tif $F139818 ( System , cooldownEndtime ) { \n\t\t\t$F630 ( logger , appId ) return _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private long convertToBytes ( int megaBytes ) { \n\tlong bytes = megaBytes ; \n\tbytes = bytes * NUM00 * NUM00 ; \n\treturn bytes ; \n\t} \n"}, {"code": "public static int calcTextHeight ( Paint paint , String demoText ) { \n\t$F28883 ( r ) $F77589 ( paint , demoText , r ) return r . height ( ) ; \n\t} \n"}, {"code": "private String generateZonesetCloneName ( String zonesetToClone ) { \n\ttry $F31130 ( Thread ) catch ( InterruptedException ex ) { \n\t\t_log . warn ( ex . getLocalizedMessage ( ) ) ; \n\t\t} \n\t$F4377 ( cal , Calendar ) $F121432 ( dateFormat ) String dateString = dateFormat . format ( cal . getTime ( ) ) ; \n\t$F21024 ( longName , MDSDialogProperties ) if $F94439 ( longName ) { \n\t\treturn longName ; \n\t\t} \n\treturn NUM00 + zonesetToClone + NUM00 + dateString ; \n\t} \n"}, {"code": "protected abstract void writeSignatureBlock $F251959 ( signature , out ) throws IOException ; \n"}, {"code": "private static Object invokeOrDie ( final Method method , final Object object , final Object ... params ) { \n\ttry { \n\t\t$F89561 ( method , object , params ) } \n\tcatch ( IllegalAccessException e ) { \n\t\tthrow new RuntimeException ( NUM00 + NUM00 , e ) ; \n\t\t} \n\tcatch ( InvocationTargetException e ) { \n\t\tfinal Throwable cause = e . getCause ( ) ; \n\t\tif ( cause instanceof RuntimeException ) $F220831 ( cause ) else if ( cause instanceof Error ) { \n\t\t\t$F106249 ( cause ) } \n\t\telse $F7077 ( cause ) } \n\t} \n"}, {"code": "private StringBuffer buildSelectQuery ( String schemaName , String tableName , $F62907 keys , $F62914 keyValues ) { \n\t$F280 ( stmt ) $F84 ( stmt ) stmt . append ( conn . getDatabaseObjectName ( schemaName ) + NUM00 + conn . getDatabaseObjectName ( tableName ) ) ; \n\t$F84 ( stmt ) printColumnSpec ( stmt , keys , keyValues , PrintMode . ASSIGNMENT , NUM00 ) ; \n\treturn stmt ; \n\t} \n"}, {"code": "public void show ( Animation anim ) $F21847 ( mAnim , anim , show ) "}, {"code": "public static boolean isUriKey ( String key ) { \n\treturn key . endsWith ( NUM00 ) || key . endsWith ( NUM00 ) ; \n\t} \n"}, {"code": "public int receive $F7159 ( buffer , offset , count , timeout ) { \n\tcheckArrayBounds ( buffer , offset , count ) ; \n\t$F14826 ( count ) $F96 data = buffer ; \n\tif ( offset > NUM00 ) $F75474 ( data , count ) IntOut bytesReceivedOut = new IntOut $F72 ; \n\ttry { \n\t\tIDevice . checkResult ( LibIMobileDevice . idevice_connection_receive_timeout ( getRef ( ) , data , count , bytesReceivedOut , timeout ) ) ; \n\t\t$F129070 ( bytesRead , bytesReceivedOut ) if ( bytesRead > NUM00 && data != buffer ) $F112231 ( System , data , buffer , offset , bytesRead ) return bytesRead ; \n\t\t} \n\t$F105993 ( bytesReceivedOut ) } \n"}, {"code": "public synchronized void addOFChannelHandlerAndSendRole ( OFChannelHandler h ) { \n\tconnectedChannelHandlers . add ( h ) ; \n\th . sendRoleRequest ( this . role ) ; \n\t} \n"}, {"code": "$F4058 ( doc , elementList , nameNode , child , childData , load , _BOOL , assertEquals ) "}, {"code": "public boolean send $F97 ( bytes ) { \n\t$F25096 ( connected , _BOOL ) try { \n\t\toutputStream . write ( bytes ) ; \n\t\t$F1206 ( outputStream ) return _BOOL ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tconnected = _BOOL ; \n\t\t$F1615 ( Log , TAG ) return _BOOL ; \n\t\t} \n\tfinally { \n\t\t$F14406 ( connected , closeConnection ) } \n\t} \n"}, {"code": "$F10929 ( buf , mSizeLimit , mBuffersByLastUse , pos , Collections , mBuffersBySize , BUF_COMPARATOR , mCurrentSize , trim ) "}, {"code": "public CopyOnWriteArrayList ( Collection c ) { \n\t$F130560 ( elements , c ) int size = NUM00 ; \n\tfor ( $F2774 ( itr , c ) ) { \n\t\t$F8877 ( e , itr ) elements [ size ++ ] = e ; \n\t\t} \n\tsetArray ( elements ) ; \n\t} \n"}, {"code": "$F29770 ( entity , bytes , mPool , buffer , in , count , VolleyLog ) "}, {"code": "public void addTailArg ( String arg ) $F207 ( _tailArgs , arg ) "}, {"code": "private String translateBytesToString ( $F96 bytes , long format , Transferable localeTransferable ) throws IOException { \n\t$F2544 ( lFormat , Long , format ) String charset = getBestCharsetForTextFormat ( lFormat , localeTransferable ) ; \n\t$F123 ( eoln , nativeEOLNs , lFormat ) $F10158 ( terminators , nativeTerminators , lFormat ) int count ; \n\tif ( terminators != null ) { \n\t\t$F79839 ( numTerminators , terminators ) search : for ( count = NUM00 ; \n\t\tcount < ( bytes . length - numTerminators + NUM00 ) ; \n\t\tcount += numTerminators ) { \n\t\t\tfor ( $F5883 ( i , count , numTerminators ) ) { \n\t\t\t\tif ( bytes [ i ] != NUM00 ) { \n\t\t\t\t\tcontinue search ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tbreak search ; \n\t\t\t} \n\t\t} \n\telse $F9454 ( count , bytes ) String converted = new String ( bytes , NUM00 , count , charset ) ; \n\tif ( eoln != null ) { \n\t\t$F7782 ( buf , converted ) $F7782 ( eoln_arr , eoln ) converted = null ; \n\t\tint j = NUM00 ; \n\t\tboolean match ; \n\t\tfor ( int i = NUM00 ; \n\t\ti < buf . length ; \n\t\t) { \n\t\t\tif ( i + eoln_arr . length > buf . length ) { \n\t\t\t\t$F69279 ( buf , j , i ) $F598 } \n\t\t\tmatch = _BOOL ; \n\t\t\tfor ( int k = NUM00 , l = i ; \n\t\t\tk < eoln_arr . length ; \n\t\t\tk ++ , l ++ ) { \n\t\t\t\tif ( eoln_arr [ k ] != buf [ l ] ) $F3468 ( match , _BOOL ) } \n\t\t\tif ( match ) { \n\t\t\t\tbuf [ j ++ ] = NUM00 ; \n\t\t\t\ti += eoln_arr . length ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F69279 ( buf , j , i ) } \n\t\t\t} \n\t\tconverted = $F626 ( buf , j ) ; \n\t\t} \n\treturn converted ; \n\t} \n"}, {"code": "public InlineURIHandler ( final String namespace ) { \n\tthis . namespace = namespace ; \n\tthis . len = namespace . length ( ) ; \n\t} \n"}, {"code": "private $F1986 CalcVariableCoef ( Variogram variogram , KrigingPoint p , $F104431 NNPoints ) { \n\t$F2199 ( n , NNPoints ) $F107812 ( mat , n ) double dist = NUM00 ; \n\tfor ( $F119 ( i , n ) ) { \n\t\tdist = Math . sqrt ( Math . abs ( Math . pow ( $F43419 ( NNPoints , i ) - p . x , NUM00 ) ) + Math . abs ( Math . pow ( $F43425 ( NNPoints , i ) - p . y , NUM00 ) ) ) ; \n\t\tmat [ i ] = getTheoreticalSVValue ( dist , variogram ) ; \n\t\t} \n\tmat [ n ] = NUM00 ; \n\treturn mat ; \n\t} \n"}, {"code": "public static Object deserialization ( String filePath ) { \n\tObjectInputStream in = null ; \n\ttry { \n\t\tin = new ObjectInputStream $F18079 ( filePath ) ; \n\t\t$F67404 ( o , in ) $F59 ( in ) return o ; \n\t\t} \n\tcatch ( FileNotFoundException e ) $F7077 ( e ) catch ( ClassNotFoundException e ) $F7077 ( e ) $F7078 ( e ) $F19458 ( IOUtils , in ) } \n"}, {"code": "private static boolean isMergedSegment ( String segName ) { \n\tif $F3578 ( segName ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static CipherParameters makePBEMacParameters ( PBEKeySpec keySpec , int type , int hash , int keySize ) { \n\tPBEParametersGenerator generator = makePBEGenerator ( type , hash ) ; \n\t$F96 key ; \n\tCipherParameters param ; \n\tkey = convertPassword ( type , keySpec ) ; \n\tgenerator . init ( key , keySpec . getSalt ( ) , keySpec . getIterationCount ( ) ) ; \n\tparam = generator . generateDerivedMacParameters ( keySize ) ; \n\tfor ( $F15868 ( i , key ) ) $F5629 ( key , i ) return param ; \n\t} \n"}, {"code": "public void addEmojiconGroup ( List < EaseEmojiconGroupEntity > groupEntitieList ) { \n\tfor ( $F2277 ( i , groupEntitieList ) ) { \n\t\tEaseEmojiconGroupEntity groupEntity = groupEntitieList . get ( i ) ; \n\t\temojiconGroupList . add ( groupEntity ) ; \n\t\tpagerView . addEmojiconGroup ( groupEntity , $F2282 ( i , groupEntitieList ) ? _BOOL : _BOOL ) ; \n\t\ttabBar . addTab ( groupEntity . getIcon ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void updateEnd ( Logger log ) { \n\tm_instanceCount ++ ; \n\tm_sampleCount ++ ; \n\tdouble end = System . currentTimeMillis ( ) ; \n\tdouble temp = end - m_updateStart ; \n\tm_cumulativeTime += temp ; \n\tboolean toFastToMeasure = _BOOL ; \n\tif ( ( end - m_startTime ) >= m_sampleTime ) { \n\t\tcomputeUpdate ( end ) ; \n\t\tif ( log != null ) { \n\t\t\tlog . statusMessage ( m_statusMessagePrefix + NUM00 + m_instanceCount + NUM00 + m_avInstsPerSec / m_numSamples + NUM00 + ( toFastToMeasure ? NUM00 : NUM00 ) ) ; \n\t\t\t} \n\t\tm_sampleCount = NUM00 ; \n\t\tm_cumulativeTime = NUM00 ; \n\t\t$F3224 ( m_startTime , System ) } \n\t} \n"}, {"code": "public boolean shouldInclude ( final Path path ) { \n\treturn $F10470 ( includeMatchers ) || matches ( path , includeMatchers ) ; \n\t} \n"}, {"code": "$F183298 ( view , cache ) "}, {"code": "public ArrayList < MechSummary > generateUnits ( int num , UnitFilter filter ) { \n\tArrayList < MechSummary > $F204 ( retVal ) ; \n\tfor ( $F119 ( i , num ) ) { \n\t\tMechSummary ms = generateUnit ( filter ) ; \n\t\t$F1140 ( ms , retVal ) } \n\treturn retVal ; \n\t} \n"}, {"code": "static public Automaton concatenate ( Automaton a1 , Automaton a2 ) { \n\treturn concatenate ( Arrays . asList ( a1 , a2 ) ) ; \n\t} \n"}, {"code": "public void contentsChanged ( ListDataEvent e ) { \n\tObject oldSelection = selectedItemReminder ; \n\tObject newSelection = dataModel . getSelectedItem ( ) ; \n\tif $F87129 ( oldSelection , newSelection ) { \n\t\tselectedItemChanged ( ) ; \n\t\t$F14406 ( selectingItem , fireActionEvent ) } \n\t} \n"}, {"code": "protected void adjustCanopies $F9830 ( densities ) { \n\tif ( m_numClustersRequested < NUM00 ) { \n\t\tassignCanopiesToCanopyCenters ( ) ; \n\t\t$F66793 ( m_trainingData , m_canopies ) ; \n\t\t$F665 } \n\tif ( m_canopies . numInstances ( ) > m_numClustersRequested ) { \n\t\t$F2027 sortedIndexes = Utils . stableSort ( densities ) ; \n\t\tInstances $F66793 ( finalCanopies , m_canopies ) ; \n\t\tint count = NUM00 ; \n\t\tfor ( int i = sortedIndexes . length - NUM00 ; \n\t\tcount < m_numClustersRequested ; \n\t\ti -- ) { \n\t\t\tfinalCanopies . add ( m_canopies . instance ( sortedIndexes [ i ] ) ) ; \n\t\t\tcount ++ ; \n\t\t\t} \n\t\tm_canopies = finalCanopies ; \n\t\tList < $F3789 > tempCanopyCenters = new ArrayList < $F3789 > $F72 ; \n\t\tList $F42619 tempT2Dists = new $F302683 $F72 ; \n\t\tList $F42619 tempMissings = new $F302683 $F72 ; \n\t\tcount = NUM00 ; \n\t\tfor ( int i = sortedIndexes . length - NUM00 ; \n\t\tcount < finalCanopies . numInstances ( ) ; \n\t\ti -- ) { \n\t\t\ttempCanopyCenters . add ( m_canopyCenters . get ( sortedIndexes [ i ] ) ) ; \n\t\t\ttempT2Dists . add ( m_canopyT2Density . get ( sortedIndexes [ i ] ) ) ; \n\t\t\ttempMissings . add ( m_canopyNumMissingForNumerics . get ( sortedIndexes [ i ] ) ) ; \n\t\t\tcount ++ ; \n\t\t\t} \n\t\tm_canopyCenters = tempCanopyCenters ; \n\t\tm_canopyT2Density = tempT2Dists ; \n\t\tm_canopyNumMissingForNumerics = tempMissings ; \n\t\t} \n\telse if ( m_canopies . numInstances ( ) < m_numClustersRequested && m_trainingData != null && m_trainingData . numInstances ( ) > NUM00 ) { \n\t\tRandom $F23765 ( r , getSeed ) ; \n\t\tfor ( $F6268 ( i ) ) { \n\t\t\tr . nextInt ( ) ; \n\t\t\t} \n\t\tHashMap < DecisionTableHashKey , Integer > initC = new HashMap < DecisionTableHashKey , Integer > $F72 ; \n\t\tDecisionTableHashKey hk = null ; \n\t\tfor ( $F208679 ( i , m_canopies ) ) { \n\t\t\ttry { \n\t\t\t\thk = new DecisionTableHashKey ( m_canopies . instance ( i ) , m_canopies . numAttributes ( ) , _BOOL ) ; \n\t\t\t\t$F16843 ( initC , hk ) } \n\t\t\t$F1516 ( e ) } \n\t\tfor ( int j = m_trainingData . numInstances ( ) - NUM00 ; \n\t\tj >= NUM00 ; \n\t\tj -- ) { \n\t\t\t$F146502 ( instIndex , r , j ) try { \n\t\t\t\thk = new DecisionTableHashKey ( m_trainingData . instance ( instIndex ) , m_trainingData . numAttributes ( ) , _BOOL ) ; \n\t\t\t\t} \n\t\t\t$F1516 ( e ) if $F15257 ( initC , hk ) { \n\t\t\t\t$F338882 ( newInstance , m_trainingData , instIndex ) m_canopies . add ( newInstance ) ; \n\t\t\t\t$F1993 ( density ) density [ NUM00 ] = NUM00 ; \n\t\t\t\tm_canopyT2Density . add ( density ) ; \n\t\t\t\t$F3789 center = new double [ newInstance . numAttributes ( ) ] [ NUM00 ] ; \n\t\t\t\t$F1986 numMissingNumerics = new double [ newInstance . numAttributes ( ) ] ; \n\t\t\t\tupdateCanopyCenter ( newInstance , center , numMissingNumerics ) ; \n\t\t\t\tm_canopyCenters . add ( center ) ; \n\t\t\t\tm_canopyNumMissingForNumerics . add ( numMissingNumerics ) ; \n\t\t\t\t$F16843 ( initC , hk ) } \n\t\t\tm_trainingData . swap ( j , instIndex ) ; \n\t\t\tif ( m_canopies . numInstances ( ) == m_numClustersRequested ) $F5153 } \n\t\t} \n\tassignCanopiesToCanopyCenters ( ) ; \n\t$F66793 ( m_trainingData , m_canopies ) ; \n\t} \n"}, {"code": "protected void createFromHValues $F11072 ( hValues , partitions ) { \n\tArrays . sort ( hValues ) ; \n\tthis . splits = new int [ partitions ] ; \n\tint maxH = NUM00 ; \n\tfor ( $F1139 ( i , splits ) ) { \n\t\tint quantile = ( int ) ( ( long ) ( i + NUM00 ) * hValues . length / partitions ) ; \n\t\tthis . splits [ i ] = quantile == hValues . length ? maxH : hValues [ quantile ] ; \n\t\t} \n\t} \n"}, {"code": "private void readObject ( ObjectInputStream oos ) throws $F6427 { \n\tiInstant = ( LocalDateTime ) oos . readObject ( ) ; \n\tDateTimeFieldType type = ( DateTimeFieldType ) oos . readObject ( ) ; \n\tiField = type . getField ( iInstant . getChronology ( ) ) ; \n\t} \n"}, {"code": "public void testConstructor_InetAddressIInetAddressI $F72 throws Exception { \n\tint sport = startServer ( NUM00 ) ; \n\tSSLSocket ssl = getSSLSocket ( InetAddress . getLocalHost ( ) , sport , InetAddress . getLocalHost ( ) , NUM00 ) ; \n\tassertNotNull ( ssl ) ; \n\tassertEquals ( sport , ssl . getPort ( ) ) ; \n\t$F59 ( ssl ) try { \n\t\tgetSSLSocket ( InetAddress . getLocalHost ( ) , NUM00 , InetAddress . getLocalHost ( ) , NUM00 ) ; \n\t\tfail ( ) ; \n\t\t} \n\tcatch ( IOException expected ) $F845 try { \n\t\tgetSSLSocket ( InetAddress . getLocalHost ( ) , - NUM00 , InetAddress . getLocalHost ( ) , sport + NUM00 ) ; \n\t\tfail ( ) ; \n\t\t} \n\t$F28069 try { \n\t\tgetSSLSocket ( InetAddress . getLocalHost ( ) , sport , InetAddress . getLocalHost ( ) , - NUM00 ) ; \n\t\tfail ( ) ; \n\t\t} \n\t$F28069 try { \n\t\tgetSSLSocket ( InetAddress . getLocalHost ( ) , Integer . MIN_VALUE , InetAddress . getLocalHost ( ) , sport + NUM00 ) ; \n\t\tfail ( ) ; \n\t\t} \n\tcatch ( IOException expectedOnRI ) { \n\t\tassertTrue ( StandardNames . IS_RI ) ; \n\t\t} \n\tcatch ( IllegalArgumentException expectedOnAndroid ) { \n\t\tassertFalse ( StandardNames . IS_RI ) ; \n\t\t} \n\ttry { \n\t\tgetSSLSocket ( InetAddress . getLocalHost ( ) , sport , InetAddress . getLocalHost ( ) , Integer . MAX_VALUE ) ; \n\t\tfail ( ) ; \n\t\t} \n\tcatch ( IllegalArgumentException expectedOnAndroid ) { \n\t\tassertFalse ( StandardNames . IS_RI ) ; \n\t\t} \n\t} \n"}, {"code": "private String convertUserInputIntoAFullyQualifiedPath ( final String userInput ) { \n\tif ( FileUtils . denotesAbsolutePath ( userInput ) ) { \n\t\treturn userInput ; \n\t\t} \n\tif $F7311 ( userInput , HOME_DIRECTORY_SYMBOL ) { \n\t\t$F18062 ( Assert , home ) if $F4012 ( userInput ) { \n\t\t\treturn home + userInput . substring ( NUM00 ) ; \n\t\t\t} \n\t\t} \n\tString fullPath = getWorkingDirectoryAsString ( ) + userInput ; \n\treturn fullPath ; \n\t} \n"}, {"code": "static final int resizeStamp ( int n ) { \n\treturn Integer . numberOfLeadingZeros ( n ) | ( NUM00 < < ( RESIZE_STAMP_BITS - NUM00 ) ) ; \n\t} \n"}, {"code": "public byte readByte $F72 throws IOException { \n\treturn dis . readByte ( ) ; \n\t} \n"}, {"code": "protected static $F96 hkdfExpand ( $F96 ikm , $F96 salt , $F96 info , int length ) throws InvalidKeyException , NoSuchAlgorithmException { \n\tHKDFBytesGenerator hkdf = new HKDFBytesGenerator ( new SHA256Digest $F72 ) ; \n\thkdf . init ( new HKDFParameters ( ikm , salt , info ) ) ; \n\t$F2175 ( okm , length ) hkdf . generateBytes ( okm , NUM00 , length ) ; \n\treturn okm ; \n\t} \n"}, {"code": "public boolean isEmoteIgnored ( Emoticon emote ) { \n\treturn ignoredEmotes . contains ( emote . code ) ; \n\t} \n"}, {"code": "public boolean isPropertyAllowed ( Name name ) $F298 ( propertiesAllowed , name ) "}, {"code": "$F1431 public void readFile ( String fileName ) throws JDOMException , IOException { \n\tif ( checkFile ( fileName ) ) { \n\t\tElement root = rootFromName ( fileName ) ; \n\t\tElement roster ; \n\t\tif ( root == null ) $F100849 ( log ) roster = root . getChild ( NUM00 ) ; \n\t\tif ( roster == null ) $F3472 ( log ) $F335184 consistIterator = root . getDescendants ( new ElementFilter $F580 ) ; \n\t\ttry { \n\t\t\tElement consist ; \n\t\t\tdo { \n\t\t\t\t$F45366 ( consist , consistIterator ) consistFromXml ( consist ) ; \n\t\t\t\t} \n\t\t\twhile $F2921 ( consistIterator ) ; \n\t\t\t} \n\t\tcatch ( NoSuchElementException nde ) $F981 ( log ) } \n\telse $F22715 ( log ) } \n"}, {"code": "public void testConstructorSignBytesZeroNull2 $F72 { \n\tbyte $F3009 = $F845 ; \n\tint aSign = NUM00 ; \n\t$F15143 $F3023 ( aNumber , aSign , aBytes ) $F3030 ( rBytes ) $F3031 ( resBytes , aNumber ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , aNumber ) } \n"}, {"code": "private int accept ( FileDescriptor ssfd , FileDescriptor newfd , InetSocketAddress [ ] isaa ) throws IOException $F19580 ( accept0 , ssfd , newfd , isaa ) "}, {"code": "protected void transcode ( File file , Transcoder transcoder ) throws IOException , TranscoderException { \n\ttranscoder . addTranscodingHint ( XMLAbstractTranscoder . KEY_XML_PARSER_VALIDATING , Boolean . FALSE ) ; \n\tSVGDocument doc = cloneDocument ( ) ; \n\tTranscoderInput input = new TranscoderInput ( doc ) ; \n\tOutputStream $F112784 ( out , file ) ; \n\tTranscoderOutput output = new TranscoderOutput ( out ) ; \n\ttranscoder . transcode ( input , output ) ; \n\t$F1206 ( out ) $F59 ( out ) } \n"}, {"code": "$F37597 ( tag , msg , args , sLevel , LEVEL_FATAL , String , Log ) "}, {"code": "private void reportProgress ( State state , InnerState innerState ) { \n\t$F657 ( now , System ) if ( innerState . mBytesSoFar - innerState . mBytesNotified > Constants . MIN_PROGRESS_STEP && now - innerState . mTimeLastNotification > Constants . MIN_PROGRESS_TIME ) { \n\t\t$F57044 ( mInfo , innerState ) mDB . updateDownloadCurrentBytes ( mInfo ) ; \n\t\tinnerState . mBytesNotified = innerState . mBytesSoFar ; \n\t\tinnerState . mTimeLastNotification = now ; \n\t\tlong totalBytesSoFar = innerState . mBytesThisSession + mService . mBytesSoFar ; \n\t\tif ( Constants . LOGVV ) { \n\t\t\tLog . v ( Constants . TAG , NUM00 + mInfo . mCurrentBytes + NUM00 + mInfo . mTotalBytes ) ; \n\t\t\tLog . v ( Constants . TAG , NUM00 + totalBytesSoFar + NUM00 + mService . mTotalLength ) ; \n\t\t\t} \n\t\tmService . notifyUpdateBytes ( totalBytesSoFar ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public Document newDocument $F72 { \n\treturn new mf . org . apache . xerces . dom . DocumentImpl $F72 ; \n\t} \n"}, {"code": "@ HLEFunction ( nid = NUM00 , version = NUM00 , checkInsideInterrupt = _BOOL ) public int __sceSasSetGrain ( int sasCore , int grain ) { \n\tcheckSasHandleGood ( sasCore ) ; \n\tgrainSamples = grain ; \n\t$F1082 } \n"}, {"code": "public void handleTblRequestHandlerListButtonAddRequest ( RequestInvocationEvent event ) throws ModelControlException { \n\ttry { \n\t\tMap values = getValues ( ) ; \n\t\tonBeforeSaveProfile ( values ) ; \n\t\t$F50322 ( setPageSessionAttribute , PROPERTY_ATTRIBUTE , values ) SCSAML2SOAPBindingRequestHandlerListAddViewBean vb = ( SCSAML2SOAPBindingRequestHandlerListAddViewBean ) getViewBean ( SCSAML2SOAPBindingRequestHandlerListAddViewBean . class ) ; \n\t\tunlockPageTrail ( ) ; \n\t\tpassPgSessionMap ( vb ) ; \n\t\t$F50333 ( vb , getRequestContext ) } \n\t$F50339 ( setInlineAlertMessage , CCAlert , e ) } \n"}, {"code": "protected static void drawDataPoint ( double x , double y , double xprev , double yprev , int size , int shape , Graphics gx ) { \n\tdrawDataPoint ( x , y , size , shape , gx ) ; \n\tgx . drawLine ( ( int ) x , ( int ) y , ( int ) xprev , ( int ) yprev ) ; \n\t} \n"}, {"code": "public void tableSwitch ( final $F2027 keys , final TableSwitchGenerator generator , final boolean useTable ) { \n\tfor ( $F9808 ( i , keys ) ) { \n\t\tif $F15531 ( keys , i ) $F825 } \n\tLabel def = newLabel ( ) ; \n\tLabel end = newLabel ( ) ; \n\tif $F3305 ( keys ) { \n\t\tint len = keys . length ; \n\t\tint min = keys [ NUM00 ] ; \n\t\tint max = keys [ len - NUM00 ] ; \n\t\tint range = max - min + NUM00 ; \n\t\tif ( useTable ) { \n\t\t\t$F15537 ( labels , range ) Arrays . fill ( labels , def ) ; \n\t\t\tfor ( $F1316 ( i , len ) ) { \n\t\t\t\tlabels [ keys [ i ] - min ] = newLabel ( ) ; \n\t\t\t\t} \n\t\t\tmv . visitTableSwitchInsn ( min , max , def , labels ) ; \n\t\t\tfor ( $F1316 ( i , range ) ) { \n\t\t\t\tLabel label = labels [ i ] ; \n\t\t\t\tif ( label != def ) { \n\t\t\t\t\tmark ( label ) ; \n\t\t\t\t\tgenerator . generateCase ( i + min , end ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\t$F15537 ( labels , len ) for ( $F1316 ( i , len ) ) $F15546 ( labels , i , newLabel ) mv . visitLookupSwitchInsn ( def , keys , labels ) ; \n\t\t\tfor ( $F1316 ( i , len ) ) { \n\t\t\t\tmark ( labels [ i ] ) ; \n\t\t\t\tgenerator . generateCase ( keys [ i ] , end ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tmark ( def ) ; \n\tgenerator . generateDefault ( ) ; \n\tmark ( end ) ; \n\t} \n"}, {"code": "static boolean chunkSet ( InternalDistributedMember recipient , Set set , int CHUNK_SIZE_IN_BYTES , boolean includeValues , ObjectIntProcedure proc ) throws IOException { \n\t$F10531 ( it , set ) boolean keepGoing = _BOOL ; \n\tboolean sentLastChunk = _BOOL ; \n\tfinal HeapDataOutputStream mos = new HeapDataOutputStream ( InitialImageOperation . CHUNK_SIZE_IN_BYTES + NUM00 , recipient . getVersionObject ( ) ) ; \n\tdo { \n\t\t$F2268 ( mos ) int avgItemSize = NUM00 ; \n\t\tint itemCount = NUM00 ; \n\t\twhile ( ( mos . size ( ) + avgItemSize ) < InitialImageOperation . CHUNK_SIZE_IN_BYTES && it . hasNext ( ) ) { \n\t\t\t$F8877 ( key , it ) DataSerializer . writeObject ( key , mos ) ; \n\t\t\titemCount ++ ; \n\t\t\tavgItemSize = mos . size ( ) / itemCount ; \n\t\t\t} \n\t\tDataSerializer . writeObject ( ( Object ) null , mos ) ; \n\t\tint lastMsg = it . hasNext ( ) ? NUM00 : NUM00 ; \n\t\tkeepGoing = proc . executeWith ( mos , lastMsg ) ; \n\t\tsentLastChunk = lastMsg == NUM00 && keepGoing ; \n\t\t} \n\twhile ( keepGoing && it . hasNext ( ) ) ; \n\treturn sentLastChunk ; \n\t} \n"}, {"code": "private $F2027 parseMetaDataInformation $F72 throws UserError { \n\t$F15300 ( selectedColumns , metaData ) $F13750 ( usedColumnNames ) int columnIndex = NUM00 ; \n\tint usedColumnIndex = NUM00 ; \n\tfor ( ColumnMetaData column : metaData ) { \n\t\tif ( ! column . isRemoved ( ) ) { \n\t\t\tselectedColumns [ usedColumnIndex ] = columnIndex ; \n\t\t\tusedColumnIndex ++ ; \n\t\t\t$F20605 ( columnName , column ) if $F2200 ( usedColumnNames , columnName ) $F207 ( usedColumnNames , columnName ) else { \n\t\t\t\tthrow new UserError ( null , NUM00 , columnName ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcolumnIndex ++ ; \n\t\t} \n\t$F2027 attributeColumns = Arrays . copyOf ( selectedColumns , usedColumnIndex ) ; \n\treturn attributeColumns ; \n\t} \n"}, {"code": "static Field findField ( Object instance , String name ) throws NoSuchFieldException { \n\tfor ( $F6969 clazz = instance . getClass ( ) ; \n\tclazz != null ; \n\tclazz = clazz . getSuperclass ( ) ) { \n\t\ttry { \n\t\t\t$F111040 ( field , clazz , name ) $F41506 ( field , _BOOL ) return field ; \n\t\t\t} \n\t\t$F7847 } \n\tthrow new NoSuchFieldException ( $F148645 ( name , instance ) ) ; \n\t} \n"}, {"code": "SSLSession toSession ( $F96 data , String host , int port ) { \n\t$F5950 ( bais , data ) $F5337 ( dais , bais ) try { \n\t\t$F5952 ( type , dais ) if ( type != OPEN_SSL ) { \n\t\t\tlog ( new AssertionError ( NUM00 + type ) ) ; \n\t\t\t$F1274 } \n\t\t$F5952 ( length , dais ) $F2175 ( sessionData , length ) dais . readFully ( sessionData ) ; \n\t\t$F5952 ( count , dais ) $F5958 certs = new X509Certificate [ count ] ; \n\t\tfor ( $F119 ( i , count ) ) { \n\t\t\t$F5961 ( length , dais ) $F2175 ( certData , length ) dais . readFully ( certData ) ; \n\t\t\tcerts [ i ] = OpenSSLX509Certificate . fromX509Der ( certData ) ; \n\t\t\t} \n\t\treturn new OpenSSLSessionImpl ( sessionData , host , port , certs , this ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tlog ( e ) ; \n\t\t$F1274 } \n\t} \n"}, {"code": "private $F117572 ( addDumpFile , dumpFile ) "}, {"code": "private static boolean dateByOrdinal ( DateTimeFormatterBuilder bld , Collection < DateTimeFieldType > fields , boolean extended , boolean strictISO ) { \n\tboolean reducedPrec = _BOOL ; \n\tif ( fields . remove ( DateTimeFieldType . year ( ) ) ) { \n\t\t$F16690 ( bld , yearElement ) if ( fields . remove ( DateTimeFieldType . dayOfYear ( ) ) ) { \n\t\t\tappendSeparator ( bld , extended ) ; \n\t\t\tbld . appendDayOfYear ( NUM00 ) ; \n\t\t\t} \n\t\telse { \n\t\t\treducedPrec = _BOOL ; \n\t\t\t} \n\t\t} \n\telse if ( fields . remove ( DateTimeFieldType . dayOfYear ( ) ) ) { \n\t\t$F188366 ( bld ) bld . appendDayOfYear ( NUM00 ) ; \n\t\t} \n\treturn reducedPrec ; \n\t} \n"}, {"code": "private void writeAttr ( String name , String val ) throws IOException { \n\twriteAttr ( name , val , _BOOL ) ; \n\t} \n"}, {"code": "public boolean isPageInRange ( int pageNumber ) { \n\tfor ( $F2277 ( ind , sequenceStarts ) ) { \n\t\tif ( sequenceStarts . get ( ind ) <= pageNumber && pageNumber <= sequenceEnds . get ( ind ) ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F9159 ( logDebug , mSetupDone , _BOOL , mServiceConn , mContext , mDisposed , mService , mPurchaseListener ) "}, {"code": "$F1431 public static < T extends DimensionalItemObject > $F5675 asTypedList ( Collection < DimensionalItemObject > collection ) { \n\t$F98037 ( list ) if ( collection != null ) { \n\t\tfor ( DimensionalItemObject object : collection ) { \n\t\t\t$F51668 ( list , object ) } \n\t\t} \n\treturn list ; \n\t} \n"}, {"code": "$F13735 ( prefix , namespace , attName , attValue , xmlWriter ) "}, {"code": "$F41720 ( value , absMin , absMax , absValue , Math ) "}, {"code": "public PutIndexTemplateRequest aliases ( XContentBuilder source ) { \n\treturn aliases ( source . bytes ( ) ) ; \n\t} \n"}, {"code": "void addNewTable ( String name , int tdefPageNumber , Short type , String linkedDbName , String linkedTableName ) throws IOException { \n\taddTable ( name , Integer . valueOf ( tdefPageNumber ) , type , linkedDbName , linkedTableName ) ; \n\taddToSystemCatalog ( name , tdefPageNumber , type , linkedDbName , linkedTableName , _tableParentId ) ; \n\taddToAccessControlEntries ( tdefPageNumber , _tableParentId , _newTableSIDs ) ; \n\t} \n"}, {"code": "public static String hashpw ( $F96 password0 , final String salt ) { \n\tBCrypt B ; \n\tString real_salt ; \n\tbyte passwordb [ ] = null , saltb [ ] , hashed [ ] ; \n\tchar minor = $F2858 ; \n\tint rounds , off = NUM00 ; \n\t$F3239 ( rs ) if ( $F4434 ( salt ) || $F4434 ( salt ) ) $F825 if $F4432 ( salt ) { \n\t\toff = NUM00 ; \n\t\t} \n\telse { \n\t\t$F7783 ( minor , salt ) if ( minor != NUM00 || $F4434 ( salt ) ) $F825 off = NUM00 ; \n\t\t} \n\tif ( salt . charAt ( off + NUM00 ) > NUM00 ) $F825 rounds = Integer . parseInt ( $F10818 ( salt , off ) ) ; \n\treal_salt = salt . substring ( off + NUM00 , off + NUM00 ) ; \n\ttry { \n\t\tif ( minor >= $F74671 ) { \n\t\t\tpasswordb = $F30258 ( Arrays , password0 ) ; \n\t\t\t$F8528 ( passwordb ) = $F19905 ; \n\t\t\t} \n\t\telse { \n\t\t\t$F42716 ( passwordb , Arrays , password0 ) ; \n\t\t\t} \n\t\tsaltb = decode_base64 ( real_salt , BCRYPT_SALT_LEN ) ; \n\t\tB = new BCrypt $F72 ; \n\t\thashed = B . crypt_raw ( passwordb , saltb , rounds , bf_crypt_ciphertext . clone ( ) ) ; \n\t\t} \n\tfinally { \n\t\tif ( password0 != null ) { \n\t\t\tArrays . fill ( password0 , $F74671 ) ; \n\t\t\tpassword0 = null ; \n\t\t\t} \n\t\tif ( passwordb != null ) { \n\t\t\tArrays . fill ( passwordb , $F74671 ) ; \n\t\t\tpasswordb = null ; \n\t\t\t} \n\t\t} \n\t$F84 ( rs ) if ( minor >= NUM00 ) $F288 ( rs , minor ) $F84 ( rs ) $F2854 ( rounds , rs ) if ( rounds > NUM00 ) $F825 $F42779 ( rs , Integer , rounds ) $F84 ( rs ) rs . append ( encode_base64 ( saltb , saltb . length ) ) ; \n\trs . append ( encode_base64 ( hashed , bf_crypt_ciphertext . length * NUM00 - NUM00 ) ) ; \n\t$F92 ( rs ) } \n"}, {"code": "public void removeListener ( $F1113 ConfigurationListener listener ) { \n\tif ( myListeners != null ) { \n\t\tmyListeners . remove ( listener ) ; \n\t\tif $F2979 ( myListeners ) { \n\t\t\tmyListeners = null ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "void reclaimScrapViews $F206149 ( views ) { \n\tif ( mViewTypeCount == NUM00 ) $F21926 ( views , mCurrentScrap ) else { \n\t\tfinal int viewTypeCount = mViewTypeCount ; \n\t\t$F158084 ( scrapViews , mScrapViews ) for ( $F1316 ( i , viewTypeCount ) ) { \n\t\t\t$F65533 ( scrapPile , scrapViews , i ) views . addAll ( scrapPile ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void doWindowOpen $F72 $F5795 ( doConnect ) "}, {"code": "public boolean schedule ( Runnable task , ClassLoader loader ) { \n\tboolean isPriority = _BOOL ; \n\tboolean isQueue = _BOOL ; \n\tboolean isWake = _BOOL ; \n\treturn scheduleImpl ( task , loader , MAX_EXPIRE , isPriority , isQueue , isWake ) ; \n\t} \n"}, {"code": "public static int hash2 ( int hash , Object x , Object y ) { \n\treturn NUM00 | ( hash + NUM00 * System . identityHashCode ( x ) + NUM00 * System . identityHashCode ( y ) ) ; \n\t} \n"}, {"code": "public static $F1986 parseVectorString ( String vectorString ) { \n\t$F6542 ( parsedString , vectorString ) $F40939 ( vector , parsedString ) for ( $F1139 ( j , parsedString ) ) { \n\t\tdouble val = Utils . doubleParsable ( parsedString [ j ] ) ; \n\t\tvector [ j ] = Double . isNaN ( val ) ? NUM00 : val ; \n\t\t} \n\treturn vector ; \n\t} \n"}, {"code": "public String globalInfo $F72 { \n\treturn $F41 ; \n\t} \n"}, {"code": "public static $F4203 $F51719 concat ( Stream $F10049 a , Stream $F10049 b ) { \n\tObjects . requireNonNull ( a ) ; \n\tObjects . requireNonNull ( b ) ; \n\t$F1431 Spliterator $F4203 split = new Streams . ConcatSpliterator . OfRef $F200 ( ( Spliterator $F4203 ) a . spliterator ( ) , ( Spliterator $F4203 ) b . spliterator ( ) ) ; \n\t$F51719 stream = StreamSupport . stream ( split , a . isParallel ( ) || b . isParallel ( ) ) ; \n\treturn stream . onClose ( Streams . composedClose ( a , b ) ) ; \n\t} \n"}, {"code": "$F122843 $F32043 public void test_DR_PGS_4NODES_2NODESDOWN_Validate_Receiver $F72 throws Exception { \n\tInteger lnPort = ( Integer ) vm0 . invoke ( null ) ; \n\tInteger nyPort = ( Integer ) vm1 . invoke ( null ) ; \n\tcreateCacheInVMs ( nyPort , vm2 , vm3 ) ; \n\tcreateReceiverInVMs ( vm2 , vm3 ) ; \n\tcreateCacheInVMs ( lnPort , vm4 , vm5 , vm6 , vm7 ) ; \n\t$F188761 ( vm4 ) $F188761 ( vm5 ) $F188761 ( vm6 ) $F188761 ( vm7 ) $F188761 ( vm4 ) $F188761 ( vm5 ) $F188761 ( vm6 ) $F188761 ( vm7 ) startSenderInVMs ( NUM00 , vm4 , vm5 , vm6 , vm7 ) ; \n\t$F188761 ( vm2 ) $F188761 ( vm3 ) $F188761 ( vm4 ) $F188761 ( vm5 ) $F188761 ( vm6 ) $F188761 ( vm7 ) $F9470 ( Thread ) { \n\t\tAsyncInvocation inv1 = vm7 . invokeAsync ( null ) ; \n\t\t$F9470 ( Thread ) AsyncInvocation inv2 = vm4 . invokeAsync ( null ) ; \n\t\t$F9470 ( Thread ) AsyncInvocation inv3 = vm6 . invokeAsync ( null ) ; \n\t\t$F9470 ( Thread ) AsyncInvocation inv4 = vm5 . invokeAsync ( null ) ; \n\t\ttry { \n\t\t\t$F14454 ( inv1 ) $F14454 ( inv2 ) $F14454 ( inv3 ) $F14454 ( inv4 ) } \n\t\tcatch ( Exception e ) { \n\t\t\tAssert . fail ( NUM00 , e ) ; \n\t\t\t} \n\t\t} \n\t$F188761 ( vm6 ) $F188761 ( vm7 ) $F188761 ( vm2 ) } \n"}, {"code": "public void findAndInit ( Iterator it ) $F7686 ( it , findAndInit ) "}, {"code": "public static DataSourcePropertiesInterface decodeXML ( Document document , String elementName ) { \n\tif $F54923 ( document , elementName ) $F1337 $F2539 map = new LinkedHashMap $F2538 $F72 ; \n\tNodeList nodeList = document . getElementsByTagName ( elementName ) ; \n\tif ( $F72501 ( nodeList ) ) { \n\t\tNode node = nodeList . item ( NUM00 ) ; \n\t\t$F15376 ( child , node ) while ( child != null ) { \n\t\t\tif $F61358 ( child , Node ) { \n\t\t\t\tmap . put ( child . getNodeName ( ) , child . getTextContent ( ) ) ; \n\t\t\t\t} \n\t\t\t$F21003 ( child ) } \n\t\treturn DataSourceConnectorFactory . getDataSourceProperties ( map ) ; \n\t\t} \n\telse { \n\t\treturn DataSourceConnectorFactory . getNoDataSource ( ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public char next $F72 { \n\t++ docPos ; \n\tif ( docPos < segmentEnd || segmentEnd >= doc . getLength ( ) ) $F43105 ( text ) try { \n\t\tdoc . getText ( segmentEnd , doc . getLength ( ) - segmentEnd , text ) ; \n\t\t} \n\tcatch ( BadLocationException e ) $F9491 ( e ) segmentEnd += text . count ; \n\treturn text . current ( ) ; \n\t} \n"}, {"code": "private void adjustRowHeights ( JTable table ) { \n\tfor ( $F84968 ( row , table ) ) { \n\t\tint rowHeight = table . getRowHeight ( ) ; \n\t\tfor ( $F90183 ( column , table ) ) { \n\t\t\tComponent comp = table . prepareRenderer ( table . getCellRenderer ( row , column ) , row , column ) ; \n\t\t\trowHeight = Math . max ( rowHeight , $F320997 ( comp ) ) ; \n\t\t\t} \n\t\ttable . setRowHeight ( row , rowHeight ) ; \n\t\t} \n\t} \n"}, {"code": "public $F28584 volumeURIs ( $F28584 uris , boolean delete , boolean remediate , ValCk ... checks ) { \n\t$F114980 ( remediatedURIs ) $F47942 volumes = dbClient . queryObject ( $F8540 , uris ) ; \n\t$F47942 remediatedVolumes = volumes ( volumes , delete , remediate , checks ) ; \n\tfor ( Volume volume : remediatedVolumes ) $F42097 ( remediatedURIs , volume ) return remediatedURIs ; \n\t} \n"}, {"code": "private FormatString [ ] parse ( String s ) { \n\tArrayList < FormatString > $F204 ( al ) ; \n\t$F1150 ( m , fsPattern , s ) for ( $F51283 ( i , len , s ) ; \n\ti < len ; \n\t) { \n\t\tif $F36147 ( m , i ) { \n\t\t\tif ( m . start ( ) != i ) { \n\t\t\t\tcheckText ( s , i , m . start ( ) ) ; \n\t\t\t\tal . add ( new FixedString ( s . substring ( i , m . start ( ) ) ) ) ; \n\t\t\t\t} \n\t\t\tal . add ( new FormatSpecifier ( m ) ) ; \n\t\t\t$F204945 ( i , m ) } \n\t\telse { \n\t\t\tcheckText ( s , i , len ) ; \n\t\t\tal . add ( new FixedString ( s . substring ( i ) ) ) ; \n\t\t\t$F597 } \n\t\t} \n\treturn al . toArray ( new FormatString $F2313 ( al ) ) ; \n\t} \n"}, {"code": "$F73823 ( lock , this , count ) "}, {"code": "private void updateIndexColumnButtons $F72 { \n\tindexRemoveButton . setEnabled ( _BOOL ) ; \n\tindexUpButton . setEnabled ( _BOOL ) ; \n\tindexDownButton . setEnabled ( _BOOL ) ; \n\tint index = selectedColumns . getSelectionIndex ( ) ; \n\tif ( index >= NUM00 ) { \n\t\tindexRemoveButton . setEnabled ( _BOOL ) ; \n\t\tif ( index > NUM00 ) $F7728 ( indexUpButton , _BOOL ) else if ( index < selectedColumns . getItemCount ( ) - NUM00 ) $F7728 ( indexDownButton , _BOOL ) } \n\t} \n"}, {"code": "public String urlForPOISearch ( String tag , BoundingBox bb , int limit , int timeout ) { \n\t$F83 ( s ) $F86403 ( s , mService ) String sBB = NUM00 + bb . getLatSouth ( ) + NUM00 + bb . getLonWest ( ) + NUM00 + bb . getLatNorth ( ) + NUM00 + bb . getLonEast ( ) + NUM00 ; \n\tString data = NUM00 + timeout + NUM00 + NUM00 + tag + NUM00 + sBB + NUM00 + NUM00 + tag + NUM00 + sBB + NUM00 + NUM00 + tag + NUM00 + sBB + NUM00 + NUM00 + limit + NUM00 ; \n\tLog . d ( BonusPackHelper . LOG_TAG , NUM00 + data ) ; \n\ts . append ( URLEncoder . encode ( data ) ) ; \n\t$F92 ( s ) } \n"}, {"code": "public void waitForDecodingToFinish $F72 { \n\twhile ( isDecoding ) { \n\t\ttry $F31130 ( Thread ) catch ( final InterruptedException e ) { \n\t\t\tLogWriter . writeLog ( $F5351 ( e ) ) ; \n\t\t\tisDecoding = _BOOL ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private static String wikiToPlainText ( String content ) { \n\t$F2899 ( content ) $F2899 ( content ) $F2899 ( content ) $F2899 ( content ) $F2899 ( content ) $F2899 ( content ) $F2899 ( content ) $F2899 ( content ) $F2899 ( content ) $F2899 ( content ) $F1382 ( content ) $F22998 ( size , content ) $F129840 ( endOfFirstParagraph , content ) if ( endOfFirstParagraph < NUM00 ) { \n\t\tendOfFirstParagraph = size ; \n\t\t} \n\tcontent = content . substring ( $F150757 ( Math , endOfFirstParagraph ) ) ; \n\treturn content ; \n\t} \n"}, {"code": "public final $F96 update $F97 ( input ) { \n\tif ( mode != ENCRYPT_MODE && mode != DECRYPT_MODE ) $F10763 $F826 ( input ) $F118899 ( input ) return spiImpl . engineUpdate ( input , NUM00 , input . length ) ; \n\t} \n"}, {"code": "$F36345 ( tag , msg , args , sLevel , LEVEL_ERROR , String , Log ) "}, {"code": "private static int createPackedParams ( SunGraphics2D sg2d , GlyphList gl ) { \n\treturn ( ( ( gl . usePositions ( ) ? NUM00 : NUM00 ) < < OFFSET_POSITIONS ) | ( ( gl . isSubPixPos ( ) ? NUM00 : NUM00 ) < < OFFSET_SUBPIXPOS ) | ( ( gl . isRGBOrder ( ) ? NUM00 : NUM00 ) < < OFFSET_RGBORDER ) | ( ( sg2d . lcdTextContrast & NUM00 ) < < OFFSET_CONTRAST ) ) ; \n\t} \n"}, {"code": "public static int update $F13180 ( sql , args ) { \n\tConnection c = null ; \n\tPreparedStatement p = null ; \n\ttry { \n\t\tc = getConnection ( ) ; \n\t\t$F43349 ( c ) p = c . prepareStatement ( sql ) ; \n\t\tint order = NUM00 ; \n\t\tif ( args != null ) { \n\t\t\tfor ( $F1139 ( i , args ) ) { \n\t\t\t\tObject o = args [ i ] ; \n\t\t\t\tsetParameter ( p , order ++ , o ) ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn p . executeUpdate ( ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tif $F6002 ( log ) log . error ( sql + toString ( args ) , e ) ; \n\t\t} \n\t$F168670 ( close , p , c ) $F1082 } \n"}, {"code": "public boolean isLockSubject $F72 { \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void runTest $F72 throws Throwable { \n\tDocument doc ; \n\tNodeList elementList ; \n\tNode nameNode ; \n\tCharacterData child ; \n\t$F236 ( doc , load , _BOOL ) $F237 ( elementList , doc ) $F238 ( nameNode , elementList ) $F241 ( child , nameNode ) { \n\t\tboolean success = _BOOL ; \n\t\ttry { \n\t\t\t$F4054 ( child ) } \n\t\t$F250 ( success , ex , DOMException ) assertTrue ( NUM00 , success ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public int hashCode $F72 { \n\tint code = NUM00 ; \n\t$F156574 ( fPublicId , code ) $F156574 ( fLiteralSystemId , code ) $F156574 ( fBaseSystemId , code ) $F156574 ( fExpandedSystemId , code ) $F156574 ( fNamespace , code ) return code ; \n\t} \n"}, {"code": "public QuickActionView addAction ( Action action ) { \n\tcheckShown ( ) ; \n\tmActions . add ( action ) ; \n\treturn this ; \n\t} \n"}, {"code": "$F188545 ( sourceList , entry , _BOOL ) "}, {"code": "protected boolean display ( File helpFile ) throws HelpException { \n\tif $F3428 ( helpFile ) $F9278 ( loadAndWrite , helpFile , _BOOL ) else { \n\t\t$F4453 ( notFound , helpDir , NOT_FOUND ) if $F3428 ( notFound ) loadAndWrite ( notFound ) ; \n\t\telse throw new HelpException $F580 ; \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public static void storeLocation ( Context context , LatLng location ) { \n\t$F111887 ( prefs , PreferenceManager , context ) $F37526 ( editor , prefs ) editor . putLong ( PREFERENCES_LAT , Double . doubleToRawLongBits ( location . latitude ) ) ; \n\teditor . putLong ( PREFERENCES_LNG , Double . doubleToRawLongBits ( location . longitude ) ) ; \n\t$F37527 ( editor ) } \n"}, {"code": "public Point2D either $F72 { \n\treturn best1 ; \n\t} \n"}, {"code": "$F1 public boolean equals ( Object object ) { \n\t$F3627 ( this , object , _BOOL ) if ( object instanceof List ) { \n\t\t$F33514 ( list , object ) $F33517 ( list , size , _BOOL ) $F33240 it1 = iterator ( ) , it2 = list . iterator ( ) ; \n\t\twhile $F2921 ( it1 ) { \n\t\t\tObject e1 = it1 . next ( ) , e2 = it2 . next ( ) ; \n\t\t\t$F33528 ( e1 , e2 , _BOOL ) } \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static String rowToString ( JSONArray ja ) { \n\t$F280 ( sb ) for ( $F146321 ( i , ja ) ) { \n\t\t$F34674 ( i , sb ) Object object = ja . opt ( i ) ; \n\t\tif ( object != null ) { \n\t\t\t$F1822 ( string , object ) if ( $F20 ( string ) && ( $F116993 ( string ) || $F48845 ( string ) || string . indexOf ( NUM00 ) >= NUM00 || $F4431 ( string ) ) ) { \n\t\t\t\t$F84 ( sb ) $F115 ( length , string ) for ( $F6225 ( j , length ) ) { \n\t\t\t\t\t$F1280 ( c , string , j ) if ( c >= NUM00 && c != NUM00 ) $F288 ( sb , c ) } \n\t\t\t\t$F84 ( sb ) } \n\t\t\telse $F288 ( sb , string ) } \n\t\t} \n\t$F84 ( sb ) $F92 ( sb ) } \n"}, {"code": "private static void removeTable ( Connection conn , String name ) throws SQLException { \n\t$F2936 ( name ) $F11282 ( stat , conn ) $F81111 ( stat , name ) DBUtil . commitEL ( conn ) ; \n\t} \n"}, {"code": "public boolean containsCategory ( String category ) { \n\t$F78369 ( hiddenBugCategorySet , category ) } \n"}, {"code": "public static boolean isVolumeFullCopySource ( Volume volume , DbClient dbClient ) { \n\tboolean isFullCopySource = _BOOL ; \n\tStringSet fullCopyIds = volume . getFullCopies ( ) ; \n\tif $F13709 ( fullCopyIds ) { \n\t\t$F13712 ( fullCopyIdsIter , fullCopyIds ) while $F2921 ( fullCopyIdsIter ) { \n\t\t\tURI fullCopyURI = URI . create ( fullCopyIdsIter . next ( ) ) ; \n\t\t\t$F8544 ( fullCopyVolume , dbClient , fullCopyURI ) if ( ( fullCopyVolume != null ) && ( ! fullCopyVolume . getInactive ( ) ) ) { \n\t\t\t\tisFullCopySource = _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn isFullCopySource ; \n\t} \n"}, {"code": "$F1 public void assertEquals $F109214 ( message , expectedObj , actualObj ) { \n\tLinearRegressionModel expected = ( LinearRegressionModel ) expectedObj ; \n\tLinearRegressionModel actual = ( LinearRegressionModel ) actualObj ; \n\tmessage = message + NUM00 + actual . getSource ( ) + NUM00 ; \n\tAssert . assertArrayEquals ( message + NUM00 , expected . getCoefficients ( ) , actual . getCoefficients ( ) , NUM00 ) ; \n\tAssert . assertArrayEquals ( message + NUM00 , expected . getProbabilities ( ) , actual . getProbabilities ( ) , NUM00 ) ; \n\tAssert . assertArrayEquals ( message + NUM00 , expected . getSelectedAttributeNames ( ) , actual . getSelectedAttributeNames ( ) ) ; \n\tAssert . assertArrayEquals ( message + NUM00 , expected . getSelectedAttributes ( ) , actual . getSelectedAttributes ( ) ) ; \n\tAssert . assertArrayEquals ( message + NUM00 , expected . getStandardErrors ( ) , actual . getStandardErrors ( ) , NUM00 ) ; \n\tAssert . assertArrayEquals ( message + NUM00 , expected . getStandardizedCoefficients ( ) , actual . getStandardizedCoefficients ( ) , NUM00 ) ; \n\tAssert . assertArrayEquals ( message + NUM00 , expected . getTolerances ( ) , actual . getTolerances ( ) , NUM00 ) ; \n\tAssert . assertArrayEquals ( message + NUM00 , expected . getTStats ( ) , actual . getTStats ( ) , NUM00 ) ; \n\t} \n"}, {"code": "$F21572 ( doc , elementList , nameNode , child , childData , load , _BOOL , assertEquals ) "}, {"code": "public static $F529 entityMaintPermCheck $F71242 ( dctx , context ) { \n\t$F108907 ( userLogin , context ) $F28491 ( locale , context ) Security security = dctx . getSecurity ( ) ; \n\t$F67631 ( resultMap ) if ( security . hasPermission ( NUM00 , userLogin ) ) { \n\t\tresultMap = ServiceUtil . returnSuccess ( ) ; \n\t\t$F545 ( resultMap , _BOOL ) } \n\telse { \n\t\tresultMap = ServiceUtil . returnFailure ( UtilProperties . getMessage ( resource , NUM00 , locale ) ) ; \n\t\t$F545 ( resultMap , _BOOL ) } \n\treturn resultMap ; \n\t} \n"}, {"code": "public void testQuorumSucceed $F72 { \n\tquorum . succeed ( ) ; \n\tquorum . fail ( ) ; \n\tassertEquals ( callbackResult . get ( ) , NUM00 ) ; \n\tquorum . fail ( ) ; \n\tquorum . succeed ( ) ; \n\tassertEquals ( callbackResult . get ( ) , NUM00 ) ; \n\t} \n"}, {"code": "public void requestAfterExplanation ( $F4170 $F806 permissions ) { \n\t$F22547 ( permissionsToRequest ) for ( String permissionName : permissions ) { \n\t\tif ( isPermissionDeclined ( permissionName ) ) $F207 ( permissionsToRequest , permissionName ) else { \n\t\t\tpermissionCallback . onPermissionPreGranted ( permissionName ) ; \n\t\t\t} \n\t\t} \n\t$F8504 ( permissionsToRequest ) $F85163 ( permissions , permissionsToRequest ) context . requestPermissions ( permissions , REQUEST_PERMISSIONS ) ; \n\t} \n"}, {"code": "static void pauseThread ( long duration ) { \n\ttry $F7595 ( Thread , duration ) $F92403 ( s_logger , e ) } \n"}, {"code": "final public void println ( String v ) $F87800 ( _out , v , log , Level , e ) "}, {"code": "public int read $F233176 ( offset , length ) throws IOException $F48842 ( sd , cbuf , offset , length ) "}, {"code": "public int read $F72 throws IOException { \n\tint val ; \n\tif ( $F7614 ( val , is ) < NUM00 ) $F7629 switch ( val & NUM00 ) { \n\t\t$F3366 $F3366 val = $F74254 ( val ) | $F353757 ( is ) ; \n\t\t$F597 $F3366 val = $F74254 ( val ) | ( $F353757 ( is ) < < NUM00 ) | $F353757 ( is ) ; \n\t\t$F597 $F3366 throw new UnsupportedEncodingException $F72 ; \n\t\t$F2448 } \n\treturn val ; \n\t} \n"}, {"code": "private static boolean CallNonvirtualBooleanMethodV $F128351 ( env , objJREF , classJREF , methodID , argAddress ) throws Exception { \n\t$F4274 ( traceJNI , VM ) $F4275 ( RuntimeEntrypoints ) try { \n\t\t$F4276 ( obj , env , objJREF ) Object returnObj = JNIHelpers . invokeWithVarArg ( obj , methodID , argAddress , TypeReference . Boolean , _BOOL ) ; \n\t\treturn Reflection . unwrapBoolean ( returnObj ) ; \n\t\t} \n\tcatch ( Throwable unexpected ) { \n\t\t$F4285 ( traceJNI , unexpected , System ) env . recordException ( unexpected ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "private boolean rContainsRMInstruction ( ProgramBlock pb , String varName ) { \n\tif ( pb instanceof WhileProgramBlock ) { \n\t\tWhileProgramBlock tmp = ( WhileProgramBlock ) pb ; \n\t\tfor ( ProgramBlock c : tmp . getChildBlocks ( ) ) $F19670 ( rContainsRMInstruction , c , varName , _BOOL ) } \n\telse if ( pb instanceof IfProgramBlock ) { \n\t\tIfProgramBlock tmp = ( IfProgramBlock ) pb ; \n\t\tfor ( ProgramBlock c : tmp . getChildBlocksIfBody ( ) ) $F19670 ( rContainsRMInstruction , c , varName , _BOOL ) for ( ProgramBlock c : tmp . getChildBlocksElseBody ( ) ) $F19670 ( rContainsRMInstruction , c , varName , _BOOL ) } \n\telse if ( pb instanceof ForProgramBlock ) { \n\t\tForProgramBlock tmp = ( ForProgramBlock ) pb ; \n\t\tfor ( ProgramBlock c : tmp . getChildBlocks ( ) ) $F19670 ( rContainsRMInstruction , c , varName , _BOOL ) } \n\telse if ( pb instanceof FunctionProgramBlock ) $F845 else { \n\t\tfor ( Instruction inst : pb . getInstructions ( ) ) { \n\t\t\t$F1822 ( instStr , inst ) if ( instStr . contains ( NUM00 + Lop . OPERAND_DELIMITOR + varName ) || instStr . contains ( NUM00 + Lop . OPERAND_DELIMITOR + varName ) ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public ProjectImporter ( final File rootFolder ) { \n\tassertNotNull ( NUM00 , rootFolder ) ; \n\tassertTrue ( NUM00 + rootFolder , rootFolder . exists ( ) ) ; \n\tassertTrue ( NUM00 + rootFolder , rootFolder . isDirectory ( ) ) ; \n\tassertTrue ( NUM00 + rootFolder , rootFolder . canRead ( ) ) ; \n\tassertTrue ( NUM00 + rootFolder , null != rootFolder . listFiles ( ) ) ; \n\tthis . rootFolder = rootFolder ; \n\t} \n"}, {"code": "public void testDoubles $F72 throws Exception { \n\t$F1986 values = new double [ ] { \n\t\tDouble . NEGATIVE_INFINITY , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , + NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , Double . POSITIVE_INFINITY , Double . NaN } \n\t; \n\t$F19280 ( encoded , values ) for ( $F1139 ( i , values ) ) { \n\t\tencoded [ i ] = NumericUtils . doubleToSortableLong ( values [ i ] ) ; \n\t\tassertTrue ( NUM00 , Double . compare ( values [ i ] , NumericUtils . sortableLongToDouble ( encoded [ i ] ) ) == NUM00 ) ; \n\t\t} \n\tfor ( $F1139 ( i , encoded ) ) { \n\t\tassertTrue ( NUM00 , encoded [ i - NUM00 ] < encoded [ i ] ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isRegistered $F60993 ( clazz ) { \n\treturn $F20053 ( regModules , clazz ) ; \n\t} \n"}, {"code": "private static $F7329 offsetASR $F68514 ( offset , environment , instructions , registerNodeValue1 , registerNodeValue2 , immediateNodeValue ) { \n\t$F7336 ( address , environment ) $F7336 ( index , environment ) $F7336 ( tmpVar , environment ) long baseOffset = offset ; \n\tif $F3057 ( immediateNodeValue ) { \n\t\t$F7336 ( isZeroCondition , environment ) $F7336 ( tmpVar1 , environment ) instructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dw , registerNodeValue2 , wd , $F43818 ( String ) , dw , tmpVar1 ) ) ; \n\t\t$F453896 ( instructions , ReilHelpers , baseOffset , dw , tmpVar1 , bt , isZeroCondition ) instructions . add ( ReilHelpers . createSub ( baseOffset ++ , dw , String . valueOf ( NUM00 ) , bt , isZeroCondition , dw , index ) ) ; \n\t\t} \n\telse { \n\t\t$F7336 ( tmpVar1 , environment ) $F7336 ( tmpVar2 , environment ) $F7336 ( tmpVar3 , environment ) $F7336 ( tmpVar4 , environment ) instructions . add ( ReilHelpers . createAdd ( baseOffset ++ , dw , registerNodeValue2 , dw , String . valueOf ( NUM00 ) , dw , tmpVar1 ) ) ; \n\t\tinstructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dw , tmpVar1 , dw , NUM00 + immediateNodeValue , dw , tmpVar2 ) ) ; \n\t\tinstructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dw , String . valueOf ( NUM00 ) , dw , NUM00 + immediateNodeValue , dw , tmpVar3 ) ) ; \n\t\tinstructions . add ( ReilHelpers . createSub ( baseOffset ++ , dw , tmpVar2 , dw , tmpVar3 , qw , tmpVar4 ) ) ; \n\t\t$F7364 ( instructions , ReilHelpers , baseOffset , qw , tmpVar4 , dw , dWordBitMask , index ) } \n\t$F43828 ( instructions , ReilHelpers , baseOffset , dw , registerNodeValue1 , index , tmpVar ) $F7341 ( instructions , ReilHelpers , baseOffset , dw , tmpVar , dWordBitMask , address ) $F7348 ( address , registerNodeValue1 ) } \n"}, {"code": "public $F6969 loadClass ( String name ) throws ClassNotFoundException $F107831 ( Class , name ) "}, {"code": "public void waitForOperations $F72 { \n\toperator . waitForOperations ( ) ; \n\t} \n"}, {"code": "private static int byteCompaction ( int mode , $F2027 codewords , int codeIndex , StringBuilder result ) { \n\tif ( mode == BYTE_COMPACTION_MODE_LATCH ) { \n\t\tint count = NUM00 ; \n\t\tlong value = NUM00 ; \n\t\t$F11577 ( decodedData ) $F11844 ( byteCompactedCodewords ) boolean end = _BOOL ; \n\t\tint nextCode = codewords [ codeIndex ++ ] ; \n\t\twhile ( ( codeIndex < codewords [ NUM00 ] ) && ! end ) { \n\t\t\tbyteCompactedCodewords [ count ++ ] = nextCode ; \n\t\t\tvalue = NUM00 * value + nextCode ; \n\t\t\tnextCode = codewords [ codeIndex ++ ] ; \n\t\t\tif $F62764 ( nextCode , TEXT_COMPACTION_MODE_LATCH , BYTE_COMPACTION_MODE_LATCH , NUMERIC_COMPACTION_MODE_LATCH , BYTE_COMPACTION_MODE_LATCH_6 , BEGIN_MACRO_PDF417_CONTROL_BLOCK , BEGIN_MACRO_PDF417_OPTIONAL_FIELD , MACRO_PDF417_TERMINATOR ) { \n\t\t\t\tcodeIndex -- ; \n\t\t\t\tend = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( ( count % NUM00 == NUM00 ) && ( count > NUM00 ) ) { \n\t\t\t\t\tfor ( $F809 ( j ) ) { \n\t\t\t\t\t\tdecodedData [ NUM00 - j ] = ( char ) ( value % NUM00 ) ; \n\t\t\t\t\t\tvalue >>= NUM00 ; \n\t\t\t\t\t\t} \n\t\t\t\t\tresult . append ( decodedData ) ; \n\t\t\t\t\tcount = NUM00 ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tif ( codeIndex == codewords [ NUM00 ] && nextCode < TEXT_COMPACTION_MODE_LATCH ) $F52339 ( byteCompactedCodewords , count , nextCode ) for ( $F119 ( i , count ) ) { \n\t\t\t$F3356 ( result , byteCompactedCodewords , i ) } \n\t\t} \n\telse if ( mode == BYTE_COMPACTION_MODE_LATCH_6 ) { \n\t\tint count = NUM00 ; \n\t\tlong value = NUM00 ; \n\t\tboolean end = _BOOL ; \n\t\twhile $F38554 ( codeIndex , codewords , end ) { \n\t\t\tint code = codewords [ codeIndex ++ ] ; \n\t\t\tif ( code < TEXT_COMPACTION_MODE_LATCH ) { \n\t\t\t\tcount ++ ; \n\t\t\t\tvalue = NUM00 * value + code ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif $F62764 ( code , TEXT_COMPACTION_MODE_LATCH , BYTE_COMPACTION_MODE_LATCH , NUMERIC_COMPACTION_MODE_LATCH , BYTE_COMPACTION_MODE_LATCH_6 , BEGIN_MACRO_PDF417_CONTROL_BLOCK , BEGIN_MACRO_PDF417_OPTIONAL_FIELD , MACRO_PDF417_TERMINATOR ) { \n\t\t\t\t\tcodeIndex -- ; \n\t\t\t\t\tend = _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( ( count % NUM00 == NUM00 ) && ( count > NUM00 ) ) { \n\t\t\t\t$F11577 ( decodedData ) for ( $F809 ( j ) ) { \n\t\t\t\t\tdecodedData [ NUM00 - j ] = $F27723 ( value ) ; \n\t\t\t\t\tvalue >>= NUM00 ; \n\t\t\t\t\t} \n\t\t\t\tresult . append ( decodedData ) ; \n\t\t\t\tcount = NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn codeIndex ; \n\t} \n"}, {"code": "protected boolean isAllTestComponentsInTarget ( Geometry testGeom ) { \n\tList coords = ComponentCoordinateExtracter . getCoordinates ( testGeom ) ; \n\tfor ( $F2774 ( i , coords ) ) { \n\t\tCoordinate p = $F131847 ( i ) ; \n\t\tint loc = targetPointLocator . locate ( p ) ; \n\t\tif ( loc == Location . EXTERIOR ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private Object createInner ( SimpleObject post , RequestContext context ) throws ResponseException { \n\ttry { \n\t\tString xml = completeXform ( convertUuidsToIds ( post ) ) ; \n\t\tFile file = File . createTempFile ( NUM00 , null ) ; \n\t\tprocessor . processXForm ( xml , file . getAbsolutePath ( ) , _BOOL , context . getRequest ( ) ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tthrow new GenericRestException ( NUM00 , e ) ; \n\t\t} \n\tcatch ( ResponseException e ) { \n\t\tthrow e ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new ConversionException ( NUM00 , e ) ; \n\t\t} \n\tEncounter encounter = guessEncounterFromXformSubmission ( post ) ; \n\t$F1933 ( encounter , post ) SimpleObject returnJson = new SimpleObject $F72 ; \n\tEncounterResource . populateJsonProperties ( encounter , returnJson ) ; \n\treturn returnJson ; \n\t} \n"}, {"code": "public Endpoint ( URI endpointUrl , SecurityMode ... modes ) { \n\tif ( modes == null || endpointUrl == null ) $F824 for ( SecurityMode m : modes ) { \n\t\t$F19273 ( m ) $F26525 ( hash , m ) } \n\t$F182783 ( this , endpointUrl ) this . modes = modes ; \n\tthis . endpointConfiguration = EndpointConfiguration . defaults ( ) ; \n\t$F26525 ( hash , endpointUrl ) } \n"}, {"code": "protected Value parseValue $F72 throws IOException , RDFParseException , RDFHandlerException { \n\tint c = peekCodePoint ( ) ; \n\tif ( c == NUM00 ) $F2905 ( parseURI ) else if ( c == NUM00 || TurtleUtil . isPrefixStartChar ( c ) ) $F2905 ( parseQNameOrBoolean ) else if ( c == NUM00 ) $F2905 ( parseNodeID ) else if $F37111 ( c ) $F2905 ( parseQuotedLiteral ) else if ( ASCIIUtil . isNumber ( c ) || c == NUM00 || c == NUM00 || c == NUM00 ) $F2905 ( parseNumber ) else if ( c == - NUM00 ) { \n\t\tthrowEOFException ( ) ; \n\t\t$F1274 } \n\telse { \n\t\treportFatalError ( NUM00 + new String ( Character . toChars ( c ) ) + NUM00 ) ; \n\t\t$F1274 } \n\t} \n"}, {"code": "public TimeSeriesCollection $F72 { \n\tthis ( null , TimeZone . getDefault ( ) ) ; \n\t} \n"}, {"code": "private static boolean isOptimizableForDescendantIterator ( Compiler compiler , int stepOpCodePos , int stepIndex ) throws $F1872 { \n\tint stepType ; \n\tint stepCount = NUM00 ; \n\tboolean foundDorDS = _BOOL ; \n\tboolean foundSelf = _BOOL ; \n\tboolean foundDS = _BOOL ; \n\tint nodeTestType = OpCodes . NODETYPE_NODE ; \n\twhile ( OpCodes . ENDOP != ( stepType = compiler . getOp ( stepOpCodePos ) ) ) { \n\t\tif ( nodeTestType != OpCodes . NODETYPE_NODE && nodeTestType != OpCodes . NODETYPE_ROOT ) return _BOOL ; \n\t\tstepCount ++ ; \n\t\t$F19679 ( stepCount , _BOOL ) boolean mightBeProximate = mightBeProximate ( compiler , stepOpCodePos , stepType ) ; \n\t\tif ( mightBeProximate ) return _BOOL ; \n\t\tswitch ( stepType ) { \n\t\t\tcase OpCodes . FROM_FOLLOWING : case OpCodes . FROM_FOLLOWING_SIBLINGS : case OpCodes . FROM_PRECEDING : case OpCodes . FROM_PRECEDING_SIBLINGS : case OpCodes . FROM_PARENT : case OpCodes . OP_VARIABLE : case OpCodes . OP_EXTFUNCTION : case OpCodes . OP_FUNCTION : case OpCodes . OP_GROUP : case OpCodes . FROM_NAMESPACE : case OpCodes . FROM_ANCESTORS : case OpCodes . FROM_ANCESTORS_OR_SELF : case OpCodes . FROM_ATTRIBUTES : case OpCodes . MATCH_ATTRIBUTE : case OpCodes . MATCH_ANY_ANCESTOR : case OpCodes . MATCH_IMMEDIATE_ANCESTOR : return _BOOL ; \n\t\t\tcase OpCodes . FROM_ROOT : if ( NUM00 != stepCount ) return _BOOL ; \n\t\t\t$F597 case OpCodes . FROM_CHILDREN : if ( ! foundDS && ! ( foundDorDS && foundSelf ) ) return _BOOL ; \n\t\t\t$F597 case OpCodes . FROM_DESCENDANTS_OR_SELF : foundDS = _BOOL ; \n\t\t\tcase OpCodes . FROM_DESCENDANTS : if ( NUM00 == stepCount ) return _BOOL ; \n\t\t\tfoundDorDS = _BOOL ; \n\t\t\t$F597 case OpCodes . FROM_SELF : if ( NUM00 != stepCount ) return _BOOL ; \n\t\t\tfoundSelf = _BOOL ; \n\t\t\t$F597 $F1267 throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NULL_ERROR_HANDLER , $F19685 ( Integer , stepType ) ) ) ; \n\t\t\t} \n\t\tnodeTestType = compiler . getStepTestType ( stepOpCodePos ) ; \n\t\tint nextStepOpCodePos = compiler . getNextStepPos ( stepOpCodePos ) ; \n\t\t$F7995 ( nextStepOpCodePos ) if ( OpCodes . ENDOP != compiler . getOp ( nextStepOpCodePos ) ) { \n\t\t\tif ( compiler . countPredicates ( stepOpCodePos ) > NUM00 ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\tstepOpCodePos = nextStepOpCodePos ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static $F11685 $F57915 of ( E e1 , E e2 , E e3 ) { \n\t$F57915 $F204 ( list ) ; \n\tlist . add ( e1 ) ; \n\tlist . add ( e2 ) ; \n\tlist . add ( e3 ) ; \n\treturn list ; \n\t} \n"}, {"code": "public int alloc ( int size ) { \n\tint index = n ; \n\tint len = array . length ; \n\tif ( n + size >= len ) { \n\t\t$F112445 ( aux , len , blockSize ) $F135 ( System , array , aux , len ) array = aux ; \n\t\t} \n\tn += size ; \n\treturn index ; \n\t} \n"}, {"code": "$F1 public void addAttribute ( String name , float value ) { \n\t$F4074 ( str , Float , value ) $F212530 ( str ) current . setAttribute ( name , str ) ; \n\t} \n"}, {"code": "@ RequestMapping ( $F7426 ( RequestMethod ) ) $F4586 public JsonResponse createDirectory ( $F35231 final String containerId , $F35231 final String applicationName , @ RequestParam ( NUM00 ) String path ) throws ServiceException , CheckException , IOException { \n\tif $F585 ( logger ) { \n\t\t$F586 ( logger , containerId ) $F586 ( logger , applicationName ) $F586 ( logger , path ) } \n\tfileService . createDirectory ( applicationName , containerId , path ) ; \n\treturn new HttpOk $F72 ; \n\t} \n"}, {"code": "public void fill_ellipse_arr ( PlaEllipse [ ] p_ellipse_arr , Graphics p_g , Color p_color , double p_translucency_factor ) { \n\t$F8249 ( p_color ) if $F51363 ( p_ellipse_arr ) $F665 GeneralPath draw_path = new GeneralPath ( GeneralPath . WIND_EVEN_ODD ) ; \n\tfor ( PlaEllipse curr_ellipse : p_ellipse_arr ) { \n\t\tPoint2D center = coordinate_transform . board_to_screen ( curr_ellipse . center ) ; \n\t\tdouble bigger_radius = coordinate_transform . board_to_screen ( curr_ellipse . bigger_radius ) ; \n\t\tif ( ! point_near_rectangle ( center . getX ( ) , center . getY ( ) , ( Rectangle ) p_g . getClip ( ) , bigger_radius ) ) $F1448 double smaller_radius = coordinate_transform . board_to_screen ( curr_ellipse . smaller_radius ) ; \n\t\tEllipse2D draw_ellipse = new $F35359 ( center . getX ( ) - bigger_radius , center . getY ( ) - smaller_radius , NUM00 * bigger_radius , NUM00 * smaller_radius ) ; \n\t\tdouble rotation = coordinate_transform . board_to_screen_angle ( curr_ellipse . rotation ) ; \n\t\t$F34721 ( affine_transform ) affine_transform . rotate ( $F175257 ( rotation , center ) ) ; \n\t\tShape rotated_ellipse = affine_transform . createTransformedShape ( draw_ellipse ) ; \n\t\tdraw_path . append ( rotated_ellipse , _BOOL ) ; \n\t\t} \n\t$F20230 ( g2 , p_g ) g2 . setColor ( p_color ) ; \n\tset_translucency ( g2 , p_translucency_factor ) ; \n\t$F34716 ( g2 , RenderingHints ) g2 . fill ( draw_path ) ; \n\t} \n"}, {"code": "$F1 public void zoomDomainAxes ( double factor , PlotRenderingInfo state , Point2D source ) $F845 "}, {"code": "private void refreshChallengeCounts $F72 { \n\tmDueChallengeCounts = mDueChallengeLogic . getDueChallengeCounts ( mCategories ) ; \n\t} \n"}, {"code": "public Identity ( final int dim ) { \n\tthis ( dim , EnumSet . noneOf ( Address . Flags . class ) ) ; \n\t} \n"}, {"code": "private ImageData awtToSwt ( final BufferedImage bufferedImage , final int width , final int height ) { \n\tfinal $F2027 awtPixels = new int [ width * height ] ; \n\tfinal ImageData swtImageData = new ImageData ( width , height , NUM00 , PALETTE_DATA ) ; \n\tswtImageData . transparentPixel = TRANSPARENT_COLOR ; \n\tfinal int step = swtImageData . depth / NUM00 ; \n\tfinal $F96 data = swtImageData . data ; \n\tbufferedImage . getRGB ( NUM00 , NUM00 , width , height , awtPixels , NUM00 , width ) ; \n\tfor ( $F119 ( i , height ) ) { \n\t\tint idx = ( NUM00 + i ) * swtImageData . bytesPerLine + NUM00 * step ; \n\t\tfor ( $F119 ( j , width ) ) { \n\t\t\tfinal int rgb = awtPixels [ j + i * width ] ; \n\t\t\tfor ( int k = swtImageData . depth - NUM00 ; \n\t\t\tk >= NUM00 ; \n\t\t\tk -= NUM00 ) { \n\t\t\t\tdata [ idx ++ ] = ( byte ) ( rgb > > k & NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn swtImageData ; \n\t} \n"}, {"code": "public static boolean isUnlimitedStrengthPolicyAvailable $F72 { \n\ttry { \n\t\treturn Cipher . getMaxAllowedKeyLength ( NUM00 ) >= NUM00 ; \n\t\t} \n\tcatch ( final NoSuchAlgorithmException e ) $F302 ( e ) return _BOOL ; \n\t} \n"}, {"code": "public long rsslim $F72 $F12907 ( Long , fields ) "}, {"code": "public void addTotals ( Info_Column [ ] layout ) { \n\taddTotals ( ( ColumnInfo [ ] ) layout ) ; \n\t} \n"}, {"code": "private void fillStackTrace ( StringBuffer buffer , $F11340 elements ) { \n\tfor ( $F1139 ( index , elements ) ) { \n\t\t$F6939 ( buffer , elements , index ) $F84 ( buffer ) } \n\t} \n"}, {"code": "public static boolean isFileTypeSupported ( int fileType ) { \n\tList providers = getMidiFileWriters ( ) ; \n\tfor ( $F2277 ( i , providers ) ) { \n\t\tMidiFileWriter writer = ( MidiFileWriter ) providers . get ( i ) ; \n\t\tif ( writer . isFileTypeSupported ( fileType ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void makeImmutable $F72 { \n\t$F4246 ( isMutable , _BOOL ) } \n"}, {"code": "public static double uniform $F72 $F39816 ( random ) "}, {"code": "public void modify ( SSOToken token , String objName , ModificationItem [ ] mods ) throws $F16995 { \n\tif ( $F29136 ( objName ) || ( mods == null ) || $F9634 ( mods ) ) $F11813 $F7876 ( objKey , objName ) String filepath = null ; \n\tmRWLock . readRequest ( ) ; \n\ttry { \n\t\tfilepath = mNameMap . getProperty ( objKey ) ; \n\t\tif ( filepath == null ) { \n\t\t\tString errmsg = NUM00 + objName + NUM00 ; \n\t\t\tmDebug . error ( errmsg ) ; \n\t\t\tthrow new ServiceNotFoundException ( errmsg ) ; \n\t\t\t} \n\t\t} \n\tfinally { \n\t\tmRWLock . readDone ( ) ; \n\t\t} \n\tmRWLock . writeRequest ( ) ; \n\ttry { \n\t\tfilepath = mNameMap . getProperty ( objKey ) ; \n\t\tif ( filepath == null ) { \n\t\t\tString errmsg = NUM00 + objName + NUM00 ; \n\t\t\tmDebug . error ( errmsg ) ; \n\t\t\tthrow new ServiceNotFoundException ( errmsg ) ; \n\t\t\t} \n\t\t$F1705 ( filehandle , filepath ) if $F48790 ( filehandle ) { \n\t\t\tString errmsg = NUM00 + objName + NUM00 ; \n\t\t\tmDebug . error ( errmsg ) ; \n\t\t\tthrow new ServiceNotFoundException ( errmsg ) ; \n\t\t\t} \n\t\tProperties props = loadProperties ( filehandle , objName ) ; \n\t\tboolean hasSunXmlKeyValue = ( props . getProperty ( SMSEntry . ATTR_XML_KEYVAL ) == null ) ? _BOOL : _BOOL ; \n\t\tfor ( $F1139 ( i , mods ) ) { \n\t\t\tmodifyValues ( objName , mods [ i ] , props ) ; \n\t\t\t} \n\t\tsaveProperties ( props , filehandle , objName ) ; \n\t\tif ( ! hasSunXmlKeyValue ) { \n\t\t\thasSunXmlKeyValue = ( props . getProperty ( SMSEntry . ATTR_XML_KEYVAL ) == null ) ? _BOOL : _BOOL ; \n\t\t\t} \n\t\tif ( hasSunXmlKeyValue ) { \n\t\t\tdeleteSunXmlKeyValFiles ( filehandle . getParentFile ( ) ) ; \n\t\t\tSet xmlKeyVals = toValSet ( SMSEntry . ATTR_XML_KEYVAL , props . getProperty ( SMSEntry . ATTR_XML_KEYVAL ) ) ; \n\t\t\tcreateSunXmlKeyValFiles ( filehandle . getParentFile ( ) , xmlKeyVals ) ; \n\t\t\t} \n\t\t} \n\tfinally { \n\t\tmRWLock . writeDone ( ) ; \n\t\t} \n\t} \n"}, {"code": "private AMSetupDSConfig $F72 { \n\tMap map = ServicesDefaultValues . getDefaultValues ( ) ; \n\tdsManager = ( String ) map . get ( SetupConstants . CONFIG_VAR_DS_MGR_DN ) ; \n\tsuffix = ( String ) map . get ( SetupConstants . CONFIG_VAR_ROOT_SUFFIX ) ; \n\tdsHostName = ( String ) map . get ( SetupConstants . CONFIG_VAR_DIRECTORY_SERVER_HOST ) ; \n\tdsPort = ( String ) map . get ( SetupConstants . CONFIG_VAR_DIRECTORY_SERVER_PORT ) ; \n\tdsAdminPwd = ( String ) map . get ( SetupConstants . CONFIG_VAR_DS_MGR_PWD ) ; \n\tbasedir = ( String ) map . get ( SetupConstants . CONFIG_VAR_BASE_DIR ) ; \n\tdeployuri = ( String ) map . get ( SetupConstants . CONFIG_VAR_SERVER_URI ) ; \n\t} \n"}, {"code": "private boolean compareAndIncrementWorkerCount ( int expect ) { \n\treturn $F26080 ( ctl , expect ) ; \n\t} \n"}, {"code": "private void makeItems ( int fingerPosition , $F183286 viewList ) { \n\tif $F6389 ( fingerPosition , viewList ) $F932 for ( $F2277 ( i , viewList ) ) { \n\t\tint translationY = Math . min ( Math . max ( Math . abs ( fingerPosition - i ) * intervalHeight , NUM00 ) , maxTranslationHeight ) ; \n\t\t$F13395 ( updateItemHeightAnimator , viewList , i , translationY ) } \n\t} \n"}, {"code": "private boolean pathIsWindows ( String path ) { \n\tif $F22 ( path ) { \n\t\treturn ( $F22878 ( Character , path ) && $F4431 ( path ) ) || $F418 ( path ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "Object processCHAR $F40351 ( handler , uri , name , rawName , value , owner ) throws $F2253 { \n\tif ( getSupportsAVT ( ) ) { \n\t\ttry { \n\t\t\tAVT avt = new AVT ( handler , uri , name , rawName , value , owner ) ; \n\t\t\tif ( $F40353 ( avt ) && $F35625 ( value ) ) { \n\t\t\t\thandleError ( handler , XSLTErrorResources . INVALID_TCHAR , $F40356 ( name , value ) , null ) ; \n\t\t\t\t$F1274 } \n\t\t\treturn avt ; \n\t\t\t} \n\t\t$F2262 ( te ) } \n\telse { \n\t\tif $F35625 ( value ) { \n\t\t\thandleError ( handler , XSLTErrorResources . INVALID_TCHAR , $F40356 ( name , value ) , null ) ; \n\t\t\t$F1274 } \n\t\treturn new Character $F49313 ( value ) ; \n\t\t} \n\t} \n"}, {"code": "public static Element addChildElementValue ( Element element , String childElementName , String childElementValue , Document document ) { \n\tElement newElement = addChildElement ( element , childElementName , document ) ; \n\t$F5849 ( newElement , document , childElementValue ) return newElement ; \n\t} \n"}, {"code": "public boolean isSegmentBalanced $F72 { \n\tif ( $F10470 ( m_lines ) || m_doc . isMultiCurrency ( ) ) return _BOOL ; \n\tMAcctSchemaElement [ ] elements = m_acctSchema . getAcctSchemaElements ( ) ; \n\tfor ( $F1139 ( i , elements ) ) { \n\t\tMAcctSchemaElement ase = elements [ i ] ; \n\t\tif ( ase . isBalanced ( ) && ! isSegmentBalanced ( ase . getElementType ( ) ) ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "Attributes parseAttributes $F72 throws JasperException { \n\tAttributesImpl attrs = new AttributesImpl $F72 ; \n\treader . skipSpaces ( ) ; \n\twhile ( parseAttribute ( attrs ) ) reader . skipSpaces ( ) ; \n\treturn attrs ; \n\t} \n"}, {"code": "public static $F96 readBinaryFile ( File sourceFile ) { \n\t$F5475 ( result ) try { \n\t\tBufferedInputStream input ; \n\t\t$F20278 ( input , sourceFile ) $F89380 ( num , input ) $F1325 ( result , num ) $F23504 ( input , result , num ) $F59 ( input ) } \n\tcatch ( Exception e ) { \n\t\t$F301 ( e ) result = null ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F1431 public void test_streamAPI $F72 { \n\tfinal List < IBindingSet > expectedSolutions = new ArrayList < IBindingSet > $F72 ; \n\t{ \n\t\t$F73071 ( expected ) expected . set ( Var . var ( NUM00 ) , new Constant $F257328 ( termId ) ) ; \n\t\texpectedSolutions . add ( expected ) ; \n\t\t} \n\t{ \n\t\t$F73071 ( expected ) expected . set ( Var . var ( NUM00 ) , new Constant $F257328 ( termId ) ) ; \n\t\texpected . set ( Var . var ( NUM00 ) , new Constant $F257328 ( blobIV ) ) ; \n\t\texpectedSolutions . add ( expected ) ; \n\t\t} \n\tdoEncodeDecodeTest ( expectedSolutions ) ; \n\t} \n"}, {"code": "public void addTerm ( SplitCondition condition ) $F207 ( terms , condition ) "}, {"code": "$F1 protected void thresholdReached $F72 throws IOException { \n\tif ( prefix != null ) { \n\t\toutputFile = File . createTempFile ( prefix , suffix , directory ) ; \n\t\t} \n\t$F4649 ( fos , outputFile ) memoryOutputStream . writeTo ( fos ) ; \n\tcurrentOutputStream = fos ; \n\tmemoryOutputStream = null ; \n\t} \n"}, {"code": "public void removeIndexInterval ( int index0 , int index1 ) { \n\t$F17565 ( rmMinIndex , Math , index0 , index1 ) $F17432 ( rmMaxIndex , Math , index0 , index1 ) int gapLength = ( rmMaxIndex - rmMinIndex ) + NUM00 ; \n\tfor ( int i = rmMinIndex ; \n\ti <= maxIndex ; \n\ti ++ ) { \n\t\tsetState ( i , value . get ( i + gapLength ) ) ; \n\t\t} \n\tint leadIndex = this . leadIndex ; \n\tif ( leadIndex == NUM00 && rmMinIndex == NUM00 ) $F845 else if ( leadIndex > rmMaxIndex ) { \n\t\tleadIndex = this . leadIndex - gapLength ; \n\t\t} \n\telse if ( leadIndex >= rmMinIndex ) { \n\t\tleadIndex = rmMinIndex - NUM00 ; \n\t\t} \n\tint anchorIndex = this . anchorIndex ; \n\tif ( anchorIndex == NUM00 && rmMinIndex == NUM00 ) $F845 else if ( anchorIndex > rmMaxIndex ) { \n\t\tanchorIndex = this . anchorIndex - gapLength ; \n\t\t} \n\telse if ( anchorIndex >= rmMinIndex ) { \n\t\tanchorIndex = rmMinIndex - NUM00 ; \n\t\t} \n\tif ( leadIndex != this . leadIndex || anchorIndex != this . anchorIndex ) { \n\t\tupdateLeadAnchorIndices ( anchorIndex , leadIndex ) ; \n\t\t} \n\tfireValueChanged ( ) ; \n\t} \n"}, {"code": "public void rebuildEventList ( boolean resetSelected ) { \n\t$F432107 ( logger , Level ) allEvents = null ; \n\tactiveEvents = null ; \n\thideDetails ( ) ; \n\tinitInterface ( getActiveEvents ( ) , resetSelected ) ; \n\thighlightCurrentEvent ( currentTime ) ; \n\tfirePropertyChange ( ActiveEventsProperty , null , getActiveEvents ( ) ) ; \n\t} \n"}, {"code": "public DiskStoreFactory createDiskStoreFactory $F72 { \n\treturn new DiskStoreFactoryImpl ( this ) ; \n\t} \n"}, {"code": "public static boolean deleteDirectorySubdirectories ( String rootDirectory ) { \n\tif ( ( rootDirectory == null ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tboolean didSuccessfullyDeleteAllDirectories = _BOOL ; \n\ttry { \n\t\t$F11300 files = getListOfFilesInADirectory ( rootDirectory ) ; \n\t\tfor ( File file : files ) { \n\t\t\tif $F3444 ( file ) { \n\t\t\t\tboolean deleteSuccess = deleteDirectoryAndContents ( file ) ; \n\t\t\t\tif ( ! deleteSuccess ) { \n\t\t\t\t\t$F34412 ( logger , file ) didSuccessfullyDeleteAllDirectories = _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F246959 ( logger , e , System , StackTrace ) return _BOOL ; \n\t\t} \n\treturn didSuccessfullyDeleteAllDirectories ; \n\t} \n"}, {"code": "public void put $F24576 ( buffer , offset , count ) { \n\tif ( count > ( bytes . length - this . contentLength ) ) $F825 System . arraycopy ( buffer , offset , bytes , this . contentLength , count ) ; \n\tthis . contentLength += count ; \n\t} \n"}, {"code": "private void markReserved ( int ropReg , int category ) { \n\treservedRopRegs . set ( ropReg , ropReg + category , _BOOL ) ; \n\t} \n"}, {"code": "public static void registerDefaultResolvers $F72 { \n\tsynchronized ( resolverList ) { \n\t\tresolverList . add ( new ResourceResolver ( new ResolverFragment $F72 ) ) ; \n\t\tresolverList . add ( new ResourceResolver ( new ResolverLocalFilesystem $F72 ) ) ; \n\t\tresolverList . add ( new ResourceResolver ( new ResolverXPointer $F72 ) ) ; \n\t\tresolverList . add ( new ResourceResolver ( new ResolverDirectHTTP $F72 ) ) ; \n\t\t} \n\t} \n"}, {"code": "private boolean processAuthenticationResponse ( final HttpMethod method ) { \n\tLOG . trace ( NUM00 + NUM00 ) ; \n\ttry { \n\t\tswitch ( method . getStatusCode ( ) ) { \n\t\t\tcase HttpStatus . SC_UNAUTHORIZED : return processWWWAuthChallenge ( method ) ; \n\t\t\tcase HttpStatus . SC_PROXY_AUTHENTICATION_REQUIRED : return processProxyAuthChallenge ( method ) ; \n\t\t\t$F1267 return _BOOL ; \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) { \n\t\tif $F6002 ( LOG ) $F14108 ( LOG , e ) return _BOOL ; \n\t\t} \n\t} \n"}, {"code": "private void release ( ByteArray byteArray ) { \n\tsynchronized ( syncRoot ) { \n\t\tif $F29395 ( availableByteArrays , maxAvailableArraysCount ) $F932 $F2201 ( availableByteArrays , byteArray ) } \n\t} \n"}, {"code": "public Pipeline $F72 $F845 "}, {"code": "$F6802 ( esd , connectionAllowed ) "}, {"code": "$F1 public void drawRangeMarker ( Graphics2D g2 , CategoryPlot plot , ValueAxis axis , Marker marker , Rectangle2D dataArea ) { \n\tif ( marker instanceof ValueMarker ) { \n\t\tValueMarker vm = ( ValueMarker ) marker ; \n\t\t$F10704 ( value , vm ) $F10706 ( range , axis ) $F10707 ( range , value ) final Composite savedComposite = g2 . getComposite ( ) ; \n\t\tg2 . setComposite ( AlphaComposite . getInstance ( AlphaComposite . SRC_OVER , marker . getAlpha ( ) ) ) ; \n\t\t$F10709 ( orientation , plot ) $F69926 ( v , axis , value , dataArea , plot ) Line2D line = null ; \n\t\tif ( orientation == PlotOrientation . HORIZONTAL ) $F75721 ( line , v , dataArea ) else if ( orientation == PlotOrientation . VERTICAL ) $F75728 ( line , dataArea , v ) else $F10763 g2 . setPaint ( marker . getPaint ( ) ) ; \n\t\tg2 . setStroke ( marker . getStroke ( ) ) ; \n\t\tg2 . draw ( line ) ; \n\t\t$F10771 ( label , marker ) RectangleAnchor anchor = marker . getLabelAnchor ( ) ; \n\t\tif ( label != null ) { \n\t\t\tFont labelFont = marker . getLabelFont ( ) ; \n\t\t\tg2 . setFont ( labelFont ) ; \n\t\t\tPoint2D coordinates = calculateRangeMarkerTextAnchorPoint ( g2 , orientation , dataArea , line . getBounds2D ( ) , marker . getLabelOffset ( ) , LengthAdjustmentType . EXPAND , anchor ) ; \n\t\t\tRectangle2D rect = TextUtils . calcAlignedStringBounds ( $F10784 ( label , g2 , coordinates , marker ) ) ; \n\t\t\tg2 . setPaint ( marker . getLabelBackgroundColor ( ) ) ; \n\t\t\tg2 . fill ( rect ) ; \n\t\t\tg2 . setPaint ( marker . getLabelPaint ( ) ) ; \n\t\t\tTextUtils . drawAlignedString ( $F10784 ( label , g2 , coordinates , marker ) ) ; \n\t\t\t} \n\t\tg2 . setComposite ( savedComposite ) ; \n\t\t} \n\telse if ( marker instanceof IntervalMarker ) { \n\t\tIntervalMarker im = ( IntervalMarker ) marker ; \n\t\tdouble start = im . getStartValue ( ) ; \n\t\tdouble end = im . getEndValue ( ) ; \n\t\t$F10706 ( range , axis ) if ( ! ( range . intersects ( start , end ) ) ) $F932 final Composite savedComposite = g2 . getComposite ( ) ; \n\t\tg2 . setComposite ( AlphaComposite . getInstance ( AlphaComposite . SRC_OVER , marker . getAlpha ( ) ) ) ; \n\t\t$F69926 ( start2d , axis , start , dataArea , plot ) $F69926 ( end2d , axis , end , dataArea , plot ) $F59772 ( low , Math , start2d , end2d ) $F7560 ( high , Math , start2d , end2d ) $F10709 ( orientation , plot ) Rectangle2D rect = null ; \n\t\tif ( orientation == PlotOrientation . HORIZONTAL ) { \n\t\t\tlow = Math . max ( low , dataArea . getMinX ( ) ) ; \n\t\t\thigh = Math . min ( high , dataArea . getMaxX ( ) ) ; \n\t\t\trect = new $F1634 ( low , dataArea . getMinY ( ) , high - low , dataArea . getHeight ( ) ) ; \n\t\t\t} \n\t\telse if ( orientation == PlotOrientation . VERTICAL ) { \n\t\t\tlow = Math . max ( low , dataArea . getMinY ( ) ) ; \n\t\t\thigh = Math . min ( high , dataArea . getMaxY ( ) ) ; \n\t\t\trect = new $F1634 ( dataArea . getMinX ( ) , low , dataArea . getWidth ( ) , high - low ) ; \n\t\t\t} \n\t\tPaint p = marker . getPaint ( ) ; \n\t\tif ( p instanceof GradientPaint ) { \n\t\t\tGradientPaint gp = ( GradientPaint ) p ; \n\t\t\tGradientPaintTransformer t = im . getGradientPaintTransformer ( ) ; \n\t\t\tif ( t != null ) { \n\t\t\t\tgp = t . transform ( gp , rect ) ; \n\t\t\t\t} \n\t\t\tg2 . setPaint ( gp ) ; \n\t\t\t} \n\t\telse $F158292 ( g2 , p ) g2 . fill ( rect ) ; \n\t\tif ( im . getOutlinePaint ( ) != null && im . getOutlineStroke ( ) != null ) { \n\t\t\tif ( orientation == PlotOrientation . VERTICAL ) { \n\t\t\t\tLine2D line = new $F69931 $F72 ; \n\t\t\t\t$F69942 ( x0 , dataArea ) $F69944 ( x1 , dataArea ) g2 . setPaint ( im . getOutlinePaint ( ) ) ; \n\t\t\t\tg2 . setStroke ( im . getOutlineStroke ( ) ) ; \n\t\t\t\tif $F105 ( range , start ) { \n\t\t\t\t\tline . setLine ( x0 , start2d , x1 , start2d ) ; \n\t\t\t\t\tg2 . draw ( line ) ; \n\t\t\t\t\t} \n\t\t\t\tif $F105 ( range , end ) { \n\t\t\t\t\tline . setLine ( x0 , end2d , x1 , end2d ) ; \n\t\t\t\t\tg2 . draw ( line ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tLine2D line = new $F69931 $F72 ; \n\t\t\t\t$F69930 ( y0 , dataArea ) $F69928 ( y1 , dataArea ) g2 . setPaint ( im . getOutlinePaint ( ) ) ; \n\t\t\t\tg2 . setStroke ( im . getOutlineStroke ( ) ) ; \n\t\t\t\tif $F105 ( range , start ) { \n\t\t\t\t\tline . setLine ( start2d , y0 , start2d , y1 ) ; \n\t\t\t\t\tg2 . draw ( line ) ; \n\t\t\t\t\t} \n\t\t\t\tif $F105 ( range , end ) { \n\t\t\t\t\tline . setLine ( end2d , y0 , end2d , y1 ) ; \n\t\t\t\t\tg2 . draw ( line ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t$F10771 ( label , marker ) RectangleAnchor anchor = marker . getLabelAnchor ( ) ; \n\t\tif ( label != null ) { \n\t\t\tFont labelFont = marker . getLabelFont ( ) ; \n\t\t\tg2 . setFont ( labelFont ) ; \n\t\t\tPoint2D coords = calculateRangeMarkerTextAnchorPoint ( g2 , orientation , dataArea , rect , marker . getLabelOffset ( ) , marker . getLabelOffsetType ( ) , anchor ) ; \n\t\t\tRectangle2D r = TextUtils . calcAlignedStringBounds ( $F10784 ( label , g2 , coords , marker ) ) ; \n\t\t\tg2 . setPaint ( marker . getLabelBackgroundColor ( ) ) ; \n\t\t\tg2 . fill ( r ) ; \n\t\t\tg2 . setPaint ( marker . getLabelPaint ( ) ) ; \n\t\t\tTextUtilities . drawAlignedString ( $F10784 ( label , g2 , coords , marker ) ) ; \n\t\t\t} \n\t\tg2 . setComposite ( savedComposite ) ; \n\t\t} \n\t} \n"}, {"code": "private void init $F72 { \n\t$F9404 ( acceptableMethods ) acceptableMethods . add ( new NoAuthenticationRequiredMethod $F72 ) ; \n\tacceptableMethods . add ( new GssApiMethod $F72 ) ; \n\tacceptableMethods . add ( new UsernamePasswordMethod $F72 ) ; \n\t} \n"}, {"code": "private boolean lockOrder ( Order order ) { \n\t$F790 ( lock ) try { \n\t\treturn activeOrders . add ( order . getId ( ) ) ; \n\t\t} \n\t$F796 ( lock ) } \n"}, {"code": "public void put ( Buffer buffer ) { \n\tif ( buffer . getLength ( ) <= NUM00 ) $F932 $F96 currentRtpPacketData = ( ( $F96 ) buffer . getData ( ) ) ; \n\tH264RtpHeaders h264RtpHeaders = new H264RtpHeaders ( currentRtpPacketData ) ; \n\tif ( h264RtpHeaders . getFUI_F ( ) ) $F932 if ( reassembledData == null ) { \n\t\ttimestamp = buffer . getTimestamp ( ) ; \n\t\tformat = buffer . getFormat ( ) ; \n\t\tseqNumber = buffer . getSequenceNumber ( ) ; \n\t\treassembledDataNALHeader = h264RtpHeaders . getNALHeader ( ) ; \n\t\treassembledData = new byte [ JavaPacketizer . H264_MAX_RTP_PKTS ] [ H264_FRAME_PACKET_SIZE ] ; \n\t\treassembledDataSize = new int [ JavaPacketizer . H264_MAX_RTP_PKTS ] ; \n\t\treassembledDataHasStart = _BOOL ; \n\t\treassembledDataHasEnd = _BOOL ; \n\t\t} \n\tint posSeq = ( int ) ( buffer . getSequenceNumber ( ) & VIDEO_DECODER_MAX_PAYLOADS_CHUNKS_MASK ) ; \n\tint payloadStartPosition = h264RtpHeaders . getHeaderSize ( ) ; \n\tint payloadLength = buffer . getLength ( ) - h264RtpHeaders . getHeaderSize ( ) ; \n\tif ( h264RtpHeaders . getFUI_TYPE ( ) == H264RtpHeaders . AVC_NALTYPE_FUA ) { \n\t\treassembledDataHasStart |= ( h264RtpHeaders . getFUH_S ( ) ) ; \n\t\treassembledDataHasEnd |= ( h264RtpHeaders . getFUH_E ( ) ) ; \n\t\treassembledDataPosSeqStart = ( ( h264RtpHeaders . getFUH_S ( ) ) ? posSeq : reassembledDataPosSeqStart ) ; \n\t\treassembledDataPosSeqEnd = ( ( h264RtpHeaders . getFUH_E ( ) ) ? posSeq : reassembledDataPosSeqEnd ) ; \n\t\t} \n\treassembledDataSize [ posSeq ] = payloadLength ; \n\treassembledDataFullSize += payloadLength ; \n\tSystem . arraycopy ( currentRtpPacketData , payloadStartPosition , reassembledData [ posSeq ] , NUM00 , payloadLength ) ; \n\tvideoOrientation = buffer . getVideoOrientation ( ) ; \n\t} \n"}, {"code": "public static final void writeStringArrayXml ( $F806 val , String name , XmlSerializer out ) throws $F52182 { \n\t$F18827 ( val , out ) $F18823 ( out ) $F18831 ( name , out ) $F18832 ( N , val ) $F18835 ( out , Integer , N ) for ( $F119 ( i , N ) ) { \n\t\t$F18823 ( out ) out . attribute ( null , NUM00 , val [ i ] ) ; \n\t\t$F18825 ( out ) } \n\t$F18825 ( out ) } \n"}, {"code": "$F45572 ( context , intent , pm , handlers , PackageManager , _BOOL , resolveInfo , filter , Log , TAG ) "}, {"code": "private void unifyUsernameByName ( Map < String , List < LogCommitInfo > > devNameMap ) { \n\tfor ( Entry < String , List < LogCommitInfo > > entry : devNameMap . entrySet ( ) ) { \n\t\t$F3803 $F224232 ( userNames , getUserNamesList , entry ) ; \n\t\tif $F3817 ( userNames ) { \n\t\t\tString newUserName = getNewUserName ( userNames ) ; \n\t\t\tfor ( LogCommitInfo commit : entry . getValue ( ) ) { \n\t\t\t\tcommit . setUserName ( newUserName ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1431 public JdbcData ( Connection connection , String table , boolean buffered ) { \n\tthis . connection = connection ; \n\tthis . table = table ; \n\tsetBuffered ( buffered ) ; \n\ttry $F7429 ( setColumnTypes , getJdbcColumnTypes ) catch ( SQLException e ) $F302 ( e ) } \n"}, {"code": "public void storeStackForException ( Throwable t , int currentStackFrame ) { \n\tif $F15257 ( exceptionStack , t ) { \n\t\t$F65716 ( s , stackPointer ) $F135 ( System , stack , s , stackPointer ) s [ stackPointer ] = currentStackFrame ; \n\t\texceptionStack . put ( t , s ) ; \n\t\t} \n\t} \n"}, {"code": "public SecureELFFormatter $F72 { \n\tString timestampGeneratorClass = lmanager . getProperty ( LogConstants . SECURE_TIMESTAMP_GENERATOR ) ; \n\ttry { \n\t\t$F63290 ( clz , Class , timestampGeneratorClass ) secureTimestampGenerator = ( ITimestampGenerator ) clz . newInstance ( ) ; \n\t\t} \n\tcatch ( ClassNotFoundException cnfe ) $F288472 ( Debug , cnfe ) catch ( InstantiationException ie ) $F288472 ( Debug , ie ) catch ( IllegalAccessException iae ) $F288472 ( Debug , iae ) } \n"}, {"code": "public static $F96 readData ( final URL url ) throws IOException { \n\ttry ( $F35899 ( input , url ) ) $F4915 ( readData , input ) } \n"}, {"code": "public boolean isValidCurrent ( long checkTime ) { \n\tif ( checkTime == NUM00 || ( rDateList == null && rRulesList == null ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tboolean found = _BOOL ; \n\tIterator < RecurrenceRule > rulesIterator = getRecurrenceRuleIterator ( ) ; \n\twhile $F2921 ( rulesIterator ) { \n\t\tRecurrenceRule rule = rulesIterator . next ( ) ; \n\t\tlong currentTime = rule . validCurrent ( getStartTime ( ) , checkTime , getCurrentCount ( ) ) ; \n\t\tcurrentTime = checkDateList ( rDateList , currentTime , checkTime ) ; \n\t\tif ( ( currentTime > NUM00 ) && isValid ( checkTime ) ) { \n\t\t\tfound = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn found ; \n\t} \n"}, {"code": "public static EnergyNetwork initNetwork $F72 { \n\tRandom random = new Random $F30 ( System ) ; \n\t$F8254 ( id , random ) while $F105 ( usedIds , id ) { \n\t\tid = random . nextInt ( ) ; \n\t\t} \n\t; \n\tEnergyNetwork net = new EnergyNetwork $F72 ; \n\tusedIds . add ( id ) ; \n\tnet . networkID = id ; \n\treturn net ; \n\t} \n"}, {"code": "public static String toKilobytes ( long bytes ) { \n\tif ( bytes < NUM00 ) return NUM00 + GENERAL_UNIT_KILOBYTES ; \n\tlong kbytes = bytes / NUM00 ; \n\tif ( ( bytes & NUM00 ) != NUM00 || $F79923 ( bytes ) ) kbytes ++ ; \n\treturn NUMBER_FORMAT0 . format ( kbytes ) + GENERAL_UNIT_KILOBYTES ; \n\t} \n"}, {"code": "private PendingIntent createRequestPendingIntent $F20574 ( pendingIntentClassName ) { \n\tPendingIntent pendingIntent = null ; \n\ttry { \n\t\t$F63290 ( classOfPendingIntent , Class , pendingIntentClassName ) if ( classOfPendingIntent != null ) { \n\t\t\tIntent intent = new Intent ( mContext , classOfPendingIntent ) ; \n\t\t\tpendingIntent = PendingIntent . getService ( mContext , NUM00 , intent , PendingIntent . FLAG_UPDATE_CURRENT ) ; \n\t\t\t} \n\t\t} \n\tcatch ( ClassNotFoundException e ) $F302 ( e ) return pendingIntent ; \n\t} \n"}, {"code": "public boolean isStatic $F72 { \n\treturn $F48022 ( Modifier , _method ) ; \n\t} \n"}, {"code": "void testString $F72 { \n\tString a = randomString ( ) ; \n\tif ( returnNew ) { \n\t\tString b = StringUtils . fromCacheOrNew ( a ) ; \n\t\ttry { \n\t\t\tassertEquals ( a , b ) ; \n\t\t\t} \n\t\tcatch ( Exception e ) { \n\t\t\t$F172017 ( TestBase , e ) } \n\t\tif ( a != null && a == b && $F20 ( a ) ) { \n\t\t\tthrow new AssertionError ( NUM00 + System . identityHashCode ( a ) + NUM00 + System . identityHashCode ( b ) ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tString b ; \n\t\tif ( useIntern ) { \n\t\t\tb = a == null ? null : a . intern ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\tb = StringUtils . cache ( a ) ; \n\t\t\t} \n\t\ttry { \n\t\t\tassertEquals ( a , b ) ; \n\t\t\t} \n\t\tcatch ( Exception e ) { \n\t\t\t$F172017 ( TestBase , e ) } \n\t\t} \n\t} \n"}, {"code": "public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { \n\tString str = $F48364 ( data ) ; \n\twriteStringToFile ( file , str , encoding , append ) ; \n\t} \n"}, {"code": "public static String unifyLineSeparators ( String s ) { \n\treturn unifyLineSeparators ( s , System . getProperty ( NUM00 ) ) ; \n\t} \n"}, {"code": "public static $F96 decryptKey $F7233 ( password , encryptedKey ) { \n\ttry { \n\t\t$F156 ( c , Cipher , ENCRYPT_KEY_ALGORITHM ) $F94768 ( c , Cipher , password , SECRET_KEY_ALGORITHM , CBC_SALT_KEY ) $F157 ( c , encryptedKey ) } \n\tcatch ( Exception e ) { \n\t\tthrow new IllegalStateException ( ENCRYPT_KEY_ALGORITHM + NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "public void configs ( SwtPlatform ... platforms ) $F81861 ( configs , Arrays , platforms ) "}, {"code": "protected int checkIPRange $F72 { \n\tint retVal = NUM00 ; \n\tString ipVersion ; \n\tString ipType ; \n\t$F2540 ( holdDetails ) ; \n\tfor ( String nextIP : IPRangeRange ) { \n\t\ttry { \n\t\t\tholdDetails = checkIPVersion ( nextIP ) ; \n\t\t\t} \n\t\tcatch ( IllegalArgumentException e ) { \n\t\t\tif $F12866 ( debug ) { \n\t\t\t\tdebug . warning ( NUM00 , ADAPTIVE , nextIP , e ) ; \n\t\t\t\t} \n\t\t\t$F598 } \n\t\tipVersion = holdDetails . get ( IP_Version ) ; \n\t\tipType = holdDetails . get ( IP_TYPE ) ; \n\t\tif ( ipVersion . equalsIgnoreCase ( IP_V6 ) && ValidateIPaddress . isIPv6 ( clientIP ) ) { \n\t\t\tif $F6299 ( debug ) { \n\t\t\t\tdebug . message ( NUM00 , ADAPTIVE , clientIP , nextIP ) ; \n\t\t\t\tdebug . message ( NUM00 , IP_V6 ) ; \n\t\t\t\tdebug . message ( NUM00 , IPv6Address . fromString ( clientIP ) ) ; \n\t\t\t\t} \n\t\t\tif $F21935 ( ipType ) { \n\t\t\t\t$F1729 ( first , holdDetails , IP_START ) $F1729 ( last , holdDetails , IP_END ) IPv6AddressRange iPv6AddressRange = IPv6AddressRange . fromFirstAndLast ( IPv6Address . fromString ( first ) , IPv6Address . fromString ( last ) ) ; \n\t\t\t\tif ( iPv6AddressRange . contains ( IPv6Address . fromString ( clientIP ) ) ) $F3468 ( retVal , IPRangeScore ) } \n\t\t\telse if $F21935 ( ipType ) { \n\t\t\t\tIPv6Network iPv6Network = IPv6Network . fromString ( nextIP ) ; \n\t\t\t\tif ( iPv6Network . contains ( IPv6Address . fromString ( clientIP ) ) ) $F3468 ( retVal , IPRangeScore ) } \n\t\t\telse { \n\t\t\t\tIPv6Address iPv6AddressNextIP = IPv6Address . fromString ( nextIP ) ; \n\t\t\t\tif ( iPv6AddressNextIP . compareTo ( IPv6Address . fromString ( clientIP ) ) == NUM00 ) $F3468 ( retVal , IPRangeScore ) } \n\t\t\t} \n\t\telse if ( ipVersion . equalsIgnoreCase ( IP_V4 ) && ValidateIPaddress . isIPv4 ( clientIP ) ) { \n\t\t\tif $F6299 ( debug ) { \n\t\t\t\tdebug . message ( NUM00 , ADAPTIVE , clientIP , nextIP ) ; \n\t\t\t\tdebug . message ( NUM00 , IP_V4 ) ; \n\t\t\t\tdebug . message ( NUM00 , clientIP ) ; \n\t\t\t\t} \n\t\t\tIPRange theRange = new IPRange ( nextIP ) ; \n\t\t\tif ( theRange . inRange ( clientIP ) ) $F3468 ( retVal , IPRangeScore ) } \n\t\t} \n\tif ( ! IPRangeInvert ) { \n\t\tretVal = IPRangeScore - retVal ; \n\t\t} \n\treturn retVal ; \n\t} \n"}, {"code": "private View fillFromSelection $F14337 ( selectedLeft , childrenLeft , childrenRight ) { \n\tif ( DEBUG ) Log . i ( TAG , NUM00 + selectedLeft + NUM00 + childrenLeft + CHILDREN_RIGHT + childrenRight + M_FIRST_POSITION + mFirstPosition ) ; \n\t$F3666 ( fadingEdgeLength , getHorizontalFadingEdgeLength ) final int selectedPosition = mSelectedPosition ; \n\tfinal int numRows = mNumRows ; \n\tfinal int horizontalSpacing = mHorizontalSpacing ; \n\tint columnStart ; \n\tint columnEnd = - NUM00 ; \n\tif ( ! mStackFromBottom ) { \n\t\tcolumnStart = selectedPosition - ( selectedPosition % numRows ) ; \n\t\t} \n\telse { \n\t\tint invertedSelection = mItemCount - NUM00 - selectedPosition ; \n\t\t$F66647 ( columnEnd , mItemCount , invertedSelection , numRows ) $F66650 ( columnStart , Math , columnEnd , numRows ) } \n\tView sel ; \n\tView referenceView ; \n\tint leftSelectionPixel = getLeftSelectionPixel ( childrenLeft , fadingEdgeLength , columnStart ) ; \n\tint rightSelectionPixel = getRightSelectionPixel ( childrenRight , fadingEdgeLength , numRows , columnStart ) ; \n\tsel = makeColumn ( mStackFromBottom ? columnEnd : columnStart , selectedLeft , _BOOL ) ; \n\tmFirstPosition = columnStart ; \n\treferenceView = mReferenceView ; \n\tadjustForLeftFadingEdge ( referenceView , leftSelectionPixel , rightSelectionPixel ) ; \n\tadjustForRightFadingEdge ( referenceView , leftSelectionPixel , rightSelectionPixel ) ; \n\tif ( ! mStackFromBottom ) { \n\t\tfillLeft ( columnStart - numRows , referenceView . getLeft ( ) - horizontalSpacing ) ; \n\t\tadjustViewsLeftOrRight ( ) ; \n\t\tfillRight ( columnStart + numRows , referenceView . getRight ( ) + horizontalSpacing ) ; \n\t\t} \n\telse { \n\t\tfillRight ( columnEnd + numRows , referenceView . getRight ( ) + horizontalSpacing ) ; \n\t\tadjustViewsLeftOrRight ( ) ; \n\t\tfillLeft ( columnStart - NUM00 , referenceView . getLeft ( ) - horizontalSpacing ) ; \n\t\t} \n\treturn sel ; \n\t} \n"}, {"code": "private static Field findField ( Object instance , String name ) throws NoSuchFieldException { \n\tfor ( $F6969 clazz = instance . getClass ( ) ; \n\tclazz != null ; \n\tclazz = clazz . getSuperclass ( ) ) { \n\t\ttry { \n\t\t\t$F111040 ( field , clazz , name ) $F41506 ( field , _BOOL ) return field ; \n\t\t\t} \n\t\t$F7847 } \n\tthrow new NoSuchFieldException ( $F148645 ( name , instance ) ) ; \n\t} \n"}, {"code": "protected int calculateBreakPosition ( int p0 , Token tokenList , float x0 ) { \n\tint p = p0 ; \n\tRSyntaxTextArea $F20209 ( textArea , getContainer ) ; \n\tfloat currentWidth = getWidth ( ) ; \n\tif ( currentWidth == Integer . MAX_VALUE ) currentWidth = getPreferredSpan ( X_AXIS ) ; \n\t$F19410 ( currentWidth , Math , MIN_WIDTH ) Token t = tokenList ; \n\twhile ( t != null && t . isPaintable ( ) ) { \n\t\tfloat tokenWidth = t . getWidth ( textArea , this , x0 ) ; \n\t\tif ( tokenWidth > currentWidth ) { \n\t\t\tif ( p == p0 ) { \n\t\t\t\treturn t . getOffsetBeforeX ( textArea , this , NUM00 , currentWidth ) ; \n\t\t\t\t} \n\t\t\treturn t . isWhitespace ( ) ? p + t . textCount : p ; \n\t\t\t} \n\t\tcurrentWidth -= tokenWidth ; \n\t\tx0 += tokenWidth ; \n\t\tp += t . textCount ; \n\t\tt = t . getNextToken ( ) ; \n\t\t} \n\treturn p + NUM00 ; \n\t} \n"}, {"code": "$F1 public ShapeTileSimplex to_Simplex $F72 { \n\tif ( is_empty ( ) ) return ShapeTileSimplex . EMPTY ; \n\tArrayList $F66714 line_arr = new ArrayList $F66714 $F989 ; \n\tline_arr . add ( new PlaLineInt ( box_ll , PlaDirection . RIGHT ) ) ; \n\tline_arr . add ( new PlaLineInt ( box_ur , PlaDirection . UP ) ) ; \n\tline_arr . add ( new PlaLineInt ( box_ur , PlaDirection . LEFT ) ) ; \n\tline_arr . add ( new PlaLineInt ( box_ll , PlaDirection . DOWN ) ) ; \n\treturn new ShapeTileSimplex ( line_arr ) ; \n\t} \n"}, {"code": "private void injectContent ( Inject injectContent ) throws IOException , MojoExecutionException { \n\tMap < Pattern , File > contents = getContentsMap ( injectContent . getContents ( ) ) ; \n\tFile tmpFile = ioFactory . createTemporaryFile ( injectContent . getDestinationFile ( ) ) ; \n\tBufferedReader reader = null ; \n\tBufferedWriter writer = null ; \n\ttry { \n\t\treader = ioFactory . newReader ( injectContent . getDestinationFile ( ) ) ; \n\t\twriter = ioFactory . newWriter ( tmpFile ) ; \n\t\tString line ; \n\t\twhile $F443 ( line , reader ) { \n\t\t\tFile content = doesLineMatchId ( contents , line ) ; \n\t\t\tif ( content != null ) { \n\t\t\t\tioFactory . writeContent ( writer , content , getContentConverter ( injectContent ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tioFactory . writeLine ( writer , line ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tfinally { \n\t\t$F2727 ( reader ) $F12239 ( writer ) } \n\tioFactory . moveTo ( tmpFile , injectContent . getDestinationFile ( ) ) ; \n\t} \n"}, {"code": "public static $F11685 boolean isEmpty ( CharSequence c ) { \n\treturn ( c == null ) || $F1276 ( c ) ; \n\t} \n"}, {"code": "private static boolean createBooleanSetting ( $F27504 ( rawSettings ) , final String settingName , final boolean defaultValue ) { \n\t$F3056 ( settingString , rawSettings , settingName ) if ( settingString == null ) { \n\t\treturn defaultValue ; \n\t\t} \n\telse { \n\t\ttry { \n\t\t\treturn Boolean . parseBoolean ( settingString ) ; \n\t\t\t} \n\t\tcatch ( final NumberFormatException exception ) { \n\t\t\tCUtilityFunctions . logException ( exception ) ; \n\t\t\treturn defaultValue ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public void disconnectionNotification ( String eventName , Object source ) $F106 ( m_listenees , source ) "}, {"code": "$F32632 ( criteria , createCriteriaInternal , oredCriteria ) "}, {"code": "private MarshalledWrapper lookupDo ( Template tmpl ) { \n\tif ( isEmpty ( tmpl . serviceTypes ) || tmpl . serviceID != null ) { \n\t\tItemIter iter = matchingItems ( tmpl ) ; \n\t\tif $F2921 ( iter ) return iter . next ( ) . service ; \n\t\t$F1274 } \n\tList services = matchingServices ( tmpl . serviceTypes ) ; \n\t$F657 ( now , System ) $F2199 ( slen , services ) $F112238 ( slen ) int srand = Math . abs ( random . nextInt ( ) % slen ) ; \n\tfor ( $F119 ( i , slen ) ) { \n\t\tSvcReg reg = ( SvcReg ) services . get ( ( i + srand ) % slen ) ; \n\t\tif ( reg . leaseExpiration > now && matchAttributes ( tmpl , reg . item ) ) return reg . item . service ; \n\t\t} \n\t$F1274 } \n"}, {"code": "$F1 public boolean runAfter ( List tasks , int size ) { \n\tfor ( $F119 ( i , size ) ) { \n\t\tCacheTask t = ( CacheTask ) tasks . get ( i ) ; \n\t\tif ( t instanceof RegisterListenerTask || t instanceof LookupTask ) { \n\t\t\tProxyReg otherReg = t . getProxyReg ( ) ; \n\t\t\tif $F1238 ( reg , otherReg ) { \n\t\t\t\tif ( thisTaskSeqN > t . getSeqN ( ) ) return _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn super . runAfter ( tasks , size ) ; \n\t} \n"}, {"code": "String generateKey $F72 throws OracleException { \n\t$F5475 ( data ) try { \n\t\tdata = HashFuncs . getRandom ( ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tif $F68263 ( OracleLog ) $F145157 ( log , e ) } \n\t$F22771 ( data , fetchGuid ) if ( data == null ) { \n\t\tthrow SODAUtils . makeException ( SODAMessage . EX_UNABLE_TO_CREATE_UUID ) ; \n\t\t} \n\treturn ( ByteArray . rawToHex ( data ) ) ; \n\t} \n"}, {"code": "public $F1986 arrayCopy $F72 { \n\t$F1986 array = new double [ length ( ) ] ; \n\tfor ( IndexValue iv : this ) array [ iv . getIndex ( ) ] = iv . getValue ( ) ; \n\treturn array ; \n\t} \n"}, {"code": "public static void delete ( Path path ) { \n\tif ( path != null ) { \n\t\tpath = path . toAbsolutePath ( ) ; \n\t\tif ( inTargetDir ( path ) ) { \n\t\t\ttry $F11331 ( IoUtil , path ) catch ( IOException e ) { \n\t\t\t\tprintError ( NUM00 + path . toAbsolutePath ( ) + NUM00 , e ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse $F1328 ( printError , path ) } \n\t} \n"}, {"code": "private static boolean parse ( $F6969 service , URL u ) throws ServiceConfigurationError { \n\tInputStream in = null ; \n\tBufferedReader r = null ; \n\ttry { \n\t\t$F21223 ( in , u ) $F522 ( r , in ) ; \n\t\tint lc = NUM00 ; \n\t\tString ln ; \n\t\twhile $F443 ( ln , r ) { \n\t\t\t$F1384 ( ci , ln ) if ( ci >= NUM00 ) $F45799 ( ln , ci ) $F1382 ( ln ) $F1749 ( n , ln ) if ( n != NUM00 ) { \n\t\t\t\tif ( $F48846 ( ln ) || $F48846 ( ln ) ) fail ( service , u , lc , NUM00 ) ; \n\t\t\t\tint cp = ln . codePointAt ( NUM00 ) ; \n\t\t\t\tif ( ! Character . isJavaIdentifierStart ( cp ) ) fail ( service , u , lc , NUM00 + ln ) ; \n\t\t\t\tfor ( int i = Character . charCount ( cp ) ; \n\t\t\t\ti < n ; \n\t\t\t\ti += Character . charCount ( cp ) ) { \n\t\t\t\t\tcp = ln . codePointAt ( i ) ; \n\t\t\t\t\tif ( ! Character . isJavaIdentifierPart ( cp ) && ( cp != NUM00 ) ) fail ( service , u , lc , NUM00 + ln ) ; \n\t\t\t\t\t} \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( FileNotFoundException x ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F21230 ( fail , service , x ) finally { \n\t\ttry $F1823 ( r ) $F21230 ( fail , service , y ) try $F1823 ( in ) $F21230 ( fail , service , y ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void initPattern $F72 { \n\t$F280 ( patternTemplateRegex ) $F980 ( logger ) Matcher placeholderMatcher = getPlaceholderMatcher ( ) ; \n\t$F980 ( logger ) while $F281 ( placeholderMatcher ) { \n\t\tString group = placeholderMatcher . group ( NUM00 ) ; \n\t\tif $F2200 ( groups , group ) { \n\t\t\t$F1932 ( logger ) groups . add ( group ) ; \n\t\t\tString groupRegex = getGroupRegex ( group ) ; \n\t\t\tplaceholderMatcher . appendReplacement ( patternTemplateRegex , Matcher . quoteReplacement ( NUM00 + group + NUM00 + groupRegex + NUM00 ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F1932 ( logger ) placeholderMatcher . appendReplacement ( patternTemplateRegex , Matcher . quoteReplacement ( NUM00 + group + NUM00 ) ) ; \n\t\t\t} \n\t\t} \n\tplaceholderMatcher . appendTail ( patternTemplateRegex ) ; \n\t$F1822 ( patternRegex , patternTemplateRegex ) $F586 ( logger , patternRegex ) pattern = Pattern . compile ( patternRegex ) ; \n\t} \n"}, {"code": "protected void newLine ( PrintWriter file , String string , boolean isManifest ) { \n\t$F35105 ( lines , string , NEW_LINE ) for ( String line : lines ) { \n\t\t$F35105 ( words , line , SPACE ) $F280 ( sb ) for ( String word : words ) { \n\t\t\tif ( checkStringLength ( sb . toString ( ) + word , isManifest ) ) { \n\t\t\t\tsb . append ( word + SPACE ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F90455 ( sb ) $F10665 ( addLine , file , sb ) sb = new StringBuffer ( word + SPACE ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif $F4012 ( sb ) { \n\t\t\t$F90455 ( sb ) } \n\t\t$F10665 ( addLine , file , sb ) } \n\t} \n"}, {"code": "protected boolean updateAttachmentPoint $F72 { \n\tboolean moved = _BOOL ; \n\tthis . oldAPs = attachmentPoints ; \n\tif $F4251 ( attachmentPoints ) return _BOOL ; \n\t$F139724 ( apList ) $F97792 ( attachmentPoints , apList ) Map < Long , AttachmentPoint > newMap = getAPMap ( apList ) ; \n\tif ( newMap == null || $F15255 ( newMap , apList ) ) { \n\t\tmoved = _BOOL ; \n\t\t} \n\tif ( moved ) { \n\t\t$F21153 ( log , attachmentPoints , newMap ) $F139724 ( newAPList ) if ( newMap != null ) $F2966 ( newAPList , newMap ) this . attachmentPoints = newAPList ; \n\t\t} \n\treturn moved ; \n\t} \n"}, {"code": "public List < SoftWrapImpl > removeStartingFrom ( int offset ) { \n\tint startIndex = getSoftWrapIndex ( offset ) ; \n\tif ( startIndex < NUM00 ) { \n\t\tstartIndex = - startIndex - NUM00 ; \n\t\t} \n\tif $F6389 ( startIndex , myWraps ) $F12523 ( Collections ) List < SoftWrapImpl > tail = myWraps . subList ( startIndex , myWraps . size ( ) ) ; \n\tList < SoftWrapImpl > result = new ArrayList < SoftWrapImpl > ( tail ) ; \n\t$F725 ( tail ) return result ; \n\t} \n"}, {"code": "public static String formatDps ( final double dps ) { \n\treturn NUM00 + String . format ( NUM00 , dps ) + NUM00 ; \n\t} \n"}, {"code": "public static String truncate ( String string , int length ) { \n\tif $F14791 ( string , length ) $F45800 ( string , length ) return string ; \n\t} \n"}, {"code": "$F119089 ( text , builder , index , chr , t , Integer ) "}, {"code": "$F1431 public $F32776 subSet ( E start , E end ) { \n\treturn subSet ( start , _BOOL , end , _BOOL ) ; \n\t} \n"}, {"code": "private boolean checkDisband ( Legion legion ) { \n\tif ( legion . isDisbanding ( ) ) { \n\t\tif ( $F210831 ( System ) > legion . getDisbandTime ( ) ) $F9278 ( disbandLegion , legion , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void index ( Tuple t , String field ) { \n\tString s ; \n\tif ( ( s = t . getString ( field ) ) == null ) $F665 $F14497 ( st , s , m_delim ) while $F14498 ( st ) { \n\t\t$F8095 ( tok , st ) addString ( tok , t ) ; \n\t\t} \n\t} \n"}, {"code": "public static void downto ( float self , Number to , $F50462 ( closure ) ) { \n\tfloat to1 = to . floatValue ( ) ; \n\tif ( self >= to1 ) { \n\t\tfor ( float i = self ; \n\t\ti >= to1 ; \n\t\ti -- ) $F50467 ( closure , i ) } \n\telse $F50472 ( to , self ) } \n"}, {"code": "protected void parseDOMAttributes ( Element element ) throws SAML2Exception { \n\trequestId = element . getAttribute ( SAML2Constants . ID ) ; \n\tvalidateID ( requestId ) ; \n\tversion = element . getAttribute ( SAML2Constants . VERSION ) ; \n\tvalidateVersion ( version ) ; \n\tString issueInstantStr = element . getAttribute ( SAML2Constants . ISSUE_INSTANT ) ; \n\tvalidateIssueInstant ( issueInstantStr ) ; \n\tdestinationURI = element . getAttribute ( SAML2Constants . DESTINATION ) ; \n\tconsent = element . getAttribute ( SAML2Constants . CONSENT ) ; \n\t} \n"}, {"code": "protected int readFully ( InputStream in , byte $F76061 ) throws $F3258 { \n\tfor ( $F1139 ( i , buffer ) ) { \n\t\t$F7468 ( q , in ) $F101463 ( q , i ) $F8214 ( buffer , i , q ) } \n\treturn buffer . length ; \n\t} \n"}, {"code": "$F137843 private static void insertFullscreenInfoIntoList ( ArrayList < FullscreenInfo > list , String origin , String embedder ) { \n\tlist . add ( new FullscreenInfo ( origin , embedder , _BOOL ) ) ; \n\t} \n"}, {"code": "public static InputStream streamFromString ( String location ) throws IOException { \n\tInputStream is = null ; \n\tURL url = urlFromString ( location , null , _BOOL ) ; \n\tif ( url != null ) { \n\t\t$F21223 ( is , url ) } \n\telse { \n\t\t$F1705 ( f , location ) if $F3428 ( f ) $F5335 ( is , f ) } \n\tif ( is == null ) $F1337 else if ( isGZipFile ( location ) ) { \n\t\treturn new GZIPInputStream ( is ) ; \n\t\t} \n\telse { \n\t\treturn is ; \n\t\t} \n\t} \n"}, {"code": "public void add ( T item ) { \n\tsynchronized ( lock ) { \n\t\titems . add ( identifiedItemFactory . create ( item ) ) ; \n\t\t} \n\tnotifyDataSetChanged ( ) ; \n\t} \n"}, {"code": "private void copyACLs ( List < UnManagedCifsShareACL > origACLList , List < CifsShareACL > shareACLList , FileShare fileshare ) { \n\tCifsShareACL shareACL = null ; \n\tfor ( UnManagedCifsShareACL origACL : origACLList ) { \n\t\tshareACL = new CifsShareACL $F72 ; \n\t\tshareACL . setId ( URIUtil . createId ( CifsShareACL . class ) ) ; \n\t\tshareACL . setUser ( origACL . getUser ( ) ) ; \n\t\tshareACL . setPermission ( origACL . getPermission ( ) ) ; \n\t\tshareACL . setShareName ( origACL . getShareName ( ) ) ; \n\t\tshareACL . setFileSystemId ( fileshare . getId ( ) ) ; \n\t\tshareACLList . add ( shareACL ) ; \n\t\t$F279664 ( _logger , shareACL ) } \n\t} \n"}, {"code": "public ResourceListParser parse $F72 throws $F49817 $F49826 ( factory , SAXParserFactory , parser , mInputSource , this , e ) "}, {"code": "public Builder deleteEntitlements $F72 $F18794 ( deleteFields , this ) "}, {"code": "protected void incorporateSignedProperties $F72 throws DSSException { \n\tsignedPropertiesDom = DSSXMLUtils . addElement ( documentDom , qualifyingPropertiesDom , XAdES , XADES_SIGNED_PROPERTIES ) ; \n\tsignedPropertiesDom . setAttribute ( ID , NUM00 + deterministicId ) ; \n\tincorporateSignedSignatureProperties ( ) ; \n\t} \n"}, {"code": "private ChannelSelection createChannelSelection ( StyleFactoryImpl styleFactory , ContrastMethod contrastMethod ) { \n\tContrastEnhancement contrastEnhancement = ( ContrastEnhancement ) styleFactory . contrastEnhancement ( null , contrastMethod . name ( ) ) ; \n\tFilterFactory ff = CommonFactoryFinder . getFilterFactory ( ) ; \n\tMap < String , Expression > options = contrastEnhancement . getOptions ( ) ; \n\t$F99123 ( options , ff ) $F99123 ( options , ff ) $F99123 ( options , ff ) SelectedChannelType channelType = styleFactory . createSelectedChannelType ( NUM00 , contrastEnhancement ) ; \n\tSelectedChannelType [ ] channels = new SelectedChannelType $F380 ; \n\tchannels [ NUM00 ] = channelType ; \n\tchannels [ NUM00 ] = channelType ; \n\tchannels [ NUM00 ] = channelType ; \n\tChannelSelection channelSelection = styleFactory . createChannelSelection ( channels ) ; \n\treturn channelSelection ; \n\t} \n"}, {"code": "public static float mean ( $F5415 data , $F2027 inds ) { \n\tfloat mean = NUM00 ; \n\tfor ( $F1139 ( i , inds ) ) { \n\t\tif ( Float . isNaN ( data [ inds [ i ] ] ) ) $F824 mean += data [ inds [ i ] ] ; \n\t\t} \n\tmean /= inds . length ; \n\treturn mean ; \n\t} \n"}, {"code": "public int depth $F72 { \n\treturn pointer ; \n\t} \n"}, {"code": "public Result doComparisonTest ( Properties properties ) throws Exception { \n\tfinal long timeout = Long . parseLong ( properties . getProperty ( TestOptions . TIMEOUT ) ) ; \n\tfinal int ntrials = Integer . parseInt ( properties . getProperty ( TestOptions . NTRIALS ) ) ; \n\tfinal int nclients = Integer . parseInt ( properties . getProperty ( TestOptions . NCLIENTS ) ) ; \n\tfinal double percentReaders = Double . parseDouble ( properties . getProperty ( TestOptions . PERCENT_READERS ) ) ; \n\tfinal double percentWritersWillFlush = Double . parseDouble ( properties . getProperty ( TestOptions . PERCENT_WRITER_WILL_FLUSH ) ) ; \n\tfinal int reclen = Integer . parseInt ( properties . getProperty ( TestOptions . RECLEN ) ) ; \n\tfinal int nwritesPerTask = Integer . parseInt ( properties . getProperty ( TestOptions . NWRITES ) ) ; \n\tfinal int nreadsPerTask = Integer . parseInt ( properties . getProperty ( TestOptions . NREADS ) ) ; \n\tfinal AtomicInteger $F72840 ( nerr ) ; \n\tfinal Result result = doMRMWTest ( store , timeout , ntrials , nclients , percentReaders , percentWritersWillFlush , reclen , nwritesPerTask , nreadsPerTask , nerr ) ; \n\treturn result ; \n\t} \n"}, {"code": "private void cmd_import $F72 { \n\t$F89767 ( jc ) jc . setDialogTitle ( $F83894 ( Msg , Env ) ) ; \n\tjc . setDialogType ( JFileChooser . OPEN_DIALOG ) ; \n\t$F159615 ( jc , JFileChooser ) if ( jc . showOpenDialog ( this ) != JFileChooser . APPROVE_OPTION ) $F665 $F280 ( sb ) try { \n\t\tInputStreamReader in = new InputStreamReader ( new FileInputStream ( jc . getSelectedFile ( ) ) ) ; \n\t\t$F11577 ( cbuf ) int count ; \n\t\twhile $F87061 ( count , in , cbuf ) $F58551 ( sb , cbuf , count ) $F59 ( in ) } \n\tcatch ( Exception e ) { \n\t\tlog . log ( Level . SEVERE , $F5351 ( e ) ) ; \n\t\t$F665 } \n\t$F31458 ( setHtmlText , sb ) } \n"}, {"code": "private $F3803 fetchFileCosIdList $F72 throws SOSFailure { \n\tfinal String methodName = NUM00 ; \n\t$F454866 ( log , methodName ) final String FILE_COS_URI = NUM00 ; \n\t$F10144 ( fileCosIdList ) try { \n\t\tCoSList cosElemList = _client . queryObject ( FILE_COS_URI , CoSList . class ) ; \n\t\tif ( cosElemList != null && cosElemList . getCosElements ( ) != null ) { \n\t\t\tfor ( CoSElement elem : cosElemList . getCosElements ( ) ) { \n\t\t\t\tif ( elem != null ) $F42097 ( fileCosIdList , elem ) } \n\t\t\t} \n\t\tlog . trace ( methodName + NUM00 + fileCosIdList ) ; \n\t\tif ( cosElemList != null && fileCosIdList != null ) { \n\t\t\tlog . trace ( $F279327 ( methodName , fileCosIdList ) ) ; \n\t\t\treturn fileCosIdList ; \n\t\t\t} \n\t\t$F454866 ( log , methodName ) return new $F5 $F72 ; \n\t\t} \n\tcatch ( NoSuchAlgorithmException e ) $F343082 ( log , methodName , e ) catch ( UniformInterfaceException e ) $F343082 ( log , methodName , e ) } \n"}, {"code": "public void monitor ( ScalingStateMonitorTask task ) $F36131 ( taskQueue , task , startMonitor ) "}, {"code": "public void insertNodeInto ( MutableTreeNode newChild , MutableTreeNode parent , int index ) { \n\tparent . insert ( newChild , index ) ; \n\t$F11844 ( newIndexs ) newIndexs [ NUM00 ] = index ; \n\tnodesWereInserted ( parent , newIndexs ) ; \n\t} \n"}, {"code": "public final double sampleMax $F72 { \n\tlong max = _max . getAndSet ( NUM00 ) ; \n\treturn _scale * max ; \n\t} \n"}, {"code": "private static void writeFile ( File file , $F3803 lines ) throws IOException { \n\tif $F1906 ( file ) $F88727 ( file ) $F2824 ( fw , file ) $F5172 ( Bw , fw ) $F80496 ( pw , Bw ) for ( String line : lines ) pw . println ( line ) ; \n\t$F59 ( Bw ) $F59 ( fw ) $F59 ( pw ) } \n"}, {"code": "public synchronized boolean verifyChunkAuthTag $F32395 ( chunkIdx , chunkAuthTag ) throws FileEncryptionException { \n\tif ( ( chunkIdx < NUM00 ) || ( chunkAuthTag == null ) || ( chunkAuthTag . length != backEncRandomAccessFile . CHUNK_TLEN ) ) $F112401 else { \n\t\t$F96 storedAuthTag = atagList . get ( chunkIdx ) ; \n\t\tif ( storedAuthTag == null || ! Arrays . equals ( chunkAuthTag , storedAuthTag ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static String guessMimeTypeFromExtension ( String extension ) { \n\t$F25770 ( extension ) $F8313 ( extensionToMimeTypeMap , extension ) } \n"}, {"code": "public < AnnotationType extends Annotation > void register ( MethodBinder < AnnotationType > methodBinder ) { \n\tSet < AnnotatedMethod < AnnotationType > > annotatedMethods = AnnotatedMethods . get ( methodBinder . getAnnotationClass ( ) , annotatedType ) ; \n\tif $F5973 ( annotatedMethods ) { \n\t\tobjectBinders . add ( new AnnotatedMethodBinder $F200 ( methodBinder , annotatedMethods ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static String removeNewLineChars ( String s ) { \n\tString retString = null ; \n\tif ( ( s != null ) && $F4012 ( s ) && $F12703 ( s ) ) { \n\t\t$F7782 ( chars , s ) int len = chars . length ; \n\t\t$F1350 ( sb , len ) for ( $F119 ( i , len ) ) { \n\t\t\tchar c = chars [ i ] ; \n\t\t\tif ( c != NUM00 ) $F288 ( sb , c ) } \n\t\t$F6947 ( retString , sb ) } \n\telse { \n\t\tretString = s ; \n\t\t} \n\treturn retString ; \n\t} \n"}, {"code": "private Document parseRouteFile $F72 throws Exception { \n\t$F2218 ( factory , DocumentBuilderFactory ) factory . setNamespaceAware ( _BOOL ) ; \n\t$F2220 ( builder , factory ) $F5651 ( builder , routeFile ) } \n"}, {"code": "public void removeDTEDDirectoryHandler ( DTEDDirectoryHandler handler ) $F106 ( directories , handler ) "}, {"code": "public default void addFile ( final ContentProvider contentProvider , final String fileName , final EntryInformation entryInformation ) throws IOException { \n\taddFile ( contentProvider , fileName , entryInformation , Optional . empty ( ) ) ; \n\t} \n"}, {"code": "$F95779 ( out , remaining , count , buf , buffers , c , Math ) "}, {"code": "protected void read_lookahead $F72 throws $F34430 { \n\tlookahead = new Symbol [ error_sync_size ( ) ] ; \n\tfor ( $F50810 ( i , error_sync_size ) ) { \n\t\tlookahead [ i ] = cur_token ; \n\t\tcur_token = scan ( ) ; \n\t\t} \n\tlookahead_pos = NUM00 ; \n\t} \n"}, {"code": "private Vector < SnmpVarBind > splitFrom ( Vector < SnmpVarBind > original , int limit ) { \n\t$F2199 ( max , original ) Vector < SnmpVarBind > result = new Vector $F200 ( max - limit ) ; \n\tint i = limit ; \n\tfor ( Enumeration < SnmpVarBind > e = original . elements ( ) ; \n\te . hasMoreElements ( ) ; \n\t-- i ) { \n\t\tSnmpVarBind var = e . nextElement ( ) ; \n\t\tif ( i > NUM00 ) $F598 result . addElement ( new SnmpVarBind ( var . oid , var . value ) ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public static void initUrbanSimZoneWriter ( Config config ) { \n\tUrbanSimParameterConfigModuleV3 module = ( UrbanSimParameterConfigModuleV3 ) config . getModule ( UrbanSimParameterConfigModuleV3 . GROUP_NAME ) ; \n\ttry { \n\t\t$F973 ( log ) parcelWriter = IOUtils . getBufferedWriter ( module . getMATSim4OpusTemp ( ) + FILE_NAME ) ; \n\t\tlog . info ( NUM00 + module . getMATSim4OpusTemp ( ) + FILE_NAME + NUM00 ) ; \n\t\tparcelWriter . write ( InternalConstants . PARCEL_ID + NUM00 + ACCESSIBILITY_BY_FREESPEED + NUM00 + ACCESSIBILITY_BY_CAR + NUM00 + ACCESSIBILITY_BY_BIKE + NUM00 + ACCESSIBILITY_BY_WALK + NUM00 + ACCESSIBILITY_BY_PT ) ; \n\t\t$F1769 ( parcelWriter ) $F973 ( log ) } \n\t$F1516 ( e ) } \n"}, {"code": "$F125402 ( closeDialog ) "}, {"code": "public final void delayTask ( $F1113 TransactionRunnable task ) $F207 ( myDelayedTasks , task ) "}, {"code": "public TextEditor replaceAll ( String regex , String replacement ) { \n\tif $F4012 ( text ) { \n\t\tfinal String r = replacement ; \n\t\tPattern p = Pattern . compile ( regex , Pattern . MULTILINE ) ; \n\t\t$F1150 ( m , p , text ) $F280 ( sb ) while $F281 ( m ) { \n\t\t\tm . appendReplacement ( sb , r ) ; \n\t\t\t} \n\t\tm . appendTail ( sb ) ; \n\t\ttext = new StringBuilder $F3362 ( sb ) ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "private static $F4203 int migrateAll ( Migration $F4203 migration ) throws Exception { \n\tint migrated = NUM00 ; \n\tfor ( T entity : migration . getAllEntities ( ) ) { \n\t\ttry { \n\t\t\tif ( migration . isMigrated ( entity ) ) $F598 } \n\t\tcatch ( Exception x ) { \n\t\t\t$F5197 ( LOG , entity ) throw x ; \n\t\t\t} \n\t\ttry { \n\t\t\tmigration . migrate ( entity ) ; \n\t\t\t} \n\t\tcatch ( Exception x ) { \n\t\t\t$F5197 ( LOG , entity ) throw x ; \n\t\t\t} \n\t\tmigrated ++ ; \n\t\t} \n\treturn migrated ; \n\t} \n"}, {"code": "private void captureDifferentString ( String oldString , String newString , $F2540 ( map ) , String appName ) { \n\tReject . ifNull ( appName ) ; \n\tReject . ifNull ( map ) ; \n\tif ( oldString == null ? newString != null : ! oldString . equals ( newString ) ) $F1717 ( map , appName , newString ) } \n"}, {"code": "public void onChildThreadResumeBegin $F72 $F16878 ( _threadCount ) "}, {"code": "$F1 protected void drawXLabels $F31491 ( xLabels , xTextLabelLocations , canvas , paint , left , top , bottom , xPixelsPerUnit , minX , maxX ) { \n\t$F2199 ( length , xLabels ) if ( length > NUM00 ) { \n\t\t$F31493 ( showLabels , mRenderer ) $F31495 ( showGridY , mRenderer ) DateFormat format = getDateFormat ( xLabels . get ( NUM00 ) , xLabels . get ( length - NUM00 ) ) ; \n\t\tfor ( $F119 ( i , length ) ) { \n\t\t\tlong label = Math . round ( xLabels . get ( i ) ) ; \n\t\t\t$F31501 ( xLabel , left , xPixelsPerUnit , label , minX ) if ( showLabels ) { \n\t\t\t\t$F31503 ( paint , mRenderer ) canvas . drawLine ( xLabel , bottom , xLabel , bottom + mRenderer . getLabelsTextSize ( ) / NUM00 , paint ) ; \n\t\t\t\tdrawText ( canvas , format . format ( new Date ( label ) ) , xLabel , bottom + mRenderer . getLabelsTextSize ( ) * NUM00 / NUM00 , paint , mRenderer . getXLabelsAngle ( ) ) ; \n\t\t\t\t} \n\t\t\tif ( showGridY ) { \n\t\t\t\tpaint . setColor ( mRenderer . getGridColor ( ) ) ; \n\t\t\t\tcanvas . drawLine ( xLabel , bottom , xLabel , top , paint ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tdrawXTextLabels ( xTextLabelLocations , canvas , paint , _BOOL , left , top , bottom , xPixelsPerUnit , minX , maxX ) ; \n\t} \n"}, {"code": "public static String encodeToString $F97 ( src ) { \n\t$F1338 ( src ) $F193057 ( src ) String result ; \n\ttry { \n\t\tresult = new String ( delegate . encode ( src ) , DEFAULT_CHARSET . displayName ( ) ) ; \n\t\t} \n\tcatch ( UnsupportedEncodingException e ) $F48927 ( e ) return result ; \n\t} \n"}, {"code": "$F13591 ( str , flags , decode ) "}, {"code": "public boolean equals ( Object obj ) { \n\t$F3627 ( this , obj , _BOOL ) if ( obj instanceof ECFieldF2m ) { \n\t\tECFieldF2m o = ( ECFieldF2m ) obj ; \n\t\tif ( this . m == o . m ) { \n\t\t\tif ( this . rp == null ) { \n\t\t\t\tif ( o . rp == null ) { \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\treturn Arrays . equals ( this . ks , o . ks ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void chunkTaskSync ( RegionWrapper region , final RunnableVal $F9183 task ) { \n\tfinal int p1x = region . minX ; \n\tfinal int p1z = region . minZ ; \n\tfinal int p2x = region . maxX ; \n\tfinal int p2z = region . maxZ ; \n\tfinal int bcx = p1x > > NUM00 ; \n\tfinal int bcz = p1z > > NUM00 ; \n\tfinal int tcx = p2x > > NUM00 ; \n\tfinal int tcz = p2z > > NUM00 ; \n\ttask . value = $F4468 ; \n\tfor ( int x = bcx ; \n\tx <= tcx ; \n\tx ++ ) { \n\t\tfor ( int z = bcz ; \n\t\tz <= tcz ; \n\t\tz ++ ) { \n\t\t\ttask . value [ NUM00 ] = x ; \n\t\t\ttask . value [ NUM00 ] = z ; \n\t\t\ttask . value [ NUM00 ] = task . value [ NUM00 ] < < NUM00 ; \n\t\t\ttask . value [ NUM00 ] = task . value [ NUM00 ] < < NUM00 ; \n\t\t\ttask . value [ NUM00 ] = task . value [ NUM00 ] + NUM00 ; \n\t\t\ttask . value [ NUM00 ] = task . value [ NUM00 ] + NUM00 ; \n\t\t\ttask . value [ NUM00 ] = NUM00 ; \n\t\t\tif ( task . value [ NUM00 ] == bcx ) { \n\t\t\t\ttask . value [ NUM00 ] = p1x ; \n\t\t\t\ttask . value [ NUM00 ] = NUM00 ; \n\t\t\t\t} \n\t\t\tif ( task . value [ NUM00 ] == tcx ) { \n\t\t\t\ttask . value [ NUM00 ] = p2x ; \n\t\t\t\ttask . value [ NUM00 ] = NUM00 ; \n\t\t\t\t} \n\t\t\tif ( task . value [ NUM00 ] == bcz ) { \n\t\t\t\ttask . value [ NUM00 ] = p1z ; \n\t\t\t\ttask . value [ NUM00 ] = NUM00 ; \n\t\t\t\t} \n\t\t\tif ( task . value [ NUM00 ] == tcz ) { \n\t\t\t\ttask . value [ NUM00 ] = p2z ; \n\t\t\t\ttask . value [ NUM00 ] = NUM00 ; \n\t\t\t\t} \n\t\t\t$F21687 ( task ) } \n\t\t} \n\t} \n"}, {"code": "public ElsaSerializerPojo make $F72 { \n\treturn new ElsaSerializerPojo ( objectStack , singletons , registeredSers , registeredSerHeaders , registeredDeser , unknownClassNotification , new ElsaClassInfoResolver . ArrayBased ( classes . toArray ( $F33934 ) ) ) ; \n\t} \n"}, {"code": "private void loadBinary ( InputStream is ) throws IOException { \n\tif ( is instanceof FileInputStream ) { \n\t\tFileInputStream fis = ( FileInputStream ) is ; \n\t\t$F27404 ( fc , fis ) MappedByteBuffer bb = fc . map ( FileChannel . MapMode . READ_ONLY , NUM00 , $F181356 ( fc ) ) ; \n\t\t$F37249 ( bb ) loadBinary ( bb ) ; \n\t\t$F59 ( is ) } \n\telse { \n\t\tloadBinary ( new DataInputStream ( is ) ) ; \n\t\t} \n\t} \n"}, {"code": "private static boolean isTwoSlotType ( ClassNode type ) { \n\treturn type == ClassHelper . long_TYPE || type == ClassHelper . double_TYPE ; \n\t} \n"}, {"code": "public SpecificationRunnerBuilder sections $F4374 ( paramSections ) { \n\tCollections . addAll ( this . sections , paramSections ) ; \n\treturn this ; \n\t} \n"}, {"code": "private void consumeCRLF $F72 throws DecodingException { \n\tchar next = nextChar ( ) ; \n\tif ( next != NUM00 ) $F1210 ( consumeChar ) consumeChar ( NUM00 ) ; \n\t} \n"}, {"code": "private String processLogoutRequest ( LogoutState t , LogoutRequest logoutRequest , SessionManager sessionManager ) throws SamlServiceException { \n\tString sessionId = null ; \n\tList < SessionIndex > sessionList = logoutRequest . getSessionIndexes ( ) ; \n\t$F18062 ( Validate , sessionList ) Validate . isTrue ( $F3816 ( sessionList ) ) ; \n\tfor ( SessionIndex sessionIndex : sessionList ) { \n\t\tValidate . notNull ( sessionIndex ) ; \n\t\tString participantSession = sessionIndex . getSessionIndex ( ) ; \n\t\t$F18062 ( Validate , participantSession ) Session session = sessionManager . getByParticipant ( participantSession ) ; \n\t\tif ( session == null ) { \n\t\t\tthrow new SamlServiceException $F580 ; \n\t\t\t} \n\t\tif ( ! session . containsSessionParticipantUrl ( t . getIssuerValue ( ) ) ) { \n\t\t\tthrow new SamlServiceException $F580 ; \n\t\t\t} \n\t\tif ( sessionId == null ) { \n\t\t\t$F126817 ( sessionId , session ) } \n\t\telse { \n\t\t\tif ( ! $F140091 ( sessionId , session ) ) { \n\t\t\t\tthrow new SamlServiceException $F580 ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn sessionId ; \n\t} \n"}, {"code": "public boolean equals ( Object o ) { \n\tif ( o instanceof CoverageIntVdt ) { \n\t\tCoverageIntVdt civ = ( CoverageIntVdt ) o ; \n\t\treturn ( ( attribute == civ . attribute ) && ( value == civ . value ) ) ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public void accept ( final Path file ) throws InterruptedException { \n\t$F102990 ( logger , String , file ) $F90610 ( permits ) executor . execute ( new ConsumerTask ( file ) ) ; \n\t} \n"}, {"code": "private void addOptionList ( $F20109 ( args ) , final String optName , $F20109 ( values ) ) { \n\tfor ( final String value : values ) { \n\t\tif $F1032 ( value ) $F23287 ( args , optName , value ) } \n\t} \n"}, {"code": "public void testNegPosFirstShorter $F72 { \n\t$F50446 $F92469 int aSign = - NUM00 ; \n\tint bSign = NUM00 ; \n\tbyte $F3018 = { \n\t\t- NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F45034 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F7841 ( assertEquals , result ) } \n"}, {"code": "private Activity checkActivity $F72 { \n\tActivity activity = mActivity . get ( ) ; \n\t$F77087 ( activity ) return activity ; \n\t} \n"}, {"code": "$F1 public synchronized void start $F72 { \n\t$F973 ( LOGGER ) timer = new Timer $F580 ; \n\ttimer . schedule ( this , INITIAL_SCAN_DELAY , SCAN_INTERVAL ) ; \n\trunning = _BOOL ; \n\t} \n"}, {"code": "public boolean isLandingPage ( URL url ) { \n\tif ( url . getQuery ( ) != null ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\treturn landingPageSuffix ( url ) != NUM00 ; \n\t\t} \n\t} \n"}, {"code": "protected static void writeRowCountDefinitions ( TableCreator creator , ByteBuffer buffer ) { \n\twriteRowCountDefinitions ( creator , buffer , creator . getIndexCount ( ) ) ; \n\t} \n"}, {"code": "public void send ( String theString ) $F137731 ( send , theString ) "}, {"code": "public void init $F72 { \n\t_tokenMgmtExecutor . scheduleWithFixedDelay ( new ExpiredTokenCleaner $F72 , NUM00 , _maxLifeValuesHolder . getMaxTokenIdleTimeInMins ( ) , TimeUnit . MINUTES ) ; \n\t_tokenMgmtExecutor . scheduleWithFixedDelay ( new TokenKeysUpdater $F72 , NUM00 , FOREIGN_TOKEN_KEYS_BUNDLE_REFRESH_RATE_IN_MINS , TimeUnit . MINUTES ) ; \n\t} \n"}, {"code": "$F20813 ( fieldId , PATH , OFFSET_LBA ) "}, {"code": "public String toString $F72 { \n\treturn $F55902 ( String , bean ) ; \n\t} \n"}, {"code": "$F6672 ( filename , separatorAdd , prefix , getPrefixLength , index , indexOfLastSeparator , endIndex ) "}, {"code": "public Spanned [ ] history $F72 { \n\tint i = NUM00 ; \n\tSpanned [ ] array = new Spanned $F2313 ( history ) ; \n\tfor ( String s : history ) { \n\t\tif ( s != null ) { \n\t\t\tarray [ i ] = Html . fromHtml ( s ) ; \n\t\t\ti ++ ; \n\t\t\t} \n\t\t} \n\treturn array ; \n\t} \n"}, {"code": "private void sign ( final $F96 contentBytes , final ByteArrayOutputStream mimeContent ) throws Exception { \n\tString algId = conf . getSignatureAlgorithmId ( ) ; \n\tString keyId = conf . getActiveSigningKey ( ) ; \n\tlog . debug ( NUM00 + NUM00 , keyId , algId ) ; \n\tString signature = signHelper ( keyId , algId , contentBytes ) ; \n\t$F60813 ( mimeContent , envelopeHeader ) try ( MultipartEncoder encoder = new MultipartEncoder ( mimeContent , envelopeBoundary ) ) { \n\t\tencoder . startPart ( mpMixedContentType ( dataBoundary ) ) ; \n\t\tencoder . write ( contentBytes ) ; \n\t\tString algURI = CryptoUtils . getSignatureAlgorithmURI ( algId ) ; \n\t\tString hashURI = hashCalculator . getAlgoURI ( ) ; \n\t\tPath verificatioCertPath = conf . getCertPath ( keyId ) ; \n\t\tencoder . startPart ( MimeTypes . BINARY , new String [ ] { \n\t\t\tHEADER_CONTENT_TRANSFER_ENCODING + NUM00 , HEADER_SIG_ALGO_ID + NUM00 + algURI , HEADER_VERIFICATION_CERT_HASH + NUM00 + getVerificationCertHash ( verificatioCertPath ) + NUM00 + HEADER_HASH_ALGORITHM_ID + NUM00 + hashURI } \n\t\t) ; \n\t\t$F60813 ( encoder , signature ) } \n\t$F71660 ( log , mimeContent ) Files . write ( tempConfPath , mimeContent . toByteArray ( ) ) ; \n\t$F7028 ( log , tempConfPath ) } \n"}, {"code": "private boolean nextItemIs ( String match ) throws IOException { \n\tint c ; \n\twhile ( isWhiteSpace ( c = buf . get ( ) ) ) $F845 for ( $F1088 ( i , match ) ) { \n\t\tif ( i > NUM00 ) $F16479 ( c , buf ) if $F94215 ( c , match , i ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static Object deserializeObject ( final $F96 objBytes , final ClassLoader loader ) throws $F6427 { \n\tObjectInputStream objIn = null ; \n\ttry { \n\t\tobjIn = new ClassLoaderObjectInputStream ( new ByteArrayInputStream ( objBytes ) , loader ) ; \n\t\t$F287819 ( objIn ) } \n\t$F18632 ( close , objIn ) } \n"}, {"code": "public IntervalImpl ( int serialNum , long startIntervalDateTime , double coverageFactor , FramingFlowType intervalDataType , ISource source , IIntervalClassification intervalClassification , Version adeVersion ) throws AdeInternalException { \n\ta_adeVersion = adeVersion ; \n\tif ( startIntervalDateTime < NUM00 ) { \n\t\tthrow new IllegalArgumentException ( String . format ( $F39 , serialNum , startIntervalDateTime , coverageFactor , intervalDataType , source , intervalClassification , adeVersion ) ) ; \n\t\t} \n\tm_startIntervalTime = startIntervalDateTime ; \n\tm_framingFlowType = intervalDataType ; \n\tm_serialNum = serialNum ; \n\tm_intervalClassification = intervalClassification ; \n\tif ( m_intervalClassification == null ) { \n\t\tm_intervalClassification = IntervalClassificationEnum . REGULAR ; \n\t\t} \n\tm_messageSummaryMap = new TreeMap < Integer , IMessageSummary > $F72 ; \n\tm_endIntervalTime = m_startIntervalTime + m_framingFlowType . getDuration ( ) ; \n\tm_source = source ; \n\tif ( coverageFactor <= NUM00 || coverageFactor > NUM00 ) { \n\t\tthrow new AdeInternalException ( NUM00 + coverageFactor ) ; \n\t\t} \n\tm_coverageFactor = coverageFactor ; \n\t} \n"}, {"code": "public static boolean isTrue ( $F2100 ( dict ) , String key ) $F19580 ( isTrue , dict , key , _BOOL ) "}, {"code": "protected ShoppingCartItem $F72 $F845 "}, {"code": "public OutputStream bindStream ( OutputStream output ) { \n\tOutputStream stream = m_streams . get ( ) ; \n\tm_streams . set ( output ) ; \n\treturn stream ; \n\t} \n"}, {"code": "private void initMapLayer $F72 { \n\tfloat zoom = getInitZoom ( mapView . getWidth ( ) , mapView . getHeight ( ) , image . getWidth ( ) , image . getHeight ( ) ) ; \n\tLog . i ( TAG , Float . toString ( zoom ) ) ; \n\tmapView . setCurrentZoom ( zoom , NUM00 , NUM00 ) ; \n\tfloat width = mapView . getWidth ( ) - zoom * image . getWidth ( ) ; \n\tfloat height = mapView . getHeight ( ) - zoom * image . getHeight ( ) ; \n\tmapView . translate ( width / NUM00 , height / NUM00 ) ; \n\t} \n"}, {"code": "public static double sampleSkew ( int size , double moment3 , double sampleVariance ) { \n\tint n = size ; \n\t$F96817 ( s , Math , sampleVariance ) double m3 = moment3 * n ; \n\treturn n * m3 / ( $F94029 ( n ) * s * s * s ) ; \n\t} \n"}, {"code": "public static void evolve ( Permutation p1 , Permutation p2 ) { \n\t$F2199 ( n , p1 ) if $F39465 ( n , p2 ) { \n\t\tthrow new FrameworkException $F580 ; \n\t\t} \n\t$F123945 ( cuttingPoint1 , PRNG , n ) int cuttingPoint2 = PRNG . nextInt ( n - NUM00 ) ; \n\tif ( cuttingPoint1 == cuttingPoint2 ) { \n\t\tcuttingPoint2 = n - NUM00 ; \n\t\t} \n\telse $F63332 ( cuttingPoint1 , cuttingPoint2 , swap ) $F2027 parent1 = p1 . toArray ( ) ; \n\t$F2027 parent2 = p2 . toArray ( ) ; \n\t$F4120 ( offspring1 , n ) $F4120 ( offspring2 , n ) $F4120 ( replacement1 , n ) $F4120 ( replacement2 , n ) $F99493 ( Arrays , replacement1 ) $F99493 ( Arrays , replacement2 ) for ( int i = cuttingPoint1 ; \n\ti <= cuttingPoint2 ; \n\ti ++ ) { \n\t\toffspring1 [ i ] = parent2 [ i ] ; \n\t\toffspring2 [ i ] = parent1 [ i ] ; \n\t\treplacement1 [ parent2 [ i ] ] = parent1 [ i ] ; \n\t\treplacement2 [ parent1 [ i ] ] = parent2 [ i ] ; \n\t\t} \n\tfor ( $F119 ( i , n ) ) { \n\t\tif $F61167 ( i , cuttingPoint1 , cuttingPoint2 ) { \n\t\t\tint n1 = parent1 [ i ] ; \n\t\t\tint m1 = replacement1 [ n1 ] ; \n\t\t\tint n2 = parent2 [ i ] ; \n\t\t\tint m2 = replacement2 [ n2 ] ; \n\t\t\twhile ( m1 != - NUM00 ) { \n\t\t\t\tn1 = m1 ; \n\t\t\t\tm1 = replacement1 [ m1 ] ; \n\t\t\t\t} \n\t\t\twhile ( m2 != - NUM00 ) { \n\t\t\t\tn2 = m2 ; \n\t\t\t\tm2 = replacement2 [ m2 ] ; \n\t\t\t\t} \n\t\t\toffspring1 [ i ] = n1 ; \n\t\t\toffspring2 [ i ] = n2 ; \n\t\t\t} \n\t\t} \n\tp1 . fromArray ( offspring1 ) ; \n\tp2 . fromArray ( offspring2 ) ; \n\t} \n"}, {"code": "private String extractSpan $F36827 ( spans , start , end ) throws IndexOutOfBoundsException { \n\tint offset = getFirstSpanOffset ( spans ) ; \n\tassert ( start >= offset ) ; \n\tassert ( end >= offset ) ; \n\tspans += HTML_OPEN_SPAN ; \n\tint substart = getSpanPos ( spans , start - offset ) ; \n\tint subend = getSpanPos ( spans , end - offset + NUM00 ) ; \n\t$F6669 ( spans , substart , subend ) } \n"}, {"code": "public void finished ( long chainLength ) { \n\tcurrentState = chainLength ; \n\tif ( loggers != null ) { \n\t\tfor ( Logger logger : loggers ) { \n\t\t\tlogger . log ( currentState ) ; \n\t\t\tlogger . stopLogging ( ) ; \n\t\t\t} \n\t\t} \n\tif ( showOperatorAnalysis ) { \n\t\tshowOperatorAnalysis ( System . out ) ; \n\t\t} \n\tif ( operatorAnalysisFile != null ) { \n\t\ttry { \n\t\t\tPrintStream out = new PrintStream $F4443 ( operatorAnalysisFile ) ; \n\t\t\tshowOperatorAnalysis ( out ) ; \n\t\t\t$F1206 ( out ) $F59 ( out ) } \n\t\t$F12241 ( e ) } \n\t} \n"}, {"code": "public boolean hasDelay $F72 { \n\treturn delay != - NUM00 ; \n\t} \n"}, {"code": "void pushSpaceHandling ( Attributes attrs ) throws org . xml . sax . SAXParseException { \n\t$F163382 ( value , attrs ) if ( null == value ) { \n\t\tm_spacePreserveStack . push ( m_spacePreserveStack . peekOrFalse ( ) ) ; \n\t\t} \n\telse if $F3057 ( value ) $F31742 ( m_spacePreserveStack , _BOOL ) else if $F3057 ( value ) $F31742 ( m_spacePreserveStack , _BOOL ) else { \n\t\tSAXSourceLocator locator = getLocator ( ) ; \n\t\t$F1875 ( handler , m_stylesheetProcessor ) try { \n\t\t\thandler . error ( new TransformerException ( XSLMessages . createMessage ( XSLTErrorResources . ER_ILLEGAL_XMLSPACE_VALUE , null ) , locator ) ) ; \n\t\t\t} \n\t\tcatch ( TransformerException te ) { \n\t\t\tthrow new org . xml . sax . SAXParseException ( te . getMessage ( ) , locator , te ) ; \n\t\t\t} \n\t\tm_spacePreserveStack . push ( m_spacePreserveStack . peek ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F1431 public void registerDefaultDeviceTypes $F72 { \n\tfinal $F12078 devicesList = DefaultPlatform . getDeviceServiceMap ( ) ; \n\tfor ( HashMap . Entry $F2538 entry : devicesList . entrySet ( ) ) { \n\t\t$F3477 ( key , entry ) $F840 ( value , entry ) try { \n\t\t\tregisterDeviceService ( ( Class < DeviceService > ) Class . forName ( key ) , ( Class < DiscoveryProvider > ) Class . forName ( value ) ) ; \n\t\t\t} \n\t\tcatch ( ClassNotFoundException e ) $F302 ( e ) } \n\t} \n"}, {"code": "protected void positiveClose $F72 $F5795 ( freeContent ) "}, {"code": "public InputStreamReader ( java . io . InputStream is , $F9738 ( enc ) ) throws $F42439 { \n\tinternal = is ; \n\tthis . enc = enc . intern ( ) ; \n\t} \n"}, {"code": "public int serverDelivery ( Object message , Object consumer , int deliveryCount ) throws Exception { \n\tProtonServerSenderContext protonSender = serverSenders . get ( consumer ) ; \n\tif ( protonSender != null ) { \n\t\treturn protonSender . deliverMessage ( message , deliveryCount ) ; \n\t\t} \n\t$F1082 } \n"}, {"code": "public static String decode ( AbstractMessage msg , Boolean ext , int header ) { \n\tif ( ext == _BOOL ) $F4915 ( decode , msg ) return NUM00 + header ; \n\t} \n"}, {"code": "private Instance votedReclassifyExample ( Instance example ) throws Exception { \n\tint classVotes [ ] = new int [ getNumClasses ( ) ] ; \n\t$F169226 ( i , classVotes ) for ( Enumeration < RuleList > e = new WekaEnumeration < RuleList > ( m_DecisionList ) ; \n\te . hasMoreElements ( ) ; \n\t) { \n\t\tRuleList rl = e . nextElement ( ) ; \n\t\tint classValue = ( int ) rl . classifyInstance ( example ) ; \n\t\tif ( classValue >= NUM00 ) { \n\t\t\tclassVotes [ classValue ] ++ ; \n\t\t\t} \n\t\t} \n\tint maxVote = NUM00 ; \n\tint vote = - NUM00 ; \n\tfor ( $F1139 ( i , classVotes ) ) { \n\t\t$F43613 ( classVotes , i , maxVote , vote ) } \n\tif ( vote >= NUM00 ) { \n\t\texample . setClassValue ( vote ) ; \n\t\t} \n\telse $F9451 return example ; \n\t} \n"}, {"code": "$F25527 ( redundantOpCompactThreshold , redundantOpCount , lruEntries ) "}, {"code": "public final int hashCode $F72 { \n\treturn System . identityHashCode ( this ) ; \n\t} \n"}, {"code": "public DTMAxisIterator cloneIterator $F72 { \n\t_isRestartable = _BOOL ; \n\ttry { \n\t\tfinal PrecedingIterator clone = ( PrecedingIterator ) super . clone ( ) ; \n\t\t$F49896 ( stackCopy , _stack ) $F7057 ( System , _stack , stackCopy ) clone . _stack = stackCopy ; \n\t\treturn clone ; \n\t\t} \n\tcatch ( CloneNotSupportedException e ) { \n\t\tthrow new DTMException ( XMLMessages . createXMLMessage ( XMLErrorResources . ER_ITERATOR_CLONE_NOT_SUPPORTED , null ) ) ; \n\t\t} \n\t} \n"}, {"code": "private BigQueryIO $F72 $F845 "}, {"code": "private boolean keyChainContainsPrivateKey ( Collection $F197968 keyChain , ECKey keyToAdd ) { \n\tif ( keyChain == null || keyToAdd == null ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\tfor ( ECKey loopKey : keyChain ) { \n\t\t\tif ( Arrays . equals ( keyToAdd . getPrivKeyBytes ( ) , loopKey . getPrivKeyBytes ( ) ) ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public ScriptBuilder data $F97 ( data ) { \n\tif $F9634 ( data ) return smallNum ( NUM00 ) ; \n\telse return data ( chunks . size ( ) , data ) ; \n\t} \n"}, {"code": "public RotationMatrixBuilder withThetas ( double theta ) { \n\tfor ( Plane plane : planes ) { \n\t\tplane . setTheta ( theta ) ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "private void writeUserRegistry ( LocalContainer container , File configDir , $F2540 ( users ) , $F224310 ( groups ) ) throws IOException { \n\t$F109797 ( usersXML , configDir ) PrintStream writer = ServerConfigUtils . open ( usersXML ) ; \n\t$F8438 ( writer ) for ( $F19318 ( user , users ) ) { \n\t\t$F21384 ( writer ) writer . print ( user . getKey ( ) ) ; \n\t\t$F21384 ( writer ) writer . print ( user . getValue ( ) ) ; \n\t\t$F8438 ( writer ) } \n\tfor ( Map . Entry $F14854 group : groups . entrySet ( ) ) { \n\t\t$F21384 ( writer ) writer . print ( group . getKey ( ) ) ; \n\t\t$F8438 ( writer ) for ( String member : group . getValue ( ) ) { \n\t\t\t$F21384 ( writer ) writer . print ( member ) ; \n\t\t\t$F8438 ( writer ) } \n\t\t$F8438 ( writer ) } \n\t$F8438 ( writer ) ServerConfigUtils . close ( writer ) ; \n\t} \n"}, {"code": "public static String valueOf ( double value ) $F23210 ( Double , value ) "}, {"code": "private static void decodeHanziSegment $F11771 ( bits , result , count ) throws FormatException { \n\t$F11774 ( count , bits , FormatException ) $F11778 ( buffer , count ) int offset = NUM00 ; \n\t$F11794 ( count , twoBytes , bits , assembledTwoBytes , buffer , offset ) try $F11799 ( result , buffer , StringUtils ) catch ( UnsupportedEncodingException ignored ) $F2172 ( FormatException ) } \n"}, {"code": "@ GenIgnore static Record createRecord ( String name , String address , Class itf , JsonObject metadata ) { \n\treturn createRecord ( name , address , itf . getName ( ) , metadata ) ; \n\t} \n"}, {"code": "public StopwatchCPU $F72 { \n\tthreadTimer = ManagementFactory . getThreadMXBean ( ) ; \n\tstart = threadTimer . getCurrentThreadCpuTime ( ) ; \n\t} \n"}, {"code": "public synchronized $F96 lookupAudio ( String inputtype , String locale , String voice , String outputparams , String style , String effects , String inputtext ) throws SQLException { \n\tif ( inputtype == null || locale == null || voice == null || inputtext == null ) $F895 $F5475 ( audio ) String query = $F3906 ( inputtype , locale , voice , outputparams , style ) + NUM00 + effects + NUM00 ; \n\t$F3915 ( st , connection , query ) $F3916 ( st , inputtext ) $F49 ( results , st ) if $F1682 ( results ) { \n\t\taudio = results . getBytes ( NUM00 ) ; \n\t\t} \n\treturn audio ; \n\t} \n"}, {"code": "public void addCondition ( final Condition condition ) { \n\tconditions . add ( condition ) ; \n\tcondition . setId ( conditionIdCounter ++ ) ; \n\t} \n"}, {"code": "public static $F96 readBytesFromByteBuffer ( ByteBuffer byteBuffer ) { \n\t$F159436 ( buffer , byteBuffer ) byteBuffer . get ( buffer ) ; \n\treturn buffer ; \n\t} \n"}, {"code": "public void findPackageAndClass $F72 throws IOException { \n\tpackageName = null ; \n\tclassName = null ; \n\tLineNumberReader reader = new LineNumberReader $F434 ( inputFile ) ; \n\ttry { \n\t\twhile ( className == null || packageName == null ) { \n\t\t\t$F27015 ( line , reader ) $F12576 ( line ) if ( packageName == null ) { \n\t\t\t\t$F275 ( matcher , PACKAGE_PATTERN , line ) if $F281 ( matcher ) $F1164 ( packageName , matcher ) } \n\t\t\tif ( className == null ) { \n\t\t\t\t$F275 ( matcher , CLASS_PATTERN , line ) if $F281 ( matcher ) $F1164 ( className , matcher ) } \n\t\t\t} \n\t\t$F23170 ( className ) } \n\t$F3229 ( reader ) } \n"}, {"code": "public static void log ( final String msg , final Throwable t ) { \n\tif ( DEBUG ) { \n\t\tlog ( msg ) ; \n\t\t$F156149 ( t , System ) } \n\t} \n"}, {"code": "public static $F4324 fetchRPTargetVirtualPools ( DbClient dbClient ) { \n\t$F66346 ( rpProtectedTargetVPools ) try { \n\t\t$F28584 vpoolProtectionSettingsURIs = dbClient . queryByType ( VpoolProtectionVarraySettings . class , _BOOL ) ; \n\t\tIterator < VpoolProtectionVarraySettings > vPoolProtectionSettingsItr = dbClient . queryIterativeObjects ( VpoolProtectionVarraySettings . class , vpoolProtectionSettingsURIs , _BOOL ) ; \n\t\twhile $F2921 ( vPoolProtectionSettingsItr ) { \n\t\t\tVpoolProtectionVarraySettings rSetting = vPoolProtectionSettingsItr . next ( ) ; \n\t\t\tif ( null != rSetting && ! NullColumnValueGetter . isNullURI ( rSetting . getVirtualPool ( ) ) ) { \n\t\t\t\trpProtectedTargetVPools . add ( rSetting . getVirtualPool ( ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F9877 ( _log , ex ) return rpProtectedTargetVPools ; \n\t} \n"}, {"code": "public NSData ( File file ) throws IOException { \n\tbytes = new byte [ $F5338 ( file ) ] ; \n\t$F18800 ( raf , file ) raf . read ( bytes ) ; \n\t$F59 ( raf ) } \n"}, {"code": "public int cardinality $F72 { \n\tint sum = NUM00 ; \n\tfor ( long l : this . data ) sum += Long . bitCount ( l ) ; \n\treturn sum ; \n\t} \n"}, {"code": "private String deEscapeLiteral ( String lit ) $F8480 ( lit ) "}, {"code": "private static URI cookieUri ( URI uri , HttpCookie cookie ) { \n\tURI cookieUri = uri ; \n\tif ( cookie . getDomain ( ) != null ) { \n\t\tString domain = cookie . getDomain ( ) ; \n\t\tif $F4432 ( domain ) $F3109 ( domain ) try { \n\t\t\tcookieUri = new URI ( uri . getScheme ( ) == null ? NUM00 : uri . getScheme ( ) , domain , $F101354 ( cookie ) ? NUM00 : cookie . getPath ( ) , null ) ; \n\t\t\t} \n\t\tcatch ( URISyntaxException e ) { \n\t\t\tLog . w ( TAG , e ) ; \n\t\t\t} \n\t\t} \n\treturn cookieUri ; \n\t} \n"}, {"code": "public static void i $F4353 ( msg , args ) { \n\t$F18748 ( allowI ) StackTraceElement caller = getCallerStackTraceElement ( ) ; \n\tString tag = generateTag ( caller ) ; \n\tif ( sLevel > LEVEL_INFO ) $F932 if $F3305 ( args ) { \n\t\t$F3869 ( msg , String , args ) } \n\tLog . i ( tag , msg ) ; \n\t} \n"}, {"code": "$F173551 ( sourceList , value , _BOOL ) "}, {"code": "public DNewKeyStoreType ( JFrame parent ) { \n\t$F36748 ( super , parent , Dialog ) $F15426 ( setTitle , res ) initComponents ( ) ; \n\t} \n"}, {"code": "protected void sprint ( long longField ) $F45719 ( sprint , String , longField ) "}, {"code": "private String substituteSubString $F1947 ( input , find , replace ) { \n\t$F1749 ( find_length , find ) $F1749 ( replace_length , replace ) $F7542 ( output , input ) $F12747 ( index , input , find ) int outputOffset = NUM00 ; \n\twhile ( index > - NUM00 ) { \n\t\toutput . replace ( index + outputOffset , index + outputOffset + find_length , replace ) ; \n\t\toutputOffset = outputOffset + ( replace_length - find_length ) ; \n\t\tindex = input . indexOf ( find , index + find_length ) ; \n\t\t} \n\t$F92 ( output ) } \n"}, {"code": "private int insertTestDataLocalDTTypes ( PreparedStatement pstmt ) throws Exception { \n\t$F270830 ( pstmt ) pstmt . setDate ( NUM00 , testSqlDate ) ; \n\tpstmt . setTime ( NUM00 , testSqlTime ) ; \n\tpstmt . setTimestamp ( NUM00 , testSqlTimeStamp ) ; \n\tpstmt . setTimestamp ( NUM00 , testSqlTimeStamp ) ; \n\tassertEquals ( NUM00 , pstmt . executeUpdate ( ) ) ; \n\t$F270830 ( pstmt ) pstmt . setObject ( NUM00 , testLocalDate ) ; \n\tpstmt . setObject ( NUM00 , testLocalTime ) ; \n\tpstmt . setObject ( NUM00 , testLocalDateTime ) ; \n\tpstmt . setObject ( NUM00 , testLocalDateTime ) ; \n\tassertEquals ( NUM00 , pstmt . executeUpdate ( ) ) ; \n\t$F270830 ( pstmt ) pstmt . setObject ( NUM00 , testLocalDate , JDBCType . DATE ) ; \n\tpstmt . setObject ( NUM00 , testLocalTime , JDBCType . TIME ) ; \n\tpstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . TIMESTAMP ) ; \n\tpstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . TIMESTAMP ) ; \n\tassertEquals ( NUM00 , pstmt . executeUpdate ( ) ) ; \n\t$F270830 ( pstmt ) pstmt . setObject ( NUM00 , testLocalDate , JDBCType . DATE , NUM00 ) ; \n\tpstmt . setObject ( NUM00 , testLocalTime , JDBCType . TIME , NUM00 ) ; \n\tpstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . TIMESTAMP , NUM00 ) ; \n\tpstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . TIMESTAMP , NUM00 ) ; \n\tassertEquals ( NUM00 , pstmt . executeUpdate ( ) ) ; \n\t$F270830 ( pstmt ) pstmt . setObject ( NUM00 , testLocalDate , JDBCType . VARCHAR ) ; \n\tpstmt . setObject ( NUM00 , testLocalTime , JDBCType . VARCHAR ) ; \n\tpstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . VARCHAR ) ; \n\tpstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . VARCHAR ) ; \n\tassertEquals ( NUM00 , pstmt . executeUpdate ( ) ) ; \n\t$F270830 ( pstmt ) pstmt . setObject ( NUM00 , testLocalDate , JDBCType . VARCHAR , NUM00 ) ; \n\tpstmt . setObject ( NUM00 , testLocalTime , JDBCType . VARCHAR , NUM00 ) ; \n\tpstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . VARCHAR , NUM00 ) ; \n\tpstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . VARCHAR , NUM00 ) ; \n\tassertEquals ( NUM00 , pstmt . executeUpdate ( ) ) ; \n\tif ( pstmt instanceof CallableStatement ) { \n\t\tCallableStatement cstmt = ( CallableStatement ) pstmt ; \n\t\tcstmt . setInt ( NUM00 , NUM00 ) ; \n\t\tcstmt . setDate ( NUM00 , testSqlDate ) ; \n\t\tcstmt . setTime ( NUM00 , testSqlTime ) ; \n\t\tcstmt . setTimestamp ( NUM00 , testSqlTimeStamp ) ; \n\t\tcstmt . setTimestamp ( NUM00 , testSqlTimeStamp ) ; \n\t\tassertEquals ( NUM00 , cstmt . executeUpdate ( ) ) ; \n\t\tcstmt . setInt ( NUM00 , NUM00 ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDate ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalTime ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDateTime ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDateTime ) ; \n\t\tassertEquals ( NUM00 , cstmt . executeUpdate ( ) ) ; \n\t\tcstmt . setInt ( NUM00 , NUM00 ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDate , JDBCType . DATE ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalTime , JDBCType . TIME ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . TIMESTAMP ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . TIMESTAMP ) ; \n\t\tassertEquals ( NUM00 , cstmt . executeUpdate ( ) ) ; \n\t\tcstmt . setInt ( NUM00 , NUM00 ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDate , JDBCType . DATE , NUM00 ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalTime , JDBCType . TIME , NUM00 ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . TIMESTAMP , NUM00 ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . TIMESTAMP , NUM00 ) ; \n\t\tassertEquals ( NUM00 , cstmt . executeUpdate ( ) ) ; \n\t\tcstmt . setInt ( NUM00 , NUM00 ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDate , JDBCType . VARCHAR ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalTime , JDBCType . VARCHAR ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . VARCHAR ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . VARCHAR ) ; \n\t\tassertEquals ( NUM00 , cstmt . executeUpdate ( ) ) ; \n\t\tcstmt . setInt ( NUM00 , NUM00 ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDate , JDBCType . VARCHAR , NUM00 ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalTime , JDBCType . VARCHAR , NUM00 ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . VARCHAR , NUM00 ) ; \n\t\tcstmt . setObject ( NUM00 , testLocalDateTime , JDBCType . VARCHAR , NUM00 ) ; \n\t\tassertEquals ( NUM00 , cstmt . executeUpdate ( ) ) ; \n\t\t$F1082 } \n\t$F1082 } \n"}, {"code": "public void removeListener ( final L listener ) { \n\t$F18062 ( Validate , listener ) listeners . remove ( listener ) ; \n\t} \n"}, {"code": "public void run $F72 { \n\tstart ( ) ; \n\ttry { \n\t\twhile ( _BOOL ) { \n\t\t\tThread . sleep ( interval ) ; \n\t\t\tprocessConfigMessages ( ) ; \n\t\t\t} \n\t\t} \n\tcatch ( InterruptedException e ) { \n\t\t$F301 ( e ) $F10910 ( log ) } \n\tfinally { \n\t\t$F973 ( log ) stop ( ) ; \n\t\t} \n\t} \n"}, {"code": "$F49286 ( value , absMin , absMax , absValue , Math ) "}, {"code": "private static DecoderResult createDecoderResultFromAmbiguousValues ( int ecLevel , $F2027 codewords , $F2027 erasureArray , $F2027 ambiguousIndexes , $F26353 ( ambiguousIndexValues ) ) throws FormatException , ChecksumException { \n\t$F22974 ( ambiguousIndexCount , ambiguousIndexes ) int tries = NUM00 ; \n\twhile ( tries -- > NUM00 ) { \n\t\tfor ( $F1139 ( i , ambiguousIndexCount ) ) { \n\t\t\tcodewords [ ambiguousIndexes [ i ] ] = ambiguousIndexValues [ i ] [ ambiguousIndexCount [ i ] ] ; \n\t\t\t} \n\t\ttry $F19580 ( decodeCodewords , codewords , ecLevel , erasureArray ) catch ( ChecksumException ignored ) $F845 if $F9634 ( ambiguousIndexCount ) $F159373 ( ChecksumException ) for ( $F1139 ( i , ambiguousIndexCount ) ) { \n\t\t\tif ( ambiguousIndexCount [ i ] < ambiguousIndexValues [ i ] . length - NUM00 ) { \n\t\t\t\tambiguousIndexCount [ i ] ++ ; \n\t\t\t\t$F597 } \n\t\t\telse { \n\t\t\t\tambiguousIndexCount [ i ] = NUM00 ; \n\t\t\t\tif $F74408 ( i , ambiguousIndexCount ) $F159373 ( ChecksumException ) } \n\t\t\t} \n\t\t} \n\tthrow ChecksumException . getChecksumInstance ( ) ; \n\t} \n"}, {"code": "private void readObject $F154558 ( s ) throws $F6427 { \n\t$F6428 ( s ) init ( getName ( ) , getMask ( actions ) ) ; \n\t} \n"}, {"code": "public int predBlockIndexForSourcesIndex ( int sourcesIndex ) { \n\treturn operands . get ( sourcesIndex ) . blockIndex ; \n\t} \n"}, {"code": "public LockableFileWriter ( File file , Charset encoding , boolean append , String lockDir ) throws IOException { \n\tsuper ( ) ; \n\tfile = file . getAbsoluteFile ( ) ; \n\tif ( file . getParentFile ( ) != null ) { \n\t\tFileUtils . forceMkdir ( file . getParentFile ( ) ) ; \n\t\t} \n\tif $F3444 ( file ) $F14525 if ( lockDir == null ) $F185872 ( lockDir , System ) $F1705 ( lockDirFile , lockDir ) FileUtils . forceMkdir ( lockDirFile ) ; \n\ttestLockDir ( lockDirFile ) ; \n\tlockFile = new File ( lockDirFile , file . getName ( ) + LCK ) ; \n\tcreateLock ( ) ; \n\tout = initWriter ( file , encoding , append ) ; \n\t} \n"}, {"code": "void appendProgramDescription ( final WrappingStringBuilder wb ) { \n\tif $F1264 ( mProgramDescription ) { \n\t\twb . append ( LS ) ; \n\t\twb . setWrapIndent ( NUM00 ) ; \n\t\twb . wrapTextWithNewLines ( mProgramDescription ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F96 decode ( String s ) throws $F3258 $F8587 ( decode , s , NO_OPTIONS ) "}, {"code": "$F1431 private static final URL toURL ( String location , boolean file ) { \n\tif ( file ) { \n\t\t$F1705 ( f , location ) if $F3428 ( f ) { \n\t\t\ttry { \n\t\t\t\treturn f . toURL ( ) ; \n\t\t\t\t} \n\t\t\tcatch ( MalformedURLException murl ) $F1337 } \n\t\telse $F1337 } \n\telse $F4915 ( getURL , location ) } \n"}, {"code": "protected Object parseValue ( String string ) { \n\t$F1384 ( openParen , string ) $F11991 ( type , string , openParen ) String value = string . substring ( openParen + NUM00 , $F1092 ( string ) ) ; \n\tif $F3057 ( type ) { \n\t\treturn value ; \n\t\t} \n\telse if $F3057 ( type ) { \n\t\treturn new Float ( Float . parseFloat ( value ) ) ; \n\t\t} \n\telse if $F3057 ( type ) { \n\t\treturn new Integer ( Integer . parseInt ( value ) ) ; \n\t\t} \n\telse if $F3057 ( type ) { \n\t\t$F17727 ( tok , value ) $F17729 ( size , tok ) $F4120 ( values , size ) for ( $F119 ( i , size ) ) { \n\t\t\t$F220101 ( fval , Float , tok ) values [ i ] = Math . round ( fval ) ; \n\t\t\t} \n\t\treturn values ; \n\t\t} \n\telse $F35098 ( type ) } \n"}, {"code": "public static String toUpperCase ( String string ) $F45889 ( changed , _BOOL , chars , string , i , ch ) "}, {"code": "$F82890 ( dout , getMessage ) "}, {"code": "$F1 public void update ( List < EnvVar > dataList ) { \n\t$F725 ( envVarList ) if ( dataList == null ) { \n\t\tfor ( EnvVar envVar : builtInEnvVarMap . values ( ) ) $F207 ( envVarList , envVar ) } \n\telse { \n\t\tfor ( EnvVar envVar : dataList ) { \n\t\t\tif $F20054 ( builtInEnvVarMap , envVar ) { \n\t\t\t\tenvVarList . add ( new EnvVar ( envVar , _BOOL ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tenvVarList . add ( new EnvVar ( envVar , _BOOL ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tsetEnvironmentVariableValues ( ) ; \n\t} \n"}, {"code": "public void makeClass ( String str , boolean caseless ) { \n\tfor ( $F1088 ( i , str ) ) makeClass ( str . charAt ( i ) , caseless ) ; \n\t} \n"}, {"code": "protected void notifyTimestampsToGateways ( EntryEventImpl event ) { \n\tVersionTagHolder updateTimeStampEvent = new VersionTagHolder ( event . getVersionTag ( ) ) ; \n\tupdateTimeStampEvent . setOperation ( Operation . UPDATE_VERSION_STAMP ) ; \n\tupdateTimeStampEvent . setKeyInfo ( event . getKeyInfo ( ) ) ; \n\tupdateTimeStampEvent . setGenerateCallbacks ( _BOOL ) ; \n\tupdateTimeStampEvent . distributedMember = event . getDistributedMember ( ) ; \n\tupdateTimeStampEvent . setNewEventId ( getSystem ( ) ) ; \n\tif ( event . getRegion ( ) instanceof BucketRegion ) { \n\t\tBucketRegion br = ( BucketRegion ) event . getRegion ( ) ; \n\t\tPartitionedRegion pr = br . getPartitionedRegion ( ) ; \n\t\tupdateTimeStampEvent . setRegion ( pr ) ; \n\t\tif ( pr . isParallelWanEnabled ( ) ) { \n\t\t\tbr . handleWANEvent ( updateTimeStampEvent ) ; \n\t\t\t} \n\t\tif ( pr . isInitialized ( ) ) { \n\t\t\tpr . notifyGatewaySender ( EnumListenerEvent . TIMESTAMP_UPDATE , updateTimeStampEvent ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tupdateTimeStampEvent . setRegion ( event . getRegion ( ) ) ; \n\t\tnotifyGatewaySender ( EnumListenerEvent . TIMESTAMP_UPDATE , updateTimeStampEvent ) ; \n\t\t} \n\t} \n"}, {"code": "public Token nextRegex ( Pattern pattern ) { \n\tif ( ! hasNextRegex ( pattern ) ) $F4638 $F275 ( matcher , anyMentionPattern , remaining ) if $F55142 ( matcher ) $F4638 final int start = currentPosition + matcher . start ( ) ; \n\tfinal int end = currentPosition + matcher . end ( ) ; \n\tstepTo ( end ) ; \n\treturn new Token ( this , start , end ) ; \n\t} \n"}, {"code": "public boolean removeNode ( ServiceNode node ) { \n\ttry $F20067 ( nodes , node ) $F7474 ( _BOOL ) } \n"}, {"code": "public String asString $F72 throws IOException { \n\tlong len = getContentLength ( ) ; \n\tByteArrayOutputStream buf ; \n\tif ( NUM00 < len ) { \n\t\tbuf = new ByteArrayOutputStream $F1047 ( len ) ; \n\t\t} \n\telse { \n\t\t$F1659 ( buf ) } \n\twriteTo ( buf ) ; \n\treturn decode ( buf . toByteArray ( ) , getCharacterEncoding ( ) ) ; \n\t} \n"}, {"code": "$F35402 ( context , cameraManager ) "}, {"code": "public void addContentItem ( ContentItem contentItem ) { \n\tif ( contentItems == null ) { \n\t\tcontentItems = new ArrayList < ContentItem > $F72 ; \n\t\t} \n\tcontentItems . add ( contentItem ) ; \n\t} \n"}, {"code": "public void execute $F72 throws IOException { \n\tString key = NUM00 + $F210831 ( System ) ; \n\t$F102426 ( b64Key , Base64 , key ) sendHandshakeRequest ( b64Key ) ; \n\treceiveHandshakeResponse ( b64Key ) ; \n\t} \n"}, {"code": "public void calculateMin ( double min ) { \n\tif ( this . min == - NUM00 ) $F6988 ( this , min ) else { \n\t\tthis . min = Math . min ( this . min , min ) ; \n\t\t} \n\t} \n"}, {"code": "private void emitUntil ( @ Nonnegative int taskCountAllowed ) throws IOException { \n\ttry { \n\t\twhile $F60125 ( emitQueue , taskCountAllowed ) { \n\t\t\tFuture $F2147 future = emitQueue . remove ( ) ; \n\t\t\t$F96 toWrite = future . get ( ) ; \n\t\t\tblockSizes . add ( toWrite . length ) ; \n\t\t\tout . write ( toWrite ) ; \n\t\t\t} \n\t\ttryEmit ( ) ; \n\t\t} \n\tcatch ( ExecutionException e ) $F5615 ( e ) catch ( InterruptedException e ) { \n\t\tthrow new InterruptedIOException $F72 ; \n\t\t} \n\t} \n"}, {"code": "void xrot ( double theta ) { \n\ttheta *= ( pi / NUM00 ) ; \n\t$F54226 ( ct , Math , theta ) $F33859 ( st , Math , theta ) $F193831 ( Nyx , yx , ct , zx , st ) $F193831 ( Nyy , yy , ct , zy , st ) $F193831 ( Nyz , yz , ct , zz , st ) $F193831 ( Nyo , yo , ct , zo , st ) $F193835 ( Nzx , zx , ct , yx , st ) $F193835 ( Nzy , zy , ct , yy , st ) $F193835 ( Nzz , zz , ct , yz , st ) $F193835 ( Nzo , zo , ct , yo , st ) yo = Nyo ; \n\tyx = Nyx ; \n\tyy = Nyy ; \n\tyz = Nyz ; \n\tzo = Nzo ; \n\tzx = Nzx ; \n\tzy = Nzy ; \n\tzz = Nzz ; \n\t} \n"}, {"code": "public void testAuditCompleted $F72 $F845 "}, {"code": "public static void scaleRectAboutCenter ( Rect r , float scale ) { \n\tif ( scale != NUM00 ) { \n\t\tint cx = r . centerX ( ) ; \n\t\tint cy = r . centerY ( ) ; \n\t\tr . offset ( - cx , - cy ) ; \n\t\tr . left = ( int ) ( r . left * scale + NUM00 ) ; \n\t\tr . top = ( int ) ( r . top * scale + NUM00 ) ; \n\t\tr . right = ( int ) ( r . right * scale + NUM00 ) ; \n\t\tr . bottom = ( int ) ( r . bottom * scale + NUM00 ) ; \n\t\tr . offset ( cx , cy ) ; \n\t\t} \n\t} \n"}, {"code": "private static CharHandler parseUnprintableExtCodes $F4374 ( codeStrings ) { \n\tif $F11845 ( codeStrings ) { \n\t\tthrow new IllegalStateException ( NUM00 + Arrays . asList ( codeStrings ) ) ; \n\t\t} \n\t$F96 bytes = codesToBytes ( codeStrings [ NUM00 ] , _BOOL ) ; \n\tif $F11845 ( bytes ) { \n\t\tthrow new IllegalStateException ( NUM00 + Arrays . asList ( codeStrings ) ) ; \n\t\t} \n\treturn new UnprintableExtCharHandler ( bytes [ NUM00 ] ) ; \n\t} \n"}, {"code": "$F183755 ( measureSpec , result , specMode , MeasureSpec , specSize , mPaintSelected , getPaddingTop , getPaddingBottom , Math ) "}, {"code": "public static boolean isNull ( URI id ) { \n\treturn ( id == null ) || NULL_URI . equals ( id ) ; \n\t} \n"}, {"code": "public void updatePendingList $F72 { \n\twhile ( $F3816 ( mPendingList ) && activeListHasRoom ( ) ) { \n\t\tDownloadInfoRunnable pending = mPendingList . get ( NUM00 ) ; \n\t\tpending . changeStatusState ( new ActiveState ( pending ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F1431 public static float valueRangeLimit $F2267 ( value , startValue , endValue ) { \n\tif ( value < Math . min ( startValue , endValue ) ) $F95700 ( Math , startValue , endValue ) if ( value > Math . max ( startValue , endValue ) ) $F85710 ( Math , startValue , endValue ) return value ; \n\t} \n"}, {"code": "protected void createTitle ( String title ) { \n\tString newTitle ; \n\tnewTitle = NUM00 + new Version $F72 ; \n\tif $F35625 ( title ) { \n\t\tnewTitle += NUM00 + title ; \n\t\t} \n\tsetTitle ( newTitle ) ; \n\t} \n"}, {"code": "public static boolean isConnected ( NetType netType , NetworkInfo networkInfo ) { \n\tif ( netType == NetType . Any && networkInfo != null && isConnected ( networkInfo ) ) return _BOOL ; \n\telse if ( netType == NetType . Wifi && networkInfo != null && networkInfo . getType ( ) == ConnectivityManager . TYPE_WIFI && isConnected ( networkInfo ) ) return _BOOL ; \n\telse if ( netType == NetType . Mobile && networkInfo != null && networkInfo . getType ( ) == ConnectivityManager . TYPE_MOBILE && isConnected ( networkInfo ) ) return _BOOL ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void deleteItem ( int position ) { \n\tif ( ! isDataListEmpty ( ) && position >= NUM00 && position < mDataList . size ( ) ) { \n\t\tmDataList . remove ( position ) ; \n\t\tnotifyItemRemoved ( position ) ; \n\t\t} \n\t} \n"}, {"code": "private int calculateGraidentChannel $F2026 ( sourceChannel , destChannel , distance , offset ) { \n\t$F25439 ( sourceChannel , destChannel ) float ratio = $F61779 ( offset ) / $F61779 ( distance ) ; \n\tint pos = ( int ) ( Math . abs ( sourceChannel - destChannel ) * ratio ) ; \n\tif ( sourceChannel > destChannel ) { \n\t\treturn sourceChannel - pos ; \n\t\t} \n\telse { \n\t\treturn sourceChannel + pos ; \n\t\t} \n\t} \n"}, {"code": "private void applyImageMatrix ( float width , float height , boolean center , boolean animate ) { \n\tif ( mBitmap != null && width > NUM00 && height > NUM00 ) { \n\t\t$F2268 ( mImageMatrix ) mImageMatrix . postTranslate ( ( width - mBitmap . getWidth ( ) ) / NUM00 , ( height - mBitmap . getHeight ( ) ) / NUM00 ) ; \n\t\tmapImagePointsByImageMatrix ( ) ; \n\t\tif ( mDegreesRotated > NUM00 ) { \n\t\t\tmImageMatrix . postRotate ( mDegreesRotated , BitmapUtils . getRectCenterX ( mImagePoints ) , BitmapUtils . getRectCenterY ( mImagePoints ) ) ; \n\t\t\tmapImagePointsByImageMatrix ( ) ; \n\t\t\t} \n\t\tfloat scale = Math . min ( width / BitmapUtils . getRectWidth ( mImagePoints ) , height / BitmapUtils . getRectHeight ( mImagePoints ) ) ; \n\t\tif ( mScaleType == ScaleType . FIT_CENTER || ( mScaleType == ScaleType . CENTER_INSIDE && scale < NUM00 ) || ( scale > NUM00 && mAutoZoomEnabled ) ) { \n\t\t\tmImageMatrix . postScale ( scale , scale , BitmapUtils . getRectCenterX ( mImagePoints ) , BitmapUtils . getRectCenterY ( mImagePoints ) ) ; \n\t\t\tmapImagePointsByImageMatrix ( ) ; \n\t\t\t} \n\t\tmImageMatrix . postScale ( mZoom , mZoom , BitmapUtils . getRectCenterX ( mImagePoints ) , BitmapUtils . getRectCenterY ( mImagePoints ) ) ; \n\t\tmapImagePointsByImageMatrix ( ) ; \n\t\tRectF cropRect = mCropOverlayView . getCropWindowRect ( ) ; \n\t\tcropRect . offset ( - mZoomOffsetX * mZoom , - mZoomOffsetY * mZoom ) ; \n\t\tif ( center ) { \n\t\t\tmZoomOffsetX = width > BitmapUtils . getRectWidth ( mImagePoints ) ? NUM00 : Math . max ( Math . min ( width / NUM00 - cropRect . centerX ( ) , - BitmapUtils . getRectLeft ( mImagePoints ) ) , getWidth ( ) - BitmapUtils . getRectRight ( mImagePoints ) ) / mZoom ; \n\t\t\tmZoomOffsetY = height > BitmapUtils . getRectHeight ( mImagePoints ) ? NUM00 : Math . max ( Math . min ( height / NUM00 - cropRect . centerY ( ) , - BitmapUtils . getRectTop ( mImagePoints ) ) , getHeight ( ) - BitmapUtils . getRectBottom ( mImagePoints ) ) / mZoom ; \n\t\t\t} \n\t\telse { \n\t\t\tmZoomOffsetX = Math . min ( Math . max ( mZoomOffsetX * mZoom , - cropRect . left ) , - cropRect . right + width ) / mZoom ; \n\t\t\tmZoomOffsetY = Math . min ( Math . max ( mZoomOffsetY * mZoom , - cropRect . top ) , - cropRect . bottom + height ) / mZoom ; \n\t\t\t} \n\t\tmImageMatrix . postTranslate ( mZoomOffsetX * mZoom , mZoomOffsetY * mZoom ) ; \n\t\tcropRect . offset ( mZoomOffsetX * mZoom , mZoomOffsetY * mZoom ) ; \n\t\tmCropOverlayView . setCropWindowRect ( cropRect ) ; \n\t\tmapImagePointsByImageMatrix ( ) ; \n\t\tif ( animate ) { \n\t\t\tmAnimation . setEndState ( mImagePoints , mImageMatrix ) ; \n\t\t\tmImageView . startAnimation ( mAnimation ) ; \n\t\t\t} \n\t\telse { \n\t\t\tmImageView . setImageMatrix ( mImageMatrix ) ; \n\t\t\t} \n\t\tupdateImageBounds ( _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "public static void addStartupListener ( StartUpListener s ) $F207 ( m_StartupListeners , s ) "}, {"code": "public static void closeQuiet ( $F5466 SelectionKey rsrc ) { \n\tif ( rsrc != null ) closeQuiet ( rsrc . channel ( ) ) ; \n\t} \n"}, {"code": "public CompletableFuture < NewFile > run $F72 { \n\tLOG . log ( Level . FINE , NUM00 , files . size ( ) ) ; \n\tCompletableFuture < NewFile > $F70223 ( fileCreation ) ; \n\tfinal List < TSData > fjpFiles = this . files ; \n\t$F62331 ( TASK_POOL ) $F9231 ( OUTSTANDING , fileCreation ) this . files = new LinkedList $F200 $F72 ; \n\treturn fileCreation ; \n\t} \n"}, {"code": "private static Key createDESKey $F5474 ( bytes , offset ) { \n\t$F12496 ( keyBytes ) $F154757 ( System , bytes , offset , keyBytes ) $F12496 ( material ) $F603 ( material , keyBytes ) $F154763 ( material , keyBytes ) $F154763 ( material , keyBytes ) $F154763 ( material , keyBytes ) $F154763 ( material , keyBytes ) $F154763 ( material , keyBytes ) $F154763 ( material , keyBytes ) material [ NUM00 ] = ( byte ) $F42449 ( keyBytes ) ; \n\toddParity ( material ) ; \n\treturn new SecretKeySpec ( material , NUM00 ) ; \n\t} \n"}, {"code": "$F2192 ( bits , result , byteSegments , codewordPosition , d1 , unrandomize255State , count , FormatException , bytes , i , uee ) "}, {"code": "static void checkDesc $F4708 ( desc , canBeVoid ) { \n\tint end = checkDesc ( desc , NUM00 , canBeVoid ) ; \n\tif $F20325 ( end , desc ) $F18931 ( desc ) } \n"}, {"code": "protected JsOutput newJsOutput ( Module m ) throws IOException { \n\treturn new JsOutput ( m , isCompilingLanguageModule ( ) ) ; \n\t} \n"}, {"code": "public String text $F72 { \n\t$F83 ( sb ) for ( Node node : nodes ) { \n\t\tsb . append ( node . getTextContent ( ) ) ; \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "private boolean scanExpr ( SymbolTable symbolTable , Tokens tokens , String data , int currentOffset , int endOffset ) throws XNIException { \n\tint ch ; \n\tint openParen = NUM00 ; \n\tint closeParen = NUM00 ; \n\tint nameOffset , dataOffset ; \n\tboolean isQName = _BOOL ; \n\tString name = null ; \n\tString prefix = null ; \n\tString schemeData = null ; \n\t$F280 ( schemeDataBuff ) while ( _BOOL ) { \n\t\t$F15290 ( currentOffset , endOffset ) ch = data . charAt ( currentOffset ) ; \n\t\twhile ( ch == NUM00 || ch == NUM00 || ch == NUM00 || ch == NUM00 ) { \n\t\t\tif ( ++ currentOffset == endOffset ) $F5153 ch = data . charAt ( currentOffset ) ; \n\t\t\t} \n\t\t$F15290 ( currentOffset , endOffset ) byte chartype = ( ch >= NUM00 ) ? CHARTYPE_NONASCII : fASCIICharMap [ ch ] ; \n\t\tswitch ( chartype ) { \n\t\t\tcase CHARTYPE_OPEN_PAREN : addToken ( tokens , Tokens . XPTRTOKEN_OPEN_PAREN ) ; \n\t\t\topenParen ++ ; \n\t\t\t++ currentOffset ; \n\t\t\t$F597 case CHARTYPE_CLOSE_PAREN : addToken ( tokens , Tokens . XPTRTOKEN_CLOSE_PAREN ) ; \n\t\t\tcloseParen ++ ; \n\t\t\t++ currentOffset ; \n\t\t\t$F597 case CHARTYPE_CARRET : case CHARTYPE_COLON : case CHARTYPE_DIGIT : case CHARTYPE_EQUAL : case CHARTYPE_LETTER : case CHARTYPE_MINUS : case CHARTYPE_NONASCII : case CHARTYPE_OTHER : case CHARTYPE_PERIOD : case CHARTYPE_SLASH : case CHARTYPE_UNDERSCORE : case CHARTYPE_WHITESPACE : if ( openParen == NUM00 ) { \n\t\t\t\tnameOffset = currentOffset ; \n\t\t\t\tcurrentOffset = scanNCName ( data , endOffset , currentOffset ) ; \n\t\t\t\tif ( currentOffset == nameOffset ) { \n\t\t\t\t\t$F54429 ( reportError , data ) return _BOOL ; \n\t\t\t\t\t} \n\t\t\t\tif ( currentOffset < endOffset ) $F7458 ( ch , data , currentOffset ) else $F44867 ( ch ) name = symbolTable . addSymbol ( data . substring ( nameOffset , currentOffset ) ) ; \n\t\t\t\tprefix = XMLSymbols . EMPTY_ \"STRING\" ; \n\t\t\t\tif ( ch == NUM00 ) { \n\t\t\t\t\tif ( ++ currentOffset == endOffset ) { \n\t\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t\t} \n\t\t\t\t\tch = data . charAt ( currentOffset ) ; \n\t\t\t\t\tprefix = name ; \n\t\t\t\t\tnameOffset = currentOffset ; \n\t\t\t\t\tcurrentOffset = scanNCName ( data , endOffset , currentOffset ) ; \n\t\t\t\t\t$F3627 ( currentOffset , nameOffset , _BOOL ) if ( currentOffset < endOffset ) $F7458 ( ch , data , currentOffset ) else $F44867 ( ch ) isQName = _BOOL ; \n\t\t\t\t\tname = symbolTable . addSymbol ( data . substring ( nameOffset , currentOffset ) ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( currentOffset != endOffset ) { \n\t\t\t\t\taddToken ( tokens , Tokens . XPTRTOKEN_SCHEMENAME ) ; \n\t\t\t\t\ttokens . addToken ( prefix ) ; \n\t\t\t\t\ttokens . addToken ( name ) ; \n\t\t\t\t\tisQName = _BOOL ; \n\t\t\t\t\t} \n\t\t\t\telse if ( currentOffset == endOffset ) { \n\t\t\t\t\taddToken ( tokens , Tokens . XPTRTOKEN_SHORTHAND ) ; \n\t\t\t\t\ttokens . addToken ( name ) ; \n\t\t\t\t\tisQName = _BOOL ; \n\t\t\t\t\t} \n\t\t\t\tcloseParen = NUM00 ; \n\t\t\t\t$F597 } \n\t\t\telse if ( openParen > NUM00 && closeParen == NUM00 && name != null ) { \n\t\t\t\tdataOffset = currentOffset ; \n\t\t\t\tcurrentOffset = scanData ( data , schemeDataBuff , endOffset , currentOffset ) ; \n\t\t\t\tif ( currentOffset == dataOffset ) { \n\t\t\t\t\t$F54429 ( reportError , data ) return _BOOL ; \n\t\t\t\t\t} \n\t\t\t\tif ( currentOffset < endOffset ) $F7458 ( ch , data , currentOffset ) else $F44867 ( ch ) schemeData = symbolTable . addSymbol ( schemeDataBuff . toString ( ) ) ; \n\t\t\t\taddToken ( tokens , Tokens . XPTRTOKEN_SCHEMEDATA ) ; \n\t\t\t\ttokens . addToken ( schemeData ) ; \n\t\t\t\topenParen = NUM00 ; \n\t\t\t\t$F97841 ( schemeDataBuff ) } \n\t\t\telse { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void addLine ( int startLine , String sourceFile , int repeatCount , int outputLine , int outputIncrement ) { \n\t_lines . add ( new Line ( startLine , sourceFile , repeatCount , outputLine , outputIncrement ) ) ; \n\t} \n"}, {"code": "public String ( StringBuffer stringbuffer ) { \n\toffset = NUM00 ; \n\tsynchronized ( stringbuffer ) { \n\t\tvalue = stringbuffer . shareValue ( ) ; \n\t\t$F3935 ( count , stringbuffer ) } \n\t} \n"}, {"code": "$F1654 ( all ) "}, {"code": "$F13735 ( prefix , namespace , attName , attValue , xmlWriter ) "}, {"code": "public Process executeAsync ( final CommandLine command , $F27504 ( environment ) , final ExecuteResultHandler handler ) throws IOException { \n\tif $F271542 ( workingDirectory ) $F124393 ( workingDirectory ) return executeInternal ( command , environment , workingDirectory , streamHandler , handler ) ; \n\t} \n"}, {"code": "public static Range iterateToFindDomainBounds ( XYDataset dataset , List visibleSeriesKeys , boolean includeInterval ) { \n\t$F19400 ( ParamChecks , dataset ) $F19400 ( ParamChecks , visibleSeriesKeys ) double minimum = Double . POSITIVE_INFINITY ; \n\tdouble maximum = Double . NEGATIVE_INFINITY ; \n\tif ( includeInterval && dataset instanceof IntervalXYDataset ) { \n\t\tIntervalXYDataset ixyd = ( IntervalXYDataset ) dataset ; \n\t\t$F19402 ( iterator , visibleSeriesKeys ) while $F2921 ( iterator ) { \n\t\t\t$F19406 ( seriesKey , iterator ) $F12747 ( series , dataset , seriesKey ) $F19407 ( itemCount , dataset , series ) for ( $F119 ( item , itemCount ) ) { \n\t\t\t\t$F19408 ( xvalue , ixyd , series , item ) double lvalue = ixyd . getStartXValue ( series , item ) ; \n\t\t\t\tdouble uvalue = ixyd . getEndXValue ( series , item ) ; \n\t\t\t\t$F19412 ( Double , xvalue , minimum , Math , maximum ) if $F2292 ( Double , lvalue ) $F23139 ( minimum , Math , lvalue ) if $F2292 ( Double , uvalue ) $F252908 ( maximum , Math , uvalue ) } \n\t\t\t} \n\t\t} \n\telse { \n\t\t$F19402 ( iterator , visibleSeriesKeys ) while $F2921 ( iterator ) { \n\t\t\t$F19406 ( seriesKey , iterator ) $F12747 ( series , dataset , seriesKey ) $F19407 ( itemCount , dataset , series ) for ( $F119 ( item , itemCount ) ) { \n\t\t\t\t$F19408 ( x , dataset , series , item ) $F19412 ( Double , x , minimum , Math , maximum ) } \n\t\t\t} \n\t\t} \n\tif ( minimum == Double . POSITIVE_INFINITY ) $F1337 else $F19420 ( minimum , maximum ) } \n"}, {"code": "public LibertyManagerClient $F72 $F845 "}, {"code": "private void checkComplianceAttributes ( AttrSet attrSet , boolean ignoreCompliance ) throws AMException { \n\tif ( ! ignoreCompliance && ComplianceServicesImpl . isComplianceUserDeletionEnabled ( ) ) { \n\t\tcomplianceImpl . verifyAttributes ( attrSet ) ; \n\t\t} \n\t} \n"}, {"code": "private void updateZoningMap ( UnManagedExportMask mask , $F15661 initiators , $F42521 storagePorts ) { \n\tZoneInfoMap zoningMap = networkDeviceController . getInitiatorsZoneInfoMap ( initiators , storagePorts ) ; \n\tfor ( ZoneInfo zoneInfo : zoningMap . values ( ) ) { \n\t\tlog . info ( NUM00 , new Object [ ] { \n\t\t\tzoneInfo . getZoneName ( ) , zoneInfo . getInitiatorWwn ( ) , zoneInfo . getPortWwn ( ) } \n\t\t) ; \n\t\t} \n\tmask . setZoningMap ( zoningMap ) ; \n\t} \n"}, {"code": "public InvitationStatus waitInvitationAnswer $F72 $F4915 ( waitInvitationAnswer , mRingingPeriod ) "}, {"code": "private boolean moveWithinSelectedRange ( JTable table , int dx , int dy , ListSelectionModel rsm , ListSelectionModel csm ) { \n\tint totalCount ; \n\tint minX , maxX , minY , maxY ; \n\tboolean rs = table . getRowSelectionAllowed ( ) ; \n\tboolean cs = table . getColumnSelectionAllowed ( ) ; \n\tif ( rs && cs ) { \n\t\ttotalCount = table . getSelectedRowCount ( ) * table . getSelectedColumnCount ( ) ; \n\t\tminX = csm . getMinSelectionIndex ( ) ; \n\t\tmaxX = csm . getMaxSelectionIndex ( ) ; \n\t\tminY = rsm . getMinSelectionIndex ( ) ; \n\t\tmaxY = rsm . getMaxSelectionIndex ( ) ; \n\t\t} \n\telse if ( rs ) { \n\t\ttotalCount = table . getSelectedRowCount ( ) ; \n\t\tminX = NUM00 ; \n\t\tmaxX = table . getColumnCount ( ) - NUM00 ; \n\t\tminY = rsm . getMinSelectionIndex ( ) ; \n\t\tmaxY = rsm . getMaxSelectionIndex ( ) ; \n\t\t} \n\telse if ( cs ) { \n\t\ttotalCount = table . getSelectedColumnCount ( ) ; \n\t\tminX = csm . getMinSelectionIndex ( ) ; \n\t\tmaxX = csm . getMaxSelectionIndex ( ) ; \n\t\tminY = NUM00 ; \n\t\tmaxY = table . getRowCount ( ) - NUM00 ; \n\t\t} \n\telse { \n\t\ttotalCount = NUM00 ; \n\t\tminX = maxX = minY = maxY = NUM00 ; \n\t\t} \n\tboolean stayInSelection ; \n\tif ( totalCount == NUM00 || ( totalCount == NUM00 && table . isCellSelected ( leadRow , leadColumn ) ) ) { \n\t\tstayInSelection = _BOOL ; \n\t\tmaxX = table . getColumnCount ( ) - NUM00 ; \n\t\tmaxY = table . getRowCount ( ) - NUM00 ; \n\t\tminX = Math . min ( NUM00 , maxX ) ; \n\t\tminY = Math . min ( NUM00 , maxY ) ; \n\t\t} \n\telse { \n\t\tstayInSelection = _BOOL ; \n\t\t} \n\tif ( dy == NUM00 && leadColumn == - NUM00 ) { \n\t\tleadColumn = minX ; \n\t\tleadRow = - NUM00 ; \n\t\t} \n\telse if ( dx == NUM00 && leadRow == - NUM00 ) { \n\t\tleadRow = minY ; \n\t\tleadColumn = - NUM00 ; \n\t\t} \n\telse if $F96093 ( dy , leadColumn ) { \n\t\tleadColumn = maxX ; \n\t\tleadRow = maxY + NUM00 ; \n\t\t} \n\telse if $F96093 ( dx , leadRow ) { \n\t\tleadRow = maxY ; \n\t\tleadColumn = maxX + NUM00 ; \n\t\t} \n\tleadRow = Math . min ( Math . max ( leadRow , minY - NUM00 ) , maxY + NUM00 ) ; \n\tleadColumn = Math . min ( Math . max ( leadColumn , minX - NUM00 ) , maxX + NUM00 ) ; \n\tdo { \n\t\tcalcNextPos ( dx , minX , maxX , dy , minY , maxY ) ; \n\t\t} \n\twhile ( stayInSelection && ! table . isCellSelected ( leadRow , leadColumn ) ) ; \n\treturn stayInSelection ; \n\t} \n"}, {"code": "private $F3789 xPrime ( int t ) { \n\t$F3789 x = new double [ NUM00 ] [ getNumLags ( ) * numVars ] ; \n\tfor ( $F50810 ( i , getNumLags ) ) { \n\t\t$F3789 yPrime = yPrime ( t - i - NUM00 ) ; \n\t\tSystem . arraycopy ( yPrime [ NUM00 ] , NUM00 , x [ NUM00 ] , i * numVars , numVars ) ; \n\t\t} \n\treturn x ; \n\t} \n"}, {"code": "private void readBinary ( final LittleEndianDataInputStream dis ) throws IOException { \n\t$F2980 ( RajLog ) $F71184 ( dis ) $F5952 ( facetCount , dis ) $F5415 verticesArr = $F401614 ( facetCount ) ; \n\t$F5415 normalsArr = $F401614 ( facetCount ) ; \n\t$F69133 ( indicesArr , facetCount ) $F12457 ( tempNorms ) int vertPos = NUM00 , normPos = NUM00 ; \n\tfor ( $F1139 ( i , indicesArr ) ) indicesArr [ i ] = i ; \n\twhile $F2892 ( dis ) { \n\t\tfor ( $F6268 ( j ) ) { \n\t\t\ttempNorms [ j ] = dis . readFloat ( ) ; \n\t\t\tif ( Float . isNaN ( tempNorms [ j ] ) || Float . isInfinite ( tempNorms [ j ] ) ) { \n\t\t\t\tRajLog . w ( NUM00 ) ; \n\t\t\t\ttempNorms [ NUM00 ] = NUM00 ; \n\t\t\t\ttempNorms [ NUM00 ] = NUM00 ; \n\t\t\t\ttempNorms [ NUM00 ] = NUM00 ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\tfor ( $F6268 ( j ) ) { \n\t\t\tnormalsArr [ normPos ++ ] = tempNorms [ NUM00 ] ; \n\t\t\tnormalsArr [ normPos ++ ] = tempNorms [ NUM00 ] ; \n\t\t\tnormalsArr [ normPos ++ ] = tempNorms [ NUM00 ] ; \n\t\t\t} \n\t\tfor ( $F6268 ( j ) ) verticesArr [ vertPos ++ ] = dis . readFloat ( ) ; \n\t\t$F71184 ( dis ) } \n\tmRootObject . setData ( verticesArr , normalsArr , null , null , indicesArr , _BOOL ) ; \n\t} \n"}, {"code": "$F1654 ( components ) "}, {"code": "public void testRoundMathContextPrecision0 $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\tint precision = NUM00 ; \n\tRoundingMode rm = RoundingMode . HALF_UP ; \n\t$F9512 ( mc , precision , rm ) String res = NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) BigDecimal result = aNumber . round ( mc ) ; \n\t$F1925 ( assertEquals , res , result ) $F1928 ( assertEquals , aScale , result ) } \n"}, {"code": "public void omitLessFreq $F72 { \n\t$F8249 ( name ) int threshold = n_words [ NUM00 ] / LESS_FREQ_RATIO ; \n\t$F46169 ( threshold , MINIMUM_FREQ ) $F23720 ( keys , freq ) int roman = NUM00 ; \n\tfor ( $F43656 ( i , keys ) ) { \n\t\t$F13714 ( key , i ) $F85651 ( count , freq , key ) if ( count <= threshold ) { \n\t\t\tn_words [ $F1092 ( key ) ] -= count ; \n\t\t\t$F7042 ( i ) } \n\t\telse { \n\t\t\tif $F11809 ( key ) { \n\t\t\t\troman += count ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( roman < n_words [ NUM00 ] / NUM00 ) { \n\t\t$F23720 ( keys2 , freq ) for ( $F43656 ( i , keys2 ) ) { \n\t\t\t$F13714 ( key , i ) if $F11809 ( key ) { \n\t\t\t\tn_words [ $F1092 ( key ) ] -= freq . get ( key ) ; \n\t\t\t\t$F7042 ( i ) } \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public synchronized String toString $F72 { \n\t$F40722 ( elementCount ) int length = elementCount - NUM00 ; \n\tStringBuffer buffer = new StringBuffer ( elementCount * NUM00 ) ; \n\t$F84 ( buffer ) for ( $F119 ( i , length ) ) { \n\t\t$F40728 ( elementData , i , this , buffer ) $F84 ( buffer ) } \n\t$F40728 ( elementData , length , this , buffer ) $F84 ( buffer ) $F92 ( buffer ) } \n"}, {"code": "public static PublicKeySelector fromString ( String type ) { \n\tif ( type != null ) { \n\t\tfor ( $F40424 ( keySelector , PublicKeySelector ) ) { \n\t\t\tif ( $F206388 ( type , keySelector ) ) { \n\t\t\t\treturn keySelector ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public static SortedMap $F15329 generateSortedTagMap ( $F806 partitions , $F2540 ( tags ) ) { \n\tfinal SortedMap $F15329 tagHashMap = new TreeMap $F15329 $F72 ; \n\tfor ( $F19318 ( entry , tags ) ) { \n\t\t$F71216 ( tagName , entry ) final String tagValue = entry . getValue ( ) ; \n\t\tif ( tagValue == null || isPartitionTag ( partitions , tagName ) ) $F598 tagHashMap . put ( tagName . hashCode ( ) , tagValue . hashCode ( ) ) ; \n\t\t} \n\treturn tagHashMap ; \n\t} \n"}, {"code": "public static void describeShapeDetail ( Shape shape , double flattening ) { \n\t$F38394 ( pi2 , shape ) ; \n\tFlatteningPathIterator pi = new FlatteningPathIterator ( pi2 , flattening ) ; \n\t$F1993 ( coords ) int pointCount = NUM00 ; \n\t$F151102 ( Debug , flattening ) while $F38402 ( pi ) { \n\t\t$F38403 ( type , pi , coords ) Debug . output ( NUM00 + type + NUM00 + ( pointCount ++ ) + NUM00 + coords [ NUM00 ] + NUM00 + coords [ NUM00 ] ) ; \n\t\t$F24630 ( pi ) } \n\t$F151102 ( Debug , pointCount ) } \n"}, {"code": "protected static String shortenClassname ( String nam , char c ) { \n\tfinal int lastdot = nam . lastIndexOf ( c ) ; \n\tif ( lastdot >= NUM00 ) $F31399 ( nam , lastdot ) return nam ; \n\t} \n"}, {"code": "public void add ( T graphic ) $F250537 ( mLock , mGraphics , graphic , postInvalidate ) "}, {"code": "public String toString $F72 { \n\t$F280 ( sbuf ) TypeParameter . toString ( sbuf , typeParams ) ; \n\t$F84 ( sbuf ) Type . toString ( sbuf , params ) ; \n\t$F84 ( sbuf ) sbuf . append ( retType ) ; \n\tif $F3305 ( exceptions ) { \n\t\t$F84 ( sbuf ) Type . toString ( sbuf , exceptions ) ; \n\t\t} \n\t$F92 ( sbuf ) } \n"}, {"code": "$F1 public void flip ( X11ComponentPeer peer , Component target , VolatileImage xBackBuffer , int x1 , int y1 , int x2 , int y2 , BufferCapabilities . FlipContents flipAction ) { \n\tif ( flipAction == BufferCapabilities . FlipContents . COPIED ) { \n\t\tSurfaceManager vsm = SurfaceManager . getManager ( xBackBuffer ) ; \n\t\tSurfaceData sd = vsm . getPrimarySurfaceData ( ) ; \n\t\tif ( sd instanceof GLXVSyncOffScreenSurfaceData ) { \n\t\t\tGLXVSyncOffScreenSurfaceData vsd = ( GLXVSyncOffScreenSurfaceData ) sd ; \n\t\t\tSurfaceData bbsd = vsd . getFlipSurface ( ) ; \n\t\t\tGraphics2D bbg = new SunGraphics2D ( bbsd , Color . black , Color . white , null ) ; \n\t\t\ttry $F116712 ( bbg , xBackBuffer ) $F47533 ( bbg ) } \n\t\telse { \n\t\t\t$F27516 ( g , peer ) try { \n\t\t\t\tg . drawImage ( xBackBuffer , x1 , y1 , x2 , y2 , x1 , y1 , x2 , y2 , null ) ; \n\t\t\t\t} \n\t\t\t$F47533 ( g ) $F665 } \n\t\t} \n\telse if ( flipAction == BufferCapabilities . FlipContents . PRIOR ) $F932 OGLSurfaceData . swapBuffers ( peer . getContentWindow ( ) ) ; \n\tif ( flipAction == BufferCapabilities . FlipContents . BACKGROUND ) { \n\t\t$F27516 ( g , xBackBuffer ) try { \n\t\t\tg . setColor ( target . getBackground ( ) ) ; \n\t\t\t$F116732 ( g , xBackBuffer ) } \n\t\t$F47533 ( g ) } \n\t} \n"}, {"code": "public boolean addProperty ( OwlProperty property ) { \n\tproperty . addRestriction ( this ) ; \n\t$F20805 ( properties , property ) } \n"}, {"code": "public static GoogleAnalytics initialiseGoogleAnalytics ( Context context , String trackerId , final ExceptionParser callback ) { \n\tmAnalytics = GoogleAnalytics . getInstance ( context ) ; \n\tmAnalytics . setLocalDispatchPeriod ( NUM00 ) ; \n\tmTracker = mAnalytics . newTracker ( trackerId ) ; \n\tmTracker . enableExceptionReporting ( _BOOL ) ; \n\tmTracker . enableAutoActivityTracking ( _BOOL ) ; \n\tThread . UncaughtExceptionHandler handler = Thread . getDefaultUncaughtExceptionHandler ( ) ; \n\tif ( handler != null && handler instanceof ExceptionReporter ) { \n\t\tExceptionReporter exceptionReporter = ( ExceptionReporter ) handler ; \n\t\texceptionReporter . setExceptionParser ( callback ) ; \n\t\tThread . setDefaultUncaughtExceptionHandler ( exceptionReporter ) ; \n\t\t$F13527 ( Log , LOG_TAG ) } \n\telse $F13955 ( Log , LOG_TAG ) return mAnalytics ; \n\t} \n"}, {"code": "void onMoved $F72 { \n\tdouble diff = System . currentTimeMillis ( ) - timeStamp ; \n\ttimeStamp = NUM00 ; \n\tif ( diff > DISCARD_THRESHOLD ) $F932 double recentJitter = NUM00 ; \n\tdouble sum = NUM00 ; \n\tfor ( $F119 ( i , VECTOR_LENGTH ) ) { \n\t\tdouble old = times [ i ] ; \n\t\t$F181889 ( avg , diff , old ) recentJitter += Math . abs ( old - diff ) ; \n\t\ttimes [ i ] = avg ; \n\t\tdiff = old ; \n\t\tsum += avg ; \n\t\t} \n\trecentJitter /= NUM00 ; \n\tjitter = ( jitter + NUM00 * Math . max ( jitter , recentJitter ) + recentJitter ) / NUM00 ; \n\tprediction = TURN_LENGTH / ( sum / VECTOR_LENGTH + jitter ) ; \n\t$F4377 ( wm , WtWindowManager ) wm . setProperty ( SPEED_PROPERTY , Double . toString ( prediction ) ) ; \n\twm . setProperty ( JITTER_PROPERTY , Double . toString ( jitter ) ) ; \n\t} \n"}, {"code": "public ServiceID ( DataInput in ) throws IOException { \n\tthis . mostSig = in . readLong ( ) ; \n\tthis . leastSig = in . readLong ( ) ; \n\t} \n"}, {"code": "public void onEnterElementConsumed $F42838 ( uri , localName , qname , atts ) throws SAXException { \n\tattStack . push ( currentAtts = new AttributesImpl ( atts ) ) ; \n\tnsEffectiveStack . push ( new Integer ( nsEffectivePtr ) ) ; \n\t$F8935 ( nsEffectivePtr , namespaces ) } \n"}, {"code": "private void addFinally ( ArrayList returnList , Stmnt finallyBlock ) throws CompileError { \n\tBytecode bc = bytecode ; \n\t$F2199 ( n , returnList ) for ( $F1316 ( i , n ) ) { \n\t\tfinal $F2027 ret = ( $F2027 ) returnList . get ( i ) ; \n\t\tint pc = ret [ NUM00 ] ; \n\t\tbc . write16bit ( pc , bc . currentPc ( ) - pc + NUM00 ) ; \n\t\tReturnHook hook = new JsrHook2 ( this , ret ) ; \n\t\tfinallyBlock . accept ( this ) ; \n\t\thook . remove ( this ) ; \n\t\tif ( ! hasReturned ) { \n\t\t\tbc . addOpcode ( Opcode . GOTO ) ; \n\t\t\tbc . addIndex ( pc + NUM00 - bc . currentPc ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public Object nextMeta $F72 throws JSONException { \n\tchar c ; \n\tchar q ; \n\tdo $F20182 ( c , next ) while $F104645 ( Character , c ) ; \n\tswitch ( c ) { \n\t\t$F3366 throw syntaxError ( NUM00 ) ; \n\t\t$F1262 return XML . LT ; \n\t\t$F1262 return XML . GT ; \n\t\t$F1262 return XML . SLASH ; \n\t\t$F136822 ( XML ) $F1262 return XML . BANG ; \n\t\t$F1262 return XML . QUEST ; \n\t\t$F1262 $F1262 q = c ; \n\t\tfor ( $F589 ) { \n\t\t\tc = next ( ) ; \n\t\t\tif ( c == NUM00 ) $F25983 ( syntaxError ) if ( c == q ) $F29943 ( Boolean ) } \n\t\t$F1267 for ( $F589 ) { \n\t\t\tc = next ( ) ; \n\t\t\tif $F104645 ( Character , c ) $F29943 ( Boolean ) switch ( c ) { \n\t\t\t\t$F3366 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 $F1262 back ( ) ; \n\t\t\t\treturn Boolean . TRUE ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F9863 ( child , dx , dy , _BOOL , checkHorizontal , mCallback , checkVertical , mTouchSlop , Math ) "}, {"code": "public static void writeJSONString ( Collection collection , Writer out ) throws IOException $F50078 ( collection , out , first , _BOOL , iter , value , JSONValue ) "}, {"code": "protected $F2027 readColorTable ( final int ncolors ) { \n\tfinal int nbytes = NUM00 * ncolors ; \n\t$F10498 ( tab ) $F4727 ( c , nbytes ) try { \n\t\trawData . get ( c ) ; \n\t\t$F4470 ( tab ) int i = NUM00 ; \n\t\tint j = NUM00 ; \n\t\twhile ( i < ncolors ) { \n\t\t\tfinal int r = ( c [ j ++ ] ) & NUM00 ; \n\t\t\tfinal int g = ( c [ j ++ ] ) & NUM00 ; \n\t\t\tfinal int b = ( c [ j ++ ] ) & NUM00 ; \n\t\t\ttab [ i ++ ] = NUM00 | ( r < < NUM00 ) | ( g < < NUM00 ) | b ; \n\t\t\t} \n\t\t} \n\tcatch ( final BufferUnderflowException e ) { \n\t\tLog . w ( TAG , NUM00 , e ) ; \n\t\tstatus = STATUS_FORMAT_ERROR ; \n\t\t} \n\treturn tab ; \n\t} \n"}, {"code": "void touch ( boolean openReadOnly ) throws IOException { \n\tif ( isReadOnly || openReadOnly ) $F14525 $F3224 ( lastModified , System ) } \n"}, {"code": "void pushImportURL ( String hrefUrl ) $F31742 ( m_importStack , hrefUrl ) "}, {"code": "@ SneakyThrows public void addKeyToKeystore ( KeyStore keyStore , X509Certificate cert , RSAPrivateKey privateKey , String alias , String password ) { \n\tKeyStore . PasswordProtection pass = new KeyStore . PasswordProtection $F81517 ( password ) ; \n\t$F65927 certificateChain = { \n\t\tcert } \n\t; \n\tkeyStore . setEntry ( alias , new KeyStore . PrivateKeyEntry ( privateKey , certificateChain ) , pass ) ; \n\t} \n"}, {"code": "public boolean needsReload ( File file ) $F298 ( fFilesToReoad , file ) "}, {"code": "protected int drawLegend ( Canvas canvas , DefaultRenderer renderer , $F806 titles , int left , int right , int y , int width , int height , int legendSize , Paint paint , boolean calculate ) { \n\tfloat size = NUM00 ; \n\tif ( renderer . isShowLegend ( ) ) { \n\t\tfloat currentX = left ; \n\t\tfloat currentY = y + height - legendSize + size ; \n\t\t$F175116 ( paint , Component ) paint . setTextSize ( renderer . getLegendTextSize ( ) ) ; \n\t\tint sLength = Math . min ( titles . length , renderer . getSeriesRendererCount ( ) ) ; \n\t\tfor ( $F119 ( i , sLength ) ) { \n\t\t\tSimpleSeriesRenderer r = renderer . getSeriesRendererAt ( i ) ; \n\t\t\tfinal float lineSize = getLegendShapeWidth ( i ) ; \n\t\t\tif ( r . isShowLegendItem ( ) ) { \n\t\t\t\tString text = titles [ i ] ; \n\t\t\t\tif ( titles . length == renderer . getSeriesRendererCount ( ) ) { \n\t\t\t\t\t$F14782 ( paint , r ) } \n\t\t\t\telse { \n\t\t\t\t\tpaint . setColor ( ColorUtil . LTGRAY ) ; \n\t\t\t\t\t} \n\t\t\t\t$F5415 widths = new float $F31781 ( text ) ; \n\t\t\t\tpaint . getTextWidths ( text , widths ) ; \n\t\t\t\tfloat sum = NUM00 ; \n\t\t\t\tfor ( float value : widths ) { \n\t\t\t\t\tsum += value ; \n\t\t\t\t\t} \n\t\t\t\tfloat extraSize = lineSize + NUM00 + sum ; \n\t\t\t\tfloat currentWidth = currentX + extraSize ; \n\t\t\t\tif ( i > NUM00 && getExceed ( currentWidth , renderer , right , width ) ) { \n\t\t\t\t\tcurrentX = left ; \n\t\t\t\t\tcurrentY += renderer . getLegendTextSize ( ) ; \n\t\t\t\t\tsize += renderer . getLegendTextSize ( ) ; \n\t\t\t\t\tcurrentWidth = currentX + extraSize ; \n\t\t\t\t\t} \n\t\t\t\tif ( getExceed ( currentWidth , renderer , right , width ) ) { \n\t\t\t\t\tfloat maxWidth = right - currentX - lineSize - NUM00 ; \n\t\t\t\t\tif ( isVertical ( renderer ) ) { \n\t\t\t\t\t\tmaxWidth = width - currentX - lineSize - NUM00 ; \n\t\t\t\t\t\t} \n\t\t\t\t\tint nr = paint . breakText ( text , _BOOL , maxWidth , widths ) ; \n\t\t\t\t\ttext = $F30497 ( text , nr ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( ! calculate ) { \n\t\t\t\t\tdrawLegendShape ( canvas , r , currentX , currentY , i , paint ) ; \n\t\t\t\t\tdrawString ( canvas , text , currentX + lineSize + NUM00 , currentY + NUM00 , paint ) ; \n\t\t\t\t\t} \n\t\t\t\tcurrentX += extraSize ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn Math . round ( size + renderer . getLegendTextSize ( ) ) ; \n\t} \n"}, {"code": "public PutRepositoryRequest source $F97 ( repositoryDefinition ) { \n\treturn $F39529 ( source , repositoryDefinition ) ; \n\t} \n"}, {"code": "private void disableButtons $F72 { \n\tsetFireEnabled ( _BOOL ) ; \n\tsetSkipEnabled ( _BOOL ) ; \n\tsetTwistEnabled ( _BOOL ) ; \n\tsetNextEnabled ( _BOOL ) ; \n\tbutDone . setEnabled ( _BOOL ) ; \n\tsetFlipArmsEnabled ( _BOOL ) ; \n\tsetFireModeEnabled ( _BOOL ) ; \n\tsetNextTargetEnabled ( _BOOL ) ; \n\t} \n"}, {"code": "public boolean isAdditiveNumber ( String num ) { \n\t$F1749 ( n , num ) for ( int i = NUM00 ; \n\ti <= n / NUM00 ; \n\ti ++ ) { \n\t\tif ( $F4431 ( num ) && i > NUM00 ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tBigInteger num1 = new BigInteger ( num . substring ( NUM00 , i ) ) ; \n\t\tfor ( int j = NUM00 ; \n\t\tMath . max ( i , j ) <= n - i - j ; \n\t\tj ++ ) { \n\t\t\tif ( num . charAt ( i ) == NUM00 && j > NUM00 ) $F5153 BigInteger num2 = new BigInteger ( num . substring ( i , i + j ) ) ; \n\t\t\tif ( isAdditiveNumber ( num1 , num2 , i + j , num ) ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public void write ( String str ) { \n\tint start = NUM00 ; \n\twhile $F7007 ( start , str ) { \n\t\tint end = $F424314 ( Math , start , MAX_MESSAGE_LENGTH , str ) ; \n\t\tLog . i ( TAG , str . substring ( start , end ) ) ; \n\t\tstart = end ; \n\t\t} \n\t} \n"}, {"code": "protected void addToQuarantineQueue ( NodePortTuple npt ) $F116364 ( quarantineQueue , npt , _BOOL ) "}, {"code": "private CarbonDictionarySortInfo createColumnSortInfo ( CarbonDictionarySortModel [ ] dictionarySortModels ) { \n\t$F2027 sortIndex ; \n\t$F2027 sortIndexInverted ; \n\tArrays . sort ( dictionarySortModels ) ; \n\t$F14244 ( sortIndex , dictionarySortModels ) $F14244 ( sortIndexInverted , dictionarySortModels ) for ( $F1139 ( i , dictionarySortModels ) ) { \n\t\tCarbonDictionarySortModel dictionarySortModel = dictionarySortModels [ i ] ; \n\t\tsortIndex [ i ] = dictionarySortModel . getKey ( ) ; \n\t\tsortIndexInverted [ dictionarySortModel . getKey ( ) - NUM00 ] = i + NUM00 ; \n\t\t} \n\tdictionarySortModels = null ; \n\t$F3807 sortIndexList = convertToList ( sortIndex ) ; \n\t$F3807 sortIndexInvertedList = convertToList ( sortIndexInverted ) ; \n\treturn new CarbonDictionarySortInfo ( sortIndexList , sortIndexInvertedList ) ; \n\t} \n"}, {"code": "private void addFeature ( JsonNode feature , int index ) { \n\tPointFeature feat = null ; \n\ttry { \n\t\tfeat = PointFeature . fromJsonNode ( feature ) ; \n\t\t} \n\tcatch ( EmptyPolygonException e ) $F100849 ( LOG ) catch ( UnsupportedGeometryException e ) { \n\t\tLOG . warn ( e . message ) ; \n\t\t$F665 } \n\t$F2329 ( feat ) addFeature ( feat , index ) ; \n\t} \n"}, {"code": "public BitString ( final String value ) { \n\t$F43187 ( this , value ) for ( $F1088 ( i , value ) ) { \n\t\tif $F11983 ( value , i ) { \n\t\t\tsetBit ( value . length ( ) - ( i + NUM00 ) , _BOOL ) ; \n\t\t\t} \n\t\telse if $F20317 ( value , i ) $F18931 ( i ) } \n\t} \n"}, {"code": "public void sort ( Comparator $F7504 comparator ) $F57005 ( Collections , individuals , comparator ) "}, {"code": "public void write ( Writer writer ) throws Exception { \n\twriter . write ( toString ( ) ) ; \n\t$F1206 ( writer ) } \n"}, {"code": "public SafeAsyncTask $F72 { \n\tthis . executor = DEFAULT_EXECUTOR ; \n\t} \n"}, {"code": "public static boolean isCglibRenamedMethod ( Method renamedMethod ) { \n\t$F20605 ( name , renamedMethod ) if $F7311 ( name , CGLIB_RENAMED_METHOD_PREFIX ) { \n\t\t$F22867 ( i , name ) while ( i >= NUM00 && $F69553 ( Character , name , i ) ) { \n\t\t\ti -- ; \n\t\t\t} \n\t\treturn ( $F9605 ( i , CGLIB_RENAMED_METHOD_PREFIX ) && $F46112 ( i , name ) && $F11983 ( name , i ) ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public PWResetException ( String bundleName , String errCode , $F131 args ) { \n\tsuper ( bundleName , errCode , args ) ; \n\t$F136190 ( errList ) $F3876 ( errList , getMessage ) } \n"}, {"code": "public static $F806 unionArrays $F159246 ( array1 , array2 ) { \n\t$F1933 ( array1 , array2 ) $F1933 ( array2 , array1 ) $F116112 ( set ) $F9629 ( set , Arrays , array1 ) $F9629 ( set , Arrays , array2 ) $F14862 ( set ) } \n"}, {"code": "boolean isStateChange ( XDecoratedPeer window , XPropertyEvent e ) { \n\tif ( ! window . isShowing ( ) ) { \n\t\tstateLog . finer ( NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tint wm_state = window . getWMState ( ) ; \n\tif ( wm_state == XUtilConstants . WithdrawnState ) { \n\t\tstateLog . finer ( NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\tif $F935 ( stateLog , PlatformLogger ) $F18853 ( stateLog , wm_state ) } \n\tboolean is_state_change = _BOOL ; \n\tif ( e . get_atom ( ) == XA_WM_STATE . getAtom ( ) ) { \n\t\tis_state_change = _BOOL ; \n\t\t} \n\tfor ( XStateProtocol proto : getProtocols ( XStateProtocol . class ) ) { \n\t\tis_state_change |= proto . isStateChange ( e ) ; \n\t\tif ( stateLog . isLoggable ( PlatformLogger . Level . FINEST ) ) { \n\t\t\tstateLog . finest ( proto + NUM00 + is_state_change ) ; \n\t\t\t} \n\t\t} \n\treturn is_state_change ; \n\t} \n"}, {"code": "$F1 public XObject execute ( XPathContext xctxt ) throws $F1872 { \n\tNode xpathOwnerNode = ( Node ) xctxt . getOwnerObject ( ) ; \n\t$F1338 ( xpathOwnerNode ) int xpathOwnerNodeDTM = xctxt . getDTMHandleFromNode ( xpathOwnerNode ) ; \n\tint currentNode = xctxt . getCurrentNode ( ) ; \n\tDTM dtm = xctxt . getDTM ( currentNode ) ; \n\tint docContext = dtm . getDocument ( ) ; \n\tif ( DTM . NULL == docContext ) { \n\t\terror ( xctxt , XPATHErrorResources . ER_CONTEXT_HAS_NO_OWNERDOC , null ) ; \n\t\t} \n\t{ \n\t\tDocument currentDoc = XMLUtils . getOwnerDocument ( dtm . getNode ( currentNode ) ) ; \n\t\tDocument xpathOwnerDoc = XMLUtils . getOwnerDocument ( xpathOwnerNode ) ; \n\t\tif ( currentDoc != xpathOwnerDoc ) { \n\t\t\tthrow new TransformerException ( I18n . translate ( NUM00 ) ) ; \n\t\t\t} \n\t\t} \n\tXNodeSet nodes = new XNodeSet ( xctxt . getDTMManager ( ) ) ; \n\tNodeSetDTM nodeSet = nodes . mutableNodeset ( ) ; \n\t{ \n\t\tint hereNode = DTM . NULL ; \n\t\tswitch ( dtm . getNodeType ( xpathOwnerNodeDTM ) ) { \n\t\t\tcase Node . ATTRIBUTE_NODE : case Node . PROCESSING_INSTRUCTION_NODE : { \n\t\t\t\thereNode = xpathOwnerNodeDTM ; \n\t\t\t\tnodeSet . addNode ( hereNode ) ; \n\t\t\t\t$F597 } \n\t\t\tcase Node . TEXT_NODE : { \n\t\t\t\thereNode = dtm . getParent ( xpathOwnerNodeDTM ) ; \n\t\t\t\tnodeSet . addNode ( hereNode ) ; \n\t\t\t\t$F597 } \n\t\t\t$F2448 } \n\t\t} \n\tnodeSet . detach ( ) ; \n\treturn nodes ; \n\t} \n"}, {"code": "public List $F136545 top ( int n ) { \n\tList $F136545 $F204 ( top ) ; \n\t$F2027 values = data . toIntArray ( ) ; \n\tIntArrays . parallelQuickSort ( values , ReverseIntComparator . instance ( ) ) ; \n\tfor ( int i = NUM00 ; \n\ti < n && i < values . length ; \n\ti ++ ) { \n\t\ttop . add ( PackedLocalTime . asLocalTime ( values [ i ] ) ) ; \n\t\t} \n\treturn top ; \n\t} \n"}, {"code": "public static String grabClass ( String signature ) { \n\t$F275 ( matcher , sigRE , signature ) boolean b = matcher . matches ( ) ; \n\tif ( ! b && matcher . groupCount ( ) != NUM00 ) $F5197 ( logger , signature ) return matcher . group ( NUM00 ) ; \n\t} \n"}, {"code": "public TimeSeriesMetricDeltaSet ( Stream < Entry < Tags , MetricValue > > td ) { \n\tvalues_ = Any2 . right ( td . collect ( Collectors . toMap ( null , null , null , null ) ) ) ; \n\t} \n"}, {"code": "$F1654 ( nodes ) "}, {"code": "$F1 public final E nextElement $F72 { \n\tE result = m_Vector . get ( m_Counter ) ; \n\tm_Counter ++ ; \n\tif ( m_Counter == m_SpecialElement ) { \n\t\tm_Counter ++ ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private ByteString escapeBytes ( final ByteString value ) { \n\t$F74602 ( needEscaping , value ) final ByteStringBuilder builder = new ByteStringBuilder $F72 ; \n\tfor ( $F1088 ( i , value ) ) { \n\t\tfinal byte b = value . byteAt ( i ) ; \n\t\tif ( isByteToEscape ( b ) ) { \n\t\t\tbuilder . appendByte ( DN . NORMALIZED_ESC_BYTE ) ; \n\t\t\t} \n\t\tbuilder . appendByte ( b ) ; \n\t\t} \n\treturn builder . toByteString ( ) ; \n\t} \n"}, {"code": "public InputBuilder $F4203 repeatAll ( int times ) { \n\t$F98037 ( toAppend ) for ( $F119 ( i , times ) ) $F21926 ( toAppend , input ) input . addAll ( toAppend ) ; \n\treturn this ; \n\t} \n"}, {"code": "public final void renameClass ( Map classnames ) { \n\tString jvmNewThisName = ( String ) classnames . get ( Descriptor . toJvmName ( thisclassname ) ) ; \n\tif ( jvmNewThisName != null ) thisclassname = Descriptor . toJavaName ( jvmNewThisName ) ; \n\tconstPool . renameClass ( classnames ) ; \n\tAttributeInfo . renameClass ( attributes , classnames ) ; \n\tArrayList list = methods ; \n\t$F2199 ( n , list ) for ( $F1316 ( i , n ) ) { \n\t\t$F12192 ( minfo , list , i ) $F461592 ( desc , minfo ) minfo . setDescriptor ( Descriptor . rename ( desc , classnames ) ) ; \n\t\tAttributeInfo . renameClass ( minfo . getAttributes ( ) , classnames ) ; \n\t\t} \n\tlist = fields ; \n\t$F8935 ( n , list ) for ( $F1316 ( i , n ) ) { \n\t\t$F12198 ( finfo , list , i ) $F461592 ( desc , finfo ) finfo . setDescriptor ( Descriptor . rename ( desc , classnames ) ) ; \n\t\tAttributeInfo . renameClass ( finfo . getAttributes ( ) , classnames ) ; \n\t\t} \n\t} \n"}, {"code": "$F1431 public void handleButton3Request ( RequestInvocationEvent event ) { \n\tbackTrail ( ) ; \n\ttry { \n\t\t$F59547 ( name , getPageSessionAttribute , SAVE_VB_NAME ) ViewBean vb = getViewBean ( Class . forName ( name ) ) ; \n\t\tpassPgSessionMap ( vb ) ; \n\t\t$F50333 ( vb , getRequestContext ) } \n\tcatch ( ClassNotFoundException e ) $F36502 ( debug , e ) } \n"}, {"code": "public IonException ( Throwable cause ) $F51022 ( super , cause ) "}, {"code": "public final double distance $F72 { \n\treturn $F86242 ( Math , distance_square ) ; \n\t} \n"}, {"code": "$F1 public void done $F72 { \n\t$F87122 ( super ) if ( mNumTestsExpected > mNumTestsRun ) $F299008 ( handleTestRunFailed , String , mNumTestsExpected , mNumTestsRun ) else $F29727 ( mTestRunInProgress , handleTestRunFailed ) } \n"}, {"code": "public List < Challenge > challenges $F72 { \n\tString responseField ; \n\tif ( code == HTTP_UNAUTHORIZED ) { \n\t\tresponseField = NUM00 ; \n\t\t} \n\telse if ( code == HTTP_PROXY_AUTH ) { \n\t\tresponseField = NUM00 ; \n\t\t} \n\telse $F12523 ( Collections ) return OkHeaders . parseChallenges ( headers ( ) , responseField ) ; \n\t} \n"}, {"code": "$F96 toBytes ( SSLSession session ) { \n\tif ( ! ( session instanceof OpenSSLSessionImpl ) ) $F1337 OpenSSLSessionImpl sslSession = ( OpenSSLSessionImpl ) session ; \n\ttry { \n\t\t$F1538 ( baos ) $F1533 ( daos , baos ) daos . writeInt ( OPEN_SSL ) ; \n\t\t$F46943 ( data , sslSession ) $F17916 ( daos , data ) daos . write ( data ) ; \n\t\t$F65927 certs = session . getPeerCertificates ( ) ; \n\t\t$F17916 ( daos , certs ) for ( Certificate cert : certs ) { \n\t\t\tdata = cert . getEncoded ( ) ; \n\t\t\t$F17916 ( daos , data ) daos . write ( data ) ; \n\t\t\t} \n\t\t$F11316 ( baos ) } \n\tcatch ( IOException e ) { \n\t\tlog ( e ) ; \n\t\t$F1274 } \n\tcatch ( CertificateEncodingException e ) { \n\t\tlog ( e ) ; \n\t\t$F1274 } \n\t} \n"}, {"code": "public MersenneTwister $F72 { \n\t$F3936 ( mt , N ) setSeed ( System . currentTimeMillis ( ) + System . identityHashCode ( this ) ) ; \n\t} \n"}, {"code": "private void verifyTimestamp ( X509Certificate cert ) throws CertPathValidatorException { \n\tString msg = NUM00 ; \n\tif ( debug != null ) debug . println ( $F28567 ( msg , date ) + NUM00 ) ; \n\ttry { \n\t\tcert . checkValidity ( date ) ; \n\t\t} \n\tcatch ( CertificateExpiredException e ) { \n\t\tthrow new CertPathValidatorException ( msg + NUM00 , e , null , - NUM00 , BasicReason . EXPIRED ) ; \n\t\t} \n\tcatch ( CertificateNotYetValidException e ) { \n\t\tthrow new CertPathValidatorException ( msg + NUM00 , e , null , - NUM00 , BasicReason . NOT_YET_VALID ) ; \n\t\t} \n\tif ( debug != null ) $F35498 ( debug , msg ) } \n"}, {"code": "public static $F96 encryptPassword ( final String password , final $F96 seed ) throws NoSuchAlgorithmException { \n\tif $F3581 ( password ) $F42429 $F10310 ( messageDigest , MessageDigest ) final $F96 stage1 = messageDigest . digest ( password . getBytes ( ) ) ; \n\t$F2268 ( messageDigest ) final $F96 stage2 = messageDigest . digest ( stage1 ) ; \n\t$F2268 ( messageDigest ) messageDigest . update ( seed ) ; \n\tmessageDigest . update ( stage2 ) ; \n\tfinal $F96 digest = messageDigest . digest ( ) ; \n\tfinal $F96 $F14612 ( returnBytes , digest ) ; \n\tfor ( $F1139 ( i , digest ) ) { \n\t\treturnBytes [ i ] = ( byte ) ( stage1 [ i ] ^ digest [ i ] ) ; \n\t\t} \n\treturn returnBytes ; \n\t} \n"}, {"code": "public int rows $F72 { \n\treturn rows ; \n\t} \n"}, {"code": "$F68161 ( in , length , bytes , count , pos ) "}, {"code": "public static String array2hex $F3295 ( array ) { \n\treturn byteArray2String ( array , NUM00 , NUM00 , _BOOL , NUM00 ) ; \n\t} \n"}, {"code": "private $F96 writeCheckedBytes ( MessageNano proto ) { \n\tBackupProtos . CheckedMessage wrapper = new BackupProtos . CheckedMessage $F72 ; \n\twrapper . payload = MessageNano . toByteArray ( proto ) ; \n\t$F64750 ( checksum ) $F64752 ( checksum , wrapper ) wrapper . checksum = checksum . getValue ( ) ; \n\treturn MessageNano . toByteArray ( wrapper ) ; \n\t} \n"}, {"code": "public double reduceTo $F20449 ( width , height , limit ) { \n\tint w = getIconWidth ( ) ; \n\tint h = getIconHeight ( ) ; \n\tdouble scale = NUM00 ; \n\tif ( w > width ) { \n\t\tscale = $F51635 ( width ) / w ; \n\t\t} \n\tif ( h > height ) { \n\t\tscale = Math . min ( scale , $F51635 ( height ) / h ) ; \n\t\t} \n\tif ( scale < NUM00 ) { \n\t\tif ( limit > NUM00 ) $F252908 ( scale , Math , limit ) AffineTransform t = AffineTransform . getScaleInstance ( scale , scale ) ; \n\t\ttransformImage ( $F29907 ( Math , scale , w ) , $F29907 ( Math , scale , h ) , t , null ) ; \n\t\t} \n\treturn scale ; \n\t} \n"}, {"code": "public void installBuiltinSound ( String soundIdentifier , InputStream data ) throws IOException { \n\t$F39715 ( builtinSounds , soundIdentifier , convertBuiltinSound , data ) } \n"}, {"code": "private Integer countFragmentFilteredPages ( $F3803 templateFragments , boolean whitelist ) throws WikiApiException { \n\ttry { \n\t\tint count = NUM00 ; \n\t\tPreparedStatement statement = null ; \n\t\tResultSet result = null ; \n\t\ttry { \n\t\t\t$F280 ( sqlString ) $F280 ( subconditions ) sqlString . append ( NUM00 + GeneratorConstants . TABLE_TPLID_TPLNAME + NUM00 + GeneratorConstants . TABLE_TPLID_PAGEID + NUM00 + ( whitelist ? NUM00 : NUM00 ) + NUM00 ) ; \n\t\t\tfor ( $F1431 String fragment : templateFragments ) { \n\t\t\t\tif $F35625 ( subconditions ) $F86 ( subconditions ) $F84 ( subconditions ) } \n\t\t\tsqlString . append ( subconditions ) ; \n\t\t\t$F84 ( sqlString ) statement = connection . prepareStatement ( sqlString . toString ( ) ) ; \n\t\t\tint curIdx = NUM00 ; \n\t\t\tfor ( String fragment : templateFragments ) { \n\t\t\t\t$F37156 ( fragment ) $F1382 ( fragment ) $F2899 ( fragment ) statement . setString ( curIdx ++ , fragment + NUM00 ) ; \n\t\t\t\t} \n\t\t\tresult = execute ( statement ) ; \n\t\t\t$F1084 ( result ) if $F1682 ( result ) { \n\t\t\t\t$F55 ( count , result ) } \n\t\t\t} \n\t\t$F85840 ( statement , result ) return count ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new WikiApiException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public static int findName ( String name , $F2027 table ) { \n\tfor ( $F1139 ( i , table ) ) { \n\t\tif ( name . equals ( getName ( table [ i ] ) ) ) { \n\t\t\treturn i ; \n\t\t\t} \n\t\t} \n\t$F150 } \n"}, {"code": "private static Bitmap transform ( Matrix scaler , Bitmap source , int targetWidth , int targetHeight , int options ) { \n\t$F1594 ( Log , TAG ) boolean scaleUp = ( options & NUM00 ) != NUM00 ; \n\tboolean recycle = ( options & NUM00 ) != NUM00 ; \n\tint deltaX = source . getWidth ( ) - targetWidth ; \n\tint deltaY = source . getHeight ( ) - targetHeight ; \n\tif ( ! scaleUp && ( deltaX < NUM00 || deltaY < NUM00 ) ) { \n\t\t$F1594 ( Log , TAG ) Bitmap b2 = Bitmap . createBitmap ( targetWidth , targetHeight , Bitmap . Config . ARGB_8888 ) ; \n\t\t$F107516 ( c , b2 ) int deltaXHalf = Math . max ( NUM00 , deltaX / NUM00 ) ; \n\t\tint deltaYHalf = Math . max ( NUM00 , deltaY / NUM00 ) ; \n\t\tRect src = new Rect ( deltaXHalf , deltaYHalf , deltaXHalf + Math . min ( targetWidth , source . getWidth ( ) ) , deltaYHalf + Math . min ( targetHeight , source . getHeight ( ) ) ) ; \n\t\tint dstX = ( targetWidth - src . width ( ) ) / NUM00 ; \n\t\tint dstY = ( targetHeight - src . height ( ) ) / NUM00 ; \n\t\tRect dst = new Rect ( dstX , dstY , targetWidth - dstX , targetHeight - dstY ) ; \n\t\tc . drawBitmap ( source , src , dst , null ) ; \n\t\t$F177970 ( recycle , source ) c . setBitmap ( null ) ; \n\t\t$F1594 ( Log , TAG ) return b2 ; \n\t\t} \n\tfloat bitmapWidthF = source . getWidth ( ) ; \n\tfloat bitmapHeightF = source . getHeight ( ) ; \n\t$F6848 ( Log , TAG , bitmapWidthF , bitmapHeightF ) float bitmapAspect = bitmapWidthF / bitmapHeightF ; \n\t$F5773 ( viewAspect , targetWidth , targetHeight ) $F6848 ( Log , TAG , targetWidth , targetHeight ) if ( bitmapAspect > viewAspect ) { \n\t\tfloat scale = targetHeight / bitmapHeightF ; \n\t\tif $F19274 ( scale ) { \n\t\t\tscaler . setScale ( scale , scale ) ; \n\t\t\t} \n\t\telse { \n\t\t\tscaler = null ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tfloat scale = targetWidth / bitmapWidthF ; \n\t\tif $F19274 ( scale ) { \n\t\t\tscaler . setScale ( scale , scale ) ; \n\t\t\t} \n\t\telse { \n\t\t\tscaler = null ; \n\t\t\t} \n\t\t} \n\tBitmap b1 ; \n\tif ( scaler != null ) { \n\t\t$F1594 ( Log , TAG ) $F74324 ( b1 , Bitmap , source , scaler , _BOOL ) ; \n\t\t} \n\telse { \n\t\t$F1594 ( Log , TAG ) b1 = source ; \n\t\t} \n\tif ( recycle && b1 != source ) { \n\t\t$F1594 ( Log , TAG ) $F17551 ( source ) } \n\tint dx1 = Math . max ( NUM00 , b1 . getWidth ( ) - targetWidth ) ; \n\tint dy1 = Math . max ( NUM00 , b1 . getHeight ( ) - targetHeight ) ; \n\tBitmap b2 = Bitmap . createBitmap ( b1 , dx1 / NUM00 , dy1 / NUM00 , targetWidth , targetHeight ) ; \n\tif ( b2 != b1 ) { \n\t\tif ( recycle || b1 != source ) { \n\t\t\t$F1594 ( Log , TAG ) $F17551 ( b1 ) } \n\t\t} \n\t$F1594 ( Log , TAG ) if ( b2 == null ) { \n\t\t$F1594 ( Log , TAG ) } \n\treturn b2 ; \n\t} \n"}, {"code": "private void scoreTrackResults ( Collection < Track > tracks , SearchQuery query , Collection < ScoredResult > output ) { \n\tfor ( Track track : tracks ) { \n\t\tdouble score = scoreTrackResult ( query , track ) ; \n\t\toutput . add ( new ScoredResult ( track , score ) ) ; \n\t\t} \n\t} \n"}, {"code": "private Long currentTime $F72 { \n\treturn $F165576 ( System ) ; \n\t} \n"}, {"code": "$F47011 ( tag , msg , args , sLevel , LEVEL_VERBOSE , String , Log ) "}, {"code": "private static $F96 encode ( double latitude , double longitude ) { \n\t$F96 bytes = new byte [ NUM00 * Integer . BYTES ] ; \n\tNumericUtils . intToSortableBytes ( encodeLatitude ( latitude ) , bytes , NUM00 ) ; \n\tNumericUtils . intToSortableBytes ( encodeLongitude ( longitude ) , bytes , Integer . BYTES ) ; \n\treturn bytes ; \n\t} \n"}, {"code": "public static void putLongVolatile ( Object obj , long off , long val ) { \n\tUNSAFE . putLongVolatile ( obj , off , val ) ; \n\t} \n"}, {"code": "public static $F3803 run $F24643 ( commands ) { \n\treturn Shell . run ( NUM00 , $F10148 ( commands ) , null , _BOOL ) ; \n\t} \n"}, {"code": "public void circle $F7635 ( x , y , r ) { \n\t$F30465 ( r ) double xs = scaleX ( x ) ; \n\tdouble ys = scaleY ( y ) ; \n\tdouble ws = factorX ( NUM00 * r ) ; \n\tdouble hs = factorY ( NUM00 * r ) ; \n\tif ( ws <= NUM00 && hs <= NUM00 ) pixel ( x , y ) ; \n\telse offscreen . draw ( new $F35359 ( xs - ws / NUM00 , ys - hs / NUM00 , ws , hs ) ) ; \n\tdraw ( ) ; \n\t} \n"}, {"code": "final public void println ( double v ) { \n\tWriter out = this . out ; \n\t$F8249 ( out ) print ( v ) ; \n\ttry $F53422 ( out , _newline ) $F53427 ( log , Level , e ) } \n"}, {"code": "public void writeSI32 ( int value ) throws IOException { \n\tflushBits ( ) ; \n\t$F88315 ( out , value ) $F34529 ( out , value ) $F34529 ( out , value ) $F34529 ( out , value ) bytesWritten += NUM00 ; \n\t} \n"}, {"code": "private static void map ( final StringBuilder buffer , final ByteSequence sequence , final boolean trim , final boolean foldCase ) { \n\t$F52199 ( value , sequence ) for ( $F1088 ( i , value ) ) { \n\t\t$F1090 ( c , value , i ) $F36399 ( MAP_2_NULL , c ) if $F105 ( MAP_2_SPACE , c ) { \n\t\t\tif ( canMapToSpace ( buffer , trim ) ) $F288 ( buffer , SPACE_CHAR ) $F598 } \n\t\tif ( foldCase ) { \n\t\t\t$F3056 ( mapping , CASE_MAP_TABLE , c ) if ( mapping != null ) $F80470 ( buffer , mapping ) } \n\t\tbuffer . append ( c ) ; \n\t\t} \n\t} \n"}, {"code": "public void addButtonPressedListener ( FieldConfigStringButtonInterface listener ) { \n\tif ( buttonPressedListenerList == null ) { \n\t\tbuttonPressedListenerList = new ArrayList < FieldConfigStringButtonInterface > $F72 ; \n\t\t} \n\tbuttonPressedListenerList . add ( listener ) ; \n\t} \n"}, {"code": "public void dispose $F72 { \n\tlogDebug ( NUM00 ) ; \n\tmSetupDone = _BOOL ; \n\tif ( mServiceConn != null ) { \n\t\tlogDebug ( NUM00 ) ; \n\t\tif ( mContext != null ) mContext . unbindService ( mServiceConn ) ; \n\t\tmServiceConn = null ; \n\t\tmService = null ; \n\t\tmPurchaseListener = null ; \n\t\t} \n\t} \n"}, {"code": "private void fillXMLAttribute ( Attributes att , int index ) { \n\tfillQName ( fAttributeQName , att . getURI ( index ) , att . getLocalName ( index ) , att . getQName ( index ) ) ; \n\tString type = att . getType ( index ) ; \n\tfAttributes . addAttributeNS ( fAttributeQName , ( type != null ) ? type : XMLSymbols . fCDATASymbol , att . getValue ( index ) ) ; \n\t} \n"}, {"code": "public JComponent createPropertyGUI ( PropertyConsumer pc ) { \n\tthis . propertyConsumer = pc ; \n\t$F2697 ( props ) props = pc . getProperties ( props ) ; \n\t$F2697 ( info ) info = pc . getPropertyInfo ( info ) ; \n\tString prefix = pc . getPropertyPrefix ( ) ; \n\treturn createPropertyGUI ( prefix , props , info ) ; \n\t} \n"}, {"code": "public long copy ( String filename , OutputStream out , long offset , long size ) throws $F3 { \n\t$F96078 ( size ) BufferedInputStream is = new BufferedInputStream ( getFileInputStream ( filename ) ) ; \n\t$F47960 ( buf ) int bytesRead ; \n\tlong pos = NUM00 ; \n\tlong remaining = size ; \n\ttry { \n\t\tif ( offset != NUM00 ) { \n\t\t\tis . skip ( offset ) ; \n\t\t\tpos += offset ; \n\t\t\t} \n\t\twhile ( remaining != NUM00 ) { \n\t\t\tint max = buf . length ; \n\t\t\tif ( max > remaining ) $F110965 ( max , remaining ) $F61539 ( bytesRead , is , buf , max ) $F76065 ( bytesRead ) $F11584 ( out , buf , bytesRead ) pos += bytesRead ; \n\t\t\tremaining -= bytesRead ; \n\t\t\t} \n\t\t$F1206 ( out ) } \n\tcatch ( Exception e ) $F29882 ( out ) finally $F87767 ( is ) return pos ; \n\t} \n"}, {"code": "private static void deserializeHeader ( KdbHeader kdbHeader , DataInput dataInput ) throws IOException { \n\tkdbHeader . setFlags ( dataInput . readInt ( ) ) ; \n\tkdbHeader . setVersion ( dataInput . readInt ( ) ) ; \n\t$F12496 ( buffer ) dataInput . readFully ( buffer ) ; \n\tkdbHeader . setMasterSeed ( buffer ) ; \n\t$F46945 ( buffer ) dataInput . readFully ( buffer ) ; \n\tkdbHeader . setEncryptionIv ( buffer ) ; \n\tkdbHeader . setGroupCount ( dataInput . readInt ( ) ) ; \n\tkdbHeader . setEntryCount ( dataInput . readInt ( ) ) ; \n\t$F12496 ( buffer32 ) dataInput . readFully ( buffer32 ) ; \n\tkdbHeader . setContentHash ( buffer32 ) ; \n\t$F46945 ( buffer32 ) dataInput . readFully ( buffer32 ) ; \n\tkdbHeader . setTransformSeed ( buffer32 ) ; \n\tkdbHeader . setTransformRounds ( dataInput . readInt ( ) ) ; \n\t} \n"}, {"code": "public List < JCAnnotation > transformAnnotations ( OutputElement target , Tree . Declaration annotated ) { \n\tEnumSet < OutputElement > outputs ; \n\tif ( annotated instanceof Tree . AnyClass ) { \n\t\toutputs = AnnotationUtil . outputs ( ( Tree . AnyClass ) annotated ) ; \n\t\t} \n\telse if ( annotated instanceof Tree . AnyInterface ) { \n\t\toutputs = AnnotationUtil . outputs ( ( Tree . AnyInterface ) annotated ) ; \n\t\t} \n\telse if ( annotated instanceof Tree . TypeAliasDeclaration ) { \n\t\toutputs = AnnotationUtil . outputs ( ( Tree . TypeAliasDeclaration ) annotated ) ; \n\t\t} \n\telse if ( annotated instanceof Tree . Constructor ) { \n\t\toutputs = AnnotationUtil . outputs ( ( Tree . Constructor ) annotated ) ; \n\t\t} \n\telse if ( annotated instanceof Tree . Enumerated ) { \n\t\toutputs = AnnotationUtil . outputs ( ( Tree . Enumerated ) annotated ) ; \n\t\t} \n\telse if ( annotated instanceof Tree . AnyMethod ) { \n\t\toutputs = AnnotationUtil . outputs ( ( Tree . AnyMethod ) annotated ) ; \n\t\t} \n\telse if ( annotated instanceof Tree . AttributeDeclaration ) { \n\t\toutputs = AnnotationUtil . outputs ( ( Tree . AttributeDeclaration ) annotated ) ; \n\t\t} \n\telse if ( annotated instanceof Tree . AttributeGetterDefinition ) { \n\t\toutputs = AnnotationUtil . outputs ( ( Tree . AttributeGetterDefinition ) annotated ) ; \n\t\t} \n\telse if ( annotated instanceof Tree . AttributeSetterDefinition ) { \n\t\toutputs = AnnotationUtil . outputs ( ( Tree . AttributeSetterDefinition ) annotated ) ; \n\t\t} \n\telse if ( annotated instanceof Tree . ObjectDefinition ) { \n\t\toutputs = AnnotationUtil . outputs ( ( Tree . ObjectDefinition ) annotated ) ; \n\t\t} \n\telse { \n\t\tthrow BugException . unhandledNodeCase ( annotated ) ; \n\t\t} \n\treturn transform ( annotated . getDeclarationModel ( ) , target , annotated . getAnnotationList ( ) , outputs ) ; \n\t} \n"}, {"code": "$F163365 ( doc , elementList , nameNode , child , childData , load , _BOOL , assertEquals ) "}, {"code": "public boolean areAllPermissionsGranted $F72 $F18905 ( deniedPermissionResponses ) "}, {"code": "private String fetchCharsetFromCache ( Client client , Locale loc ) { \n\tMap cCache = ( Map ) charsetCache . get ( client . getClientType ( ) ) ; \n\tString val = null ; \n\tif ( cCache != null ) { \n\t\t$F18988 ( val , cCache , loc ) } \n\treturn val ; \n\t} \n"}, {"code": "public Shape paintLayer ( Graphics g , int offs0 , int offs1 , Shape bounds , JTextComponent c , View view ) { \n\t$F109754 ( g , getColor ) if ( offs0 == view . getStartOffset ( ) && offs1 == view . getEndOffset ( ) ) { \n\t\tRectangle alloc ; \n\t\tif ( bounds instanceof Rectangle ) alloc = ( Rectangle ) bounds ; \n\t\telse alloc = bounds . getBounds ( ) ; \n\t\tpaintSquiggle ( g , alloc ) ; \n\t\treturn alloc ; \n\t\t} \n\ttry { \n\t\tShape shape = view . modelToView ( offs0 , Position . Bias . Forward , offs1 , Position . Bias . Backward , bounds ) ; \n\t\tRectangle r = ( shape instanceof Rectangle ) ? ( Rectangle ) shape : shape . getBounds ( ) ; \n\t\tpaintSquiggle ( g , r ) ; \n\t\treturn r ; \n\t\t} \n\t$F203264 ( e ) $F1274 } \n"}, {"code": "public void addControlRoll ( PilotingRollData control ) $F6659 ( controlRolls , control ) "}, {"code": "void processAddOnChanges ( Window caller , AddOnDependencyChecker . AddOnChangesResult changes ) { \n\tif ( addonsDialog != null ) { \n\t\taddonsDialog . setDownloadingUpdates ( ) ; \n\t\t} \n\tif $F89491 ( getView ) { \n\t\tSet < AddOn > addOns = new $F9623 ( changes . getUninstalls ( ) ) ; \n\t\taddOns . addAll ( changes . getOldVersions ( ) ) ; \n\t\tSet $F7942 $F9626 ( extensions ) ; \n\t\textensions . addAll ( changes . getUnloadExtensions ( ) ) ; \n\t\textensions . addAll ( changes . getSoftUnloadExtensions ( ) ) ; \n\t\tif ( ! warnUnsavedResourcesOrActiveActions ( caller , addOns , extensions , _BOOL ) ) $F932 } \n\tuninstallAddOns ( caller , changes . getUninstalls ( ) , _BOOL ) ; \n\tSet < AddOn > allAddons = new $F9623 ( changes . getNewVersions ( ) ) ; \n\tallAddons . addAll ( changes . getInstalls ( ) ) ; \n\tfor ( AddOn addOn : allAddons ) { \n\t\tif ( addonsDialog != null ) { \n\t\t\taddonsDialog . notifyAddOnDownloading ( addOn ) ; \n\t\t\t} \n\t\tdownloadAddOn ( addOn ) ; \n\t\t} \n\t} \n"}, {"code": "public void rederiveColor $F72 { \n\tColor src = UIManager . getColor ( uiDefaultParentName ) ; \n\tif ( src != null ) { \n\t\t$F222769 ( tmp , Color , src ) $F222771 ( tmp , clamp , hOffset ) $F222771 ( tmp , clamp , sOffset ) $F222771 ( tmp , clamp , bOffset ) int alpha = clamp ( src . getAlpha ( ) + aOffset ) ; \n\t\targbValue = ( Color . HSBtoRGB ( $F26406 ( tmp ) ) & NUM00 ) | ( alpha < < NUM00 ) ; \n\t\t} \n\telse { \n\t\t$F12457 ( tmp ) tmp [ NUM00 ] = clamp ( hOffset ) ; \n\t\ttmp [ NUM00 ] = clamp ( sOffset ) ; \n\t\ttmp [ NUM00 ] = clamp ( bOffset ) ; \n\t\tint alpha = clamp ( aOffset ) ; \n\t\targbValue = ( Color . HSBtoRGB ( $F26406 ( tmp ) ) & NUM00 ) | ( alpha < < NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public static String toString $F23416 ( oid ) { \n\tStringBuilder sb = new StringBuilder $F113948 ( oid ) ; \n\tfor ( int i = NUM00 ; \n\ti < oid . length - NUM00 ; \n\t++ i ) { \n\t\t$F6939 ( sb , oid , i ) $F84 ( sb ) } \n\tsb . append ( $F8528 ( oid ) ) ; \n\t$F92 ( sb ) } \n"}, {"code": "private void grow $F72 { \n\tm_allocatedSize *= NUM00 ; \n\tboolean newVector [ ] = new boolean [ m_allocatedSize ] ; \n\t$F10236 ( System , m_values , newVector , m_index ) m_values = newVector ; \n\t} \n"}, {"code": "public void onIdleBegin $F72 $F16878 ( _idleCount ) "}, {"code": "private void addSpan ( CacheSpan span ) { \n\tTreeSet < CacheSpan > spansForKey = cachedSpans . get ( span . key ) ; \n\tif ( spansForKey == null ) { \n\t\tspansForKey = new TreeSet < CacheSpan > $F72 ; \n\t\tcachedSpans . put ( span . key , spansForKey ) ; \n\t\t} \n\tspansForKey . add ( span ) ; \n\ttotalSpace += span . length ; \n\tnotifySpanAdded ( span ) ; \n\t} \n"}, {"code": "public boolean equals ( Object obj ) { \n\t$F3627 ( this , obj , _BOOL ) if ( ! ( obj instanceof URIName ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tURIName other = ( URIName ) obj ; \n\treturn uri . equals ( other . getURI ( ) ) ; \n\t} \n"}, {"code": "void repaintChildren $F72 { \n\tfor ( $F139348 ( child , panel ) ) $F18540 ( child ) } \n"}, {"code": "private void validateDnsName ( String dnsName ) throws PolicyException { \n\t$F1384 ( starIndex , dnsName ) if ( ( starIndex >= NUM00 ) && $F1263 ( dnsName ) ) { \n\t\tif ( ( starIndex > NUM00 ) || ( ( starIndex == NUM00 ) && ( ( dnsName . indexOf ( NUM00 , NUM00 ) != - NUM00 ) || $F4435 ( dnsName ) ) ) ) { \n\t\t\tString $F1868 = { \n\t\t\t\tDNS_NAME , dnsName } \n\t\t\t; \n\t\t\t$F136371 ( ResBundleUtils , args ) } \n\t\t} \n\t} \n"}, {"code": "private static String readComment ( String input , int index ) { \n\tString comment = null ; \n\tMatcher matcher = COMMENT_PATTERN . matcher ( input . substring ( index ) ) ; \n\tif $F281 ( matcher ) { \n\t\t$F1157 ( comment , matcher ) $F3108 ( comment ) } \n\treturn comment ; \n\t} \n"}, {"code": "public static int findNext ( String str , char separator , char escapeChar , int start , StringBuilder split ) { \n\tint numPreEscapes = NUM00 ; \n\tfor ( $F68483 ( i , start , str ) ) { \n\t\t$F1280 ( curChar , str , i ) if ( numPreEscapes == NUM00 && curChar == separator ) { \n\t\t\treturn i ; \n\t\t\t} \n\t\telse { \n\t\t\tsplit . append ( curChar ) ; \n\t\t\tnumPreEscapes = ( curChar == escapeChar ) ? ( ++ numPreEscapes ) % NUM00 : NUM00 ; \n\t\t\t} \n\t\t} \n\t$F150 } \n"}, {"code": "private static String guessContentType ( String url ) { \n\t$F37156 ( url ) if $F8991 ( url ) $F2455 else if $F8991 ( url ) $F2455 else if $F11809 ( url ) $F2455 else if $F8991 ( url ) $F2455 else if $F8991 ( url ) $F2455 else $F2455 } \n"}, {"code": "public static String extractCSVOutputLineDomain ( String csvOut ) { \n\tString tokens [ ] = csvOut . split ( $F33983 ) ; \n\treturn tokens [ NUM00 ] ; \n\t} \n"}, {"code": "public void connect $F72 { \n\tconnect ( this . logWriter ) ; \n\t} \n"}, {"code": "public static boolean doCacheHeaderValidation ( final SolrQueryRequest solrReq , final HttpServletRequest req , final Method reqMethod , final HttpServletResponse resp ) { \n\tif ( Method . POST == reqMethod || Method . OTHER == reqMethod ) { \n\t\treturn _BOOL ; \n\t\t} \n\tfinal long lastMod = HttpCacheHeaderUtil . calcLastModified ( solrReq ) ; \n\tfinal String etag = HttpCacheHeaderUtil . calcEtag ( solrReq ) ; \n\tresp . setDateHeader ( NUM00 , lastMod ) ; \n\tresp . setHeader ( NUM00 , etag ) ; \n\tif ( checkETagValidators ( req , resp , reqMethod , etag ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F24922 ( checkLastModValidators , req , resp , lastMod , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "public IvrZoneset showActiveIvrZoneset $F72 throws NetworkDeviceControllerException { \n\tList < IvrZoneset > zonesets = showIvrZonesets ( _BOOL ) ; \n\treturn zonesets . isEmpty ( ) ? null : zonesets . get ( NUM00 ) ; \n\t} \n"}, {"code": "$F1431 public static $F22664 ImmutableArray $F22664 empty $F72 { \n\treturn ( ImmutableArray $F22664 ) EMPTY ; \n\t} \n"}, {"code": "public void replaceNonOptionalNonMinusNodesWith ( final List < IGroupMemberNode > ordered , final boolean recomputeDefinitelyProduced ) { \n\t$F725 ( nonOptionalNonMinusNodes ) nonOptionalNonMinusNodes . addAll ( ordered ) ; \n\t$F245298 ( recomputeDefinitelyProduced ) } \n"}, {"code": "public static String toString ( Accountable a ) { \n\t$F83 ( sb ) toString ( sb , a , NUM00 ) ; \n\t$F92 ( sb ) } \n"}, {"code": "$F1 public int hashCode $F72 { \n\treturn type < < NUM00 | value . hashCode ( ) < < NUM00 | otherValue . hashCode ( ) ; \n\t} \n"}, {"code": "protected void deleteTypeVertex ( AtlasVertex instanceVertex , DataTypes . TypeCategory typeCategory , boolean force ) throws AtlasException { \n\tswitch ( typeCategory ) { \n\t\tcase STRUCT : case TRAIT : deleteTypeVertex ( instanceVertex , force ) ; \n\t\t$F597 case CLASS : deleteEntities ( Collections . singletonList ( instanceVertex ) ) ; \n\t\t$F597 $F1267 $F40027 ( typeCategory ) } \n\t} \n"}, {"code": "public static $F3803 readToList ( Reader r ) throws IOException { \n\ttry ( BufferedReader in = new BufferedReader ( r ) ) { \n\t\t$F24645 ( l ) String line = null ; \n\t\twhile $F443 ( line , in ) l . add ( line ) ; \n\t\t$F26666 ( Collections , l ) } \n\t} \n"}, {"code": "$F1431 public void addCacheContext ( GridCacheContext cacheCtx ) throws IgniteCheckedException { \n\tif ( ctxMap . containsKey ( cacheCtx . cacheId ( ) ) ) { \n\t\tGridCacheContext $F9340 existing = ctxMap . get ( cacheCtx . cacheId ( ) ) ; \n\t\tthrow new IgniteCheckedException ( NUM00 + NUM00 + cacheCtx . name ( ) + NUM00 + existing . name ( ) + NUM00 ) ; \n\t\t} \n\tCacheStoreManager mgr = cacheCtx . store ( ) ; \n\tif ( mgr . configured ( ) && mgr . isLocal ( ) ) $F5224 ( locStoreCnt ) ctxMap . put ( cacheCtx . cacheId ( ) , cacheCtx ) ; \n\t} \n"}, {"code": "protected static boolean isCglibGetCallbacks ( AnnotatedMethod am ) { \n\t$F6969 rt = am . getRawType ( ) ; \n\tif ( rt == null || ! rt . isArray ( ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F114155 ( compType , rt ) Package pkg = compType . getPackage ( ) ; \n\tif ( pkg != null ) { \n\t\t$F20605 ( pname , pkg ) if $F418 ( pname ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public int compareTo ( NamedMediaType other ) $F372532 ( _name , other ) "}, {"code": "public boolean isModified $F72 { \n\tsynchronized ( this ) { \n\t\tif ( _isChecking || _isModified ) { \n\t\t\treturn _isModified ; \n\t\t\t} \n\t\t_isChecking = _BOOL ; \n\t\t} \n\ttry { \n\t\tlong now ; \n\t\t$F9171 ( now , CurrentTime ) if ( now < _lastCheckTime + _checkInterval ) return _isModified ; \n\t\t_lastCheckTime = now ; \n\t\tfor ( $F5373 ( i , _dependencyList ) ) { \n\t\t\tDependency dependency = _dependencyList . get ( i ) ; \n\t\t\tif ( dependency . isModified ( ) ) { \n\t\t\t\tdependency . logModified ( log ( ) ) ; \n\t\t\t\t_isModified = _BOOL ; \n\t\t\t\treturn _isModified ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn _isModified ; \n\t\t} \n\tfinally { \n\t\t_isChecking = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "protected ReplacedElement newIrreplaceableImageElement ( int cssWidth , int cssHeight ) { \n\tBufferedImage missingImage ; \n\tReplacedElement mre ; \n\ttry { \n\t\tmissingImage = ImageUtil . createCompatibleBufferedImage ( cssWidth , cssHeight , BufferedImage . TYPE_INT_RGB ) ; \n\t\t$F5115 ( g , missingImage ) $F339 ( g , Color ) $F301047 ( g , Color ) g . setFont ( new Font $F13847 ( Font ) ) ; \n\t\tg . drawString ( $F109655 ) ; \n\t\t$F355 ( g ) mre = new ImageReplacedElement ( missingImage , cssWidth , cssHeight ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tmre = new EmptyReplacedElement ( cssWidth < NUM00 ? NUM00 : cssWidth , cssHeight < NUM00 ? NUM00 : cssHeight ) ; \n\t\t} \n\treturn mre ; \n\t} \n"}, {"code": "public boolean greaterThan ( FXGVersion version ) { \n\treturn ( compareTo ( version ) > NUM00 ) ; \n\t} \n"}, {"code": "$F1 public DataSource createDataSource ( Properties properties ) throws SQLException { \n\t$F2697 ( propertiesCopy ) if ( properties != null ) $F96492 ( propertiesCopy , properties ) rejectUnsupportedOptions ( propertiesCopy ) ; \n\trejectPoolingOptions ( propertiesCopy ) ; \n\tJdbcDataSource dataSource = new JdbcDataSource $F72 ; \n\tsetupH2DataSource ( dataSource , propertiesCopy ) ; \n\treturn dataSource ; \n\t} \n"}, {"code": "public $F2689 find ( T object ) { \n\tif $F15257 ( locations , object ) { \n\t\tlocations . put ( object , new $F9623 $F72 ) ; \n\t\t} \n\treturn Collections . unmodifiableSet ( locations . get ( object ) ) ; \n\t} \n"}, {"code": "private void scrollCurrentItemToCenter $F72 { \n\tfinal ViewItem currItem = mViewItems [ BUFFER_CENTER ] ; \n\t$F2329 ( currItem ) final int currentViewCenter = currItem . getCenterX ( ) ; \n\tif ( mController . isScrolling ( ) || mIsUserScrolling || isCurrentItemCentered ( ) ) { \n\t\tLog . d ( TAG , NUM00 + mController . isScrolling ( ) ) ; \n\t\t$F665 } \n\tint snapInTime = ( int ) ( SNAP_IN_CENTER_TIME_MS * ( ( float ) Math . abs ( mCenterX - currentViewCenter ) ) / mDrawArea . width ( ) ) ; \n\t$F13527 ( Log , TAG ) mController . scrollToPosition ( currentViewCenter , snapInTime , _BOOL ) ; \n\t} \n"}, {"code": "public void addMetaObject ( MetaObject object ) { \n\tfor ( $F3836 ( k , MetaObjects ) ) { \n\t\tif $F4257 ( MetaObjects , k ) { \n\t\t\tMetaObjects . set ( k , object ) ; \n\t\t\t$F665 } \n\t\t} \n\tMetaObjects . add ( object ) ; \n\t} \n"}, {"code": "public boolean remove ( String word ) $F20067 ( m_Words , word ) "}, {"code": "public void testCase12 $F72 { \n\t$F7829 $F161331 int aSign = NUM00 ; \n\tint bSign = - NUM00 ; \n\t$F113721 $F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F3024 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F7841 ( assertEquals , result ) } \n"}, {"code": "public synchronized void addRecentItem ( T item ) { \n\titem = fromString ( toString ( item ) ) ; \n\tif $F3817 ( m_RecentItems ) { \n\t\tif ( item . equals ( m_RecentItems . get ( NUM00 ) ) ) $F665 } \n\tm_RecentItems . remove ( item ) ; \n\t$F6965 ( m_RecentItems , item ) while $F60125 ( m_RecentItems , m_MaxCount ) $F30606 ( m_RecentItems ) $F5453 ( m_IgnoreChanges ) writeProps ( ) ; \n\tupdateMenu ( ) ; \n\tnotifyRecentItemListenersOfAdd ( item ) ; \n\t} \n"}, {"code": "$F28896 ( index , paint , bounds , title , getTitle ) "}, {"code": "public void testInvokeAll2 $F72 throws InterruptedException { \n\t$F25236 ( e ) PoolCleaner cleaner = null ; \n\ttry { \n\t\tcleaner = cleaner ( e ) ; \n\t\tList < $F171452 > r = e . invokeAll ( new ArrayList < Callable $F4 > $F72 ) ; \n\t\tassertTrue ( r . isEmpty ( ) ) ; \n\t\t} \n\t$F14364 ( cleaner ) } \n"}, {"code": "public void cfgPackage ( ConfigurationValue cfgval , String name , String desc ) { \n\tpackages . add ( new PackageInfo ( name , desc ) ) ; \n\tpackageNames . add ( name ) ; \n\t} \n"}, {"code": "$F883 ( input ) "}, {"code": "private void createBlockMirrorData ( String name , int numBlockMirrors ) throws Exception { \n\tVolume volume = new Volume $F72 ; \n\t$F132261 ( volumeURI , URIUtil ) testVolumeURIs . add ( volumeURI ) ; \n\tvolume . setId ( volumeURI ) ; \n\tvolume . setLabel ( NUM00 ) ; \n\tURI cgUri = createBlockConsistencyGroup ( NUM00 ) ; \n\tvolume . setConsistencyGroup ( cgUri ) ; \n\t_dbClient . createObject ( volume ) ; \n\tfor ( $F9993 ( i , numBlockMirrors ) ) { \n\t\tBlockMirror blockMirror = new BlockMirror $F72 ; \n\t\tURI blockMirrorURI = URIUtil . createId ( $F30624 ) ; \n\t\ttestBlockMirrorURIs . add ( blockMirrorURI ) ; \n\t\tblockMirror . setId ( blockMirrorURI ) ; \n\t\tblockMirror . setLabel ( name + i ) ; \n\t\tblockMirror . setConsistencyGroup ( cgUri ) ; \n\t\t_dbClient . createObject ( blockMirror ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public synchronized void start $F72 { \n\t$F7254 ( running ) $F973 ( LOGGER ) if $F2979 ( endpoints ) { \n\t\tint port = config . getInt ( NetworkConfig . Keys . COAP_PORT ) ; \n\t\tLOGGER . log ( Level . INFO , NUM00 , port ) ; \n\t\taddEndpoint ( new CoapEndpoint ( port , this . config ) ) ; \n\t\t} \n\tint started = NUM00 ; \n\tfor ( Endpoint ep : endpoints ) { \n\t\ttry { \n\t\t\t$F2346 ( ep ) ++ started ; \n\t\t\t} \n\t\tcatch ( IOException e ) { \n\t\t\tLOGGER . log ( Level . SEVERE , NUM00 + ep . getAddress ( ) + NUM00 , e ) ; \n\t\t\t} \n\t\t} \n\tif ( started == NUM00 ) $F4639 else { \n\t\trunning = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public JsonArray add ( String value ) { \n\tvalues . add ( Json . value ( value ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "public boolean retainAll ( AbstractFloatList other ) $F205711 ( other , size , _BOOL , setSize , limit , j , i , getQuick , setQuick , modified ) "}, {"code": "$F1 public void exceptionCaught ( IoSession session , Throwable cause ) { \n\tfinal IoSessionInputStream in = ( IoSessionInputStream ) session . getAttribute ( KEY_IN ) ; \n\tIOException e = null ; \n\tif ( cause instanceof StreamIoException ) { \n\t\te = ( IOException ) cause . getCause ( ) ; \n\t\t} \n\telse if ( cause instanceof IOException ) { \n\t\te = ( IOException ) cause ; \n\t\t} \n\tif ( e != null && in != null ) { \n\t\tin . throwException ( e ) ; \n\t\t} \n\telse { \n\t\t$F18942 ( LOGGER , cause ) session . close ( _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "protected void clearResult $F72 { \n\tmd . clearResult ( ) ; \n\t$F15121 ( localizationResult ) } \n"}, {"code": "public static $F4203 String toString $F50316 ( collection ) { \n\t$F4158 ( collection ) if $F2979 ( collection ) $F2455 $F83 ( buf ) String delimiter = NUM00 ; \n\tfor ( T t : collection ) { \n\t\t$F4322 ( t ) buf . append ( delimiter ) ; \n\t\tbuf . append ( t ) ; \n\t\tdelimiter = NUM00 ; \n\t\t} \n\t$F92 ( buf ) } \n"}, {"code": "public static float between $F2267 ( val , min , max ) { \n\treturn Math . max ( Math . min ( val , max ) , min ) ; \n\t} \n"}, {"code": "public static StringBuffer replaceString ( StringBuffer buffer , $F806 parameters ) { \n\tint placeHolderPosition = - NUM00 ; \n\tString placeHolder = null ; \n\tfor ( $F1139 ( i , parameters ) ) { \n\t\tif ( parameters [ i ] == null ) $F5153 placeHolder = $F37978 ( i ) ; \n\t\tplaceHolderPosition = buffer . indexOf ( placeHolder ) ; \n\t\tif ( placeHolderPosition != - NUM00 ) { \n\t\t\tbuffer . replace ( placeHolderPosition , placeHolderPosition + placeHolder . length ( ) , parameters [ i ] ) ; \n\t\t\t} \n\t\telse $F5153 } \n\treturn buffer ; \n\t} \n"}, {"code": "private static int lookupQualSelector ( XMPNode arrayNode , String qualName , String qualValue , int aliasForm ) throws XMPException { \n\tif $F1238 ( XML_LANG , qualName ) { \n\t\tqualValue = Utils . normalizeLangValue ( qualValue ) ; \n\t\tint index = XMPNodeUtils . lookupLanguageItem ( arrayNode , qualValue ) ; \n\t\tif ( index < NUM00 && ( aliasForm & AliasOptions . PROP_ARRAY_ALT_TEXT ) > NUM00 ) { \n\t\t\tXMPNode langNode = new XMPNode ( ARRAY_ITEM_NAME , null ) ; \n\t\t\tXMPNode xdefault = new XMPNode ( XML_LANG , X_DEFAULT , null ) ; \n\t\t\tlangNode . addQualifier ( xdefault ) ; \n\t\t\tarrayNode . addChild ( NUM00 , langNode ) ; \n\t\t\t$F1082 } \n\t\telse { \n\t\t\treturn index ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tfor ( int index = NUM00 ; \n\t\tindex < arrayNode . getChildrenLength ( ) ; \n\t\tindex ++ ) { \n\t\t\tXMPNode currItem = arrayNode . getChild ( index ) ; \n\t\t\tfor ( Iterator it = currItem . iterateQualifier ( ) ; \n\t\t\tit . hasNext ( ) ; \n\t\t\t) { \n\t\t\t\t$F38096 ( qualifier , it ) if ( $F3174 ( qualName , qualifier ) && $F14681 ( qualValue , qualifier ) ) { \n\t\t\t\t\treturn index ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t$F150 } \n\t} \n"}, {"code": "public boolean isMultipleAllowed ( String frameID ) $F298 ( multipleFrames , frameID ) "}, {"code": "public $F806 parseConfiguration ( File xmlFile ) throws $F55616 { \n\t$F2221 ( document , builder , xmlFile ) return ( parseConfiguration ( document ) ) ; \n\t} \n"}, {"code": "private double empiricalHSIC ( TetradMatrix Ky , TetradMatrix Kx , TetradMatrix Kz , int m ) { \n\tTetradMatrix Kyx = Ky . times ( Kx ) ; \n\tTetradMatrix Kyz = Ky . times ( Kz ) ; \n\tTetradMatrix Kzx = Kz . times ( Kx ) ; \n\tTetradMatrix Kzreg = Kz . copy ( ) ; \n\tfor ( $F119 ( i , m ) ) { \n\t\tdouble ent = ( Kzreg . get ( i , i ) + this . regularizer ) ; \n\t\tKzreg . set ( i , i , ent ) ; \n\t\t} \n\tTetradMatrix A = Kzreg . inverse ( ) ; \n\tKzreg = A . times ( A ) ; \n\tTetradMatrix Kyzzregzx = new TetradMatrix ( m , m ) ; \n\tA = Kyz . times ( Kzreg ) ; \n\tKyzzregzx = A . times ( Kzx ) ; \n\tTetradMatrix Kyzzregzxzzregz = Kyzzregzx . copy ( ) ; \n\tKyzzregzxzzregz = Kyzzregzx . times ( Kz ) ; \n\tA = Kyzzregzxzzregz . times ( Kzreg ) ; \n\tKyzzregzxzzregz = A . times ( Kz ) ; \n\tdouble empHSIC = NUM00 ; \n\tfor ( $F119 ( i , m ) ) { \n\t\tempHSIC += Kyx . get ( i , i ) ; \n\t\tempHSIC += ( - NUM00 * Kyzzregzx . get ( i , i ) ) ; \n\t\tempHSIC += Kyzzregzxzzregz . get ( i , i ) ; \n\t\t} \n\tempHSIC /= Math . pow ( m - NUM00 , NUM00 ) ; \n\tdouble Bz = NUM00 ; \n\tfor ( int i = NUM00 ; \n\ti < ( m - NUM00 ) ; \n\ti ++ ) { \n\t\tfor ( int j = ( i + NUM00 ) ; \n\t\tj < m ; \n\t\tj ++ ) { \n\t\t\tBz += Math . pow ( Kz . get ( i , j ) , NUM00 ) ; \n\t\t\tBz += Math . pow ( Kz . get ( j , i ) , NUM00 ) ; \n\t\t\t} \n\t\t} \n\tBz = ( m * ( m - NUM00 ) ) / Bz ; \n\tempHSIC *= Bz ; \n\treturn empHSIC ; \n\t} \n"}, {"code": "public void create $F28786 ( rpfFilePaths , outputFile ) throws MakeTocException { \n\tcreate ( rpfFilePaths , outputFile , _BOOL ) ; \n\t} \n"}, {"code": "private synchronized void postEvent ( EventInfo eventInfo ) $F36131 ( eventQueue , eventInfo , notifyAll ) "}, {"code": "public String chooseServerAlias ( String keyType , Principal [ ] issuers , Socket sock ) { \n\treturn sunX509KeyManager . chooseServerAlias ( keyType , issuers , sock ) ; \n\t} \n"}, {"code": "private void processBmpImage ( BufferedImage image ) { \n\tif ( ! isError ) { \n\t\tFile outputFile = new File ( path , prefix + ( numPage + NUM00 ) + NUM00 ) ; \n\t\ttry { \n\t\t\t$F107416 ( ImageIO , image , outputFile ) addTempFile ( outputFile ) ; \n\t\t\taddScanFile ( outputFile ) ; \n\t\t\tnumPage ++ ; \n\t\t\t} \n\t\tcatch ( IOException e ) { \n\t\t\t$F301 ( e ) endProcess ( _BOOL , _BOOL ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public PathHandler ( String path ) $F80218 ( this , Paths , path ) "}, {"code": "public boolean loadLines $F72 { \n\tboolean result = _BOOL ; \n\ttry { \n\t\tm_parser . parse ( new InputSource ( m_reader ) , this ) ; \n\t\tresult = _BOOL ; \n\t\tm_success = _BOOL ; \n\t\t} \n\tcatch ( SAXException e ) { \n\t\tm_errorMessage = NUM00 ; \n\t\t$F5976 ( m_errorDescription , e ) } \n\tcatch ( IOException e ) { \n\t\tm_errorMessage = NUM00 ; \n\t\t$F5976 ( m_errorDescription , e ) } \n\treturn result ; \n\t} \n"}, {"code": "private void loadIgnoreFile ( final String srcFolder ) { \n\tignoreFile = IgnoreFile . load ( srcFolder ) ; \n\tif ( ignoreFile == null ) { \n\t\tloadDefaultExcludePattern ( srcFolder ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean removeArg ( final BOp arg ) { \n\t$F10057 ( arg ) if ( arg == this ) $F10056 if $F16914 ( args , arg ) $F27427 ( mutation , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "public static boolean looksLikeAListStyleType ( String val ) { \n\treturn LIST_TYPES . indexOf ( val ) >= NUM00 ; \n\t} \n"}, {"code": "public PKCS10Attribute ( PKCS9Attribute attr ) { \n\tthis . attributeId = attr . getOID ( ) ; \n\tthis . attributeValue = attr . getValue ( ) ; \n\t} \n"}, {"code": "public void createNote ( Note note ) { \n\tSQLiteDatabase db = getWritableDatabase ( ) ; \n\tString spannableAsHtml = Html . toHtml ( note . getSpannable ( ) ) ; \n\tString $F391645 ( date , dt ) ; \n\t$F20904 ( values ) values . put ( KEY_SPANNABLE_NOTE , spannableAsHtml ) ; \n\tvalues . put ( KEY_NOTE_TITLE , note . getTitle ( ) ) ; \n\tvalues . put ( KEY_IMAGE , BitmapConverter . getBytes ( note . getImage ( ) ) ) ; \n\tvalues . put ( KEY_DATE_UPDATED , date ) ; \n\tdb . insert ( TABLE_NOTES , null , values ) ; \n\t$F59 ( db ) } \n"}, {"code": "$F18164 ( msgs , seenXids , m , xid , assertTrue , assertFalse ) "}, {"code": "void addNext ( Node $F4203 n ) { \n\tnextNodes . add ( n ) ; \n\tCollections . sort ( nextNodes , isVertical ? verticalComparator : horizontalComparator ) ; \n\t} \n"}, {"code": "protected void configDialogPropertyChange ( PropertyChangeEvent event ) { \n\t$F980 ( log ) firePropertyChange ( PropertyChangeID . CONFIG_CHANGE , event . getOldValue ( ) , event . getNewValue ( ) ) ; \n\t} \n"}, {"code": "public final String readUTF $F72 throws IOException { \n\treturn decodeUTF ( readUnsignedShort ( ) ) ; \n\t} \n"}, {"code": "private void myAdd ( $F114083 l , int i ) $F207 ( l , i ) "}, {"code": "private void resetStateForGridTop $F72 { \n\tfinal int colCount = mColCount ; \n\tif $F36221 ( mItemTops , colCount ) { \n\t\t$F3936 ( mItemTops , colCount ) $F3936 ( mItemBottoms , colCount ) } \n\t$F3666 ( top , getPaddingTop ) Arrays . fill ( mItemTops , top ) ; \n\tArrays . fill ( mItemBottoms , top ) ; \n\tmFirstPosition = NUM00 ; \n\tif ( mRestoreOffsets != null ) $F9952 ( Arrays , mRestoreOffsets ) } \n"}, {"code": "public String testNextToken $F72 throws IOException { \n\tToken t = super . nextToken ( ) ; \n\treturn Integer . toString ( t . type ) + NUM00 + t . content + NUM00 ; \n\t} \n"}, {"code": "public static RepaintManager currentManager ( Component c ) { \n\treturn currentManager ( AppContext . getAppContext ( ) ) ; \n\t} \n"}, {"code": "private boolean isRecoverPointInitiator ( String portWWN ) $F298 ( portWWN , RECOVERPOINT_INITIATOR_PREFIX ) "}, {"code": "protected boolean isWFXMLChar ( String chardata , Character refInvalidChar ) { \n\tif ( chardata == null || $F1277 ( chardata ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F7782 ( dataarray , chardata ) int datalength = dataarray . length ; \n\tif ( fIsXMLVersion11 ) { \n\t\tint i = NUM00 ; \n\t\twhile ( i < datalength ) { \n\t\t\tif ( XML11Char . isXML11Invalid ( dataarray [ i ++ ] ) ) { \n\t\t\t\tchar ch = dataarray [ i - NUM00 ] ; \n\t\t\t\t$F121844 ( XMLChar , ch , i , datalength , ch2 , dataarray ) refInvalidChar = new Character ( ch ) ; \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tint i = NUM00 ; \n\t\twhile ( i < datalength ) { \n\t\t\tif ( XMLChar . isInvalid ( dataarray [ i ++ ] ) ) { \n\t\t\t\tchar ch = dataarray [ i - NUM00 ] ; \n\t\t\t\t$F121844 ( XMLChar , ch , i , datalength , ch2 , dataarray ) refInvalidChar = new Character ( ch ) ; \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public void send ( Buffer buffer ) $F21537 ( _outProxy , _outWriter , buffer , _BOOL ) "}, {"code": "$F1 public boolean eIsSet ( int featureID ) { \n\tswitch ( featureID ) { \n\t\tcase EipPackage . ROUTE__OWNED_ENDPOINTS : $F6441 ( ownedEndpoints ) case EipPackage . ROUTE__OWNED_CHANNELS : $F6441 ( ownedChannels ) case EipPackage . ROUTE__NAME : $F6439 ( NAME_EDEFAULT , name ) case EipPackage . ROUTE__EXCHANGE_TYPE : return exchangeType != EXCHANGE_TYPE_EDEFAULT ; \n\t\t} \n\t$F6444 ( super , featureID ) } \n"}, {"code": "$F11763 ( listener , clickingListeners ) "}, {"code": "public void addSection ( final Section SECTION ) { \n\t$F77681 ( SECTION ) sections . add ( SECTION ) ; \n\tCollections . sort ( sections , new SectionComparator $F72 ) ; \n\tfireUpdateEvent ( SECTION_EVENT ) ; \n\t} \n"}, {"code": "private int calculatePreferredWrapPosition ( $F1113 Editor editor , $F1113 CharSequence text , int tabSize , int spaceSize , int startLineOffset , int endLineOffset , int targetRangeEndOffset ) { \n\tboolean hasTabs = _BOOL ; \n\tboolean canOptimize = _BOOL ; \n\tboolean hasNonSpaceSymbols = _BOOL ; \n\tloop : for ( int i = startLineOffset ; \n\ti < Math . min ( endLineOffset , targetRangeEndOffset ) ; \n\ti ++ ) { \n\t\t$F1280 ( c , text , i ) switch ( c ) { \n\t\t\t$F1262 { \n\t\t\t\thasTabs = _BOOL ; \n\t\t\t\tif ( hasNonSpaceSymbols ) { \n\t\t\t\t\tcanOptimize = _BOOL ; \n\t\t\t\t\t$F217121 } \n\t\t\t\t} \n\t\t\t$F151814 $F1267 hasNonSpaceSymbols = _BOOL ; \n\t\t\t} \n\t\t} \n\tif ( ! hasTabs ) $F19580 ( wrapPositionForTextWithoutTabs , startLineOffset , endLineOffset , targetRangeEndOffset ) else if ( canOptimize ) $F16525 ( wrapPositionForTabbedTextWithOptimization , text , tabSize , startLineOffset , endLineOffset , targetRangeEndOffset ) else $F12218 ( wrapPositionForTabbedTextWithoutOptimization , editor , text , spaceSize , startLineOffset , endLineOffset , targetRangeEndOffset ) } \n"}, {"code": "public void addAll ( OVector v ) { \n\texpandFor ( size + v . size - NUM00 , null ) ; \n\tSystem . arraycopy ( v . vector , NUM00 , vector , size - v . size , v . size ) ; \n\t} \n"}, {"code": "private static boolean isOptimizableForDescendantIterator ( Compiler compiler , int stepOpCodePos , int stepIndex ) throws $F1872 { \n\tint stepType ; \n\tint stepCount = NUM00 ; \n\tboolean foundDorDS = _BOOL ; \n\tboolean foundSelf = _BOOL ; \n\tboolean foundDS = _BOOL ; \n\tint nodeTestType = OpCodes . NODETYPE_NODE ; \n\twhile ( OpCodes . ENDOP != ( stepType = compiler . getOp ( stepOpCodePos ) ) ) { \n\t\tif ( nodeTestType != OpCodes . NODETYPE_NODE && nodeTestType != OpCodes . NODETYPE_ROOT ) return _BOOL ; \n\t\tstepCount ++ ; \n\t\t$F19679 ( stepCount , _BOOL ) boolean mightBeProximate = mightBeProximate ( compiler , stepOpCodePos , stepType ) ; \n\t\tif ( mightBeProximate ) return _BOOL ; \n\t\tswitch ( stepType ) { \n\t\t\tcase OpCodes . FROM_FOLLOWING : case OpCodes . FROM_FOLLOWING_SIBLINGS : case OpCodes . FROM_PRECEDING : case OpCodes . FROM_PRECEDING_SIBLINGS : case OpCodes . FROM_PARENT : case OpCodes . OP_VARIABLE : case OpCodes . OP_EXTFUNCTION : case OpCodes . OP_FUNCTION : case OpCodes . OP_GROUP : case OpCodes . FROM_NAMESPACE : case OpCodes . FROM_ANCESTORS : case OpCodes . FROM_ANCESTORS_OR_SELF : case OpCodes . FROM_ATTRIBUTES : case OpCodes . MATCH_ATTRIBUTE : case OpCodes . MATCH_ANY_ANCESTOR : case OpCodes . MATCH_IMMEDIATE_ANCESTOR : return _BOOL ; \n\t\t\tcase OpCodes . FROM_ROOT : if ( NUM00 != stepCount ) return _BOOL ; \n\t\t\t$F597 case OpCodes . FROM_CHILDREN : if ( ! foundDS && ! ( foundDorDS && foundSelf ) ) return _BOOL ; \n\t\t\t$F597 case OpCodes . FROM_DESCENDANTS_OR_SELF : foundDS = _BOOL ; \n\t\t\tcase OpCodes . FROM_DESCENDANTS : if ( NUM00 == stepCount ) return _BOOL ; \n\t\t\tfoundDorDS = _BOOL ; \n\t\t\t$F597 case OpCodes . FROM_SELF : if ( NUM00 != stepCount ) return _BOOL ; \n\t\t\tfoundSelf = _BOOL ; \n\t\t\t$F597 $F1267 throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NULL_ERROR_HANDLER , $F19685 ( Integer , stepType ) ) ) ; \n\t\t\t} \n\t\tnodeTestType = compiler . getStepTestType ( stepOpCodePos ) ; \n\t\tint nextStepOpCodePos = compiler . getNextStepPos ( stepOpCodePos ) ; \n\t\t$F7995 ( nextStepOpCodePos ) if ( OpCodes . ENDOP != compiler . getOp ( nextStepOpCodePos ) ) { \n\t\t\tif ( compiler . countPredicates ( stepOpCodePos ) > NUM00 ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\tstepOpCodePos = nextStepOpCodePos ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void pipeAll ( InputStream inStr , OutputStream outStr ) throws IOException { \n\t$F2175 ( bs , BUFFER_SIZE ) int numRead ; \n\twhile ( ( $F18803 ( numRead , inStr , bs ) ) >= NUM00 ) $F29756 ( outStr , bs , numRead ) } \n"}, {"code": "public void addRule ( String ruleExpression , T resultIfMatched ) { \n\tmRuleMap . add ( new MimeMatcherRule ( ruleExpression , resultIfMatched ) ) ; \n\t} \n"}, {"code": "protected abstract boolean validateNumber ( ConversationContext context , Number input ) ; \n"}, {"code": "public void sendMessageUntilStopCount ( int stopCount ) { \n\tfor ( int i = processedWorkerCount ; \n\ti < workers . size ( ) ; \n\t++ i ) { \n\t\tActorRef worker = workers . get ( i ) ; \n\t\ttry $F31130 ( Thread ) catch ( InterruptedException e ) { \n\t\t\tlogger . error ( NUM00 + e + NUM00 , e ) ; \n\t\t\t} \n\t\tworker . tell ( OperationWorkerMsgType . PROCESS_REQUEST , originalManager ) ; \n\t\tprocessedWorkerCount ++ ; \n\t\tif ( processedWorkerCount > stopCount ) $F932 $F97362 ( logger , processedWorkerCount , requestTotalCount , taskIdTrim ) } \n\t} \n"}, {"code": "$F156045 ( msg , x , super , this ) "}, {"code": "public static $F5 stringToArrayList ( String string ) { \n\treturn new $F201 ( $F34166 ( Arrays , string ) ) ; \n\t} \n"}, {"code": "private String pickCharset $F72 { \n\tif ( charset != null ) { \n\t\treturn charset ; \n\t\t} \n\telse if ( utf8Supported ) $F2455 else $F16566 ( System ) } \n"}, {"code": "public void testToEngineeringStringPos $F72 $F12820 ( a , aNumber , result , assertEquals ) "}, {"code": "$F1 public void clear $F72 { \n\tif ( elementCount > NUM00 ) { \n\t\telementCount = NUM00 ; \n\t\t$F17838 ( Arrays , elementData ) modCount ++ ; \n\t\t} \n\t} \n"}, {"code": "public void addLayer ( final LayerDefinition layer ) { \n\tlayer . setMap ( this ) ; \n\tlayers . add ( layer ) ; \n\t} \n"}, {"code": "private $F38669 readRules ( Reader reader ) throws $F248925 { \n\t$F20481 ( in , reader ) $F38669 rules = new $F255887 $F72 ; \n\tString line ; \n\twhile $F443 ( line , in ) { \n\t\t$F63872 ( line ) $F1382 ( line ) $F12685 ( first , line ) boolean sign = _BOOL ; \n\t\tswitch ( first ) { \n\t\t\t$F32808 ( sign , _BOOL ) $F32808 ( sign , _BOOL ) $F1262 $F1262 $F1262 $F598 $F248933 ( line ) } \n\t\t$F28924 ( regex , line ) if $F8415 ( LOG ) { \n\t\t\t$F248936 ( LOG , regex ) } \n\t\tRule rule = createRule ( sign , regex ) ; \n\t\trules . add ( rule ) ; \n\t\t} \n\treturn rules ; \n\t} \n"}, {"code": "$F1431 $F1 protected Object applyUpdatesToManagedData ( Object updates ) { \n\tboolean madeChanges = _BOOL ; \n\t$F3803 words = ( $F3803 ) updates ; \n\t$F556 ( log , words ) boolean ignoreCase = getIgnoreCase ( ) ; \n\tfor ( String word : words ) { \n\t\tif ( ignoreCase ) word = $F131081 ( word , Locale ) ; \n\t\tif $F9793 ( managedWords , word ) { \n\t\t\tmadeChanges = _BOOL ; \n\t\t\t$F10635 ( log , word ) } \n\t\t} \n\treturn madeChanges ? managedWords : null ; \n\t} \n"}, {"code": "protected void drawLabel ( Canvas canvas , String labelText , DefaultRenderer renderer , $F141966 prevLabelsBounds , int centerX , int centerY , float shortRadius , float longRadius , float currentAngle , float angle , int left , int right , int color , Paint paint , boolean line , boolean display ) { \n\tif ( renderer . isShowLabels ( ) || display ) { \n\t\tpaint . setColor ( color ) ; \n\t\tdouble rAngle = Math . toRadians ( NUM00 - ( currentAngle + angle / NUM00 ) ) ; \n\t\t$F33859 ( sinValue , Math , rAngle ) $F54226 ( cosValue , Math , rAngle ) $F175108 ( x1 , Math , centerX , shortRadius , sinValue ) $F175108 ( y1 , Math , centerY , shortRadius , cosValue ) $F175108 ( x2 , Math , centerX , longRadius , sinValue ) $F175108 ( y2 , Math , centerY , longRadius , cosValue ) float size = renderer . getLabelsTextSize ( ) ; \n\t\tfloat extra = Math . max ( size / NUM00 , NUM00 ) ; \n\t\t$F175116 ( paint , Align ) if ( x1 > x2 ) { \n\t\t\textra = - extra ; \n\t\t\tpaint . setTextAlign ( Align . RIGHT ) ; \n\t\t\t} \n\t\tfloat xLabel = x2 + extra ; \n\t\tfloat yLabel = y2 ; \n\t\tfloat width = right - xLabel ; \n\t\tif ( x1 > x2 ) { \n\t\t\twidth = xLabel - left ; \n\t\t\t} \n\t\tlabelText = getFitText ( labelText , width , paint ) ; \n\t\tfloat widthLabel = paint . measureText ( labelText ) ; \n\t\tboolean okBounds = _BOOL ; \n\t\twhile ( ! okBounds && line ) { \n\t\t\tboolean intersects = _BOOL ; \n\t\t\t$F2199 ( length , prevLabelsBounds ) for ( int j = NUM00 ; \n\t\t\tj < length && ! intersects ; \n\t\t\tj ++ ) { \n\t\t\t\tRectF prevLabelBounds = prevLabelsBounds . get ( j ) ; \n\t\t\t\tif ( prevLabelBounds . intersects ( xLabel , yLabel , xLabel + widthLabel , yLabel + size ) ) { \n\t\t\t\t\tintersects = _BOOL ; \n\t\t\t\t\tyLabel = Math . max ( yLabel , prevLabelBounds . bottom ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tokBounds = ! intersects ; \n\t\t\t} \n\t\tif ( line ) { \n\t\t\ty2 = ( int ) ( yLabel - size / NUM00 ) ; \n\t\t\tcanvas . drawLine ( x1 , y1 , x2 , y2 , paint ) ; \n\t\t\tcanvas . drawLine ( x2 , y2 , x2 + extra , y2 , paint ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F5595 ( paint , Align ) } \n\t\tcanvas . drawText ( labelText , xLabel , yLabel , paint ) ; \n\t\tif ( line ) { \n\t\t\tprevLabelsBounds . add ( new RectF ( xLabel , yLabel , xLabel + widthLabel , yLabel + size ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public void write ( char $F184368 , int off , int len ) { \n\tif ( ( off < NUM00 ) || ( off > c . length ) || ( len < NUM00 ) || ( ( off + len ) > c . length ) || ( ( off + len ) < NUM00 ) ) $F81129 else $F32905 ( len ) int newcount = count + len ; \n\t$F90660 ( newcount , buf , Arrays , Math ) System . arraycopy ( c , off , buf , count , len ) ; \n\tcount = newcount ; \n\t} \n"}, {"code": "$F1309 public static EpisodeMatchingResult detectEpisodeFromFilename ( File file ) { \n\t$F74568 ( LOGGER , file ) EpisodeMatchingResult result = new EpisodeMatchingResult $F72 ; \n\t$F20605 ( fileName , file ) result = parseString ( fileName ) ; \n\tCollections . sort ( result . episodes ) ; \n\tMatcher matcher = stackingMarkerPattern . matcher ( result . name ) ; \n\tresult . stackingMarkerFound = matcher . matches ( ) ; \n\t$F586 ( LOGGER , result ) return result ; \n\t} \n"}, {"code": "public static TypedOperation createArrayCreation ( ArrayType arrayType ) { \n\t$F17124 $F204 ( typeList ) ; \n\ttypeList . add ( JavaTypes . INT_TYPE ) ; \n\tTypeTuple inputTypes = new TypeTuple ( typeList ) ; \n\treturn new TypedTermOperation ( new ArrayCreation ( arrayType ) , inputTypes , arrayType ) ; \n\t} \n"}, {"code": "public void fireEvent ( final SPARQLUpdateEvent e ) { \n\tif ( isReadOnly ( ) ) $F53552 $F10057 ( e ) $F19233 ( listeners ) final ISPARQLUpdateListener [ ] a = listeners . toArray ( new ISPARQLUpdateListener $F380 ) ; \n\tfor ( ISPARQLUpdateListener l : a ) { \n\t\tfinal ISPARQLUpdateListener listener = l ; \n\t\ttry { \n\t\t\tlistener . updateEvent ( e ) ; \n\t\t\t} \n\t\tcatch ( Throwable t ) { \n\t\t\tif ( InnerCause . isInnerCause ( t , InterruptedException . class ) ) $F9491 ( t ) log . error ( t , t ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public PreferenceBuilder < PreferenceClass > prefType ( Class < PreferenceClass > prefType ) { \n\tif $F2200 ( VALID_TYPES , prefType ) $F29526 ( prefType ) this . prefType = prefType ; \n\treturn this ; \n\t} \n"}, {"code": "private void expungeStaleEntries $F72 { \n\tfor ( Object x ; \n\t( x = queue . poll ( ) ) != null ; \n\t) { \n\t\tsynchronized ( queue ) { \n\t\t\t$F1431 $F44137 e = ( $F44137 ) x ; \n\t\t\tint i = indexFor ( e . hash , table . length ) ; \n\t\t\t$F44137 prev = table [ i ] ; \n\t\t\t$F44137 p = prev ; \n\t\t\twhile ( p != null ) { \n\t\t\t\t$F44137 next = p . next ; \n\t\t\t\tif ( p == e ) { \n\t\t\t\t\tif ( prev == e ) table [ i ] = next ; \n\t\t\t\t\telse prev . next = next ; \n\t\t\t\t\te . value = null ; \n\t\t\t\t\tsize -- ; \n\t\t\t\t\t$F597 } \n\t\t\t\tprev = p ; \n\t\t\t\tp = next ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected boolean isNumeric ( String text ) { \n\t$F1382 ( text ) $F1749 ( tlen , text ) for ( $F119 ( i , tlen ) ) { \n\t\tif ( $F69553 ( Character , text , i ) == _BOOL ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static boolean isChar ( String desc ) $F74727 ( desc ) "}, {"code": "public RSAPublicKeyImpl $F97 ( encoded ) throws InvalidKeyException { \n\tdecode ( encoded ) ; \n\tRSAKeyFactory . checkRSAProviderKeyLengths ( n . bitLength ( ) , e ) ; \n\t} \n"}, {"code": "$F14370 ( calendar ) "}, {"code": "public boolean isClientAuthentication $F72 { \n\treturn clientAuthentication ; \n\t} \n"}, {"code": "private JPanel createImageFilePanel $F72 { \n\t$F58099 ( panel ) $F58103 ( panel , BoxLayout ) panel . add ( imageFileName ) ; \n\t$F154814 ( panel , Box ) panel . add ( new JButton ( openImageFile ) ) ; \n\treturn panel ; \n\t} \n"}, {"code": "void writeLine ( BufferedWriter writer , String line ) throws IOException $F64858 ( writer , line ) "}, {"code": "public Layer childAt ( int index ) $F8314 ( children , index ) "}, {"code": "private static void checkPermission $F72 { \n\t$F8108 ( security , System ) $F69732 ( security , modifyThreadPermission ) } \n"}, {"code": "public static Function < Value , Value > ofValue $F72 { \n\treturn VALUE ; \n\t} \n"}, {"code": "public static String removeQuotes ( String s ) { \n\t$F1338 ( s ) $F9652 ( trimmed , s ) $F83314 ( trimmed ) int i = nextNonQuoteIndex ( trimmed , NUM00 , _BOOL ) ; \n\tint j = nextNonQuoteIndex ( trimmed , $F1092 ( trimmed ) , _BOOL ) ; \n\treturn trimmed . substring ( i , j + NUM00 ) ; \n\t} \n"}, {"code": "public static boolean isDefinedNSDecl ( SerializationHandler serializer , int attr , DTM dtm ) { \n\tif ( DTM . NAMESPACE_NODE == dtm . getNodeType ( attr ) ) { \n\t\tString prefix = dtm . getNodeNameX ( attr ) ; \n\t\tString uri = serializer . getNamespaceURIFromPrefix ( prefix ) ; \n\t\tif ( ( null != uri ) && uri . equals ( dtm . getStringValue ( attr ) ) ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void testUserDataHandlerNotifiedOfShallowClones $F72 { \n\tRecordingHandler handler = new RecordingHandler $F72 ; \n\t$F104177 ( name , handler ) $F104177 ( name , handler ) $F104177 ( standard , handler ) $F104177 ( waffles , handler ) Element clonedName = ( Element ) name . cloneNode ( _BOOL ) ; \n\tAttr clonedStandard = clonedName . getAttributeNode ( NUM00 ) ; \n\t$F2695 ( expected ) $F104187 ( expected , notification , NODE_CLONED , name , clonedName ) $F104187 ( expected , notification , NODE_CLONED , name , clonedName ) $F104187 ( expected , notification , NODE_CLONED , standard , clonedStandard ) assertEquals ( expected , handler . calls ) ; \n\t} \n"}, {"code": "public DBasicConstraints $F157465 ( parent , value ) throws IOException $F157466 ( super , parent , setTitle , res , initComponents , prepopulateWithValue , value ) "}, {"code": "private static int lastIndexOf ( Object o , $F131 elements , int index ) { \n\tif ( o == null ) { \n\t\tfor ( $F141 ( i , index ) ) if ( elements [ i ] == null ) return i ; \n\t\t} \n\telse { \n\t\tfor ( $F141 ( i , index ) ) if $F145 ( o , elements , i ) return i ; \n\t\t} \n\t$F150 } \n"}, {"code": "public FloatColumn ( int nrows , int capacity , float defaultValue ) { \n\tsuper ( $F41248 , new Float ( defaultValue ) ) ; \n\t$F49020 ( capacity , nrows ) $F189191 ( m_values , capacity ) Arrays . fill ( m_values , defaultValue ) ; \n\tm_size = nrows ; \n\t} \n"}, {"code": "void readPRJ $F72 throws IOException { \n\twhile ( _BOOL ) { \n\t\t$F27015 ( S , isr ) $F8249 ( S ) if $F3106 ( S ) $F665 } \n\t} \n"}, {"code": "private void purgeOne $F72 { \n\tsynchronized ( queue ) { \n\t\tWeakKey key = ( WeakKey ) queue . poll ( ) ; \n\t\tif ( key != null ) { \n\t\t\tsuper . remove ( key . getReferenced ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void checkAlterPeriodConverters $F72 throws SecurityException { \n\t$F8108 ( sm , System ) if ( sm != null ) { \n\t\tsm . checkPermission ( new JodaTimePermission $F580 ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean equals ( final ArtifactCoordinates obj ) { \n\treturn this == obj || obj != null && $F12737 ( groupId , obj ) && $F12737 ( artifactId , obj ) && $F12737 ( version , obj ) && $F12737 ( classifier , obj ) ; \n\t} \n"}, {"code": "public synchronized void add $F7635 ( x , y , value ) { \n\tsuper . add ( x , y ) ; \n\tmValue . add ( value ) ; \n\tupdateRange ( value ) ; \n\t} \n"}, {"code": "private void checkMatrixDimensions ( Matrix B ) { \n\tif ( B . m != m || B . n != n ) $F825 } \n"}, {"code": "public void importFromChange ( Change sourceChange ) { \n\tif ( sourceChange . revision ( ) > NUM00 ) { \n\t\tthis . revisionId = new NumericLiteralImpl ( sourceChange . revision ( ) ) ; \n\t\t} \n\tif ( sourceChange . timestamp ( ) != null ) { \n\t\tDate date = sourceChange . timestamp ( ) ; \n\t\tCalendar c = Calendar . getInstance ( TimeZone . getTimeZone ( NUM00 ) , Locale . ROOT ) ; \n\t\tc . setTime ( date ) ; \n\t\tthis . lastModified = new LiteralImpl ( DatatypeConverter . printDate ( c ) , XMLSchema . DATETIME ) ; \n\t\t} \n\t} \n"}, {"code": "protected PrintWriter lineFileOut ( Document doc ) { \n\treturn lineFileOut ; \n\t} \n"}, {"code": "$F1 public Query newFuzzyQuery ( String text , int fuzziness ) { \n\tif ( settings . lowercaseExpandedTerms ( ) ) { \n\t\ttext = text . toLowerCase ( settings . locale ( ) ) ; \n\t\t} \n\t$F220945 $F234234 ( bq ) ; \n\tbq . setDisableCoord ( _BOOL ) ; \n\tfor ( Map . Entry < String , Float > entry : weights . entrySet ( ) ) { \n\t\ttry { \n\t\t\tQuery q = new FuzzyQuery ( new Term ( entry . getKey ( ) , text ) , fuzziness ) ; \n\t\t\tq . setBoost ( entry . getValue ( ) ) ; \n\t\t\tbq . add ( q , BooleanClause . Occur . SHOULD ) ; \n\t\t\t} \n\t\tcatch ( RuntimeException e ) { \n\t\t\trethrowUnlessLenient ( e ) ; \n\t\t\t} \n\t\t} \n\treturn super . simplify ( bq . build ( ) ) ; \n\t} \n"}, {"code": "public CallChainInfo ( SootMethod m , Stmt s , String type ) { \n\tthis . type = type ; \n\tthis . link = NUM00 ; \n\tthis . method = m ; \n\tthis . stmt = s ; \n\tcalls = NUM00 ; \n\tif $F3057 ( type ) syscalls = NUM00 ; \n\t} \n"}, {"code": "public void startPlayback $F72 { \n\t$F13527 ( Log , TAG ) if ( null == mRecordFile ) $F17931 ( Log , TAG ) mPlayer = new MediaPlayer $F72 ; \n\ttry { \n\t\tmPlayer . setDataSource ( mRecordFile . getAbsolutePath ( ) ) ; \n\t\tLog . d ( TAG , $F62869 ( mRecordFile ) ) ; \n\t\tmPlayer . setOnCompletionListener ( this ) ; \n\t\tmPlayer . setOnErrorListener ( this ) ; \n\t\t$F97691 ( mPlayer ) $F13527 ( Log , TAG ) $F2346 ( mPlayer ) } \n\tcatch ( IOException e ) { \n\t\t$F23815 ( Log , TAG , e ) setError ( ERROR_PLAYER_INTERNAL ) ; \n\t\t$F665 } \n\tcatch ( IllegalArgumentException e ) { \n\t\t$F23815 ( Log , TAG , e ) setError ( ERROR_PLAYER_INTERNAL ) ; \n\t\t$F665 } \n\tcatch ( SecurityException e ) { \n\t\t$F23815 ( Log , TAG , e ) setError ( ERROR_PLAYER_INTERNAL ) ; \n\t\t$F665 } \n\tcatch ( IllegalStateException e ) { \n\t\t$F23815 ( Log , TAG , e ) setError ( ERROR_PLAYER_INTERNAL ) ; \n\t\t$F665 } \n\tsetState ( STATE_PLAYBACK ) ; \n\t$F13527 ( Log , TAG ) } \n"}, {"code": "public static final double sigma ( double a ) { \n\treturn NUM00 / ( NUM00 + Math . exp ( - a ) ) ; \n\t} \n"}, {"code": "private void deleteFilesInDir ( File dir ) { \n\tfor ( $F3445 ( child , dir ) ) $F19636 ( child ) } \n"}, {"code": "public static void notEmpty ( String string , String msg ) { \n\tif $F6036 ( string ) $F29415 ( msg ) } \n"}, {"code": "public static void resetContext $F72 $F70200 ( contexts ) "}, {"code": "public static Object convertToParameterValues ( Object object ) { \n\t$F5363 collection ; \n\tif $F2485 ( object ) { \n\t\tcollection = Arrays . asList ( $F2486 ( object ) ) ; \n\t\t} \n\telse if ( object instanceof Collection ) { \n\t\tcollection = ( $F5363 ) object ; \n\t\t} \n\telse { \n\t\t$F10910 ( LOGGER ) return $F10279 ; \n\t\t} \n\t$F6689 s = new LinkedList $F1432 $F72 ; \n\tfor ( Object o : collection ) { \n\t\tObject converted = convertToParameterValue ( o ) ; \n\t\tif $F2485 ( converted ) { \n\t\t\ts . addAll ( Arrays . asList ( $F2486 ( converted ) ) ) ; \n\t\t\t} \n\t\telse $F207 ( s , converted ) } \n\treturn s . toArray ( $F103414 ( s ) ) ; \n\t} \n"}, {"code": "public boolean logoutUser ( String username , HttpServletRequest req ) { \n\treturn logoutUser ( username , req , _BOOL , _BOOL ) ; \n\t} \n"}, {"code": "public static Operation createOperationToUpdateOrCreateNetworkInterface ( ComputeState existingComputeState , NetworkInterfaceState networkInterface , $F3803 tenantLinks , StatelessService service , boolean isPublic ) { \n\tString existingInterfaceLink = getExistingNetworkInterfaceLink ( existingComputeState , isPublic ) ; \n\tOperation networkInterfaceOperation = null ; \n\tif ( existingInterfaceLink == null ) { \n\t\tnetworkInterfaceOperation = createPostOperation ( service , networkInterface , NetworkInterfaceService . FACTORY_LINK ) ; \n\t\t} \n\telse { \n\t\tnetworkInterfaceOperation = createPatchOperation ( service , networkInterface , existingInterfaceLink ) ; \n\t\t} \n\treturn networkInterfaceOperation ; \n\t} \n"}, {"code": "public CodeSourceFacade ( final CodeSource codeSource ) { \n\tthis . location = codeSource . getLocation ( ) ; \n\tfinal $F65927 certificates = codeSource . getCertificates ( ) ; \n\tif ( null == certificates || NUM00 == certificates . length ) { \n\t\tLOGGER . warning ( String . format ( NUM00 , codeSource ) ) ; \n\t\tthis . firstCertificate = null ; \n\t\t$F665 } \n\tthis . firstCertificate = ( X509Certificate ) certificates [ NUM00 ] ; \n\t} \n"}, {"code": "$F112611 ( encoded , base64Data , len , removeWhiteSpace , FOURBYTE , numberQuadruple , b1 , b2 , b3 , b4 , d1 , d2 , d3 , d4 , i , encodedIndex , dataIndex , decodedData , isData , base64Alphabet , isPad , tmp , System ) "}, {"code": "public JdpBroadcaster ( InetAddress address , InetAddress srcAddress , int port , int ttl ) throws IOException , JdpException { \n\tthis . addr = address ; \n\tthis . port = port ; \n\tProtocolFamily family = ( address instanceof Inet6Address ) ? StandardProtocolFamily . INET6 : StandardProtocolFamily . INET ; \n\tchannel = DatagramChannel . open ( family ) ; \n\tchannel . setOption ( StandardSocketOptions . SO_REUSEADDR , _BOOL ) ; \n\tchannel . setOption ( StandardSocketOptions . IP_MULTICAST_TTL , ttl ) ; \n\tif ( srcAddress != null ) { \n\t\tNetworkInterface interf = NetworkInterface . getByInetAddress ( srcAddress ) ; \n\t\ttry { \n\t\t\tchannel . bind ( new InetSocketAddress ( srcAddress , NUM00 ) ) ; \n\t\t\t} \n\t\tcatch ( UnsupportedAddressTypeException ex ) { \n\t\t\tthrow new JdpException $F580 ; \n\t\t\t} \n\t\tchannel . setOption ( StandardSocketOptions . IP_MULTICAST_IF , interf ) ; \n\t\t} \n\t} \n"}, {"code": "$F136015 ( rrdFile ) "}, {"code": "public Vector rotateInDegree ( double degree ) { \n\treturn rotateInRadian ( Math . toRadians ( degree ) ) ; \n\t} \n"}, {"code": "$F13429 ( criteria , createCriteriaInternal , oredCriteria ) "}, {"code": "public static String toString ( final URI uri , final Charset encoding ) throws IOException { \n\treturn IOUtils . toString ( uri . toURL ( ) , Charsets . toCharset ( encoding ) ) ; \n\t} \n"}, {"code": "public void put ( int fieldNumber , FieldData data ) { \n\tint i = binarySearch ( fieldNumber ) ; \n\tif ( i >= NUM00 ) { \n\t\tmData [ i ] = data ; \n\t\t} \n\telse { \n\t\ti = ~ i ; \n\t\t$F27086 ( i , mSize , mData , DELETED , mFieldNumbers , fieldNumber , data ) if ( mGarbage && mSize >= mFieldNumbers . length ) { \n\t\t\tgc ( ) ; \n\t\t\ti = ~ binarySearch ( fieldNumber ) ; \n\t\t\t} \n\t\tif ( mSize >= mFieldNumbers . length ) { \n\t\t\tint n = idealIntArraySize ( mSize + NUM00 ) ; \n\t\t\t$F4120 ( nkeys , n ) FieldData [ ] nvalues = new FieldData [ n ] ; \n\t\t\t$F7057 ( System , mFieldNumbers , nkeys ) $F7057 ( System , mData , nvalues ) mFieldNumbers = nkeys ; \n\t\t\tmData = nvalues ; \n\t\t\t} \n\t\t$F27098 ( mSize , i , System , mFieldNumbers , mData ) mFieldNumbers [ i ] = fieldNumber ; \n\t\tmData [ i ] = data ; \n\t\tmSize ++ ; \n\t\t} \n\t} \n"}, {"code": "void hideBorder $F72 { \n\tInsets insets = getInsets ( ) ; \n\tsetBorder ( BorderFactory . createEmptyBorder ( insets . top , insets . left , insets . bottom , insets . right ) ) ; \n\t} \n"}, {"code": "public void remove ( String btxn ) { \n\tsynchronized ( filterMap ) { \n\t\tFilterProcessor oldfp = filterMap . get ( btxn ) ; \n\t\tif ( oldfp != null ) $F76730 ( globalExclusionFilters , oldfp , btxnFilters ) } \n\t} \n"}, {"code": "public void add $F7635 ( weight , x , y ) { \n\tobservations . add ( new WeightedObservedPoint ( weight , x , y ) ) ; \n\t} \n"}, {"code": "public boolean addTagId ( final Long tagId ) { \n\tif ( tagId != null && tagId > NUM00 ) $F31974 ( tagIds , tagId ) return _BOOL ; \n\t} \n"}, {"code": "public void supportTlsIntolerantServer ( SSLSocket socket ) { \n\tsocket . setEnabledProtocols ( $F21904 ) ; \n\t} \n"}, {"code": "$F20664 @ TargetApi ( Build . VERSION_CODES . KITKAT ) private static Platform findPlatform $F72 { \n\ttry { \n\t\ttry { \n\t\t\t$F32352 ( Class ) } \n\t\tcatch ( ClassNotFoundException e ) { \n\t\t\t$F32352 ( Class ) } \n\t\tOptionalMethod < Socket > setUseSessionTickets = new OptionalMethod $F200 ( null , NUM00 , $F41254 ) ; \n\t\tOptionalMethod < Socket > setHostname = new OptionalMethod $F200 ( null , NUM00 , $F10062 ) ; \n\t\tMethod trafficStatsTagSocket = null ; \n\t\tMethod trafficStatsUntagSocket = null ; \n\t\tOptionalMethod < Socket > getAlpnSelectedProtocol = null ; \n\t\tOptionalMethod < Socket > setAlpnProtocols = null ; \n\t\ttry { \n\t\t\t$F109041 ( trafficStats , Class ) trafficStatsTagSocket = trafficStats . getMethod ( NUM00 , $F43259 ) ; \n\t\t\ttrafficStatsUntagSocket = trafficStats . getMethod ( NUM00 , $F43259 ) ; \n\t\t\ttry { \n\t\t\t\t$F32352 ( Class ) getAlpnSelectedProtocol = new OptionalMethod $F200 ( $F144055 , NUM00 ) ; \n\t\t\t\tsetAlpnProtocols = new OptionalMethod $F200 ( null , NUM00 , $F144055 ) ; \n\t\t\t\t} \n\t\t\tcatch ( ClassNotFoundException ignored ) $F845 } \n\t\tcatch ( ClassNotFoundException | NoSuchMethodException ignored ) $F845 return new Android ( setUseSessionTickets , setHostname , trafficStatsTagSocket , trafficStatsUntagSocket , getAlpnSelectedProtocol , setAlpnProtocols ) ; \n\t\t} \n\tcatch ( ClassNotFoundException ignored ) $F845 try { \n\t\tString negoClassName = NUM00 ; \n\t\t$F96883 ( negoClass , Class , negoClassName ) $F248719 ( providerClass , Class , negoClassName ) $F248719 ( clientProviderClass , Class , negoClassName ) $F248719 ( serverProviderClass , Class , negoClassName ) Method putMethod = negoClass . getMethod ( NUM00 , SSLSocket . class , providerClass ) ; \n\t\tMethod getMethod = negoClass . getMethod ( NUM00 , SSLSocket . class ) ; \n\t\tMethod removeMethod = negoClass . getMethod ( NUM00 , SSLSocket . class ) ; \n\t\treturn new JdkWithJettyBootPlatform ( putMethod , getMethod , removeMethod , clientProviderClass , serverProviderClass ) ; \n\t\t} \n\tcatch ( ClassNotFoundException | NoSuchMethodException ignored ) $F845 return new Platform $F72 ; \n\t} \n"}, {"code": "public static List < ExecutionEntity > orderFromRootToLeaf ( Collection < ExecutionEntity > executions ) { \n\tList < ExecutionEntity > orderedList = new ArrayList < ExecutionEntity > $F716 ( executions ) ; \n\t$F11293 ( previousIds ) for ( ExecutionEntity execution : executions ) { \n\t\tif ( execution . getParentId ( ) == null ) { \n\t\t\torderedList . add ( execution ) ; \n\t\t\t$F42096 ( previousIds , execution ) } \n\t\t} \n\twhile $F45088 ( orderedList , executions ) { \n\t\tfor ( ExecutionEntity execution : executions ) { \n\t\t\tif ( ! $F60437 ( previousIds , execution ) && previousIds . contains ( execution . getParentId ( ) ) ) { \n\t\t\t\torderedList . add ( execution ) ; \n\t\t\t\t$F42096 ( previousIds , execution ) } \n\t\t\t} \n\t\t} \n\treturn orderedList ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public void initTKF91 $F72 { \n\tint iNumNodes = iParent . length ; \n\tdouble iBeta [ ] = new double [ iNumNodes ] ; \n\t$F10254 ( iB , iNumNodes ) $F10254 ( iE , iNumNodes ) $F10254 ( iH , iNumNodes ) $F10254 ( iN , iNumNodes ) iInitial = NUM00 ; \n\tfor ( $F119 ( i , iNumNodes ) ) { \n\t\tif ( i == iNumNodes - NUM00 ) { \n\t\t\tiBeta [ i ] = NUM00 / iMu ; \n\t\t\tiH [ i ] = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tiBeta [ i ] = Math . exp ( ( iLambda - iMu ) * iTau [ i ] ) ; \n\t\t\tiBeta [ i ] = ( NUM00 - iBeta [ i ] ) / ( iMu - iLambda * iBeta [ i ] ) ; \n\t\t\tiH [ i ] = Math . exp ( - iMu * iTau [ i ] ) * ( NUM00 - iLambda * iBeta [ i ] ) ; \n\t\t\t} \n\t\tiB [ i ] = iLambda * iBeta [ i ] ; \n\t\tiE [ i ] = iMu * iBeta [ i ] ; \n\t\tiN [ i ] = ( NUM00 - iMu * iBeta [ i ] ) * ( NUM00 - iB [ i ] ) - iH [ i ] ; \n\t\tiInitial *= ( NUM00 - iB [ i ] ) ; \n\t\t} \n\t} \n"}, {"code": "public static String serializeExpression ( Node s ) { \n\tif ( s instanceof ASTTerm ) { \n\t\tASTTerm a = ( ASTTerm ) s ; \n\t\treturn ( a . isNotFlag ( ) ? NUM00 : NUM00 ) + NUM00 + a . getTerm ( ) ; \n\t\t} \n\tString prefix = NUM00 ; \n\tString suffix = NUM00 ; \n\tString join = NUM00 ; \n\tif ( s instanceof ASTExpression ) { \n\t\tASTExpression a = ( ASTExpression ) s ; \n\t\tprefix = ( a . isNotFlag ( ) ? NUM00 : NUM00 ) + NUM00 ; \n\t\tsuffix = NUM00 ; \n\t\tjoin = $F373138 ( a ) + NUM00 ; \n\t\t} \n\t$F10144 ( children ) for ( int i = NUM00 ; \n\ti < s . jjtGetNumChildren ( ) ; \n\ti ++ ) { \n\t\tchildren . add ( serializeExpression ( s . jjtGetChild ( i ) ) ) ; \n\t\t} \n\treturn prefix + StringUtils . join ( children , join ) + suffix ; \n\t} \n"}, {"code": "private void defineInternalFrameMenuButtons ( UIDefaults d ) { \n\tString p = NUM00 ; \n\tString c = PAINTER_PREFIX + NUM00 ; \n\td . put ( p + NUM00 , new TitlePaneMenuButtonWindowNotFocusedState $F72 ) ; \n\t$F13782 ( d , p ) d . put ( p + NUM00 , new LazyPainter ( c , TitlePaneMenuButtonPainter . Which . ICON_ENABLED ) ) ; \n\td . put ( p + NUM00 , new LazyPainter ( c , TitlePaneMenuButtonPainter . Which . ICON_DISABLED ) ) ; \n\td . put ( p + NUM00 , new LazyPainter ( c , TitlePaneMenuButtonPainter . Which . ICON_MOUSEOVER ) ) ; \n\td . put ( p + NUM00 , new LazyPainter ( c , TitlePaneMenuButtonPainter . Which . ICON_PRESSED ) ) ; \n\td . put ( p + NUM00 , new LazyPainter ( c , TitlePaneMenuButtonPainter . Which . ICON_ENABLED_WINDOWNOTFOCUSED ) ) ; \n\td . put ( p + NUM00 , new LazyPainter ( c , TitlePaneMenuButtonPainter . Which . ICON_MOUSEOVER_WINDOWNOTFOCUSED ) ) ; \n\td . put ( p + NUM00 , new LazyPainter ( c , TitlePaneMenuButtonPainter . Which . ICON_PRESSED_WINDOWNOTFOCUSED ) ) ; \n\t$F13824 ( d , p ) } \n"}, {"code": "public static $F28319 restoreFromCloneMethod ( URI storage , $F28584 clone , Boolean updateOpStatus , boolean isCG ) { \n\treturn new $F28319 ( NUM00 , storage , clone , updateOpStatus , isCG ) ; \n\t} \n"}, {"code": "$F1 public synchronized void removeDataSourceListener ( DataSourceListener dsl ) $F106 ( m_dataSourceListeners , dsl ) "}, {"code": "public String rightStr ( String str , int length ) { \n\treturn str . substring ( Math . max ( NUM00 , str . length ( ) - length ) ) ; \n\t} \n"}, {"code": "public void clearNameInUnoccupiedBlocks $F72 { \n\tfor ( $F2277 ( i , mBlockEntries ) ) { \n\t\tBlock b = mBlockEntries . get ( i ) ; \n\t\tif ( b . getState ( ) == Block . UNOCCUPIED ) { \n\t\t\t$F187587 ( b ) } \n\t\t} \n\t} \n"}, {"code": "public static Object unserialize ( Data data ) { \n\ttry { \n\t\tClass clazz = ( Class ) Class . forName ( $F28492 ( data ) ) ; \n\t\tif ( clazz . isEnum ( ) ) { \n\t\t\treturn Enum . valueOf ( clazz , data . get ( NUM00 ) ) ; \n\t\t\t} \n\t\telse if ( clazz == Vector3D . class ) { \n\t\t\treturn new Vector3D ( data . get ( NUM00 ) , data . get ( NUM00 ) , data . get ( NUM00 ) ) ; \n\t\t\t} \n\t\telse if ( clazz == Vector2D . class ) { \n\t\t\treturn new Vector2D ( data . get ( NUM00 ) , ( double ) data . get ( NUM00 ) ) ; \n\t\t\t} \n\t\telse $F8587 ( unserialize , clazz , data ) } \n\tcatch ( Exception e ) { \n\t\tthrow new DataException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public static void onGridStop $F72 throws InterruptedException { \n\tsynchronized ( mux ) { \n\t\t$F7546 ( gridCnt ) -- gridCnt ; \n\t\tThread timer0 = timer ; \n\t\tif ( gridCnt == NUM00 && timer0 != null ) { \n\t\t\ttimer = null ; \n\t\t\t$F7589 ( timer0 ) $F14454 ( timer0 ) } \n\t\t} \n\t} \n"}, {"code": "public void pushTemplateFolder $F116884 ( folderName ) throws IOException { \n\tmyLastTemplateFolders . push ( resolveName ( folderName ) ) ; \n\t} \n"}, {"code": "public void printDepthFirst $F72 { \n\tprint ( new DepthFirstEnumerator ( _firstNode ) ) ; \n\t} \n"}, {"code": "protected void drawHorizontalBezier ( Canvas c , ILineDataSet dataSet ) { \n\tTransformer trans = mChart . getTransformer ( dataSet . getAxisDependency ( ) ) ; \n\tint entryCount = dataSet . getEntryCount ( ) ; \n\tEntry entryFrom = dataSet . getEntryForXIndex ( ( mMinX < NUM00 ) ? NUM00 : mMinX , DataSet . Rounding . DOWN ) ; \n\tEntry entryTo = dataSet . getEntryForXIndex ( mMaxX , DataSet . Rounding . UP ) ; \n\tint diff = ( entryFrom == entryTo ) ? NUM00 : NUM00 ; \n\tint minx = Math . max ( dataSet . getEntryIndex ( entryFrom ) - diff , NUM00 ) ; \n\tint maxx = Math . min ( Math . max ( minx + NUM00 , dataSet . getEntryIndex ( entryTo ) + NUM00 ) , entryCount ) ; \n\tfloat phaseX = Math . max ( NUM00 , Math . min ( NUM00 , mAnimator . getPhaseX ( ) ) ) ; \n\tfloat phaseY = mAnimator . getPhaseY ( ) ; \n\t$F2268 ( cubicPath ) int size = ( int ) Math . ceil ( ( maxx - minx ) * phaseX + minx ) ; \n\tif ( size - minx >= NUM00 ) { \n\t\tEntry prev = dataSet . getEntryForIndex ( minx ) ; \n\t\tEntry cur = prev ; \n\t\tcubicPath . moveTo ( cur . getXIndex ( ) , cur . getVal ( ) * phaseY ) ; \n\t\tfor ( int j = minx + NUM00 , count = Math . min ( size , entryCount ) ; \n\t\tj < count ; \n\t\tj ++ ) { \n\t\t\tprev = dataSet . getEntryForIndex ( j - NUM00 ) ; \n\t\t\tcur = dataSet . getEntryForIndex ( j ) ; \n\t\t\tfinal float cpx = ( float ) ( prev . getXIndex ( ) ) + ( float ) ( cur . getXIndex ( ) - prev . getXIndex ( ) ) / NUM00 ; \n\t\t\tcubicPath . cubicTo ( cpx , prev . getVal ( ) * phaseY , cpx , cur . getVal ( ) * phaseY , cur . getXIndex ( ) , cur . getVal ( ) * phaseY ) ; \n\t\t\t} \n\t\t} \n\tif ( dataSet . isDrawFilledEnabled ( ) ) { \n\t\t$F2268 ( cubicFillPath ) cubicFillPath . addPath ( cubicPath ) ; \n\t\tdrawCubicFill ( mBitmapCanvas , dataSet , cubicFillPath , trans , minx , size ) ; \n\t\t} \n\t$F14782 ( mRenderPaint , dataSet ) mRenderPaint . setStyle ( Paint . Style . STROKE ) ; \n\ttrans . pathValueToPixel ( cubicPath ) ; \n\tmBitmapCanvas . drawPath ( cubicPath , mRenderPaint ) ; \n\tmRenderPaint . setPathEffect ( null ) ; \n\t} \n"}, {"code": "public void addEvent ( SimEvent newEvent ) { \n\t$F23206 ( eventTime , newEvent ) if ( eventTime >= maxTime ) { \n\t\tlist . add ( newEvent ) ; \n\t\tmaxTime = eventTime ; \n\t\t$F665 } \n\tListIterator < SimEvent > iterator = list . listIterator ( ) ; \n\tSimEvent event ; \n\twhile $F2921 ( iterator ) { \n\t\t$F45366 ( event , iterator ) if $F14791 ( event , eventTime ) { \n\t\t\t$F45359 ( iterator ) iterator . add ( newEvent ) ; \n\t\t\t$F665 } \n\t\t} \n\tlist . add ( newEvent ) ; \n\t} \n"}, {"code": "public DbSchemaEjbGenerator ( GeneratedTables genTables , SchemaElement schemaElement ) { \n\tthis ( genTables , schemaElement , CollectionType . COLLECTION , _BOOL , _BOOL , _BOOL ) ; \n\t} \n"}, {"code": "$F1 public void initialize $F72 { \n\tboard = null ; \n\tswitch ( simPaneCtrl . getParamValueIndex ( PARAM_INIT_CONF ) ) { \n\t\t$F3366 board = new EightPuzzleBoard ( new int [ ] { \n\t\t\tNUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t\t) ; \n\t\t$F597 $F3366 board = new EightPuzzleBoard ( new int [ ] { \n\t\t\tNUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t\t) ; \n\t\t$F597 $F3366 board = new EightPuzzleBoard ( new int [ ] { \n\t\t\tNUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t\t) ; \n\t\t$F597 $F3366 board = new EightPuzzleBoard ( new int [ ] { \n\t\t\tNUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t\t) ; \n\t\tRandom r = new Random $F30 ( System ) ; \n\t\tfor ( $F6268 ( i ) ) { \n\t\t\tswitch ( r . nextInt ( NUM00 ) ) { \n\t\t\t\t$F3366 board . moveGapUp ( ) ; \n\t\t\t\t$F597 $F3366 board . moveGapDown ( ) ; \n\t\t\t\t$F597 $F3366 board . moveGapLeft ( ) ; \n\t\t\t\t$F597 $F3366 board . moveGapRight ( ) ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t} \n\tstateViewCtrl . initialize ( board ) ; \n\t} \n"}, {"code": "protected abstract void onOpen ( HTableInterface tbl , Scan scan ) throws IOException ; \n"}, {"code": "private static void addAbbreviation ( String primitive , String abbreviation ) { \n\tabbreviationMap . put ( primitive , abbreviation ) ; \n\treverseAbbreviationMap . put ( abbreviation , primitive ) ; \n\t} \n"}, {"code": "private void initTreeMap $F72 { \n\t$F23170 ( entityType ) if $F21935 ( entityType ) { \n\t\timageMap = RotatingEntityManager . getCircle ( ) ; \n\t\t} \n\tif $F21935 ( entityType ) { \n\t\timageMap = RotatingEntityManager . getMouse ( ) ; \n\t\t} \n\telse if $F21935 ( entityType ) { \n\t\timageMap = RotatingEntityManager . getRotatingTileset ( NUM00 , NUM00 ) ; \n\t\t} \n\telse if $F21935 ( entityType ) { \n\t\timageMap = RotatingEntityManager . getRotatingTileset ( NUM00 , NUM00 ) ; \n\t\t} \n\telse if $F21935 ( entityType ) { \n\t\timageMap = RotatingEntityManager . getRotatingTileset ( NUM00 , NUM00 ) ; \n\t\t} \n\telse if $F21935 ( entityType ) { \n\t\timageMap = RotatingEntityManager . getRotatingTileset ( NUM00 , NUM00 ) ; \n\t\t} \n\telse if $F21935 ( entityType ) { \n\t\timageMap = RotatingEntityManager . getRotatingTileset ( NUM00 , NUM00 ) ; \n\t\t} \n\telse if $F21935 ( entityType ) { \n\t\timageMap = RotatingEntityManager . getRotatingTileset ( NUM00 , NUM00 ) ; \n\t\t} \n\telse if $F21935 ( entityType ) { \n\t\timageMap = RotatingEntityManager . getRotatingTileset ( NUM00 , NUM00 ) ; \n\t\t} \n\telse if $F21935 ( entityType ) { \n\t\timageMap = RotatingEntityManager . getRotatingTileset ( NUM00 , NUM00 ) ; \n\t\t} \n\telse if $F21935 ( entityType ) { \n\t\timageMap = RotatingEntityManager . getRotatingTileset ( NUM00 , NUM00 ) ; \n\t\t} \n\tupdate ( ) ; \n\t} \n"}, {"code": "public static File locateReplicatorHomeDir $F72 { \n\tif ( replicatorHomeDir == null ) { \n\t\t$F7601 ( replicatorHome , System , HOME_DIR ) if ( replicatorHome == null ) $F109927 ( replicatorHome , System ) $F24661 ( replicatorHomeDir , replicatorHome ) if $F4926 ( replicatorHomeDir ) { \n\t\t\tthrow new ServerRuntimeException ( NUM00 + replicatorHomeDir ) ; \n\t\t\t} \n\t\t} \n\treturn replicatorHomeDir ; \n\t} \n"}, {"code": "public StringData ( String data ) { \n\tm_data = data ; \n\t} \n"}, {"code": "void writeRepeatedSqr ( DD xdd ) { \n\tif ( xdd . ge ( DD . valueOf ( NUM00 ) ) ) $F824 int count = NUM00 ; \n\twhile ( xdd . doubleValue ( ) > NUM00 ) { \n\t\tcount ++ ; \n\t\tif ( count == NUM00 ) count = count ; \n\t\t$F50466 ( x , xdd ) DD xSqr = xdd . sqr ( ) ; \n\t\t$F1822 ( s , xSqr ) $F23375 ( xSqr2 , DD , s ) xdd = xSqr ; \n\t\t} \n\t} \n"}, {"code": "public $F21637 append ( float f ) $F21638 ( internal , f , this ) "}, {"code": "public static final void open ( File file ) throws NoSuchMethodException { \n\tif ( Platform . isMacOSX ( ) ) { \n\t\texecArgs ( $F20268 ( file ) ) ; \n\t\t} \n\telse if ( Platform . isWindows ( ) ) { \n\t\tif $F3444 ( file ) { \n\t\t\texecArgs ( $F20268 ( file ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\texecArgs ( $F20268 ( file ) ) ; \n\t\t\t} \n\t\t} \n\telse if ( Platform . isUnix ( ) && hasUnixCommand ( NUM00 ) ) { \n\t\t$F31227 ( execArgs , file ) } \n\telse if ( Platform . isUnix ( ) && hasUnixCommand ( NUM00 ) ) { \n\t\t$F31227 ( execArgs , file ) } \n\telse if ( Platform . isSolaris ( ) && file . isDirectory ( ) ) { \n\t\texecArgs ( NUM00 , NUM00 , file . getAbsolutePath ( ) ) ; \n\t\t} \n\telse { \n\t\tthrow new NoSuchMethodException $F580 ; \n\t\t} \n\t} \n"}, {"code": "$F1 public String testDestination ( Location destination , Track track ) { \n\tString status = super . testDestination ( destination , track ) ; \n\tif ( ! status . equals ( Track . OKAY ) ) { \n\t\treturn status ; \n\t\t} \n\t$F1933 ( track , status ) return track . checkSchedule ( this ) ; \n\t} \n"}, {"code": "public void close $F72 throws $F3258 { \n\tflushBuffer ( ) ; \n\t$F59 ( m_os ) } \n"}, {"code": "private static $F806 norm ( String path ) { \n\t$F6542 ( elements , path ) $F8728 ( stack ) for ( String e : elements ) { \n\t\tif ( e . isEmpty ( ) || e . equals ( NUM00 ) ) $F598 if $F3057 ( e ) { \n\t\t\tif $F5973 ( stack ) $F30606 ( stack ) else $F1274 $F598 } \n\t\tstack . add ( e ) ; \n\t\t} \n\t$F14862 ( stack ) } \n"}, {"code": "static Random random $F72 { \n\tif ( null == LUCENE_TEST_CASE ) $F1337 else { \n\t\ttry { \n\t\t\t$F193147 ( randomMethod , LUCENE_TEST_CASE ) return ( Random ) randomMethod . invoke ( null ) ; \n\t\t\t} \n\t\t$F54147 ( e ) } \n\t} \n"}, {"code": "protected String record ( String deployment ) { \n\tdeployments . add ( deployment ) ; \n\treturn deployment ; \n\t} \n"}, {"code": "protected void onBeforeStart ( BundleContext ctx ) $F845 "}, {"code": "$F1 public void onSuccess ( DLSN value ) { \n\tif ( value . getLogSegmentSequenceNo ( ) != currentLogSegmentSeqNo ) { \n\t\tLOG . error ( NUM00 , value . getLogSegmentSequenceNo ( ) , currentLogSegmentSeqNo ) ; \n\t\terrorsFound . set ( _BOOL ) ; \n\t\t} \n\tif ( verifyEntryId && value . getEntryId ( ) != currentEntryId ) { \n\t\tLOG . error ( NUM00 , value . getEntryId ( ) , currentEntryId ) ; \n\t\terrorsFound . set ( _BOOL ) ; \n\t\t} \n\t$F38783 ( syncLatch ) } \n"}, {"code": "private static void shutDownMySQLAbandonedConnectionCleanupThread ( ClassLoader classLoader ) { \n\ttry { \n\t\t$F33929 ( mysqlCleanupThreadClass ) try { \n\t\t\tmysqlCleanupThreadClass = classLoader . loadClass ( NUM00 ) ; \n\t\t\t} \n\t\tcatch ( ClassNotFoundException e ) { \n\t\t\tLOG . trace ( NUM00 + NUM00 , e ) ; \n\t\t\t$F665 } \n\t\t$F193147 ( shutdownMethod , mysqlCleanupThreadClass ) $F188761 ( shutdownMethod ) $F980 ( LOG ) } \n\tcatch ( Throwable e ) $F23016 ( LOG , e ) } \n"}, {"code": "public void write $F97 ( buffer ) { \n\tif ( isFinal ) { \n\t\t$F18143 ( log ) $F665 } \n\t$F148496 ( newData , data , buffer ) $F7057 ( System , data , newData ) $F11244 ( System , buffer , newData , data ) data = newData ; \n\t} \n"}, {"code": "public String parse ( String controlTemplate , Context controlContext ) throws Exception { \n\tthis . controlContext = controlContext ; \n\tfillContextDefaults ( this . controlContext ) ; \n\tfillContextProperties ( this . controlContext ) ; \n\tTemplate template = getTemplate ( controlTemplate , inputEncoding ) ; \n\t$F29429 ( sw ) template . merge ( controlContext , sw ) ; \n\t$F92 ( sw ) } \n"}, {"code": "$F9749 ( namespace , attName , attValue , xmlWriter , registerPrefix ) "}, {"code": "protected boolean onCreateCustomFromTag ( XmlPullParser parser , T parent , final AttributeSet attrs ) throws XmlPullParserException { \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static long writeFile ( String path , $F96 jpeg , ExifInterface exif ) throws IOException { \n\tif ( ! createDirectoryIfNeeded ( path ) ) { \n\t\t$F110901 ( Log , TAG , path ) $F150 } \n\tif ( exif != null ) { \n\t\texif . writeExif ( jpeg , path ) ; \n\t\t$F1705 ( f , path ) $F55826 ( f ) } \n\telse $F8587 ( writeFile , path , jpeg ) } \n"}, {"code": "private boolean checkForImageServers $F72 { \n\tboolean imageServerExists = _BOOL ; \n\t$F28584 imageServerURIList = _dbClient . queryByType ( ComputeImageServer . class , _BOOL ) ; \n\tArrayList < URI > tempList = Lists . newArrayList ( imageServerURIList . iterator ( ) ) ; \n\t$F159338 ( tempList , imageServerExists , _BOOL ) return imageServerExists ; \n\t} \n"}, {"code": "final long now $F72 { \n\treturn System . nanoTime ( ) ; \n\t} \n"}, {"code": "public void removeExtension ( String ext ) { \n\tsynchronized ( exts ) { \n\t\t$F37156 ( ext ) exts . remove ( ext ) ; \n\t\t} \n\t} \n"}, {"code": "protected SuballocatedIntVector findNamespaceContext ( int elementNodeIndex ) { \n\tif ( null != m_namespaceDeclSetElements ) { \n\t\tint wouldBeAt = findInSortedSuballocatedIntVector ( m_namespaceDeclSetElements , elementNodeIndex ) ; \n\t\tif ( wouldBeAt >= NUM00 ) return $F28383 ( m_namespaceDeclSets , wouldBeAt ) ; \n\t\t$F28386 ( wouldBeAt ) wouldBeAt = - NUM00 - wouldBeAt ; \n\t\tint candidate = m_namespaceDeclSetElements . elementAt ( -- wouldBeAt ) ; \n\t\tint ancestor = _parent ( elementNodeIndex ) ; \n\t\tif ( wouldBeAt == NUM00 && candidate < ancestor ) { \n\t\t\tint rootHandle = getDocumentRoot ( makeNodeHandle ( elementNodeIndex ) ) ; \n\t\t\tint rootID = makeNodeIdentity ( rootHandle ) ; \n\t\t\tint uppermostNSCandidateID ; \n\t\t\tif ( getNodeType ( rootHandle ) == DTM . DOCUMENT_NODE ) { \n\t\t\t\tint ch = _firstch ( rootID ) ; \n\t\t\t\tuppermostNSCandidateID = ( ch != DTM . NULL ) ? ch : rootID ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tuppermostNSCandidateID = rootID ; \n\t\t\t\t} \n\t\t\tif ( candidate == uppermostNSCandidateID ) { \n\t\t\t\treturn $F28383 ( m_namespaceDeclSets , wouldBeAt ) ; \n\t\t\t\t} \n\t\t\t} \n\t\twhile ( wouldBeAt >= NUM00 && ancestor > NUM00 ) { \n\t\t\tif ( candidate == ancestor ) { \n\t\t\t\treturn $F28383 ( m_namespaceDeclSets , wouldBeAt ) ; \n\t\t\t\t} \n\t\t\telse if ( candidate < ancestor ) { \n\t\t\t\tdo $F8576 ( ancestor , _parent ) while ( candidate < ancestor ) ; \n\t\t\t\t} \n\t\t\telse if ( wouldBeAt > NUM00 ) { \n\t\t\t\tcandidate = m_namespaceDeclSetElements . elementAt ( -- wouldBeAt ) ; \n\t\t\t\t} \n\t\t\telse $F597 } \n\t\t} \n\t$F1274 } \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public void addObserver ( Observer observer ) { \n\t$F896 ( observer ) synchronized ( this ) $F24128 ( observers , observer ) } \n"}, {"code": "public static void closeOutputStream ( OutputStream stream , String tag ) $F144343 ( stream , Log , tag , e ) "}, {"code": "protected double distance ( int i , int k , $F2027 designations ) { \n\treturn Math . sqrt ( Math . max ( selfK [ i ] - NUM00 / ownes [ k ] * evalSumK ( i , k , designations ) + meanSqrdNorms [ k ] * normConsts [ k ] , NUM00 ) ) ; \n\t} \n"}, {"code": "public StringBuffer format ( Object pat , StringBuffer result , FieldPosition fpos ) { \n\tString pattern = processPattern ( ( String ) pat ) ; \n\tint lastOffset = NUM00 ; \n\tfor ( $F50176 ( i , maxOffset ) ) { \n\t\tint offidx = offsets [ i ] ; \n\t\tresult . append ( pattern . substring ( lastOffset , offsets [ i ] ) ) ; \n\t\tlastOffset = offidx ; \n\t\tString key = arguments [ i ] ; \n\t\tString obj ; \n\t\tif $F4012 ( key ) { \n\t\t\tobj = formatObject ( processKey ( key ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tresult . append ( this . ldel ) ; \n\t\t\tresult . append ( this . rdel ) ; \n\t\t\t$F598 } \n\t\tif ( obj == null ) { \n\t\t\tString lessgreedy = ldel + key ; \n\t\t\t$F162792 ( fromright , lessgreedy , ldel ) if ( fromright > NUM00 ) { \n\t\t\t\tString $F162564 ( newkey , lessgreedy , fromright , ldel ) ; \n\t\t\t\tString newsubst = formatObject ( processKey ( newkey ) ) ; \n\t\t\t\tif ( newsubst != null ) { \n\t\t\t\t\tobj = lessgreedy . substring ( NUM00 , fromright ) + newsubst ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tif ( obj == null ) { \n\t\t\tif ( throwex ) $F825 else { \n\t\t\t\tobj = ldel + key + rdel ; \n\t\t\t\t} \n\t\t\t} \n\t\tresult . append ( obj ) ; \n\t\t} \n\tresult . append ( $F83851 ( pattern , lastOffset ) ) ; \n\treturn result ; \n\t} \n"}, {"code": "public void add ( String keyword , byte id ) { \n\tint key = getStringMapKey ( keyword ) ; \n\tmap [ key ] = new Keyword ( keyword . toCharArray ( ) , id , map [ key ] ) ; \n\t} \n"}, {"code": "void release ( Object owner , Field field ) { \n\t$F8435 fields = owners . get ( owner ) ; \n\tif ( fields != null ) { \n\t\trelease ( ) ; \n\t\tInteger count = fields . get ( field . toGenericString ( ) ) ; \n\t\tif ( -- count > NUM00 ) { \n\t\t\tfields . put ( field . toGenericString ( ) , count ) ; \n\t\t\t} \n\t\telse { \n\t\t\tfields . remove ( field . toGenericString ( ) ) ; \n\t\t\t} \n\t\t} \n\tif $F171402 ( fields ) $F106 ( owners , owner ) } \n"}, {"code": "public static List < DashboardDto > transformToDto ( List < Dashboard > dashboards ) { \n\t$F3758 ( dashboards , Status ) List < DashboardDto > result = new ArrayList < DashboardDto > $F72 ; \n\tfor ( Dashboard dashboard : dashboards ) $F3762 ( result , transformToDto , dashboard ) return result ; \n\t} \n"}, {"code": "static Executor screenExecutor ( Executor e ) { \n\tif ( ! useCommonPool && e == ForkJoinPool . commonPool ( ) ) return asyncPool ; \n\t$F61745 ( e ) return e ; \n\t} \n"}, {"code": "public void addGroupPropertiesListener ( GroupPropertiesListener groupPropertiesListener ) $F207 ( groupPropertiesListeners , groupPropertiesListener ) "}, {"code": "public static void editGlobalFunctionComment ( final AbstractSQLProvider provider , final INaviFunction function , final Integer commentId , final Integer userId , final String newComment ) throws CouldntSaveDataException { \n\tPostgreSQLCommentFunctions . editComment ( provider , commentId , userId , newComment ) ; \n\t} \n"}, {"code": "public void load ( Element element , Object o ) $F21338 ( log ) "}, {"code": "public synchronized void clearSessions ( Context context , Boolean clearCredentials ) { \n\tsynchronized ( instance ) { \n\t\twhile $F3817 ( mMXSessions ) { \n\t\t\tclearSession ( context , mMXSessions . get ( NUM00 ) , clearCredentials ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean doesEntryExists ( SSOToken token , String entryDN ) { \n\ttry { \n\t\tPersistentObject po = UMSObject . getObject ( internalToken , new Guid ( entryDN ) ) ; \n\t\t} \n\tcatch ( UMSException ue ) { \n\t\tif $F1731 ( entryDN ) { \n\t\t\tif $F6299 ( debug ) { \n\t\t\t\tdebug . message ( NUM00 + NUM00 , ue ) ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private static $F1469 yy_unpack_cmap ( String packed ) { \n\t$F11577 ( map ) int i = NUM00 ; \n\tint j = NUM00 ; \n\twhile ( i < NUM00 ) { \n\t\t$F52835 ( count , packed , i ) $F52837 ( value , packed , i ) do map [ j ++ ] = value ; \n\t\twhile ( -- count > NUM00 ) ; \n\t\t} \n\treturn map ; \n\t} \n"}, {"code": "$F91084 "}, {"code": "private static int hashWrapperName ( String xn ) { \n\tif $F3599 ( xn ) $F1083 return ( NUM00 * xn . charAt ( NUM00 ) + xn . charAt ( NUM00 ) ) % NUM00 ; \n\t} \n"}, {"code": "$F1 public final void startElement ( final String ns , final String lName , final String qName , final Attributes list ) throws SAXException { \n\t$F89266 ( name , lName , qName ) $F1350 ( sb , match ) if $F4012 ( match ) $F86 ( sb ) sb . append ( name ) ; \n\t$F6947 ( match , sb ) $F89270 ( r , RULES , match ) if ( r != null ) { \n\t\tr . begin ( name , list ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean isString ( String key ) { \n\tObject val = get ( key ) ; \n\treturn val instanceof String ; \n\t} \n"}, {"code": "private void createPRWithTotalNumPropSetList ( List vmList , int startIndexForRegion , int endIndexForRegion , int localMaxMemory , int redundancy ) { \n\t$F10531 ( nodeIterator , vmList ) while $F2921 ( nodeIterator ) { \n\t\t$F90160 ( vm , nodeIterator ) vm . invoke ( createMultiplePRWithTotalNumBucketPropSet ( prPrefix , startIndexForRegion , endIndexForRegion , redundancy , localMaxMemory , NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "public Zdiagmat ( Zmat A , int k ) throws JampackException { \n\tParameters . BaseIndexNotChangeable = _BOOL ; \n\tbasex = Parameters . BaseIndex ; \n\tif ( k >= NUM00 ) { \n\t\tif ( k >= A . ncol ) { \n\t\t\tthrow new JampackException $F580 ; \n\t\t\t} \n\t\torder = Math . min ( A . nrow , A . ncol - k ) ; \n\t\t$F10254 ( re , order ) $F10254 ( im , order ) for ( $F119 ( i , order ) ) { \n\t\t\tre [ i ] = A . re [ i ] [ i + k ] ; \n\t\t\tim [ i ] = A . im [ i ] [ i + k ] ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tk = - k ; \n\t\tif ( k >= A . nrow ) { \n\t\t\tthrow new JampackException $F580 ; \n\t\t\t} \n\t\torder = Math . min ( A . nrow - k , A . ncol ) ; \n\t\t$F10254 ( re , order ) $F10254 ( im , order ) for ( $F119 ( i , order ) ) { \n\t\t\tre [ i ] = A . re [ i + k ] [ i ] ; \n\t\t\tim [ i ] = A . im [ i + k ] [ i ] ; \n\t\t\t} \n\t\t} \n\tgetProperties ( ) ; \n\t} \n"}, {"code": "protected void checkAntVersion ( Hashtable h ) { \n\t$F59851 ( h ) try { \n\t\tfinal String ANT_VERSION_CLASS = NUM00 ; \n\t\tfinal String ANT_VERSION_METHOD = NUM00 ; \n\t\t$F59875 $F59855 ( clazz , ObjectFactory , ANT_VERSION_CLASS , _BOOL ) $F59876 ( method , clazz , ANT_VERSION_METHOD , noArgs ) Object returnValue = $F48029 ( method ) ; \n\t\th . put ( VERSION + NUM00 , ( String ) returnValue ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\th . put ( VERSION + NUM00 , CLASS_NOTPRESENT ) ; \n\t\t} \n\t} \n"}, {"code": "public void buildNetwork $F72 { \n\tNeuron firstNeuron = new Neuron ( network , DEFAULT_NEURON_TYPE ) ; \n\t$F372817 currentLayer = new ArrayList $F257385 $F72 ; \n\tfirstNeuron . setPosition ( initialPosition ) ; \n\tcurrentLayer . add ( firstNeuron ) ; \n\tint numNeuronsLastLayer = ( int ) Math . pow ( numBrachesPerNeuron , numLayers ) ; \n\tdouble totalSpace = numNeuronsLastLayer * horizontalSpacing ; \n\tfor ( $F9993 ( layerIndex , numLayers ) ) { \n\t\t$F372817 tempList = new ArrayList $F257385 $F72 ; \n\t\tdouble layerSpacing = totalSpace / ( int ) Math . pow ( numBrachesPerNeuron , layerIndex ) ; \n\t\tdouble branchWidth = layerSpacing * ( numBrachesPerNeuron - NUM00 ) ; \n\t\tfor ( Neuron baseNeuron : currentLayer ) { \n\t\t\tnetwork . addNeuron ( baseNeuron ) ; \n\t\t\tdouble initialXOffset = branchWidth / NUM00 ; \n\t\t\tfor ( $F119 ( j , numBrachesPerNeuron ) ) { \n\t\t\t\tNeuron targetNeuron = new Neuron ( network , new LinearRule $F72 ) ; \n\t\t\t\ttargetNeuron . setLocation ( baseNeuron . getX ( ) - initialXOffset + ( j * layerSpacing ) , initialPosition . y - ( layerIndex * verticalSpacing ) ) ; \n\t\t\t\ttempList . add ( targetNeuron ) ; \n\t\t\t\tnetwork . addNeuron ( targetNeuron ) ; \n\t\t\t\ttargetNeuron . setUpdatePriority ( layerIndex ) ; \n\t\t\t\tSynapse synapse = new Synapse ( network , baseNeuron , targetNeuron , new StaticSynapseRule $F72 ) ; \n\t\t\t\tnetwork . addSynapse ( synapse ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcurrentLayer = tempList ; \n\t\t} \n\t} \n"}, {"code": "private static boolean areEqual ( int fromIndex , CharSequence left , CharSequence right ) { \n\tif ( left == right ) return _BOOL ; \n\tif $F54923 ( left , right ) return _BOOL ; \n\t$F1749 ( n , left ) if $F8732 ( right , n ) return _BOOL ; \n\tfor ( int i = n ; \n\ti > fromIndex ; \n\t) { \n\t\tif ( Character . toUpperCase ( left . charAt ( -- i ) ) != $F29169 ( Character , right , i ) ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void testCase12 $F72 { \n\t$F202702 int bSign = - NUM00 ; \n\t$F15143 BigInteger aNumber = BigInteger . ZERO ; \n\t$F3023 ( bNumber , bSign , bBytes ) $F88893 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public Enumeration productions $F72 $F10806 ( _productions ) "}, {"code": "public void addTightSourceNode ( ASTNode reference ) { \n\tfTightSourceRangeNodes . add ( reference ) ; \n\tList $F223737 properties = reference . structuralPropertiesForType ( ) ; \n\tfor ( Iterator $F223737 iterator = properties . iterator ( ) ; \n\titerator . hasNext ( ) ; \n\t) { \n\t\tStructuralPropertyDescriptor descriptor = iterator . next ( ) ; \n\t\tif ( descriptor . isChildProperty ( ) ) { \n\t\t\tASTNode child = ( ASTNode ) reference . getStructuralProperty ( descriptor ) ; \n\t\t\tif ( child != null && isExtending ( child , reference ) ) { \n\t\t\t\taddTightSourceNode ( child ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( descriptor . isChildListProperty ( ) ) { \n\t\t\tList < ? extends ASTNode > children = ( List < ? extends ASTNode > ) reference . getStructuralProperty ( descriptor ) ; \n\t\t\tfor ( Iterator < ? extends ASTNode > iterator2 = children . iterator ( ) ; \n\t\t\titerator2 . hasNext ( ) ; \n\t\t\t) { \n\t\t\t\tASTNode child = iterator2 . next ( ) ; \n\t\t\t\tif ( isExtending ( child , reference ) ) { \n\t\t\t\t\taddTightSourceNode ( child ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected boolean isEventDisabled ( XEvent e ) { \n\tswitch ( e . get_type ( ) ) { \n\t\tcase XConstants . ConfigureNotify : return _BOOL ; \n\t\tcase XConstants . EnterNotify : case XConstants . LeaveNotify : return _BOOL ; \n\t\t$F1267 return super . isEventDisabled ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public DJarInfo ( JFrame parent ) throws IOException { \n\tthis ( parent , res . getString ( NUM00 ) , ModalityType . DOCUMENT_MODAL ) ; \n\t} \n"}, {"code": "protected void transformPointArrayNoTouch $F74143 ( pts ) { \n\tmMatrixValueToPx . mapPoints ( pts ) ; \n\tmMatrixOffset . mapPoints ( pts ) ; \n\t} \n"}, {"code": "private void convertEscapedFunction ( final StringBuilder target , final CharSequence escapedFunction ) throws FBSQLParseException { \n\tfinal String templateResult = FBEscapedFunctionHelper . convertTemplate ( escapedFunction . toString ( ) , mode ) ; \n\ttarget . append ( templateResult != null ? templateResult : escapedFunction ) ; \n\t} \n"}, {"code": "$F1 public final String toString $F72 { \n\tif ( stringRep == null ) { \n\t\t$F83 ( buffer ) buffer . append ( this . name ) ; \n\t\t$F84 ( buffer ) buffer . append ( Integer . toString ( this . defaultPort ) ) ; \n\t\t$F6947 ( stringRep , buffer ) } \n\treturn stringRep ; \n\t} \n"}, {"code": "public void addListener ( ImsSessionListener listener ) $F207 ( mListeners , listener ) "}, {"code": "public int checkBookiesUp ( int count , int timeout ) throws Exception { \n\tZooKeeper zkc = connectZooKeeper ( zkHost , zkPort , zkTimeoutSec ) ; \n\ttry { \n\t\tint mostRecentSize = NUM00 ; \n\t\tfor ( $F119 ( i , timeout ) ) { \n\t\t\ttry { \n\t\t\t\t$F3803 children = zkc . getChildren ( NUM00 , _BOOL ) ; \n\t\t\t\t$F36382 ( children ) $F8935 ( mostRecentSize , children ) if ( ( mostRecentSize > count ) || LOG . isDebugEnabled ( ) ) { \n\t\t\t\t\tLOG . info ( NUM00 + mostRecentSize + NUM00 + NUM00 + count ) ; \n\t\t\t\t\tif ( ( mostRecentSize > count ) || LOG . isTraceEnabled ( ) ) { \n\t\t\t\t\t\tfor ( String child : children ) $F10090 ( LOG , child ) } \n\t\t\t\t\t} \n\t\t\t\t$F15290 ( mostRecentSize , count ) } \n\t\t\tcatch ( KeeperException e ) $F845 $F9470 ( Thread ) } \n\t\treturn mostRecentSize ; \n\t\t} \n\t$F3229 ( zkc ) } \n"}, {"code": "public static IPath stampToPath ( final long stamp ) { \n\tfgCalendar . setTimeInMillis ( stamp ) ; \n\tfinal StringBuffer buffer = new StringBuffer $F989 ; \n\tbuffer . append ( $F21621 ( fgCalendar , Calendar ) ) ; \n\tbuffer . append ( IPath . SEPARATOR ) ; \n\tbuffer . append ( $F21623 ( fgCalendar , Calendar ) + NUM00 ) ; \n\tbuffer . append ( IPath . SEPARATOR ) ; \n\tbuffer . append ( fgCalendar . get ( Calendar . WEEK_OF_YEAR ) ) ; \n\treturn new Path $F3362 ( buffer ) ; \n\t} \n"}, {"code": "private void addPingTimeData ( long sample ) { \n\t$F8934 ( lastPingTimesLock ) try { \n\t\tif ( lastPingTimes == null ) { \n\t\t\t$F11125 ( lastPingTimes , PING_MOVING_AVERAGE_WINDOW ) Arrays . fill ( lastPingTimes , sample ) ; \n\t\t\t} \n\t\telse { \n\t\t\tSystem . arraycopy ( lastPingTimes , NUM00 , lastPingTimes , NUM00 , lastPingTimes . length - NUM00 ) ; \n\t\t\t$F41606 ( lastPingTimes , sample ) } \n\t\t} \n\t$F796 ( lastPingTimesLock ) } \n"}, {"code": "public void printUserMessage ( UserMessage message ) { \n\tUser user = message . user ; \n\tboolean ignored = message . ignored_compact ; \n\tif ( ignored ) { \n\t\tprintCompact ( NUM00 , user ) ; \n\t\t$F665 } \n\tColor color = message . color ; \n\tboolean action = message . action ; \n\tString text = message . text ; \n\tTagEmotes emotes = message . emotes ; \n\tboolean highlighted = message . highlighted ; \n\tif ( message . whisper && message . action ) { \n\t\tcolor = StyleConstants . getForeground ( styles . info ( ) ) ; \n\t\thighlighted = _BOOL ; \n\t\t} \n\tcloseCompactMode ( ) ; \n\tMutableAttributeSet style ; \n\tif ( highlighted ) { \n\t\tstyle = styles . highlight ( color ) ; \n\t\t} \n\telse { \n\t\tstyle = styles . standard ( ) ; \n\t\t} \n\tprint ( getTimePrefix ( ) , style ) ; \n\tprintUser ( user , action , message . whisper , message . id ) ; \n\tif ( ! highlighted && action && styles . actionColored ( ) ) { \n\t\tstyle = styles . standard ( user . getDisplayColor ( ) ) ; \n\t\t} \n\tprintSpecials ( text , user , style , emotes , _BOOL , message . bits > NUM00 ) ; \n\tprintNewline ( ) ; \n\t} \n"}, {"code": "public boolean connectImpl ( String address , int port ) throws IOException { \n\t_socketTimeout = NUM00 ; \n\t_nativeFd = - NUM00 ; \n\t_isClosed . set ( _BOOL ) ; \n\tsynchronized ( _writeLock ) { \n\t\tboolean isConnect = nativeConnect ( _socketFd , address , port ) ; \n\t\treturn isConnect ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isAccessModifier ( String str ) { \n\treturn $F5129 ( str ) || str . equals ( NUM00 ) || str . equals ( NUM00 ) ; \n\t} \n"}, {"code": "protected void handleAppendRequestFailure ( MemberState member , AppendRequest request , Throwable error ) { \n\tfailAttempt ( member , error ) ; \n\t} \n"}, {"code": "private static SizePair selectSizePair ( Camera camera , int desiredWidth , int desiredHeight ) { \n\t$F39277 validPreviewSizes = generateValidPreviewSizeList ( camera ) ; \n\tSizePair selectedPair = null ; \n\tint minDiff = Integer . MAX_VALUE ; \n\tfor ( SizePair sizePair : validPreviewSizes ) { \n\t\tSize size = sizePair . previewSize ( ) ; \n\t\tint diff = Math . abs ( size . getWidth ( ) - desiredWidth ) + Math . abs ( size . getHeight ( ) - desiredHeight ) ; \n\t\t$F40430 ( diff , minDiff , selectedPair , sizePair ) } \n\treturn selectedPair ; \n\t} \n"}, {"code": "public List < AddressItem > loadAllDeepFromCursor ( Cursor cursor ) { \n\t$F23386 ( count , cursor ) List < AddressItem > list = new ArrayList < AddressItem > ( count ) ; \n\t$F23402 ( cursor , identityScope , count , list , loadCurrentDeep , _BOOL ) return list ; \n\t} \n"}, {"code": "public static String decode $F97 ( utf8 ) throws CharacterCodingException { \n\treturn decode ( ByteBuffer . wrap ( utf8 ) , _BOOL ) ; \n\t} \n"}, {"code": "private $F2539 attributesToLowerCase $F72 { \n\t$F2539 lowerCaseAttributes = new LinkedHashMap $F2538 $F72 ; \n\tfor ( $F3465 ( key , attributes ) ) { \n\t\tlowerCaseAttributes . put ( key . toLowerCase ( ) , attributes . get ( key ) ) ; \n\t\t} \n\treturn lowerCaseAttributes ; \n\t} \n"}, {"code": "$F169786 ( mv , n , visibleTypeAnnotations , i , an , _BOOL , invisibleTypeAnnotations ) "}, {"code": "public static $F4203 $F5675 toList ( T obj1 , T obj2 ) { \n\t$F11916 ( list ) list . add ( obj1 ) ; \n\tlist . add ( obj2 ) ; \n\treturn list ; \n\t} \n"}, {"code": "public $F96 readNextPart $F72 throws JPlagException { \n\tif ( remainingBytes == NUM00 ) { \n\t\tthrow new JPlagException ( $F7288 ) ; \n\t\t} \n\ttry { \n\t\t$F4647 ( in , file ) in . skip ( filesize - remainingBytes ) ; \n\t\tint partsize = remainingBytes ; \n\t\t$F127072 ( partsize ) $F2175 ( data , partsize ) in . read ( data ) ; \n\t\t$F59 ( in ) remainingBytes -= partsize ; \n\t\treturn data ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\t$F301 ( e ) throw new JPlagException ( NUM00 , NUM00 + NUM00 , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean isMultiLineTabbed $F72 { \n\treturn multiLineTab ; \n\t} \n"}, {"code": "protected void computeParameters $F72 { \n\tif ( m_SumOfWeights > NUM00 ) { \n\t\tm_Mean = m_SumOfValues / m_SumOfWeights ; \n\t\tdouble stdDev = Math . sqrt ( Math . abs ( m_SumOfValuesSq - m_Mean * m_SumOfValues ) / m_SumOfWeights ) ; \n\t\tif ( stdDev > NUM00 ) { \n\t\t\tm_StandardDev = Math . max ( m_Precision / $F18752 , stdDev ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public String translateDataType ( String sourceVendorName , String targetVendorName , String dataType , int size , int scale ) { \n\treturn getDataType ( targetVendorName , getDataTypeID ( sourceVendorName , dataType ) , size , scale ) ; \n\t} \n"}, {"code": "public static $F12358 rectangle ( double startx , double starty , double width , double height , double radiusX , double radiusY , double topLeftRadiusX , double topLeftRadiusY , double topRightRadiusX , double topRightRadiusY , double bottomLeftRadiusX , double bottomLeftRadiusY , double bottomRightRadiusX , double bottomRightRadiusY ) { \n\t$F12358 shapeRecords = new ArrayList < ShapeRecord > $F72 ; \n\tif ( radiusX == NUM00 ) { \n\t\tradiusY = radiusX = NUM00 ; \n\t\t} \n\telse $F153178 ( radiusY , radiusX ) if ( radiusX > width / NUM00 ) radiusX = width / NUM00 ; \n\tif ( radiusY > height / NUM00 ) radiusY = height / NUM00 ; \n\t$F1986 topLeftRadius = getCornerRadius ( topLeftRadiusX , topLeftRadiusY , radiusX , radiusY , width , height ) ; \n\ttopLeftRadiusX = topLeftRadius [ NUM00 ] ; \n\ttopLeftRadiusY = topLeftRadius [ NUM00 ] ; \n\t$F1986 topRightRadius = getCornerRadius ( topRightRadiusX , topRightRadiusY , radiusX , radiusY , width , height ) ; \n\ttopRightRadiusX = topRightRadius [ NUM00 ] ; \n\ttopRightRadiusY = topRightRadius [ NUM00 ] ; \n\t$F1986 bottomLeftRadius = getCornerRadius ( bottomLeftRadiusX , bottomLeftRadiusY , radiusX , radiusY , width , height ) ; \n\tbottomLeftRadiusX = bottomLeftRadius [ NUM00 ] ; \n\tbottomLeftRadiusY = bottomLeftRadius [ NUM00 ] ; \n\t$F1986 bottomRightRadius = getCornerRadius ( bottomRightRadiusX , bottomRightRadiusY , radiusX , radiusY , width , height ) ; \n\tbottomRightRadiusX = bottomRightRadius [ NUM00 ] ; \n\tbottomRightRadiusY = bottomRightRadius [ NUM00 ] ; \n\tdouble c0 = NUM00 ; \n\tdouble c1 = NUM00 ; \n\tdouble c3 = NUM00 ; \n\tdouble rx = bottomRightRadiusX ; \n\tdouble ry = bottomRightRadiusY ; \n\tdouble tx = rx / NUM00 ; \n\tdouble ty = ry / NUM00 ; \n\tdouble dx , currentx ; \n\tdouble dy , currenty ; \n\tdx = startx + width - rx ; \n\tdy = starty + height - ry ; \n\tshapeRecords . add ( move ( ( dx + rx ) , dy ) ) ; \n\tcurrentx = ( dx + rx ) ; \n\tcurrenty = dy ; \n\tif ( bottomRightRadiusX != NUM00 ) { \n\t\tshapeRecords . add ( curvedEdge ( currentx , currenty , ( dx + c0 * tx ) , ( dy + c1 * ty ) , ( dx + c3 * rx ) , ( dy + c3 * ry ) ) ) ; \n\t\tshapeRecords . add ( curvedEdge ( ( dx + c3 * rx ) , ( dy + c3 * ry ) , ( dx + c1 * tx ) , ( dy + c0 * ty ) , dx , ( dy + ry ) ) ) ; \n\t\tcurrentx = dx ; \n\t\tcurrenty = dy + ry ; \n\t\t} \n\trx = bottomLeftRadiusX ; \n\try = bottomLeftRadiusY ; \n\ttx = rx / NUM00 ; \n\tty = ry / NUM00 ; \n\tdx = startx + rx ; \n\tdy = starty + height - ry ; \n\tshapeRecords . addAll ( straightEdge ( currentx , currenty , dx , ( dy + ry ) ) ) ; \n\tcurrentx = dx ; \n\tcurrenty = dy + ry ; \n\tif ( bottomLeftRadiusX != NUM00 ) { \n\t\tshapeRecords . add ( curvedEdge ( currentx , currenty , ( dx - c1 * tx ) , ( dy + c0 * ty ) , ( dx - c3 * rx ) , ( dy + c3 * ry ) ) ) ; \n\t\tshapeRecords . add ( curvedEdge ( ( dx - c3 * rx ) , ( dy + c3 * ry ) , ( dx - c0 * tx ) , ( dy + c1 * ty ) , ( dx - rx ) , dy ) ) ; \n\t\tcurrentx = dx - rx ; \n\t\tcurrenty = dy ; \n\t\t} \n\trx = topLeftRadiusX ; \n\try = topLeftRadiusY ; \n\ttx = rx / NUM00 ; \n\tty = ry / NUM00 ; \n\tdx = startx + rx ; \n\tdy = starty + ry ; \n\tshapeRecords . addAll ( straightEdge ( currentx , currenty , ( dx - rx ) , dy ) ) ; \n\tcurrentx = dx - rx ; \n\tcurrenty = dy ; \n\tif ( topLeftRadiusX != NUM00 ) { \n\t\tshapeRecords . add ( curvedEdge ( currentx , currenty , ( dx - c0 * tx ) , ( dy - c1 * ty ) , ( dx - c3 * rx ) , ( dy - c3 * ry ) ) ) ; \n\t\tshapeRecords . add ( curvedEdge ( ( dx - c3 * rx ) , ( dy - c3 * ry ) , ( dx - c1 * tx ) , ( dy - c0 * ty ) , dx , ( dy - ry ) ) ) ; \n\t\tcurrentx = dx ; \n\t\tcurrenty = dy - ry ; \n\t\t} \n\trx = topRightRadiusX ; \n\try = topRightRadiusY ; \n\ttx = rx / NUM00 ; \n\tty = ry / NUM00 ; \n\tdx = startx + width - rx ; \n\tdy = starty + ry ; \n\tshapeRecords . addAll ( straightEdge ( currentx , currenty , dx , ( dy - ry ) ) ) ; \n\tcurrentx = dx ; \n\tcurrenty = dy - ry ; \n\tif ( topRightRadiusX != NUM00 ) { \n\t\tshapeRecords . add ( curvedEdge ( currentx , currenty , ( dx + c1 * tx ) , ( dy - c0 * ty ) , ( dx + c3 * rx ) , ( dy - c3 * ry ) ) ) ; \n\t\tshapeRecords . add ( curvedEdge ( ( dx + c3 * rx ) , ( dy - c3 * ry ) , ( dx + c0 * tx ) , ( dy - c1 * ty ) , ( dx + rx ) , dy ) ) ; \n\t\tcurrentx = ( dx + rx ) ; \n\t\tcurrenty = dy ; \n\t\t} \n\trx = bottomRightRadiusX ; \n\try = bottomRightRadiusY ; \n\ttx = rx / NUM00 ; \n\tty = ry / NUM00 ; \n\tdx = startx + width - rx ; \n\tdy = starty + height - ry ; \n\tshapeRecords . addAll ( straightEdge ( currentx , currenty , ( dx + rx ) , dy ) ) ; \n\treturn shapeRecords ; \n\t} \n"}, {"code": "public static int findGlobalValleyLocation $F9830 ( data ) { \n\tdouble min = Double . NaN ; \n\tint imin = - NUM00 ; \n\tfor ( $F1139 ( i , data ) ) { \n\t\t$F155599 ( Double , data , i ) if ( Double . isNaN ( min ) || data [ i ] < min ) { \n\t\t\tmin = data [ i ] ; \n\t\t\timin = i ; \n\t\t\t} \n\t\t} \n\treturn imin ; \n\t} \n"}, {"code": "$F137271 ( close , deleteContents , directory ) "}, {"code": "protected void moveDownSelected $F72 { \n\t$F3768 ( selectedIndex , table ) if ( selectedIndex > - NUM00 ) { \n\t\tint index = data . moveDown ( indexToModel ( selectedIndex ) ) ; \n\t\tsetRowSelected ( indexToView ( index ) ) ; \n\t\t} \n\t} \n"}, {"code": "JarWithFile ( PathImpl backing ) { \n\tsuper ( backing ) ; \n\t} \n"}, {"code": "public List $F24548 shutdownNow $F72 { \n\t$F973 ( logger ) return executor . shutdownNow ( ) ; \n\t} \n"}, {"code": "public static $F3803 toRelativePaths ( $F1113 VirtualFile root , $F1113 final Collection $F337766 filePaths ) { \n\t$F5 $F37973 ( rc , filePaths ) ; \n\tfor ( FilePath path : filePaths ) $F18351 ( rc , relativePath , root , path ) return rc ; \n\t} \n"}, {"code": "private void handleUnlockOrInstall $F72 { \n\t$F84963 ( isFinishing ) switch ( mKeyStore . state ( ) ) { \n\t\tcase UNINITIALIZED : $F10990 ( ensureKeyGuard ) case LOCKED : { \n\t\t\tnew UnlockDialog $F72 ; \n\t\t\t$F665 } \n\t\tcase UNLOCKED : { \n\t\t\tif $F931 ( checkKeyGuardQuality ) { \n\t\t\t\tnew ConfigureKeyGuardDialog $F72 ; \n\t\t\t\t$F665 } \n\t\t\tinstallIfAvailable ( ) ; \n\t\t\tfinish ( ) ; \n\t\t\t$F665 } \n\t\t} \n\t} \n"}, {"code": "private void stopDrag ( MotionEvent ev ) { \n\tmTouchMode = TOUCH_MODE_IDLE ; \n\tfinal boolean commitChange = $F158576 ( ev , MotionEvent ) && isEnabled ( ) ; \n\t$F30559 ( oldState , isChecked ) final boolean newState ; \n\tif ( commitChange ) { \n\t\t$F163812 ( mVelocityTracker ) final float xvel = mVelocityTracker . getXVelocity ( ) ; \n\t\tif $F34222 ( Math , xvel , mMinFlingVelocity ) { \n\t\t\tnewState = ViewUtils . isLayoutRtl ( this ) ? ( xvel < NUM00 ) : ( xvel > NUM00 ) ; \n\t\t\t} \n\t\telse $F20182 ( newState , getTargetCheckedState ) } \n\telse { \n\t\tnewState = oldState ; \n\t\t} \n\tif ( newState != oldState ) { \n\t\tplaySoundEffect ( SoundEffectConstants . CLICK ) ; \n\t\t} \n\tsetChecked ( newState ) ; \n\tcancelSuperTouch ( ev ) ; \n\t} \n"}, {"code": "private void offsetStartTimeIfNecessary ( Time startTime , Time endTime , String rrule , CalendarEventModel model ) { \n\t$F48075 ( rrule ) mEventRecurrence . parse ( rrule ) ; \n\tif ( mEventRecurrence . freq != EventRecurrence . WEEKLY ) $F932 if ( mEventRecurrence . byday . length > mEventRecurrence . bydayCount ) $F932 int closestWeekday = Integer . MAX_VALUE ; \n\tint weekstart = EventRecurrence . day2TimeDay ( mEventRecurrence . wkst ) ; \n\tint startDay = startTime . weekDay ; \n\tfor ( int i = NUM00 ; \n\ti < mEventRecurrence . bydayCount ; \n\ti ++ ) { \n\t\tint day = EventRecurrence . day2TimeDay ( mEventRecurrence . byday [ i ] ) ; \n\t\t$F19899 ( day , startDay ) if ( day < weekstart ) { \n\t\t\tday += NUM00 ; \n\t\t\t} \n\t\tif ( day > startDay && ( day < closestWeekday || closestWeekday < startDay ) ) { \n\t\t\tclosestWeekday = day ; \n\t\t\t} \n\t\tif ( closestWeekday == Integer . MAX_VALUE || closestWeekday < startDay ) { \n\t\t\t$F45132 ( day , closestWeekday ) } \n\t\t} \n\tif ( closestWeekday < startDay ) { \n\t\tclosestWeekday += NUM00 ; \n\t\t} \n\tint daysOffset = closestWeekday - startDay ; \n\tstartTime . monthDay += daysOffset ; \n\tendTime . monthDay += daysOffset ; \n\tlong newStartTime = startTime . normalize ( _BOOL ) ; \n\tlong newEndTime = endTime . normalize ( _BOOL ) ; \n\tmodel . mStart = newStartTime ; \n\tmodel . mEnd = newEndTime ; \n\t} \n"}, {"code": "public Vector3 ceil $F72 { \n\treturn new Vector3 ( Math . ceil ( x ) , Math . ceil ( y ) , Math . ceil ( z ) ) ; \n\t} \n"}, {"code": "$F5505 ( method , thisVar , returnVar , subSignature , java_lang_Throwable_fillInStackTrace , params , defaultMethod ) "}, {"code": "private void cleanUpFrontier $F72 { \n\twhile ( $F1030 ( frontier ) && isExplored ( frontier . element ( ) ) ) $F7042 ( frontier ) } \n"}, {"code": "$F34537 ( listener , changingListeners ) "}, {"code": "private void parseAttributes ( TypedArray a ) { \n\tbarWidth = ( int ) a . getDimension ( R . styleable . ProgressWheel_pwBarWidth , barWidth ) ; \n\trimWidth = ( int ) a . getDimension ( R . styleable . ProgressWheel_pwRimWidth , rimWidth ) ; \n\tspinSpeed = ( int ) a . getDimension ( R . styleable . ProgressWheel_pwSpinSpeed , spinSpeed ) ; \n\tbarLength = ( int ) a . getDimension ( R . styleable . ProgressWheel_pwBarLength , barLength ) ; \n\tdelayMillis = a . getInteger ( R . styleable . ProgressWheel_pwDelayMillis , delayMillis ) ; \n\t$F17370 ( delayMillis ) if ( a . hasValue ( R . styleable . ProgressWheel_pwText ) ) { \n\t\tsetText ( a . getString ( R . styleable . ProgressWheel_pwText ) ) ; \n\t\t} \n\tbarColor = a . getColor ( R . styleable . ProgressWheel_pwBarColor , barColor ) ; \n\ttextColor = a . getColor ( R . styleable . ProgressWheel_pwTextColor , textColor ) ; \n\trimColor = a . getColor ( R . styleable . ProgressWheel_pwRimColor , rimColor ) ; \n\tcircleColor = a . getColor ( R . styleable . ProgressWheel_pwCircleColor , circleColor ) ; \n\tcontourColor = a . getColor ( R . styleable . ProgressWheel_pwContourColor , contourColor ) ; \n\ttextSize = ( int ) a . getDimension ( R . styleable . ProgressWheel_pwTextSize , textSize ) ; \n\tcontourSize = a . getDimension ( R . styleable . ProgressWheel_pwContourSize , contourSize ) ; \n\t$F17551 ( a ) } \n"}, {"code": "public static $F96 concatenate $F7233 ( a , b ) { \n\t$F148496 ( output , a , b ) $F7057 ( System , a , output ) $F11244 ( System , b , output , a ) return output ; \n\t} \n"}, {"code": "public final $F22358 assertTerminated $F72 { \n\tif ( cdl . getCount ( ) != NUM00 ) { \n\t\tthrow new AssertionError $F22361 ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "protected static void assertArgument ( final boolean validArg , final String message , final Object ... args ) { \n\tif ( ! validArg ) { \n\t\tthrow new IllegalArgumentException $F73462 ( String , message , args ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isBeforeToday ( Calendar _calendar ) { \n\treturn _calendar . before ( Calendar . getInstance ( ) ) ; \n\t} \n"}, {"code": "public static ViewItemGroup buildLoginUI ( ModelApplication modelApp , Activity activity ) { \n\tViewItemGroup viewItems = new ViewItemGroup ( activity ) ; \n\tTextView usernameText = new TextView ( activity ) ; \n\tusernameText . setText ( R . string . username ) ; \n\tviewItems . addView ( usernameText ) ; \n\tViewItemFactory viewItemFactory = ViewItemFactory . instance ( ) ; \n\tViewItem usernameItem = viewItemFactory . create ( LoginViewID . USERNAME , viewItemFactory . TEXT_DATATYPE_DB_ID , activity ) ; \n\tviewItems . addViewItem ( usernameItem , new OmniText ( modelApp . getUsername ( ) ) ) ; \n\tTextView passwordText = new TextView ( activity ) ; \n\tpasswordText . setText ( R . string . password ) ; \n\tviewItems . addView ( passwordText ) ; \n\tViewItem passwordItem = viewItemFactory . create ( LoginViewID . PASSWORD , viewItemFactory . PASSWORD_INPUT_DATATYPE_DB_ID , activity ) ; \n\tviewItems . addViewItem ( passwordItem , new OmniPasswordInput ( modelApp . getPassword ( ) ) ) ; \n\treturn viewItems ; \n\t} \n"}, {"code": "public void unMapVolumeFromSCSIInitiator ( String volumeId , String initiatorId ) throws Exception { \n\tString uri = ScaleIOConstants . getUnmapVolumeToScsiInitiatorURI ( volumeId ) ; \n\tScaleIOUnmapVolumeToScsiInitiator unmapParm = new ScaleIOUnmapVolumeToScsiInitiator $F72 ; \n\tunmapParm . setScsiInitiatorId ( initiatorId ) ; \n\tpost ( URI . create ( uri ) , getJsonForEntity ( unmapParm ) ) ; \n\t} \n"}, {"code": "public $F9884 asCollection $F72 { \n\treturn this . list ; \n\t} \n"}, {"code": "private static void addQuarterArc ( Path2D . Float path , float x1 , float y1 , float x2 , float y2 , float curvature , boolean verticalStart ) { \n\tboolean down = y1 < y2 ; \n\tboolean left = x1 > x2 ; \n\tfloat cx1 = NUM00 ; \n\tfloat cy1 = NUM00 ; \n\tfloat cx2 = NUM00 ; \n\tfloat cy2 = NUM00 ; \n\tif ( verticalStart ) { \n\t\tcx1 = x1 ; \n\t\tcy2 = y2 ; \n\t\tif ( left ) { \n\t\t\tcx2 = x1 - curvature ; \n\t\t\t} \n\t\telse { \n\t\t\tcx2 = x1 + curvature ; \n\t\t\t} \n\t\tif ( down ) { \n\t\t\tcy1 = y2 - curvature ; \n\t\t\t} \n\t\telse { \n\t\t\tcy1 = y2 + curvature ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tcx2 = x2 ; \n\t\tcy1 = y1 ; \n\t\tif ( left ) { \n\t\t\tcx1 = x2 + curvature ; \n\t\t\t} \n\t\telse { \n\t\t\tcx1 = x2 - curvature ; \n\t\t\t} \n\t\tif ( down ) { \n\t\t\tcy2 = y1 + curvature ; \n\t\t\t} \n\t\telse { \n\t\t\tcy2 = y1 - curvature ; \n\t\t\t} \n\t\t} \n\tpath . curveTo ( cx1 , cy1 , cx2 , cy2 , x2 , y2 ) ; \n\t} \n"}, {"code": "$F1 public void parse ( String content , Node block ) { \n\tthis . block = block ; \n\tthis . input = content . trim ( ) ; \n\tthis . index = NUM00 ; \n\tthis . lastDelimiter = null ; \n\tthis . lastBracket = null ; \n\tboolean moreToParse ; \n\tdo $F20182 ( moreToParse , parseInline ) while ( moreToParse ) ; \n\tprocessDelimiters ( null ) ; \n\tmergeTextNodes ( block . getFirstChild ( ) , block . getLastChild ( ) ) ; \n\t} \n"}, {"code": "public static void random $F24576 ( b , offset , length ) { \n\tcheckPositionIndex ( offset , b . length , NUM00 ) ; \n\tcheckArgument ( length > NUM00 , NUM00 ) ; \n\tcheckPositionIndex ( offset + length , b . length , NUM00 ) ; \n\t$F2175 ( buf , length ) RNG . nextBytes ( buf ) ; \n\t$F6483 ( System , buf , b , offset , length ) } \n"}, {"code": "public void removeAllScanningCallbacks $F72 $F9096 ( scanningCallbacks ) "}, {"code": "public int read $F24576 ( buf , off , len ) throws TTransportException { \n\tif ( inputStream_ == null ) { \n\t\tthrow new TTransportException ( TTransportException . NOT_OPEN , NUM00 ) ; \n\t\t} \n\tint bytesRead ; \n\ttry { \n\t\tbytesRead = inputStream_ . read ( buf , off , len ) ; \n\t\t} \n\tcatch ( IOException iox ) { \n\t\tthrow new TTransportException ( TTransportException . UNKNOWN , iox ) ; \n\t\t} \n\tif ( bytesRead < NUM00 ) { \n\t\tthrow new TTransportException ( TTransportException . END_OF_FILE ) ; \n\t\t} \n\treturn bytesRead ; \n\t} \n"}, {"code": "public void handleManagerCreation $F72 throws ManagementException { \n\t$F60256 ( isServiceInitialised ) ObjectName managerMBeanName = MBeanJMXAdapter . getManagerName ( ) ; \n\tManagerMBeanBridge bridge = new ManagerMBeanBridge ( service ) ; \n\tManagerMXBean bean = new ManagerMBean ( bridge ) ; \n\tservice . registerInternalMBean ( bean , managerMBeanName ) ; \n\t} \n"}, {"code": "$F1431 private boolean checkSetShape ( Shape oldShape , Shape newShape ) { \n\tShape currentShape = getShape ( ) ; \n\tassert oldShape != newShape : NUM00 ; \n\tassert newShape != currentShape : NUM00 + currentShape ; \n\tassert oldShape == currentShape || oldShape . getParent ( ) == currentShape : NUM00 + NUM00 + currentShape + NUM00 + oldShape + NUM00 + newShape ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected boolean isFileVisible ( File file ) { \n\tif ( $F7107 ( file ) || $F15586 ( file ) || file . isHidden ( ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static $F806 append ( final $F806 a , final String ... b ) { \n\t$F18832 ( alen , a ) $F18832 ( blen , b ) final $F806 res = Arrays . copyOf ( a , alen + blen ) ; \n\t$F6483 ( System , b , res , alen , blen ) return res ; \n\t} \n"}, {"code": "public void delete $F72 throws $F52710 { \n\tdelete ( _BOOL ) ; \n\t} \n"}, {"code": "public String ( $F96 bytes , int off , int len , $F9738 ( enc ) ) throws $F42439 { \n\tthis ( bytesToChars ( bytes , off , len , enc ) ) ; \n\t} \n"}, {"code": "private boolean initializeSearchItemset ( BitVector bv , $F2027 scratchi , $F2027 iters ) { \n\tfor ( $F1139 ( i , scratchi ) ) { \n\t\titers [ i ] = ( i == NUM00 ) ? bv . iter ( ) : bv . iterAdvance ( iters [ i - NUM00 ] ) ; \n\t\tif ( iters [ i ] < NUM00 ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tscratchi [ i ] = bv . iterDim ( iters [ i ] ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private Rectangle computeEditorBounds $F72 { \n\tif $F44600 ( row , column ) return new Rectangle $F13777 ; \n\tRectangle cell = grid . getCellBounds ( column , row ) ; \n\tRectangle area = grid . getClientArea ( ) ; \n\tif ( cell . x < $F6108 ( area ) ) { \n\t\tif ( $F6108 ( cell ) > $F6108 ( area ) ) { \n\t\t\tcell . width = $F6108 ( area ) - cell . x ; \n\t\t\t} \n\t\t} \n\tRectangle editorRect = new Rectangle ( cell . x , cell . y , minimumWidth , minimumHeight ) ; \n\tif ( grabHorizontal ) { \n\t\teditorRect . width = Math . max ( cell . width , minimumWidth ) ; \n\t\t} \n\tif ( grabVertical ) { \n\t\teditorRect . height = Math . max ( cell . height , minimumHeight ) ; \n\t\t} \n\tif ( horizontalAlignment == SWT . RIGHT ) { \n\t\teditorRect . x += cell . width - editorRect . width ; \n\t\t} \n\telse if ( horizontalAlignment == SWT . LEFT ) $F845 else { \n\t\teditorRect . x += ( cell . width - editorRect . width ) / NUM00 ; \n\t\t} \n\tif ( verticalAlignment == SWT . BOTTOM ) { \n\t\teditorRect . y += cell . height - editorRect . height ; \n\t\t} \n\telse if ( verticalAlignment == SWT . TOP ) $F845 else { \n\t\teditorRect . y += ( cell . height - editorRect . height ) / NUM00 ; \n\t\t} \n\treturn editorRect ; \n\t} \n"}, {"code": "public int read $F24576 ( buffer , offset , length ) throws IOException { \n\tthrow new UnsupportedOperationException $F45942 ( String , this ) ; \n\t} \n"}, {"code": "public Cuboid ( World world , int x1 , int y1 , int z1 , int x2 , int y2 , int z2 ) { \n\tthis . worldName = world . getName ( ) ; \n\tthis . x1 = Math . min ( x1 , x2 ) ; \n\tthis . x2 = Math . max ( x1 , x2 ) ; \n\tthis . y1 = Math . min ( y1 , y2 ) ; \n\tthis . y2 = Math . max ( y1 , y2 ) ; \n\tthis . z1 = Math . min ( z1 , z2 ) ; \n\tthis . z2 = Math . max ( z1 , z2 ) ; \n\t} \n"}, {"code": "$F22330 public double logMarginalLikelihoodSmoothed ( $F31488 v , double delta , double Pdata ) { \n\tfinal double logDelta = StrictMath . log ( delta ) ; \n\tfinal double logInvDelta = StrictMath . log ( NUM00 - delta ) ; \n\t$F10162 ( n , v ) final double logN = StrictMath . log ( n ) ; \n\tfinal double offset = logInvDelta - Pdata ; \n\tdouble bottom = logN + logDelta - logInvDelta ; \n\tdouble top = bottom + Pdata ; \n\tfor ( $F119 ( i , n ) ) { \n\t\tdouble weight = - LogTricks . logSum ( logDelta , offset + v . get ( i ) ) ; \n\t\ttop = LogTricks . logSum ( top , weight + v . get ( i ) ) ; \n\t\tbottom = LogTricks . logSum ( bottom , weight ) ; \n\t\t} \n\treturn top - bottom ; \n\t} \n"}, {"code": "public boolean isNewMessage $F72 { \n\t$F77087 ( message ) return message . startsWith ( NUM00 ) || message . equals ( NUM00 ) ; \n\t} \n"}, {"code": "private void installProperties $F72 { \n\tSystem . setProperty ( NUM00 , UserAgentGenerator . getUserAgent ( ) ) ; \n\tif ( OSUtils . isMacOSX ( ) ) { \n\t\t$F2699 ( System ) } \n\t} \n"}, {"code": "public DoubleBuffer put $F196672 ( src , srcOffset , doubleCount ) $F11682 ( Arrays , src , srcOffset , doubleCount , remaining , i , put , this ) "}, {"code": "private void loadRecipients ( int addressType , $F2690 recipients , HashMap < Integer , EncodedStringValue [ ] > addressMap , boolean excludeMyNumber ) { \n\tEncodedStringValue [ ] array = addressMap . get ( addressType ) ; \n\t$F2329 ( array ) if ( excludeMyNumber && array . length == NUM00 ) $F932 String myNumber = excludeMyNumber ? mTelephonyManager . getLine1Number ( ) : null ; \n\tfor ( EncodedStringValue v : array ) { \n\t\tif ( v != null ) { \n\t\t\tString number = v . getString ( ) ; \n\t\t\tif ( ( myNumber == null || ! PhoneNumberUtils . compare ( number , myNumber ) ) && ! recipients . contains ( number ) ) $F207 ( recipients , number ) } \n\t\t} \n\t} \n"}, {"code": "$F45263 ( filename , extension , _BOOL , indexOfExtension , fileExt , getExtension ) "}, {"code": "private String scriptFromDisk ( String name ) { \n\t$F2936 ( name ) final char SEP = NUM00 ; \n\tString pkgPart = NUM00 ; \n\tString pathPart = NUM00 ; \n\tString namePart = NUM00 ; \n\t$F12747 ( at , name , SEP ) if ( at > - NUM00 ) { \n\t\tint nextAt = name . indexOf ( SEP , at + NUM00 ) ; \n\t\tif ( nextAt > - NUM00 ) { \n\t\t\t$F14493 ( pathPart , name , at ) $F99150 ( pkgPart , name , at , nextAt ) $F4571 ( namePart , name , nextAt ) } \n\t\telse $F60269 ( pathPart , name , at , namePart ) } \n\telse { \n\t\t$F96095 ( at , name ) if ( at > - NUM00 ) { \n\t\t\t$F24867 ( mx , name ) if ( mx > - NUM00 ) { \n\t\t\t\t$F14493 ( pathPart , name , mx ) $F99150 ( pkgPart , name , mx , at ) } \n\t\t\telse $F14494 ( pathPart , name , at ) $F4571 ( namePart , name , at ) } \n\t\telse { \n\t\t\tpathPart = NUM00 ; \n\t\t\tnamePart = name ; \n\t\t\t} \n\t\t} \n\tString script = null ; \n\ttry { \n\t\tCharset realEncoding = null ; \n\t\tCharset bomEncoding = null ; \n\t\tInputStream in = locateScriptFile ( pathPart , pkgPart , namePart ) ; \n\t\tif ( in != null ) { \n\t\t\ttry { \n\t\t\t\t$F31064 ( bis , in ) bomEncoding = getEncodingFromBOM ( bis ) ; \n\t\t\t\tscript = pullInSource ( bis , bomEncoding ) ; \n\t\t\t\trealEncoding = getEncodingFromXMLDirective ( script ) ; \n\t\t\t\t} \n\t\t\t$F53155 ( in ) } \n\t\tif $F10335 ( realEncoding , bomEncoding ) { \n\t\t\tin = locateScriptFile ( pathPart , pkgPart , namePart ) ; \n\t\t\tif ( in != null ) { \n\t\t\t\ttry { \n\t\t\t\t\t$F31064 ( bis , in ) getEncodingFromBOM ( bis ) ; \n\t\t\t\t\tscript = pullInSource ( bis , realEncoding ) ; \n\t\t\t\t\t} \n\t\t\t\t$F53155 ( in ) } \n\t\t\t} \n\t\t} \n\t$F35546 ( fnf ) return script ; \n\t} \n"}, {"code": "@ PrePersist public void prePersist $F72 $F22067 ( lockTime , System ) "}, {"code": "public LibPadstack add ( String p_name , ShapeConvex [ ] p_shapes , boolean p_attach_allowed , boolean p_placed_absolute ) { \n\tint pad_no = count ( ) + NUM00 ; \n\tLibPadstack new_padstack = new LibPadstack ( p_name , pad_no , p_shapes , p_attach_allowed , p_placed_absolute ) ; \n\tpadstack_list . add ( new_padstack ) ; \n\treturn new_padstack ; \n\t} \n"}, {"code": "$F28896 ( index , paint , bounds , title , getTitle ) "}, {"code": "protected ArgsBase $F72 $F39233 ( _argv , _env ) "}, {"code": "$F1 public void startContentModel ( String elementName , Augmentations augs ) throws XNIException { \n\tif ( fValidation ) { \n\t\tfDTDElementDeclName = elementName ; \n\t\t$F725 ( fMixedElementTypes ) } \n\tif ( fDTDGrammar != null ) fDTDGrammar . startContentModel ( elementName , augs ) ; \n\tif ( fDTDContentModelHandler != null ) { \n\t\tfDTDContentModelHandler . startContentModel ( elementName , augs ) ; \n\t\t} \n\t} \n"}, {"code": "public OMRangeRings ( LatLonPoint center , double radius , Length units , int nverts ) { \n\tsuper ( center , radius , units , nverts ) ; \n\tcenterPoint = createCenterPoint ( ) ; \n\t$F34862 ( form ) } \n"}, {"code": "public static InputSource createInputSource ( String s ) { \n\ttry { \n\t\treturn new InputSource ( $F18490 ( s ) ) ; \n\t\t} \n\t$F91725 ( e ) } \n"}, {"code": "public static void write ( File file , CharSequence data , boolean append ) throws IOException { \n\twrite ( file , data , Charset . defaultCharset ( ) , append ) ; \n\t} \n"}, {"code": "public static Preferences userRoot $F72 { \n\treturn factory . userRoot ( ) ; \n\t} \n"}, {"code": "public static String toDebugString ( final long socketIdentifier ) { \n\tfinal int ipBits = ( int ) socketIdentifier ; \n\tfinal int port = extractPortNumber ( socketIdentifier ) ; \n\tfinal int inode = $F13506 ( socketIdentifier ) ; \n\treturn Integer . toHexString ( ipBits ) + NUM00 + port + NUM00 + inode ; \n\t} \n"}, {"code": "$F1 public void onAlbumUpdate ( ProviderIdentifier provider , final Album a ) throws RemoteException { \n\tif ( a == null ) $F13518 ( Log , TAG ) Album cached = mCache . getAlbum ( a . getRef ( ) ) ; \n\tboolean modified = _BOOL ; \n\tif ( cached == null ) { \n\t\tmCache . putAlbum ( provider , a ) ; \n\t\tcached = a ; \n\t\tmodified = _BOOL ; \n\t\t} \n\telse if ( ! cached . isLoaded ( ) || ! cached . isIdentical ( a ) ) { \n\t\t$F69429 ( cached , a ) cached . setYear ( a . getYear ( ) ) ; \n\t\tcached . setIsLoaded ( a . isLoaded ( ) ) ; \n\t\tcached . setProvider ( a . getProvider ( ) ) ; \n\t\tif ( cached . getSongsCount ( ) != a . getSongsCount ( ) ) { \n\t\t\t$F13710 songsIt = a . songs ( ) ; \n\t\t\twhile $F2921 ( songsIt ) { \n\t\t\t\t$F13714 ( songRef , songsIt ) cached . addSong ( songRef ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tmodified = _BOOL ; \n\t\t} \n\tif ( cached . getProvider ( ) == null ) { \n\t\tLog . e ( TAG , NUM00 + cached . getRef ( ) + NUM00 ) ; \n\t\t} \n\tif ( modified ) { \n\t\t$F50737 ( songs , a ) while $F2921 ( songs ) { \n\t\t\t$F13714 ( songRef , songs ) Song song = retrieveSong ( songRef , a . getProvider ( ) ) ; \n\t\t\tif ( song != null && song . isLoaded ( ) ) { \n\t\t\t\tString artistRef = song . getArtist ( ) ; \n\t\t\t\tif ( artistRef != null ) { \n\t\t\t\t\tArtist artist = retrieveArtist ( artistRef , song . getProvider ( ) ) ; \n\t\t\t\t\tif ( artist != null ) { \n\t\t\t\t\t\tartist . addAlbum ( a . getRef ( ) ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tif ( DEBUG ) $F1615 ( Log , TAG ) } \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( DEBUG ) $F1615 ( Log , TAG ) } \n\t\t\t} \n\t\tpostAlbumForUpdate ( cached ) ; \n\t\t} \n\t} \n"}, {"code": "public final void push ( String s ) { \n\tif $F11078 ( m_firstFree , m_mapSize ) { \n\t\tm_mapSize += m_blocksize ; \n\t\t$F140073 ( m_mapSize ) $F10236 ( System , m_map , newMap , m_firstFree ) m_map = newMap ; \n\t\t} \n\tm_map [ m_firstFree ] = s ; \n\tm_firstFree ++ ; \n\t} \n"}, {"code": "public static String readFromFile ( final File path ) throws IOException { \n\tFileInputStream fis = null ; \n\ttry { \n\t\t$F5335 ( fis , path ) return readFromFile ( fis ) ; \n\t\t} \n\t$F14364 ( fis ) } \n"}, {"code": "public static int XToTileX $F14337 ( x , tileGridXOffset , tileWidth ) { \n\tx -= tileGridXOffset ; \n\tif ( x < NUM00 ) { \n\t\tx += NUM00 - tileWidth ; \n\t\t} \n\treturn x / tileWidth ; \n\t} \n"}, {"code": "$F9863 ( child , dx , dy , _BOOL , checkHorizontal , mCallback , checkVertical , mTouchSlop , Math ) "}, {"code": "public Input ( String name , @ InputType int type , @ Alignment int align , Connection connection ) { \n\tmName = name ; \n\tmType = type ; \n\tmAlign = align ; \n\tmConnection = connection ; \n\tif ( mConnection != null ) { \n\t\tmConnection . setInput ( this ) ; \n\t\t} \n\t} \n"}, {"code": "public static BshClassManager createClassManager ( Interpreter interpreter ) { \n\tBshClassManager manager ; \n\tif ( Capabilities . classExists ( NUM00 ) && Capabilities . classExists ( NUM00 ) && Capabilities . classExists ( NUM00 ) ) try { \n\t\tClass clas = Class . forName ( NUM00 ) ; \n\t\tmanager = ( BshClassManager ) clas . newInstance ( ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new InterpreterError ( NUM00 + e ) ; \n\t\t} \n\telse manager = new BshClassManager $F72 ; \n\tif ( interpreter == null ) interpreter = new Interpreter $F72 ; \n\tmanager . declaringInterpreter = interpreter ; \n\treturn manager ; \n\t} \n"}, {"code": "public int swap $F72 { \n\tif ( ! mEgl . eglSwapBuffers ( mEglDisplay , mEglSurface ) ) { \n\t\treturn mEgl . eglGetError ( ) ; \n\t\t} \n\treturn EGL10 . EGL_SUCCESS ; \n\t} \n"}, {"code": "public void requestLastLoginTime $F72 { \n\toperations . add ( PasswordPolicyStateOperationType . GET_LAST_LOGIN_TIME ) ; \n\t} \n"}, {"code": "public static Stream $F4 wordsOf ( String text ) { \n\trequireNonNull ( text ) ; \n\treturn WORDS . splitAsStream ( text ) ; \n\t} \n"}, {"code": "public void add ( AppInfo info ) { \n\tif ( mAppFilter != null && ! mAppFilter . shouldShowApp ( info . componentName ) ) $F932 if ( findActivity ( data , info . componentName , info . user ) ) $F932 data . add ( info ) ; \n\tadded . add ( info ) ; \n\t} \n"}, {"code": "public Joiner match $F4353 ( field , value ) $F38616 ( match , field , Arrays , value ) "}, {"code": "private String removeYouTubeMarkup ( String plot ) { \n\t$F1275 ( plot ) $F8479 ( plot ) } \n"}, {"code": "private String createDashArrayString ( $F6205 dashesArray ) { \n\t$F83 ( sb ) if ( dashesArray != null ) { \n\t\tint index = NUM00 ; \n\t\tfor ( Float value : dashesArray ) { \n\t\t\t$F4074 ( str , Float , value ) if $F8991 ( str ) { \n\t\t\t\tsb . append ( value . intValue ( ) ) ; \n\t\t\t\t} \n\t\t\telse $F288 ( sb , value ) if $F18523 ( index , dashesArray ) $F86 ( sb ) index ++ ; \n\t\t\t} \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "$F39742 ( update , unsafe , this , headOffset ) "}, {"code": "public long position ( java . sql . Blob pattern , long start ) throws SQLException { \n\treturn position ( pattern . getBytes ( NUM00 , $F5338 ( pattern ) ) , start ) ; \n\t} \n"}, {"code": "protected synchronized T load $F72 throws IOException { \n\tlong genLoaded = - NUM00 ; \n\tIOException ioe = null ; \n\t$F10144 ( genFiles ) $F806 files ; \n\ttry { \n\t\tfiles = dir . listAll ( ) ; \n\t\t} \n\tcatch ( IOException ioe2 ) $F1337 T loaded = null ; \n\tfor ( String file : files ) { \n\t\tif $F7311 ( file , prefix ) { \n\t\t\tlong gen = Long . parseLong ( $F8182 ( file , prefix ) ) ; \n\t\t\tif ( genLoaded == - NUM00 || gen > genLoaded ) { \n\t\t\t\tgenFiles . add ( file ) ; \n\t\t\t\tIndexInput in = dir . openInput ( file , IOContext . DEFAULT ) ; \n\t\t\t\ttry { \n\t\t\t\t\tloaded = loadOne ( in ) ; \n\t\t\t\t\t} \n\t\t\t\tcatch ( IOException ioe2 ) { \n\t\t\t\t\t$F13265 ( ioe , ioe2 ) } \n\t\t\t\t$F3229 ( in ) genLoaded = gen ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( genLoaded == - NUM00 ) { \n\t\t$F731 ( ioe ) } \n\telse { \n\t\tif $F3817 ( genFiles ) { \n\t\t\tString curFileName = prefix + genLoaded ; \n\t\t\tfor ( String file : genFiles ) { \n\t\t\t\tlong gen = Long . parseLong ( $F8182 ( file , prefix ) ) ; \n\t\t\t\tif ( canDelete ( gen ) && ! curFileName . equals ( file ) ) $F229844 ( dir , file ) } \n\t\t\t} \n\t\tnextWriteGen = NUM00 + genLoaded ; \n\t\t} \n\treturn loaded ; \n\t} \n"}, {"code": "public static String readLine ( InputStream in , String charset ) throws IOException { \n\t$F1538 ( baos ) while ( _BOOL ) { \n\t\t$F7468 ( b , in ) if ( b == - NUM00 ) { \n\t\t\tif $F10471 ( baos ) $F1337 else $F5153 } \n\t\t$F41314 ( b ) if ( b != NUM00 ) { \n\t\t\tbaos . write ( b ) ; \n\t\t\t$F598 } \n\t\t$F7468 ( b2 , in ) if ( b2 == - NUM00 ) { \n\t\t\tbaos . write ( b ) ; \n\t\t\t$F597 } \n\t\t$F41314 ( b2 ) baos . write ( b ) ; \n\t\tbaos . write ( b2 ) ; \n\t\t} \n\t$F23209 ( baos , charset ) } \n"}, {"code": "$F31396 ( str , retval , ch , i , s , Integer ) "}, {"code": "public boolean checkTableExists ( TableDefinition table ) { \n\tString column = null ; \n\tfor ( FieldDefinition field : table . getFields ( ) ) { \n\t\tif ( column == null ) $F128776 ( column , field ) else if ( field . isPrimaryKey ( ) ) { \n\t\t\t$F32928 ( column , field ) $F597 } \n\t\t} \n\tString sql = NUM00 + column + NUM00 + table . getFullName ( ) + NUM00 + column + NUM00 + column ; \n\tDataReadQuery query = new DataReadQuery ( sql ) ; \n\tquery . setMaxRows ( NUM00 ) ; \n\ttry { \n\t\tsession . executeQuery ( query ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tcatch ( Exception notFound ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F4231 } \n"}, {"code": "private int processColon ( int length ) { \n\tif ( _hasScheme ) { \n\t\tif ( ! readUserPass ( length ) && $F20 ( _buffer ) ) { \n\t\t\t_reader . goBack ( ) ; \n\t\t\t_buffer . delete ( $F1092 ( _buffer ) , _buffer . length ( ) ) ; \n\t\t\tint backtrackOnFail = _reader . getPosition ( ) - _buffer . length ( ) + length ; \n\t\t\tif ( ! readDomainName ( _buffer . substring ( length ) ) ) { \n\t\t\t\t_reader . seek ( backtrackOnFail ) ; \n\t\t\t\treadEnd ( ReadEndState . InvalidUrl ) ; \n\t\t\t\t} \n\t\t\tlength = NUM00 ; \n\t\t\t} \n\t\t} \n\telse if ( readScheme ( ) && $F20 ( _buffer ) ) { \n\t\t_hasScheme = _BOOL ; \n\t\t$F54171 ( length , _buffer ) } \n\telse if ( $F20 ( _buffer ) && _options . hasFlag ( UrlDetectorOptions . ALLOW_SINGLE_LEVEL_DOMAIN ) && _reader . canReadChars ( NUM00 ) ) { \n\t\t_reader . goBack ( ) ; \n\t\t_buffer . delete ( $F1092 ( _buffer ) , _buffer . length ( ) ) ; \n\t\t$F31458 ( readDomainName , _buffer ) } \n\telse { \n\t\treadEnd ( ReadEndState . InvalidUrl ) ; \n\t\tlength = NUM00 ; \n\t\t} \n\treturn length ; \n\t} \n"}, {"code": "public static boolean containsSqlScriptDelimiters ( String script , String delim ) { \n\tboolean inLiteral = _BOOL ; \n\t$F7782 ( content , script ) for ( $F1088 ( i , script ) ) { \n\t\tif ( content [ i ] == NUM00 ) $F1091 ( inLiteral ) if ( ! inLiteral && script . startsWith ( delim , i ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void compress $F56810 ( bytes , off , len , os ) { \n\ttry $F21537 ( os , bytes , off , len ) $F12153 ( e ) } \n"}, {"code": "public void assertNotJoined ( final UUID serviceId ) { \n\tm_triggers . add ( new QuorumEventInvariant ( QuorumEventEnum . SERVICE_JOIN , serviceId ) ) ; \n\tif ( isMember ( m_quorum . getJoined ( ) , serviceId ) ) broken ( ) ; \n\t} \n"}, {"code": "$F5803 ( drawable , getDrawable , matrix , prevMatrix , drawableWidth , drawableHeight , scaleX , viewWidth , scaleY , viewHeight , mScaleType , CENTER , CENTER_CROP , Math , CENTER_INSIDE , FIT_CENTER , FIT_XY , redundantXSpace , redundantYSpace , matchViewWidth , matchViewHeight , isZoomed , imageRenderedAtLeastOnce , normalizedScale , prevMatchViewWidth , prevMatchViewHeight , savePreviousImageValues , m , Matrix , transX , transY , prevActualWidth , actualWidth , getImageWidth , translateMatrixAfterRotate , prevViewWidth , prevActualHeight , actualHeight , getImageHeight , prevViewHeight , fixTrans , setImageMatrix ) "}, {"code": "public int encryptBlock $F59451 ( in , inOff , out , outOff ) throws $F5278 { \n\t$F59453 ( inOff , blockSize , in ) $F59453 ( outOff , blockSize , out ) $F59455 ( cipher , cfbV , cfbOutV ) $F59461 ( i , blockSize , out , outOff , cfbOutV , in , inOff ) $F59464 ( System , cfbV , blockSize ) System . arraycopy ( out , outOff , cfbV , cfbV . length - blockSize , blockSize ) ; \n\treturn blockSize ; \n\t} \n"}, {"code": "public final void print ( String value ) { \n\ttry { \n\t\t$F48972 ( rootElement , workDoc ) int deleteLines = rootElement . getElementCount ( ) - linesMax ; \n\t\tfor ( $F119 ( index , deleteLines ) ) { \n\t\t\tElement elem = rootElement . getElement ( NUM00 ) ; \n\t\t\tworkDoc . remove ( elem . getStartOffset ( ) , elem . getEndOffset ( ) ) ; \n\t\t\t} \n\t\tworkDoc . insertString ( workDoc . getLength ( ) , value , null ) ; \n\t\ttextArea . setCaretPosition ( workDoc . getLength ( ) ) ; \n\t\t} \n\t$F1516 ( exc ) } \n"}, {"code": "private void addConnectionGroups ( Collection < ConnectionGroup > connectionGroups ) { \n\tfor ( ConnectionGroup connectionGroup : connectionGroups ) { \n\t\tAPIConnectionGroup parent = retrievedGroups . get ( connectionGroup . getParentIdentifier ( ) ) ; \n\t\tif ( parent != null ) { \n\t\t\tCollection < APIConnectionGroup > children = parent . getChildConnectionGroups ( ) ; \n\t\t\tif ( children == null ) { \n\t\t\t\tchildren = new ArrayList < APIConnectionGroup > $F72 ; \n\t\t\t\tparent . setChildConnectionGroups ( children ) ; \n\t\t\t\t} \n\t\t\tAPIConnectionGroup apiConnectionGroup = new APIConnectionGroup ( connectionGroup ) ; \n\t\t\tretrievedGroups . put ( connectionGroup . getIdentifier ( ) , apiConnectionGroup ) ; \n\t\t\tchildren . add ( apiConnectionGroup ) ; \n\t\t\t} \n\t\telse logger . debug ( NUM00 , connectionGroup . getIdentifier ( ) , connectionGroup . getParentIdentifier ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void loadMap ( InputStream input , String groupID ) throws Exception { \n\tshapes = parser . parse ( input , groupID ) ; \n\tboundaries = new ArrayList < Rect2D > $F716 ( shapes ) ; \n\tfor ( IGeometric2D shape : shapes ) { \n\t\tboundaries . add ( shape . getBounds ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void addDecoration ( LineDecoration decoration ) $F17651 ( decoration , decorations ) "}, {"code": "private String parseLinkTitle $F72 { \n\tString title = match ( LINK_TITLE ) ; \n\tif ( title != null ) { \n\t\treturn Escaping . unescapeString ( $F4019 ( title ) ) ; \n\t\t} \n\telse $F1337 } \n"}, {"code": "public void recordSRDFOperation ( DbClient dbClient , OperationTypeEnum opType , Operation . Status status , Object ... extParam ) { \n\ttry { \n\t\tboolean opStatus = ( Operation . Status . ready == status ) ? _BOOL : _BOOL ; \n\t\tString evType ; \n\t\tevType = opType . getEvType ( opStatus ) ; \n\t\t$F137633 ( evDesc , opType ) String opStage = AuditLogManager . AUDITOP_END ; \n\t\t_logger . info ( NUM00 , opType . toString ( ) , $F5528 ( evType ) + evDesc ) ; \n\t\trecordBourneSRDFEvent ( dbClient , getId ( ) , evType , status , evDesc ) ; \n\t\t$F216664 ( id , extParam ) switch ( opType ) { \n\t\t\tcase CREATE_SRDF_LINK : AuditBlockUtil . auditBlock ( dbClient , opType , opStatus , opStage , extParam ) ; \n\t\t\t$F597 case SUSPEND_SRDF_LINK : AuditBlockUtil . auditBlock ( dbClient , opType , opStatus , opStage , extParam ) ; \n\t\t\t$F597 case DETACH_SRDF_LINK : AuditBlockUtil . auditBlock ( dbClient , opType , opStatus , opStage , extParam ) ; \n\t\t\t$F597 case PAUSE_SRDF_LINK : AuditBlockUtil . auditBlock ( dbClient , opType , opStatus , opStage , extParam ) ; \n\t\t\t$F597 case RESUME_SRDF_LINK : AuditBlockUtil . auditBlock ( dbClient , opType , opStatus , opStage , extParam ) ; \n\t\t\t$F597 case FAILOVER_SRDF_LINK : AuditBlockUtil . auditBlock ( dbClient , opType , opStatus , opStage , extParam ) ; \n\t\t\t$F597 case SWAP_SRDF_VOLUME : AuditBlockUtil . auditBlock ( dbClient , opType , opStatus , opStage , extParam ) ; \n\t\t\t$F597 case STOP_SRDF_LINK : AuditBlockUtil . auditBlock ( dbClient , opType , opStatus , opStage , extParam ) ; \n\t\t\t$F597 case SYNC_SRDF_LINK : AuditBlockUtil . auditBlock ( dbClient , opType , opStatus , opStage , extParam ) ; \n\t\t\t$F597 $F37651 ( _logger ) } \n\t\t} \n\tcatch ( Exception e ) { \n\t\t_logger . error ( $F89018 ( opType , e ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void put ( double val ) { \n\tfinal double nn = this . n + NUM00 ; \n\tfinal double delta = val - m1 ; \n\tfinal double delta_nn = delta / nn ; \n\tfinal double delta_nn2 = delta_nn * delta_nn ; \n\tfinal double inc = delta * delta_nn * this . n ; \n\tm4 += inc * delta_nn2 * ( nn * nn - NUM00 * nn + NUM00 ) + NUM00 * delta_nn2 * m2 - NUM00 * delta_nn * m3 ; \n\tm3 += inc * delta_nn * ( nn - NUM00 ) - NUM00 * delta_nn * m2 ; \n\tm2 += inc ; \n\tm1 += delta_nn ; \n\tn = nn ; \n\t$F46000 ( min , Math , val ) $F46000 ( max , Math , val ) } \n"}, {"code": "public void close $F72 { \n\tthis . closed = _BOOL ; \n\t} \n"}, {"code": "$F1654 ( m_RecentItems ) "}, {"code": "public JCDiagnostic warning ( LintCategory lc , String key , Object ... args ) { \n\treturn create ( WARNING , lc , $F8427 ( EnumSet ) , null , null , key , args ) ; \n\t} \n"}, {"code": "public Destructurer ( final Tree . Pattern that , final GenerateJsVisitor gen , final Set < Declaration > directAccess , final String expvar , boolean first , final boolean forAssert ) { \n\tthis . gen = gen ; \n\tjsw = gen == null ? null : gen . out ; \n\tnames = gen == null ? null : gen . getNames ( ) ; \n\tthis . directAccess = directAccess ; \n\tthis . expvar = expvar ; \n\tthis . first = first ; \n\tthis . forAssert = forAssert ; \n\tthat . visit ( this ) ; \n\tif $F31724 ( jsw , attribs ) { \n\t\tfor ( Value attr : attribs ) { \n\t\t\tjsw . write ( NUM00 , names . self ( ( TypeDeclaration ) attr . getContainer ( ) ) , NUM00 , names . name ( attr ) , NUM00 , names . name ( attr ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1431 public void handleTblSubConfigButtonDeleteRequest ( RequestInvocationEvent event ) throws ModelControlException { \n\tsubmitCycle = _BOOL ; \n\tCCActionTable tbl = ( CCActionTable ) getChild ( TBL_SUB_CONFIG ) ; \n\ttbl . restoreStateData ( ) ; \n\tCCActionTableModel tblModel = ( CCActionTableModel ) tbl . getModel ( ) ; \n\t$F31354 selected = tblModel . getSelectedRows ( ) ; \n\tSerializedField szCache = ( SerializedField ) getChild ( SZ_CACHE ) ; \n\tList list = szCache . getSerializedObj ( ) ; \n\t$F2689 names = new $F9623 $F28143 ( selected ) ; \n\tfor ( Integer index : selected ) { \n\t\tSMSubConfig sc = ( SMSubConfig ) list . get ( index ) ; \n\t\t$F29790 ( names , sc ) } \n\ttry { \n\t\tAbstractAuditModel model = ( AbstractAuditModel ) getModel ( ) ; \n\t\tmodel . deleteEventHandles ( names ) ; \n\t\tif $F9634 ( selected ) { \n\t\t\tsetInlineAlertMessage ( TYPE_INFO , INFORMATION_MESSAGE , NUM00 ) ; \n\t\t\t} \n\t\telse { \n\t\t\tsetInlineAlertMessage ( TYPE_INFO , INFORMATION_MESSAGE , NUM00 ) ; \n\t\t\t} \n\t\t} \n\tcatch ( AMConsoleException e ) { \n\t\t$F196466 ( setInlineAlertMessage , TYPE_ERROR , ERROR_MESSAGE , e ) ; \n\t\t} \n\tsubmitCycle = _BOOL ; \n\tforwardTo ( ) ; \n\t} \n"}, {"code": "public synchronized void removeGraphListener ( GraphListener cl ) $F106 ( m_graphListeners , cl ) "}, {"code": "public boolean isHealthy ( boolean doExtensiveChecks ) { \n\tif ( socket . isClosed ( ) || socket . isInputShutdown ( ) || socket . isOutputShutdown ( ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F20092 ( framedConnection , _BOOL ) if ( doExtensiveChecks ) { \n\t\ttry { \n\t\t\t$F231990 ( readTimeout , socket ) try { \n\t\t\t\t$F241590 ( socket ) if ( source . exhausted ( ) ) { \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t$F231993 ( socket , readTimeout ) } \n\t\tcatch ( SocketTimeoutException ignored ) $F845 $F3092 ( _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void addColumn ( int index , Column column ) { \n\tvalidateColumn ( column ) ; \n\tcolumnList . add ( index , column ) ; \n\t} \n"}, {"code": "$F41720 ( value , absMin , absMax , absValue , Math ) "}, {"code": "private void init $F72 { \n\tsetTitle ( NUM00 ) ; \n\thopPropertiesPanel = new HopfieldPropertiesPanel ( networkPanel ) ; \n\thopPropertiesPanel . fillFieldValues ( ) ; \n\ttabLogic . setLayout ( new FlowLayout $F72 ) ; \n\ttabLogic . add ( hopPropertiesPanel ) ; \n\ttabLayout . add ( layoutPanel ) ; \n\tlayoutPanel = new MainLayoutPanel ( _BOOL , this ) ; \n\t$F36210 ( tabbedPane , tabLogic ) $F36210 ( tabbedPane , layoutPanel ) setContentPane ( tabbedPane ) ; \n\tAction helpAction = new ShowHelpAction ( hopPropertiesPanel . getHelpPath ( ) ) ; \n\taddButton ( new JButton ( helpAction ) ) ; \n\t} \n"}, {"code": "$F1017 ( request , container , mRequest , mContainers ) "}, {"code": "private double normVector $F9830 ( z ) { \n\tdouble sum = NUM00 ; \n\tfor ( $F61686 ( i , problem ) ) { \n\t\t$F60596 ( sum , z , i ) } \n\t$F41531 ( Math , sum ) } \n"}, {"code": "$F2509 ( mValue , mDataType , TYPE_ASCII , US_ASCII , Arrays , String , val ) "}, {"code": "public int hashCode $F72 { \n\treturn NUM00 * factor . hashCode ( ) + lag ; \n\t} \n"}, {"code": "public void deserializeArchivedVersions $F72 throws RuntimeException { \n\tSystem . out . println ( NUM00 + getArchiveDirectory ( ) + NUM00 ) ; \n\t$F1890 ( archive , getArchiveDirectory ) if $F224313 ( archive ) $F932 $F1894 ( listing , archive ) for ( String archiveName : listing ) { \n\t\tif ( ! $F8991 ( archiveName ) ) $F1448 try { \n\t\t\tFile $F1897 ( file , getArchiveDirectory , archiveName ) ; \n\t\t\t$F170751 ( zipFile , file ) ZipEntry entry = zipFile . getEntry ( NUM00 ) ; \n\t\t\t$F83713 ( inputStream , zipFile , entry ) $F67402 ( objectIn , inputStream ) $F14855 classFields = ( $F14855 ) objectIn . readObject ( ) ; \n\t\t\t$F59 ( zipFile ) for ( $F3465 ( className , classFields ) ) { \n\t\t\t\t$F64948 ( fieldNames , classFields , className ) $F96883 ( clazz , Class , className ) ObjectStreamClass streamClass = ObjectStreamClass . lookup ( clazz ) ; \n\t\t\t\tif ( streamClass == null ) { \n\t\t\t\t\tSystem . out . println ( ) ; \n\t\t\t\t\t} \n\t\t\t\tfor ( String fieldName : fieldNames ) { \n\t\t\t\t\tassert streamClass != null ; \n\t\t\t\t\tObjectStreamField field = streamClass . getField ( fieldName ) ; \n\t\t\t\t\tif ( field == null ) { \n\t\t\t\t\t\tthrow new RuntimeException ( NUM00 + fieldName + NUM00 + className + NUM00 + NUM00 + NUM00 + className + NUM00 + archiveName + NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( ClassNotFoundException e ) { \n\t\t\tthrow new RuntimeException ( NUM00 + archiveName + NUM00 , e ) ; \n\t\t\t} \n\t\tcatch ( IOException e ) { \n\t\t\tthrow new RuntimeException ( NUM00 + archiveName + NUM00 , e ) ; \n\t\t\t} \n\t\tSystem . out . println ( NUM00 + archiveName + NUM00 ) ; \n\t\tZipEntry zipEntry = null ; \n\t\ttry { \n\t\t\tFile $F1897 ( file , getArchiveDirectory , archiveName ) ; \n\t\t\t$F4647 ( in , file ) $F78817 ( zipinputstream , in ) ; \n\t\t\twhile $F78823 ( zipEntry , zipinputstream ) { \n\t\t\t\tif ( ! zipEntry . getName ( ) . endsWith ( NUM00 ) ) $F1448 $F67402 ( objectIn , zipinputstream ) objectIn . readObject ( ) ; \n\t\t\t\t$F22108 ( zipinputstream ) } \n\t\t\t$F59 ( zipinputstream ) } \n\t\tcatch ( ClassNotFoundException e ) { \n\t\t\tthrow new RuntimeException ( $F31996 ( zipEntry , archiveName ) + NUM00 + NUM00 , e ) ; \n\t\t\t} \n\t\tcatch ( IOException e ) { \n\t\t\tthrow new RuntimeException ( NUM00 + archiveName + NUM00 , e ) ; \n\t\t\t} \n\t\t} \n\tSystem . out . println ( NUM00 ) ; \n\t} \n"}, {"code": "private void convertMaximalToMinimalEdgeRings ( List ringEdges ) { \n\tfor ( $F2774 ( i , ringEdges ) ) { \n\t\tPolygonizeDirectedEdge de = ( PolygonizeDirectedEdge ) i . next ( ) ; \n\t\tlong label = de . getLabel ( ) ; \n\t\tList intNodes = findIntersectionNodes ( de , label ) ; \n\t\t$F45557 ( intNodes ) for ( $F2774 ( iNode , intNodes ) ) { \n\t\t\t$F67766 ( node , iNode ) computeNextCCWEdges ( node , label ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public $F96 generateMAC ( byte commandClass , $F96 ciphertext , byte sendingNode , byte receivingNode , $F96 iv ) throws GeneralSecurityException { \n\ttraceHex ( NUM00 , ciphertext ) ; \n\ttraceHex ( NUM00 , iv ) ; \n\tint bufferSize = ciphertext . length + NUM00 ; \n\t$F2175 ( buffer , bufferSize ) $F12496 ( tempAuth ) buffer [ NUM00 ] = commandClass ; \n\tbuffer [ NUM00 ] = sendingNode ; \n\tbuffer [ NUM00 ] = receivingNode ; \n\tbuffer [ NUM00 ] = ( byte ) ciphertext . length ; \n\t$F7057 ( System , ciphertext , buffer ) traceHex ( NUM00 , networkKey . getEncoded ( ) ) ; \n\ttraceHex ( NUM00 , buffer ) ; \n\t$F5348 ( encryptCipher , Cipher ) $F43929 ( encryptCipher , Cipher , authKey ) tempAuth = encryptCipher . doFinal ( iv ) ; \n\ttraceHex ( NUM00 , tempAuth ) ; \n\t$F12496 ( encpck ) int block = NUM00 ; \n\tfor ( $F119 ( i , bufferSize ) ) { \n\t\tencpck [ block ] = buffer [ i ] ; \n\t\tblock ++ ; \n\t\tif ( block == NUM00 ) { \n\t\t\tfor ( $F6268 ( j ) ) { \n\t\t\t\ttempAuth [ j ] = ( byte ) ( encpck [ j ] ^ tempAuth [ j ] ) ; \n\t\t\t\tencpck [ j ] = NUM00 ; \n\t\t\t\t} \n\t\t\t$F26770 ( Arrays , encpck ) block = NUM00 ; \n\t\t\t$F43929 ( encryptCipher , Cipher , authKey ) tempAuth = encryptCipher . doFinal ( tempAuth ) ; \n\t\t\t} \n\t\t} \n\tif ( block > NUM00 ) { \n\t\tfor ( $F6268 ( i ) ) { \n\t\t\ttempAuth [ i ] = ( byte ) ( encpck [ i ] ^ tempAuth [ i ] ) ; \n\t\t\t} \n\t\t$F43929 ( encryptCipher , Cipher , authKey ) tempAuth = encryptCipher . doFinal ( tempAuth ) ; \n\t\t} \n\ttraceHex ( NUM00 , tempAuth ) ; \n\t$F12496 ( mac ) $F10319 ( System , tempAuth , mac ) return mac ; \n\t} \n"}, {"code": "public void removeEventListener ( ImageSharingListener listener ) throws $F161622 { \n\t$F161627 ( mApi ) try { \n\t\tWeakReference < IImageSharingListener > weakRef = mImageSharingListeners . remove ( listener ) ; \n\t\t$F2329 ( weakRef ) IImageSharingListener rcsListener = weakRef . get ( ) ; \n\t\tif ( rcsListener != null ) { \n\t\t\tmApi . removeEventListener2 ( rcsListener ) ; \n\t\t\t} \n\t\t} \n\t$F228550 ( RcsIllegalArgumentException , e ) } \n"}, {"code": "private void updateWaveFileSize $F72 throws IOException { \n\tByteBuffer buffer = getUnsignedIntegerBuffer ( $F2281 ( mFileChannel ) ) ; \n\tmFileChannel . write ( buffer , NUM00 ) ; \n\tByteBuffer buffer2 = getUnsignedIntegerBuffer ( $F2281 ( mFileChannel ) ) ; \n\tmFileChannel . write ( buffer2 , NUM00 ) ; \n\t} \n"}, {"code": "private void writeJournal ( ParcelFileDescriptor newState , Journal journal ) { \n\ttry { \n\t\tFileOutputStream outStream = new FileOutputStream $F122976 ( newState ) ; \n\t\t$F172325 ( journalBytes , writeCheckedBytes , journal ) outStream . write ( journalBytes ) ; \n\t\tif ( VERBOSE ) Log . v ( TAG , NUM00 + journalBytes . length + NUM00 ) ; \n\t\t} \n\t$F122999 ( Log , TAG , e ) } \n"}, {"code": "public boolean matches ( String sa ) { \n\tif $F20325 ( _length , sa ) return _BOOL ; \n\t$F1469 buffer = _buffer ; \n\tint offset = _offset ; \n\tfor ( $F18298 ( i , _length ) ) if ( _buffer [ _offset + i ] != sa . charAt ( i ) ) return _BOOL ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public void mouseReleased ( MouseEvent event ) { \n\tif ( event . getSource ( ) == getComponentDecreaseSpinnerButton ( ) ) $F5196 ( decreaseTimer ) else $F5196 ( increaseTimer ) } \n"}, {"code": "public double computeMaxClassValueUsingPercentFactorPerSeries ( DefaultChartData chartData , $F806 series , $F1986 percentFactorPerSeries ) { \n\tdouble maxValue = NUM00 ; \n\tfor ( String className : chartData . getClassNamesIncludingDisabled ( ) ) { \n\t\tdouble total = NUM00 ; \n\t\tfor ( $F1139 ( i , series ) ) { \n\t\t\tString seriesName = series [ i ] ; \n\t\t\tif ( transposedHeightsAdditive ) total += percentFactorPerSeries [ i ] * chartData . getValueAsDouble ( seriesName , className ) ; \n\t\t\telse total = Math . max ( total , percentFactorPerSeries [ i ] * chartData . getValueAsDouble ( seriesName , className ) ) ; \n\t\t\t} \n\t\t$F12283 ( total , maxValue ) } \n\treturn NUM00 * maxValue ; \n\t} \n"}, {"code": "public int addChannel ( Channel channel ) { \n\tint index = - NUM00 ; \n\tswitch ( channel . getChannelType ( ) ) { \n\t\tcase STANDARD : mChannels . add ( channel ) ; \n\t\t$F63959 ( index , mChannels ) fireTableRowsInserted ( index , index ) ; \n\t\t$F597 case TRAFFIC : mTrafficChannels . add ( channel ) ; \n\t\t$F63959 ( index , mChannels ) $F597 $F2448 } \n\tbroadcast ( new ChannelEvent ( channel , Event . NOTIFICATION_ADD ) ) ; \n\tif ( channel . getEnabled ( ) ) { \n\t\tbroadcast ( new ChannelEvent ( channel , Event . REQUEST_ENABLE ) ) ; \n\t\t} \n\treturn index ; \n\t} \n"}, {"code": "public static String join ( Object ... array ) { \n\t$F1338 ( array ) if $F9634 ( array ) $F74420 ( StringPool ) if $F9634 ( array ) { \n\t\treturn $F63082 ( String , array ) ; \n\t\t} \n\tfinal StringBuilder sb = new StringBuilder $F28143 ( array ) ; \n\tfor ( $F1139 ( i , array ) ) $F40727 ( sb , array , i ) $F92 ( sb ) } \n"}, {"code": "public boolean hasTrait ( final StoreTrait storeTrait ) { \n\tfinal Set < StoreTrait > traits = getTraits ( ) ; \n\treturn null != traits && traits . contains ( storeTrait ) ; \n\t} \n"}, {"code": "public void createSupply ( MWMInOutBoundLine boundline , BigDecimal qtySupply ) { \n\tMProduct product = MProduct . get ( boundline . getCtx ( ) , boundline . getM_Product_ID ( ) ) ; \n\tif ( product . isBOM ( ) ) { \n\t\tcreateMO ( boundline , product , qtySupply ) ; \n\t\t} \n\telse if ( product . isPurchased ( ) ) { \n\t\tcreateRequisition ( boundline , product , qtySupply ) ; \n\t\t} \n\t} \n"}, {"code": "$F1654 ( parameters ) "}, {"code": "public List $F136545 top ( int n ) { \n\tList $F136545 $F204 ( top ) ; \n\t$F2027 values = data . toIntArray ( ) ; \n\tIntArrays . parallelQuickSort ( values , ReverseIntComparator . instance ( ) ) ; \n\tfor ( int i = NUM00 ; \n\ti < n && i < values . length ; \n\ti ++ ) { \n\t\ttop . add ( PackedLocalTime . asLocalTime ( values [ i ] ) ) ; \n\t\t} \n\treturn top ; \n\t} \n"}, {"code": "$F1 public void loadXML ( Node stepnode , List < DatabaseMeta > databases , Map < String , Counter > counters ) throws KettleXMLException { \n\ttry { \n\t\t$F526345 ( schemaName , XMLHandler , stepnode ) $F526345 ( tabelName , XMLHandler , stepnode ) $F526345 ( mdkeySize , XMLHandler , stepnode ) $F526345 ( measureCount , XMLHandler , stepnode ) $F526345 ( heirAndKeySize , XMLHandler , stepnode ) $F526345 ( cubeName , XMLHandler , stepnode ) $F526345 ( groupByEnabled , XMLHandler , stepnode ) $F526345 ( aggregatorClassString , XMLHandler , stepnode ) $F526345 ( aggregatorString , XMLHandler , stepnode ) $F526345 ( factDimLensString , XMLHandler , stepnode ) $F526345 ( levelAnddataTypeString , XMLHandler , stepnode ) currentRestructNumber = Integer . parseInt ( XMLHandler . getTagValue ( stepnode , NUM00 ) ) ; \n\t\t$F526345 ( partitionID , XMLHandler , stepnode ) $F526345 ( segmentId , XMLHandler , stepnode ) $F526345 ( taskNo , XMLHandler , stepnode ) } \n\tcatch ( Exception e ) { \n\t\tthrow new KettleXMLException ( NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "public void put ( int key , E value ) { \n\tint i = binarySearch ( mKeys , NUM00 , mSize , key ) ; \n\tif ( i >= NUM00 ) { \n\t\tmValues [ i ] = value ; \n\t\t} \n\telse { \n\t\ti = ~ i ; \n\t\t$F27086 ( i , mSize , mValues , DELETED , mKeys , key , value ) $F27088 ( mGarbage , mSize , mKeys , gc , i , binarySearch , key ) if ( mSize >= mKeys . length ) { \n\t\t\t$F27092 ( n , Math , mSize , mKeys ) $F4120 ( nkeys , n ) $F133 ( nvalues , n ) $F7057 ( System , mKeys , nkeys ) $F7057 ( System , mValues , nvalues ) mKeys = nkeys ; \n\t\t\tmValues = nvalues ; \n\t\t\t} \n\t\t$F27098 ( mSize , i , System , mKeys , mValues ) mKeys [ i ] = key ; \n\t\tmValues [ i ] = value ; \n\t\tmSize ++ ; \n\t\t} \n\t} \n"}, {"code": "public void readData ( DataInput din ) throws IOException { \n\t$F89921 ( reference , din ) } \n"}, {"code": "public float dotProduct ( DenseVector df ) { \n\tfloat res = NUM00 ; \n\tfor ( int i = NUM00 ; \n\ti < Math . min ( size , df . getLength ( ) ) ; \n\ti ++ ) { \n\t\tres += u [ i ] * df . u [ i ] ; \n\t\t} \n\treturn res ; \n\t} \n"}, {"code": "private void emitCode $F72 { \n\t$F23313 worklist = new $F23313 $F72 ; \n\tworklist . add ( new Instantiation ( null , mainSubroutine ) ) ; \n\tInsnList newInstructions = new InsnList $F72 ; \n\t$F23328 newTryCatchBlocks = new ArrayList < TryCatchBlockNode > $F72 ; \n\tList $F23335 newLocalVariables = new ArrayList $F23335 $F72 ; \n\twhile $F5973 ( worklist ) { \n\t\tInstantiation inst = worklist . removeFirst ( ) ; \n\t\temitSubroutine ( inst , worklist , newInstructions , newTryCatchBlocks , newLocalVariables ) ; \n\t\t} \n\tinstructions = newInstructions ; \n\ttryCatchBlocks = newTryCatchBlocks ; \n\tlocalVariables = newLocalVariables ; \n\t} \n"}, {"code": "public static double stDev ( final $F31488 list ) $F148602 ( Math , variance , list ) "}, {"code": "public void trimToSize $F72 { \n\tif ( size < array . length ) { \n\t\t$F2027 olddata = array ; \n\t\t$F3936 ( array , size ) $F135 ( System , olddata , array , size ) } \n\t} \n"}, {"code": "public void testSetBitZeroOutside1 $F72 { \n\t$F45030 int aSign = NUM00 ; \n\tint number = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F43462 ( result , aNumber , number ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public static int compare ( Date left , boolean right ) { \n\treturn compare ( left , right ? NUM00 : NUM00 ) ; \n\t} \n"}, {"code": "private IBindingSet [ ] decodeNextChunk $F72 throws IOException { \n\tif ( nsolutions == solutionSetCount ) { \n\t\tif $F585 ( log ) $F8922 ( log , name , nsolutions ) $F1274 } \n\tin . readInt ( ) ; \n\tfinal int chunkSize = in . readInt ( ) ; \n\tfinal int byteLength = in . readInt ( ) ; \n\t$F4727 ( a , byteLength ) in . readFully ( a ) ; \n\tfinal DataInputBuffer buf = new DataInputBuffer ( a ) ; \n\tfinal IBindingSet [ ] t = new IBindingSet [ chunkSize ] ; \n\tfor ( $F119 ( i , chunkSize ) ) { \n\t\tt [ i ] = decoder . decodeSolution ( buf , _BOOL ) ; \n\t\tif $F8415 ( log ) log . trace ( NUM00 + name + NUM00 + t [ i ] ) ; \n\t\t} \n\tnsolutions += chunkSize ; \n\tif $F8415 ( log ) log . trace ( NUM00 + name + NUM00 + chunkSize + NUM00 + ( SolutionSetStreamEncoder . CHUNK_HEADER_SIZE + byteLength ) + NUM00 + nsolutions ) ; \n\treturn t ; \n\t} \n"}, {"code": "public UDPClientSocket ( Logger logger ) { \n\tthis . logger = logger ; \n\ttry { \n\t\t$F125428 ( socket ) socket . setBroadcast ( _BOOL ) ; \n\t\tsocket . setSendBufferSize ( $F264 ) ; \n\t\tsocket . setReceiveBufferSize ( $F264 ) ; \n\t\t$F241590 ( socket ) } \n\tcatch ( SocketException e ) { \n\t\tlogger . severe ( NUM00 ) ; \n\t\tlogger . severe ( $F5351 ( e ) ) ; \n\t\t$F5194 ( System ) } \n\t} \n"}, {"code": "public void multiplyAllValuesBy ( final double multiplyBy , final int RoundType ) { \n\tfor ( final T t : keySet ( ) ) { \n\t\t$F28095 ( val , mapValues , t ) switch ( RoundType ) { \n\t\t\t$F3366 val = Math . floor ( val * multiplyBy ) ; \n\t\t\t$F597 $F3366 val = Math . round ( val * multiplyBy ) ; \n\t\t\t$F597 $F3366 val = Math . ceil ( val * multiplyBy ) ; \n\t\t\t$F597 $F1267 val = val * multiplyBy ; \n\t\t\t$F597 } \n\t\tput ( t , ( int ) val ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isLevel ( Level level ) { \n\t$F397 ( level , _BOOL ) return level . intValue ( ) >= s_currentLevel . intValue ( ) ; \n\t} \n"}, {"code": "protected void computeFolderChildren ( File folder , boolean isIncluded , $F806 pkgName , ArrayList vChildren , $F28330 ( inclusionPatterns ) , $F28330 ( exclusionPatterns ) ) throws JavaModelException { \n\tif ( isIncluded ) { \n\t\tIPackageFragment pkg = getPackageFragment ( pkgName ) ; \n\t\tvChildren . add ( pkg ) ; \n\t\t} \n\ttry { \n\t\t$F5459 ( members , folder ) boolean hasIncluded = isIncluded ; \n\t\tint length = members . length ; \n\t\tif ( length > NUM00 ) { \n\t\t\tJavaProject javaProject = ( JavaProject ) getJavaProject ( ) ; \n\t\t\tString sourceLevel = javaProject . getOption ( JavaCore . COMPILER_SOURCE , _BOOL ) ; \n\t\t\tString complianceLevel = javaProject . getOption ( JavaCore . COMPILER_COMPLIANCE , _BOOL ) ; \n\t\t\tfor ( $F119 ( i , length ) ) { \n\t\t\t\tFile member = members [ i ] ; \n\t\t\t\t$F20605 ( memberName , member ) if $F3444 ( member ) { \n\t\t\t\t\tif ( Util . isValidFolderNameForPackage ( memberName , sourceLevel , complianceLevel ) ) { \n\t\t\t\t\t\t$F806 newNames = Util . arrayConcat ( pkgName , manager . intern ( memberName ) ) ; \n\t\t\t\t\t\tboolean isMemberIncluded = _BOOL ; \n\t\t\t\t\t\tcomputeFolderChildren ( member , isMemberIncluded , newNames , vChildren , inclusionPatterns , exclusionPatterns ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tif ( ! hasIncluded && Util . isValidCompilationUnitName ( memberName , sourceLevel , complianceLevel ) ) { \n\t\t\t\t\t\thasIncluded = _BOOL ; \n\t\t\t\t\t\tIPackageFragment pkg = getPackageFragment ( pkgName ) ; \n\t\t\t\t\t\tvChildren . add ( pkg ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( IllegalArgumentException e ) { \n\t\tthrow new JavaModelException ( e , IJavaModelStatusConstants . ELEMENT_DOES_NOT_EXIST ) ; \n\t\t} \n\tcatch ( CoreException e ) { \n\t\tthrow new JavaModelException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public static String quote ( File input ) { \n\treturn $F40519 ( quote , input ) ; \n\t} \n"}, {"code": "private void readFromNet $F72 throws IgniteCheckedException { \n\ttry { \n\t\t$F725 ( inNetBuf ) $F59912 ( read , ch , inNetBuf ) if ( read == - NUM00 ) throw new IgniteCheckedException $F580 ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tthrow new IgniteCheckedException ( NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "synchronized void clear $F72 { \n\tmaps = new Maps $F72 ; \n\t$F725 ( tombstones ) $F3223 ( ramBytesUsedCurrent ) if ( mgr != null ) { \n\t\tmgr . removeListener ( this ) ; \n\t\tmgr = null ; \n\t\t} \n\t} \n"}, {"code": "public synchronized void removeConsumer ( ImageConsumer ic ) $F130709 ( ics , ic ) "}, {"code": "$F60342 ( mSmallestWidthDp , mInPortrait ) "}, {"code": "private void updateAperture ( int newValue , long now ) { \n\tint previous = targetAperture ; \n\ttargetAperture = newValue ; \n\t$F28619 ( targetAperture , Math , minAperture ) int maxAperture = Math . min ( this . maxAperture , $F11365 ( activeSockets , activeFactories ) ) ; \n\t$F106734 ( targetAperture , Math , maxAperture ) lastApertureRefresh = now ; \n\tpendings . reset ( ( minPendings + maxPendings ) / NUM00 ) ; \n\tif ( targetAperture != previous ) { \n\t\tlogger . debug ( NUM00 , pendings . value ( ) , targetAperture , previous ) ; \n\t\t} \n\t} \n"}, {"code": "public I buildInvocation ( Object protocolKey , I invocation ) throws ConfigException { \n\tObjects . requireNonNull ( invocation ) ; \n\tinvocation = buildInvocation ( invocation ) ; \n\tLruCache < Object , I > invocationCache = _invocationCache ; \n\tif ( invocationCache != null ) { \n\t\tI oldInvocation ; \n\t\toldInvocation = invocationCache . get ( protocolKey ) ; \n\t\tif ( oldInvocation != null && ! oldInvocation . isModified ( ) ) { \n\t\t\treturn oldInvocation ; \n\t\t\t} \n\t\tif ( invocation . getURLLength ( ) < _maxURLLength ) $F1717 ( invocationCache , protocolKey , invocation ) } \n\treturn invocation ; \n\t} \n"}, {"code": "public WebResourceStatistics computeMark ( WebResourceStatistics wrStatistics ) { \n\tfloat passed = wrStatistics . getNbOfPassed ( ) ; \n\tif ( passed == - NUM00 ) { \n\t\twrStatistics . setRawMark ( $F43818 ( Float ) ) ; \n\t\treturn wrStatistics ; \n\t\t} \n\tfloat failed = wrStatistics . getNbOfFailed ( ) ; \n\tfloat needMoreInfo = wrStatistics . getNbOfNmi ( ) ; \n\tif ( failed == NUM00 && passed == NUM00 ) { \n\t\twrStatistics . setMark ( Float . valueOf ( NUM00 ) ) ; \n\t\treturn wrStatistics ; \n\t\t} \n\tfloat ratioNMI = needMoreInfo / ( passed + failed + needMoreInfo ) ; \n\tfloat result = ( ( NUM00 - ratioNMI ) * passed / ( passed + failed ) + ratioNMI * needMoreInfo / ( passed + failed + needMoreInfo ) ) * NUM00 ; \n\twrStatistics . setMark ( result ) ; \n\treturn wrStatistics ; \n\t} \n"}, {"code": "public void testGcdFirstZero $F72 { \n\t$F45030 byte $F3014 = $F141109 ; \n\tint aSign = NUM00 ; \n\tint bSign = NUM00 ; \n\tbyte $F3018 = $F141109 ; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F141116 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public void testKingCapture $F72 throws ChessParseError { \n\tPosition pos = TextIO . readFEN ( NUM00 ) ; \n\tpos . setWhiteMove ( _BOOL ) ; \n\t$F13406 ( strMoves , getMoveList , pos , _BOOL ) $F70108 ( assertEquals , strMoves ) $F100793 ( assertEquals , strMoves ) pos . setPiece ( Position . getSquare ( NUM00 , NUM00 ) , Piece . WBISHOP ) ; \n\tpos . setPiece ( Position . getSquare ( NUM00 , NUM00 ) , Piece . WPAWN ) ; \n\tstrMoves = getMoveList ( pos , _BOOL ) ; \n\t$F70108 ( assertEquals , strMoves ) $F100793 ( assertEquals , strMoves ) pos . setPiece ( Position . getSquare ( NUM00 , NUM00 ) , Piece . WPAWN ) ; \n\tpos . setPiece ( Position . getSquare ( NUM00 , NUM00 ) , Piece . WPAWN ) ; \n\tstrMoves = getMoveList ( pos , _BOOL ) ; \n\t$F70108 ( assertEquals , strMoves ) $F100793 ( assertEquals , strMoves ) } \n"}, {"code": "public static BinaryMessage checkAndCorrect ( BinaryMessage message , int startIndex ) { \n\tboolean parityError = message . cardinality ( ) % NUM00 != NUM00 ; \n\tint syndrome = getSyndrome ( message , startIndex ) ; \n\tif ( syndrome == NUM00 ) { \n\t\tif ( parityError ) { \n\t\t\tmessage . flip ( startIndex + NUM00 ) ; \n\t\t\t} \n\t\tmessage . setCRC ( CRC . PASSED ) ; \n\t\treturn message ; \n\t\t} \n\tint original = message . getInt ( NUM00 , NUM00 ) ; \n\tint index = - NUM00 ; \n\tint syndromeWeight = NUM00 ; \n\tint errors = NUM00 ; \n\twhile ( index < NUM00 ) { \n\t\tif ( index != - NUM00 ) { \n\t\t\tif ( index > NUM00 ) { \n\t\t\t\tmessage . flip ( index - NUM00 ) ; \n\t\t\t\t} \n\t\t\tmessage . flip ( index ) ; \n\t\t\tsyndromeWeight = NUM00 ; \n\t\t\t} \n\t\tsyndrome = getSyndrome ( message , startIndex ) ; \n\t\tif ( syndrome > NUM00 ) { \n\t\t\tfor ( $F6268 ( i ) ) { \n\t\t\t\terrors = Integer . bitCount ( syndrome ) ; \n\t\t\t\tif ( errors <= syndromeWeight ) { \n\t\t\t\t\tmessage . xor ( NUM00 , NUM00 , syndrome ) ; \n\t\t\t\t\tmessage . rotateRight ( i , startIndex , startIndex + NUM00 ) ; \n\t\t\t\t\tif ( index >= NUM00 ) { \n\t\t\t\t\t\terrors ++ ; \n\t\t\t\t\t\t} \n\t\t\t\t\tint corrected = message . getInt ( NUM00 , NUM00 ) ; \n\t\t\t\t\tif ( Integer . bitCount ( original ^ corrected ) > NUM00 ) { \n\t\t\t\t\t\tmessage . setCRC ( CRC . FAILED_CRC ) ; \n\t\t\t\t\t\treturn message ; \n\t\t\t\t\t\t} \n\t\t\t\t\tmessage . setCRC ( CRC . PASSED ) ; \n\t\t\t\t\treturn message ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tmessage . rotateLeft ( startIndex , startIndex + NUM00 ) ; \n\t\t\t\t\tsyndrome = getSyndrome ( message , startIndex ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tindex ++ ; \n\t\t\t} \n\t\t} \n\tmessage . setCRC ( CRC . FAILED_CRC ) ; \n\treturn message ; \n\t} \n"}, {"code": "public static $F6689 validateAndEvaluate ( String viewName , StatementContext statementContext , List < ExprNode > expressions ) throws ViewParameterException { \n\t$F6691 ( results ) int expressionNumber = NUM00 ; \n\tStreamTypeService streamTypeService = new StreamTypeServiceImpl ( statementContext . getEngineURI ( ) , _BOOL ) ; \n\tfor ( ExprNode expr : expressions ) { \n\t\tObject result = validateAndEvaluateExpr ( viewName , statementContext , expr , streamTypeService , expressionNumber ) ; \n\t\tresults . add ( result ) ; \n\t\texpressionNumber ++ ; \n\t\t} \n\treturn results ; \n\t} \n"}, {"code": "$F1113 public static String parseRelativeDirectory $F116884 ( s ) throws SvnBindException { \n\t$F1382 ( s ) $F115 ( length , s ) String result ; \n\tif ( isUnescapedQuote ( s , length - NUM00 ) ) { \n\t\tint index = lastUnescapedIndexOf ( s , length - NUM00 , NUM00 ) ; \n\t\tassertIndex ( s , index , NUM00 ) ; \n\t\tresult = s . substring ( index + NUM00 , length - NUM00 ) ; \n\t\t} \n\telse { \n\t\tint index = lastUnescapedIndexOf ( s , length , NUM00 ) ; \n\t\tassertIndex ( s , index , NUM00 ) ; \n\t\t$F4571 ( result , s , index ) } \n\treturn unescape ( result ) ; \n\t} \n"}, {"code": "private String pickEncoding ( InputSource inputSource ) { \n\tReader reader = inputSource . getCharacterStream ( ) ; \n\t$F20092 ( reader , CHARACTER_ENCODING ) String encoding = inputSource . getEncoding ( ) ; \n\treturn encoding == null ? DEFAULT_ENCODING : encoding ; \n\t} \n"}, {"code": "$F1 public String generateURL ( CategoryDataset dataset , int series , int category ) { \n\tString url = this . prefix ; \n\tComparable seriesKey = dataset . getRowKey ( series ) ; \n\tComparable categoryKey = dataset . getColumnKey ( category ) ; \n\tboolean firstParameter = $F49413 ( url ) ; \n\turl += firstParameter ? NUM00 : NUM00 ; \n\ttry { \n\t\turl += this . seriesParameterName + NUM00 + URLEncoder . encode ( seriesKey . toString ( ) , NUM00 ) ; \n\t\turl += NUM00 + this . categoryParameterName + NUM00 + URLEncoder . encode ( categoryKey . toString ( ) , NUM00 ) ; \n\t\t} \n\t$F91725 ( ex ) return url ; \n\t} \n"}, {"code": "public boolean isIdleExpire $F72 { \n\tif $F279276 ( _lifecycle ) return _BOOL ; \n\tlong now = currentTimeActual ( ) ; \n\t$F106670 ( idleExpire , _threadIdleExpireTime ) $F8943 ( idleCount , _idleCount ) if ( _idleMin < idleCount ) { \n\t\tlong nextIdleExpire = now + _idleTimeout ; \n\t\tif ( _idleMax < idleCount && _idleMin < _idleMax ) { \n\t\t\t_threadIdleExpireTime . compareAndSet ( idleExpire , nextIdleExpire ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse if ( idleExpire < now && _threadIdleExpireTime . compareAndSet ( idleExpire , nextIdleExpire ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void beginDisplay ( DisplayEvent event ) throws ModelControlException { \n\tIdentitySubjectModel subjectModel = getSubjectModel ( ) ; \n\tPolicyModel model = ( PolicyModel ) getModel ( ) ; \n\tsuper . beginDisplay ( event ) ; \n\tCCDropDownMenu menu = ( CCDropDownMenu ) getChild ( FILTER_TYPE ) ; \n\tMap supportedEntityTypes = model . getSupportedEntityTypes ( realmName ) ; \n\tOptionList entityTypes = createOptionList ( supportedEntityTypes ) ; \n\tentityTypes . add ( NUM00 , NUM00 , NUM00 ) ; \n\tmenu . setOptions ( entityTypes ) ; \n\t$F187587 ( menu ) CCAddRemove child = ( CCAddRemove ) getChild ( VALUES_MULTIPLE_CHOICE_VALUE ) ; \n\tchild . restoreStateData ( ) ; \n\tOptionList selected = addRemoveModel . getSelectedOptionList ( ) ; \n\tOptionList possible = helper . createOptionList ( model . getUserSSOToken ( ) , model . getUserLocale ( ) , this , getPossibleValues ( subjectModel , realmName ) ) ; \n\tchild . resetStateData ( ) ; \n\taddRemoveModel . setAvailableOptionList ( possible ) ; \n\t} \n"}, {"code": "private void decode64 ( ByteBuffer infile , LongArrayPointer a ) { \n\t$F2175 ( nbitplanes , N03 ) $F12496 ( tmagic ) infile . get ( tmagic ) ; \n\tif ( tmagic [ NUM00 ] != CODE_MAGIC [ NUM00 ] || tmagic [ NUM00 ] != CODE_MAGIC [ NUM00 ] ) $F11389 this . nx = infile . getInt ( ) ; \n\tthis . ny = infile . getInt ( ) ; \n\tthis . scale = infile . getInt ( ) ; \n\t$F219374 ( sumall , infile ) infile . get ( nbitplanes ) ; \n\tdodecode64 ( infile , a , nbitplanes ) ; \n\ta . set ( NUM00 , sumall ) ; \n\t} \n"}, {"code": "private static void createScript $F72 throws Exception { \n\t$F32352 ( Class ) Connection conn = DriverManager . getConnection ( NUM00 ) ; \n\t$F11282 ( stat , conn ) $F131050 ( stat ) $F131050 ( stat ) $F131050 ( stat ) $F59 ( stat ) $F59 ( conn ) } \n"}, {"code": "public static double cauchy $F72 { \n\treturn Math . tan ( Math . PI * $F79524 ( uniform ) ) ; \n\t} \n"}, {"code": "public void addJobGroupToNeverDelete ( String group ) { \n\t$F67023 ( group , jobGroupsToNeverDelete ) } \n"}, {"code": "private WebDoc createLayout ( WebDoc doc , MWorkflow wf , int activeNode , MWFNode [ ] nodes , ArrayList nodes_ID , $F26353 ( imageMap ) ) { \n\tbody b = doc . getBody ( ) ; \n\tb . addElement ( printWorkflow ( activeNode , wf , nodes , nodes_ID , imageMap ) ) ; \n\tb . addElement ( new hr $F72 ) ; \n\tb . addElement ( printDescription ( activeNode , wf , nodes , nodes_ID ) ) ; \n\tb . addElement ( new br $F72 ) ; \n\tb . addElement ( printControlPanel ( activeNode , wf , nodes , nodes_ID ) ) ; \n\treturn doc ; \n\t} \n"}, {"code": "$F1 public void requestPollRead $F72 { \n\ttry $F5795 ( requestLoop ) catch ( Exception e ) $F173189 ( log , Level , e ) } \n"}, {"code": "public MultiMatchQueryBuilder field ( String field ) $F18637 ( fields , field , this ) "}, {"code": "void encode ( OutputStream os , boolean include_h ) throws IOException { \n\tint q = params . q ; \n\t$F160532 ( os , getEncoded , f ) if ( params . basisType == NTRUSigningKeyGenerationParameters . BASIS_TYPE_STANDARD ) { \n\t\tIntegerPolynomial fPrimeInt = fPrime . toIntegerPolynomial ( ) ; \n\t\tfor ( int i = NUM00 ; \n\t\ti < fPrimeInt . coeffs . length ; \n\t\ti ++ ) { \n\t\t\tfPrimeInt . coeffs [ i ] += q / NUM00 ; \n\t\t\t} \n\t\tos . write ( fPrimeInt . toBinary ( q ) ) ; \n\t\t} \n\telse { \n\t\t$F160532 ( os , getEncoded , fPrime ) } \n\tif ( include_h ) { \n\t\tos . write ( h . toBinary ( q ) ) ; \n\t\t} \n\t} \n"}, {"code": "private void signalNoAcks $F72 { \n\t$F790 ( lock ) try $F227783 ( allAcksRcvCond ) $F796 ( lock ) } \n"}, {"code": "private static String arrayToString $F23416 ( array ) { \n\t$F83 ( sb ) boolean first = _BOOL ; \n\tfor ( int i : array ) { \n\t\t$F87 ( first , _BOOL , sb ) sb . append ( i ) ; \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "public static $F96 copy $F7233 ( source , target ) { \n\tint len = source . length ; \n\tif ( len > target . length ) $F75474 ( target , len ) $F135 ( System , source , target , len ) return target ; \n\t} \n"}, {"code": "public double greatCircleDistance ( Location location ) { \n\t$F89853 ( location , Logger ) $F46307 ( lat1Radians , Math , this ) $F89861 ( lon1Radians , Math , this ) $F46307 ( lat2Radians , Math , location ) $F89861 ( lon2Radians , Math , location ) if ( lat1Radians == lat2Radians && lon1Radians == lon2Radians ) $F1083 double a = Math . sin ( ( lat2Radians - lat1Radians ) / NUM00 ) ; \n\tdouble b = Math . sin ( ( lon2Radians - lon1Radians ) / NUM00 ) ; \n\tdouble c = a * a + Math . cos ( lat1Radians ) * Math . cos ( lat2Radians ) * b * b ; \n\tdouble distanceRadians = NUM00 * Math . asin ( Math . sqrt ( c ) ) ; \n\treturn Double . isNaN ( distanceRadians ) ? NUM00 : distanceRadians ; \n\t} \n"}, {"code": "private List < InputSplit > parseManifest ( FileSystem fs , Path manifestPath , JobConf job ) throws IOException { \n\tList < InputSplit > splits = null ; \n\tFSDataInputStream fp = fs . open ( manifestPath ) ; \n\tJsonReader reader = new JsonReader ( new InputStreamReader ( fp , Charsets . UTF_8 ) ) ; \n\treader . beginObject ( ) ; \n\twhile $F2921 ( reader ) { \n\t\tString name = reader . nextName ( ) ; \n\t\tswitch ( name ) { \n\t\t\tcase VERSION_JSON_KEY : job . set ( DynamoDBConstants . EXPORT_FORMAT_VERSION , String . valueOf ( reader . nextInt ( ) ) ) ; \n\t\t\t$F597 case ENTRIES_JSON_KEY : splits = readEntries ( reader , job ) ; \n\t\t\t$F597 $F1267 $F556 ( log , name ) reader . skipValue ( ) ; \n\t\t\t$F597 } \n\t\t} \n\treader . endObject ( ) ; \n\t$F79983 ( splits , Collections ) return splits ; \n\t} \n"}, {"code": "$F1 public final void readFully ( $F68528 , int off , int len ) throws IOException { \n\tdis . readFully ( ba , off , len ) ; \n\t} \n"}, {"code": "public void fireOperatorMoved ( Operator operator ) { \n\tList < Operator > $F19827 ( list ) ; \n\tlist . add ( operator ) ; \n\tfireOperatorsMoved ( list ) ; \n\t} \n"}, {"code": "public void remove ( int i ) $F106 ( individuals , i ) "}, {"code": "$F1 public void modifyVariableId ( String oldId , String newId ) { \n\tif $F1238 ( baseVar , oldId ) { \n\t\tbaseVar = $F2934 ( newId ) ; \n\t\t} \n\t} \n"}, {"code": "public static String repeat ( String str , int count ) { \n\tfinal StringBuilder result = new StringBuilder ( str . length ( ) * count ) ; \n\t$F48485 ( i , count , result , str ) $F92 ( result ) } \n"}, {"code": "private void waitForStateChange ( int maxTTW ) throws MqttException { \n\tsynchronized ( waiter ) { \n\t\tif ( ! donext ) { \n\t\t\ttry $F47074 ( waiter , maxTTW ) catch ( InterruptedException e ) { \n\t\t\t\tlog ( NUM00 ) ; \n\t\t\t\t$F301 ( e ) } \n\t\t\tif ( ex != null ) { \n\t\t\t\tthrow ( MqttException ) ex ; \n\t\t\t\t} \n\t\t\t} \n\t\tdonext = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "$F1 public Node pickNode ( final InferenceGraph g ) { \n\t$F725 ( treeCache ) Pair < $F27878 , Integer > bestPath = noPath ; \n\tfor ( Node n : g . nodes ) { \n\t\tif ( ! Collections . disjoint ( n . data , varsToSolve ) ) { \n\t\t\tPair < $F27878 , Integer > path = computeTreeToLeafs ( n ) ; \n\t\t\tif ( path . snd < bestPath . snd ) { \n\t\t\t\tbestPath = path ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( bestPath == noPath ) { \n\t\tthrow new NodeNotFoundException ( g ) ; \n\t\t} \n\treturn bestPath . fst . head ; \n\t} \n"}, {"code": "public AddUserFields $F72 { \n\tm_attributeSpecs = new ArrayList < AttributeSpec > $F72 ; \n\t} \n"}, {"code": "private Integer parseInt ( String s , int flags ) { \n\tif ( convertColorNames ( flags ) ) { \n\t\tString c = Descriptor . convertColorName ( s ) ; \n\t\t$F57733 ( c , s ) } \n\ttry { \n\t\tif ( hasLeadingZeros ( s ) ) $F1337 else { \n\t\t\t$F46721 ( Integer , s ) } \n\t\t} \n\t$F62108 } \n"}, {"code": "private Rectangle findBounds ( int AD_WF_Node_ID ) { \n\tfor ( $F2277 ( i , m_nodes ) ) { \n\t\tWFNode node = ( WFNode ) m_nodes . get ( i ) ; \n\t\tif ( node . getAD_WF_Node_ID ( ) == AD_WF_Node_ID ) return node . getBounds ( ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "protected void stopWorkers ( Collection < WorkerThread > workers ) { \n\tif ( workers == null ) $F145688 ( workers , this ) final Iterator < WorkerThread > iter = workers . iterator ( ) ; \n\twhile $F2921 ( iter ) { \n\t\tfinal WorkerThread worker = iter . next ( ) ; \n\t\tif ( ( worker . getStatus ( ) & ( WorkerThread . sENDED | WorkerThread . sENDING ) ) == NUM00 ) { \n\t\t\tworker . signalShutdown ( ) ; \n\t\t\trunningWorkers -- ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public ArrayList < Mapping > cloneFrame $F72 { \n\tif ( stack [ top ] == null ) $F1274 ArrayList < Mapping > clone = new ArrayList < Mapping > $F72 ; \n\tfor ( Mapping map = topOfFrame ( ) ; \n\tmap != null ; \n\tmap = next ( ) ) $F207 ( clone , map ) return clone ; \n\t} \n"}, {"code": "private static int computeHashCode ( int seed , Object ... objects ) { \n\tif $F12414 ( objects ) { \n\t\treturn seed * HashCode . PRIME ; \n\t\t} \n\tint hc = seed ; \n\tfor ( Object object : objects ) { \n\t\thc = HashCode . PRIME * hc ; \n\t\tif $F2456 ( object ) { \n\t\t\thc += Arrays . hashCode ( $F2457 ( object ) ) ; \n\t\t\t} \n\t\telse if ( object instanceof $F8748 ) { \n\t\t\thc += Arrays . hashCode ( $F41256 ( object ) ) ; \n\t\t\t} \n\t\telse if ( object instanceof $F5078 ) { \n\t\t\thc += Arrays . hashCode ( $F41262 ( object ) ) ; \n\t\t\t} \n\t\telse if $F25705 ( object ) { \n\t\t\thc += Arrays . hashCode ( $F25706 ( object ) ) ; \n\t\t\t} \n\t\telse if ( object instanceof $F2469 ) { \n\t\t\thc += Arrays . hashCode ( $F2471 ( object ) ) ; \n\t\t\t} \n\t\telse if ( object instanceof $F5415 ) { \n\t\t\thc += Arrays . hashCode ( $F41250 ( object ) ) ; \n\t\t\t} \n\t\telse if ( object instanceof $F1986 ) { \n\t\t\thc += Arrays . hashCode ( $F41244 ( object ) ) ; \n\t\t\t} \n\t\telse if ( object instanceof $F1469 ) { \n\t\t\thc += Arrays . hashCode ( $F114168 ( object ) ) ; \n\t\t\t} \n\t\telse if $F2485 ( object ) { \n\t\t\thc += Arrays . hashCode ( $F2486 ( object ) ) ; \n\t\t\t} \n\t\telse $F156574 ( object , hc ) } \n\treturn hc ; \n\t} \n"}, {"code": "protected float calculateStateTransitionPercentage ( String name , boolean flapping ) { \n\tint flapInterval = getFlapInterval ( name ) ; \n\tLinkedList $F19437 list = getFlaps ( name ) ; \n\tfloat lowWeight = getFlapLowWeight ( name ) ; \n\tfloat highWeight = getFlapHighWeight ( name ) ; \n\tfloat weightRange = highWeight - lowWeight ; \n\tfloat result = NUM00 ; \n\tfor ( $F5373 ( i , list ) ) { \n\t\tboolean thisFlap = list . get ( i ) ; \n\t\tif ( flapping != thisFlap ) { \n\t\t\tfloat weight = lowWeight + ( weightRange * i / ( flapInterval - NUM00 ) ) ; \n\t\t\tresult += weight ; \n\t\t\t} \n\t\t} \n\treturn result / flapInterval ; \n\t} \n"}, {"code": "public static String mangleName ( Method method , boolean isFull ) { \n\t$F280 ( sb ) $F167270 ( sb , method ) $F749 params = method . getParameterTypes ( ) ; \n\tfor ( $F1139 ( i , params ) ) { \n\t\t$F84 ( sb ) sb . append ( mangleClass ( params [ i ] , isFull ) ) ; \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "private void saveState $F72 { \n\tsavedStartOffset = offsetAttribute . startOffset ( ) ; \n\tsavedEndOffset = offsetAttribute . endOffset ( ) ; \n\thasIllegalOffsets = ( savedEndOffset - savedStartOffset != termAttribute . length ( ) ) ; \n\tsavedType = typeAttribute . type ( ) ; \n\tif ( savedBuffer . length < termAttribute . length ( ) ) { \n\t\tsavedBuffer = new char [ ArrayUtil . oversize ( termAttribute . length ( ) , Character . BYTES ) ] ; \n\t\t} \n\tSystem . arraycopy ( termAttribute . buffer ( ) , NUM00 , savedBuffer , NUM00 , termAttribute . length ( ) ) ; \n\titerator . text = savedBuffer ; \n\thasSavedState = _BOOL ; \n\t} \n"}, {"code": "public String consumeTo ( String seq ) { \n\t$F204924 ( offset , queue , seq , pos ) if ( offset != - NUM00 ) { \n\t\t$F12715 ( consumed , queue , pos , offset ) $F90433 ( pos , consumed ) return consumed ; \n\t\t} \n\telse $F2905 ( remainder ) } \n"}, {"code": "private void printOutDefinedIPs $F24643 ( definedIPs ) { \n\t$F24645 ( ipList ) for ( String ip : definedIPs ) { \n\t\tif $F12703 ( ip ) $F34171 ( ipList , ip ) else $F34171 ( ipList , ip ) } \n\tCollections . sort ( ipList ) ; \n\tfor ( String ip : ipList ) { \n\t\tlog . info ( ip ) ; \n\t\t} \n\t} \n"}, {"code": "private void disposeCodec ( IoSession session ) { \n\tdisposeEncoder ( session ) ; \n\tdisposeDecoder ( session ) ; \n\tdisposeDecoderOut ( session ) ; \n\t} \n"}, {"code": "private static int transpositions ( final CharSequence first , final CharSequence second ) { \n\tint transpositions = NUM00 ; \n\tfor ( $F1088 ( i , first ) ) { \n\t\tif $F104625 ( first , i , second ) { \n\t\t\ttranspositions ++ ; \n\t\t\t} \n\t\t} \n\treturn transpositions / NUM00 ; \n\t} \n"}, {"code": "$F1 public Object parseObject ( final String source , final ParsePosition pos ) { \n\treturn parser . parseObject ( source , pos ) ; \n\t} \n"}, {"code": "$F1 public default Stream < TimeSeriesCollection > stream $F72 { \n\treturn StreamSupport . stream ( spliterator ( ) , _BOOL ) ; \n\t} \n"}, {"code": "$F13735 ( prefix , namespace , attName , attValue , xmlWriter ) "}, {"code": "private ManifestModInfo registerMod ( File file , Manifest manifest ) { \n\tManifestModInfo mod = loadMod ( file , manifest ) ; \n\tif ( mod != null ) { \n\t\tif ( idMap . containsKey ( mod . getModID ( ) ) ) { \n\t\t\tModInfo mod2 = idMap . get ( mod . getModID ( ) ) ; \n\t\t\tduplicates . put ( mod . getModID ( ) , mod ) ; \n\t\t\tduplicates . put ( mod . getModID ( ) , mod2 ) ; \n\t\t\tlog . error ( NUM00 , mod . getModFile ( ) , mod2 . getModFile ( ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tmodList . add ( mod ) ; \n\t\t\tidMap . put ( mod . getModID ( ) , mod ) ; \n\t\t\t} \n\t\t} \n\treturn mod ; \n\t} \n"}, {"code": "protected Size2D arrangeNN ( BlockContainer container , Graphics2D g2 ) { \n\t$F150084 ( blocks , container ) Block b = ( Block ) blocks . get ( NUM00 ) ; \n\tSize2D s = b . arrange ( g2 , RectangleConstraint . NONE ) ; \n\tb . setBounds ( new $F1634 ( NUM00 , NUM00 , s . width , s . height ) ) ; \n\treturn new Size2D ( $F44316 ( s ) ) ; \n\t} \n"}, {"code": "public static boolean isContentType ( String contentType , Message message ) { \n\tif ( contentType == null ) { \n\t\treturn message . getContentType ( ) == null ; \n\t\t} \n\telse { \n\t\treturn contentType . equals ( message . getContentType ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "private static X509Certificate generateCertificate ( String dn , int days , String applicationUri , KeyPair keys , org . opcfoundation . ua . transport . security . KeyPair issuerKeys , String ... hostNames ) throws GeneralSecurityException , IOException { \n\tPrivateKey privkey = keys . getPrivate ( ) ; \n\tPublicKey publicKey = keys . getPublic ( ) ; \n\treturn generateCertificate ( dn , days , applicationUri , publicKey , privkey , issuerKeys , hostNames ) ; \n\t} \n"}, {"code": "$F1431 public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { \n\tsubmitCycle = _BOOL ; \n\tAbstractAuditModel model = ( AbstractAuditModel ) getModel ( ) ; \n\t$F123284 ( ps , getChild , PROPERTY_ATTRIBUTE ) $F59547 ( subConfigName , getPageSessionAttribute , AUDIT_HANDLER_NAME ) try { \n\t\tMap orig = model . getEventHandlerAttributeValues ( subConfigName ) ; \n\t\tMap values = ps . getAttributeValues ( orig , _BOOL , _BOOL , model ) ; \n\t\tmodel . setEventHandlerAttributeValues ( subConfigName , values ) ; \n\t\tbackToProfileViewBean ( ) ; \n\t\t} \n\tcatch ( AMConsoleException e ) { \n\t\t$F196466 ( setInlineAlertMessage , TYPE_ERROR , ERROR_MESSAGE , e ) ; \n\t\tforwardTo ( ) ; \n\t\t} \n\t} \n"}, {"code": "private String checkAllDependencies ( HashMap < String , ModuleDescriptor > modlist ) { \n\tfor ( ModuleDescriptor md : modlist . values ( ) ) { \n\t\tString res = checkDependencies ( md , modlist ) ; \n\t\tif $F5973 ( res ) { \n\t\t\treturn res ; \n\t\t\t} \n\t\t} \n\t$F1278 } \n"}, {"code": "public void childrenRemoved ( BeanContextMembershipEvent bcme ) { \n\tfor ( $F2774 ( it , bcme ) ) { \n\t\t$F7683 ( findAndUndo , it ) } \n\t} \n"}, {"code": "public static void checkDirectoryIsWriteable ( $F1113 File directory ) throws IOException { \n\twhile $F224313 ( directory ) { \n\t\t$F122621 ( directory ) } \n\tif $F14326 ( directory ) $F144276 ( directory ) } \n"}, {"code": "public String toString $F72 { \n\t$F83 ( s ) boolean appended = _BOOL ; \n\tif ( this . weeks != NUM00 || appended ) { \n\t\tappended = _BOOL ; \n\t\ts . append ( this . weeks + NUM00 ) ; \n\t\t} \n\tif ( this . days != NUM00 || appended ) { \n\t\tappended = _BOOL ; \n\t\ts . append ( this . days + NUM00 ) ; \n\t\t} \n\tif ( this . hours != NUM00 || appended ) { \n\t\tappended = _BOOL ; \n\t\ts . append ( this . hours + NUM00 ) ; \n\t\t} \n\tif ( this . minutes != NUM00 || appended ) { \n\t\tappended = _BOOL ; \n\t\ts . append ( this . minutes + NUM00 ) ; \n\t\t} \n\tif ( this . seconds != NUM00 || appended ) { \n\t\tappended = _BOOL ; \n\t\ts . append ( this . seconds + NUM00 ) ; \n\t\t} \n\tif ( this . milliseconds != NUM00 || appended ) { \n\t\tappended = _BOOL ; \n\t\ts . append ( this . milliseconds + NUM00 ) ; \n\t\t} \n\t$F92 ( s ) } \n"}, {"code": "private synchronized void writeObject $F9338 ( s ) throws IOException $F113012 ( s ) "}, {"code": "public void startEntity ( String name ) throws $F2253 $F845 "}, {"code": "public static boolean isJavaKeyword ( String name ) $F298 ( tokens , name ) "}, {"code": "protected String extractImportUrl ( final Matcher matcher ) { \n\treturn matcher . group ( INDEX_URL ) ; \n\t} \n"}, {"code": "$F1 public boolean equals ( Object that ) { \n\t$F3627 ( this , that , _BOOL ) $F1933 ( that , _BOOL ) $F34838 ( getClass , that , _BOOL ) Collator other = ( Collator ) that ; \n\treturn ( ( strength == other . strength ) && ( decmp == other . decmp ) ) ; \n\t} \n"}, {"code": "public void runTest $F72 throws Throwable { \n\tDocument doc ; \n\tNodeList emList ; \n\tNode emNode ; \n\tCharacterData emText ; \n\tNode nullChild ; \n\t$F236 ( doc , load , _BOOL ) $F237 ( emList , doc ) $F238 ( emNode , emList ) $F241 ( emText , emNode ) nullChild = emText . getFirstChild ( ) ; \n\tassertNull ( NUM00 , nullChild ) ; \n\t} \n"}, {"code": "Type renameTypeAsType ( Type type ) { \n\t$F1338 ( type ) if ( type . getSort ( ) == Type . OBJECT ) { \n\t\tString in = type . getInternalName ( ) ; \n\t\tString newIn = renameInternalType ( in ) ; \n\t\tif ( newIn != in ) { \n\t\t\treturn Type . getType ( NUM00 + newIn + NUM00 ) ; \n\t\t\t} \n\t\t} \n\telse if ( type . getSort ( ) == Type . ARRAY ) { \n\t\t$F83 ( sb ) for ( int n = type . getDimensions ( ) ; \n\t\tn > NUM00 ; \n\t\tn -- ) $F86 ( sb ) sb . append ( renameType ( type . getElementType ( ) ) ) ; \n\t\treturn Type . getType ( sb . toString ( ) ) ; \n\t\t} \n\treturn type ; \n\t} \n"}, {"code": "public static void writeFileList ( XMLOutput xmlOutput , String tagName , Iterable $F11299 listValues ) throws IOException { \n\tif ( listValues != null ) { \n\t\twriteFileList ( xmlOutput , tagName , listValues . iterator ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public DPolicyConstraints ( JDialog parent ) $F15427 ( super , parent , setTitle , res , initComponents ) "}, {"code": "@ PreAuthorize ( SpringEvalExpressions . HAS_AUTH_SYSTEM_ADMIN ) $F1 public ResponseEntity < $F6877 > invalidateCaches $F72 { \n\tfinal $F6877 cacheNames = cacheManager . getCacheNames ( ) ; \n\t$F10635 ( LOGGER , cacheNames ) $F22620 ( cacheNames ) return ResponseEntity . ok ( cacheNames ) ; \n\t} \n"}, {"code": "public static final void writeByteArrayXml ( $F96 val , String name , XmlSerializer out ) throws $F52182 { \n\t$F18827 ( val , out ) $F18823 ( out ) $F18831 ( name , out ) $F18832 ( N , val ) $F18835 ( out , Integer , N ) $F28148 ( sb , val ) for ( $F119 ( i , N ) ) { \n\t\tint b = val [ i ] ; \n\t\tint h = b > > NUM00 ; \n\t\t$F28151 ( sb , h ) h = b & NUM00 ; \n\t\t$F28151 ( sb , h ) } \n\tout . text ( sb . toString ( ) ) ; \n\t$F18825 ( out ) } \n"}, {"code": "public static void writeFile ( final File destination , $F20109 ( contents ) ) throws IOException { \n\tfinal BufferedWriter bw = new BufferedWriter ( new FileWriter ( destination ) ) ; \n\ttry { \n\t\tfor ( String line : contents ) $F64858 ( bw , line ) $F1206 ( bw ) } \n\t$F3229 ( bw ) } \n"}, {"code": "public void cancelRequestsByTAG ( Object TAG , boolean mayInterruptIfRunning ) { \n\t$F2329 ( TAG ) for ( List < RequestHandle > requestList : requestMap . values ( ) ) { \n\t\tif ( requestList != null ) { \n\t\t\tfor ( RequestHandle requestHandle : requestList ) { \n\t\t\t\tif ( TAG . equals ( requestHandle . getTag ( ) ) ) requestHandle . cancel ( mayInterruptIfRunning ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static void drawSnapHorizontalMargin ( ViewTransform transform , Graphics2D g , int x1 , int x2 , int y1 , String text , boolean textOver ) { \n\tCanvas c = new Canvas $F72 ; \n\t$F23540 ( fm , c , sFont ) g . setFont ( sFont ) ; \n\tint padding = transform . getSwingDimension ( NUM00 ) ; \n\tRectangle2D bounds = fm . getStringBounds ( text , g ) ; \n\tint tw = $F63353 ( bounds ) ; \n\tint offset = NUM00 * CONNECTION_ARROW_SIZE ; \n\t$F63332 ( x1 , x2 , temp ) int w = ( ( x2 - x1 ) - ( tw + NUM00 * padding ) ) / NUM00 ; \n\tif ( w <= padding ) { \n\t\t$F63333 ( g , x1 , y1 , x2 ) if ( textOver ) { \n\t\t\toffset = - NUM00 * offset / NUM00 ; \n\t\t\t} \n\t\tg . drawString ( text , x1 + w + padding , y1 + offset ) ; \n\t\t} \n\telse { \n\t\tg . drawLine ( x1 , y1 , x1 + w , y1 ) ; \n\t\tg . drawLine ( x2 - w , y1 , x2 , y1 ) ; \n\t\tg . drawString ( text , x1 + w + padding , ( int ) ( y1 + $F63371 ( bounds ) ) ) ; \n\t\t} \n\tg . drawLine ( x1 , y1 - CONNECTION_ARROW_SIZE , x1 , y1 + CONNECTION_ARROW_SIZE ) ; \n\tg . drawLine ( x2 , y1 - CONNECTION_ARROW_SIZE , x2 , y1 + CONNECTION_ARROW_SIZE ) ; \n\t} \n"}, {"code": "public static GenericRecord subsetRecord ( GenericRecord record , Schema subsetSchema ) $F25228 ( subsetRecord , record , subsetSchema ) "}, {"code": "static public void queueOperation ( Context context , OperationInfo args ) { \n\targs . calculateScheduledTime ( ) ; \n\tsynchronized ( sWorkQueue ) { \n\t\tsWorkQueue . add ( args ) ; \n\t\t$F8071 ( sWorkQueue ) } \n\tcontext . startService ( new Intent ( context , AsyncQueryServiceHelper . class ) ) ; \n\t} \n"}, {"code": "private static $F198570 interpret ( String string ) { \n\t$F198570 cells = new Cell $F380 ; \n\tfor ( $F1088 ( i , string ) ) { \n\t\tint dig = string . charAt ( i ) - NUM00 ; \n\t\tint col = dig % NUM00 ; \n\t\tint row = dig / NUM00 ; \n\t\tcells [ i ] = new Cell ( col , row ) ; \n\t\t} \n\treturn cells ; \n\t} \n"}, {"code": "public Shape transform ( Shape shape ) { \n\t$F104030 ( bounds , shape ) Point2D center = new $F5047 ( bounds . getCenterX ( ) , bounds . getCenterY ( ) ) ; \n\tPoint2D newCenter = transform ( center ) ; \n\t$F152048 ( dx , newCenter , center ) $F152051 ( dy , newCenter , center ) AffineTransform at = AffineTransform . getTranslateInstance ( dx , dy ) ; \n\treturn at . createTransformedShape ( shape ) ; \n\t} \n"}, {"code": "public void list ( PrintWriter out , int indent ) { \n\tfor ( $F119 ( i , indent ) ) $F21410 ( out ) out . println ( this ) ; \n\t} \n"}, {"code": "private void init $F72 { \n\tsetTitle ( NUM00 ) ; \n\tcompPropertiesPanel = CompetitivePropertiesPanel . createCompetitivePropertiesPanel ( networkPanel , CompetitivePropsPanelType . CREATE_GROUP ) ; \n\ttabLogic . add ( compPropertiesPanel ) ; \n\tlayoutPanel = new MainLayoutPanel ( _BOOL , this ) ; \n\tlayoutPanel . setCurrentLayout ( CompetitiveGroup . DEFAULT_LAYOUT ) ; \n\ttabLayout . add ( layoutPanel ) ; \n\t$F36210 ( tabbedPane , tabLogic ) $F36210 ( tabbedPane , layoutPanel ) setContentPane ( tabbedPane ) ; \n\tAction helpAction = new ShowHelpAction ( compPropertiesPanel . getHelpPath ( ) ) ; \n\taddButton ( new JButton ( helpAction ) ) ; \n\t} \n"}, {"code": "public static RevocationStatus check ( X509Certificate cert , X509Certificate issuerCert ) throws IOException , CertPathValidatorException { \n\tCertId certId = null ; \n\tURI responderURI = null ; \n\ttry { \n\t\tX509CertImpl certImpl = X509CertImpl . toImpl ( cert ) ; \n\t\tresponderURI = getResponderURI ( certImpl ) ; \n\t\tif ( responderURI == null ) { \n\t\t\tthrow new CertPathValidatorException $F580 ; \n\t\t\t} \n\t\tcertId = new CertId ( issuerCert , certImpl . getSerialNumberObject ( ) ) ; \n\t\t} \n\tcatch ( CertificateException | IOException e ) { \n\t\tthrow new CertPathValidatorException ( NUM00 , e ) ; \n\t\t} \n\tOCSPResponse ocspResponse = check ( Collections . singletonList ( certId ) , responderURI , issuerCert , null , null , Collections . $F7942 $F9639 ) ; \n\treturn ( RevocationStatus ) ocspResponse . getSingleResponse ( certId ) ; \n\t} \n"}, {"code": "public static CompositeType forAlphaComposite ( AlphaComposite ac ) { \n\tswitch ( ac . getRule ( ) ) { \n\t\tcase AlphaComposite . CLEAR : return Clear ; \n\t\tcase AlphaComposite . SRC : if ( ac . getAlpha ( ) >= NUM00 ) { \n\t\t\treturn SrcNoEa ; \n\t\t\t} \n\t\telse { \n\t\t\treturn Src ; \n\t\t\t} \n\t\tcase AlphaComposite . DST : return Dst ; \n\t\tcase AlphaComposite . SRC_OVER : if ( ac . getAlpha ( ) >= NUM00 ) { \n\t\t\treturn SrcOverNoEa ; \n\t\t\t} \n\t\telse { \n\t\t\treturn SrcOver ; \n\t\t\t} \n\t\tcase AlphaComposite . DST_OVER : return DstOver ; \n\t\tcase AlphaComposite . SRC_IN : return SrcIn ; \n\t\tcase AlphaComposite . DST_IN : return DstIn ; \n\t\tcase AlphaComposite . SRC_OUT : return SrcOut ; \n\t\tcase AlphaComposite . DST_OUT : return DstOut ; \n\t\tcase AlphaComposite . SRC_ATOP : return SrcAtop ; \n\t\tcase AlphaComposite . DST_ATOP : return DstAtop ; \n\t\tcase AlphaComposite . XOR : return AlphaXor ; \n\t\t$F1267 throw $F86636 ; \n\t\t} \n\t} \n"}, {"code": "public void removeTrackingIcon ( Object tag ) { \n\tif ( trackingIcons != null && trackingIcons . remove ( tag ) ) $F5795 ( repaint ) } \n"}, {"code": "private List findPhonemes $F72 { \n\t$F19850 ( set ) for ( $F1139 ( i , stateMachine ) ) { \n\t\tif ( stateMachine [ i ] instanceof FinalState ) { \n\t\t\tFinalState fstate = ( FinalState ) stateMachine [ i ] ; \n\t\t\tif ( fstate . phoneList != null ) { \n\t\t\t\tfor ( int j = NUM00 ; \n\t\t\t\tj < fstate . phoneList . length ; \n\t\t\t\tj ++ ) { \n\t\t\t\t\tset . add ( fstate . phoneList [ j ] ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn new ArrayList ( set ) ; \n\t} \n"}, {"code": "public static File removeParent ( File parent , File file ) { \n\t$F22814 ( absolutePath , file ) $F22814 ( parentAbsolutePath , parent ) String newPath = absolutePath . replace ( parentAbsolutePath + NUM00 , NUM00 ) ; \n\treturn new File ( newPath ) ; \n\t} \n"}, {"code": "public static boolean almostEqual $F7635 ( a , b , delta ) { \n\treturn Math . abs ( a - b ) <= delta ; \n\t} \n"}, {"code": "public void endElement $F72 { \n\tnss . popContext ( ) ; \n\t} \n"}, {"code": "public void test_fill$BIIB $F72 { \n\tbyte val = Byte . MAX_VALUE ; \n\tbyte $F3234 = $F10314 ; \n\t$F47119 ( Arrays , d , val ) $F47123 ( i , assertTrue , d , val ) $F47124 ( i , d , assertTrue , val ) int result ; \n\ttry { \n\t\tArrays . fill ( $F10314 , NUM00 , NUM00 , $F19905 ) ; \n\t\tresult = NUM00 ; \n\t\t} \n\tcatch ( ArrayIndexOutOfBoundsException e ) { \n\t\tresult = NUM00 ; \n\t\t} \n\tcatch ( IllegalArgumentException e ) { \n\t\tresult = NUM00 ; \n\t\t} \n\tassertEquals ( NUM00 , NUM00 , result ) ; \n\ttry { \n\t\tArrays . fill ( $F10314 , - NUM00 , NUM00 , $F19905 ) ; \n\t\tresult = NUM00 ; \n\t\t} \n\tcatch ( ArrayIndexOutOfBoundsException e ) { \n\t\tresult = NUM00 ; \n\t\t} \n\tcatch ( IllegalArgumentException e ) { \n\t\tresult = NUM00 ; \n\t\t} \n\tassertEquals ( NUM00 , NUM00 , result ) ; \n\ttry { \n\t\tArrays . fill ( $F10314 , NUM00 , NUM00 , $F19905 ) ; \n\t\tresult = NUM00 ; \n\t\t} \n\tcatch ( ArrayIndexOutOfBoundsException e ) { \n\t\tresult = NUM00 ; \n\t\t} \n\tcatch ( IllegalArgumentException e ) { \n\t\tresult = NUM00 ; \n\t\t} \n\tassertEquals ( NUM00 , NUM00 , result ) ; \n\t} \n"}, {"code": "private JsonWriter open ( int empty , String openBracket ) throws IOException { \n\tbeforeValue ( ) ; \n\tpush ( empty ) ; \n\tout . write ( openBracket ) ; \n\treturn this ; \n\t} \n"}, {"code": "private double calculateLog ( double value ) { \n\treturn Math . log ( value ) / this . baseLog ; \n\t} \n"}, {"code": "$F1 public boolean uploadFile ( String source , String dest ) { \n\tFileInputStream fis ; \n\ttry { \n\t\t$F1705 ( file , source ) $F5335 ( fis , file ) mDBApi . putFileOverwrite ( dest , fis , file . length ( ) , null ) ; \n\t\t$F59 ( fis ) return _BOOL ; \n\t\t} \n\tcatch ( DropboxUnlinkedException e ) { \n\t\tLog . d ( String . valueOf ( R . string . app_name ) , NUM00 , e ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tcatch ( DropboxException e ) { \n\t\tLog . d ( String . valueOf ( R . string . app_name ) , NUM00 , e ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tcatch ( FileNotFoundException e ) { \n\t\tLog . d ( String . valueOf ( R . string . app_name ) , NUM00 , e ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t$F132878 ( e , _BOOL ) } \n"}, {"code": "private File createZipFileHandle $F72 throws IOException { \n\tFile zipFile = File . createTempFile ( NUM00 , NUM00 , tmpOutputFolder . getRoot ( ) ) ; \n\tassertTrue ( zipFile . delete ( ) ) ; \n\treturn zipFile ; \n\t} \n"}, {"code": "public boolean removeHandler ( String columnName ) { \n\tif ( m_overrides == null ) return _BOOL ; \n\telse return m_overrides . remove ( columnName ) != null ; \n\t} \n"}, {"code": "public boolean isEmpty $F72 { \n\treturn $F4251 ( tag ) && $F10470 ( images ) ; \n\t} \n"}, {"code": "$F1431 private void restoreBadges $F72 { \n\tBundle restoredBundle = savedInstanceState ; \n\tif ( restoredBundle != null ) { \n\t\tif $F1710 ( restoredBundle , BADGE_FULL_TEXT_KEY ) { \n\t\t\tshouldShowBadgeWithNinePlus = restoredBundle . getBoolean ( BADGE_FULL_TEXT_KEY ) ; \n\t\t\t} \n\t\tif $F1710 ( restoredBundle , BUDGES_ITEM_BUNDLE_KEY ) { \n\t\t\tbadgeSaveInstanceHashMap = ( HashMap < Integer , Object > ) savedInstanceState . getSerializable ( BUDGES_ITEM_BUNDLE_KEY ) ; \n\t\t\tif ( badgeSaveInstanceHashMap != null ) { \n\t\t\t\tfor ( $F61448 ( integer , badgeSaveInstanceHashMap ) ) { \n\t\t\t\t\tBadgeHelper . forceShowBadge ( badgeList . get ( integer ) , ( BadgeItem ) badgeSaveInstanceHashMap . get ( integer ) , shouldShowBadgeWithNinePlus ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void touch $F72 { \n\t$F3224 ( touch , System ) if ( worker != null ) { \n\t\tworker . touch ( ) ; \n\t\t} \n\t} \n"}, {"code": "public CatalogEntry ( String name , Vector args ) throws CatalogException { \n\t$F10158 ( iType , entryTypes , name ) if ( iType == null ) { \n\t\tthrow new CatalogException ( CatalogException . INVALID_ENTRY_TYPE ) ; \n\t\t} \n\t$F79839 ( type , iType ) try { \n\t\t$F10158 ( iArgs , entryArgs , type ) if ( iArgs . intValue ( ) != args . size ( ) ) { \n\t\t\tthrow new CatalogException ( CatalogException . INVALID_ENTRY ) ; \n\t\t\t} \n\t\t} \n\tcatch ( ArrayIndexOutOfBoundsException e ) { \n\t\tthrow new CatalogException ( CatalogException . INVALID_ENTRY_TYPE ) ; \n\t\t} \n\tentryType = type ; \n\tthis . args = args ; \n\t} \n"}, {"code": "public void addMsgWaiting ( MwiType type , int count , MwiProfile profile , boolean storeMessage ) { \n\t$F127479 ( count ) messages_ . add ( new MsgWaiting ( type , count , profile , storeMessage ) ) ; \n\t} \n"}, {"code": "private void pushStack ( int newTop ) { \n\tif ( stackSize == stack . length ) { \n\t\t$F69133 ( newStack , stackSize ) $F69133 ( newPathIndices , stackSize ) $F806 newPathNames = new String [ stackSize * NUM00 ] ; \n\t\t$F135 ( System , stack , newStack , stackSize ) $F135 ( System , pathIndices , newPathIndices , stackSize ) $F135 ( System , pathNames , newPathNames , stackSize ) stack = newStack ; \n\t\tpathIndices = newPathIndices ; \n\t\tpathNames = newPathNames ; \n\t\t} \n\tstack [ stackSize ++ ] = newTop ; \n\t} \n"}, {"code": "private static void logHierarchy ( String prefix , ClassLoader classLoader ) { \n\t$F933 ( isDiagnosticsEnabled ) ClassLoader systemClassLoader ; \n\tif ( classLoader != null ) { \n\t\t$F52199 ( classLoaderString , classLoader ) logDiagnostic ( prefix + objectId ( classLoader ) + NUM00 + classLoaderString + NUM00 ) ; \n\t\t} \n\ttry { \n\t\tsystemClassLoader = ClassLoader . getSystemClassLoader ( ) ; \n\t\t} \n\tcatch ( SecurityException ex ) { \n\t\tlogDiagnostic ( prefix + NUM00 ) ; \n\t\t$F665 } \n\tif ( classLoader != null ) { \n\t\tStringBuffer buf = new StringBuffer ( prefix + NUM00 ) ; \n\t\tfor ( $F589 ) { \n\t\t\t$F6407 ( buf , objectId , classLoader ) if ( classLoader == systemClassLoader ) $F86 ( buf ) try $F10338 ( classLoader ) catch ( SecurityException ex ) $F257374 ( buf ) $F84 ( buf ) if ( classLoader == null ) $F257374 ( buf ) } \n\t\t$F31458 ( logDiagnostic , buf ) } \n\t} \n"}, {"code": "public void addGossipMember ( GossipMember member ) $F207 ( gossipMembers , member ) "}, {"code": "public static $F6877 logFiles $F72 { \n\t$F6877 $F719 ( res , fileAppenders ) ; \n\tfor ( FileAppender a : fileAppenders ) res . add ( a . getFile ( ) ) ; \n\treturn res ; \n\t} \n"}, {"code": "public boolean isCaseSensitive $F72 $F28110 ( m_caseSensitiveBox ) "}, {"code": "public boolean isNamespaceNode ( Node n ) { \n\tif ( Node . ATTRIBUTE_NODE == n . getNodeType ( ) ) { \n\t\t$F48115 ( attrName , n ) return $F26612 ( attrName ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public int hashCode $F72 { \n\t$F17043 ( hash , type ) $F252039 ( name , hash ) $F252039 ( actions , hash ) return hash ; \n\t} \n"}, {"code": "public SubConfigModelImpl ( HttpServletRequest req , String serviceName , String parentId , Map map ) throws AMConsoleException { \n\tsuper ( req , map ) ; \n\tthis . serviceName = serviceName ; \n\tthis . parentId = parentId ; \n\tsubConfigMeta = new SubConfigMeta ( serviceName , this ) ; \n\tsubConfigMeta . setParentId ( parentId ) ; \n\tdisplayName = subConfigMeta . getParentDisplayName ( ) ; \n\t} \n"}, {"code": "$F1 public boolean equals ( Object obj ) { \n\tif ( ! ( obj instanceof PolynomialFunction2D ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tPolynomialFunction2D that = ( PolynomialFunction2D ) obj ; \n\treturn Arrays . equals ( this . coefficients , that . coefficients ) ; \n\t} \n"}, {"code": "public static int convertToColorInt ( String a , String r , String g , String b , boolean useAlpha ) { \n\tint alpha = useAlpha ? Integer . parseInt ( a , NUM00 ) : NUM00 ; \n\t$F241425 ( red , Integer , r ) $F241425 ( green , Integer , g ) $F241425 ( blue , Integer , b ) return Color . argb ( useAlpha ? alpha : - NUM00 , red , green , blue ) ; \n\t} \n"}, {"code": "$F1 public void onAction $F72 { \n\tonAction ( ActionType . PICK ) ; \n\t} \n"}, {"code": "public AbstractBinaryTraversal ( IBinaryTreeNode $F4203 node ) { \n\t$F896 ( node ) stack . add ( new Moment ( node , initialPhase ( ) ) ) ; \n\tadvance ( ) ; \n\t} \n"}, {"code": "$F1 public void endElement $F1947 ( uri , localName , qName ) throws SAXException { \n\tif $F1238 ( qName , TAG_ROOT ) $F845 else if $F22081 ( qName , TAG_GROUP , TAG_PROPERTY ) { \n\t\tSettingsItem item = $F30605 ( itemStack ) ; \n\t\tsettingsItems . put ( item . getKey ( ) , item ) ; \n\t\t} \n\telse { \n\t\tthrow new SAXException ( NUM00 + localName ) ; \n\t\t} \n\t} \n"}, {"code": "public void cancelAll $F72 { \n\tendpoint . cancelAll ( ) ; \n\t} \n"}, {"code": "$F1 public double value ( int attIndex ) { \n\tint index = locateIndex ( attIndex ) ; \n\tif ( ( index >= NUM00 ) && ( m_Indices [ index ] == attIndex ) ) $F269670 ( m_AttValues , index ) else $F1083 } \n"}, {"code": "public void initialize ( Context context , TimePickerDialog timePickerDialog , int initialHoursOfDay , int initialMinutes , boolean is24HourMode ) { \n\t$F17932 ( mTimeInitialized , Log , TAG ) mTimePickerDialog = timePickerDialog ; \n\tmIs24HourMode = is24HourMode ; \n\tmHideAmPm = mAccessibilityManager . isTouchExplorationEnabled ( ) || mIs24HourMode ; \n\tmCircleView . initialize ( context , mHideAmPm ) ; \n\t$F5217 ( mCircleView ) if ( ! mHideAmPm ) { \n\t\tmAmPmCirclesView . initialize ( context , initialHoursOfDay < NUM00 ? AM : PM ) ; \n\t\t$F5217 ( mAmPmCirclesView ) } \n\t$F17934 ( res , context ) $F134655 ( hours ) $F134655 ( hours_24 ) $F134655 ( minutes ) $F808 ( hoursTexts ) $F808 ( innerHoursTexts ) $F808 ( minutesTexts ) for ( $F6268 ( i ) ) { \n\t\thoursTexts [ i ] = is24HourMode ? $F134656 ( String , hours_24 , i ) : $F134656 ( String , hours , i ) ; \n\t\tinnerHoursTexts [ i ] = $F134656 ( String , hours , i ) ; \n\t\tminutesTexts [ i ] = $F134656 ( String , minutes , i ) ; \n\t\t} \n\tmHourRadialTextsView . initialize ( res , hoursTexts , ( is24HourMode ? innerHoursTexts : null ) , mHideAmPm , _BOOL ) ; \n\tmHourRadialTextsView . setSelection ( is24HourMode ? initialHoursOfDay : hours [ initialHoursOfDay % NUM00 ] ) ; \n\t$F5217 ( mHourRadialTextsView ) mMinuteRadialTextsView . initialize ( res , minutesTexts , null , mHideAmPm , _BOOL ) ; \n\tmMinuteRadialTextsView . setSelection ( initialMinutes ) ; \n\t$F5217 ( mMinuteRadialTextsView ) setValueForItem ( HOUR_INDEX , initialHoursOfDay ) ; \n\tsetValueForItem ( MINUTE_INDEX , initialMinutes ) ; \n\tint hourDegrees = ( initialHoursOfDay % NUM00 ) * HOUR_VALUE_TO_DEGREES_STEP_SIZE ; \n\tmHourRadialSelectorView . initialize ( context , mHideAmPm , is24HourMode , _BOOL , hourDegrees , isHourInnerCircle ( initialHoursOfDay ) ) ; \n\tint minuteDegrees = initialMinutes * MINUTE_VALUE_TO_DEGREES_STEP_SIZE ; \n\tmMinuteRadialSelectorView . initialize ( context , mHideAmPm , _BOOL , _BOOL , minuteDegrees , _BOOL ) ; \n\tmTimeInitialized = _BOOL ; \n\t} \n"}, {"code": "protected void decodeBitmapData ( final GifFrame frame , $F96 dstPixels ) { \n\tif ( frame != null ) { \n\t\trawData . position ( frame . bufferFrameStart ) ; \n\t\t} \n\tfinal int nullCode = - NUM00 ; \n\tfinal int npix = ( frame == null ) ? width * height : frame . iw * frame . ih ; \n\tint available , clear , code_mask , code_size , end_of_information , in_code , old_code , bits , code , count , i , datum , data_size , first , top , bi , pi ; \n\tif $F28203 ( dstPixels , npix ) $F75474 ( dstPixels , npix ) if ( prefix == null ) { \n\t\t$F69027 ( prefix , MAX_STACK_SIZE ) } \n\tif ( suffix == null ) $F75474 ( suffix , MAX_STACK_SIZE ) if ( pixelStack == null ) { \n\t\t$F83281 ( pixelStack , MAX_STACK_SIZE ) ; \n\t\t} \n\tdata_size = read ( ) ; \n\tclear = NUM00 < < data_size ; \n\tend_of_information = clear + NUM00 ; \n\tavailable = clear + NUM00 ; \n\told_code = nullCode ; \n\tcode_size = data_size + NUM00 ; \n\t$F143890 ( code_mask , code_size ) ; \n\tfor ( code = NUM00 ; \n\tcode < clear ; \n\tcode ++ ) { \n\t\tprefix [ code ] = NUM00 ; \n\t\t$F78924 ( suffix , code ) } \n\tdatum = bits = count = first = top = pi = bi = NUM00 ; \n\tfor ( i = NUM00 ; \n\ti < npix ; \n\t) { \n\t\tif ( top == NUM00 ) { \n\t\t\tif ( bits < code_size ) { \n\t\t\t\tif ( count == NUM00 ) { \n\t\t\t\t\tcount = readBlock ( ) ; \n\t\t\t\t\t$F65649 ( count ) bi = NUM00 ; \n\t\t\t\t\t} \n\t\t\t\tdatum += ( ( block [ bi ] ) & NUM00 ) < < bits ; \n\t\t\t\tbits += NUM00 ; \n\t\t\t\tbi ++ ; \n\t\t\t\tcount -- ; \n\t\t\t\t$F598 } \n\t\t\tcode = datum & code_mask ; \n\t\t\tdatum >>= code_size ; \n\t\t\tbits -= code_size ; \n\t\t\tif ( ( code > available ) || ( code == end_of_information ) ) $F5153 if ( code == clear ) { \n\t\t\t\tcode_size = data_size + NUM00 ; \n\t\t\t\t$F143890 ( code_mask , code_size ) ; \n\t\t\t\tavailable = clear + NUM00 ; \n\t\t\t\told_code = nullCode ; \n\t\t\t\t$F598 } \n\t\t\tif ( old_code == nullCode ) { \n\t\t\t\tpixelStack [ top ++ ] = suffix [ code ] ; \n\t\t\t\told_code = code ; \n\t\t\t\tfirst = code ; \n\t\t\t\t$F598 } \n\t\t\tin_code = code ; \n\t\t\tif ( code == available ) { \n\t\t\t\t$F11740 ( pixelStack , top , first ) code = old_code ; \n\t\t\t\t} \n\t\t\twhile ( code > clear ) { \n\t\t\t\tpixelStack [ top ++ ] = suffix [ code ] ; \n\t\t\t\tcode = prefix [ code ] ; \n\t\t\t\t} \n\t\t\tfirst = ( suffix [ code ] ) & NUM00 ; \n\t\t\t$F66497 ( available , MAX_STACK_SIZE ) $F11740 ( pixelStack , top , first ) prefix [ available ] = ( short ) old_code ; \n\t\t\t$F8214 ( suffix , available , first ) available ++ ; \n\t\t\tif ( $F84469 ( available , code_mask ) && ( available < MAX_STACK_SIZE ) ) { \n\t\t\t\tcode_size ++ ; \n\t\t\t\tcode_mask += available ; \n\t\t\t\t} \n\t\t\told_code = in_code ; \n\t\t\t} \n\t\ttop -- ; \n\t\tdstPixels [ pi ++ ] = pixelStack [ top ] ; \n\t\ti ++ ; \n\t\t} \n\tfor ( i = pi ; \n\ti < npix ; \n\ti ++ ) $F5629 ( dstPixels , i ) } \n"}, {"code": "public synchronized String findValue ( String k ) { \n\tif ( k == null ) { \n\t\tfor ( $F212286 ( i , nkeys ) ) if ( keys [ i ] == null ) return values [ i ] ; \n\t\t} \n\telse for ( $F212286 ( i , nkeys ) ) { \n\t\tif $F11411 ( k , keys , i ) return values [ i ] ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public static $F96 decode ( String input ) throws ParseException { \n\tif $F1277 ( input ) $F42429 $F107762 ( input58 , input ) for ( $F38840 ( i , input ) ) { \n\t\t$F1280 ( c , input , i ) int digit = c < NUM00 ? INDEXES [ c ] : - NUM00 ; \n\t\tif ( digit < NUM00 ) { \n\t\t\tthrow new ParseException ( NUM00 + c + NUM00 + i , i ) ; \n\t\t\t} \n\t\t$F8214 ( input58 , i , digit ) } \n\tint zeros = NUM00 ; \n\t$F107776 ( zeros , input58 ) $F107762 ( decoded , input ) int outputStart = decoded . length ; \n\tfor ( $F107777 ( inputStart , zeros , input58 ) ) { \n\t\tdecoded [ -- outputStart ] = divmod ( input58 , inputStart , NUM00 , NUM00 ) ; \n\t\t$F107780 ( input58 , inputStart ) } \n\t$F107776 ( outputStart , decoded ) return Arrays . copyOfRange ( decoded , outputStart - zeros , decoded . length ) ; \n\t} \n"}, {"code": "TemplateSubPatternAssociation ( ElemTemplate template , StepPattern pattern , String pat ) { \n\tm_pattern = pat ; \n\tm_template = template ; \n\tm_stepPattern = pattern ; \n\tm_targetString = m_stepPattern . getTargetString ( ) ; \n\tm_wild = m_targetString . equals ( NUM00 ) ; \n\t} \n"}, {"code": "public boolean delete $F72 throws IOException { \n\tif $F48405 ( closed , _BOOL ) { \n\t\tclose ( _BOOL ) ; \n\t\t$F3452 ( success , allocatedNodesList ) success &= nioFile . delete ( ) ; \n\t\treturn success ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static boolean hasNoPrefix ( final AnnotatedTypeMirror annoType ) { \n\t$F1933 ( annoType , _BOOL ) for ( AnnotationMirror mirror : annoType . getAnnotations ( ) ) { \n\t\t$F38676 ( hasNoPrefix , mirror , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void tryFormatSatisfiability ( String format ) throws IllegalFormatException { \n\t$F1431 String unused = String . format ( format , ( $F131 ) null ) ; \n\t} \n"}, {"code": "public static IgniteLogger logger ( GridKernalContext ctx , AtomicReference < IgniteLogger > logRef , $F6969 cls ) { \n\tIgniteLogger log = logRef . get ( ) ; \n\tif ( log == null ) { \n\t\tlogRef . compareAndSet ( null , ctx . log ( cls ) ) ; \n\t\t$F16478 ( log , logRef ) } \n\treturn log ; \n\t} \n"}, {"code": "public byte receiveOneByte $F72 { \n\t$F13527 ( Log , TAG ) try { \n\t\tacquireLock ( ) ; \n\t\tmServerSocket . receive ( mReceivePacket ) ; \n\t\tLog . d ( TAG , NUM00 + ( NUM00 + $F94795 ( mReceivePacket ) ) ) ; \n\t\treturn $F94795 ( mReceivePacket ) ; \n\t\t} \n\t$F12241 ( e ) return Byte . MIN_VALUE ; \n\t} \n"}, {"code": "public static List < ConstraintViolation > check ( Resource resource , ProgressMonitor monitor ) { \n\treturn check ( resource , SPIN . constraint , null , monitor ) ; \n\t} \n"}, {"code": "public static boolean isValidImdbId ( String imdbId ) { \n\t$F46019 ( StringUtils , imdbId , _BOOL ) return imdbId . matches ( NUM00 ) ; \n\t} \n"}, {"code": "protected void showRecordedVideo $F72 { \n\t$F22814 ( absPath , mCurrentVideoFile ) Intent intent = new Intent ( this , PlayerActivity . class ) ; \n\tintent . putExtra ( PlayerActivity . EXTRA_VIDEO_PATH , absPath ) ; \n\tstartActivity ( intent ) ; \n\tmCurrentVideoFile = null ; \n\t} \n"}, {"code": "private void write ( $F19578 coords , int level , StringBuffer buf ) { \n\tstartLine ( NUM00 , level , buf ) ; \n\tboolean isNewLine = _BOOL ; \n\tfor ( $F1139 ( i , coords ) ) { \n\t\t$F234280 ( i , buf , TUPLE_SEPARATOR ) if ( isNewLine ) { \n\t\t\tstartLine ( NUM00 , level , buf ) ; \n\t\t\tisNewLine = _BOOL ; \n\t\t\t} \n\t\twrite ( coords [ i ] , buf ) ; \n\t\tif ( ( i + NUM00 ) % maxCoordinatesPerLine == NUM00 && i < coords . length - NUM00 ) $F19003 ( buf , isNewLine , _BOOL ) } \n\t$F84 ( buf ) } \n"}, {"code": "protected static boolean isIntendedException ( Exception e , $F6969 clazz ) { \n\tfinal String message = e . getMessage ( ) ; \n\treturn ( ! TextUtils . isEmpty ( message ) && message . startsWith ( clazz . getName ( ) ) ) ; \n\t} \n"}, {"code": "public static void swapPivot ( DenseDoubleMatrix2D source , long diag , DenseDoubleMatrix2D s , DenseDoubleMatrix2D t ) { \n\tlong swapRow = diag ; \n\tlong swapCol = diag ; \n\tdouble maxValue = Math . abs ( source . getDouble ( diag , diag ) ) ; \n\tlong rows = source . getRowCount ( ) ; \n\tlong cols = source . getColumnCount ( ) ; \n\tdouble abs = NUM00 ; \n\tfor ( long row = diag ; \n\trow < rows ; \n\trow ++ ) { \n\t\tfor ( long col = diag ; \n\t\tcol < cols ; \n\t\tcol ++ ) { \n\t\t\tabs = Math . abs ( source . getDouble ( row , col ) ) ; \n\t\t\tif ( abs > maxValue ) { \n\t\t\t\tmaxValue = abs ; \n\t\t\t\tswapRow = row ; \n\t\t\t\tswapCol = col ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( swapRow != diag ) { \n\t\tswapRows ( source , swapRow , diag ) ; \n\t\tswapRows ( t , swapRow , diag ) ; \n\t\t} \n\tif ( swapCol != diag ) { \n\t\tswapCols ( source , swapCol , diag ) ; \n\t\tswapCols ( s , swapCol , diag ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean canPopupOverlapTaskBar $F72 { \n\tboolean result = _BOOL ; \n\ttry { \n\t\t$F8108 ( sm , System ) if ( sm != null ) { \n\t\t\tsm . checkPermission ( SecurityConstants . AWT . SET_WINDOW_ALWAYS_ON_TOP_PERMISSION ) ; \n\t\t\t} \n\t\t} \n\tcatch ( SecurityException se ) { \n\t\tresult = _BOOL ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public Job createJobForCreateCluster ( String activitiXmlClasspathResourceName , $F292037 parameters ) throws Exception $F25228 ( createJobForCreateCluster , activitiXmlClasspathResourceName , parameters ) "}, {"code": "public static $F3803 findMainClasses ( File rootDir ) throws IOException { \n\t$F24645 ( ret ) if $F1906 ( rootDir ) { \n\t\treturn ret ; \n\t\t} \n\tif $F4926 ( rootDir ) { \n\t\tthrow new IllegalArgumentException ( String . format ( $F53299 ( rootDir ) ) ) ; \n\t\t} \n\tfindClasses ( ret , rootDir , $F3884 ( rootDir ) ) ; \n\treturn ret ; \n\t} \n"}, {"code": "private static String validateXML ( String string ) throws IOException { \n\tfor ( $F1088 ( i , string ) ) { \n\t\t$F1280 ( ch , string , i ) if ( ! ( $F31339 ( ch ) || ch >= NUM00 ) ) throw new IOException ( $F11846 ( Integer , ch ) ) ; \n\t\t} \n\treturn string ; \n\t} \n"}, {"code": "public void writeToFile ( String filename ) { \n\tGridUtils . writeSpatialGridTable ( this , filename ) ; \n\t} \n"}, {"code": "$F172853 ( readValues , _BOOL ) "}, {"code": "protected static boolean isAccessCompatibleWithInstantRun ( int access ) { \n\treturn ( ( access & Opcodes . ACC_ABSTRACT ) == NUM00 ) && ( ( access & Opcodes . ACC_BRIDGE ) == NUM00 ) ; \n\t} \n"}, {"code": "protected ASN1Sequence ( ASN1Encodable [ ] array ) { \n\tfor ( $F15868 ( i , array ) ) { \n\t\t$F15869 ( seq , array , i ) } \n\t} \n"}, {"code": "public ThreadedListenerManager ( ExecutorService pool ) { \n\t$F201038 ( managerNumber , MANAGER_COUNT ) this . pool = pool ; \n\t} \n"}, {"code": "private void readObject ( ObjectInputStream in ) throws $F6427 { \n\t$F6428 ( in ) if $F11279 ( choiceLimits , choiceFormats ) $F6433 } \n"}, {"code": "private void computeOffsetSegment ( LineSegment seg , int side , double distance , LineSegment offset ) { \n\tint sideSign = side == Position . LEFT ? NUM00 : - NUM00 ; \n\tdouble dx = seg . p1 . x - seg . p0 . x ; \n\tdouble dy = seg . p1 . y - seg . p0 . y ; \n\t$F25559 ( len , Math , dx , dy ) double ux = sideSign * distance * dx / len ; \n\tdouble uy = sideSign * distance * dy / len ; \n\toffset . p0 . x = seg . p0 . x - uy ; \n\toffset . p0 . y = seg . p0 . y + ux ; \n\toffset . p1 . x = seg . p1 . x - uy ; \n\toffset . p1 . y = seg . p1 . y + ux ; \n\t} \n"}, {"code": "$F1431 public synchronized E elementAt ( int location ) { \n\tif ( location < elementCount ) { \n\t\treturn ( E ) elementData [ location ] ; \n\t\t} \n\tthrow arrayIndexOutOfBoundsException ( location , elementCount ) ; \n\t} \n"}, {"code": "private List < QoSRule > createQoSRules ( JsonObject qosSettings ) { \n\tList < QoSRule > $F204 ( rules ) ; \n\tif $F1710 ( qosSettings , JSON_FIELD_RULES ) { \n\t\tJsonObject jsonRules = qosSettings . getJsonObject ( JSON_FIELD_RULES ) ; \n\t\tfor ( String urlPatternRegExp : jsonRules . fieldNames ( ) ) { \n\t\t\t$F586 ( log , urlPatternRegExp ) JsonObject jsonRule = jsonRules . getJsonObject ( urlPatternRegExp ) ; \n\t\t\t$F55449 ( urlPattern , Pattern , urlPatternRegExp ) QoSRule rule = new QoSRule ( urlPattern ) ; \n\t\t\tboolean addRule = _BOOL ; \n\t\t\tif $F106053 ( jsonRule ) { \n\t\t\t\taddRule = _BOOL ; \n\t\t\t\trule . setReject ( jsonRule . getDouble ( NUM00 ) ) ; \n\t\t\t\t} \n\t\t\tif $F106053 ( jsonRule ) { \n\t\t\t\taddRule = _BOOL ; \n\t\t\t\trule . setWarn ( jsonRule . getDouble ( NUM00 ) ) ; \n\t\t\t\t} \n\t\t\tif ( addRule ) $F207 ( rules , rule ) else $F23016 ( log , urlPatternRegExp ) } \n\t\t} \n\treturn rules ; \n\t} \n"}, {"code": "private static final $F96 toOctets ( int identifier , String text ) { \n\t$F96 s = $F43004 ( text , StandardCharsets ) ; \n\t$F96 base = OctetUtils . toOctets ( AttributeType . VENDOR_SPECIFIC , identifier ) ; \n\tint maxTextSpace = Attribute . MAX_ATTRIBUTE_LENGTH - base . length ; \n\t$F96 octets ; \n\tif ( s . length > maxTextSpace ) { \n\t\toctets = new byte [ Attribute . MAX_ATTRIBUTE_LENGTH ] ; \n\t\tSystem . arraycopy ( s , NUM00 , octets , base . length , Attribute . MAX_ATTRIBUTE_LENGTH - base . length ) ; \n\t\t} \n\telse { \n\t\toctets = new byte $F12348 ( base , s ) ; \n\t\t$F11244 ( System , s , octets , base ) } \n\t$F7057 ( System , base , octets ) octets [ NUM00 ] = ( byte ) octets . length ; \n\treturn octets ; \n\t} \n"}, {"code": "private Double formatDoubleValue ( Double value , int places ) { \n\t$F12208 ( bd , value ) bd = bd . setScale ( places , RoundingMode . HALF_UP ) ; \n\t$F12165 ( bd ) } \n"}, {"code": "$F1 public void flush $F72 throws IOException $F29882 ( out ) "}, {"code": "protected int moveOrCopyFiles ( boolean move , String what , $F5237 destFiles , $F5237 sourceFiles ) { \n\tint opCode = ( move ) ? OP_MOVE : OP_COPY ; \n\tmModifiedSrcFiles = ( move ) ? new $F5 $F72 : null ; \n\t$F30598 ( mModifiedDestFiles ) openLogfile ( ) ; \n\tonPreProcess ( what , null , null , opCode ) ; \n\tint itemCount = NUM00 ; \n\tint pos = NUM00 ; \n\tint fileCount = destFiles . length ; \n\twhile ( pos < fileCount ) { \n\t\tFile sourceFile = sourceFiles [ pos ] ; \n\t\tFile destFile = destFiles [ pos ] ; \n\t\tFile destRenamed = renameDuplicate ( destFile ) ; \n\t\tif ( osFileMoveOrCopy ( move , destRenamed , sourceFile ) ) itemCount ++ ; \n\t\tlog ( ( ( move ) ? NUM00 : NUM00 ) , getFilenameForLog ( sourceFile ) , NUM00 , getFilenameForLog ( destRenamed ) ) ; \n\t\tFile sourceSidecar = getSidecar ( sourceFile ) ; \n\t\tif ( osFileExists ( sourceSidecar ) ) { \n\t\t\tFile destSidecar = getSidecar ( destRenamed ) ; \n\t\t\tif ( osFileMoveOrCopy ( move , destSidecar , sourceSidecar ) ) itemCount ++ ; \n\t\t\tlog ( ( ( move ) ? NUM00 : NUM00 ) , getFilenameForLog ( sourceSidecar ) , NUM00 , getFilenameForLog ( destSidecar ) ) ; \n\t\t\t} \n\t\tpos ++ ; \n\t\t} \n\t$F2199 ( modifyCount , mModifiedDestFiles ) $F806 modifiedSourceFiles = $F20074 ( mModifiedSrcFiles ) ? mModifiedSrcFiles . toArray ( new String [ modifyCount ] ) : null ; \n\tonPostProcess ( what , modifiedSourceFiles , ( modifyCount > NUM00 ) ? mModifiedDestFiles . toArray ( new String [ modifyCount ] ) : null , itemCount , sourceFiles . length , opCode ) ; \n\tcloseLogFile ( ) ; \n\treturn itemCount ; \n\t} \n"}, {"code": "static boolean isCOctetStringValid ( String value , int maxLength ) { \n\t$F397 ( value , _BOOL ) if $F85574 ( value , maxLength ) return _BOOL ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public Rectangle2D createProperBounds $F12359 ( x1 , y1 , x2 , y2 ) { \n\t$F59772 ( x , Math , x1 , x2 ) $F59772 ( y , Math , y1 , y2 ) $F14050 ( w , Math , x1 , x2 ) $F14050 ( h , Math , y1 , y2 ) return $F152596 ( x , y , w , h ) ; \n\t} \n"}, {"code": "public void addClearGraphDataButton $F72 { \n\t$F79691 ( clearButton ) clearButton . setAction ( RasterPlotActions . getClearGraphAction ( this ) ) ; \n\tbuttonPanel . add ( clearButton ) ; \n\t} \n"}, {"code": "public static float normalizedLevenshteinDistance ( String s , String t ) { \n\tfloat d = levenshteinDistance ( s , t ) ; \n\tint max = Math . max ( s . length ( ) , t . length ( ) ) ; \n\treturn d / ( float ) max ; \n\t} \n"}, {"code": "private void createFile ( int number , String extention ) { \n\tfor ( $F119 ( i , number ) ) { \n\t\ttry { \n\t\t\tBufferedWriter output = new BufferedWriter ( new FileWriter ( new File ( textInputFolder + NUM00 + String . valueOf ( i ) + extention ) ) ) ; \n\t\t\ttry { \n\t\t\t\t$F3410 ( output ) $F406601 ( output , String , i ) } \n\t\t\t$F3229 ( output ) } \n\t\t$F12241 ( e ) } \n\t} \n"}, {"code": "public boolean isAnimal $F72 $F298 ( typeString , SUFFIX_ANIMAL ) "}, {"code": "public static String unifyLineSeparators ( String s , String ls ) { \n\t$F1338 ( s ) if ( ls == null ) $F185872 ( ls , System ) if ( ! $F141960 ( ls ) ) $F825 $F115 ( length , s ) $F7542 ( buffer , length ) for ( $F119 ( i , length ) ) { \n\t\tif $F11983 ( s , i ) { \n\t\t\tif ( ( i + NUM00 ) < length && $F10825 ( s , i ) ) { \n\t\t\t\ti ++ ; \n\t\t\t\t} \n\t\t\tbuffer . append ( ls ) ; \n\t\t\t} \n\t\telse if $F11983 ( s , i ) $F288 ( buffer , ls ) else $F4138 ( buffer , s , i ) } \n\t$F92 ( buffer ) } \n"}, {"code": "private void adjustNameAndPosition ( Node node , int deltaX , int deltaY ) { \n\t$F20605 ( originalName , node ) String uniqueName = nextUniqueName ( originalName ) ; \n\tif $F2137 ( uniqueName , originalName ) { \n\t\tnode . setName ( uniqueName ) ; \n\t\tnode . setCenterX ( node . getCenterX ( ) + deltaX ) ; \n\t\tnode . setCenterY ( node . getCenterY ( ) + deltaY ) ; \n\t\t} \n\t} \n"}, {"code": "public void addNotification ( PingNotification notification ) $F207 ( notifications , notification ) "}, {"code": "public List < Datastore > createNfsDatastore ( ClusterComputeResource cluster , FileShareRestRep fileSystem , FileSystemExportParam export , URI datacenterId , String datastoreName ) { \n\taddNfsDatastoreTag ( fileSystem , export , datacenterId , datastoreName ) ; \n\tList < Datastore > datastores = Lists . newArrayList ( ) ; \n\tString fileServer = StringUtils . substringBefore ( export . getMountPoint ( ) , NUM00 ) ; \n\tString mountPath = StringUtils . substringAfter ( export . getMountPoint ( ) , NUM00 ) ; \n\tfor ( HostSystem host : cluster . getHosts ( ) ) { \n\t\tdatastores . add ( execute ( new CreateNfsDatastore ( host , fileServer , mountPath , datastoreName ) ) ) ; \n\t\taddAffectedResource ( fileSystem ) ; \n\t\tExecutionUtils . clearRollback ( ) ; \n\t\t} \n\treturn datastores ; \n\t} \n"}, {"code": "private void checkSize ( final int i ) { \n\tif ( i >= max_size ) { \n\t\tfinal int old_size = max_size ; \n\t\tmax_size += increment_size ; \n\t\tif ( max_size <= i ) { \n\t\t\tmax_size = i + increment_size + NUM00 ; \n\t\t\t} \n\t\tfinal $F806 temp = items ; \n\t\t$F58180 ( items , max_size ) $F135 ( System , temp , items , old_size ) increment_size = incrementSize ( increment_size ) ; \n\t\t} \n\t} \n"}, {"code": "public Album ( Context context , Uri mediaUri ) { \n\tsuper ( ) ; \n\tmedia . add ( NUM00 , new Media ( context , mediaUri ) ) ; \n\tsetCurrentPhotoIndex ( NUM00 ) ; \n\t} \n"}, {"code": "$F27283 ( name , start , end , msg , max , begin , slash , checkIdentifier ) "}, {"code": "protected void initializeTaskDone ( Set < TaskImageContainer > tasks , Optional $F24548 runnableWhenDone ) { \n\tSet < CaptureSession > $F9626 ( sessionSet ) ; \n\tMap < CaptureSession , Integer > $F8690 ( sessionTaskCount ) ; \n\tfor ( TaskImageContainer task : tasks ) { \n\t\tsessionSet . add ( task . mSession ) ; \n\t\tInteger currentCount = sessionTaskCount . get ( task . mSession ) ; \n\t\tif ( currentCount == null ) { \n\t\t\tsessionTaskCount . put ( task . mSession , NUM00 ) ; \n\t\t\t} \n\t\telse { \n\t\t\tsessionTaskCount . put ( task . mSession , currentCount + NUM00 ) ; \n\t\t\t} \n\t\t} \n\tsynchronized ( mShadowTaskMap ) { \n\t\tfor ( CaptureSession captureSession : sessionSet ) { \n\t\t\tBlockSignalProtocol protocol = new BlockSignalProtocol $F72 ; \n\t\t\tprotocol . setCount ( sessionTaskCount . get ( captureSession ) ) ; \n\t\t\tfinal ImageShadowTask shadowTask ; \n\t\t\tshadowTask = new ImageShadowTask ( protocol , captureSession , runnableWhenDone ) ; \n\t\t\tmShadowTaskMap . put ( captureSession , shadowTask ) ; \n\t\t\tmProcessingTaskConsumer . enqueueTask ( shadowTask ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void createCalibrationCharts ( String colorScheme , SortedMap $F61444 distanceTripMap , SortedMap $F61444 travelTimeTripMap , SortedMap $F61444 numberTripsPerMode , String path , String surveyName ) throws IOException { \n\tpath = $F129389 ( path ) + NUM00 + path . substring ( path . lastIndexOf ( NUM00 ) , path . length ( ) ) ; \n\tgetSimulationData ( distanceTripMap , travelTimeTripMap , numberTripsPerMode ) ; \n\tsimulationDistDataset . calculateSharesAndTotals ( ) ; \n\tsimulationTTDataset . calculateSharesAndTotals ( ) ; \n\tcommonColorScheme = colorScheme ; \n\tcreateModeShareStackedBarChart ( surveyName + NUM00 , path + fileTripDistanceByModeBenchmark , surveyDistDataset , NUM00 , NUM00 ) ; \n\tcreateModeShareStackedBarChart ( NUM00 , path + fileTripDistanceByModeSimulation , simulationDistDataset , NUM00 , NUM00 ) ; \n\tcreateModeShareComparisonChart ( NUM00 + surveyName + NUM00 , path + fileTripDistanceByModeComparison , simulationDistDataset , surveyDistDataset , NUM00 , NUM00 ) ; \n\tcreateCummulativeModeShareChart ( surveyName + NUM00 , path + fileCumulativeTripDistanceByModeBenchmark , surveyDistDataset , NUM00 , NUM00 ) ; \n\tcreateCummulativeModeShareChart ( NUM00 , path + fileCumulativeTripDistanceByModeSimulation , simulationDistDataset , NUM00 , NUM00 ) ; \n\tcreateCummulativeModeShareComparisonChart ( NUM00 + surveyName + NUM00 , path + fileCumulativeTripDistanceByModeComparison , simulationDistDataset , surveyDistDataset , NUM00 , NUM00 ) ; \n\tcreateModeShareStackedBarChart ( surveyName + NUM00 , path + fileTripTTByModeBenchmark , surveyTTDataset , NUM00 , NUM00 ) ; \n\tcreateModeShareStackedBarChart ( NUM00 , path + fileTripTTByModeSimulation , simulationTTDataset , NUM00 , NUM00 ) ; \n\tcreateModeShareComparisonChart ( NUM00 + surveyName + NUM00 , path + fileTripTTByModeComparison , simulationTTDataset , surveyTTDataset , NUM00 , NUM00 ) ; \n\tcreateCummulativeModeShareChart ( surveyName + NUM00 , path + fileCumulativeTripTTByModeBenchmark , surveyTTDataset , NUM00 , NUM00 ) ; \n\tcreateCummulativeModeShareChart ( NUM00 , path + fileCumModeshareTTSimulation , simulationTTDataset , NUM00 , NUM00 ) ; \n\tcreateCummulativeModeShareComparisonChart ( NUM00 + surveyName + NUM00 , path + fileCumModeshareTTComparison , simulationTTDataset , surveyTTDataset , NUM00 , NUM00 ) ; \n\tcreateModeShareHistoryChart ( NUM00 , $F31599 ( path ) + fileModeshareHistory , modeShareHistoryDataset , NUM00 , NUM00 , surveyTTDataset ) ; \n\t} \n"}, {"code": "public static String unquote ( String name ) { \n\treturn isQuoted ( name ) ? $F4019 ( name ) : name ; \n\t} \n"}, {"code": "public boolean hasLeader ( String playerName ) { \n\treturn ( leader != null ) && leader . equals ( playerName ) ; \n\t} \n"}, {"code": "synchronized void redo ( RTEditText editor ) { \n\t$F78304 ( redoStack , getRedoStack , editor ) if $F84882 ( redoStack ) { \n\t\t$F78304 ( undoStack , getUndoStack , editor ) $F232572 ( op , redoStack ) push ( op , undoStack ) ; \n\t\top . redo ( editor ) ; \n\t\twhile $F232570 ( redoStack , op ) { \n\t\t\t$F72676 ( op , redoStack ) push ( op , undoStack ) ; \n\t\t\top . redo ( editor ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private static $F4203 T reportJoin ( Object r ) { \n\tif ( r instanceof AltResult ) { \n\t\tThrowable x ; \n\t\tif ( ( x = ( ( AltResult ) r ) . ex ) == null ) $F1274 if ( x instanceof CancellationException ) throw ( CancellationException ) x ; \n\t\tif ( x instanceof CompletionException ) throw ( CompletionException ) x ; \n\t\tthrow new CompletionException ( x ) ; \n\t\t} \n\t$F1431 T t = ( T ) r ; \n\treturn t ; \n\t} \n"}, {"code": "public int write ( final Protein protein ) throws IOException { \n\tcheckEntryHierarchy ( ) ; \n\tif ( entryHierarchy != null ) { \n\t\tfor ( ProteinXref xref : protein . getCrossReferences ( ) ) { \n\t\t\tfinal SimpleProtein simpleProtein = SimpleProtein . valueOf ( protein , xref , entryHierarchy ) ; \n\t\t\tif ( simpleProtein != null ) { \n\t\t\t\tfinal SimpleHash model = buildModelMap ( simpleProtein , entryHierarchy ) ; \n\t\t\t\tWriter writer = null ; \n\t\t\t\ttry { \n\t\t\t\t\tfinal Template temp = freeMarkerConfig . getTemplate ( freeMarkerTemplate ) ; \n\t\t\t\t\tcheckTempDirectory ( tempDirectory ) ; \n\t\t\t\t\tif ( ! $F22072 ( tempDirectory , File ) ) { \n\t\t\t\t\t\ttempDirectory = tempDirectory + File . separator ; \n\t\t\t\t\t\t} \n\t\t\t\t\t$F4377 ( gen , UrlFriendlyIdGenerator ) String urlFriendlyId = gen . generate ( xref . getIdentifier ( ) ) ; \n\t\t\t\t\tfinal Path newResultFile = Paths . get ( tempDirectory + urlFriendlyId + NUM00 ) ; \n\t\t\t\t\tresultFiles . add ( newResultFile ) ; \n\t\t\t\t\twriter = Files . newBufferedWriter ( newResultFile , characterSet ) ; \n\t\t\t\t\ttemp . process ( model , writer ) ; \n\t\t\t\t\t$F1206 ( writer ) } \n\t\t\t\tcatch ( TemplateException e ) $F302 ( e ) $F12241 ( e ) $F14364 ( writer ) } \n\t\t\t} \n\t\t} \n\t$F1082 } \n"}, {"code": "public void testCasts $F72 { \n\tString sql_begin = NUM00 ; \n\t$F20724 sql_tests = new String [ ] [ ] { \n\t\t$F4582 , $F4582 , $F4582 , $F4582 , $F4582 , $F4582 , $F4582 } \n\t; \n\tString sql_end = NUM00 ; \n\t$F1350 ( sql , sql_begin ) $F1350 ( sqle , sql_begin ) for ( $F1139 ( i , sql_tests ) ) { \n\t\tif ( i > NUM00 ) { \n\t\t\t$F84 ( sql ) $F84 ( sqle ) } \n\t\tsql . append ( sql_tests [ i ] [ NUM00 ] ) ; \n\t\tsqle . append ( sql_tests [ i ] [ NUM00 ] ) ; \n\t\t} \n\tsql . append ( sql_end ) ; \n\tsqle . append ( sql_end ) ; \n\t$F806 r = convert . convert ( sql . toString ( ) ) ; \n\tassertEquals ( sqle . toString ( ) , r [ NUM00 ] ) ; \n\t} \n"}, {"code": "private boolean saveMacro $F72 { \n\tif ( firstTime ) { \n\t\ttry $F7595 ( Thread , firstTimeSleep ) $F3101 ( e ) } \n\tfirstTime = _BOOL ; \n\t$F2175 ( macroAccy , macroSize ) int index = NUM00 ; \n\tint accyNum = NUM00 ; \n\taccyNum = getAccyRow ( macroAccy , index , textAccy1 , accyTextField1 , cmdButton1 ) ; \n\t$F7879 ( accyNum , _BOOL ) if ( accyNum > NUM00 ) { \n\t\tindex += NUM00 ; \n\t\t} \n\taccyNum = getAccyRow ( macroAccy , index , textAccy2 , accyTextField2 , cmdButton2 ) ; \n\t$F7879 ( accyNum , _BOOL ) if ( accyNum > NUM00 ) { \n\t\tindex += NUM00 ; \n\t\t} \n\taccyNum = getAccyRow ( macroAccy , index , textAccy3 , accyTextField3 , cmdButton3 ) ; \n\t$F7879 ( accyNum , _BOOL ) if ( accyNum > NUM00 ) { \n\t\tindex += NUM00 ; \n\t\t} \n\taccyNum = getAccyRow ( macroAccy , index , textAccy4 , accyTextField4 , cmdButton4 ) ; \n\t$F7879 ( accyNum , _BOOL ) if ( accyNum > NUM00 ) { \n\t\tindex += NUM00 ; \n\t\t} \n\taccyNum = getAccyRow ( macroAccy , index , textAccy5 , accyTextField5 , cmdButton5 ) ; \n\t$F7879 ( accyNum , _BOOL ) if ( accyNum > NUM00 ) { \n\t\tindex += NUM00 ; \n\t\t} \n\taccyNum = getAccyRow ( macroAccy , index , textAccy6 , accyTextField6 , cmdButton6 ) ; \n\t$F7879 ( accyNum , _BOOL ) if ( accyNum > NUM00 ) { \n\t\tindex += NUM00 ; \n\t\t} \n\taccyNum = getAccyRow ( macroAccy , index , textAccy7 , accyTextField7 , cmdButton7 ) ; \n\t$F7879 ( accyNum , _BOOL ) if ( accyNum > NUM00 ) { \n\t\tindex += NUM00 ; \n\t\t} \n\tif ( ! isUsb ) { \n\t\taccyNum = getAccyRow ( macroAccy , index , textAccy8 , accyTextField8 , cmdButton8 ) ; \n\t\t$F7879 ( accyNum , _BOOL ) if ( accyNum > NUM00 ) { \n\t\t\tindex += NUM00 ; \n\t\t\t} \n\t\taccyNum = getAccyRow ( macroAccy , index , textAccy9 , accyTextField9 , cmdButton9 ) ; \n\t\t$F7879 ( accyNum , _BOOL ) if ( accyNum > NUM00 ) { \n\t\t\tindex += NUM00 ; \n\t\t\t} \n\t\t} \n\taccyNum = getAccyRow ( macroAccy , index , textAccy10 , accyTextField10 , cmdButton10 ) ; \n\tif ( accyNum < NUM00 ) { \n\t\tJOptionPane . showMessageDialog ( this , rb . getString ( NUM00 ) , rb . getString ( NUM00 ) , JOptionPane . ERROR_MESSAGE ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tprocessMemory ( _BOOL , _BOOL , macroNum , macroAccy ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void writeIntoSPTKLF0File ( String sptkFileName ) throws IOException { \n\tLEDataOutputStream lf0Data = new LEDataOutputStream ( new BufferedOutputStream $F4443 ( sptkFileName ) ) ; \n\tfor ( int i = NUM00 ; \n\ti < this . contour . length ; \n\ti ++ ) { \n\t\tdouble f0Val = contour [ i ] ; \n\t\tif ( contour [ i ] == NUM00 ) { \n\t\t\tlf0Data . writeFloat ( NEGATIVE_MAXIMUM ) ; \n\t\t\t} \n\t\telse { \n\t\t\tlf0Data . writeFloat ( ( float ) Math . log ( contour [ i ] ) ) ; \n\t\t\t} \n\t\t} \n\t$F1206 ( lf0Data ) $F59 ( lf0Data ) } \n"}, {"code": "public static Thread start ( long timeout ) { \n\treturn start ( Thread . currentThread ( ) , timeout ) ; \n\t} \n"}, {"code": "public static Element find ( Node parent , String name ) { \n\t$F9040 ( list , parent ) for ( $F85554 ( i , list ) ) { \n\t\t$F61359 ( n , list , i ) if ( n instanceof Element ) { \n\t\t\t$F6721 ( e , n ) if ( name . equals ( e . getAttribute ( NUM00 ) ) ) { \n\t\t\t\treturn e ; \n\t\t\t\t} \n\t\t\t} \n\t\tElement r = find ( n , name ) ; \n\t\t$F21525 ( r ) } \n\t$F1274 } \n"}, {"code": "final boolean transferAfterCancelledWait ( Node node ) { \n\tif ( compareAndSetWaitStatus ( node , Node . CONDITION , NUM00 ) ) $F9278 ( enq , node , _BOOL ) while ( ! isOnSyncQueue ( node ) ) $F5756 ( Thread ) return _BOOL ; \n\t} \n"}, {"code": "public static RE mkStar ( RE x ) { \n\tif $F22081 ( x , epsilon , empty ) { \n\t\treturn epsilon ; \n\t\t} \n\tRE res = new RE ( ReOp . STAR ) ; \n\tres . unaryArg = x ; \n\treturn res ; \n\t} \n"}, {"code": "public void remove ( final Object element ) { \n\t$F46709 ( oldSelection , selection ) $F12396 ( rv , selection , element ) $F308 ( rv , fireSelectionChanged , oldSelection , selection ) oldSelection = null ; \n\t} \n"}, {"code": "$F1 public void mouseClicked ( MouseEvent evt ) { \n\tdelegate . mouseMoved ( evt ) ; \n\t} \n"}, {"code": "public void printf ( Locale locale , String format , Object ... args ) $F103860 ( out , locale , format , args ) "}, {"code": "public void transform ( Source xmlSource , Result outputTarget ) throws TransformerException { \n\ttransform ( xmlSource , outputTarget , _BOOL ) ; \n\t} \n"}, {"code": "public void testSortsAttributesBeforeElements $F72 throws Exception $F234199 ( dom1 , XppFactory , dom2 , assertEquals , comparator , xpath ) "}, {"code": "public void addSuffix ( DalvInsn insn ) $F207 ( suffix , insn ) "}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F994 ( newVector ) $F9007 ( newVector ) $F1007 ( newVector ) } \n"}, {"code": "private void closeSelector $F72 { \n\tif $F23014 ( selector ) { \n\t\t$F51622 ( log ) for ( SelectionKey key : selector . keys ( ) ) U . close ( key . channel ( ) , log ) ; \n\t\t$F51622 ( log ) U . close ( selector , log ) ; \n\t\t} \n\t} \n"}, {"code": "public static Number sub ( Number a , Number b ) { \n\tif $F71585 ( isFloatingPoint , a , b ) { \n\t\treturn a . doubleValue ( ) - b . doubleValue ( ) ; \n\t\t} \n\telse { \n\t\treturn a . longValue ( ) - b . longValue ( ) ; \n\t\t} \n\t} \n"}, {"code": "public Builder requiredAttributes $F74419 ( nameOrOIDs ) $F28185 ( requiredAttributes , Arrays , nameOrOIDs ) "}, {"code": "private void showHistoryDialog $F72 { \n\tJBList commandsList = new JBList ( HistoryUtils . getCommandsFromHistory ( ) ) ; \n\tcommandsList . setCellRenderer ( new HistoryListCellRenderer $F72 ) ; \n\tcommandsList . setEmptyText ( NUM00 ) ; \n\tcommandsList . setSelectionMode ( ListSelectionModel . SINGLE_SELECTION ) ; \n\t$F64831 ( buttons ) int result = JOptionPane . showOptionDialog ( toolWindowContent , commandsList , NUM00 , JOptionPane . YES_NO_CANCEL_OPTION , JOptionPane . PLAIN_MESSAGE , null , buttons , buttons [ NUM00 ] ) ; \n\tif ( result == NUM00 ) { \n\t\tupdateUiFromCommand ( ( Command ) commandsList . getSelectedValue ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public $F24291 ( count ) "}, {"code": "protected static $F96 read ( InputStream is ) throws IOException { \n\tfinal boolean close = _BOOL ; \n\t$F1538 ( baos ) try { \n\t\tint i ; \n\t\t$F254305 ( i , is , baos ) } \n\tfinally { \n\t\ttry { \n\t\t\t$F177970 ( close , is ) $F59 ( baos ) } \n\t\tcatch ( Exception ex ) { \n\t\t\tlog . warn ( NUM00 + ex , ex ) ; \n\t\t\t} \n\t\t} \n\t$F11316 ( baos ) } \n"}, {"code": "public static $F4203 Streamable $F4203 fromPublisher ( final $F40798 publisher ) { \n\tObjects . requireNonNull ( publisher ) ; \n\tfinal SeqSubscriber $F4203 sub = SeqSubscriber . subscriber ( ) ; \n\tpublisher . subscribe ( sub ) ; \n\treturn fromStream ( sub . stream ( ) ) ; \n\t} \n"}, {"code": "public ProtobufConnection ( Listener $F17453 handler , MessageType prototype , int maxMessageSize , int timeoutMillis ) { \n\tthis . handler = handler ; \n\tthis . prototype = prototype ; \n\tthis . maxMessageSize = Math . min ( maxMessageSize , Integer . MAX_VALUE - NUM00 ) ; \n\tsetTimeoutEnabled ( _BOOL ) ; \n\tsetSocketTimeout ( timeoutMillis ) ; \n\t} \n"}, {"code": "$F98646 ( response , data , decodeOptions , bitmap , mMaxWidth , mMaxHeight , mDecodeConfig , BitmapFactory , _BOOL , actualWidth , actualHeight , desiredWidth , getResizedDimension , mScaleType , desiredHeight , findBestSampleSize , tempBitmap , Bitmap , Response , HttpHeaderParser ) "}, {"code": "public Notification find ( Integer notificationID ) { \n\tNotification notification = new Notification ( context , notificationID , null ) ; \n\tif ( notification . getAttributes ( ) == null ) notification . loadAttributesFromPreferences ( ) ; \n\treturn notification ; \n\t} \n"}, {"code": "public GreenGradient ( int maxCount ) { \n\tthis . maxCount = maxCount ; \n\tfactor = maxCount / Math . log ( maxCount ) ; \n\t} \n"}, {"code": "public static void writeHistogram ( TDoubleDoubleHashMap distr , String filename ) throws $F27136 { \n\t$F142425 ( aWriter , IOUtils , filename ) $F3410 ( aWriter ) $F1769 ( aWriter ) $F1986 keys = distr . keys ( ) ; \n\tArrays . sort ( keys ) ; \n\tfor ( double key : keys ) { \n\t\t$F406601 ( aWriter , String , key ) $F3410 ( aWriter ) aWriter . write ( String . valueOf ( distr . get ( key ) ) ) ; \n\t\t$F1769 ( aWriter ) } \n\t$F59 ( aWriter ) } \n"}, {"code": "public static $F4203 CompletionStage $F4203 dereference ( CompletionStage < ? extends CompletionStage $F4203 > stage ) { \n\treturn stage . thenCompose ( Identity . INSTANCE ) ; \n\t} \n"}, {"code": "public static Number plus ( Character left , Number right ) { \n\treturn NumberNumberPlus . plus ( Integer . valueOf ( left ) , right ) ; \n\t} \n"}, {"code": "public static String clipStringIfNecessary ( JComponent c , FontMetrics fm , String string , int availTextWidth ) { \n\tif ( $F158251 ( string ) ) $F2455 int textWidth = SwingUtilities2 . stringWidth ( c , fm , string ) ; \n\tif ( textWidth > availTextWidth ) { \n\t\treturn SwingUtilities2 . clipString ( c , fm , string , availTextWidth ) ; \n\t\t} \n\treturn string ; \n\t} \n"}, {"code": "public boolean removeElement ( Object obj ) { \n\tsynchronized ( actions ) { \n\t\tif ( allowToChange ) { \n\t\t\t$F12396 ( result , actions , obj ) if $F2979 ( actions ) { \n\t\t\t\t$F60488 ( headTask , cancel ) } \n\t\t\treturn result ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static boolean isCglibProxy ( Object object ) { \n\treturn ClassUtils . isCglibProxyClass ( object . getClass ( ) ) ; \n\t} \n"}, {"code": "public void resetReferences $F72 { \n\t$F10834 ( _refs ) } \n"}, {"code": "public void addSlide ( $F4170 Fragment fragment ) { \n\tfragments . add ( fragment ) ; \n\taddBackgroundColor ( Color . TRANSPARENT ) ; \n\t$F4176 ( pagerAdapter ) } \n"}, {"code": "public static $F806 wrapString ( $F2304 String str , int maxWidth , $F5466 $F806 output ) { \n\tif ( output == null ) { \n\t\toutput = new String [ ( int ) ( ( str . length ( ) / maxWidth ) * NUM00 + NUM00 ) ] ; \n\t\t} \n\tint lineStart = NUM00 ; \n\tint arrayIndex = NUM00 ; \n\tint i ; \n\tfor ( $F23302 ( i , str ) ) { \n\t\t$F1280 ( c , str , i ) if ( c == NUM00 ) { \n\t\t\toutput = addString ( output , str . substring ( lineStart , i ) , arrayIndex ++ ) ; \n\t\t\tlineStart = i + NUM00 ; \n\t\t\t} \n\t\telse if ( i - lineStart == maxWidth ) { \n\t\t\toutput = addString ( output , str . substring ( lineStart , i ) , arrayIndex ++ ) ; \n\t\t\tlineStart = i ; \n\t\t\t} \n\t\t} \n\tif ( lineStart != i || i == NUM00 ) { \n\t\toutput = addString ( output , str . substring ( lineStart ) , arrayIndex ++ , output . length + NUM00 ) ; \n\t\t} \n\tif ( arrayIndex < output . length ) $F10812 ( output , arrayIndex ) return output ; \n\t} \n"}, {"code": "$F15683 ( listener , changingListeners ) "}, {"code": "private static FloatBuffer createVertexArray $F74143 ( coords ) { \n\t$F29774 ( bb , ByteBuffer , coords ) $F16706 ( bb , ByteOrder ) $F16708 ( fb , bb ) fb . put ( coords ) ; \n\t$F16709 ( fb ) return fb ; \n\t} \n"}, {"code": "protected void publish $F72 throws MqttException , IOException { \n\tsampleClientPub = new SampleAsyncWait ( url , clientIdPub , cleanSession , quietMode , userName , password ) ; \n\tif ( sampleClientPub != null ) { \n\t\tString topic = NUM00 ; \n\t\tint qos = NUM00 ; \n\t\tString message = NUM00 ; \n\t\ttry { \n\t\t\tsampleClientPub . publish ( topic , qos , message . getBytes ( ) ) ; \n\t\t\t} \n\t\t$F86388 ( e ) } \n\t} \n"}, {"code": "public static void cleanDirectory ( File directory ) throws IOException $F189472 ( directory , message , files , exception , file , forceDelete , ioe ) "}, {"code": "private $F131 invWmSubBand ( Image img , $F1986 wm , int n , double threshold ) { \n\tint m = NUM00 ; \n\tdouble z = NUM00 ; \n\tdouble v = NUM00 ; \n\tfor ( int i = NUM00 ; \n\ti < img . getWidth ( ) * img . getHeight ( ) ; \n\ti ++ ) { \n\t\tif ( img . getData ( ) [ i ] > threshold ) { \n\t\t\tz += ( img . getData ( ) [ i ] * wm [ i % n ] ) ; \n\t\t\tv += Math . abs ( img . getData ( ) [ i ] ) ; \n\t\t\tm ++ ; \n\t\t\t} \n\t\t} \n\treturn $F42238 ( m , z , v ) ; \n\t} \n"}, {"code": "public static void moveToDirectory $F42859 ( src , destDir , createDestDir ) throws IOException { \n\t$F896 ( src ) $F896 ( destDir ) $F130782 ( src ) if $F3444 ( src ) { \n\t\tmoveDirectoryToDirectory ( src , destDir , createDestDir ) ; \n\t\t} \n\telse { \n\t\tmoveFileToDirectory ( src , destDir , createDestDir ) ; \n\t\t} \n\t} \n"}, {"code": "private static TungstenProperties loadSecurityPropertiesFromFile ( String propertiesFileLocation ) throws ConfigurationException { \n\tTungstenProperties securityProps = null ; \n\tFileInputStream securityConfigurationFileInputStream = null ; \n\tif ( propertiesFileLocation == null && ClusterConfiguration . getClusterHome ( ) == null ) { \n\t\tthrow $F82717 ; \n\t\t} \n\tFile securityPropertiesFile ; \n\tif ( propertiesFileLocation == null ) { \n\t\tFile clusterConfDirectory = ClusterConfiguration . getDir ( ClusterConfiguration . getGlobalConfigDirName ( ClusterConfiguration . getClusterHome ( ) ) ) ; \n\t\tsecurityPropertiesFile = new File ( clusterConfDirectory . getPath ( ) , SecurityConf . SECURITY_PROPERTIES_FILE_NAME ) ; \n\t\t} \n\telse $F94463 ( securityPropertiesFile , propertiesFileLocation ) try { \n\t\tsecurityProps = new TungstenProperties $F72 ; \n\t\t$F5335 ( securityConfigurationFileInputStream , securityPropertiesFile ) securityProps . load ( securityConfigurationFileInputStream , _BOOL ) ; \n\t\tcloseSecurityConfigurationFileInputStream ( securityConfigurationFileInputStream ) ; \n\t\t} \n\tcatch ( FileNotFoundException e ) { \n\t\tString msg = MessageFormat . format ( $F53299 ( securityPropertiesFile ) ) ; \n\t\tlogger . debug ( msg , e ) ; \n\t\tthrow new ConfigurationException ( msg ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tString msg = MessageFormat . format ( NUM00 , securityPropertiesFile . getPath ( ) , e . getMessage ( ) ) ; \n\t\tlogger . debug ( msg , e ) ; \n\t\tthrow new ConfigurationException ( msg ) ; \n\t\t} \n\t$F18632 ( closeSecurityConfigurationFileInputStream , securityConfigurationFileInputStream ) if $F585 ( logger ) { \n\t\tlogger . debug ( MessageFormat . format ( $F53299 ( securityPropertiesFile ) ) ) ; \n\t\t} \n\tsecurityProps . put ( SecurityConf . SECURITY_PROPERTIES_PARENT_FILE_LOCATION , securityPropertiesFile . getAbsolutePath ( ) ) ; \n\treturn securityProps ; \n\t} \n"}, {"code": "public static void close ( InputStream in ) { \n\ttry $F6399 ( in ) catch ( IOException ioE ) $F845 } \n"}, {"code": "private synchronized void clearScanFiles $F72 { \n\tif $F20074 ( allFiles ) { \n\t\t$F10531 ( it , allFiles ) File file = null ; \n\t\twhile $F2921 ( it ) { \n\t\t\tfile = ( File ) it . next ( ) ; \n\t\t\t$F1900 ( file ) } \n\t\t$F725 ( allFiles ) } \n\t} \n"}, {"code": "private static boolean intersectsLatEdge ( S2Point a , S2Point b , double lat , S1Interval lng ) { \n\tS2Point z = S2Point . normalize ( S2 . robustCrossProd ( a , b ) ) ; \n\tif ( z . z < NUM00 ) { \n\t\tz = S2Point . neg ( z ) ; \n\t\t} \n\tS2Point y = S2Point . normalize ( S2 . robustCrossProd ( z , new S2Point $F25461 ) ) ; \n\t$F23238 ( x , S2Point , y , z ) $F33859 ( sinLat , Math , lat ) if ( Math . abs ( sinLat ) >= x . z ) { \n\t\treturn _BOOL ; \n\t\t} \n\tdouble cosTheta = sinLat / x . z ; \n\tdouble sinTheta = $F33863 ( Math , cosTheta ) ; \n\t$F3567 ( theta , Math , sinTheta , cosTheta ) S1Interval abTheta = S1Interval . fromPointPair ( Math . atan2 ( a . dotProd ( y ) , a . dotProd ( x ) ) , Math . atan2 ( b . dotProd ( y ) , b . dotProd ( x ) ) ) ; \n\tif $F105 ( abTheta , theta ) { \n\t\tS2Point isect = S2Point . add ( S2Point . mul ( x , cosTheta ) , S2Point . mul ( y , sinTheta ) ) ; \n\t\tif ( lng . contains ( $F33880 ( Math , isect ) ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\tif ( abTheta . contains ( - theta ) ) { \n\t\tS2Point intersection = S2Point . sub ( S2Point . mul ( x , cosTheta ) , S2Point . mul ( y , sinTheta ) ) ; \n\t\tif ( lng . contains ( $F33880 ( Math , intersection ) ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void execAndCheckOutput ( ProcessBuilder builder , String expectedOut , String expectedErr ) throws Exception { \n\t$F111135 ( process , builder ) $F171451 ( executorService , Executors ) try { \n\t\t$F171452 errFuture = executorService . submit ( $F171453 ( streamToStringCallable , process ) ) ; \n\t\t$F171452 outFuture = executorService . submit ( $F171458 ( streamToStringCallable , process ) ) ; \n\t\tassertEquals ( expectedOut , $F171463 ( outFuture , TimeUnit ) ) ; \n\t\tassertEquals ( expectedErr , $F171463 ( errFuture , TimeUnit ) ) ; \n\t\t} \n\tfinally { \n\t\t$F733 ( executorService ) $F84402 ( process ) } \n\t} \n"}, {"code": "private void startFileBasedMerge $F72 throws CarbonSortKeyAndGroupByException { \n\ttry { \n\t\t$F733 ( executorService ) executorService . awaitTermination ( NUM00 , TimeUnit . DAYS ) ; \n\t\t$F733 ( dataSorterAndWriterExecutorService ) dataSorterAndWriterExecutorService . awaitTermination ( NUM00 , TimeUnit . DAYS ) ; \n\t\t} \n\tcatch ( InterruptedException e ) { \n\t\tthrow new CarbonSortKeyAndGroupByException ( NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "public void insertUpdate ( DocumentEvent e ) { \n\t$F42258 ( dirty , setDirty , _BOOL ) } \n"}, {"code": "public DateTimeParseException ( String message , CharSequence parsedData , int errorIndex ) { \n\tsuper ( message ) ; \n\tthis . parsedString = parsedData . toString ( ) ; \n\tthis . errorIndex = errorIndex ; \n\t} \n"}, {"code": "private boolean areParallelSiblings ( Component source , Component target , int axis ) { \n\tComponentInfo sourceInfo = getComponentInfo ( source ) ; \n\tComponentInfo targetInfo = getComponentInfo ( target ) ; \n\tSpring sourceSpring ; \n\tSpring targetSpring ; \n\tif ( axis == HORIZONTAL ) { \n\t\tsourceSpring = sourceInfo . horizontalSpring ; \n\t\ttargetSpring = targetInfo . horizontalSpring ; \n\t\t} \n\telse { \n\t\tsourceSpring = sourceInfo . verticalSpring ; \n\t\ttargetSpring = targetInfo . verticalSpring ; \n\t\t} \n\tArrayList sourcePath = tmpParallelSet ; \n\t$F725 ( sourcePath ) Spring spring = sourceSpring . getParent ( ) ; \n\twhile ( spring != null ) { \n\t\tsourcePath . add ( spring ) ; \n\t\t$F10337 ( spring ) } \n\tspring = targetSpring . getParent ( ) ; \n\twhile ( spring != null ) { \n\t\tif $F105 ( sourcePath , spring ) { \n\t\t\t$F725 ( sourcePath ) while ( spring != null ) { \n\t\t\t\tif ( spring instanceof ParallelGroup ) { \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t$F10337 ( spring ) } \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t$F10337 ( spring ) } \n\t$F725 ( sourcePath ) return _BOOL ; \n\t} \n"}, {"code": "protected Object readObjectImpl ( Class cl ) throws IOException { \n\ttry { \n\t\t$F71976 ( obj , cl ) $F92209 ( _refs ) _refs . add ( obj ) ; \n\t\tHashMap fieldMap = getFieldMap ( cl ) ; \n\t\tint code = read ( ) ; \n\t\tfor ( ; \n\t\tcode >= NUM00 && code != NUM00 ; \n\t\tcode = read ( ) ) { \n\t\t\tunread ( ) ; \n\t\t\tObject key = readObject ( ) ; \n\t\t\tField field = ( Field ) fieldMap . get ( key ) ; \n\t\t\tif ( field != null ) { \n\t\t\t\tObject value = $F49341 ( readObject , field ) ; \n\t\t\t\tfield . set ( obj , value ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tObject value = readObject ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F191237 ( code , expect ) try { \n\t\t\tMethod method = cl . getMethod ( NUM00 , $F33934 ) ; \n\t\t\treturn method . invoke ( obj , $F3297 ) ; \n\t\t\t} \n\t\t$F3957 return obj ; \n\t\t} \n\t$F8012 ( e ) catch ( Exception e ) { \n\t\tthrow new IOExceptionWrapper ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public void testCase18 $F72 { \n\t$F103294 $F45033 $F89724 int aSign = NUM00 ; \n\tint bSign = NUM00 ; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F10683 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F10686 ( assertEquals , result ) } \n"}, {"code": "protected static $F7329 lsrImmediate $F7334 ( offset , environment , instructions , registerNodeValue , immediateNodeValue ) { \n\t$F7336 ( shifterOperand , environment ) $F7336 ( shifterCarryOut , environment ) long baseOffset = offset ; \n\tif $F3057 ( immediateNodeValue ) { \n\t\t$F7336 ( tmpVar1 , environment ) instructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dWordSize , registerNodeValue , wordSize , minusThirtyOneSet , wordSize , tmpVar1 ) ) ; \n\t\t$F7364 ( instructions , ReilHelpers , baseOffset , wordSize , tmpVar1 , byteSize , oneSet , shifterCarryOut ) return new $F7329 ( String . valueOf ( NUM00 ) , shifterCarryOut ) ; \n\t\t} \n\telse { \n\t\t$F7336 ( tmpVar1 , environment ) $F7336 ( tmpVar2 , environment ) instructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dWordSize , registerNodeValue , wordSize , NUM00 + immediateNodeValue , qWordSize , tmpVar1 ) ) ; \n\t\t$F7364 ( instructions , ReilHelpers , baseOffset , qWordSize , tmpVar1 , dWordSize , bitMaskAllBitsSet , shifterOperand ) instructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dWordSize , registerNodeValue , wordSize , String . valueOf ( - ( Integer . decode ( immediateNodeValue ) - NUM00 ) ) , dWordSize , tmpVar2 ) ) ; \n\t\t$F7364 ( instructions , ReilHelpers , baseOffset , dWordSize , tmpVar2 , byteSize , oneSet , shifterCarryOut ) $F7348 ( shifterOperand , shifterCarryOut ) } \n\t} \n"}, {"code": "public static PlainText plain ( int text ) $F21034 ( plain , Integer , text ) "}, {"code": "$F41720 ( value , absMin , absMax , absValue , Math ) "}, {"code": "public static boolean isToday ( Calendar _calendar ) { \n\t$F4377 ( now , Calendar ) if ( $F21625 ( now , Calendar ) == $F21625 ( _calendar , Calendar ) ) { \n\t\tif ( $F21623 ( now , Calendar ) == $F21623 ( _calendar , Calendar ) ) { \n\t\t\tif ( $F183169 ( now , Calendar , _calendar ) ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void start $F72 { \n\t$F3876 ( managedPairs , createPort ) fixNames ( ) ; \n\tsinglePorts . addObserver ( observer , _BOOL ) ; \n\tfor ( Ports $F6574 ports : multiPortsList ) { \n\t\tports . addObserver ( observer , _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "protected void sprint ( double doubleField ) $F45719 ( sprint , String , doubleField ) "}, {"code": "public static Bitmap convertYuvImageToBitmap ( $F4170 final YuvImage yuvImage ) { \n\t$F1538 ( out ) yuvImage . compressToJpeg ( new Rect $F28468 ( yuvImage ) , NUM00 , out ) ; \n\t$F1208 ( imageBytes , out ) try $F881 ( out ) $F17556 ( Log , LOG_TAG , e ) return BitmapFactory . decodeByteArray ( imageBytes , NUM00 , imageBytes . length ) ; \n\t} \n"}, {"code": "$F118841 ( value , Double ) "}, {"code": "public boolean hasFeature ( String feature , String version ) { \n\tif $F3057 ( feature ) { \n\t\treturn $F3580 ( version ) || version . equals ( NUM00 ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private StoragePort assignPortBasedOnUsage ( $F42521 matchingTargetPorts , Map < StoragePort , Integer > portUsage ) { \n\tStoragePort foundPort = null ; \n\tfor ( StoragePort matchedPort : matchingTargetPorts ) { \n\t\tif $F4257 ( portUsage , matchedPort ) $F248856 ( portUsage , matchedPort ) if ( foundPort == null ) { \n\t\t\tfoundPort = matchedPort ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( portUsage . get ( matchedPort ) < portUsage . get ( foundPort ) ) { \n\t\t\t\tfoundPort = matchedPort ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( foundPort != null ) { \n\t\tportUsage . put ( foundPort , portUsage . get ( foundPort ) + NUM00 ) ; \n\t\t} \n\treturn foundPort ; \n\t} \n"}, {"code": "public ExternalEvent nextEvent $F72 { \n\tif $F10471 ( queue ) { \n\t\treturn new ExternalEvent ( Double . MAX_VALUE ) ; \n\t\t} \n\tExternalEvent ee = queue . get ( nextEventIndex ) ; \n\tnextEventIndex ++ ; \n\tif $F6389 ( nextEventIndex , queue ) { \n\t\tqueue = readEvents ( nrofPreload ) ; \n\t\tnextEventIndex = NUM00 ; \n\t\t} \n\treturn ee ; \n\t} \n"}, {"code": "public void appendToBuffer ( StringBuilder buf ) { \n\tIterator $F42619 iter = points . iterator ( ) ; \n\twhile $F2921 ( iter ) { \n\t\t$F1986 data = iter . next ( ) ; \n\t\tfor ( $F1139 ( i , data ) ) $F70285 ( i , buf , data ) if $F2921 ( iter ) $F86 ( buf ) } \n\t} \n"}, {"code": "public void updateComboBox ( JComboBox < Track > box ) { \n\t$F213890 ( box ) box . addItem ( null ) ; \n\tList < Track > tracks = getTrackByNameList ( null ) ; \n\tfor ( Track track : tracks ) $F86251 ( box , track ) } \n"}, {"code": "public RefactoringSessionTransformer ( final boolean projects ) { \n\tfProjects = projects ; \n\t} \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F994 ( newVector ) $F9007 ( newVector ) $F9007 ( newVector ) $F1007 ( newVector ) } \n"}, {"code": "public CompareResult open $F72 { \n\tfinal ContentComparator [ ] comparatorArray = comparators . toArray ( new ContentComparator $F2313 ( comparators ) ) ; \n\tfinal CustomCompareEditorInput input = new CustomCompareEditorInput ( modified , original , ancestor , comparatorArray , compareConfiguration , externalCompareHandler ) ; \n\tif ( compareConfiguration . isLeftEditable ( ) || compareConfiguration . isRightEditable ( ) ) { \n\t\tcompareConfiguration . setProperty ( NUM00 , Boolean . FALSE ) ; \n\t\tinput . setAlwaysDirty ( alwaysDirty ) ; \n\t\t} \n\tinput . addSaveListener ( new ProxyCompareSaveListener $F72 ) ; \n\tlog . info ( MessageFormat . format ( NUM00 , getLabelNOLOC ( modified ) , getLabelNOLOC ( original ) ) ) ; \n\tcompareUIType . openCompareUI ( input ) ; \n\tfinal boolean contentsIdentical = ( input . getCompareResult ( ) == null ) ; \n\tfinal boolean contentsSaved = ( input . getSavedContents ( ) . length > NUM00 ) ; \n\treturn new CompareResult ( contentsIdentical , input . wasOKPressed ( ) , contentsSaved ) ; \n\t} \n"}, {"code": "protected void engineSetMode ( String mode ) { \n\tif $F14072 ( mode ) $F18931 ( mode ) } \n"}, {"code": "protected void addResource ( String resource ) { \n\tif $F20899 ( StringUtils , resource ) $F207 ( resources , resource ) } \n"}, {"code": "public static boolean isNumeric ( String maybeNumeric ) { \n\treturn maybeNumeric != null && maybeNumeric . matches ( NUM00 ) ; \n\t} \n"}, {"code": "public void openKeyStore ( File keyStoreFile , String defaultPassword ) { \n\ttry { \n\t\tif $F48790 ( keyStoreFile ) { \n\t\t\tJOptionPane . showMessageDialog ( frame , $F36702 ( MessageFormat , res , keyStoreFile ) , res . getString ( NUM00 ) , JOptionPane . WARNING_MESSAGE ) ; \n\t\t\t$F665 } \n\t\tif ( isKeyStoreFileOpen ( keyStoreFile ) ) { \n\t\t\tJOptionPane . showMessageDialog ( frame , $F36702 ( MessageFormat , res , keyStoreFile ) , res . getString ( NUM00 ) , JOptionPane . WARNING_MESSAGE ) ; \n\t\t\t$F665 } \n\t\tPassword password = ( defaultPassword != null ) ? new Password $F81517 ( defaultPassword ) : null ; \n\t\tKeyStore openedKeyStore = null ; \n\t\tboolean firstTry = _BOOL ; \n\t\twhile ( _BOOL ) { \n\t\t\t$F5178 ( password , showPasswordDialog , keyStoreFile ) $F2329 ( password ) try { \n\t\t\t\topenedKeyStore = KeyStoreUtil . load ( keyStoreFile , password ) ; \n\t\t\t\t$F597 } \n\t\t\tcatch ( KeyStoreLoadException klex ) { \n\t\t\t\tif ( defaultPassword == null || ! firstTry ) { \n\t\t\t\t\tint tryAgainChoice = showErrorMessage ( keyStoreFile , klex ) ; \n\t\t\t\t\tif ( tryAgainChoice == JOptionPane . NO_OPTION ) $F932 } \n\t\t\t\t} \n\t\t\tpassword . nullPassword ( ) ; \n\t\t\tpassword = null ; \n\t\t\tfirstTry = _BOOL ; \n\t\t\t} \n\t\tif ( openedKeyStore == null ) { \n\t\t\tJOptionPane . showMessageDialog ( frame , MessageFormat . format ( res . getString ( NUM00 ) , keyStoreFile . getName ( ) ) , res . getString ( NUM00 ) , JOptionPane . WARNING_MESSAGE ) ; \n\t\t\t$F665 } \n\t\tkseFrame . addKeyStore ( openedKeyStore , keyStoreFile , password ) ; \n\t\t} \n\tcatch ( FileNotFoundException ex ) { \n\t\tJOptionPane . showMessageDialog ( frame , $F36702 ( MessageFormat , res , keyStoreFile ) , res . getString ( NUM00 ) , JOptionPane . WARNING_MESSAGE ) ; \n\t\t} \n\tcatch ( Exception ex ) { \n\t\tDError . displayError ( frame , ex ) ; \n\t\t} \n\t} \n"}, {"code": "public static String encode ( String string ) { \n\t$F96 bytes ; \n\ttry $F12169 ( bytes , string , PREFERRED_ENCODING ) catch ( UnsupportedEncodingException e ) $F12171 ( bytes , string ) return encodeBytes ( bytes ) ; \n\t} \n"}, {"code": "public final long addAndGet ( long delta ) { \n\tfor ( $F589 ) { \n\t\tlong current = get ( ) ; \n\t\tlong next = current + delta ; \n\t\tif ( compareAndSet ( current , next ) ) return next ; \n\t\t} \n\t} \n"}, {"code": "default long now ( TimeUnit unit ) { \n\treturn unit . convert ( System . currentTimeMillis ( ) , TimeUnit . MILLISECONDS ) ; \n\t} \n"}, {"code": "private final void append ( List < ? super NameValuePair > l , final String k , final String v ) { \n\tif ( v != null ) l . add ( new NameValuePair ( k , v ) ) ; \n\t} \n"}, {"code": "protected Properties createProperties ( URL location ) throws IOException { \n\tInputStream is = null ; \n\tif ( location != null ) { \n\t\t$F21223 ( is , location ) } \n\t$F2697 ( tmpProperties ) if ( is != null ) $F46567 ( tmpProperties , is ) return tmpProperties ; \n\t} \n"}, {"code": "protected double calcPlanWeight ( final T plan , final double maxScore ) { \n\tif ( plan . getScore ( ) == null ) $F6623 ( Double ) double weight = Math . exp ( this . beta * ( plan . getScore ( ) - maxScore ) ) ; \n\t$F46169 ( weight , MIN_WEIGHT ) return weight ; \n\t} \n"}, {"code": "$F227258 ( filename , extensions , _BOOL , indexOfExtension , fileExt , getExtension , extension ) "}, {"code": "void findValue $F72 { \n\tif $F585 ( log ) { \n\t\tlog . debug ( NUM00 + label ( ) ) ; \n\t\t} \n\tfor ( int i = NUM00 ; \n\ti < _value . getItemCount ( ) ; \n\ti ++ ) { \n\t\tString choice = _value . getItemAt ( i ) ; \n\t\tSettingList sl = choiceHash . get ( choice ) ; \n\t\tif ( sl . match ( ) ) { \n\t\t\t$F15998 ( log , i ) _value . setSelectedItem ( choice ) ; \n\t\t\t$F665 } \n\t\t} \n\t$F35060 ( log ) } \n"}, {"code": "public $F14638 insert ( int index , $F9738 ( string ) ) { \n\t$F23170 ( string ) $F1749 ( min , string ) if ( min != NUM00 ) { \n\t\tmove ( min , index ) ; \n\t\t$F234786 ( string , min , value , index ) count += min ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "public void mkdir ( String key ) throws IOException { \n\t$F2936 ( key ) if ( key . endsWith ( NUM00 ) && $F1263 ( key ) ) { \n\t\tthrow new InvalidParameterException $F580 ; \n\t\t} \n\t$F83044 ( split , key ) $F83 ( builder ) for ( String s : split ) { \n\t\tbuilder . append ( s ) ; \n\t\tif ( $F1030 ( s ) && ! $F17717 ( exists , builder ) ) { \n\t\t\tzkState . set ( builder . toString ( ) , null ) ; \n\t\t\t} \n\t\t$F84 ( builder ) } \n\t} \n"}, {"code": "public double calculateLog ( double value ) { \n\treturn Math . log ( value ) / this . baseLog ; \n\t} \n"}, {"code": "public static Vector3 pow ( Vector3 o , double power ) { \n\treturn new Vector3 ( Math . pow ( o . x , power ) , Math . pow ( o . y , power ) , Math . pow ( o . z , power ) ) ; \n\t} \n"}, {"code": "public DatagramPacket responseReceive $F72 throws IOException { \n\t$F12496 ( buf ) $F135794 ( dp , buf ) datagramSocket . receive ( dp ) ; \n\treturn dp ; \n\t} \n"}, {"code": "$F234188 ( webClient ) "}, {"code": "$F1 public $F117572 ( flush , _BOOL ) "}, {"code": "public static $F5415 temperatureToRGB ( int degreesK ) { \n\tint k = MathUtils . constrain ( degreesK , NUM00 , NUM00 ) ; \n\tfloat a = ( k % NUM00 ) / NUM00 ; \n\tint i = ( ( k - NUM00 ) / NUM00 ) * NUM00 ; \n\treturn new float [ ] { \n\t\tinterp ( i , a ) , interp ( i + NUM00 , a ) , interp ( i + NUM00 , a ) } \n\t; \n\t} \n"}, {"code": "public AdvancedStateMap . Builder withName ( Function < PropertiesMap , String > mapper ) { \n\tthis . nameMapper = mapper ; \n\treturn this ; \n\t} \n"}, {"code": "public synchronized void message ( LocoNetMessage m ) { \n\tint opCode = m . getOpCode ( ) ; \n\tswitch ( opCode ) { \n\t\tcase LnConstants . OPC_PEER_XFER : int src = m . getElement ( NUM00 ) ; \n\t\tint dst = m . getElement ( NUM00 ) + m . getElement ( NUM00 ) * NUM00 ; \n\t\t$F2027 packet = m . getPeerXfrData ( ) ; \n\t\tif ( src == lowPart ( LocoBufferAddress ) ) { \n\t\t\tString lbv = ( ( packet [ NUM00 ] != NUM00 ) ? dotme ( packet [ NUM00 ] ) : NUM00 ) ; \n\t\t\tsetLBVersion ( lbv ) ; \n\t\t\t} \n\t\tif ( dst == LocoBufferAddress && src == lowPart ( unitAddress ) && ( packet [ NUM00 ] == unitSubAddress ) ) { \n\t\t\tstopTimer ( ) ; \n\t\t\treplyReceived ( ) ; \n\t\t\tString fw = ( ( packet [ NUM00 ] != NUM00 ) ? dotme ( packet [ NUM00 ] ) : NUM00 ) ; \n\t\t\tsetLIOVersion ( fw ) ; \n\t\t\tif ( packet [ NUM00 ] == LocoIO . LOCOIO_SV_READ || reading ) { \n\t\t\t\tif $F56314 ( lastOpCv ) { \n\t\t\t\t\tint data = ( packet [ NUM00 ] != NUM00 ) ? packet [ NUM00 ] : packet [ NUM00 ] ; \n\t\t\t\t\tint channel = ( lastOpCv / NUM00 ) - NUM00 ; \n\t\t\t\t\tif ( channel < NUM00 ) { \n\t\t\t\t\t\t$F10910 ( log ) channel = NUM00 ; \n\t\t\t\t\t\t} \n\t\t\t\t\tint type = lastOpCv - ( channel * NUM00 + NUM00 ) ; \n\t\t\t\t\tlog . debug ( NUM00 + channel + NUM00 + type + NUM00 + ( type == NUM00 ? NUM00 : type == NUM00 ? NUM00 : type == NUM00 ? NUM00 : NUM00 ) + NUM00 + Integer . toHexString ( data ) ) ; \n\t\t\t\t\tif ( type == NUM00 ) { \n\t\t\t\t\t\tsetV2 ( channel , data ) ; \n\t\t\t\t\t\tsetMode ( channel , NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( type == NUM00 ) { \n\t\t\t\t\t\tsetV1 ( channel , data ) ; \n\t\t\t\t\t\tsetMode ( channel , NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( type == NUM00 ) { \n\t\t\t\t\t\tsetSV ( channel , data ) ; \n\t\t\t\t\t\tLocoIOMode lim = validmodes . getLocoIOModeFor ( getSV ( channel ) , getV1 ( channel ) , getV2 ( channel ) ) ; \n\t\t\t\t\t\tif ( lim == null ) { \n\t\t\t\t\t\t\tsetMode ( channel , NUM00 ) ; \n\t\t\t\t\t\t\tsetAddr ( channel , NUM00 ) ; \n\t\t\t\t\t\t\t$F980 ( log ) } \n\t\t\t\t\t\telse { \n\t\t\t\t\t\t\tsetMode ( channel , lim . getFullMode ( ) ) ; \n\t\t\t\t\t\t\tsetAddr ( channel , validmodes . valuesToAddress ( lim . getOpcode ( ) , getSV ( channel ) , getV1 ( channel ) , getV2 ( channel ) ) ) ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\tlog . debug ( NUM00 + NUM00 + Integer . toHexString ( getSV ( channel ) ) + NUM00 + NUM00 + Integer . toHexString ( getV1 ( channel ) ) + NUM00 + NUM00 + Integer . toHexString ( getV2 ( channel ) ) + NUM00 + NUM00 + getAddr ( channel ) + NUM00 + Integer . toHexString ( getAddr ( channel ) ) + NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse $F63252 ( log , type , channel ) } \n\t\t\t\telse $F845 } \n\t\t\tissueNextOperation ( ) ; \n\t\t\t$F665 } \n\t\telse $F932 case LnConstants . OPC_INPUT_REP : if $F585 ( log ) { \n\t\t\tlog . debug ( LnConstants . OPC_NAME ( opCode ) + NUM00 ) ; \n\t\t\t} \n\t\tfor ( $F119 ( i , _numRows ) ) { \n\t\t\tif ( capture [ i ] ) { \n\t\t\t\t$F15998 ( log , i ) int val1 = m . getElement ( NUM00 ) ; \n\t\t\t\tint val2 = m . getElement ( NUM00 ) ; \n\t\t\t\tsetAddr ( i , $F74254 ( val2 ) * NUM00 + $F74254 ( val1 ) | ( ( ( val2 & LnConstants . OPC_SW_REQ_DIR ) == LnConstants . OPC_SW_REQ_DIR ) ? NUM00 : NUM00 ) ) ; \n\t\t\t\tcapture [ i ] = _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F665 case LnConstants . OPC_SW_REQ : if $F585 ( log ) { \n\t\t\tlog . debug ( LnConstants . OPC_NAME ( opCode ) + NUM00 ) ; \n\t\t\t} \n\t\tfor ( $F119 ( i , _numRows ) ) { \n\t\t\tif ( capture [ i ] ) { \n\t\t\t\t$F15998 ( log , i ) int val1 = m . getElement ( NUM00 ) ; \n\t\t\t\tint val2 = m . getElement ( NUM00 ) ; \n\t\t\t\tint addr = LocoIO . SENSOR_ADR ( val1 , val2 ) ; \n\t\t\t\tsetAddr ( i , addr ) ; \n\t\t\t\tcapture [ i ] = _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F665 $F1267 } \n\t} \n"}, {"code": "$F16994 ( buf ) "}, {"code": "public void test_fill$ZIIZ $F72 { \n\tboolean val = _BOOL ; \n\tboolean $F3234 = new boolean $F380 ; \n\t$F47119 ( Arrays , d , val ) $F47123 ( i , assertTrue , d , val ) $F47124 ( i , d , assertTrue , val ) $F47128 ( Arrays , d , val , fail ) $F47133 ( Arrays , d , val , fail ) $F47138 ( Arrays , d , val , fail ) } \n"}, {"code": "protected void linearLayout ( VisualTable labels ) { \n\tRectangle2D b = getLayoutBounds ( ) ; \n\tdouble breadth = getBreadth ( b ) ; \n\tdouble span = m_hi - m_lo ; \n\tdouble pspan = m_prevhi - m_prevlo ; \n\tdouble vlo = NUM00 ; \n\tif ( m_lo >= NUM00 ) { \n\t\tvlo = Math . pow ( NUM00 , Math . floor ( MathLib . log10 ( m_lo ) ) ) ; \n\t\t} \n\telse { \n\t\tvlo = - Math . pow ( NUM00 , NUM00 + Math . floor ( MathLib . log10 ( - m_lo ) ) ) ; \n\t\t} \n\tIterator iter = labels . tuples ( ) ; \n\twhile $F2921 ( iter ) { \n\t\t$F163591 ( item , iter ) reset ( item ) ; \n\t\tdouble v = item . getDouble ( VALUE ) ; \n\t\tdouble x = span == NUM00 ? NUM00 : ( ( v - m_lo ) / span ) * breadth ; \n\t\tset ( item , x , b ) ; \n\t\t} \n\tIndex index = labels . index ( VALUE ) ; \n\tdouble step = getLinearStep ( span , span == NUM00 ? NUM00 : breadth / span ) ; \n\t$F211985 ( step ) int r ; \n\tfor ( double x , v = vlo ; \n\tv <= m_hi ; \n\tv += step ) { \n\t\tx = ( ( v - m_lo ) / span ) * breadth ; \n\t\tif ( x < - NUM00 ) $F1448 else if ( $F86155 ( r , index , v ) >= NUM00 ) { \n\t\t\tVisualItem item = labels . getItem ( r ) ; \n\t\t\titem . setVisible ( _BOOL ) ; \n\t\t\titem . setEndVisible ( _BOOL ) ; \n\t\t\t} \n\t\telse { \n\t\t\tVisualItem item = labels . addItem ( ) ; \n\t\t\titem . set ( LABEL , m_nf . format ( v ) ) ; \n\t\t\titem . setDouble ( VALUE , v ) ; \n\t\t\tdouble f = pspan == NUM00 ? NUM00 : ( ( v - m_prevlo ) / pspan ) ; \n\t\t\tif ( f <= NUM00 || f >= NUM00 ) item . setStartVisible ( _BOOL ) ; \n\t\t\tset ( item , f * breadth , b ) ; \n\t\t\tset ( item , x , b ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public synchronized boolean addAll $F22451 ( collection ) $F8587 ( addAll , elementCount , collection ) "}, {"code": "public boolean handleExceptionFromServer ( Writer writer , Reader reader , Throwable ex ) { \n\tif ( ex instanceof ClosedChannelException ) { \n\t\tif $F6456 ( _logger , Level ) _logger . log ( Level . FINE , NUM00 + writer . getEndPointAddress ( ) + NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tif ( ex instanceof MarshalContextClearedException ) { \n\t\tif $F6456 ( _logger , Level ) _logger . log ( Level . FINE , NUM00 + writer . getEndPointAddress ( ) + NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t} \n\ttry { \n\t\tString msg = NUM00 + writer . getEndPointAddress ( ) + NUM00 ; \n\t\tif ( ex instanceof LRMIUnhandledException ) { \n\t\t\tif $F6456 ( _logger , Level ) _logger . log ( Level . FINE , msg , ex ) ; \n\t\t\tLRMIUnhandledException lrmiue = ( LRMIUnhandledException ) ex ; \n\t\t\tif ( lrmiue . getStage ( ) == Stage . DESERIALIZATION ) { \n\t\t\t\treader . resetContext ( ) ; \n\t\t\t\t} \n\t\t\tif $F23014 ( writer ) writer . writeReply ( new ReplyPacket ( null , lrmiue ) ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse if ( ex instanceof RuntimeException || ex instanceof InvalidClassException ) { \n\t\t\tif $F68674 ( _logger , Level ) _logger . log ( Level . SEVERE , msg , ex ) ; \n\t\t\t} \n\t\telse if ( ex instanceof UnmarshalException ) { \n\t\t\tif $F89967 ( _logger , Level ) _logger . log ( Level . WARNING , msg , ex ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif $F6456 ( _logger , Level ) _logger . log ( Level . FINE , msg , ex ) ; \n\t\t\t} \n\t\tif $F23014 ( writer ) writer . writeReply ( new ReplyPacket ( null , new ProtocolException ( msg , ex ) ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tcatch ( Exception ex2 ) { \n\t\tif $F6456 ( _logger , Level ) _logger . log ( Level . FINE , NUM00 + writer . getEndPointAddress ( ) + NUM00 , ex ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public String sprintf $F72 { \n\tfinal Iterator < ConversionSpecification > e = vFmt . iterator ( ) ; \n\tConversionSpecification cs ; \n\tchar c ; \n\t$F1121 ( sb ) while $F2921 ( e ) { \n\t\t$F45366 ( cs , e ) c = cs . getConversionCharacter ( ) ; \n\t\tif ( c == NUM00 ) { \n\t\t\tsb . append ( cs . getLiteral ( ) ) ; \n\t\t\t} \n\t\telse if ( c == NUM00 ) $F86 ( sb ) } \n\t$F92 ( sb ) } \n"}, {"code": "default String resourceName ( String tableName , String type ) { \n\treturn String . format ( RESOURCE_NAME , tableName , type ) ; \n\t} \n"}, {"code": "protected void updateComboBoxesLoadChange $F72 { \n\tif $F31483 ( autoTrackCheckBox ) $F5795 ( updateLocationTrackComboBox ) if $F31483 ( autoDestinationTrackCheckBox ) $F5795 ( updateDestinationTrackComboBox ) if $F31483 ( autoFinalDestTrackCheckBox ) $F5795 ( updateFinalDestination ) } \n"}, {"code": "public String removeClassColumnTipText $F72 $F2455 "}, {"code": "public static String join ( NamedValue [ ] values , String separator ) { \n\t$F83 ( buff ) for ( $F1139 ( i , values ) ) { \n\t\t$F6939 ( buff , values , i ) if $F18953 ( i , values ) buff . append ( separator ) ; \n\t\t} \n\t$F92 ( buff ) } \n"}, {"code": "private int currentDepth $F72 { \n\ttry { \n\t\tInteger oneBased = ( ( Integer ) DEPTH_FIELD . get ( this ) ) ; \n\t\treturn oneBased - NUM00 ; \n\t\t} \n\t$F180169 ( e ) } \n"}, {"code": "protected LocPathIterator changePartToRef ( final QName uniquePseudoVarName , WalkingIterator wi , final int numSteps , final boolean isGlobal ) { \n\tVariable var = new Variable $F72 ; \n\tvar . setQName ( uniquePseudoVarName ) ; \n\tvar . setIsGlobal ( isGlobal ) ; \n\tif ( isGlobal ) { \n\t\tElemTemplateElement elem = getElemFromExpression ( wi ) ; \n\t\tStylesheetRoot root = elem . getStylesheetRoot ( ) ; \n\t\t$F64276 ( vars , root ) var . setIndex ( $F2281 ( vars ) ) ; \n\t\t} \n\tAxesWalker walker = wi . getFirstWalker ( ) ; \n\tfor ( $F119 ( i , numSteps ) ) { \n\t\tassertion ( null != walker , NUM00 ) ; \n\t\twalker = walker . getNextWalker ( ) ; \n\t\t} \n\tif ( null != walker ) { \n\t\tFilterExprWalker few = new FilterExprWalker ( wi ) ; \n\t\tfew . setInnerExpression ( var ) ; \n\t\tfew . exprSetParent ( wi ) ; \n\t\tfew . setNextWalker ( walker ) ; \n\t\twalker . setPrevWalker ( few ) ; \n\t\twi . setFirstWalker ( few ) ; \n\t\treturn wi ; \n\t\t} \n\telse { \n\t\tFilterExprIteratorSimple feis = new FilterExprIteratorSimple ( var ) ; \n\t\tfeis . exprSetParent ( wi . exprGetParent ( ) ) ; \n\t\treturn feis ; \n\t\t} \n\t} \n"}, {"code": "protected String sourceClass ( Attribute c , $F1986 dist ) { \n\tif ( c . isNominal ( ) ) { \n\t\treturn Integer . toString ( Utils . maxIndex ( dist ) ) ; \n\t\t} \n\telse { \n\t\treturn Double . toString ( dist [ NUM00 ] ) ; \n\t\t} \n\t} \n"}, {"code": "public void done $F72 throws IOException $F29882 ( printer ) "}, {"code": "int requestGroupData ( char groupNum ) { \n\tsetCurrDataGroup ( groupNum ) ; \n\tcurrGrpItems = knownGrpItems . get ( $F130521 ( Integer , getCurrDataGroup ) ) ; \n\t$F1469 payLoad = { \n\t\tgroupNum } \n\t; \n\treturn ( writeTelegram ( payLoad , CMD_GROUP_READ , null ) ) ; \n\t} \n"}, {"code": "protected String computeFullUrl ( URL baseUrl , String link ) { \n\t$F26918 ( link ) if $F14943 ( link ) { \n\t\tif $F3106 ( link ) { \n\t\t\tlink = baseUrl . getProtocol ( ) + NUM00 + baseUrl . getAuthority ( ) + link ; \n\t\t\t} \n\t\telse { \n\t\t\tif $F3578 ( link ) $F1337 $F14393 ( path , baseUrl ) if $F2364 ( path ) { \n\t\t\t\t$F24867 ( sep , path ) $F36289 ( file , path , sep ) if $F80721 ( file ) $F45799 ( path , sep ) } \n\t\t\tlink = baseUrl . getProtocol ( ) + NUM00 + baseUrl . getAuthority ( ) + path + NUM00 + link ; \n\t\t\t} \n\t\t} \n\tlink = normalizeUrlEnding ( link ) ; \n\tString l = $F131081 ( link , Locale ) ; \n\tif ( $F65411 ( l ) ) $F1337 return link ; \n\t} \n"}, {"code": "protected String encodeCookie ( SerializableHttpCookie cookie ) $F99221 ( cookie , os , outputStream , Log , LOG_TAG , e , byteArrayToHexString ) "}, {"code": "public long skip ( long bytes ) throws IOException { \n\t$F40600 ( closed ) int av = available ( ) ; \n\tif ( av == NUM00 ) { \n\t\tav = makeAvailable ( ) ; \n\t\t$F14826 ( av ) } \n\t$F121098 ( res , Math , av , bytes ) head += res ; \n\treturn res ; \n\t} \n"}, {"code": "public void resume $F72 { \n\tmPaused = _BOOL ; \n\t$F3224 ( mLastFrameTime , System ) invalidate ( ) ; \n\t} \n"}, {"code": "protected void drawCenterText ( Canvas c ) { \n\tCharSequence centerText = mChart . getCenterText ( ) ; \n\tif ( mChart . isDrawCenterTextEnabled ( ) && centerText != null ) { \n\t\tPointF center = mChart . getCenterCircleBox ( ) ; \n\t\tfloat innerRadius = mChart . isDrawHoleEnabled ( ) && ! mChart . isDrawSlicesUnderHoleEnabled ( ) ? mChart . getRadius ( ) * ( mChart . getHoleRadius ( ) / NUM00 ) : mChart . getRadius ( ) ; \n\t\tRectF holeRect = mRectBuffer [ NUM00 ] ; \n\t\tholeRect . left = center . x - innerRadius ; \n\t\tholeRect . top = center . y - innerRadius ; \n\t\tholeRect . right = center . x + innerRadius ; \n\t\tholeRect . bottom = center . y + innerRadius ; \n\t\tRectF boundingRect = mRectBuffer [ NUM00 ] ; \n\t\tboundingRect . set ( holeRect ) ; \n\t\tfloat radiusPercent = mChart . getCenterTextRadiusPercent ( ) / NUM00 ; \n\t\tif ( radiusPercent > NUM00 ) { \n\t\t\tboundingRect . inset ( ( boundingRect . width ( ) - boundingRect . width ( ) * radiusPercent ) / NUM00 , ( boundingRect . height ( ) - boundingRect . height ( ) * radiusPercent ) / NUM00 ) ; \n\t\t\t} \n\t\tif ( ! centerText . equals ( mCenterTextLastValue ) || ! boundingRect . equals ( mCenterTextLastBounds ) ) { \n\t\t\tmCenterTextLastBounds . set ( boundingRect ) ; \n\t\t\tmCenterTextLastValue = centerText ; \n\t\t\tfloat width = mCenterTextLastBounds . width ( ) ; \n\t\t\tmCenterTextLayout = new StaticLayout ( centerText , NUM00 , centerText . length ( ) , mCenterTextPaint , ( int ) Math . max ( Math . ceil ( width ) , NUM00 ) , Layout . Alignment . ALIGN_CENTER , NUM00 , NUM00 , _BOOL ) ; \n\t\t\t} \n\t\tfloat layoutHeight = mCenterTextLayout . getHeight ( ) ; \n\t\t$F72208 ( c ) if ( $F215008 ( Build ) ) { \n\t\t\t$F6212 ( path ) path . addOval ( holeRect , Path . Direction . CW ) ; \n\t\t\tc . clipPath ( path ) ; \n\t\t\t} \n\t\tc . translate ( boundingRect . left , boundingRect . top + ( boundingRect . height ( ) - layoutHeight ) / NUM00 ) ; \n\t\tmCenterTextLayout . draw ( c ) ; \n\t\t$F72213 ( c ) } \n\t} \n"}, {"code": "public void testSubtractDiffScaleNegPos $F72 { \n\tString a = NUM00 ; \n\tint aScale = - NUM00 ; \n\tString b = NUM00 ; \n\tint bScale = NUM00 ; \n\tString c = NUM00 ; \n\tint cScale = NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) $F1918 ( bNumber , b , bScale ) $F173389 ( result , aNumber , bNumber ) $F1925 ( assertEquals , c , result ) $F1928 ( assertEquals , cScale , result ) } \n"}, {"code": "void addToPrototypeCallback $F72 ; \n"}, {"code": "public AllToAllPanel ( AllToAll connector , NetworkPanel networkPanel ) { \n\tsuper ( ) ; \n\tthis . connection = connector ; \n\tallowSelfConnectPanel = new JPanel ( new FlowLayout ( FlowLayout . LEFT ) ) ; \n\t$F58105 ( allowSelfConnectPanel ) allowSelfConnectPanel . add ( allowSelfConnectChkBx ) ; \n\tfillFieldValues ( ) ; \n\tadd ( allowSelfConnectPanel ) ; \n\t} \n"}, {"code": "$F5105 ( pcl , m_pcSupport ) "}, {"code": "public boolean functionAvailable ( String ns , String funcName ) throws $F1872 { \n\ttry { \n\t\tif ( funcName == null ) { \n\t\t\tString fmsg = XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_ARG_CANNOT_BE_NULL , new Object $F21902 ) ; \n\t\t\tthrow new NullPointerException ( fmsg ) ; \n\t\t\t} \n\t\tjavax . xml . namespace . QName myQName = new QName ( ns , funcName ) ; \n\t\tjavax . xml . xpath . XPathFunction xpathFunction = resolver . resolveFunction ( myQName , NUM00 ) ; \n\t\t$F1933 ( xpathFunction , _BOOL ) return _BOOL ; \n\t\t} \n\t$F7474 ( _BOOL ) } \n"}, {"code": "private void allocate_sections ( int p_section_count ) { \n\tsection_list . ensureCapacity ( p_section_count ) ; \n\twhile $F10255 ( section_list , p_section_count ) { \n\t\tsection_list . add ( new MazeSearchElement $F72 ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean refreshNeeded $F72 { \n\treturn this . softTtl < System . currentTimeMillis ( ) ; \n\t} \n"}, {"code": "public static $F96 randomBytes ( int length ) { \n\t$F2175 ( bytes , length ) SEEDED_RANDOM . nextBytes ( bytes ) ; \n\treturn bytes ; \n\t} \n"}, {"code": "public WeightDistribution ( ColumnExampleTable columnTable , $F2027 selection , int attributeNumber ) { \n\tcalculateLabelWeights ( columnTable , selection , attributeNumber ) ; \n\t$F14238 ( leftLabelWeights , totalLabelWeights ) leftWeight = NUM00 ; \n\ttotalWeight = getTotalWeight ( totalLabelWeights ) ; \n\tif ( hasMissings ) { \n\t\tmissingsWeight = getTotalWeight ( missingsLabelWeights ) ; \n\t\trightWeight = totalWeight - missingsWeight ; \n\t\trightLabelWeights = arrayDifference ( totalLabelWeights , missingsLabelWeights ) ; \n\t\t} \n\telse { \n\t\tmissingsWeight = NUM00 ; \n\t\trightWeight = totalWeight ; \n\t\t$F14238 ( rightLabelWeights , totalLabelWeights ) $F7057 ( System , totalLabelWeights , rightLabelWeights ) } \n\t} \n"}, {"code": "public static String removeExtension ( String fileName ) { \n\t$F24867 ( index , fileName ) if ( index == - NUM00 ) { \n\t\treturn fileName ; \n\t\t} \n\telse $F35299 ( fileName , index ) } \n"}, {"code": "public void delete ( String name ) throws IOException { \n\t$F219378 ( name , KEY_ID , id ) encodeThis ( ) ; \n\t} \n"}, {"code": "public static DataFrame normalize ( DataFrame dataFrame , double min , double max ) { \n\treturn normalize ( dataFrame , min , max , $F70465 ( Collections ) ) ; \n\t} \n"}, {"code": "boolean isSocketScheme ( String scheme ) { \n\tfor ( String p : URIHelper . SOCKET_SCHEMES ) $F12419 ( p , scheme , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "private static void addLeafWithNonExistingParents ( Spatial root , Spatial leaf ) { \n\tif ( ! ( root instanceof Node ) ) { \n\t\tlogger . log ( Level . WARNING , NUM00 , new Object [ ] { \n\t\t\tleaf . getName ( ) , root . getName ( ) } \n\t\t) ; \n\t\t$F665 } \n\tfor ( Spatial s = leaf ; \n\ts . getParent ( ) != null ; \n\t$F10336 ( s ) ) { \n\t\tSpatial parent = s . getParent ( ) ; \n\t\tSpatial other = findTaggedSpatial ( root , parent ) ; \n\t\t$F4322 ( other ) if ( other instanceof Node ) { \n\t\t\tlogger . log ( Level . INFO , NUM00 , new Object [ ] { \n\t\t\t\ts , other , root , leaf } \n\t\t\t) ; \n\t\t\tfor ( Spatial spt = leaf ; \n\t\t\tspt != parent ; \n\t\t\t$F10336 ( spt ) ) { \n\t\t\t\tspt . setUserData ( ORIGINAL_NAME , spt . getName ( ) ) ; \n\t\t\t\tspt . setUserData ( ORIGINAL_PATH , getSpatialPath ( spt ) ) ; \n\t\t\t\t$F10337 ( spt ) } \n\t\t\t$F125481 ( otherNode , other ) otherNode . attachChild ( s ) ; \n\t\t\tlogger . log ( LogLevel . USERINFO , NUM00 , new Object [ ] { \n\t\t\t\tother . getName ( ) , leaf . getName ( ) } \n\t\t\t) ; \n\t\t\t$F665 } \n\t\telse { \n\t\t\tlogger . log ( Level . WARNING , NUM00 , $F42238 ( leaf , other , root ) ) ; \n\t\t\t} \n\t\t} \n\tlogger . log ( Level . WARNING , NUM00 , leaf . getName ( ) ) ; \n\t} \n"}, {"code": "private void adjustBlockListeners ( List < OBlock > oldRange , List < OBlock > newRange , Tracker tracker ) { \n\tIterator < OBlock > iter = newRange . iterator ( ) ; \n\twhile $F2921 ( iter ) { \n\t\tOBlock b = iter . next ( ) ; \n\t\tif $F105 ( oldRange , b ) $F122863 ( oldRange , b ) addBlockListener ( b , tracker ) ; \n\t\t} \n\t$F18058 ( iter , oldRange ) while $F2921 ( iter ) { \n\t\t$F47912 ( removeBlockListener , iter , tracker ) } \n\t} \n"}, {"code": "public static String dbNameToVarName ( String columnName ) { \n\t$F1275 ( columnName ) $F80469 ( fieldName , columnName ) boolean toUpper = _BOOL ; \n\tfor ( $F1088 ( i , columnName ) ) { \n\t\t$F1280 ( ch , columnName , i ) if ( ch == NUM00 ) { \n\t\t\ttoUpper = _BOOL ; \n\t\t\t} \n\t\telse if ( toUpper ) { \n\t\t\t$F91408 ( fieldName , Character , ch ) toUpper = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\t$F59257 ( fieldName , Character , ch ) } \n\t\t} \n\t$F92 ( fieldName ) } \n"}, {"code": "static public String hexEncode $F97 ( aInput ) { \n\t$F280 ( result ) final $F1469 digits = $F32662 ; \n\tfor ( $F9808 ( idx , aInput ) ) { \n\t\tbyte b = aInput [ idx ] ; \n\t\tresult . append ( digits [ $F84701 ( b ) ] ) ; \n\t\t$F3248 ( result , digits , b ) } \n\t$F92 ( result ) } \n"}, {"code": "private static Size clampSize ( Size original , double maxArea , Size maxSize ) { \n\tif ( original . getWidth ( ) * original . getHeight ( ) < maxArea && original . getWidth ( ) < maxSize . getWidth ( ) && original . getHeight ( ) < maxSize . getHeight ( ) ) { \n\t\treturn original ; \n\t\t} \n\tdouble ratio = Math . min ( Math . sqrt ( maxArea / original . area ( ) ) , NUM00 ) ; \n\tint width = ( int ) Math . round ( original . width ( ) * ratio ) ; \n\tint height = ( int ) Math . round ( original . height ( ) * ratio ) ; \n\tif ( width > maxSize . width ( ) || height > maxSize . height ( ) ) $F8587 ( computeFitWithinSize , original , maxSize ) return new Size ( width , height ) ; \n\t} \n"}, {"code": "TCPChannel ( TCPTransport tr , TCPEndpoint ep ) $F20755 ( this , tr , ep ) "}, {"code": "$F1 public final String toString $F72 { \n\t$F83 ( buffer ) $F84 ( buffer ) for ( $F2277 ( i , fields ) ) { \n\t\tIndexableField field = fields . get ( i ) ; \n\t\t$F11659 ( buffer , field ) if ( i != $F2281 ( fields ) ) $F86 ( buffer ) } \n\t$F84 ( buffer ) $F92 ( buffer ) } \n"}, {"code": "public static $F96 encode $F97 ( data ) { \n\t$F1538 ( bOut ) try { \n\t\tencoder . encode ( data , NUM00 , data . length , bOut ) ; \n\t\t} \n\tcatch ( IOException e ) $F1666 ( e ) $F11316 ( bOut ) } \n"}, {"code": "public static Face drawDir ( Direction dir , MeshModel model , double minX , double minY , double minZ , double maxX , double maxY , double maxZ , CubeTextureCoordinates textureCoordinates ) { \n\tswitch ( dir ) { \n\t\tcase DOWN : return drawDown ( model , minX , minY , minZ , maxX , maxY , maxZ , textureCoordinates ) ; \n\t\tcase UP : return drawUp ( model , minX , minY , minZ , maxX , maxY , maxZ , textureCoordinates ) ; \n\t\tcase NORTH : return drawNorth ( model , minX , minY , minZ , maxX , maxY , maxZ , textureCoordinates ) ; \n\t\tcase SOUTH : return drawSouth ( model , minX , minY , minZ , maxX , maxY , maxZ , textureCoordinates ) ; \n\t\tcase EAST : return drawEast ( model , minX , minY , minZ , maxX , maxY , maxZ , textureCoordinates ) ; \n\t\tcase WEST : return drawWest ( model , minX , minY , minZ , maxX , maxY , maxZ , textureCoordinates ) ; \n\t\t} \n\tthrow new RenderException $F580 ; \n\t} \n"}, {"code": "public void addObserver ( final FileAlterationObserver observer ) $F17651 ( observer , observers ) "}, {"code": "public MAVLinkMessage ( MAVLinkSchema schema , ByteBuffer buffer ) throws MAVLinkProtocolException , MAVLinkUnknownMessage , BufferUnderflowException { \n\tif ( buffer . remaining ( ) < NON_PAYLOAD_LENGTH ) { \n\t\tthrow new BufferUnderflowException $F72 ; \n\t\t} \n\t$F35972 ( startPos , buffer ) $F46702 ( startSign , buffer ) if ( startSign != START_OF_FRAME ) { \n\t\tthrow new MAVLinkProtocolException $F4456 ( String , startSign , START_OF_FRAME ) ; \n\t\t} \n\t$F183760 ( payloadLen , buffer ) if ( buffer . remaining ( ) < payloadLen + NON_PAYLOAD_LENGTH - NUM00 ) { \n\t\tbuffer . position ( startPos ) ; \n\t\tthrow new BufferUnderflowException $F72 ; \n\t\t} \n\t$F16478 ( sequence , buffer ) systemID = buffer . get ( ) & NUM00 ; \n\tcomponentID = buffer . get ( ) & NUM00 ; \n\tmsgID = buffer . get ( ) & NUM00 ; \n\tthis . schema = schema ; \n\tthis . definition = schema . getMessageDefinition ( msgID ) ; \n\tif ( definition == null ) { \n\t\tbuffer . position ( buffer . position ( ) + payloadLen + CRC_LENGTH ) ; \n\t\tthrow new MAVLinkUnknownMessage $F10797 ( String , msgID ) ; \n\t\t} \n\tif ( payloadLen != definition . payloadLength ) { \n\t\tbuffer . position ( buffer . position ( ) + payloadLen + CRC_LENGTH ) ; \n\t\tthrow new MAVLinkUnknownMessage ( String . format ( NUM00 , definition . name , msgID , payloadLen , definition . payloadLength ) ) ; \n\t\t} \n\tthis . payload = new byte [ definition . payloadLength ] ; \n\tbuffer . get ( payload ) ; \n\tcrc = Short . reverseBytes ( buffer . getShort ( ) ) & NUM00 ; \n\t$F35972 ( endPos , buffer ) buffer . position ( startPos ) ; \n\tint crcCalc = calculateCRC ( buffer ) ; \n\tbuffer . position ( endPos ) ; \n\tif ( crc != crcCalc ) { \n\t\tthrow new MAVLinkUnknownMessage ( String . format ( NUM00 , definition . name , msgID , crc , crcCalc ) ) ; \n\t\t} \n\tthis . payloadBB = ByteBuffer . wrap ( payload ) ; \n\tpayloadBB . order ( schema . getByteOrder ( ) ) ; \n\t} \n"}, {"code": "public static double log1p ( final double x ) { \n\tif ( x == - NUM00 ) $F86429 ( Double ) if ( x == Double . POSITIVE_INFINITY ) $F90685 ( Double ) if ( x > NUM00 || x < - NUM00 ) { \n\t\tfinal double xpa = NUM00 + x ; \n\t\tfinal double xpb = - ( xpa - NUM00 - x ) ; \n\t\tfinal $F1986 hiPrec = $F1990 ; \n\t\tfinal double lores = log ( xpa , hiPrec ) ; \n\t\tif $F28102 ( Double , lores ) { \n\t\t\treturn lores ; \n\t\t\t} \n\t\tfinal double fx1 = xpb / xpa ; \n\t\tfinal double epsilon = NUM00 * fx1 + NUM00 ; \n\t\treturn epsilon * fx1 + hiPrec [ NUM00 ] + hiPrec [ NUM00 ] ; \n\t\t} \n\telse { \n\t\tfinal double y = ( x * F_1_3 - F_1_2 ) * x + NUM00 ; \n\t\treturn y * x ; \n\t\t} \n\t} \n"}, {"code": "protected ScriptBuilder bigNum ( long num ) { \n\treturn $F28711 ( bigNum , chunks , num ) ; \n\t} \n"}, {"code": "Callbacks tryGetCallbacks ( Callbacks oldCallbacks ) { \n\tsynchronized ( mLock ) { \n\t\t$F5972 ( mStopped ) $F1338 ( mCallbacks ) final Callbacks callbacks = mCallbacks . get ( ) ; \n\t\tif ( callbacks != oldCallbacks ) $F1337 if ( callbacks == null ) $F108257 ( Log , TAG ) return callbacks ; \n\t\t} \n\t} \n"}, {"code": "public final void change_entries ( BrdTracep p_obj , Polyline p_new_polyline , int p_keep_at_start_count , int p_keep_at_end_count ) { \n\tint compensated_half_width = p_obj . get_half_width ( ) + get_clearance_compensation ( p_obj . clearance_idx ( ) , p_obj . get_layer ( ) ) ; \n\tArrayList < ShapeTile > changed_shapes = offset_shapes ( p_new_polyline , compensated_half_width , p_keep_at_start_count , p_new_polyline . plaline_len ( - NUM00 ) - p_keep_at_end_count ) ; \n\tint old_shape_count = p_obj . tree_shape_count ( this ) ; \n\tint new_shape_count = changed_shapes . size ( ) + p_keep_at_start_count + p_keep_at_end_count ; \n\tAwtreeNodeLeaf [ ] new_leaf_arr = new AwtreeNodeLeaf [ new_shape_count ] ; \n\tShapeTile [ ] new_precalculated_tree_shapes = new ShapeTile [ new_shape_count ] ; \n\tAwtreeNodeLeaf [ ] old_entries = p_obj . get_search_tree_entries ( this ) ; \n\tfor ( $F1316 ( index , p_keep_at_start_count ) ) { \n\t\tnew_leaf_arr [ index ] = old_entries [ index ] ; \n\t\tnew_precalculated_tree_shapes [ index ] = p_obj . get_tree_shape ( this , index ) ; \n\t\t} \n\tfor ( int index = p_keep_at_start_count ; \n\tindex < old_shape_count - p_keep_at_end_count ; \n\t++ index ) $F11680 ( remove_leaf , old_entries , index ) for ( $F1316 ( i , p_keep_at_end_count ) ) { \n\t\tint new_index = new_shape_count - p_keep_at_end_count + i ; \n\t\tint old_index = old_shape_count - p_keep_at_end_count + i ; \n\t\tnew_leaf_arr [ new_index ] = old_entries [ old_index ] ; \n\t\tnew_leaf_arr [ new_index ] . shape_index_in_object = new_index ; \n\t\tnew_precalculated_tree_shapes [ new_index ] = p_obj . get_tree_shape ( this , old_index ) ; \n\t\t} \n\tfor ( int index = p_keep_at_start_count ; \n\tindex < new_shape_count - p_keep_at_end_count ; \n\t++ index ) { \n\t\tnew_precalculated_tree_shapes [ index ] = changed_shapes . get ( index - p_keep_at_start_count ) ; \n\t\t} \n\tp_obj . set_precalculated_tree_shapes ( new_precalculated_tree_shapes , this ) ; \n\tfor ( int index = p_keep_at_start_count ; \n\tindex < new_shape_count - p_keep_at_end_count ; \n\t++ index ) { \n\t\tnew_leaf_arr [ index ] = insert ( p_obj , index ) ; \n\t\t} \n\tp_obj . set_search_tree_entries ( this , new_leaf_arr ) ; \n\t} \n"}, {"code": "static Object newInstance ( String className , ClassLoader cl , boolean doFallback ) throws ConfigurationError { \n\ttry { \n\t\tClass providerClass = findProviderClass ( className , cl , doFallback ) ; \n\t\t$F71976 ( instance , providerClass ) $F60246 ( DEBUG , debugPrintln , providerClass , cl ) return instance ; \n\t\t} \n\tcatch ( ClassNotFoundException x ) { \n\t\tthrow new ConfigurationError ( NUM00 + className + NUM00 , x ) ; \n\t\t} \n\tcatch ( Exception x ) { \n\t\tthrow new ConfigurationError ( NUM00 + className + NUM00 + x , x ) ; \n\t\t} \n\t} \n"}, {"code": "public void paintComponentBackground ( Graphics g ) { \n\tsuper . paintComponentBackground ( g ) ; \n\tint clipX = g . getClipX ( ) ; \n\tint clipY = g . getClipY ( ) ; \n\tint clipW = g . getClipWidth ( ) ; \n\tint clipH = g . getClipHeight ( ) ; \n\tint width = getWidth ( ) ; \n\tint height = getHeight ( ) ; \n\tint y = getY ( ) ; \n\tif ( infinite ) { \n\t\t$F23200 ( blockSize , getWidth ) int x = getX ( ) + ( int ) ( ( $F61779 ( value ) / ( ( float ) maxValue - minValue ) ) * ( getWidth ( ) - blockSize ) ) ; \n\t\tg . clipRect ( x , y , blockSize , height - NUM00 ) ; \n\t\t} \n\telse { \n\t\tif ( vertical ) { \n\t\t\tint actualHeight = ( int ) ( ( $F61779 ( value ) / ( ( float ) maxValue - minValue ) ) * getHeight ( ) ) ; \n\t\t\ty += height - actualHeight ; \n\t\t\t} \n\t\telse { \n\t\t\twidth = ( int ) ( ( $F61779 ( value ) / ( ( float ) maxValue - minValue ) ) * getWidth ( ) ) ; \n\t\t\t} \n\t\tg . clipRect ( getX ( ) , y , width , height ) ; \n\t\t} \n\tpaintingFull = _BOOL ; \n\tsuper . paintComponentBackground ( g ) ; \n\tpaintingFull = _BOOL ; \n\tg . setClip ( clipX , clipY , clipW , clipH ) ; \n\tif ( thumbImage != null && ! infinite ) { \n\t\tif ( ! vertical ) { \n\t\t\tint xPos = getX ( ) + width - $F77576 ( thumbImage ) ; \n\t\t\txPos = Math . max ( getX ( ) , xPos ) ; \n\t\t\txPos = Math . min ( getX ( ) + getWidth ( ) - thumbImage . getWidth ( ) , xPos ) ; \n\t\t\tg . drawImage ( thumbImage , xPos , y + height / NUM00 - $F63370 ( thumbImage ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tint yPos = y ; \n\t\t\tg . drawImage ( thumbImage , getX ( ) + width / NUM00 - $F77576 ( thumbImage ) , yPos ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void addAction ( EntityAction ea ) { \n\tactions . addElement ( ea ) ; \n\tprocessGameEvent ( new GameNewActionEvent ( this , ea ) ) ; \n\t} \n"}, {"code": "public Polygon ( PolygonPoint p1 , PolygonPoint p2 , PolygonPoint p3 ) { \n\tp1 . _next = p2 ; \n\tp2 . _next = p3 ; \n\tp3 . _next = p1 ; \n\tp1 . _previous = p3 ; \n\tp2 . _previous = p1 ; \n\tp3 . _previous = p2 ; \n\t_points . add ( p1 ) ; \n\t_points . add ( p2 ) ; \n\t_points . add ( p3 ) ; \n\t} \n"}, {"code": "public static JSONObject readJSONObject ( final JSONArray jsonArray , final int index , final boolean required , final boolean notNull ) throws JSONException { \n\tif ( required ) { \n\t\treturn jsonArray . getJSONObject ( index ) ; \n\t\t} \n\t$F3652 ( notNull , jsonArray , index , String , Locale , NULL_VALUE_FORMAT_ARRAY ) JSONObject value = null ; \n\tif $F3653 ( jsonArray , index ) { \n\t\tvalue = jsonArray . getJSONObject ( index ) ; \n\t\t} \n\treturn value ; \n\t} \n"}, {"code": "public static void waitElementToNotBePresent ( SearchContext parent , By by , int waitInSeconds ) { \n\tPreconditions . checkNotNull ( parent ) ; \n\tPreconditions . checkNotNull ( by ) ; \n\ttry { \n\t\tWebElementWait wait = new WebElementWait ( parent , waitInSeconds ) ; \n\t\twait . until ( null ) ; \n\t\t} \n\tcatch ( TimeoutException e ) { \n\t\tthrow new TimeoutException ( String . format ( NUM00 , by , waitInSeconds ) , e ) ; \n\t\t} \n\t} \n"}, {"code": "public final TestSubscriber assertTerminated $F72 { \n\tif ( done . getCount ( ) != NUM00 ) { \n\t\tfail ( NUM00 , NUM00 , errors ) ; \n\t\t} \n\tlong c = completions ; \n\tif ( c > NUM00 ) { \n\t\tfail ( NUM00 , NUM00 + c , errors ) ; \n\t\t} \n\t$F2199 ( s , errors ) if ( s > NUM00 ) { \n\t\tfail ( NUM00 , NUM00 + s , errors ) ; \n\t\t} \n\tif ( c != NUM00 && s != NUM00 ) { \n\t\tfail ( NUM00 , NUM00 + c , errors ) ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "public boolean isVimeoURLValid $F72 { \n\tString videoID = getExtractedIdentifier ( ) ; \n\treturn $F20 ( videoID ) && TextUtils . isDigitsOnly ( videoID ) ; \n\t} \n"}, {"code": "public boolean isCancelled $F72 { \n\treturn mState . get ( ) == STATE_CANCELLED ; \n\t} \n"}, {"code": "public final void pushSubContextList ( SubContextList iter ) $F31742 ( m_axesIteratorStack , iter ) "}, {"code": "static void checkDesc $F4708 ( desc , canBeVoid ) { \n\tint end = checkDesc ( desc , NUM00 , canBeVoid ) ; \n\tif $F20325 ( end , desc ) $F18931 ( desc ) } \n"}, {"code": "private void updateDownloadedFiles ( SQLiteDatabase db , String newAccountName , String oldAccountName ) { \n\tString whereClause = ProviderTableMeta . FILE_ACCOUNT_OWNER + NUM00 + ProviderTableMeta . FILE_STORAGE_PATH + NUM00 ; \n\tCursor c = db . query ( ProviderTableMeta . FILE_TABLE_NAME , null , whereClause , $F8640 ( newAccountName ) , null , null , null ) ; \n\ttry { \n\t\tif $F17816 ( c ) { \n\t\t\tString oldAccountPath = FileStorageUtils . getSavePath ( oldAccountName ) ; \n\t\t\tString newAccountPath = FileStorageUtils . getSavePath ( newAccountName ) ; \n\t\t\t$F1705 ( oldAccountFolder , oldAccountPath ) $F1705 ( newAccountFolder , newAccountPath ) oldAccountFolder . renameTo ( newAccountFolder ) ; \n\t\t\tdo { \n\t\t\t\tString oldPath = c . getString ( c . getColumnIndex ( ProviderTableMeta . FILE_STORAGE_PATH ) ) ; \n\t\t\t\tOCFile file = new OCFile ( c . getString ( c . getColumnIndex ( ProviderTableMeta . FILE_PATH ) ) ) ; \n\t\t\t\tString newPath = FileStorageUtils . getDefaultSavePathFor ( newAccountName , file ) ; \n\t\t\t\t$F20904 ( cv ) cv . put ( ProviderTableMeta . FILE_STORAGE_PATH , newPath ) ; \n\t\t\t\tdb . update ( ProviderTableMeta . FILE_TABLE_NAME , cv , ProviderTableMeta . FILE_STORAGE_PATH + NUM00 , $F8640 ( oldPath ) ) ; \n\t\t\t\tLog_OC . v ( NUM00 , NUM00 + oldPath + NUM00 + newPath ) ; \n\t\t\t\t} \n\t\t\twhile $F12260 ( c ) ; \n\t\t\t} \n\t\t} \n\t$F3229 ( c ) } \n"}, {"code": "public void dumpOptions $F72 { \n\t$F973 ( logger ) for ( Method getter : GetConfigurationInterface . class . getMethods ( ) ) { \n\t\t$F20605 ( getterName , getter ) try { \n\t\t\tObject result = getter . invoke ( ConfigurationManager . getCurrentProfile ( ) ) ; \n\t\t\tif ( result instanceof Boolean ) { \n\t\t\t\tresult = LocalizationHelper . getYesOrNo ( ( Boolean ) result ) ; \n\t\t\t\t} \n\t\t\tif ( result instanceof List ) { \n\t\t\t\tfor ( int i = NUM00 ; \n\t\t\t\ti < ( ( List ) result ) . size ( ) ; \n\t\t\t\ti ++ ) { \n\t\t\t\t\tassert ( ( List ) result ) . get ( i ) instanceof CustomCatalogEntry ; \n\t\t\t\t\tCustomCatalogEntry c = ( ( List < CustomCatalogEntry > ) result ) . get ( i ) ; \n\t\t\t\t\tString OptionName = Helper . pad ( Localization . Main . getText ( NUM00 ) + NUM00 + ( i + NUM00 ) + NUM00 + c . getAtTop ( ) . toString ( ) , NUM00 , NUM00 ) + NUM00 ; \n\t\t\t\t\tlogger . info ( OptionName + c . getLabel ( ) + NUM00 + c . getValue ( ) . toString ( ) + NUM00 + c . getAtTop ( ) . toString ( ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F28924 ( optionName , getterName ) dumpOption ( optionName , result ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( IllegalAccessException e ) $F23016 ( logger , e ) catch ( InvocationTargetException e ) $F23016 ( logger , e ) } \n\t$F973 ( logger ) } \n"}, {"code": "private JsonNode parseLanguageResource ( Resource resource ) throws IOException { \n\tInputStream stream = resource . asStream ( ) ; \n\t$F1275 ( stream ) try { \n\t\tJsonNode tree = mapper . readTree ( stream ) ; \n\t\treturn tree ; \n\t\t} \n\t$F3229 ( stream ) } \n"}, {"code": "public Collection < Tuple2 < TransitionState , Double > > startStates $F72 { \n\tList < Tuple2 < TransitionState , Double > > result = new ArrayList < Tuple2 < TransitionState , Double > > $F72 ; \n\t{ \n\t\tdouble score = Math . log ( LINE_MRGN_PROB ) ; \n\t\taddNoSubGlyphStartState ( result , $F4468 , TransitionStateType . LMRGN , - NUM00 , score ) ; \n\t\t} \n\tfor ( $F1316 ( destLanguage , numLanguages ) ) { \n\t\tSingleLanguageModel destLM = lm . get ( destLanguage ) ; \n\t\tdouble destLanguagePrior = lm . languagePrior ( destLanguage ) ; \n\t\tfor ( int c : destLM . getActiveCharacters ( ) ) { \n\t\t\tif ( c != spaceCharIndex ) { \n\t\t\t\tdouble score = Math . log ( NUM00 - LINE_MRGN_PROB ) + Math . log ( getNgramProb ( destLM , $F4468 , c ) ) + Math . log ( destLanguagePrior ) ; \n\t\t\t\taddGlyphStartStates ( result , c , $F108345 ( c ) , TransitionStateType . TMPL , destLanguage , score ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t{ \n\t\tdouble totalSpaceProb = NUM00 ; \n\t\tfor ( $F1316 ( language , numLanguages ) ) totalSpaceProb += getNgramProb ( lm . get ( language ) , $F4468 , spaceCharIndex ) * lm . languagePrior ( language ) ; \n\t\tdouble score = Math . log ( NUM00 - LINE_MRGN_PROB ) + Math . log ( totalSpaceProb ) ; \n\t\taddNoSubGlyphStartState ( result , $F108345 ( spaceCharIndex ) , TransitionStateType . TMPL , - NUM00 , score ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public boolean removeContainerAndCancelIfNecessary ( ImageContainer container ) { \n\tmContainers . remove ( container ) ; \n\tif $F2979 ( mContainers ) { \n\t\t$F65148 ( mRequest ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public KernelDensityFunction ( Collection $F42619 points ) { \n\tthis ( points . toArray ( new double $F42549 ( points ) ) ) ; \n\t} \n"}, {"code": "private static Object cloneSerializableObject ( Object o ) throws $F6427 { \n\t$F1538 ( b ) $F7054 ( out , b ) out . writeObject ( o ) ; \n\t$F1206 ( out ) $F59 ( out ) $F153946 ( bi , b ) $F67402 ( in , bi ) $F287819 ( in ) } \n"}, {"code": "public boolean hasThree $F72 $F32878 ( points ) "}, {"code": "public ZipEntry ( String name ) { \n\t$F10578 ( Objects , name ) if $F4012 ( name ) $F825 this . name = name ; \n\t} \n"}, {"code": "public void _testStatements $F72 throws Exception { \n\tConnection connection = getConnectionViaDriverManager ( ) ; \n\tconnection . setAutoCommit ( _BOOL ) ; \n\ttry { \n\t\t$F11282 ( stmt , connection ) $F75096 ( rs , stmt ) $F59 ( rs ) RandomSelector selector1 = new RandomSelector ( stmt , SELECT_TABLE_1 , RECORD_COUNT ) ; \n\t\tRandomSelector selector2 = new RandomSelector ( stmt , SELECT_TABLE_2 , RECORD_COUNT ) ; \n\t\tThread $F40963 ( thread1 , selector1 ) ; \n\t\tThread $F40963 ( thread2 , selector2 ) ; \n\t\t$F2346 ( thread1 ) $F2346 ( thread2 ) $F28300 ( Thread , TEST_TIME_SECONDS ) $F5191 ( selector1 ) $F5191 ( selector2 ) $F14454 ( thread1 ) $F14454 ( thread2 ) $F59 ( stmt ) } \n\t$F3229 ( connection ) } \n"}, {"code": "void readDictionary $F63851 ( filename , suffix , res ) throws IOException { \n\tDictionaryNames nms = new DictionaryNames ( filename , suffix ) ; \n\t$F58550 ( in , res ) String line ; \n\twhile $F443 ( line , in ) { \n\t\t$F35105 ( terms , splitter , line ) if ( terms . length > maxPhraseLength ) $F598 if $F9634 ( terms ) $F598 GazEntry $F212710 ( ge , gaz , terms ) ; \n\t\tif ( ge == null ) { \n\t\t\tgaz . put ( terms [ NUM00 ] , new GazEntry ( terms , NUM00 , nms ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tge . addChild ( terms , NUM00 , nms ) ; \n\t\t\t} \n\t\t} \n\t$F59 ( in ) } \n"}, {"code": "private T matchTokens ( String targetToken , String requestToken ) { \n\tint wildcardIndex = NUM00 ; \n\tif ( targetToken == null && requestToken == null ) { \n\t\treturn exactMatch ; \n\t\t} \n\t$F6973 ( targetToken , requestToken , noMatch ) int beginTargetIndex = NUM00 ; \n\tint beginRequestIndex = NUM00 ; \n\tString substr = null ; \n\t$F1749 ( targetTokenLength , targetToken ) $F1749 ( requestTokenLength , requestToken ) if ( targetToken . indexOf ( oneLevelWildcard , beginTargetIndex ) != - NUM00 ) { \n\t\twhile $F8283 ( wildcardIndex , targetToken , oneLevelWildcard , beginTargetIndex ) { \n\t\t\tif ( wildcardIndex > beginTargetIndex ) { \n\t\t\t\tsubstr = targetToken . substring ( beginTargetIndex , wildcardIndex ) ; \n\t\t\t\tif ( $F150770 ( beginRequestIndex , requestToken , substr ) == - NUM00 ) { \n\t\t\t\t\treturn noMatch ; \n\t\t\t\t\t} \n\t\t\t\tbeginTargetIndex = beginTargetIndex + substr . length ( ) + oneLevelWildcardLength ; \n\t\t\t\tbeginRequestIndex = beginRequestIndex + substr . length ( ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( wildcardIndex == beginTargetIndex ) { \n\t\t\t\t\tif ( targetTokenLength == oneLevelWildcardLength ) { \n\t\t\t\t\t\treturn wildcardMatch ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tbeginTargetIndex = beginTargetIndex + oneLevelWildcardLength ; \n\t\t\t\t\t\t$F598 } \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t$F232230 ( beginTargetIndex , targetTokenLength , wildcardMatch ) $F12715 ( targetStr , targetToken , beginTargetIndex , targetTokenLength ) $F12715 ( remRequest , requestToken , beginRequestIndex , requestTokenLength ) int remRequestIndex = - NUM00 ; \n\t\tif ( ( remRequestIndex = remRequest . lastIndexOf ( targetStr , $F1092 ( remRequest ) ) ) == - NUM00 ) { \n\t\t\treturn noMatch ; \n\t\t\t} \n\t\telse { \n\t\t\tbeginRequestIndex = beginRequestIndex + remRequestIndex ; \n\t\t\tif ( beginRequestIndex + targetStr . length ( ) >= requestTokenLength ) { \n\t\t\t\treturn wildcardMatch ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\treturn noMatch ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse $F12419 ( targetToken , requestToken , exactMatch ) return noMatch ; \n\t} \n"}, {"code": "public void addVertex ( ValueGraphVertex v ) { \n\tif $F9793 ( vertices , v ) { \n\t\tif ( v . representsParameter ( ) ) { \n\t\t\tnParameter ++ ; \n\t\t\t} \n\t\t$F13265 ( representativeV , v ) } \n\t} \n"}, {"code": "private void createViewToModel ( int rowCount ) { \n\tint recreateFrom = NUM00 ; \n\tif ( viewToModel != null ) { \n\t\t$F56148 ( recreateFrom , Math , rowCount , viewToModel ) ; \n\t\tif ( viewToModel . length != rowCount ) { \n\t\t\tRow [ ] oldViewToModel = viewToModel ; \n\t\t\tviewToModel = new Row [ rowCount ] ; \n\t\t\t$F135 ( System , oldViewToModel , viewToModel , recreateFrom ) } \n\t\t} \n\telse { \n\t\tviewToModel = new Row [ rowCount ] ; \n\t\t} \n\tint i ; \n\tfor ( i = NUM00 ; \n\ti < recreateFrom ; \n\ti ++ ) { \n\t\tviewToModel [ i ] . modelIndex = i ; \n\t\t} \n\tfor ( i = recreateFrom ; \n\ti < rowCount ; \n\ti ++ ) { \n\t\tviewToModel [ i ] = new Row ( this , i ) ; \n\t\t} \n\t} \n"}, {"code": "public $F2689 files $F72 { \n\t$F77087 ( setFiles ) $F161321 ( Collections , setFiles ) } \n"}, {"code": "public static boolean isMac $F72 { \n\t$F27462 ( osName , System ) $F37156 ( osName ) return $F412 ( osName ) ; \n\t} \n"}, {"code": "private boolean isAssignableFrom ( Throwable concreteThrowable , Set < $F78637 > throwableClasses ) { \n\tfor ( $F78637 t : throwableClasses ) { \n\t\tif $F178804 ( t , concreteThrowable ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public String popAndEncode ( boolean fromOnlineEvent ) { \n\tsynchronized ( this ) { \n\t\t$F1338 ( activeBridgeMode ) activeBridgeMode . notifyOfFlush ( this , fromOnlineEvent ) ; \n\t\t$F4892 ( queue ) int totalPayloadLen = NUM00 ; \n\t\tint numMessagesToSend = NUM00 ; \n\t\tfor ( JsMessage message : queue ) { \n\t\t\tint messageSize = calculatePackedMessageLength ( message ) ; \n\t\t\t$F129691 ( numMessagesToSend , totalPayloadLen , messageSize , MAX_PAYLOAD_SIZE ) totalPayloadLen += messageSize ; \n\t\t\tnumMessagesToSend += NUM00 ; \n\t\t\t} \n\t\t$F7542 ( sb , totalPayloadLen ) for ( $F1316 ( i , numMessagesToSend ) ) { \n\t\t\t$F129703 ( message , queue ) packMessage ( message , sb ) ; \n\t\t\t} \n\t\tif $F5973 ( queue ) $F86 ( sb ) $F1822 ( ret , sb ) return ret ; \n\t\t} \n\t} \n"}, {"code": "protected void print ( int v ) throws IOException $F45719 ( print , String , v ) "}, {"code": "public Object2DoubleOpenHashMap < IntRBTreeSet > confidenceMap $F72 { \n\tList < ItemSet > itemSets = learn ( ) ; \n\tObject2DoubleOpenHashMap < IntRBTreeSet > confidenceMap = new Object2DoubleOpenHashMap $F200 $F716 ( itemSets ) ; \n\tfor ( ItemSet itemSet : itemSets ) { \n\t\tIntRBTreeSet itemSetCopy = new IntRBTreeSet ( itemSet . items ) ; \n\t\tconfidenceMap . put ( itemSetCopy , itemSet . support / ( double ) setCount ) ; \n\t\t} \n\treturn confidenceMap ; \n\t} \n"}, {"code": "public static boolean isAllAlpha ( String str ) { \n\t$F397 ( str , _BOOL ) for ( $F186068 ( i , str ) ) { \n\t\tif ( ! $F154919 ( Character , str , i ) ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void extract ( int minsupp , int minlength , int maxlength , int item , $F2027 postfix , int plen , $F2027 buf2 , $F2027 buf3 , boolean destruct , Collector col ) { \n\tif ( header [ item ] == null ) $F932 if ( header [ item ] . sibling == null ) { \n\t\tif ( header [ item ] . count < minsupp ) $F932 extractLinear ( header [ item ] . count , minsupp , minlength , maxlength , item , postfix , plen , buf2 , col ) ; \n\t\tif ( destruct ) { \n\t\t\t$F17838 ( Arrays , header ) } \n\t\t$F665 } \n\tint support = NUM00 ; \n\tfor ( FPNode cur = header [ item ] ; \n\tcur != null ; \n\tcur = cur . sibling ) { \n\t\tsupport += cur . count ; \n\t\t} \n\tif ( support < minsupp ) $F932 $F9952 ( Arrays , buf3 ) for ( FPNode cur = header [ item ] ; \n\tcur != null ; \n\tcur = cur . sibling ) { \n\t\tfor ( FPNode parent = cur . parent ; \n\t\tparent . key >= NUM00 ; \n\t\tparent = parent . parent ) { \n\t\t\tbuf3 [ parent . key ] += cur . count ; \n\t\t\t} \n\t\t} \n\tfinal int mminlength = minlength - ( plen + NUM00 ) ; \n\tif ( mminlength > NUM00 ) { \n\t\tint fparents = NUM00 ; \n\t\tfor ( $F119 ( i , item ) ) { \n\t\t\tif ( buf3 [ i ] >= minsupp ) { \n\t\t\t\tfparents += NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( fparents < mminlength ) $F932 } \n\tfinal int last = item - NUM00 ; \n\tFPTree proj = new FPTree ( item ) ; \n\tfor ( FPNode cur = header [ item ] ; \n\tcur != null ; \n\tcur = cur . sibling ) { \n\t\tint j = buf2 . length ; \n\t\tfor ( FPNode parent = cur . parent ; \n\t\tparent . key >= NUM00 ; \n\t\tparent = parent . parent ) { \n\t\t\tif ( buf3 [ parent . key ] >= minsupp ) { \n\t\t\t\tbuf2 [ -- j ] = parent . key ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( buf2 . length - j >= mminlength ) { \n\t\t\tproj . insert ( proj , buf2 , j , buf2 . length , cur . count ) ; \n\t\t\t} \n\t\t} \n\tproj . reduceMemory ( ) ; \n\tpostfix [ plen ++ ] = item ; \n\tif ( plen >= minlength && plen <= maxlength ) { \n\t\tcol . collect ( support , postfix , NUM00 , plen ) ; \n\t\t} \n\tfor ( $F141 ( j , last ) ) { \n\t\tproj . extract ( minsupp , minlength , maxlength , j , postfix , plen , buf2 , buf3 , destruct , col ) ; \n\t\t} \n\tif ( destruct ) $F10812 ( header , item ) } \n"}, {"code": "public void updatePosition ( Particle particle , long elapsedTime ) { \n\tVector3f speed = particle . getSpeed ( ) ; \n\tfloat delta = elapsedTime / NUM00 ; \n\tfloat dx = speed . x * delta ; \n\tfloat dy = speed . y * delta ; \n\tfloat dz = speed . z * delta ; \n\tVector3f pos = particle . getPosition ( ) ; \n\tparticle . setPosition ( pos . x + dx , pos . y + dy , pos . z + dz ) ; \n\t} \n"}, {"code": "protected static int toDigit ( char ch , int index ) throws DSSException { \n\t$F338099 ( digit , Character , ch ) if ( digit == - NUM00 ) { \n\t\tthrow new DSSException ( NUM00 + ch + NUM00 + index ) ; \n\t\t} \n\treturn digit ; \n\t} \n"}, {"code": "static void loadLibraryWithPath ( String libName , ClassLoader loader , String libraryPath ) $F78453 "}, {"code": "public Enumeration listOptions $F72 { \n\t$F6518 ( newVector ) $F9007 ( newVector ) $F1007 ( newVector ) } \n"}, {"code": "public void testConstructorSignBytesPositive7 $F72 { \n\tbyte $F3009 = { \n\t\t- NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , - NUM00 , NUM00 , - NUM00 } \n\t; \n\tint aSign = NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , - NUM00 , NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3030 ( rBytes ) $F3031 ( resBytes , aNumber ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , aNumber ) } \n"}, {"code": "public void save ( File keyStore , String type , $F1469 password , $F1469 keyPassword , String caAlias ) throws GeneralSecurityException , IOException { \n\t$F156 ( store , KeyStore , type ) store . load ( null , password ) ; \n\tstore . setKeyEntry ( caAlias , caKey , keyPassword , caCerts ) ; \n\t$F12015 ( out , keyStore ) try { \n\t\tstore . store ( out , password ) ; \n\t\t} \n\t$F12241 ( ioe ) $F3229 ( out ) } \n"}, {"code": "$F4562 ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , fuzzyThreshold , scaleFactor , isTouchEvent , deltaValue , currentScrollValue , scrollValue , HORIZONTAL , VERTICAL , mode , newScrollValue , PullToRefreshBase , Log , LOG_TAG , State , Math ) "}, {"code": "public OrQueryBuilder add ( QueryBuilder filterBuilder ) $F18637 ( filters , filterBuilder , this ) "}, {"code": "$F3874 ( tag , msg , args , sLevel , LEVEL_DEBUG , String , Log ) "}, {"code": "public static $F96 randomBytes ( int length ) { \n\t$F2175 ( bytes , length ) SEEDED_RANDOM . nextBytes ( bytes ) ; \n\treturn bytes ; \n\t} \n"}, {"code": "void update ( long timeNanos , int rows ) { \n\tcount ++ ; \n\t$F106734 ( executionTimeMinNanos , Math , timeNanos ) $F28619 ( executionTimeMaxNanos , Math , timeNanos ) $F106734 ( rowCountMin , Math , rows ) $F28619 ( rowCountMax , Math , rows ) double rowDelta = rows - rowCountMean ; \n\trowCountMean += rowDelta / count ; \n\trowCountM2 += rowDelta * ( rows - rowCountMean ) ; \n\tdouble timeDelta = timeNanos - executionTimeMeanNanos ; \n\texecutionTimeMeanNanos += timeDelta / count ; \n\texecutionTimeM2Nanos += timeDelta * ( timeNanos - executionTimeMeanNanos ) ; \n\texecutionTimeCumulativeNanos += timeNanos ; \n\trowCountCumulative += rows ; \n\t$F3224 ( lastUpdateTime , System ) } \n"}, {"code": "public void test_ctor_2 $F72 throws SailException { \n\tfinal File file = new File ( getName ( ) + Options . JNL ) ; \n\tif $F3428 ( file ) { \n\t\tif $F7119 ( file ) $F1328 ( fail , file ) } \n\t$F859 ( properties ) properties . setProperty ( Options . FILE , file . toString ( ) ) ; \n\tfinal BigdataSail sail = new BigdataSail ( properties ) ; \n\ttry { \n\t\t$F21883 ( sail ) sail . shutDown ( ) ; \n\t\t} \n\tfinally { \n\t\tif $F1906 ( file ) { \n\t\t\tfail ( NUM00 + file ) ; \n\t\t\tif $F7119 ( file ) $F1328 ( fail , file ) } \n\t\t} \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\tString result ; \n\tresult = null ; \n\tif ( isObject ( ) ) { \n\t\tif ( isRoot ( ) ) { \n\t\t\tresult = NUM00 ; \n\t\t\t} \n\t\telse if ( m_Name == null ) { \n\t\t\tresult = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tresult = escape ( m_Name ) + NUM00 ; \n\t\t\t} \n\t\t} \n\telse if ( isArray ( ) ) { \n\t\tif ( m_Name == null ) { \n\t\t\tresult = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tresult = escape ( m_Name ) + NUM00 ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( m_Name != null ) { \n\t\t\tresult = escape ( m_Name ) + NUM00 + escape ( m_Value ) ; \n\t\t\t} \n\t\telse { \n\t\t\tresult = NUM00 + m_Value ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public final boolean split_traces_keep_point $F72 { \n\t$F397 ( keep_point , _BOOL ) ItemSelectionFilter filter = new ItemSelectionFilter ( ItemSelectionChoice . TRACES ) ; \n\t$F129519 picked_items = r_board . pick_items ( keep_point . keep_point , keep_point . on_layer , filter ) ; \n\tfor ( BrdItem curr_item : picked_items ) { \n\t\tBrdTracep a_trace = ( BrdTracep ) curr_item ; \n\t\tint line_idx = a_trace . polyline_find_line_idx ( keep_point . keep_point ) ; \n\t\t$F166042 ( line_idx ) $F102811 clean_list = a_trace . split_with_end_point ( line_idx , keep_point . keep_point ) ; \n\t\treturn $F3816 ( clean_list ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static $F96 flipAllBitsInPlace $F24576 ( bytes , index , length ) { \n\tint endIndex = Math . min ( bytes . length , index + length ) ; \n\tfor ( int i = index ; \n\ti < endIndex ; \n\ti ++ ) { \n\t\tbytes [ i ] = ( byte ) ( bytes [ i ] ^ NUM00 ) ; \n\t\t} \n\treturn bytes ; \n\t} \n"}, {"code": "public CreateIndexRequest source ( String source ) { \n\treturn source ( $F43004 ( source , Charsets ) ) ; \n\t} \n"}, {"code": "private void addUsers ( User [ ] users , LocalConfiguration configuration ) { \n\tfor ( User user : users ) { \n\t\tconfiguration . addUser ( user . createUser ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "void tryToDrainBuffers $F72 { \n\tif $F39091 ( evictionLock ) { \n\t\ttry { \n\t\t\tdrainStatus . lazySet ( PROCESSING ) ; \n\t\t\tdrainBuffers ( ) ; \n\t\t\t} \n\t\tfinally { \n\t\t\tdrainStatus . compareAndSet ( PROCESSING , IDLE ) ; \n\t\t\t$F704 ( evictionLock ) } \n\t\t} \n\t} \n"}, {"code": "public void remove ( int i ) $F106 ( individuals , i ) "}, {"code": "public static boolean copyFile ( File source , File dest ) { \n\t$F4924 ( parentDest , dest ) if $F1906 ( parentDest ) { \n\t\tif ( ! $F40519 ( createDirectory , parentDest ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\ttry { \n\t\tFiles . copy ( source . toPath ( ) , dest . toPath ( ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t$F132878 ( e , _BOOL ) } \n"}, {"code": "public static String propertiesEncode ( Properties pp ) { \n\t$F1538 ( bos ) try { \n\t\tpp . store ( bos , NUM00 ) ; \n\t\t} \n\t$F272343 ( log , Level , e ) String result = new String $F87573 ( bos ) ; \n\ttry { \n\t\tresult = URLEncoder . encode ( result , MobileEnv . ENCODING ) ; \n\t\t} \n\tcatch ( UnsupportedEncodingException e ) { \n\t\tlog . log ( Level . SEVERE , NUM00 + MobileEnv . ENCODING , e ) ; \n\t\t$F27462 ( enc , System ) try { \n\t\t\tresult = URLEncoder . encode ( result , enc ) ; \n\t\t\t$F556 ( log , enc ) } \n\t\t$F209655 ( log , Level , ex ) } \n\treturn result ; \n\t} \n"}, {"code": "$F1 public void generateRss ( XmlWriter w , ExtensionProfile extProfile ) throws IOException { \n\tArrayList $F128418 attrs = new ArrayList $F128418 $F989 ; \n\tif ( mimeType != null ) { \n\t\tattrs . add ( new $F128417 ( NUM00 , mimeType . getMediaType ( ) ) ) ; \n\t\t} \n\t$F128437 ( uri , attrs ) if ( length != - NUM00 ) { \n\t\tattrs . add ( new $F128417 ( NUM00 , Long . toString ( length ) ) ) ; \n\t\t} \n\tw . simpleElement ( Namespaces . rssNs , NUM00 , attrs , null ) ; \n\t} \n"}, {"code": "public void testSortsElementsByName $F72 throws Exception $F234199 ( dom1 , XppFactory , dom2 , assertEquals , comparator , xpath ) "}, {"code": "public static boolean deleteDirectory ( final File path ) { \n\tif $F3428 ( path ) { \n\t\t$F5459 ( files , path ) for ( File file : files ) { \n\t\t\tif $F3444 ( file ) { \n\t\t\t\tdeleteDirectory ( file ) ; \n\t\t\t\t} \n\t\t\telse $F19636 ( file ) } \n\t\t} \n\t$F16252 ( path ) } \n"}, {"code": "public void morph ( Component source , Component destination , int duration , Runnable onCompletion ) { \n\tmorph ( source , destination , duration , _BOOL , onCompletion ) ; \n\t} \n"}, {"code": "public static Timestamp stringToTimeStamp ( String dateTimeString , String dateTimeFormat , TimeZone tz , Locale locale ) throws ParseException { \n\tDateFormat dateFormat = toDateTimeFormat ( dateTimeFormat , tz , locale ) ; \n\t$F126579 ( parsedDate , dateFormat , dateTimeString ) return $F16812 ( parsedDate ) ; \n\t} \n"}, {"code": "private boolean startsNewHunk ( String string ) { \n\t$F49299 ( string , _BOOL ) return $F95813 ( isLegalChar , string ) ; \n\t} \n"}, {"code": "public void clearValues $F72 $F9096 ( valueMap ) "}, {"code": "$F32569 ( panel , cols , rows , filler , filled_cell_11 , _BOOL , cc , Box , index ) "}, {"code": "private HashMap $F3068 readChars $F97 ( d ) { \n\tHashMap $F3068 hm = new HashMap $F3068 $F72 ; \n\tint i = findSlashName ( d , NUM00 ) ; \n\t$F7879 ( i , hm ) PSParser psp = new PSParser ( d , i ) ; \n\twhile ( _BOOL ) { \n\t\tString s = psp . readThing ( ) ; \n\t\t$F12685 ( c , s ) if ( c == NUM00 ) { \n\t\t\tint len = Integer . parseInt ( psp . readThing ( ) ) ; \n\t\t\tString go = psp . readThing ( ) ; \n\t\t\tif $F40270 ( go ) { \n\t\t\t\tpsp . setLoc ( psp . getLoc ( ) + NUM00 ) ; \n\t\t\t\t$F96 line = psp . getNEncodedBytes ( len , password , lenIV ) ; \n\t\t\t\thm . put ( s . substring ( NUM00 ) , line ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if $F3057 ( s ) $F5153 } \n\treturn hm ; \n\t} \n"}, {"code": "public static $F96 stringToByteArray ( String input ) { \n\tchar $F75414 = input . toCharArray ( ) ; \n\tbyte $F75368 = $F3027 ( chars ) ; \n\tfor ( $F1139 ( i , chars ) ) { \n\t\tbytes [ i ] = ( byte ) chars [ i ] ; \n\t\t} \n\treturn bytes ; \n\t} \n"}, {"code": "public void playFileForUser ( String fileName , String userName ) throws SoundPlaybackException { \n\tif $F4251 ( userName ) $F185872 ( userName , appProperties ) try { \n\t\tGuild guild = getUsersGuild ( userName ) ; \n\t\tjoinUsersCurrentChannel ( userName ) ; \n\t\tplayFile ( fileName , guild ) ; \n\t\t} \n\t$F1516 ( e ) } \n"}, {"code": "$F1309 public static void runFinalizersOnExit ( boolean run ) { \n\t$F8108 ( sm , System ) if ( sm != null ) { \n\t\tsm . checkExit ( NUM00 ) ; \n\t\t} \n\t$F37039 ( hooksList , finalizeOnExit , run ) } \n"}, {"code": "public $F3789 predictIntervals ( double conf ) { \n\tupdateMeanAndVariance ( ) ; \n\tdouble val = Statistics . normalInverse ( NUM00 - ( NUM00 - conf ) / NUM00 ) ; \n\t$F3789 $F90858 ( arr ) ; \n\tarr [ NUM00 ] [ NUM00 ] = m_Mean + val * Math . sqrt ( m_Variance ) ; \n\tarr [ NUM00 ] [ NUM00 ] = m_Mean - val * Math . sqrt ( m_Variance ) ; \n\treturn arr ; \n\t} \n"}, {"code": "public static $F4203 T min ( $F11638 ( collection ) , $F38875 ( comparator ) ) { \n\tif ( comparator == null ) { \n\t\t$F1431 T result = ( T ) min ( ( Collection < java . lang . Comparable > ) collection ) ; \n\t\treturn result ; \n\t\t} \n\t$F11642 ( it , collection ) $F11644 ( min , it ) while $F2921 ( it ) { \n\t\t$F11646 ( next , it ) if $F230914 ( comparator , min , next ) { \n\t\t\tmin = next ; \n\t\t\t} \n\t\t} \n\treturn min ; \n\t} \n"}, {"code": "public static boolean checkSHA $F158766 ( shaHash , file ) { \n\tif ( TextUtils . isEmpty ( shaHash ) || file == null || ! FileUtils . isReadable ( file ) ) { \n\t\t$F294495 ( Log ) return _BOOL ; \n\t\t} \n\tfinal String hash = getSHA ( file ) ; \n\tif ( hash == null ) { \n\t\t$F294495 ( Log ) return _BOOL ; \n\t\t} \n\t$F84030 ( hash , shaHash ) } \n"}, {"code": "public void addValueKeyName ( String key ) $F207 ( valueKeyNames , key ) "}, {"code": "public Assignment update ( Border border ) { \n\tArrays . sort ( cs ) ; \n\tint j = NUM00 ; \n\tboolean found = ( cs [ NUM00 ] . core == border . core ) ; \n\tfor ( $F1139 ( i , cs ) ) { \n\t\tif ( cs [ i ] . core != cs [ i - NUM00 ] . core ) { \n\t\t\tcs [ j ++ ] = cs [ i ] ; \n\t\t\t} \n\t\tfound |= ( cs [ i ] . core == border . core ) ; \n\t\t} \n\tif ( found ) { \n\t\tif ( j == NUM00 ) { \n\t\t\tBorder r = cs [ NUM00 ] ; \n\t\t\tcs = null ; \n\t\t\treturn r ; \n\t\t\t} \n\t\tif ( j < cs . length ) { \n\t\t\t$F8003 ( cs , Arrays , j ) } \n\t\treturn this ; \n\t\t} \n\tif ( j + NUM00 != cs . length ) { \n\t\tcs = Arrays . copyOf ( cs , j + NUM00 ) ; \n\t\t} \n\tcs [ j ] = border ; \n\treturn this ; \n\t} \n"}, {"code": "public static String fromChar ( int value ) { \n\tif ( value > NUM00 ) $F1274 String name ; \n\tinitialize ( ) ; \n\tname = ( String ) _byChar . get ( new Integer ( value ) ) ; \n\treturn name ; \n\t} \n"}, {"code": "public static $F3803 splitLines ( final String content ) { \n\tif $F6036 ( content ) $F12522 ( Collections ) $F6542 ( lines , content ) $F26323 ( Arrays , lines ) } \n"}, {"code": "$F1 public void draw ( Graphics2D g2 , Rectangle2D area , Point2D anchor , PlotState state , PlotRenderingInfo info ) { \n\tboolean b1 = ( area . getWidth ( ) <= MINIMUM_WIDTH_TO_DRAW ) ; \n\tboolean b2 = ( area . getHeight ( ) <= MINIMUM_HEIGHT_TO_DRAW ) ; \n\tif ( b1 || b2 ) $F932 if ( info != null ) { \n\t\tinfo . setPlotArea ( area ) ; \n\t\t} \n\tRectangleInsets insets = getInsets ( ) ; \n\tinsets . trim ( area ) ; \n\tdrawChipGrid ( g2 , area ) ; \n\tdrawWaferEdge ( g2 , area ) ; \n\t} \n"}, {"code": "public void addHole ( EdgeRing holeER ) { \n\tholeER . setShell ( this ) ; \n\tLinearRing hole = holeER . getRing ( ) ; \n\t$F92209 ( holes ) holes . add ( hole ) ; \n\t} \n"}, {"code": "private static void registerComponents $F72 { \n\tregisterComponent ( BarChartComponent . class , BarChartGui . class ) ; \n\tregisterComponent ( DocViewerComponent . class , DocViewerDesktopComponent . class ) ; \n\tregisterComponent ( ConsoleComponent . class , ConsoleDesktopComponent . class ) ; \n\tregisterComponent ( DisplayComponent . class , DisplayComponentDesktopGui . class ) ; \n\tregisterComponent ( DataWorldComponent . class , DataWorldDesktopComponent . class ) ; \n\tregisterComponent ( HistogramComponent . class , HistogramGui . class ) ; \n\tregisterComponent ( NetworkComponent . class , NetworkDesktopComponent . class ) ; \n\tregisterComponent ( OdorWorldComponent . class , OdorWorldDesktopComponent . class ) ; \n\tregisterComponent ( PieChartComponent . class , PieChartGui . class ) ; \n\tregisterComponent ( ProjectionComponent . class , ProjectionGui . class ) ; \n\tregisterComponent ( ReaderComponent . class , ReaderComponentDesktopGui . class ) ; \n\tregisterComponent ( ScatterPlotComponent . class , ScatterPlotGui . class ) ; \n\tregisterComponent ( TimeSeriesPlotComponent . class , TimeSeriesPlotGui . class ) ; \n\tregisterComponent ( RasterPlotComponent . class , RasterPlotGui . class ) ; \n\tregisterComponent ( VisionWorldComponent . class , VisionWorldDesktopComponent . class ) ; \n\tregisterComponent ( GameComponent . class , GameDesktopComponent . class ) ; \n\tregisterComponent ( DeviceInteractionComponent . class , DeviceInteractionDesktopComponent . class ) ; \n\t} \n"}, {"code": "$F26776 ( container , mContainers ) "}, {"code": "private void initialize ( $F66526 opsType , Interface instance ) throws $F6730 $F245977 ( mOpsInstance , opsType , mRetainedFragmentManager , instance , _BOOL ) "}, {"code": "private long skipInputBytes ( long n ) throws IOException { \n\t$F8934 ( cbLock ) try { \n\t\treturn iis . skipBytes ( n ) ; \n\t\t} \n\t$F796 ( cbLock ) } \n"}, {"code": "public $F96 generate64BitHashId $F72 throws CryptoException { \n\ttry { \n\t\tDERBitString publicKeyBitString = encodePublicKeyAsBitString ( publicKey ) ; \n\t\t$F96 hash = DigestUtil . getMessageDigest ( publicKeyBitString . getBytes ( ) , DigestType . SHA1 ) ; \n\t\t$F96 subHash = Arrays . copyOfRange ( hash , NUM00 , NUM00 ) ; \n\t\tsubHash [ NUM00 ] &= NUM00 ; \n\t\tsubHash [ NUM00 ] |= NUM00 ; \n\t\treturn subHash ; \n\t\t} \n\tcatch ( IOException ex ) $F102881 ( res , ex ) } \n"}, {"code": "public static < C extends ConfigurationClient , S extends Configuration > CreateSubCommandHandler $F437105 create ( SubCommandArgumentParser parser , $F303831 ( p ) , OptionalRelationDefinition $F437105 r ) throws ArgumentException { \n\treturn new CreateSubCommandHandler $F200 ( parser , p , r , null , p . child ( r ) ) ; \n\t} \n"}, {"code": "public DSubjectInformationAccess $F157465 ( parent , value ) throws IOException $F157466 ( super , parent , setTitle , res , initComponents , prepopulateWithValue , value ) "}, {"code": "public void testSignerStringIdentityScope $F72 throws Exception { \n\tSigner s = new SignerStub ( NUM00 , IdentityScope . getSystemScope ( ) ) ; \n\tassertNotNull ( s ) ; \n\t$F64976 ( assertEquals , s ) assertSame ( IdentityScope . getSystemScope ( ) , s . getScope ( ) ) ; \n\t$F330425 ( assertNull , s ) try { \n\t\tSigner s2 = new SignerStub ( NUM00 , IdentityScope . getSystemScope ( ) ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\tcatch ( KeyManagementException e ) $F845 Signer s2 = new SignerStub $F8320 ; \n\t$F12110 ( assertNull , s2 ) } \n"}, {"code": "private Figure readLineElement ( IXMLElement elem ) throws IOException { \n\tHashMap < AttributeKey , Object > a = new HashMap < AttributeKey , Object > $F72 ; \n\treadCoreAttributes ( elem , a ) ; \n\treadTransformAttribute ( elem , a ) ; \n\treadOpacityAttribute ( elem , a ) ; \n\treadLineAttributes ( elem , a ) ; \n\tif ( FILL_COLOR . get ( a ) != null && STROKE_COLOR . get ( a ) == null ) $F103853 ( STROKE_COLOR , a , FILL_COLOR ) if ( FILL_GRADIENT . get ( a ) != null && STROKE_GRADIENT . get ( a ) == null ) $F103853 ( STROKE_GRADIENT , a , FILL_GRADIENT ) $F16843 ( FILL_COLOR , a ) $F16843 ( FILL_GRADIENT , a ) double x1 = toNumber ( elem , readAttribute ( elem , NUM00 , NUM00 ) ) ; \n\tdouble y1 = toNumber ( elem , readAttribute ( elem , NUM00 , NUM00 ) ) ; \n\tdouble x2 = toNumber ( elem , readAttribute ( elem , NUM00 , NUM00 ) ) ; \n\tdouble y2 = toNumber ( elem , readAttribute ( elem , NUM00 , NUM00 ) ) ; \n\tFigure figure = factory . createLine ( x1 , y1 , x2 , y2 , a ) ; \n\telementObjects . put ( elem , figure ) ; \n\treturn figure ; \n\t} \n"}, {"code": "public ListModel ( final $F131 items ) { \n\tfor ( $F9808 ( i , items ) ) $F24616 ( m_items , items , i ) } \n"}, {"code": "public boolean isSetCallType $F72 $F8314 ( __isset_bit_vector , __CALLTYPE_ISSET_ID ) "}, {"code": "private IBuffer mapSource ( SourceMapper mapper , IBinaryType info , IClassFile bufferOwner ) { \n\t$F1469 contents = mapper . findSource ( getType ( ) , info ) ; \n\tif ( contents != null ) { \n\t\tIBuffer buffer = BufferManager . createBuffer ( bufferOwner ) ; \n\t\t$F1275 ( buffer ) BufferManager bufManager = getBufferManager ( ) ; \n\t\tbufManager . addBuffer ( buffer ) ; \n\t\tif ( buffer . getCharacters ( ) == null ) { \n\t\t\tbuffer . setContents ( contents ) ; \n\t\t\t} \n\t\tbuffer . addBufferChangedListener ( this ) ; \n\t\tmapper . mapSource ( getOuterMostEnclosingType ( ) , contents , info ) ; \n\t\treturn buffer ; \n\t\t} \n\telse { \n\t\tIBuffer buffer = BufferManager . createNullBuffer ( bufferOwner ) ; \n\t\t$F1275 ( buffer ) BufferManager bufManager = getBufferManager ( ) ; \n\t\tbufManager . addBuffer ( buffer ) ; \n\t\tbuffer . addBufferChangedListener ( this ) ; \n\t\treturn buffer ; \n\t\t} \n\t} \n"}, {"code": "public JFileDataStoreChooser ( Shell parent , int style , $F20109 ( extensions ) ) { \n\tthis ( parent , style , associations ( extensions ) ) ; \n\t} \n"}, {"code": "private void computeStaticLoadMetrics ( AccessProfile accessProfile ) throws BaseCollectionException { \n\tURI storageSystemId = accessProfile . getSystemId ( ) ; \n\tStorageSystem storageSystem = null ; \n\ttry { \n\t\tstorageSystem = _dbClient . queryObject ( $F41797 , storageSystemId ) ; \n\t\t_logger . info ( $F158210 ( storageSystem ) ) ; \n\t\tVNXeApiClient client = getVnxUnityClient ( accessProfile ) ; \n\t\tList < VNXeNasServer > nasServers = client . getNasServers ( ) ; \n\t\tfor ( VNXeNasServer nasServer : nasServers ) { \n\t\t\tif ( ( nasServer . getMode ( ) == VNXeNasServer . NasServerModeEnum . DESTINATION ) || nasServer . getIsReplicationDestination ( ) ) { \n\t\t\t\t$F980 ( _logger ) $F598 } \n\t\t\tif ( nasServer . getIsSystem ( ) ) $F1448 VirtualNAS virtualNAS = findvNasByNativeId ( storageSystem , nasServer . getId ( ) ) ; \n\t\t\tif ( virtualNAS != null ) { \n\t\t\t\t_logger . info ( $F20534 ( nasServer ) ) ; \n\t\t\t\tStringMap dbMetrics = virtualNAS . getMetrics ( ) ; \n\t\t\t\tif ( dbMetrics == null ) { \n\t\t\t\t\tdbMetrics = new StringMap $F72 ; \n\t\t\t\t\t} \n\t\t\t\tStringMap tmpDbMetrics = populateDbMetrics ( nasServer , client ) ; \n\t\t\t\tdbMetrics . putAll ( tmpDbMetrics ) ; \n\t\t\t\tvirtualNAS . setMetrics ( dbMetrics ) ; \n\t\t\t\t_dbClient . updateObject ( virtualNAS ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) $F73607 ( _logger , storageSystemId , e ) } \n"}, {"code": "public final short readShort $F72 throws $F3258 { \n\treadFully ( scratch , NUM00 , NUM00 ) ; \n\treturn ( short ) ( $F42449 ( scratch ) | $F18896 ( scratch ) ) ; \n\t} \n"}, {"code": "public ReplicationJob createJobForCopyPartition ( long auditLogId , long auditLogEntryCreateTime , HiveObjectSpec spec ) throws StateUpdateException { \n\t$F35131 ( extras ) extras . put ( PersistedJobInfo . AUDIT_LOG_ID_EXTRAS_KEY , Long . toString ( auditLogId ) ) ; \n\textras . put ( PersistedJobInfo . AUDIT_LOG_ENTRY_CREATE_TIME_KEY , Long . toString ( auditLogEntryCreateTime ) ) ; \n\t$F24645 ( partitionNames ) partitionNames . add ( spec . getPartitionName ( ) ) ; \n\tReplicationOperation replicationOperation = ReplicationOperation . COPY_PARTITION ; \n\tPersistedJobInfo persistedJobInfo = jobInfoStore . resilientCreate ( replicationOperation , ReplicationStatus . PENDING , Optional . empty ( ) , srcCluster . getName ( ) , spec , partitionNames , Optional . empty ( ) , Optional . empty ( ) , Optional . empty ( ) , extras ) ; \n\tReplicationTask replicationTask = new CopyPartitionTask ( conf , destinationObjectFactory , objectConflictHandler , srcCluster , destCluster , spec , Optional . $F72371 empty $F72 , Optional . $F72371 empty $F72 , directoryCopier , _BOOL ) ; \n\treturn new ReplicationJob ( conf , replicationTask , onStateChangeHandler , persistedJobInfo ) ; \n\t} \n"}, {"code": "$F9749 ( namespace , attName , attValue , xmlWriter , registerPrefix ) "}, {"code": "public static void main ( String ... args ) throws Exception { \n\t$F806 pages = { \n\t\tNUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\t$F83 ( buff ) for ( String fileName : pages ) { \n\t\tString text = getContent ( fileName ) ; \n\t\tfor ( String page : pages ) { \n\t\t\ttext = StringUtils . replaceAll ( text , page + NUM00 , NUM00 ) ; \n\t\t\t} \n\t\ttext = disableRailroads ( text ) ; \n\t\ttext = removeHeaderFooter ( fileName , text ) ; \n\t\tbuff . append ( text ) ; \n\t\t} \n\t$F1822 ( finalText , buff ) $F109797 ( output , BASE_DIR ) PrintWriter writer = new PrintWriter ( new FileWriter ( output ) ) ; \n\twriter . println ( NUM00 + NUM00 ) ; \n\t$F8438 ( writer ) writer . println ( NUM00 + NUM00 ) ; \n\t$F8438 ( writer ) writer . println ( NUM00 + Constants . getFullVersion ( ) + NUM00 ) ; \n\twriter . println ( finalText ) ; \n\t$F8438 ( writer ) $F59 ( writer ) } \n"}, {"code": "public static $F529 findOrders $F71242 ( dctx , context ) $F19580 ( findOrders , dctx , context , _BOOL ) "}, {"code": "public static boolean isFileExist ( String filePath ) { \n\tif $F7283 ( StringUtils , filePath ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F1705 ( file , filePath ) return $F60822 ( file ) ; \n\t} \n"}, {"code": "public static PronghornStage findStageByPath ( GraphManager m , int ... path ) { \n\tint ordinal = path [ NUM00 ] ; \n\tint i = NUM00 ; \n\tint limit = m . stageIdToStage . length ; \n\twhile ( i < limit ) { \n\t\tif ( null != m . stageIdToStage [ i ] ) { \n\t\t\tif ( - NUM00 == m . multInputIds [ m . stageIdToInputsBeginIdx [ m . stageIdToStage [ i ] . stageId ] ] ) { \n\t\t\t\tif ( -- ordinal <= NUM00 ) { \n\t\t\t\t\treturn findStageByPath ( m , m . stageIdToStage [ i ] , NUM00 , path ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\ti ++ ; \n\t\t} \n\tthrow new UnsupportedOperationException ( NUM00 + path [ NUM00 ] ) ; \n\t} \n"}, {"code": "public static $F1986 calculateTStats $F93381 ( coef , stderror , k ) { \n\t$F9662 ( result , k ) for ( $F119 ( i , k ) ) { \n\t\tresult [ i ] = coef [ i ] / stderror [ i ] ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "static void runBootstrappers ( final CoreEarlyComponent early , final List < HeroicBootstrap > bootstrappers ) throws Exception { \n\tfor ( final HeroicBootstrap bootstrap : bootstrappers ) { \n\t\ttry { \n\t\t\tbootstrap . run ( early ) ; \n\t\t\t} \n\t\tcatch ( Exception e ) { \n\t\t\tthrow new Exception ( NUM00 + bootstrap , e ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static $F96 checkIndexHeaderID ( DataInput in , $F96 expectedID ) throws IOException { \n\tbyte id [ ] = new byte [ StringHelper . ID_LENGTH ] ; \n\tin . readBytes ( id , NUM00 , id . length ) ; \n\tif $F1209 ( Arrays , id , expectedID ) { \n\t\tthrow new CorruptIndexException ( NUM00 + StringHelper . idToString ( expectedID ) + NUM00 + StringHelper . idToString ( id ) , in ) ; \n\t\t} \n\treturn id ; \n\t} \n"}, {"code": "public $F96 toByteArray $F72 { \n\t$F1208 ( b , output ) ByteArray . write16bit ( numOfEntries , b , NUM00 ) ; \n\treturn b ; \n\t} \n"}, {"code": "protected void saveBuffer ( String name ) { \n\tStringBuffer sb = m_History . getNamedBuffer ( name ) ; \n\tif ( sb != null ) { \n\t\tif ( m_SaveOut . save ( sb ) ) { \n\t\t\tm_Log . logMessage ( NUM00 ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public $F46031 scheduleStorage ( VirtualArray srcVarray , $F4324 requestedVPlexSystems , URI srcStorageSystem , VirtualPool srcVpool , boolean isHARequest , VirtualArray requestedHaVarray , VirtualPool haVpool , VirtualPoolCapabilityValuesWrapper capabilities , Project project , VpoolUse vpoolUse , Map < VpoolUse , $F46031 > currentRecommendations ) { \n\t$F973 ( _log ) if ( ! isHARequest ) { \n\t\treturn scheduleStorageForLocalVPLEXVolume ( srcVarray , requestedVPlexSystems , srcStorageSystem , srcVpool , capabilities , project , vpoolUse , currentRecommendations ) ; \n\t\t} \n\telse { \n\t\treturn scheduleStorageForDistributedVPLEXVolume ( srcVarray , requestedVPlexSystems , srcStorageSystem , srcVpool , requestedHaVarray , haVpool , capabilities , project , vpoolUse , currentRecommendations ) ; \n\t\t} \n\t} \n"}, {"code": "$F1113 public static $F3803 completeRelativePath ( $F1113 String baseDir , $F1113 String shownBaseDir , $F1113 String relativePath ) { \n\t$F3803 result = Lists . newLinkedList ( ) ; \n\tString bashBaseDir = OSUtil . toBashCompatible ( baseDir ) ; \n\tfor ( String path : completeAbsolutePath ( baseDir + File . separator + relativePath , Predicates . $F11299 alwaysTrue $F72 ) ) { \n\t\tif $F7311 ( path , bashBaseDir ) { \n\t\t\tresult . add ( shownBaseDir + $F8182 ( path , bashBaseDir ) ) ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "protected boolean isFileSpecifyingModuleSpecifier ( String specifier ) { \n\treturn $F20 ( specifier ) && $F7792 ( specifier ) != IPath . SEPARATOR ; \n\t} \n"}, {"code": "private void insertExpectedPoolSettingsPerTier ( CIMObjectPath capabilitiesPath , $F2100 ( keyMap ) ) { \n\t$F3803 expectedPoolSettingsTier = ( $F3803 ) keyMap . get ( Constants . VNXPOOLCAPABILITIES_TIER ) ; \n\texpectedPoolSettingsTier . add ( capabilitiesPath . toString ( ) + Constants . HYPHEN + Constants . NO_DATA_MOVEMENT ) ; \n\texpectedPoolSettingsTier . add ( capabilitiesPath . toString ( ) + Constants . HYPHEN + Constants . AUTO_TIER ) ; \n\texpectedPoolSettingsTier . add ( capabilitiesPath . toString ( ) + Constants . HYPHEN + Constants . HIGH_AVAILABLE_TIER ) ; \n\texpectedPoolSettingsTier . add ( capabilitiesPath . toString ( ) + Constants . HYPHEN + Constants . LOW_AVAILABLE_TIER ) ; \n\texpectedPoolSettingsTier . add ( capabilitiesPath . toString ( ) + Constants . HYPHEN + Constants . START_HIGH_THEN_AUTO_TIER ) ; \n\t} \n"}, {"code": "private static final void transferStreams ( InputStream source , OutputStream destination , String path , IProgressMonitor monitor ) throws CoreException { \n\tmonitor = Policy . monitorFor ( monitor ) ; \n\ttry { \n\t\tsynchronized ( buffer ) { \n\t\t\twhile ( _BOOL ) { \n\t\t\t\tint bytesRead = - NUM00 ; \n\t\t\t\ttry $F616 ( bytesRead , source , buffer ) catch ( IOException e ) { \n\t\t\t\t\tString msg = NLS . bind ( Messages . failedReadDuringWrite , path ) ; \n\t\t\t\t\tPolicy . error ( EFS . ERROR_READ , msg , e ) ; \n\t\t\t\t\t} \n\t\t\t\ttry { \n\t\t\t\t\tif ( bytesRead == - NUM00 ) { \n\t\t\t\t\t\t$F59 ( destination ) $F597 } \n\t\t\t\t\t$F11584 ( destination , buffer , bytesRead ) } \n\t\t\t\tcatch ( IOException e ) { \n\t\t\t\t\tString msg = NLS . bind ( Messages . couldNotWrite , path ) ; \n\t\t\t\t\tPolicy . error ( EFS . ERROR_WRITE , msg , e ) ; \n\t\t\t\t\t} \n\t\t\t\tmonitor . worked ( NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tfinally { \n\t\tPolicy . safeClose ( source ) ; \n\t\tPolicy . safeClose ( destination ) ; \n\t\t} \n\t} \n"}, {"code": "private int pathPositionAtLevel ( int orgUnitLevel ) { \n\treturn ( orgUnitLevel - NUM00 ) * NUM00 + NUM00 ; \n\t} \n"}, {"code": "private int makeAvailable $F72 { \n\tif ( pos != - NUM00 ) $F1083 total += tail - head - pad ; \n\tSystem . arraycopy ( buffer , tail - pad , buffer , NUM00 , pad ) ; \n\thead = NUM00 ; \n\ttail = pad ; \n\tfor ( $F589 ) { \n\t\tint bytesRead = NUM00 ; \n\t\ttry { \n\t\t\tbytesRead = input . read ( buffer , tail , bufSize - tail ) ; \n\t\t\t} \n\t\tcatch ( IOException e ) $F11389 if ( bytesRead == - NUM00 ) { \n\t\t\tfinal String msg = NUM00 ; \n\t\t\tthrow new MalformedStreamException ( msg ) ; \n\t\t\t} \n\t\ttail += bytesRead ; \n\t\tfindSeparator ( ) ; \n\t\tint av = available ( ) ; \n\t\tif ( av > NUM00 || pos != - NUM00 ) { \n\t\t\treturn av ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void addNumericTrainClass ( double classValue , double weight ) { \n\t$F12283 ( classValue , m_MaxTarget ) $F45132 ( classValue , m_MinTarget ) if ( m_TrainClassVals == null ) { \n\t\t$F90860 ( m_TrainClassVals ) $F90860 ( m_TrainClassWeights ) } \n\tif ( m_NumTrainClassVals == m_TrainClassVals . length ) { \n\t\t$F1986 temp = new double $F10562 ( m_TrainClassVals ) ; \n\t\t$F7057 ( System , m_TrainClassVals , temp ) m_TrainClassVals = temp ; \n\t\ttemp = new double $F10562 ( m_TrainClassWeights ) ; \n\t\t$F7057 ( System , m_TrainClassWeights , temp ) m_TrainClassWeights = temp ; \n\t\t} \n\tm_TrainClassVals [ m_NumTrainClassVals ] = classValue ; \n\tm_TrainClassWeights [ m_NumTrainClassVals ] = weight ; \n\tm_NumTrainClassVals ++ ; \n\t} \n"}, {"code": "private List < Group > parseGroups ( JSONArray groups , String groupType ) throws JSONException , AdeUsageException { \n\tif $F1277 ( groups ) throw new AdeUsageException ( NUM00 + groupType ) ; \n\tList < Group > currentGroups = new ArrayList < Group > $F72 ; \n\tfor ( $F1088 ( i , groups ) ) { \n\t\tJSONObject group = groups . getJSONObject ( i ) ; \n\t\t$F21024 ( name , group ) $F21024 ( dataType , group ) short evalOrder = group . getShort ( NUM00 ) ; \n\t\t$F21024 ( ruleName , group ) if ( ! verifyStringParam ( name , NUM00 , NUM00 ) || name . equalsIgnoreCase ( NUM00 ) || ! validateDataType ( dataType ) || evalOrder < NUM00 || ! verifyStringParam ( ruleName , NUM00 , NUM00 ) ) { \n\t\t\tthrow new AdeUsageException ( NUM00 + groupType + NUM00 ) ; \n\t\t\t} \n\t\tcurrentGroups . add ( new Group ( name , GroupType . valueOf ( groupType ) , DataType . valueOf ( dataType . toUpperCase ( ) ) , evalOrder , ruleName ) ) ; \n\t\t} \n\tvalidateEvaluationOrderAndName ( currentGroups ) ; \n\treturn currentGroups ; \n\t} \n"}, {"code": "$F73303 ( axis , trans , prevImageSize , imageSize , prevViewSize , viewSize , drawableSize , m , Matrix , percentage , Math ) "}, {"code": "public DoubleFft1d ( int n ) { \n\t$F6853 ( n ) this . n = n ; \n\tif ( ! ConcurrencyUtils . isPowerOf2 ( n ) ) { \n\t\tif ( getReminder ( n , factors ) >= NUM00 ) { \n\t\t\tplan = Plans . BLUESTEIN ; \n\t\t\tnBluestein = ConcurrencyUtils . nextPow2 ( n * NUM00 - NUM00 ) ; \n\t\t\tbk1 = new double [ NUM00 * nBluestein ] ; \n\t\t\tbk2 = new double [ NUM00 * nBluestein ] ; \n\t\t\tthis . ip = new int [ NUM00 + ( int ) Math . ceil ( NUM00 + ( NUM00 < < ( int ) ( Math . log ( nBluestein + NUM00 ) / Math . log ( NUM00 ) ) / NUM00 ) ) ] ; \n\t\t\tthis . w = new double [ nBluestein ] ; \n\t\t\tint twon = NUM00 * nBluestein ; \n\t\t\tnw = ip [ NUM00 ] ; \n\t\t\tif ( twon > ( nw < < NUM00 ) ) { \n\t\t\t\tnw = twon > > NUM00 ; \n\t\t\t\tmakewt ( nw ) ; \n\t\t\t\t} \n\t\t\tnc = ip [ NUM00 ] ; \n\t\t\tif ( nBluestein > ( nc < < NUM00 ) ) { \n\t\t\t\tnc = nBluestein > > NUM00 ; \n\t\t\t\tmakect ( nc , w , nw ) ; \n\t\t\t\t} \n\t\t\tbluesteini ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\tplan = Plans . MIXED_RADIX ; \n\t\t\twtable = new double [ NUM00 * n + NUM00 ] ; \n\t\t\twtable_r = new double [ NUM00 * n + NUM00 ] ; \n\t\t\tcffti ( ) ; \n\t\t\trffti ( ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tplan = Plans . SPLIT_RADIX ; \n\t\tthis . ip = new int [ NUM00 + ( int ) Math . ceil ( NUM00 + ( NUM00 < < ( int ) ( Math . log ( n + NUM00 ) / Math . log ( NUM00 ) ) / NUM00 ) ) ] ; \n\t\tthis . w = new double [ n ] ; \n\t\tint twon = NUM00 * n ; \n\t\tnw = ip [ NUM00 ] ; \n\t\tif ( twon > ( nw < < NUM00 ) ) { \n\t\t\tnw = twon > > NUM00 ; \n\t\t\tmakewt ( nw ) ; \n\t\t\t} \n\t\tnc = ip [ NUM00 ] ; \n\t\tif ( n > ( nc < < NUM00 ) ) { \n\t\t\tnc = n > > NUM00 ; \n\t\t\tmakect ( nc , w , nw ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public void dragGestureRecognized ( DragGestureEvent evt ) { \n\tDragEntry dragEntry = kseFrame . dragSelectedEntry ( ) ; \n\t$F2329 ( dragEntry ) ImageIcon icon = dragEntry . getImage ( ) ; \n\t$F170001 ( toolkit , Toolkit ) Dimension dim = toolkit . getBestCursorSize ( icon . getIconWidth ( ) , icon . getIconHeight ( ) ) ; \n\tBufferedImage buffImage = new BufferedImage ( dim . width , dim . height , BufferedImage . TYPE_INT_ARGB_PRE ) ; \n\ticon . paintIcon ( evt . getComponent ( ) , buffImage . getGraphics ( ) , NUM00 , NUM00 ) ; \n\tcursor = toolkit . createCustomCursor ( buffImage , $F69159 , NUM00 ) ; \n\tevt . startDrag ( cursor , new KeyStoreEntryTransferable ( dragEntry ) , this ) ; \n\t} \n"}, {"code": "public static boolean isIdentifierHelperChar ( char ch ) { \n\treturn NUM00 == ch || NUM00 == ch || NUM00 == ch || NUM00 == ch ; \n\t} \n"}, {"code": "public void addHeader ( String line ) $F207 ( header , line ) "}, {"code": "public static IAddress loadAddress ( final ResultSet resultSet , final String columnName ) throws SQLException { \n\t$F1832 ( Preconditions , resultSet ) $F1832 ( Preconditions , columnName ) final String addressString = readString ( resultSet , columnName ) ; \n\treturn resultSet . wasNull ( ) ? null : new CAddress ( new BigInteger ( addressString ) ) ; \n\t} \n"}, {"code": "private static String encode ( String stringToEncode ) { \n\tString encoded ; \n\ttry { \n\t\tencoded = URLEncoder . encode ( stringToEncode , UTF_8 ) ; \n\t\t} \n\tcatch ( UnsupportedEncodingException e ) $F235380 ( e ) $F2936 ( encoded ) $F2936 ( encoded ) $F2936 ( encoded ) return encoded ; \n\t} \n"}, {"code": "public static String toGetUrl ( String url , Bundle params ) { \n\tif ( params != null ) { \n\t\t$F2366 ( url ) for ( $F3465 ( key , params ) ) { \n\t\t\turl = url + key + NUM00 + params . getString ( key ) + NUM00 ; \n\t\t\t} \n\t\t} \n\treturn url ; \n\t} \n"}, {"code": "public void namespaceAfterStartElement ( String prefix , String uri ) throws SAXException { \n\tif ( m_firstTagNotEmitted && m_firstElementURI == null && m_firstElementName != null ) { \n\t\tString prefix1 = getPrefixPart ( m_firstElementName ) ; \n\t\tif ( prefix1 == null && EMPTY <missing ')'> $F94540 ( prefix ) ) { \n\t\t\tm_firstElementURI = uri ; \n\t\t\t} \n\t\t} \n\tstartPrefixMapping ( prefix , uri , _BOOL ) ; \n\t} \n"}, {"code": "protected static String guessType ( File file ) { \n\t$F20605 ( name , file ) $F37864 ( suffix , name ) return mimeMap . get ( $F131081 ( suffix , Locale ) ) ; \n\t} \n"}, {"code": "public void testAdvanceAllTerms $F72 throws Exception { \n\t$F24645 ( termsList ) $F9629 ( termsList , Arrays , commonTerms ) $F9629 ( termsList , Arrays , mediumTerms ) $F9629 ( termsList , Arrays , rareTerms ) String terms [ ] = $F16104 ( termsList ) ; \n\tfor ( $F5151 ( amount ) ) { \n\t\tfor ( $F33988 ( minNrShouldMatch , terms ) ) { \n\t\t\tScorer expected = scorer ( terms , minNrShouldMatch , Mode . DOC_VALUES ) ; \n\t\t\tScorer actual = scorer ( terms , minNrShouldMatch , Mode . SCORER ) ; \n\t\t\tassertAdvance ( expected , actual , amount ) ; \n\t\t\texpected = scorer ( terms , minNrShouldMatch , Mode . DOC_VALUES ) ; \n\t\t\tactual = scorer ( terms , minNrShouldMatch , Mode . BULK_SCORER ) ; \n\t\t\tassertAdvance ( expected , actual , amount ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean isPublic $F72 { \n\treturn Modifier . isPublic ( getAccessFlags ( ) ) ; \n\t} \n"}, {"code": "public boolean releaseEncumbranceBudget ( $F87266 ( detailsMap ) ) { \n\tif ( detailsMap == null ) throw new ValidationException ( Arrays . asList ( new ValidationError $F6600 ) ) ; \n\tdetailsMap . put ( Constants . CONSUMEORRELEASE , _BOOL ) ; \n\tfinal BigDecimal bd = getDetails ( detailsMap ) ; \n\treturn $F179074 ( bd ) ; \n\t} \n"}, {"code": "protected Transferable createLocaleTransferable $F101011 ( formats ) throws IOException $F1337 "}, {"code": "public void putLength ( int len ) throws IOException { \n\tif ( len < NUM00 ) { \n\t\twrite ( ( byte ) len ) ; \n\t\t} \n\telse if ( len < $F152872 ) { \n\t\twrite ( $F19905 ) ; \n\t\twrite ( ( byte ) len ) ; \n\t\t} \n\telse if ( len < $F152872 ) { \n\t\twrite ( $F19905 ) ; \n\t\twrite ( $F8043 ( len ) ) ; \n\t\twrite ( ( byte ) len ) ; \n\t\t} \n\telse if ( len < $F152872 ) { \n\t\twrite ( $F19905 ) ; \n\t\twrite ( $F8043 ( len ) ) ; \n\t\twrite ( $F8043 ( len ) ) ; \n\t\twrite ( ( byte ) len ) ; \n\t\t} \n\telse { \n\t\twrite ( $F19905 ) ; \n\t\twrite ( $F8043 ( len ) ) ; \n\t\twrite ( $F8043 ( len ) ) ; \n\t\twrite ( $F8043 ( len ) ) ; \n\t\twrite ( ( byte ) len ) ; \n\t\t} \n\t} \n"}, {"code": "public void putGenericFontFamily ( String familyName , Font font ) $F19138 ( genericFontFamilies , familyName , font ) "}, {"code": "private boolean writeReference ( Object value , NodeMap node ) { \n\tString name = get ( value ) ; \n\t$F29168 ( size ) if ( name != null ) $F67896 ( node , refer , name , _BOOL ) $F2544 ( unique , String , size ) node . put ( mark , unique ) ; \n\tput ( value , unique ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private NSObject parseData $F72 throws ParseException { \n\tNSObject obj = null ; \n\tskip ( ) ; \n\tif ( accept ( DATA_GSOBJECT_BEGIN_TOKEN ) ) { \n\t\tskip ( ) ; \n\t\texpect ( DATA_GSBOOL_BEGIN_TOKEN , DATA_GSDATE_BEGIN_TOKEN , DATA_GSINT_BEGIN_TOKEN , DATA_GSREAL_BEGIN_TOKEN ) ; \n\t\tif ( accept ( DATA_GSBOOL_BEGIN_TOKEN ) ) { \n\t\t\tskip ( ) ; \n\t\t\texpect ( DATA_GSBOOL_TRUE_TOKEN , DATA_GSBOOL_FALSE_TOKEN ) ; \n\t\t\tif ( accept ( DATA_GSBOOL_TRUE_TOKEN ) ) { \n\t\t\t\t$F256895 ( obj , _BOOL ) } \n\t\t\telse { \n\t\t\t\t$F256895 ( obj , _BOOL ) } \n\t\t\tskip ( ) ; \n\t\t\t} \n\t\telse if ( accept ( DATA_GSDATE_BEGIN_TOKEN ) ) { \n\t\t\tskip ( ) ; \n\t\t\tString dateString = readInputUntil ( DATA_END_TOKEN ) ; \n\t\t\tobj = new NSDate ( dateString ) ; \n\t\t\t} \n\t\telse if ( accept ( DATA_GSINT_BEGIN_TOKEN , DATA_GSREAL_BEGIN_TOKEN ) ) { \n\t\t\tskip ( ) ; \n\t\t\tString numberString = readInputUntil ( DATA_END_TOKEN ) ; \n\t\t\t$F256895 ( obj , numberString ) } \n\t\tread ( DATA_END_TOKEN ) ; \n\t\t} \n\telse { \n\t\tString dataString = readInputUntil ( DATA_END_TOKEN ) ; \n\t\t$F2899 ( dataString ) $F203657 ( numBytes , dataString ) $F2175 ( bytes , numBytes ) for ( $F1139 ( i , bytes ) ) { \n\t\t\tString byteString = dataString . substring ( i * NUM00 , i * NUM00 + NUM00 ) ; \n\t\t\t$F241425 ( byteValue , Integer , byteString ) $F8214 ( bytes , i , byteValue ) } \n\t\tobj = new NSData ( bytes ) ; \n\t\tskip ( ) ; \n\t\t} \n\treturn obj ; \n\t} \n"}, {"code": "public boolean empty $F72 { \n\t$F214965 ( individuals ) } \n"}, {"code": "$F1 public String format ( DateTimeFormatter formatter ) { \n\t$F10578 ( Objects , formatter ) $F5330 ( formatter , this ) } \n"}, {"code": "public $F40687 String toDottedClassName $F72 { \n\treturn ClassName . toDottedClassName ( className ) ; \n\t} \n"}, {"code": "public DAddExtensions ( JFrame parent , String title , X509ExtensionSet extensions , PublicKey authorityPublicKey , X500Name authorityCertName , BigInteger authorityCertSerialNumber , PublicKey subjectPublicKey ) { \n\t$F36748 ( super , parent , Dialog ) $F15426 ( setTitle , res ) this . extensions = extensions ; \n\tthis . authorityPublicKey = authorityPublicKey ; \n\tthis . authorityCertName = authorityCertName ; \n\tthis . authorityCertSerialNumber = authorityCertSerialNumber ; \n\tthis . subjectPublicKey = subjectPublicKey ; \n\tinitComponents ( ) ; \n\t} \n"}, {"code": "private void playNext $F72 { \n\tif ( mediaType == Config . YOUTUBE_MEDIA_TYPE_VIDEO ) { \n\t\tseekVideo ( NUM00 ) ; \n\t\trestartVideo ( ) ; \n\t\t$F665 } \n\tif ( previousWasCalled ) { \n\t\tpreviousWasCalled = _BOOL ; \n\t\t$F24630 ( iterator ) } \n\tif $F87568 ( iterator ) { \n\t\t$F106110 ( iterator , youTubeVideos ) } \n\t$F45366 ( videoItem , iterator ) nextWasCalled = _BOOL ; \n\tplayVideo ( ) ; \n\t} \n"}, {"code": "public static $F4203 T invokeMethod ( Object obj , String name , Object ... params ) throws NoSuchMethodException { \n\t$F749 paramTypes = getParamTypes ( params ) ; \n\tfinal $F6969 aClass = obj . getClass ( ) ; \n\tMethod method ; \n\ttry { \n\t\tmethod = aClass . getDeclaredMethod ( name , paramTypes ) ; \n\t\t} \n\tcatch ( NoSuchMethodException e ) { \n\t\tmethod = aClass . getMethod ( name , paramTypes ) ; \n\t\t} \n\tmethod . setAccessible ( _BOOL ) ; \n\ttry { \n\t\treturn ( T ) method . invoke ( obj , params ) ; \n\t\t} \n\tcatch ( IllegalAccessException | InvocationTargetException e ) $F9491 ( e ) } \n"}, {"code": "public void addNodes ( NodeIterator iterator ) { \n\t$F132452 ( m_mutable , XSLMessages , XPATHErrorResources ) if ( null != iterator ) { \n\t\tNode obj ; \n\t\twhile ( null != $F161934 ( obj , iterator ) ) { \n\t\t\taddElement ( obj ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static RotateStream create ( Path path ) { \n\tsynchronized ( _streams ) { \n\t\tWeakReference < RotateStream > ref = _streams . get ( path ) ; \n\t\tRotateStream $F189308 ( stream , ref ) ; \n\t\tif ( stream == null ) { \n\t\t\tstream = new RotateStream ( path ) ; \n\t\t\t_streams . put ( path , $F164361 ( stream ) ) ; \n\t\t\t} \n\t\treturn stream ; \n\t\t} \n\t} \n"}, {"code": "private void cleanUpHistory $F72 { \n\tif ( $F1030 ( mHistoryOfNumbers ) && mHistoryOfNumbers . size ( ) >= MAX_HISTORY_SIZE ) { \n\t\tfor ( int i = NUM00 ; \n\t\ti < Math . max ( NUM00 , MAX_HISTORY_SIZE / NUM00 ) ; \n\t\ti ++ ) { \n\t\t\tmPreviousNumbers . remove ( mHistoryOfNumbers . removeFirst ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1431 protected void processStyledAttributes ( $F4170 TypedArray a ) { \n\tfloat targetAspectRatioX = Math . abs ( a . getFloat ( R . styleable . ucrop_UCropView_ucrop_aspect_ratio_x , DEFAULT_ASPECT_RATIO ) ) ; \n\tfloat targetAspectRatioY = Math . abs ( a . getFloat ( R . styleable . ucrop_UCropView_ucrop_aspect_ratio_y , DEFAULT_ASPECT_RATIO ) ) ; \n\tif ( targetAspectRatioX == SOURCE_IMAGE_ASPECT_RATIO || targetAspectRatioY == SOURCE_IMAGE_ASPECT_RATIO ) { \n\t\tmTargetAspectRatio = SOURCE_IMAGE_ASPECT_RATIO ; \n\t\t} \n\telse { \n\t\tmTargetAspectRatio = targetAspectRatioX / targetAspectRatioY ; \n\t\t} \n\t} \n"}, {"code": "public LogMessage ( String template , int code ) { \n\tthis ( template , null , EMPTY_ <missing ';'> NUM00 <missing ';'> _ARRAY , code , Optional . empty ( ) ) ; \n\t} \n"}, {"code": "protected String action_translate ( String act_string , int act_pos , Hashtable label_map , Hashtable label_types ) { \n\tint id_start ; \n\tint pos ; \n\tint len ; \n\tString id_str ; \n\tboolean in_id ; \n\tStringBuffer result ; \n\tchar $F76061 ; \n\tif $F6036 ( act_string ) return act_string ; \n\t$F3935 ( len , act_string ) $F16053 ( result , len ) ; \n\tbuffer = new char [ len + NUM00 ] ; \n\t$F16116 ( act_string , len , buffer ) buffer [ len ] = NUM00 ; \n\tin_id = _BOOL ; \n\tfor ( pos = id_start = NUM00 ; \n\tpos <= len ; \n\tpos ++ ) { \n\t\tif ( in_id ) { \n\t\t\tif ( ! is_id_char ( buffer [ pos ] ) ) { \n\t\t\t\tid_str = new String ( buffer , id_start , pos - id_start ) ; \n\t\t\t\tresult . append ( label_translate ( id_str , act_pos , label_map , label_types ) ) ; \n\t\t\t\tif ( buffer [ pos ] != NUM00 ) result . append ( buffer , pos , NUM00 ) ; \n\t\t\t\tin_id = _BOOL ; \n\t\t\t\t} \n\t\t\telse $F845 } \n\t\telse { \n\t\t\tif ( is_id_start ( buffer [ pos ] ) ) { \n\t\t\t\tin_id = _BOOL ; \n\t\t\t\tid_start = pos ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( buffer [ pos ] != NUM00 ) result . append ( buffer , pos , NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F92 ( result ) } \n"}, {"code": "public boolean canLoad $F72 { \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean bool $F72 { \n\treturn ( Double . isNaN ( m_val ) || ( m_val == NUM00 ) ) ? _BOOL : _BOOL ; \n\t} \n"}, {"code": "public String generateXML ( String sessionID , String versionName , long installAge , RequestData data ) throws RequestFailureException { \n\tXmlSerializer serializer = Xml . newSerializer ( ) ; \n\t$F29429 ( writer ) try { \n\t\tserializer . setOutput ( writer ) ; \n\t\tserializer . startDocument ( NUM00 , _BOOL ) ; \n\t\t$F18823 ( serializer ) $F49456 ( serializer ) $F49456 ( serializer ) $F49456 ( serializer ) serializer . attribute ( null , NUM00 , NUM00 + data . getRequestID ( ) + NUM00 ) ; \n\t\tserializer . attribute ( null , NUM00 , NUM00 + sessionID + NUM00 ) ; \n\t\tserializer . attribute ( null , NUM00 , data . getInstallSource ( ) ) ; \n\t\tappendExtraAttributes ( NUM00 , serializer ) ; \n\t\t$F18823 ( serializer ) $F49456 ( serializer ) serializer . attribute ( null , NUM00 , Build . VERSION . RELEASE ) ; \n\t\t$F49456 ( serializer ) $F18825 ( serializer ) $F18823 ( serializer ) serializer . attribute ( null , NUM00 , getBrand ( ) ) ; \n\t\tserializer . attribute ( null , NUM00 , getClient ( ) ) ; \n\t\tserializer . attribute ( null , NUM00 , getAppId ( ) ) ; \n\t\tserializer . attribute ( null , NUM00 , versionName ) ; \n\t\t$F49456 ( serializer ) serializer . attribute ( null , NUM00 , getLanguage ( ) ) ; \n\t\tserializer . attribute ( null , NUM00 , String . valueOf ( installAge ) ) ; \n\t\tserializer . attribute ( null , NUM00 , getAdditionalParameters ( ) ) ; \n\t\tappendExtraAttributes ( NUM00 , serializer ) ; \n\t\tif ( data . isSendInstallEvent ( ) ) { \n\t\t\t$F18823 ( serializer ) $F49456 ( serializer ) $F49456 ( serializer ) $F18825 ( serializer ) } \n\t\telse { \n\t\t\t$F18823 ( serializer ) $F18825 ( serializer ) $F18823 ( serializer ) $F49456 ( serializer ) $F18825 ( serializer ) } \n\t\t$F18825 ( serializer ) $F18825 ( serializer ) $F45698 ( serializer ) } \n\tcatch ( IOException e ) $F49482 ( e ) catch ( IllegalArgumentException e ) $F49482 ( e ) catch ( IllegalStateException e ) $F49482 ( e ) $F92 ( writer ) } \n"}, {"code": "protected boolean strictParseBoolean ( String s ) { \n\t$F50542 ( s ) if $F21935 ( s ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif $F21935 ( s ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F11416 ( s ) } \n"}, {"code": "$F1 public boolean eIsSet ( int featureID ) { \n\tswitch ( featureID ) { \n\t\tcase FunctionblockPackage . EVENT__NAME : $F6439 ( NAME_EDEFAULT , name ) case FunctionblockPackage . EVENT__PROPERTIES : $F6441 ( properties ) } \n\t$F6444 ( super , featureID ) } \n"}, {"code": "public String format ( DateTimeFormatter formatter ) { \n\t$F10578 ( Objects , formatter ) $F5330 ( formatter , this ) } \n"}, {"code": "private void initializeSourceCodeMap ( String adaptedContent ) { \n\t$F161023 ( sourceCodeWithLine ) ; \n\tint lineNumber = NUM00 ; \n\t$F161688 ( sr , adaptedContent ) $F20481 ( br , sr ) String line ; \n\ttry { \n\t\twhile $F443 ( line , br ) { \n\t\t\tsourceCodeWithLine . put ( lineNumber , line ) ; \n\t\t\tlineNumber ++ ; \n\t\t\t} \n\t\t} \n\tcatch ( IOException ex ) $F50614 ( LOGGER , ex ) } \n"}, {"code": "$F1 public void onUpgrade ( SQLiteDatabase db , int oldVersion , int newVersion ) { \n\tif ( oldVersion != newVersion ) { \n\t\tif ( newVersion == NUM00 && oldVersion == NUM00 ) { \n\t\t\t$F17544 ( WXLogUtils , TAG_STORAGE , oldVersion , newVersion ) boolean updateResult = _BOOL ; \n\t\t\ttry { \n\t\t\t\t$F657 ( start , System ) $F41822 ( db ) $F35113 ( SQL_ADD_COLUMN_TIMESTAMP , TABLE_STORAGE , COLUMN_TIMESTAMP ) $F12258 ( WXLogUtils , TAG_STORAGE , SQL_ADD_COLUMN_TIMESTAMP ) db . execSQL ( SQL_ADD_COLUMN_TIMESTAMP ) ; \n\t\t\t\t$F35113 ( SQL_ADD_COLUMN_PERSISTENT , TABLE_STORAGE , COLUMN_PERSISTENT ) $F12258 ( WXLogUtils , TAG_STORAGE , SQL_ADD_COLUMN_PERSISTENT ) db . execSQL ( SQL_ADD_COLUMN_PERSISTENT ) ; \n\t\t\t\tString SQL_UPDATE_TABLE = NUM00 + TABLE_STORAGE + NUM00 + COLUMN_TIMESTAMP + NUM00 + $F52170 ( sDateFormatter ) + NUM00 + COLUMN_PERSISTENT + NUM00 ; \n\t\t\t\t$F12258 ( WXLogUtils , TAG_STORAGE , SQL_UPDATE_TABLE ) db . execSQL ( SQL_UPDATE_TABLE ) ; \n\t\t\t\t$F41894 ( db ) $F5740 ( time , System , start ) $F63425 ( WXLogUtils , TAG_STORAGE , time ) } \n\t\t\tcatch ( Exception e ) { \n\t\t\t\tWXLogUtils . d ( TAG_STORAGE , $F141088 ( oldVersion , newVersion , e ) ) ; \n\t\t\t\tupdateResult = _BOOL ; \n\t\t\t\t} \n\t\t\tfinally { \n\t\t\t\t$F41895 ( db ) } \n\t\t\tif ( ! updateResult ) { \n\t\t\t\t$F13527 ( WXLogUtils , TAG_STORAGE ) deleteDB ( ) ; \n\t\t\t\tonCreate ( db ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse $F19529 ( deleteDB , onCreate , db ) } \n\t} \n"}, {"code": "public Matrix U $F72 { \n\t$F51685 ( U ) } \n"}, {"code": "protected $F2689 allowedDuplicateErrorCodes $F72 $F29020 ( Collections ) "}, {"code": "private boolean isFieldVisited ( Object object , Field objectField , Field field ) { \n\t$F10651 bag = visitedFields . get ( object ) ; \n\t$F1933 ( bag , _BOOL ) String objectFiledKey = objectField == null ? NUM00 : objectField . toGenericString ( ) ; \n\t$F48768 ( fields , bag , objectFiledKey ) $F28807 ( fields , field ) } \n"}, {"code": "public void removeFromCompletedList ( DownloadInfoRunnable downloadInfoRunnable ) $F106 ( mCompletedList , downloadInfoRunnable ) "}, {"code": "protected void addShingledPhraseQueries ( final BooleanQuery mainQuery , final List $F304761 clauses , final Collection < FieldParams > fields , int shingleSize , final float tiebreaker , final int slop ) throws SyntaxError { \n\tif ( $F255654 ( fields ) || null == clauses || clauses . size ( ) < shingleSize ) $F665 if ( NUM00 == shingleSize ) $F8935 ( shingleSize , clauses ) final int lastClauseIndex = shingleSize - NUM00 ; \n\t$F83 ( userPhraseQuery ) for ( int i = NUM00 ; \n\ti < clauses . size ( ) - lastClauseIndex ; \n\ti ++ ) { \n\t\t$F84 ( userPhraseQuery ) for ( $F9993 ( j , lastClauseIndex ) ) { \n\t\t\tuserPhraseQuery . append ( clauses . get ( i + j ) . val ) ; \n\t\t\t$F84 ( userPhraseQuery ) } \n\t\t$F84 ( userPhraseQuery ) $F84 ( userPhraseQuery ) } \n\tExtendedSolrQueryParser pp = createEdismaxQueryParser ( this , IMPOSSIBLE_FIELD_NAME ) ; \n\tpp . addAlias ( IMPOSSIBLE_FIELD_NAME , tiebreaker , getFieldBoosts ( fields ) ) ; \n\tpp . setPhraseSlop ( slop ) ; \n\tpp . setRemoveStopFilter ( _BOOL ) ; \n\tpp . makeDismax = _BOOL ; \n\tpp . minClauseSize = NUM00 ; \n\tQuery phrase = $F118108 ( pp , userPhraseQuery ) ; \n\tif ( phrase != null ) { \n\t\tmainQuery . add ( phrase , BooleanClause . Occur . SHOULD ) ; \n\t\t} \n\t} \n"}, {"code": "public String asXmlId $F72 { \n\treturn DatatypeConverter . printHexBinary ( tokenDigest . getValue ( ) ) ; \n\t} \n"}, {"code": "private void updateInfo $F72 { \n\tm_updating = _BOOL ; \n\t$F18684 ( nameField , m_cc ) appsHostField . setText ( m_cc . getAppsHost ( ) ) ; \n\tappsPortField . setText ( String . valueOf ( m_cc . getAppsPort ( ) ) ) ; \n\tbTestApps . setIcon ( getStatusIcon ( m_cc . isAppsServerOK ( _BOOL ) ) ) ; \n\tboolean rw = CConnection . isServerEmbedded ( ) ? _BOOL : ! m_cc . isAppsServerOK ( _BOOL ) ; \n\tdbTypeLabel . setReadWrite ( rw ) ; \n\tdbTypeField . setReadWrite ( rw ) ; \n\tdbTypeField . setSelectedItem ( m_cc . getType ( ) ) ; \n\thostLabel . setReadWrite ( rw ) ; \n\thostField . setReadWrite ( rw ) ; \n\thostField . setText ( m_cc . getDbHost ( ) ) ; \n\tportLabel . setReadWrite ( rw ) ; \n\tdbPortField . setReadWrite ( rw ) ; \n\tdbPortField . setText ( String . valueOf ( m_cc . getDbPort ( ) ) ) ; \n\tsidLabel . setReadWrite ( rw ) ; \n\tsidField . setReadWrite ( rw ) ; \n\tsidField . setText ( m_cc . getDbName ( ) ) ; \n\tdbUidLabel . setReadWrite ( rw ) ; \n\tdbUidField . setReadWrite ( rw ) ; \n\tdbUidField . setText ( m_cc . getDbUid ( ) ) ; \n\tdbPwdField . setEditable ( rw ) ; \n\tdbPwdField . setText ( m_cc . getDbPwd ( ) ) ; \n\tcbBequeath . setReadWrite ( rw ) ; \n\tcbBequeath . setEnabled ( m_cc . isOracle ( ) ) ; \n\tcbBequeath . setSelected ( m_cc . isBequeath ( ) ) ; \n\tboolean fwEnabled = rw && m_cc . isViaFirewall ( ) && m_cc . isOracle ( ) ; \n\tcbFirewall . setReadWrite ( rw && m_cc . isOracle ( ) ) ; \n\tcbFirewall . setSelected ( m_cc . isViaFirewall ( ) ) ; \n\tfwHostLabel . setReadWrite ( fwEnabled ) ; \n\tfwHostField . setReadWrite ( fwEnabled ) ; \n\tfwHostField . setText ( m_cc . getFwHost ( ) ) ; \n\tfwPortLabel . setReadWrite ( fwEnabled ) ; \n\tfwPortField . setReadWrite ( fwEnabled ) ; \n\tfwPortField . setText ( String . valueOf ( m_cc . getFwPort ( ) ) ) ; \n\tbTestDB . setToolTipText ( m_cc . getConnectionURL ( ) ) ; \n\tbTestDB . setIcon ( getStatusIcon ( m_cc . isDatabaseOK ( ) ) ) ; \n\tm_updating = _BOOL ; \n\t} \n"}, {"code": "public void createSnapshot $F72 throws BackupException { \n\tlogger . debug ( NUM00 + this . snapshotName ) ; \n\tprocessHelper . exec ( NUM00 , lvcreateCmd ) ; \n\t} \n"}, {"code": "public final Uri storeLogFile ( final LogFile logFile , final int sessionId ) { \n\t$F248400 ( values ) values . put ( Schema . COL_MANUFACTURER , logFile . getManufacturer ( ) ) ; \n\tvalues . put ( Schema . COL_MODEL , logFile . getModel ( ) ) ; \n\tvalues . put ( Schema . COL_REVISION , logFile . getRevision ( ) ) ; \n\tvalues . put ( Schema . COL_SWID , logFile . getSwid ( ) ) ; \n\tvalues . put ( Schema . COL_SWVER , logFile . getSwVersion ( ) ) ; \n\tvalues . put ( Schema . COL_TIMESTAMP , System . currentTimeMillis ( ) ) ; \n\tvalues . put ( Schema . COL_SESSION_ID , sessionId ) ; \n\treturn contentResolver . insert ( ContentProvider . CONTENT_URI_LOGFILE , values ) ; \n\t} \n"}, {"code": "public $F2539 merge ( $F2540 ( curProps ) , $F2540 ( newProps ) ) throws IOException { \n\t$F2539 $F26694 ( props , newProps ) ; \n\tfor ( $F19318 ( e , curProps ) ) { \n\t\t$F3477 ( name , e ) $F840 ( curValue , e ) if $F1710 ( props , name ) $F1717 ( props , name , curValue ) } \n\treturn props ; \n\t} \n"}, {"code": "$F129060 ( views , direction , focusableMode , focusableCount , descendantFocusability , getDescendantFocusability , FOCUS_BLOCK_DESCENDANTS , i , getChildCount , child , getChildAt , VISIBLE , ii , infoForChild , mCurItem , FOCUS_AFTER_DESCENDANTS , isFocusable , FOCUSABLES_TOUCH_MODE , isInTouchMode , isFocusableInTouchMode , this ) "}, {"code": "public Builder deletePreferredLanguage $F72 $F18794 ( deleteFields , this ) "}, {"code": "public void onPrepared ( MediaPlayer player ) { \n\tmState = State . PLAYING ; \n\tupdateNotification ( String . format ( getString ( R . string . media_state_playing ) , mFile . getFileName ( ) ) ) ; \n\tif ( mMediaController != null ) $F7728 ( mMediaController , _BOOL ) player . seekTo ( mStartPosition ) ; \n\tconfigAndStartMediaPlayer ( ) ; \n\t$F14406 ( mPlayOnPrepared , processPauseRequest ) if ( mMediaController != null ) { \n\t\tmMediaController . updatePausePlay ( ) ; \n\t\t} \n\t} \n"}, {"code": "private void parseParameter ( String token , String value ) { \n\tif ( token != null && value != null ) { \n\t\tif $F8397 ( token , NONCE_TOKEN ) $F24818 ( mNonce , value ) if $F8397 ( token , STALE_TOKEN ) $F14411 ( parseStale , value ) if $F8397 ( token , OPAQUE_TOKEN ) $F24818 ( mOpaque , value ) if $F8397 ( token , QOP_TOKEN ) { \n\t\t\t$F21936 ( mQop , value ) $F665 } \n\t\tif $F8397 ( token , ALGORITHM_TOKEN ) { \n\t\t\t$F21936 ( mAlgorithm , value ) $F665 } \n\t\t} \n\t} \n"}, {"code": "public $F3803 makeURLList ( String shard ) { \n\t$F3803 urls = StrUtils . splitSmart ( shard , NUM00 , _BOOL ) ; \n\tfor ( $F2277 ( i , urls ) ) { \n\t\turls . set ( i , buildUrl ( urls . get ( i ) ) ) ; \n\t\t} \n\tif $F3817 ( urls ) Collections . shuffle ( urls , r ) ; \n\treturn urls ; \n\t} \n"}, {"code": "public void skip ( int n ) throws IOException { \n\tdis . skip ( n ) ; \n\t} \n"}, {"code": "$F26776 ( container , mContainers ) "}, {"code": "public void toAllInRadius ( WorldServer world , Vec3d pos , double radius ) { \n\tdouble maxDistance = radius * radius + radius * radius + radius * radius ; \n\ttoAll ( world . getPlayers ( EntityPlayerMP . class , null ) ) ; \n\t} \n"}, {"code": "public static ECDHECryptography fromNamedCurveId ( int supportedGroupId ) { \n\tSupportedGroup group = SupportedGroup . fromId ( supportedGroupId ) ; \n\tif ( group == null ) $F1337 else { \n\t\ttry { \n\t\t\treturn new ECDHECryptography ( group . name ( ) ) ; \n\t\t\t} \n\t\tcatch ( GeneralSecurityException e ) { \n\t\t\tLOGGER . log ( Level . WARNING , NUM00 , new Object [ ] { \n\t\t\t\tgroup . name ( ) , e . getMessage ( ) } \n\t\t\t) ; \n\t\t\t$F1274 } \n\t\t} \n\t} \n"}, {"code": "$F25527 ( redundantOpCompactThreshold , redundantOpCount , lruEntries ) "}, {"code": "private static void addHeader ( Message message , String name , String value ) { \n\t$F14855 protocolHeaders = CastUtils . cast ( ( $F22331 ) message . get ( Message . PROTOCOL_HEADERS ) ) ; \n\tif ( protocolHeaders == null ) { \n\t\tprotocolHeaders = new TreeMap $F14854 ( String . CASE_INSENSITIVE_ORDER ) ; \n\t\tmessage . put ( Message . PROTOCOL_HEADERS , protocolHeaders ) ; \n\t\t} \n\t$F3803 header = CastUtils . cast ( ( $F11654 ) protocolHeaders . get ( name ) ) ; \n\tif ( header == null ) { \n\t\t$F30598 ( header ) protocolHeaders . put ( name , header ) ; \n\t\t} \n\tif $F10471 ( header ) $F207 ( header , value ) else { \n\t\theader . set ( NUM00 , header . get ( NUM00 ) + NUM00 + value ) ; \n\t\t} \n\t} \n"}, {"code": "private static void swilk ( $F8748 init , $F1986 x , int n , int n1 , int n2 , $F1986 a , $F1986 w , $F1986 pw , $F2027 ifault ) { \n\tpw [ NUM00 ] = NUM00 ; \n\tif $F104544 ( w ) { \n\t\tw [ NUM00 ] = NUM00 ; \n\t\t} \n\tdouble an = n ; \n\tifault [ NUM00 ] = NUM00 ; \n\tint nn2 = n / NUM00 ; \n\tif ( n2 < nn2 ) $F932 ifault [ NUM00 ] = NUM00 ; \n\t$F44858 ( n ) if ( ! init [ NUM00 ] ) { \n\t\tif ( n == NUM00 ) { \n\t\t\ta [ NUM00 ] = SQRTH ; \n\t\t\t} \n\t\telse { \n\t\t\tdouble an25 = an + NUM00 ; \n\t\t\tdouble summ2 = NUM00 ; \n\t\t\tfor ( $F50176 ( i , n2 ) ) { \n\t\t\t\ta [ i ] = ppnd ( ( i - TH ) / an25 ) ; \n\t\t\t\t$F60596 ( summ2 , a , i ) } \n\t\t\tsumm2 *= NUM00 ; \n\t\t\t$F96817 ( ssumm2 , Math , summ2 ) double rsn = NUM00 / Math . sqrt ( an ) ; \n\t\t\tdouble a1 = poly ( C1 , NUM00 , rsn ) - a [ NUM00 ] / ssumm2 ; \n\t\t\tint i1 ; \n\t\t\tdouble fac ; \n\t\t\tif ( n > NUM00 ) { \n\t\t\t\ti1 = NUM00 ; \n\t\t\t\tdouble a2 = - a [ NUM00 ] / ssumm2 + poly ( C2 , NUM00 , rsn ) ; \n\t\t\t\tfac = Math . sqrt ( ( summ2 - $F247147 ( a ) - $F247147 ( a ) ) / ( NUM00 - NUM00 * a1 * a1 - NUM00 * a2 * a2 ) ) ; \n\t\t\t\ta [ NUM00 ] = a1 ; \n\t\t\t\ta [ NUM00 ] = a2 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\ti1 = NUM00 ; \n\t\t\t\tfac = Math . sqrt ( ( summ2 - $F247147 ( a ) ) / ( NUM00 - NUM00 * a1 * a1 ) ) ; \n\t\t\t\ta [ NUM00 ] = a1 ; \n\t\t\t\t} \n\t\t\tfor ( int i = i1 ; \n\t\t\ti <= nn2 ; \n\t\t\t++ i ) { \n\t\t\t\ta [ i ] = - a [ i ] / fac ; \n\t\t\t\t} \n\t\t\t} \n\t\tinit [ NUM00 ] = _BOOL ; \n\t\t} \n\t$F44858 ( n1 ) int ncens = n - n1 ; \n\tifault [ NUM00 ] = NUM00 ; \n\tif ( ncens < NUM00 || ( ncens > NUM00 && n < NUM00 ) ) $F932 ifault [ NUM00 ] = NUM00 ; \n\tdouble delta = ncens / an ; \n\tif ( delta > NUM00 ) $F932 double w1 , xx ; \n\tif $F75466 ( w ) { \n\t\tw1 = NUM00 + w [ NUM00 ] ; \n\t\tifault [ NUM00 ] = NUM00 ; \n\t\t} \n\telse { \n\t\tifault [ NUM00 ] = NUM00 ; \n\t\tdouble range = x [ n1 ] - x [ NUM00 ] ; \n\t\tif ( range < SMALL ) $F932 ifault [ NUM00 ] = NUM00 ; \n\t\txx = x [ NUM00 ] / range ; \n\t\tdouble sx = xx ; \n\t\tdouble sa = - a [ NUM00 ] ; \n\t\tint j = n - NUM00 ; \n\t\tfor ( $F50176 ( i , n1 ) ) { \n\t\t\tdouble xi = x [ i ] / range ; \n\t\t\tsx += xi ; \n\t\t\tif ( i != j ) { \n\t\t\t\tsa += sign ( NUM00 , i - j ) * a [ Math . min ( i , j ) ] ; \n\t\t\t\t} \n\t\t\txx = xi ; \n\t\t\t-- j ; \n\t\t\t} \n\t\tifault [ NUM00 ] = NUM00 ; \n\t\tif ( n > NUM00 ) { \n\t\t\tifault [ NUM00 ] = NUM00 ; \n\t\t\t} \n\t\tsa /= n1 ; \n\t\tsx /= n1 ; \n\t\tdouble ssa = NUM00 ; \n\t\tdouble ssx = NUM00 ; \n\t\tdouble sax = NUM00 ; \n\t\tj = n ; \n\t\tdouble asa ; \n\t\tfor ( $F50176 ( i , n1 ) ) { \n\t\t\tif ( i != j ) { \n\t\t\t\tasa = sign ( NUM00 , i - j ) * a [ Math . min ( i , j ) ] - sa ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tasa = - sa ; \n\t\t\t\t} \n\t\t\tdouble xsx = x [ i ] / range - sx ; \n\t\t\tssa += asa * asa ; \n\t\t\tssx += xsx * xsx ; \n\t\t\tsax += asa * xsx ; \n\t\t\t-- j ; \n\t\t\t} \n\t\tdouble ssassx = Math . sqrt ( ssa * ssx ) ; \n\t\tw1 = ( ssassx - sax ) * ( ssassx + sax ) / ( ssa * ssx ) ; \n\t\t} \n\tw [ NUM00 ] = NUM00 - w1 ; \n\tif ( n == NUM00 ) { \n\t\tpw [ NUM00 ] = PI6 * ( Math . asin ( Math . sqrt ( w [ NUM00 ] ) ) - STQR ) ; \n\t\t$F665 } \n\tdouble y = Math . log ( w1 ) ; \n\txx = Math . log ( an ) ; \n\tdouble m = NUM00 ; \n\tdouble s = NUM00 ; \n\tif ( n <= NUM00 ) { \n\t\tdouble gamma = poly ( G , NUM00 , an ) ; \n\t\tif ( y >= gamma ) { \n\t\t\tpw [ NUM00 ] = SMALL ; \n\t\t\t$F665 } \n\t\ty = - Math . log ( gamma - y ) ; \n\t\tm = poly ( C3 , NUM00 , an ) ; \n\t\ts = Math . exp ( poly ( C4 , NUM00 , an ) ) ; \n\t\t} \n\telse { \n\t\tm = poly ( C5 , NUM00 , xx ) ; \n\t\ts = Math . exp ( poly ( C6 , NUM00 , xx ) ) ; \n\t\t} \n\tif ( ncens > NUM00 ) { \n\t\tdouble ld = - Math . log ( delta ) ; \n\t\tdouble bf = NUM00 + xx * BF1 ; \n\t\tdouble z90f = Z90 + bf * Math . pow ( poly ( C7 , NUM00 , Math . pow ( XX90 , xx ) ) , ld ) ; \n\t\tdouble z95f = Z95 + bf * Math . pow ( poly ( C8 , NUM00 , Math . pow ( XX95 , xx ) ) , ld ) ; \n\t\tdouble z99f = Z99 + bf * Math . pow ( poly ( C9 , NUM00 , xx ) , ld ) ; \n\t\tdouble zfm = ( z90f + z95f + z99f ) / NUM00 ; \n\t\tdouble zsd = ( Z90 * ( z90f - zfm ) + Z95 * ( z95f - zfm ) + Z99 * ( z99f - zfm ) ) / ZSS ; \n\t\tdouble zbar = zfm - zsd * ZM ; \n\t\tm += zbar * s ; \n\t\ts *= zsd ; \n\t\t} \n\tpw [ NUM00 ] = alnorm ( ( y - m ) / s , UPPER ) ; \n\t} \n"}, {"code": "public String asString $F72 { \n\t$F83 ( buff ) for ( $F119 ( i , arrayLevel ) ) { \n\t\t$F12290 ( refCount , buff ) $F84 ( buff ) } \n\tif ( refCount ) { \n\t\tif ( ! classObj . isPrimitive ) $F86 ( buff ) } \n\t$F11659 ( buff , classObj ) if ( refCount ) { \n\t\tif ( ! classObj . isPrimitive ) $F86 ( buff ) } \n\tfor ( $F119 ( i , arrayLevel ) ) { \n\t\tif ( refCount ) $F86 ( buff ) else { \n\t\t\tif ( ! classObj . isPrimitive ) $F86 ( buff ) } \n\t\t$F84 ( buff ) } \n\tif ( ! refCount ) { \n\t\t$F181852 ( isObject , buff ) } \n\t$F92 ( buff ) } \n"}, {"code": "public boolean recreateWorkspaceTable ( SQLiteDatabase db ) { \n\t$F41822 ( db ) try { \n\t\tCursor c = db . query ( TABLE_WORKSPACE_SCREENS , new String [ ] { \n\t\t\tLauncherSettings . WorkspaceScreens . _ID } \n\t\t, null , null , null , null , LauncherSettings . WorkspaceScreens . SCREEN_RANK ) ; \n\t\t$F17809 ( sortedIDs ) long maxId = NUM00 ; \n\t\ttry { \n\t\t\twhile $F12260 ( c ) { \n\t\t\t\tLong id = c . getLong ( NUM00 ) ; \n\t\t\t\tif $F2200 ( sortedIDs , id ) { \n\t\t\t\t\tsortedIDs . add ( id ) ; \n\t\t\t\t\t$F19410 ( maxId , Math , id ) } \n\t\t\t\t} \n\t\t\t} \n\t\t$F3229 ( c ) db . execSQL ( NUM00 + TABLE_WORKSPACE_SCREENS ) ; \n\t\taddWorkspacesTable ( db , _BOOL ) ; \n\t\t$F2199 ( total , sortedIDs ) for ( $F119 ( i , total ) ) { \n\t\t\t$F20904 ( values ) values . put ( LauncherSettings . WorkspaceScreens . _ID , sortedIDs . get ( i ) ) ; \n\t\t\tvalues . put ( LauncherSettings . WorkspaceScreens . SCREEN_RANK , i ) ; \n\t\t\taddModifiedTime ( values ) ; \n\t\t\tdb . insertOrThrow ( TABLE_WORKSPACE_SCREENS , null , values ) ; \n\t\t\t} \n\t\t$F41894 ( db ) mMaxScreenId = maxId ; \n\t\t} \n\tcatch ( SQLException ex ) { \n\t\tLog . e ( $F65849 ( TAG , ex ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tfinally { \n\t\t$F41895 ( db ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public List < JsonObject > executeParametrizedStatement ( String statement , $F3803 parameterNames , $F6689 parameterValues ) { \n\t$F44898 ( namedParams , JsonObject ) for ( $F2277 ( param , parameterNames ) ) $F62899 ( namedParams , parameterNames , param , parameterValues ) ParameterizedN1qlQuery query = N1qlQuery . parameterized ( statement , namedParams ) ; \n\treturn executeQuery ( query ) ; \n\t} \n"}, {"code": "public final T endAll $F72 { \n\twhile $F5973 ( tagStack ) $F5795 ( end ) return getSelf ( ) ; \n\t} \n"}, {"code": "$F203214 ( name , append , m_doc ) "}, {"code": "public static Table createPartitionedTable ( Configuration conf , HiveMetastoreClient ms , HiveObjectSpec tableSpec , TableType tableType , Path warehouseRoot ) throws IOException , HiveMetastoreException { \n\tPath tableLocation = getPathForHiveObject ( warehouseRoot , tableSpec ) ; \n\tTable table = new Table $F72 ; \n\ttable . setDbName ( tableSpec . getDbName ( ) ) ; \n\ttable . setTableName ( tableSpec . getTableName ( ) ) ; \n\t$F35131 ( parameters ) parameters . put ( HiveParameterKeys . TLDT , $F172781 ( Long , System ) ) ; \n\ttable . setParameters ( parameters ) ; \n\ttable . setTableType ( tableType . toString ( ) ) ; \n\tList < FieldSchema > $F204 ( partitionCols ) ; \n\tpartitionCols . add ( new FieldSchema ( $F7288 ) ) ; \n\tpartitionCols . add ( new FieldSchema ( $F7288 ) ) ; \n\ttable . setPartitionKeys ( partitionCols ) ; \n\tStorageDescriptor sd = new StorageDescriptor $F72 ; \n\tList < FieldSchema > $F204 ( columns ) ; \n\tcolumns . add ( new FieldSchema ( $F7288 ) ) ; \n\tsd . setCols ( columns ) ; \n\tif ( tableType == TableType . MANAGED_TABLE || tableType == TableType . EXTERNAL_TABLE ) { \n\t\tsd . setLocation ( tableLocation . toString ( ) ) ; \n\t\t} \n\tsd . setSerdeInfo ( new SerDeInfo ( NUM00 , NUM00 , $F4190 ) ) ; \n\ttable . setSd ( sd ) ; \n\tif ( ! ms . existsDb ( table . getDbName ( ) ) ) { \n\t\tms . createDatabase ( new Database ( table . getDbName ( ) , null , null , null ) ) ; \n\t\t} \n\tms . createTable ( table ) ; \n\treturn table ; \n\t} \n"}, {"code": "$F13436 ( node , count , capacity , _BOOL , l , last , first , notEmpty ) "}, {"code": "void drawDivider ( Canvas canvas , Rect bounds , int childIndex ) { \n\tfinal Drawable divider = mDivider ; \n\tfinal boolean clipDivider = mClipDivider ; \n\tif ( ! clipDivider ) { \n\t\tdivider . setBounds ( bounds ) ; \n\t\t} \n\telse { \n\t\t$F72208 ( canvas ) canvas . clipRect ( bounds ) ; \n\t\t} \n\tdivider . draw ( canvas ) ; \n\tif ( clipDivider ) { \n\t\t$F72213 ( canvas ) } \n\t} \n"}, {"code": "protected FormSpec ( DefaultAlignment defaultAlignment , String encodedDescription ) { \n\tthis ( defaultAlignment , Sizes . DEFAULT , NO_GROW ) ; \n\tparseAndInitValues ( $F91593 ( encodedDescription , Locale ) ) ; \n\t} \n"}, {"code": "public static $F4203 $F5675 decode ( InputStream data , Parser $F4203 parser ) throws IOException { \n\t$F2237 ( stream , CodedInputStream , data ) $F98037 ( list ) while ( ! stream . isAtEnd ( ) ) { \n\t\tint size = stream . readRawVarint32 ( ) ; \n\t\t$F96 element = stream . readRawBytes ( size ) ; \n\t\tT decoded = parser . parseFrom ( element ) ; \n\t\tlist . add ( decoded ) ; \n\t\t} \n\treturn list ; \n\t} \n"}, {"code": "$F1 public void drawItem ( Graphics2D g2 , XYItemRendererState state , Rectangle2D dataArea , PlotRenderingInfo info , XYPlot plot , ValueAxis domainAxis , ValueAxis rangeAxis , XYDataset dataset , int series , int item , CrosshairState crosshairState , int pass ) { \n\tif ( $F931 ( getPlotLines ) || ( ( ! ( domainAxis instanceof CyclicNumberAxis ) ) && ( ! ( rangeAxis instanceof CyclicNumberAxis ) ) ) || ( item <= NUM00 ) ) { \n\t\tsuper . drawItem ( g2 , state , dataArea , info , plot , domainAxis , rangeAxis , dataset , series , item , crosshairState , pass ) ; \n\t\t$F665 } \n\tdouble xn = dataset . getXValue ( series , item - NUM00 ) ; \n\tdouble yn = dataset . getYValue ( series , item - NUM00 ) ; \n\tif $F35707 ( Double , yn ) { \n\t\tsuper . drawItem ( g2 , state , dataArea , info , plot , domainAxis , rangeAxis , dataset , series , item , crosshairState , pass ) ; \n\t\t$F665 } \n\t$F1993 ( x ) $F1993 ( y ) x [ NUM00 ] = xn ; \n\ty [ NUM00 ] = yn ; \n\txn = dataset . getXValue ( series , item ) ; \n\tyn = dataset . getYValue ( series , item ) ; \n\tif $F35707 ( Double , yn ) $F932 x [ NUM00 ] = xn ; \n\ty [ NUM00 ] = yn ; \n\tdouble xcycleBound = Double . NaN ; \n\tdouble ycycleBound = Double . NaN ; \n\tboolean xBoundMapping = _BOOL , yBoundMapping = _BOOL ; \n\tCyclicNumberAxis cnax = null , cnay = null ; \n\tif ( domainAxis instanceof CyclicNumberAxis ) { \n\t\tcnax = ( CyclicNumberAxis ) domainAxis ; \n\t\txcycleBound = cnax . getCycleBound ( ) ; \n\t\txBoundMapping = cnax . isBoundMappedToLastCycle ( ) ; \n\t\tif ( ( x [ NUM00 ] != x [ NUM00 ] ) && ( ( xcycleBound >= x [ NUM00 ] ) && ( xcycleBound <= x [ NUM00 ] ) || ( xcycleBound >= x [ NUM00 ] ) && ( xcycleBound <= x [ NUM00 ] ) ) ) { \n\t\t\t$F1993 ( nx ) $F1993 ( ny ) $F603 ( nx , x ) $F603 ( nx , x ) $F603 ( ny , y ) $F603 ( ny , y ) nx [ NUM00 ] = xcycleBound ; \n\t\t\tny [ NUM00 ] = ( $F50510 ( y ) ) * ( xcycleBound - x [ NUM00 ] ) / ( $F50510 ( x ) ) + y [ NUM00 ] ; \n\t\t\tx = nx ; \n\t\t\ty = ny ; \n\t\t\t} \n\t\t} \n\tif ( rangeAxis instanceof CyclicNumberAxis ) { \n\t\tcnay = ( CyclicNumberAxis ) rangeAxis ; \n\t\tycycleBound = cnay . getCycleBound ( ) ; \n\t\tyBoundMapping = cnay . isBoundMappedToLastCycle ( ) ; \n\t\tif ( ( y [ NUM00 ] != y [ NUM00 ] ) && ( ( ycycleBound >= y [ NUM00 ] ) && ( ycycleBound <= y [ NUM00 ] ) || ( ycycleBound >= y [ NUM00 ] ) && ( ycycleBound <= y [ NUM00 ] ) ) ) { \n\t\t\t$F160815 ( nx , x ) $F160815 ( ny , y ) $F603 ( nx , x ) $F603 ( nx , x ) $F603 ( ny , y ) $F603 ( ny , y ) ny [ NUM00 ] = ycycleBound ; \n\t\t\tnx [ NUM00 ] = ( $F50510 ( x ) ) * ( ycycleBound - y [ NUM00 ] ) / ( $F50510 ( y ) ) + x [ NUM00 ] ; \n\t\t\tif $F9634 ( x ) { \n\t\t\t\t$F603 ( nx , x ) $F603 ( ny , y ) } \n\t\t\tx = nx ; \n\t\t\ty = ny ; \n\t\t\t} \n\t\telse if ( $F9634 ( x ) && ( y [ NUM00 ] != y [ NUM00 ] ) && ( ( ycycleBound >= y [ NUM00 ] ) && ( ycycleBound <= y [ NUM00 ] ) || ( ycycleBound >= y [ NUM00 ] ) && ( ycycleBound <= y [ NUM00 ] ) ) ) { \n\t\t\t$F1993 ( nx ) $F1993 ( ny ) $F603 ( nx , x ) $F603 ( nx , x ) $F603 ( nx , x ) $F603 ( ny , y ) $F603 ( ny , y ) $F603 ( ny , y ) ny [ NUM00 ] = ycycleBound ; \n\t\t\tnx [ NUM00 ] = ( $F50510 ( x ) ) * ( ycycleBound - y [ NUM00 ] ) / ( $F50510 ( y ) ) + x [ NUM00 ] ; \n\t\t\tx = nx ; \n\t\t\ty = ny ; \n\t\t\t} \n\t\t} \n\tif $F9634 ( x ) { \n\t\tsuper . drawItem ( g2 , state , dataArea , info , plot , domainAxis , rangeAxis , dataset , series , item , crosshairState , pass ) ; \n\t\t$F665 } \n\tOverwriteDataSet newset = new OverwriteDataSet ( x , y , dataset ) ; \n\tif ( cnax != null ) { \n\t\tif ( xcycleBound == x [ NUM00 ] ) { \n\t\t\tcnax . setBoundMappedToLastCycle ( x [ NUM00 ] <= xcycleBound ) ; \n\t\t\t} \n\t\tif ( xcycleBound == x [ NUM00 ] ) { \n\t\t\tcnax . setBoundMappedToLastCycle ( x [ NUM00 ] <= xcycleBound ) ; \n\t\t\t} \n\t\t} \n\tif ( cnay != null ) { \n\t\tif ( ycycleBound == y [ NUM00 ] ) { \n\t\t\tcnay . setBoundMappedToLastCycle ( y [ NUM00 ] <= ycycleBound ) ; \n\t\t\t} \n\t\tif ( ycycleBound == y [ NUM00 ] ) { \n\t\t\tcnay . setBoundMappedToLastCycle ( y [ NUM00 ] <= ycycleBound ) ; \n\t\t\t} \n\t\t} \n\tsuper . drawItem ( g2 , state , dataArea , info , plot , domainAxis , rangeAxis , newset , series , NUM00 , crosshairState , pass ) ; \n\tif ( cnax != null ) { \n\t\tif ( xcycleBound == x [ NUM00 ] ) { \n\t\t\tcnax . setBoundMappedToLastCycle ( x [ NUM00 ] <= xcycleBound ) ; \n\t\t\t} \n\t\tif ( xcycleBound == x [ NUM00 ] ) { \n\t\t\tcnax . setBoundMappedToLastCycle ( x [ NUM00 ] <= xcycleBound ) ; \n\t\t\t} \n\t\t} \n\tif ( cnay != null ) { \n\t\tif ( ycycleBound == y [ NUM00 ] ) { \n\t\t\tcnay . setBoundMappedToLastCycle ( y [ NUM00 ] <= ycycleBound ) ; \n\t\t\t} \n\t\tif ( ycycleBound == y [ NUM00 ] ) { \n\t\t\tcnay . setBoundMappedToLastCycle ( y [ NUM00 ] <= ycycleBound ) ; \n\t\t\t} \n\t\t} \n\tsuper . drawItem ( g2 , state , dataArea , info , plot , domainAxis , rangeAxis , newset , series , NUM00 , crosshairState , pass ) ; \n\tif $F9634 ( x ) { \n\t\tif ( cnax != null ) { \n\t\t\tif ( xcycleBound == x [ NUM00 ] ) { \n\t\t\t\tcnax . setBoundMappedToLastCycle ( x [ NUM00 ] <= xcycleBound ) ; \n\t\t\t\t} \n\t\t\tif ( xcycleBound == x [ NUM00 ] ) { \n\t\t\t\tcnax . setBoundMappedToLastCycle ( x [ NUM00 ] <= xcycleBound ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( cnay != null ) { \n\t\t\tif ( ycycleBound == y [ NUM00 ] ) { \n\t\t\t\tcnay . setBoundMappedToLastCycle ( y [ NUM00 ] <= ycycleBound ) ; \n\t\t\t\t} \n\t\t\tif ( ycycleBound == y [ NUM00 ] ) { \n\t\t\t\tcnay . setBoundMappedToLastCycle ( y [ NUM00 ] <= ycycleBound ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tsuper . drawItem ( g2 , state , dataArea , info , plot , domainAxis , rangeAxis , newset , series , NUM00 , crosshairState , pass ) ; \n\t\t} \n\tif ( cnax != null ) { \n\t\tcnax . setBoundMappedToLastCycle ( xBoundMapping ) ; \n\t\t} \n\tif ( cnay != null ) { \n\t\tcnay . setBoundMappedToLastCycle ( yBoundMapping ) ; \n\t\t} \n\t} \n"}, {"code": "public static void writeInt ( DataOutput out , int v ) throws IOException { \n\tout . writeByte ( NUM00 & v ) ; \n\tout . writeByte ( $F223664 ( v ) ) ; \n\tout . writeByte ( $F223664 ( v ) ) ; \n\tout . writeByte ( $F223664 ( v ) ) ; \n\t} \n"}, {"code": "public void writeField ( final String name , final double value ) throws $F3258 $F261761 ( writeField , name , Double , value ) "}, {"code": "public Creature calculateNextCreature ( final int questLevel ) { \n\tfinal List < Creature > possibleCreaturesToSpawn = new ArrayList < Creature > $F72 ; \n\tint lastLevel = NUM00 ; \n\tfor ( final Creature creature : sortedCreatures ) { \n\t\tif ( creature . getLevel ( ) > questLevel ) $F5153 if ( creature . getLevel ( ) > lastLevel ) { \n\t\t\t$F725 ( possibleCreaturesToSpawn ) lastLevel = creature . getLevel ( ) ; \n\t\t\t} \n\t\tpossibleCreaturesToSpawn . add ( creature ) ; \n\t\t} \n\tCreature creatureToSpawn = null ; \n\tif $F10471 ( possibleCreaturesToSpawn ) { \n\t\t$F14770 ( creatureToSpawn , sortedCreatures ) } \n\telse { \n\t\tCollections . shuffle ( possibleCreaturesToSpawn ) ; \n\t\t$F36986 ( creatureToSpawn , possibleCreaturesToSpawn ) } \n\treturn creatureToSpawn ; \n\t} \n"}, {"code": "$F1 public void before ( PropertyInfoRestRep oldProps , PropertyInfoRestRep newProps ) { \n\tString newIntervalStr = newProps . getProperty ( BackupConstants . SCHEDULE_INTERVAL ) ; \n\tString newStartTimeStr = newProps . getProperty ( BackupConstants . SCHEDULE_TIME ) ; \n\tif ( $F4251 ( newIntervalStr ) && $F4251 ( newStartTimeStr ) ) $F23406 ( _log ) String intervalStr = $F4251 ( newIntervalStr ) ? oldProps . getProperty ( BackupConstants . SCHEDULE_INTERVAL ) : newIntervalStr ; \n\tString startTimeStr = $F4251 ( newStartTimeStr ) ? oldProps . getProperty ( BackupConstants . SCHEDULE_TIME ) : newStartTimeStr ; \n\t$F21153 ( _log , intervalStr , startTimeStr ) validateBackupIntervalAndStartTime ( intervalStr , startTimeStr ) ; \n\t} \n"}, {"code": "$F1 public void deleteTrait ( String guid , String traitNameToBeDeleted ) throws AtlasException { \n\tguid = ParamChecker . notEmpty ( guid , NUM00 ) ; \n\ttraitNameToBeDeleted = ParamChecker . notEmpty ( traitNameToBeDeleted , NUM00 ) ; \n\tif ( ! typeSystem . isRegistered ( traitNameToBeDeleted ) ) { \n\t\t$F424057 ( msg , String , traitNameToBeDeleted ) LOG . error ( msg ) ; \n\t\tthrow new TypeNotFoundException ( msg ) ; \n\t\t} \n\trepository . deleteTrait ( guid , traitNameToBeDeleted ) ; \n\tonTraitDeletedFromEntity ( repository . getEntityDefinition ( guid ) , traitNameToBeDeleted ) ; \n\t} \n"}, {"code": "public void addTables ( Collection < Table > tables ) { \n\tfor ( Iterator < Table > it = tables . iterator ( ) ; \n\tit . hasNext ( ) ; \n\t) { \n\t\taddTable ( ( Table ) it . next ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "protected void writeFile ( String template , Writer writer ) { \n\t$F826 ( template ) $F5172 ( bufferedWriter , writer ) String output = replace ( template , null ) ; \n\ttry $F288 ( bufferedWriter , output ) catch ( IOException e ) { \n\t\tlogger . log ( Diagnostic . Kind . ERROR , NUM00 ) ; \n\t\t$F301 ( e ) } \n\tfinally $F236461 ( bufferedWriter , e ) } \n"}, {"code": "public static String slurpURLNoExceptions ( URL u , String encoding ) { \n\ttry $F8587 ( slurpURL , u , encoding ) $F84580 ( e ) } \n"}, {"code": "public synchronized boolean clear $F72 { \n\t$F58185 ( isLoading , _BOOL ) loader = new Thread $F8320 ; \n\t$F2346 ( loader ) return _BOOL ; \n\t} \n"}, {"code": "public int indexOf ( final RoundedToolItem item ) { \n\tcheckWidget ( ) ; \n\treturn items . indexOf ( item ) ; \n\t} \n"}, {"code": "public void addAttribute ( String alias , String typeUri , boolean required , int count ) throws MessageException { \n\tif ( alias . indexOf ( NUM00 ) > - NUM00 || alias . indexOf ( NUM00 ) > - NUM00 || alias . indexOf ( NUM00 ) > - NUM00 || alias . indexOf ( NUM00 ) > - NUM00 ) throw new MessageException ( NUM00 + alias ) ; \n\t_parameters . set ( new Parameter ( NUM00 + alias , typeUri ) ) ; \n\tString level = required ? NUM00 : NUM00 ; \n\tParameter levelParam = _parameters . getParameter ( level ) ; \n\tParameter newParam ; \n\tif ( levelParam == null ) { \n\t\tnewParam = new Parameter ( level , alias ) ; \n\t\t} \n\telse { \n\t\tnewParam = new Parameter ( level , levelParam . getValue ( ) + NUM00 + alias ) ; \n\t\t_parameters . removeParameters ( level ) ; \n\t\t} \n\t_parameters . set ( newParam ) ; \n\tsetCount ( alias , count ) ; \n\tif ( DEBUG ) _log . debug ( NUM00 + typeUri + NUM00 + alias + NUM00 + count + NUM00 + required ) ; \n\t} \n"}, {"code": "public Void call $F72 throws Exception { \n\tfinal List < $F8318 > tasks = new LinkedList < $F8318 > $F72 ; \n\ttry { \n\t\tfor ( IV $F5162 termId : graphs ) { \n\t\t\tfinal $F300911 ft = new $F300911 ( new DrainIteratorTask ( termId ) ) ; \n\t\t\ttasks . add ( ft ) ; \n\t\t\texecutor . execute ( ft ) ; \n\t\t\t} \n\t\tfor ( $F8318 f : tasks ) $F217730 ( f ) } \n\tcatch ( Throwable ex ) { \n\t\tfor ( $F8318 f : tasks ) f . cancel ( _BOOL ) ; \n\t\t$F5301 ( ex ) } \n\t$F3229 ( buffer ) $F1274 } \n"}, {"code": "protected void runFullImport $F5805 ( dataConfig , extraParams ) throws Exception { \n\t$F274034 ( params ) $F16824 ( params ) $F16824 ( params ) $F545 ( params , dataConfig ) $F16824 ( params ) $F16824 ( params ) params . putAll ( extraParams ) ; \n\tNamedList l = new NamedList $F72 ; \n\tfor ( $F19318 ( e , params ) ) { \n\t\tl . add ( $F15245 ( e ) ) ; \n\t\t} \n\tLocalSolrQueryRequest request = new LocalSolrQueryRequest ( h . getCore ( ) , l ) ; \n\th . query ( NUM00 , request ) ; \n\t} \n"}, {"code": "public String userIdFromRange ( Object ominId , Object omaxId ) { \n\t$F41834 ( minId , FunctionHandler , ominId ) $F41834 ( maxId , FunctionHandler , omaxId ) Stack $F2305 stack = getStack ( minId , maxId ) ; \n\tif $F3817 ( stack ) { \n\t\treturn Integer . toString ( stack . pop ( ) ) ; \n\t\t} \n\t$F824 } \n"}, {"code": "public void start $F72 { \n\tif ( isStarted ) $F23406 ( log ) $F973 ( log ) $F2346 ( systemConsumer ) isStarted = _BOOL ; \n\t} \n"}, {"code": "public static void generateBinaryOperationFlags $F124432 ( environment , nextOffset , result , resultSize , instructions ) throws IllegalArgumentException { \n\t$F1832 ( Preconditions , environment ) $F1832 ( Preconditions , result ) $F1832 ( Preconditions , resultSize ) $F1832 ( Preconditions , instructions ) final long baseOffset = nextOffset - instructions . size ( ) ; \n\tlong offset = nextOffset ; \n\tgenerateSignFlagCode ( environment , offset , result , resultSize , instructions ) ; \n\toffset = ( baseOffset + instructions . size ( ) ) - NUM00 ; \n\tinstructions . add ( ReilHelpers . createBisz ( offset + NUM00 , resultSize , result , OperandSize . BYTE , Helpers . ZERO_FLAG ) ) ; \n\tinstructions . add ( ReilHelpers . createStr ( offset + NUM00 , OperandSize . BYTE , NUM00 , OperandSize . BYTE , Helpers . CARRY_FLAG ) ) ; \n\tinstructions . add ( ReilHelpers . createStr ( offset + NUM00 , OperandSize . BYTE , NUM00 , OperandSize . BYTE , Helpers . OVERFLOW_FLAG ) ) ; \n\t} \n"}, {"code": "public boolean isLabelMovable $F72 { \n\tmxGraph graph = graphComponent . getGraph ( ) ; \n\tString label = graph . getLabel ( state . getCell ( ) ) ; \n\treturn graph . isLabelMovable ( state . getCell ( ) ) && label != null && $F20 ( label ) ; \n\t} \n"}, {"code": "public int writeTypeList ( TypeList typeList ) { \n\t$F35972 ( off , data ) $F5078 types = typeList . types ; \n\twriteInt ( types . length ) ; \n\tfor ( short type : types ) { \n\t\twriteShort ( type ) ; \n\t\t} \n\treturn off ; \n\t} \n"}, {"code": "public static void loadConfigResource ( String resourceName ) throws IOException { \n\t$F725 ( config ) config . putAll ( loadPropertiesFromResource ( resourceName ) ) ; \n\t} \n"}, {"code": "public static void safeCloseStream ( InputStream in ) { \n\tif ( in != null ) { \n\t\ttry $F881 ( in ) $F36160 ( log , e ) } \n\t} \n"}, {"code": "private Transaction createTransaction $F72 throws LeaseDeniedException , RemoteException , TransactionException { \n\tITransactionManagerProvider transactionManagerProvider = getTransactionManagerProvider ( ) ; \n\treturn ( TransactionFactory . create ( transactionManagerProvider . getTransactionManager ( ) , _config . getTransactionTimeout ( ) ) ) . transaction ; \n\t} \n"}, {"code": "public void skipWhile ( String skip ) throws IOException { \n\tchar ch ; \n\tdo $F20182 ( ch , read ) while ( $F136643 ( skip , ch ) ) ; \n\tunreadCharacter ( ch ) ; \n\t} \n"}, {"code": "public static String packageToPath ( String packageName ) { \n\treturn $F79251 ( packageName , File ) ; \n\t} \n"}, {"code": "$F1 public boolean containsKey ( Object key ) { \n\tif ( key == null ) $F40347 ( entryForNullKey ) $F17043 ( hash , key ) hash ^= $F14870 ( hash ) ^ $F14870 ( hash ) ; \n\thash ^= $F14870 ( hash ) ^ $F14870 ( hash ) ; \n\t$F152989 ( tab , table ) for ( $F152986 e = tab [ hash & $F33765 ( tab ) ] ; \n\te != null ; \n\te = e . next ) { \n\t\tK eKey = e . key ; \n\t\tif ( eKey == key || ( e . hash == hash && key . equals ( eKey ) ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected boolean isValidFragment ( String fragment ) { \n\t$F1933 ( fragment , _BOOL ) return isOff ( NO_FRAGMENTS ) ; \n\t} \n"}, {"code": "private void rehash $F72 { \n\tint oldCapacity = m_capacity ; \n\tHashEntry [ ] oldTable = m_table ; \n\tint newCapacity = NUM00 * oldCapacity + NUM00 ; \n\tm_capacity = newCapacity ; \n\t$F53239 ( m_threshold , newCapacity , m_loadFactor ) m_table = new HashEntry [ newCapacity ] ; \n\tfor ( $F18298 ( i , oldCapacity ) ) { \n\t\tfor ( HashEntry old = oldTable [ i ] ; \n\t\told != null ; \n\t\t) { \n\t\t\tHashEntry e = old ; \n\t\t\told = old . next ; \n\t\t\tint newIndex = e . hash % newCapacity ; \n\t\t\tif ( newIndex < NUM00 ) newIndex = - newIndex ; \n\t\t\te . next = m_table [ newIndex ] ; \n\t\t\tm_table [ newIndex ] = e ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void savePoisFromAssets $F72 { \n\tList < Poi > pois = poiAssetLoader . loadPoisFromAssets ( ) ; \n\tTimber . d ( $F2310 ( pois ) ) ; \n\tfor ( Poi poi : pois ) { \n\t\tTimber . d ( NUM00 , poi ) ; \n\t\tsavePoi ( poi ) ; \n\t\tTimber . d ( NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private void createElement ( Document doc , Element parentElement , String elementName , Color value ) { \n\t$F16570 ( element , doc , elementName ) element . appendChild ( doc . createTextNode ( ColourUtils . fromColour ( value ) ) ) ; \n\tparentElement . appendChild ( element ) ; \n\t} \n"}, {"code": "public static boolean beenDone ( @ Scope int scope , String tag , CountChecker numberOfTimes ) { \n\t$F27145 tagSeenDates = tagLastSeenMap . get ( tag ) ; \n\t$F4975 ( tagSeenDates , _BOOL ) if ( scope == THIS_APP_INSTALL ) { \n\t\treturn numberOfTimes . check ( tagSeenDates . size ( ) ) ; \n\t\t} \n\telse if ( scope == THIS_APP_SESSION ) { \n\t\tint counter = NUM00 ; \n\t\tfor ( String tagFromList : sessionList ) { \n\t\t\tif $F1238 ( tagFromList , tag ) { \n\t\t\t\tcounter ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn numberOfTimes . check ( counter ) ; \n\t\t} \n\telse { \n\t\tint counter = NUM00 ; \n\t\tfor ( Long seenDate : tagSeenDates ) { \n\t\t\tif ( seenDate > lastAppUpdatedTime ) { \n\t\t\t\tcounter ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn numberOfTimes . check ( counter ) ; \n\t\t} \n\t} \n"}, {"code": "void variableOperatorChanged ( int row , String oper ) { \n\tConditionalVariable variable = _variableList . get ( row ) ; \n\tint oldOper = variable . getOpern ( ) ; \n\tif ( row > NUM00 ) { \n\t\tif $F115488 ( oper , Bundle ) { \n\t\t\tvariable . setOpern ( Conditional . OPERATOR_OR ) ; \n\t\t\t} \n\t\telse { \n\t\t\tvariable . setOpern ( Conditional . OPERATOR_AND ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tvariable . setOpern ( Conditional . OPERATOR_NONE ) ; \n\t\t} \n\tif ( variable . getOpern ( ) != oldOper ) $F5795 ( makeAntecedent ) } \n"}, {"code": "public void addHeader ( String name , String val ) { \n\tmMsgHeader = mMsgHeader + name + NUM00 + val + mLineDelimiter ; \n\taddInternalHeaderFields ( name , val ) ; \n\t} \n"}, {"code": "public static void checkDuplicateRequest ( RedisClient redisClient , String uri , Buffer buffer , String ttl , Handler $F19437 callback ) { \n\tInteger timeToLive = parseTimeToLive ( ttl ) ; \n\tString redisKey = getRedisKey ( uri , HashCodeGenerator . createHashCode ( uri , buffer . toString ( ) ) ) ; \n\thandleStorage ( redisClient , redisKey , timeToLive , callback ) ; \n\t} \n"}, {"code": "boolean isHidden ( View view ) $F298 ( mHiddenViews , view ) "}, {"code": "public void writeExif ( InputStream jpegStream , OutputStream exifOutStream ) throws IOException { \n\t$F26831 ( jpegStream , exifOutStream , NULL_ARGUMENT_ ) OutputStream s = getExifWriterStream ( exifOutStream ) ; \n\tdoExifStreamIO ( jpegStream , s ) ; \n\t$F1206 ( s ) } \n"}, {"code": "public static void deleteRecursive ( $F4170 File fileOrDirectory ) { \n\tdeleteRecursive ( fileOrDirectory , Collections . EMPTY_LIST ) ; \n\t} \n"}, {"code": "static boolean doesMenuBarBorderToolBar ( JMenuBar c ) { \n\tJToolBar tb = ( JToolBar ) MetalToolBarUI . findRegisteredComponentOfType ( c , JToolBar . class ) ; \n\tif ( tb != null && tb . getOrientation ( ) == JToolBar . HORIZONTAL ) { \n\t\tJRootPane rp = SwingUtilities . getRootPane ( c ) ; \n\t\tPoint $F99935 ( point ) ; \n\t\tpoint = SwingUtilities . convertPoint ( c , point , rp ) ; \n\t\tint menuX = point . x ; \n\t\tint menuY = point . y ; \n\t\tpoint . x = point . y = NUM00 ; \n\t\tpoint = SwingUtilities . convertPoint ( tb , point , rp ) ; \n\t\treturn ( point . x == menuX && menuY + c . getHeight ( ) == point . y && c . getWidth ( ) == tb . getWidth ( ) ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "void constructNode ( String nodeName , String prefix , String nodeNamespace , TransformerImpl transformer ) throws TransformerException { \n\tboolean shouldAddAttrs ; \n\ttry { \n\t\tSerializationHandler rhandler = transformer . getResultTreeHandler ( ) ; \n\t\tif ( null == nodeName ) { \n\t\t\tshouldAddAttrs = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( null != prefix ) { \n\t\t\t\trhandler . startPrefixMapping ( prefix , nodeNamespace , _BOOL ) ; \n\t\t\t\t} \n\t\t\trhandler . startElement ( nodeNamespace , QName . getLocalPart ( nodeName ) , nodeName ) ; \n\t\t\tsuper . execute ( transformer ) ; \n\t\t\tshouldAddAttrs = _BOOL ; \n\t\t\t} \n\t\ttransformer . executeChildTemplates ( this , shouldAddAttrs ) ; \n\t\tif ( null != nodeName ) { \n\t\t\trhandler . endElement ( nodeNamespace , QName . getLocalPart ( nodeName ) , nodeName ) ; \n\t\t\tif ( null != prefix ) { \n\t\t\t\trhandler . endPrefixMapping ( prefix ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F237369 ( se ) } \n"}, {"code": "private PriorityQueue < USField > createQueue ( String fieldName , Map < String , Flt > words ) throws IOException { \n\t$F115 ( numDocs , ir ) FreqQ res = new FreqQ $F716 ( words ) ; \n\tfor ( $F3465 ( word , words ) ) { \n\t\tfloat tf = $F43419 ( words , word ) ; \n\t\tif ( minTermFreq > NUM00 && tf < minTermFreq ) $F1448 int docFreq = ir . docFreq ( new Term ( fieldName , word ) ) ; \n\t\tif ( minDocFreq > NUM00 && docFreq < minDocFreq ) $F1448 if ( docFreq == NUM00 || docFreq > maxDocFreq ) $F1448 float idf = similarity . idf ( docFreq , numDocs ) ; \n\t\tfloat score = NUM00 ; \n\t\tif ( isLogTf ( ) ) { \n\t\t\tscore = ( float ) ( Math . log ( tf + NUM00 ) * idf ) ; \n\t\t\t} \n\t\telse { \n\t\t\tscore = tf * idf ; \n\t\t\t} \n\t\tUSField mltField ; \n\t\tif ( isPayloadField ( fieldName ) ) { \n\t\t\tmltField = new USField ( word , fieldName , score , tf , idf , docFreq , NUM00 ) ; \n\t\t\t} \n\t\telse { \n\t\t\tmltField = new USField ( word , fieldName , score , tf , idf , docFreq ) ; \n\t\t\t} \n\t\tres . insertWithOverflow ( mltField ) ; \n\t\t} \n\treturn res ; \n\t} \n"}, {"code": "$F3441 ( journalWriter , writer , journalFileTmp , Util , MAGIC , VERSION_1 , Integer , appVersion , valueCount , entry , lruEntries , DIRTY , CLEAN , journalFile , renameTo , journalFileBackup , _BOOL ) "}, {"code": "public static void eachObject ( ObjectInputStream ois , Closure closure ) throws $F6427 { \n\ttry { \n\t\twhile ( _BOOL ) { \n\t\t\ttry { \n\t\t\t\t$F67404 ( obj , ois ) closure . call ( obj ) ; \n\t\t\t\t} \n\t\t\tcatch ( EOFException e ) $F5153 } \n\t\tInputStream temp = ois ; \n\t\tois = null ; \n\t\t$F59 ( temp ) } \n\t$F18632 ( closeWithWarning , ois ) } \n"}, {"code": "private static int exitWithStatus ( int status ) { \n\tif ( ToolIO . getMode ( ) == ToolIO . SYSTEM ) $F211576 ( System , status ) return status ; \n\t} \n"}, {"code": "public static double distanceInMeters $F22855 ( latP1 , latP2 , lonP1 , lonP2 ) { \n\tdouble distRad = Math . acos ( Math . sin ( toRadians ( latP1 ) ) * Math . sin ( toRadians ( latP2 ) ) + Math . cos ( toRadians ( latP1 ) ) * Math . cos ( toRadians ( latP2 ) ) * Math . cos ( toRadians ( lonP1 - lonP2 ) ) ) ; \n\tfinal double distAsDegree = toDegrees ( distRad ) ; \n\treturn distAsDegree * NUM00 * NUM00 * NUM00 ; \n\t} \n"}, {"code": "public void processChallenge ( final String challenge ) throws MalformedChallengeException { \n\tString s = AuthChallengeParser . extractScheme ( challenge ) ; \n\tif ( ! s . equalsIgnoreCase ( getSchemeName ( ) ) ) { \n\t\tthrow new MalformedChallengeException ( NUM00 + challenge ) ; \n\t\t} \n\t$F1384 ( i , challenge ) if ( i != - NUM00 ) { \n\t\t$F465724 ( s , challenge , i ) ; \n\t\tthis . ntlmchallenge = s . trim ( ) ; \n\t\tthis . state = TYPE2_MSG_RECEIVED ; \n\t\t} \n\telse { \n\t\tthis . ntlmchallenge = NUM00 ; \n\t\tif ( this . state == UNINITIATED ) { \n\t\t\tthis . state = INITIATED ; \n\t\t\t} \n\t\telse { \n\t\t\tthis . state = FAILED ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static BigInteger calculateA ( BigInteger p , BigInteger q , BigInteger gA , BigInteger x2s ) { \n\treturn gA . modPow ( x2s , p ) ; \n\t} \n"}, {"code": "public static MCostQueue add ( MProduct product , int M_AttributeSetInstance_ID , MAcctSchema as , int AD_Org_ID , int M_CostElement_ID , BigDecimal amt , BigDecimal qty , int precision , MCostDetail cd , String trxName ) { \n\tif ( CLogMgt . isLevelFine ( ) ) s_log . fine ( NUM00 + AD_Org_ID + NUM00 + product . get_ID ( ) + NUM00 + M_AttributeSetInstance_ID + NUM00 + amt + NUM00 + qty + NUM00 + precision ) ; \n\tMCostQueue cq = new MCostQueue ( product , M_AttributeSetInstance_ID , as , AD_Org_ID , M_CostElement_ID , trxName ) ; \n\tcq . setCosts ( amt , qty , precision ) ; \n\tcq . setDateAcct ( cd . getDateAcct ( ) ) ; \n\t$F45240 ( cq ) if ( CLogMgt . isLevelFine ( ) ) $F35577 ( s_log , cq ) return cq ; \n\t} \n"}, {"code": "public void addUndoEvent ( UndoInterface event ) { \n\tif ( shouldProcessUndoRedoAction ( ) ) { \n\t\tboolean atEndOfList = $F6389 ( currentIndex , undoList ) ; \n\t\tif ( ! atEndOfList ) { \n\t\t\twhile $F60125 ( undoList , currentIndex ) { \n\t\t\t\t$F40484 ( lastIndex , undoList ) undoList . remove ( lastIndex ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tundoList . add ( event ) ; \n\t\t$F8935 ( currentIndex , undoList ) updateMenuItems ( ) ; \n\t\tlogger . debug ( event . getStringRepresentation ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static Exception establishCacheIfNeeded ( PrintStream ... progress ) { \n\t$F5972 ( m_offline ) $F113304 ( REP_MIRROR , establishMirror ) Exception problem = null ; \n\tif ( INITIAL_CACHE_BUILD_NEEDED ) { \n\t\tfor ( PrintStream p : progress ) $F12204 ( p ) problem = refreshCache ( progress ) ; \n\t\tINITIAL_CACHE_BUILD_NEEDED = _BOOL ; \n\t\t} \n\treturn problem ; \n\t} \n"}, {"code": "public Spanny append ( CharSequence text , ImageSpan imageSpan ) { \n\ttext = NUM00 + text ; \n\tappend ( text ) ; \n\tsetSpan ( imageSpan , $F33381 ( length , text ) , $F33381 ( length , text ) + NUM00 ) ; \n\treturn this ; \n\t} \n"}, {"code": "public static boolean validatePassword ( String password , String correctHash ) throws $F36681 { \n\treturn validatePassword ( password . toCharArray ( ) , correctHash ) ; \n\t} \n"}, {"code": "public List < Snapshot > currentSnapshots ( String repositoryName ) { \n\tList < Snapshot > $F204 ( snapshotList ) ; \n\tList < SnapshotsInProgress . Entry > entries = currentSnapshots ( repositoryName , null ) ; \n\tfor ( SnapshotsInProgress . Entry entry : entries ) $F3762 ( snapshotList , inProgressSnapshot , entry ) CollectionUtil . timSort ( snapshotList ) ; \n\t$F26666 ( Collections , snapshotList ) } \n"}, {"code": "public void addCertificate ( X509CertificateHolder certificate ) throws CMSException { \n\tcerts . add ( certificate . toASN1Structure ( ) ) ; \n\t} \n"}, {"code": "public void testCase8 $F72 { \n\t$F15139 int aSign = NUM00 ; \n\t$F15143 $F3023 ( aNumber , aSign , aBytes ) BigInteger bNumber = BigInteger . ZERO ; \n\t$F7838 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "private void cleanStatic ( MethodNode method ) $F845 "}, {"code": "$F1 protected void paintTabBackground ( Graphics g , int tabPlacement , int tabIndex , int x , int y , int w , int h , boolean isSelected ) { \n\tif ( isSelected ) { \n\t\tif ( tabPlacement == TOP ) { \n\t\t\t$F202051 ( g , Color ) g . fillRoundRect ( x , y , w , h + R + R , R , R ) ; \n\t\t\t} \n\t\t} \n\telse $F845 } \n"}, {"code": "public void push ( final float value ) { \n\t$F31338 ( bits , Float , value ) if $F31340 ( bits ) { \n\t\tmv . visitInsn ( Opcodes . FCONST_0 + ( int ) value ) ; \n\t\t} \n\telse $F31345 ( mv , value ) } \n"}, {"code": "private Automaton buildAutomaton ( BytesRefHash termBytesHash ) { \n\tfinal TreeSet $F123079 terms = new TreeSet $F123079 $F72 ; \n\tfor ( $F2277 ( i , termBytesHash ) ) { \n\t\tBytesRef ref = new BytesRef $F72 ; \n\t\ttermBytesHash . get ( i , ref ) ; \n\t\tterms . add ( ref ) ; \n\t\t} \n\tfinal Automaton a = DaciukMihovAutomatonBuilder . build ( terms ) ; \n\treturn a ; \n\t} \n"}, {"code": "protected Range findRangeBounds ( CategoryDataset dataset , boolean includeInterval ) { \n\t$F1338 ( dataset ) if ( getDataBoundsIncludesVisibleSeriesOnly ( ) ) { \n\t\t$F19151 ( visibleSeriesKeys ) $F160876 ( seriesCount , dataset ) for ( $F119 ( s , seriesCount ) ) { \n\t\t\tif ( isSeriesVisible ( s ) ) { \n\t\t\t\tvisibleSeriesKeys . add ( dataset . getRowKey ( s ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn DatasetUtilities . findRangeBounds ( dataset , visibleSeriesKeys , includeInterval ) ; \n\t\t} \n\telse { \n\t\treturn DatasetUtilities . findRangeBounds ( dataset , includeInterval ) ; \n\t\t} \n\t} \n"}, {"code": "protected String adminShutdown $F72 { \n\t$F733 ( server ) $F1278 } \n"}, {"code": "public long num_threads $F72 $F12907 ( Long , fields ) "}, {"code": "public void assignRole ( AMRole role ) throws $F52710 { \n\tassignRole ( role . getDN ( ) ) ; \n\t} \n"}, {"code": "public OrderedThreadPoolExecutor ( int corePoolSize , int maximumPoolSize ) { \n\tthis ( corePoolSize , maximumPoolSize , DEFAULT_KEEP_ALIVE , TimeUnit . SECONDS , Executors . defaultThreadFactory ( ) , null ) ; \n\t} \n"}, {"code": "protected void writeInitialStyles $F72 throws IOException { \n\tout . flushBits ( ) ; \n\tfillBits = OutStream . determineUnsignedBitSize ( fillStyles . size ( ) ) ; \n\tlineBits = OutStream . determineUnsignedBitSize ( lineStyles . size ( ) ) ; \n\tif ( ! hasStyle ) { \n\t\tfillBits = NUM00 ; \n\t\t} \n\telse { \n\t\twriteStyles ( fillStyles ) ; \n\t\twriteStyles ( lineStyles ) ; \n\t\tout . flushBits ( ) ; \n\t\t} \n\tout . writeUBits ( NUM00 , fillBits ) ; \n\tout . writeUBits ( NUM00 , lineBits ) ; \n\t} \n"}, {"code": "public static < T extends $F19317 > String formEncode $F50316 ( parameters ) throws IOException { \n\t$F1538 ( b ) formEncode ( parameters , b ) ; \n\treturn new String $F87573 ( b ) ; \n\t} \n"}, {"code": "public void test_singleResourceLocking_serialized_lowConcurrency2 $F72 throws Exception { \n\t$F2697 ( properties ) $F154944 ( properties , TestOptions ) $F154946 ( properties , TestOptions ) $F130263 ( properties , TestOptions ) $F130265 ( properties , TestOptions ) $F130267 ( properties , TestOptions ) $F130271 ( properties , TestOptions ) $F130273 ( properties , TestOptions ) doComparisonTest ( properties ) ; \n\t} \n"}, {"code": "public void runNextPendingCommand $F72 { \n\tRunnable runnable = deltaQueue . pop ( ) ; \n\t$F21687 ( runnable ) } \n"}, {"code": "public void stop ( int timeout ) throws InterruptedException { \n\tif $F151263 ( isclosed , _BOOL ) $F932 List < WebSocket > socketsToClose = null ; \n\tsynchronized ( connections ) { \n\t\tsocketsToClose = new ArrayList < WebSocket > ( connections ) ; \n\t\t} \n\tfor ( WebSocket ws : socketsToClose ) { \n\t\tws . close ( CloseFrame . GOING_AWAY ) ; \n\t\t} \n\tsynchronized ( this ) { \n\t\tif ( selectorthread != null && selectorthread != Thread . currentThread ( ) ) { \n\t\t\t$F164395 ( selector ) $F7589 ( selectorthread ) selectorthread . join ( timeout ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private static Document loadDocument ( Resource xmlFile ) throws $F55616 { \n\tDOMParser parser = new DOMParser $F72 ; \n\tInputStream is = null ; \n\ttry { \n\t\tis = IOUtil . toBufferedInputStream ( xmlFile . getInputStream ( ) ) ; \n\t\t$F77995 ( source , is ) parser . parse ( source ) ; \n\t\t} \n\tfinally { \n\t\tIOUtil . closeEL ( is ) ; \n\t\t} \n\treturn parser . getDocument ( ) ; \n\t} \n"}, {"code": "public void test_DivideBigDecimalRoundingModeDOWN $F72 { \n\tString a = NUM00 ; \n\tString b = NUM00 ; \n\tRoundingMode rm = RoundingMode . DOWN ; \n\tString c = NUM00 ; \n\t$F29821 ( aNumber , a ) $F29821 ( bNumber , b ) $F29822 ( result , aNumber , bNumber , rm ) $F1925 ( assertEquals , c , result ) } \n"}, {"code": "public void removeAnnotation ( int index ) { \n\tmAnnotations . remove ( index ) ; \n\tmStringXY . removeByIndex ( index ) ; \n\t} \n"}, {"code": "public String replace ( char oldChar , char newChar ) { \n\t$F1469 buffer = value ; \n\tint _offset = offset ; \n\tint _count = count ; \n\tint idx = _offset ; \n\tint last = _offset + _count ; \n\tboolean copied = _BOOL ; \n\twhile ( idx < last ) { \n\t\tif ( buffer [ idx ] == oldChar ) { \n\t\t\tif ( ! copied ) { \n\t\t\t\t$F18064 ( newBuffer , _count ) $F21535 ( System , buffer , _offset , newBuffer , _count ) buffer = newBuffer ; \n\t\t\t\tidx -= _offset ; \n\t\t\t\tlast -= _offset ; \n\t\t\t\tcopied = _BOOL ; \n\t\t\t\t} \n\t\t\tbuffer [ idx ] = newChar ; \n\t\t\t} \n\t\tidx ++ ; \n\t\t} \n\treturn copied ? new String ( NUM00 , count , buffer ) : this ; \n\t} \n"}, {"code": "public static void touch ( File file ) throws IOException { \n\tif $F1906 ( file ) { \n\t\tOutputStream out = openOutputStream ( file ) ; \n\t\tIOUtils . closeQuietly ( out ) ; \n\t\t} \n\tboolean success = $F266936 ( file , System ) ; \n\t$F252414 ( success , file ) } \n"}, {"code": "private < Type extends Message > RpcCallback $F12993 wrapsCallback ( MockCallback $F1011 callback ) { \n\tEasyMock . reportMatcher ( new WrapsCallback ( callback ) ) ; \n\t$F1274 } \n"}, {"code": "public boolean shouldSelectCell ( EventObject e ) { \n\tlog . finest ( m_mField . getColumnName ( ) ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void prepareUnicode ( final StringBuilder buffer , final ByteSequence sequence , final boolean trim , final boolean foldCase ) { \n\tReject . ifNull ( buffer , sequence ) ; \n\t$F11550 ( length , sequence ) for ( $F119 ( i , length ) ) { \n\t\tfinal byte b = sequence . byteAt ( i ) ; \n\t\tif ( ( b & NUM00 ) != b ) { \n\t\t\tMappingTable . map ( buffer , sequence . subSequence ( i , length ) , trim , foldCase ) ; \n\t\t\tString normalizedForm = Normalizer . normalize ( buffer , Form . NFKD ) ; \n\t\t\t$F4910 ( buffer ) buffer . append ( normalizedForm ) ; \n\t\t\t$F597 } \n\t\tswitch ( b ) { \n\t\t\t$F1262 if ( canMapToSpace ( buffer , trim ) ) $F86 ( buffer ) $F597 $F1267 if ( b >= NUM00 && b < NUM00 ) { \n\t\t\t\tif ( canMapToSpace ( buffer , trim ) ) $F288 ( buffer , SPACE_CHAR ) } \n\t\t\telse if ( $F19295 ( b ) || $F19295 ( b ) || b == NUM00 ) $F5153 else if ( foldCase && b >= NUM00 && b <= NUM00 ) $F46359 ( buffer , b ) else $F46352 ( buffer , b ) $F597 } \n\t\t} \n\tif ( trim ) { \n\t\tfor ( $F22866 ( i , buffer ) ; \n\t\ti > NUM00 ; \n\t\ti -- ) { \n\t\t\tif $F44927 ( buffer , i , SPACE_CHAR ) { \n\t\t\t\tbuffer . delete ( i , i + NUM00 ) ; \n\t\t\t\t} \n\t\t\telse $F5153 } \n\t\t} \n\t} \n"}, {"code": "public void testCase18 $F72 { \n\t$F45030 $F45033 $F15143 int aSign = NUM00 ; \n\tint bSign = NUM00 ; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F3024 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "$F2304 public BugInstance addClass ( ClassNode classNode ) { \n\tString dottedClassName = ClassName . toDottedClassName ( classNode . name ) ; \n\tClassAnnotation classAnnotation = new ClassAnnotation ( dottedClassName ) ; \n\tadd ( classAnnotation ) ; \n\treturn this ; \n\t} \n"}, {"code": "public static void tryFormatSatisfiability ( String format ) throws IllegalFormatException { \n\tMessageFormat . format ( format , ( $F131 ) null ) ; \n\t} \n"}, {"code": "public static int parseUpperMap ( String s ) throws NumberFormatException { \n\tint upperCase = MAP_UNDEFINED ; \n\t$F115 ( length , s ) if $F56314 ( length ) $F123126 ( upperCase , Integer , s ) else if $F35625 ( s ) { \n\t\t$F21291 } \n\treturn upperCase ; \n\t} \n"}, {"code": "$F1 public void run $F72 { \n\twhile $F931 ( isInterrupted ) { \n\t\ttry { \n\t\t\tReference ref = _queue . remove ( ) ; \n\t\t\t_entryInfos . remove ( ref ) ; \n\t\t\t} \n\t\tcatch ( InterruptedException e ) $F151805 ( interrupt ) } \n\t} \n"}, {"code": "private File createZipFile ( int entryCount , int entrySize ) throws IOException { \n\tFile result = createTemporaryZipFile ( ) ; \n\t$F12496 ( writeBuffer ) $F6822 ( random ) ZipOutputStream out = new ZipOutputStream ( new BufferedOutputStream $F4443 ( result ) ) ; \n\tfor ( $F1316 ( entry , entryCount ) ) { \n\t\tZipEntry ze = new ZipEntry ( Integer . toHexString ( entry ) ) ; \n\t\tout . putNextEntry ( ze ) ; \n\t\tfor ( int i = NUM00 ; \n\t\ti < entrySize ; \n\t\ti += writeBuffer . length ) { \n\t\t\trandom . nextBytes ( writeBuffer ) ; \n\t\t\tint byteCount = Math . min ( writeBuffer . length , entrySize - i ) ; \n\t\t\t$F11584 ( out , writeBuffer , byteCount ) } \n\t\t$F22108 ( out ) } \n\t$F59 ( out ) return result ; \n\t} \n"}, {"code": "private boolean isValidPlaylistName ( String newName ) { \n\tPlaylist blankPlaylist = new Playlist ( newName , _BOOL ) ; \n\treturn $F1030 ( newName ) && ! musicLibrary . containsPlaylist ( blankPlaylist ) ; \n\t} \n"}, {"code": "public String importXML ( String fileName , Properties ctx , String trxName ) throws Exception { \n\t$F556 ( log , fileName ) $F1705 ( in , fileName ) if $F1906 ( in ) { \n\t\tString msg = NUM00 + fileName ; \n\t\t$F556 ( log , msg ) return msg ; \n\t\t} \n\ttry { \n\t\t$F973 ( log ) $F2699 ( System ) PackInHandler handler = new PackInHandler $F72 ; \n\t\thandler . set_TrxName ( trxName ) ; \n\t\thandler . setCtx ( ctx ) ; \n\t\thandler . setProcess ( this ) ; \n\t\t$F2218 ( factory , SAXParserFactory ) $F49819 ( parser , factory ) String msg = NUM00 ; \n\t\tlog . info ( msg ) ; \n\t\tparser . parse ( in , handler ) ; \n\t\tmsg = NUM00 ; \n\t\tlog . info ( msg ) ; \n\t\t$F1278 } \n\tcatch ( Exception e ) { \n\t\t$F65048 ( log , Level , e ) throw e ; \n\t\t} \n\t} \n"}, {"code": "public synchronized void logAddOrRemoveRow ( Session session , int tableId , Row row , boolean add ) { \n\tif ( logMode != LOG_MODE_OFF ) { \n\t\tif ( ! recoveryRunning ) { \n\t\t\tlog . logAddOrRemoveRow ( session , tableId , row , add ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public org . smpte_ra . schemas . st2067_2_2016 . DigestMethodType buildDefaultDigestMethodType $F72 { \n\torg . smpte_ra . schemas . st2067_2_2016 . DigestMethodType digestMethodType = new org . smpte_ra . schemas . st2067_2_2016 . DigestMethodType $F72 ; \n\tdigestMethodType . setAlgorithm ( CompositionPlaylistBuilder_2016 . defaultHashAlgorithm ) ; \n\treturn digestMethodType ; \n\t} \n"}, {"code": "public static < V extends SampledVertex > $F25669 createSampledPartition ( $F147152 vertices ) { \n\t$F25669 partition = new HashSet $F2193 $F72 ; \n\tfor ( V vertex : vertices ) { \n\t\tif ( vertex . isSampled ( ) ) partition . add ( vertex ) ; \n\t\t} \n\treturn partition ; \n\t} \n"}, {"code": "public GremlinTransactionManager ( GremlinGraphFactory graphFactory ) { \n\tsuper ( ) ; \n\tthis . graphFactory = graphFactory ; \n\t} \n"}, {"code": "public void shiftBeans ( BeanInstance toShiftTo , boolean save ) { \n\tif ( save ) { \n\t\tm_originalCoords = new Vector $F67121 $F72 ; \n\t\t} \n\t$F121945 ( targetX , toShiftTo ) $F55855 ( targetY , toShiftTo ) for ( $F2277 ( i , m_subFlow ) ) { \n\t\tBeanInstance temp = ( BeanInstance ) m_subFlow . elementAt ( i ) ; \n\t\tif ( save ) { \n\t\t\tPoint p = new Point ( temp . getX ( ) - targetX , temp . getY ( ) - targetY ) ; \n\t\t\tm_originalCoords . add ( p ) ; \n\t\t\t} \n\t\ttemp . setX ( targetX ) ; \n\t\ttemp . setY ( targetY ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 protected final List < LatLong > doInBackground ( final Object ... args ) { \n\tList < LatLong > $F204 ( points ) ; \n\tDataHelper dbHelper = new DataHelper ( mContext ) ; \n\tfinal ArrayList < PositionRecord > positions = dbHelper . loadPositions ( ( Integer ) args [ SESSION_ID ] , ( Double ) args [ MIN_LAT_COL ] , ( Double ) args [ MAX_LAT_COL ] , ( Double ) args [ MIN_LON_COL ] , ( Double ) args [ MAX_LON_COL ] ) ; \n\tfor ( PositionRecord position : positions ) { \n\t\tpoints . add ( new LatLong ( position . getLatitude ( ) , position . getLongitude ( ) ) ) ; \n\t\t} \n\treturn points ; \n\t} \n"}, {"code": "public void make $F72 throws Exception { \n\tfor ( $F2277 ( i , _makeList ) ) { \n\t\tMake make = _makeList . get ( i ) ; \n\t\t$F790 ( make ) } \n\t} \n"}, {"code": "$F1 void deletedText ( CharacterDataImpl node , int offset , int count ) { \n\tif ( ranges != null ) { \n\t\tnotifyRangesDeletedText ( node , offset , count ) ; \n\t\t} \n\t} \n"}, {"code": "$F49286 ( value , absMin , absMax , absValue , Math ) "}, {"code": "private ApplicationEnvironment $F72 { \n\ttry { \n\t\tif ( System . getProperty ( BootstrapProperties . IS_UBERJAR ) != null ) { \n\t\t\tthis . mode = Mode . UBERJAR ; \n\t\t\t$F21685 ( loadWildFlySwarmApplicationManifestFromClasspath , loadWildFlySwarmApplicationManifestFromTCCL ) } \n\t\telse { \n\t\t\tthis . mode = Mode . CLASSPATH ; \n\t\t\tloadFractionManifestsFromClasspath ( ) ; \n\t\t\t} \n\t\t} \n\t$F12153 ( e ) } \n"}, {"code": "public ProducerWorker ( String topic , String message ) { \n\tthis . _topic = topic ; \n\tthis . _message = message ; \n\t} \n"}, {"code": "private void tabCreatedInForeground ( int id , int sourceId , boolean newIsIncognito , float originX , float originY ) { \n\tLayoutTab newLayoutTab = createLayoutTab ( id , newIsIncognito , NO_CLOSE_BUTTON , NO_TITLE ) ; \n\tif $F12414 ( mLayoutTabs ) { \n\t\tmLayoutTabs = new LayoutTab [ ] { \n\t\t\tnewLayoutTab } \n\t\t; \n\t\t} \n\telse { \n\t\tmLayoutTabs = new LayoutTab [ ] { \n\t\t\tmLayoutTabs [ NUM00 ] , newLayoutTab } \n\t\t; \n\t\t} \n\tupdateCacheVisibleIds ( new $F114083 ( Arrays . asList ( id , sourceId ) ) ) ; \n\tnewLayoutTab . setBorderAlpha ( NUM00 ) ; \n\tnewLayoutTab . setStaticToViewBlend ( NUM00 ) ; \n\tforceAnimationToFinish ( ) ; \n\tInterpolator interpolator = BakedBezierInterpolator . TRANSFORM_CURVE ; \n\taddToAnimation ( newLayoutTab , LayoutTab . Property . SCALE , NUM00 , NUM00 , FOREGROUND_ANIMATION_DURATION , NUM00 , _BOOL , interpolator ) ; \n\taddToAnimation ( newLayoutTab , LayoutTab . Property . ALPHA , NUM00 , NUM00 , FOREGROUND_ANIMATION_DURATION , NUM00 , _BOOL , interpolator ) ; \n\taddToAnimation ( newLayoutTab , LayoutTab . Property . X , originX , NUM00 , FOREGROUND_ANIMATION_DURATION , NUM00 , _BOOL , interpolator ) ; \n\taddToAnimation ( newLayoutTab , LayoutTab . Property . Y , originY , NUM00 , FOREGROUND_ANIMATION_DURATION , NUM00 , _BOOL , interpolator ) ; \n\tmTabModelSelector . selectModel ( newIsIncognito ) ; \n\tstartHiding ( id , _BOOL ) ; \n\t} \n"}, {"code": "private static boolean functionsAreAllowed ( boolean isAddAllFunction , boolean isPutAllFunction , $F6969 classD , $F6969 classS ) { \n\tif ( isAddAllFunction ) return collectionIsAssignableFrom ( classD ) && collectionIsAssignableFrom ( classS ) ; \n\tif ( isPutAllFunction ) return mapIsAssignableFrom ( classD ) && mapIsAssignableFrom ( classS ) ; \n\treturn isAssignableFrom ( classD , classS ) ; \n\t} \n"}, {"code": "private void loadOrgAccessUser ( ArrayList < OrgAccess > list ) { \n\tPreparedStatement pstmt = null ; \n\tResultSet rs = null ; \n\tString sql = NUM00 + NUM00 ; \n\ttry { \n\t\t$F213538 ( pstmt , DB , sql , get_TrxName ) pstmt . setInt ( NUM00 , getAD_User_ID ( ) ) ; \n\t\t$F47578 ( rs , pstmt ) while $F1682 ( rs ) { \n\t\t\tMUserOrgAccess oa = new MUserOrgAccess ( getCtx ( ) , rs , get_TrxName ( ) ) ; \n\t\t\tloadOrgAccessAdd ( list , new OrgAccess ( oa . getAD_Client_ID ( ) , oa . getAD_Org_ID ( ) , oa . isReadOnly ( ) ) ) ; \n\t\t\t} \n\t\t} \n\t$F230362 ( log , Level , sql , e ) finally $F161384 ( DB , rs , pstmt ) } \n"}, {"code": "public void close $F72 { \n\tsynchronized ( mDiskCacheLock ) { \n\t\tif ( mDiskLruCache != null ) { \n\t\t\ttry { \n\t\t\t\t$F232047 ( mDiskLruCache ) } \n\t\t\tcatch ( Throwable e ) { \n\t\t\t\tLogUtils . e ( $F1573 ( e ) ) ; \n\t\t\t\t} \n\t\t\tmDiskLruCache = null ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private $F155279 createVolumeMapForExportMask ( ExportMask exportMask ) { \n\t$F155279 $F8690 ( map ) ; \n\tfor ( URI uri : ExportMaskUtils . getVolumeURIs ( exportMask ) ) { \n\t\tmap . put ( uri , ExportGroup . LUN_UNASSIGNED ) ; \n\t\t} \n\treturn map ; \n\t} \n"}, {"code": "$F1 public void close $F72 throws IOException { \n\tSocketChannel s = _channel ; \n\t_channel = null ; \n\tSSLSocket sslSocket = _sslSocket ; \n\t_sslSocket = null ; \n\t$F111205 ( sslSocket ) $F111205 ( s ) } \n"}, {"code": "public static Vector3D max ( Vector3D a , Vector3D b ) { \n\treturn new Vector3D ( FastMath . max ( a . getX ( ) , b . getX ( ) ) , FastMath . max ( a . getY ( ) , b . getY ( ) ) , FastMath . max ( a . getZ ( ) , b . getZ ( ) ) ) ; \n\t} \n"}, {"code": "public static void waitForProcessOutput ( Process self , OutputStream output , OutputStream error ) { \n\tThread tout = consumeProcessOutputStream ( self , output ) ; \n\tThread terr = consumeProcessErrorStream ( self , error ) ; \n\ttry $F45915 ( tout ) $F36781 try $F45915 ( terr ) $F36781 try { \n\t\t$F84402 ( self ) } \n\t$F36781 closeStreams ( self ) ; \n\t} \n"}, {"code": "$F49286 ( value , absMin , absMax , absValue , Math ) "}, {"code": "$F1322 ( criteria , oredCriteria ) "}, {"code": "public CommandLine add ( String ... args ) { \n\tif $F22195 ( args ) $F122380 ( Collections , line , args ) return this ; \n\t} \n"}, {"code": "$F1 final $F75433 find ( int h , long k ) { \n\tfor ( $F75433 e = first ; \n\te != null ; \n\t) { \n\t\tint s ; \n\t\tif ( ( ( s = lockState ) & ( WAITER | WRITER ) ) != NUM00 ) { \n\t\t\tif ( ( e . key == k ) ) { \n\t\t\t\treturn e ; \n\t\t\t\t} \n\t\t\te = e . next ; \n\t\t\t} \n\t\telse if ( U . compareAndSwapInt ( this , LOCKSTATE , s , s + READER ) ) { \n\t\t\tTreeNode $F2193 r ; \n\t\t\tTreeNode $F2193 p ; \n\t\t\ttry { \n\t\t\t\tp = ( ( r = root ) == null ? null : r . findTreeNode ( h , k ) ) ; \n\t\t\t\t} \n\t\t\tfinally { \n\t\t\t\tThread w ; \n\t\t\t\tif ( getAndAddInt ( this , LOCKSTATE , - READER ) == ( READER | WAITER ) && ( w = waiter ) != null ) { \n\t\t\t\t\tLockSupport . unpark ( w ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\treturn p ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "$F1 public AxisState draw ( Graphics2D g2 , double cursor , Rectangle2D plotArea , Rectangle2D dataArea , RectangleEdge edge , PlotRenderingInfo plotState ) { \n\tAxisState axisState = new AxisState ( cursor ) ; \n\tif ( isAxisLineVisible ( ) ) { \n\t\tdrawAxisLine ( g2 , cursor , dataArea , edge ) ; \n\t\t} \n\tif ( isTickMarksVisible ( ) ) { \n\t\tdrawTickMarks ( g2 , axisState , dataArea , edge ) ; \n\t\t} \n\tif ( isTickLabelsVisible ( ) ) { \n\t\tfor ( int band = NUM00 ; \n\t\tband < this . labelInfo . length ; \n\t\tband ++ ) $F29639 ( axisState , drawTickLabels , band , g2 , dataArea , edge ) } \n\tif $F89491 ( getAttributedLabel ) $F197485 ( axisState , drawAttributedLabel , getAttributedLabel , g2 , plotArea , dataArea , edge ) else $F197485 ( axisState , drawLabel , getLabel , g2 , plotArea , dataArea , edge ) return axisState ; \n\t} \n"}, {"code": "private $F109649 readContents ( Path fetchlist ) throws IOException { \n\tSequenceFile . Reader reader = new SequenceFile . Reader ( fs , fetchlist , conf ) ; \n\t$F109649 l = new $F109649 $F72 ; \n\tREAD : do { \n\t\tText key = new Text $F72 ; \n\t\tCrawlDatum value = new CrawlDatum $F72 ; \n\t\tif ( ! reader . next ( key , value ) ) { \n\t\t\tbreak READ ; \n\t\t\t} \n\t\tl . add ( new URLCrawlDatum ( key , value ) ) ; \n\t\t} \n\twhile ( _BOOL ) ; \n\t$F59 ( reader ) return l ; \n\t} \n"}, {"code": "public void playTogether ( Collection $F113170 items ) { \n\tif $F8841 ( items ) { \n\t\tmNeedsSort = _BOOL ; \n\t\tBuilder builder = null ; \n\t\tfor ( Animator anim : items ) { \n\t\t\tif ( builder == null ) { \n\t\t\t\tbuilder = play ( anim ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tbuilder . with ( anim ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static Color createRandomColour $F72 { \n\tfloat r = rand . nextFloat ( ) ; \n\tfloat g = rand . nextFloat ( ) ; \n\tfloat b = rand . nextFloat ( ) ; \n\tColor randomColor = new Color ( r , g , b ) ; \n\treturn randomColor ; \n\t} \n"}, {"code": "private static Pair < DiagnosticKind , Boolean > parseCategoryString ( String category ) { \n\tfinal String fixable = NUM00 ; \n\tfinal boolean isFixable = category . startsWith ( fixable ) ; \n\tif ( isFixable ) $F262837 ( category , fixable ) DiagnosticKind categoryEnum = DiagnosticKind . fromParseString ( category ) ; \n\treturn Pair . of ( categoryEnum , isFixable ) ; \n\t} \n"}, {"code": "public void legacyProcess ( Class clazz , Method m , MethodAppearanceDecision decision ) { \n\tif ( m . getDeclaringClass ( ) != $F12222 && m . getReturnType ( ) != $F78753 && $F36180 ( m ) == NUM00 ) { \n\t\t$F20605 ( mName , m ) if ( ! looksLikePropertyReadMethod ( mName ) ) { \n\t\t\tdecision . setExposeMethodAs ( null ) ; \n\t\t\ttry { \n\t\t\t\tdecision . setExposeAsProperty ( new PropertyDescriptor ( mName , clazz , mName , null ) ) ; \n\t\t\t\t} \n\t\t\tcatch ( IntrospectionException e ) $F9491 ( e ) } \n\t\t} \n\t} \n"}, {"code": "public SPTKPitchReaderWriter ( String lf0SPTKFile , float windowSizeInSeconds , float skipSizeInSeconds , int samplingRate ) { \n\tcontour = null ; \n\theader = new PitchFileHeader $F72 ; \n\theader . windowSizeInSeconds = windowSizeInSeconds ; \n\theader . skipSizeInSeconds = skipSizeInSeconds ; \n\theader . fs = samplingRate ; \n\ttry { \n\t\tcontour = readSPTKF0Data ( lf0SPTKFile ) ; \n\t\t} \n\t$F12241 ( e ) } \n"}, {"code": "public void abort $F72 { \n\tcleanUp ( ) ; \n\tif ( mFuture != null ) { \n\t\tmFuture . cancel ( _BOOL ) ; \n\t\tmFuture = null ; \n\t\t} \n\tif ( mExecutorService != null ) { \n\t\t$F5832 ( mExecutorService ) mExecutorService = null ; \n\t\t} \n\tmListener = null ; \n\t} \n"}, {"code": "public void addCSPStateListener ( CSPStateListener listener ) $F207 ( listeners , listener ) "}, {"code": "public static void printWrappedText ( final PrintStream stream , final String message ) { \n\tif ( stream != null && message != null && $F1030 ( message ) ) { \n\t\tstream . println ( wrapText ( message , MAX_LINE_WIDTH ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void removeAtRange ( int index , int size ) { \n\tfinal int end = Math . min ( mSize , index + size ) ; \n\tfor ( int i = index ; \n\ti < end ; \n\ti ++ ) { \n\t\tremoveAt ( i ) ; \n\t\t} \n\t} \n"}, {"code": "public static void assertNullability ( ResultSet rs , $F8748 nullability ) throws SQLException { \n\t$F19097 ( rsmd , rs ) $F16742 ( actualCols , rsmd ) assertEquals ( NUM00 , nullability . length , rsmd . getColumnCount ( ) ) ; \n\tfor ( $F119 ( i , actualCols ) ) { \n\t\tint expected = nullability [ i ] ? ResultSetMetaData . columnNullable : ResultSetMetaData . columnNoNulls ; \n\t\tassertEquals ( NUM00 + ( i + NUM00 ) , expected , rsmd . isNullable ( i + NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "private synchronized Rect [ ] computeBoundingBoxes $F72 { \n\tif $F16476 ( boundingBoxes ) { \n\t\tRect [ ] bb = new Rect [ $F181356 ( contours ) ] ; \n\t\tfor ( $F2277 ( i , contours ) ) { \n\t\t\tbb [ i ] = boundingRect ( contours . get ( i ) ) ; \n\t\t\t} \n\t\tboundingBoxes = Optional . of ( bb ) ; \n\t\t} \n\t$F1521 ( boundingBoxes ) } \n"}, {"code": "public void addTimeline ( final JSONObject timeline ) { \n\tTimelineChannel . notifyTimeline ( timeline ) ; \n\ttimelines . addFirst ( timeline ) ; \n\t$F10411 ( maxCnt , Symphonys ) if $F60125 ( timelines , maxCnt ) $F106 ( timelines , maxCnt ) } \n"}, {"code": "private boolean loadLOBData $F72 { \n\tif ( isStoreAttachmentsOnFileSystem ) $F2905 ( loadLOBDataFromFileSystem ) return loadLOBDataFromDB ( ) ; \n\t} \n"}, {"code": "protected void paintComponent ( Graphics g ) { \n\tbackgroundPainter . paint ( g , getVisibleRect ( ) ) ; \n\tTextUI ui = getUI ( ) ; \n\tif ( ui != null ) { \n\t\tGraphics scratchGraphics = g . create ( ) ; \n\t\ttry { \n\t\t\tui . update ( scratchGraphics , this ) ; \n\t\t\t} \n\t\t$F47533 ( scratchGraphics ) } \n\t} \n"}, {"code": "public static $F4203 $F5675 copyToArrayListWithExtraCapacity ( $F10809 elements , int extraCapacity ) { \n\t$F5675 asList ; \n\tif ( elements != null ) { \n\t\tasList = new $F5676 ( elements . length + extraCapacity ) ; \n\t\tasList . addAll ( Arrays . asList ( elements ) ) ; \n\t\t} \n\telse { \n\t\tasList = new $F5676 ( extraCapacity ) ; \n\t\t} \n\treturn asList ; \n\t} \n"}, {"code": "private boolean sendEventToListeners ( ClusterEvent event ) { \n\tboolean success = _BOOL ; \n\tfor ( String listenerId : Collections . unmodifiableSet ( listeners . keySet ( ) ) ) { \n\t\tlogger . debug ( NUM00 , listenerId , event . getType ( ) , instanceId ) ; \n\t\tClusterEventListener listener = listeners . get ( listenerId ) ; \n\t\tif ( listener != null && ! listener . handleEvent ( event ) ) { \n\t\t\tsuccess = _BOOL ; \n\t\t\t} \n\t\t} \n\treturn success ; \n\t} \n"}, {"code": "@ RequestMapping ( method = RequestMethod . PUT , $F3144 , consumes = { \n\tMediaType . APPLICATION_JSON_VALUE } \n, produces = { \n\tMediaType . APPLICATION_JSON_VALUE } \n) @ ApiOperation ( $F3144 , notes = $F38 , response = $F78753 ) @ ApiResponses ( { \n\t@ ApiResponse ( code = NUM00 , $F100217 ) , @ ApiResponse ( code = NUM00 , $F100217 ) , @ ApiResponse ( code = NUM00 , $F100217 ) , @ ApiResponse ( code = NUM00 , $F100217 ) , @ ApiResponse ( code = NUM00 , $F100217 ) , @ ApiResponse ( code = NUM00 , $F100217 ) , @ ApiResponse ( code = NUM00 , $F100217 ) } \n) @ PreAuthorize ( NUM00 ) public ResponseEntity $F1011 update ( $F4588 ( region ) , @ PathVariable ( NUM00 ) final $F806 keys , @ RequestParam ( $F3144 , defaultValue = NUM00 ) final String opValue , $F151143 final String json ) { \n\t$F7028 ( logger , region ) region = decode ( region ) ; \n\tif $F3305 ( keys ) $F19580 ( updateMultipleKeys , region , keys , json ) else { \n\t\treturn updateSingleKey ( region , keys [ NUM00 ] , json , opValue ) ; \n\t\t} \n\t} \n"}, {"code": "public void load ( X509Extension extensions ) { \n\t$F2689 critExts = extensions . getCriticalExtensionOIDs ( ) ; \n\t$F2689 nonCritExts = extensions . getNonCriticalExtensionOIDs ( ) ; \n\tList < X509Ext > sortedExts = new ArrayList < X509Ext > $F72 ; \n\tfor ( $F43656 ( itr , critExts ) ) { \n\t\t$F13714 ( extOid , itr ) $F96 value = extensions . getExtensionValue ( extOid ) ; \n\t\tX509Ext ext = new X509Ext ( new ASN1ObjectIdentifier ( extOid ) , value , _BOOL ) ; \n\t\tsortedExts . add ( ext ) ; \n\t\t} \n\tfor ( $F43656 ( itr , nonCritExts ) ) { \n\t\t$F13714 ( extOid , itr ) $F96 value = extensions . getExtensionValue ( extOid ) ; \n\t\tX509Ext ext = new X509Ext ( new ASN1ObjectIdentifier ( extOid ) , value , _BOOL ) ; \n\t\tsortedExts . add ( ext ) ; \n\t\t} \n\tCollections . sort ( sortedExts , new ExtensionNameComparator $F72 ) ; \n\tdata = new Object [ sortedExts . size ( ) ] [ NUM00 ] ; \n\tint i = NUM00 ; \n\tfor ( Iterator < X509Ext > itrSortedExts = sortedExts . iterator ( ) ; \n\titrSortedExts . hasNext ( ) ; \n\t) { \n\t\tX509Ext ext = itrSortedExts . next ( ) ; \n\t\tloadRow ( ext , i ) ; \n\t\ti ++ ; \n\t\t} \n\tfireTableDataChanged ( ) ; \n\t} \n"}, {"code": "public Builder deleteAddresses $F72 $F18794 ( deleteFields , this ) "}, {"code": "public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { \n\tString str = $F48364 ( data ) ; \n\twriteStringToFile ( file , str , encoding , append ) ; \n\t} \n"}, {"code": "public Query limit ( int limit ) { \n\treturn limit ( limit < NUM00 ? NO_LIMIT : Field . $F2305 field $F59159 ( Integer , limit ) ) ; \n\t} \n"}, {"code": "public static boolean fileExists ( String fName ) { \n\tboolean result = _BOOL ; \n\t$F1705 ( file , fName ) if ( file != null ) { \n\t\tresult = $F2945 ( file ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F92963 ( b , off , len , this , newcount , count , remaining , inBufferPos , filledBufferSum , part , Math , currentBuffer , System , needNewBuffer ) "}, {"code": "public long skip ( long n ) { \n\tif ( position + n <= document . getLength ( ) ) { \n\t\tposition += n ; \n\t\treturn n ; \n\t\t} \n\tlong temp = position ; \n\t$F249676 ( position , document ) return document . getLength ( ) - temp ; \n\t} \n"}, {"code": "private static void _init $F72 { \n\taddMethod ( NUM00 , new com . earth2me . essentials . register . payment . methods . iCo6 $F72 ) ; \n\taddMethod ( NUM00 , new com . earth2me . essentials . register . payment . methods . iCo5 $F72 ) ; \n\taddMethod ( NUM00 , new com . earth2me . essentials . register . payment . methods . BOSE7 $F72 ) ; \n\taddMethod ( NUM00 , new com . earth2me . essentials . register . payment . methods . MCUR $F72 ) ; \n\t$F18793 ( Dependencies ) addMethod ( NUM00 , new com . earth2me . essentials . register . payment . methods . VaultEco $F72 ) ; \n\t} \n"}, {"code": "public static String convertFileName ( String name , int maxBytes ) { \n\ttry { \n\t\treturn convertFileName ( name , maxBytes , Charset . defaultCharset ( ) ) ; \n\t\t} \n\tcatch ( CharacterCodingException cce ) { \n\t\ttry { \n\t\t\treturn convertFileName ( name , maxBytes , Charset . forName ( NUM00 ) ) ; \n\t\t\t} \n\t\tcatch ( CharacterCodingException e ) $F72290 ( name , e ) } \n\t} \n"}, {"code": "public static void copy ( URL url , File file ) throws IOException { \n\t$F35900 ( is , url ) try { \n\t\t$F12015 ( os , file ) try { \n\t\t\t$F12496 ( buffer ) int read ; \n\t\t\twhile ( $F29984 ( read , is , buffer ) > NUM00 ) $F29756 ( os , buffer , read ) } \n\t\t$F3229 ( os ) } \n\t$F3229 ( is ) } \n"}, {"code": "public void updateDeltas ( int deltaX , int deltaY ) { \n\tif ( mLeftBorderActive ) $F185739 ( mDeltaX , Math , mBaselineX , deltaX , mBaselineWidth , mTouchTargetWidth ) else if ( mRightBorderActive ) { \n\t\tmDeltaX = Math . min ( mDragLayer . getWidth ( ) - ( mBaselineX + mBaselineWidth ) , deltaX ) ; \n\t\t$F185747 ( mDeltaX , Math , mBaselineWidth , mTouchTargetWidth ) } \n\tif ( mTopBorderActive ) $F185739 ( mDeltaY , Math , mBaselineY , deltaY , mBaselineHeight , mTouchTargetWidth ) else if ( mBottomBorderActive ) { \n\t\tmDeltaY = Math . min ( mDragLayer . getHeight ( ) - ( mBaselineY + mBaselineHeight ) , deltaY ) ; \n\t\t$F185747 ( mDeltaY , Math , mBaselineHeight , mTouchTargetWidth ) } \n\t} \n"}, {"code": "public void createAuthConfiguration ( String name ) throws AMConsoleException { \n\tif $F38892 ( name ) { \n\t\tthrow new AMConsoleException ( getLocalizedString ( NUM00 ) ) ; \n\t\t} \n\t$F105633 ( params , currentRealm , name ) logEvent ( NUM00 , params ) ; \n\tString errorMsg = null ; \n\ttry { \n\t\tAMAuthConfigUtils . createNamedConfig ( name , NUM00 , new HashMap $F72 , currentRealm , getUserSSOToken ( ) ) ; \n\t\tlogEvent ( NUM00 , params ) ; \n\t\t} \n\tcatch ( SMSException e ) { \n\t\terrorMsg = getErrorString ( e ) ; \n\t\t$F28010 ( paramsEx , currentRealm , name , errorMsg ) logEvent ( NUM00 , paramsEx ) ; \n\t\t$F21557 ( debug , e ) } \n\tcatch ( SSOException e ) { \n\t\terrorMsg = getErrorString ( e ) ; \n\t\t$F28010 ( paramsEx , currentRealm , name , errorMsg ) logEvent ( NUM00 , paramsEx ) ; \n\t\t$F21557 ( debug , e ) } \n\tcatch ( AMConfigurationException e ) { \n\t\terrorMsg = getErrorString ( e ) ; \n\t\t$F28010 ( paramsEx , currentRealm , name , errorMsg ) logEvent ( NUM00 , paramsEx ) ; \n\t\t$F21557 ( debug , e ) } \n\tif ( errorMsg != null ) { \n\t\t$F84191 ( errorMsg ) } \n\t} \n"}, {"code": "$F9749 ( namespace , attName , attValue , xmlWriter , registerPrefix ) "}, {"code": "public void trim ( String aText , $F2027 aSpan ) { \n\tint begin = aSpan [ NUM00 ] ; \n\tint end = aSpan [ NUM00 ] - NUM00 ; \n\tString data = aText ; \n\twhile ( ( begin < $F45793 ( data ) ) && trimChar ( data . charAt ( begin ) ) ) { \n\t\tbegin ++ ; \n\t\t} \n\twhile ( ( end > NUM00 ) && trimChar ( data . charAt ( end ) ) ) { \n\t\tend -- ; \n\t\t} \n\tend ++ ; \n\taSpan [ NUM00 ] = begin ; \n\taSpan [ NUM00 ] = end ; \n\t} \n"}, {"code": "public String classifierTipText $F72 $F2455 "}, {"code": "public WritableRaster createWritableChild ( int x , int y , int width , int height , int x0 , int y0 , $F2027 bandList ) { \n\t$F238725 ( x , this ) $F238726 ( y , this ) $F238732 ( x , width , this ) $F238738 ( y , height , this ) SampleModel sm ; \n\tif ( bandList != null ) { \n\t\tsm = sampleModel . createSubsetSampleModel ( bandList ) ; \n\t\t} \n\telse { \n\t\tsm = sampleModel ; \n\t\t} \n\tint deltaX = x0 - x ; \n\tint deltaY = y0 - y ; \n\treturn new BytePackedRaster $F238741 ( sm , dataBuffer , x0 , y0 , width , height , sampleModelTranslateX , deltaX , sampleModelTranslateY , deltaY , this ) ; \n\t} \n"}, {"code": "private void sendBuffer $F72 throws IOException { \n\t$F14257 ( buf ) send ( buf , buf . remaining ( ) ) ; \n\tbuf = null ; \n\t} \n"}, {"code": "$F326023 ( n , max , data , length , System , newData ) "}, {"code": "public void callEvent ( Event event ) { \n\tif ( event . isAsynchronous ( ) ) { \n\t\tif ( Thread . holdsLock ( this ) ) { \n\t\t\tthrow new IllegalStateException ( event . getEventName ( ) + NUM00 ) ; \n\t\t\t} \n\t\tif ( server . isPrimaryThread ( ) ) { \n\t\t\tthrow new IllegalStateException ( event . getEventName ( ) + NUM00 ) ; \n\t\t\t} \n\t\tfireEvent ( event ) ; \n\t\t} \n\telse { \n\t\tsynchronized ( this ) { \n\t\t\tfireEvent ( event ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F5466 private static PsiFile findFileToOpen ( $F1113 List < PsiFile > files ) { \n\tPsiFile bestFile = null ; \n\tFolderConfiguration bestConfig = null ; \n\tfor ( PsiFile file : files ) { \n\t\tPsiDirectory qualifiedDirectory = file . getParent ( ) ; \n\t\tassert qualifiedDirectory != null : NUM00 ; \n\t\tFolderConfiguration config = FolderConfiguration . getConfigForFolder ( qualifiedDirectory . getName ( ) ) ; \n\t\tif ( bestConfig == null || config == null || config . compareTo ( bestConfig ) < NUM00 ) { \n\t\t\tbestConfig = config ; \n\t\t\tbestFile = file ; \n\t\t\t} \n\t\t} \n\treturn bestFile ; \n\t} \n"}, {"code": "protected boolean areEqual $F22381 ( string1 , string2 , caseMatters ) { \n\treturn ( caseMatters && string1 . equals ( string2 ) ) || ( ! caseMatters && string1 . equalsIgnoreCase ( string2 ) ) ; \n\t} \n"}, {"code": "$F58914 ( commands , isRoot , execCommand , _BOOL ) "}, {"code": "protected void populateBlob ( int id , $F96 baseContent , int requiredSize ) throws SQLException { \n\tConnection con = getConnectionViaDriverManager ( ) ; \n\tCallableStatement cstmt = null ; \n\ttry { \n\t\tcstmt = con . prepareCall ( EXECUTE_FILL_BINARY_BLOB ) ; \n\t\t$F47 ( cstmt , id ) cstmt . setBytes ( NUM00 , baseContent ) ; \n\t\t$F47 ( cstmt , requiredSize ) $F1699 ( cstmt ) } \n\t$F15722 ( closeQuietly , cstmt , con ) } \n"}, {"code": "private void removeObservedFile ( String localPath ) { \n\t$F1705 ( file , localPath ) $F239608 ( parentPath , file ) FolderObserver observer = mFolderObserversMap . get ( parentPath ) ; \n\tif ( observer != null ) { \n\t\tobserver . stopWatching ( file . getName ( ) ) ; \n\t\tif $F2979 ( observer ) { \n\t\t\tmFolderObserversMap . remove ( parentPath ) ; \n\t\t\t$F63425 ( Log_OC , TAG , parentPath ) } \n\t\t} \n\telse $F29023 ( Log_OC , TAG , localPath ) } \n"}, {"code": "public void makeImmutable $F72 { \n\tif ( mutable ) { \n\t\tif ( results != null ) { \n\t\t\t$F2199 ( length , results ) for ( $F119 ( i , length ) ) { \n\t\t\t\tResult result = ( Result ) results . get ( i ) ; \n\t\t\t\t$F118294 ( result ) } \n\t\t\t$F5939 ( results , Collections ) } \n\t\tmutable = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public Statement isNull $F72 $F117250 ( statement , this ) "}, {"code": "public void clear $F72 { \n\tprocessQueue ( ) ; \n\t$F725 ( hash ) } \n"}, {"code": "private void updateFavoriteStation $F72 { \n\tString showString = null ; \n\tif ( FmRadioStation . isFavoriteStation ( mContext , mCurrentStation ) ) { \n\t\tString stationName = FmRadioStation . getStationName ( mContext , mCurrentStation , FmRadioStation . STATION_TYPE_FAVORITE ) ; \n\t\tFmRadioStation . updateStationToDb ( mContext , stationName , FmRadioStation . STATION_TYPE_SEARCHED , mCurrentStation ) ; \n\t\tmButtonAddToFavorite . setImageResource ( R . drawable . btn_fm_favorite_off_selector ) ; \n\t\t$F15121 ( mTextStationName ) showString = mProjectStringExt . getProjectString ( mContext , R . string . toast_channel_deleted , R . string . toast_channel_deleted1 ) ; \n\t\t} \n\telse { \n\t\tString stationName = FmRadioStation . getStationName ( mContext , mCurrentStation , FmRadioStation . STATION_TYPE_SEARCHED ) ; \n\t\tif ( FmRadioStation . isStationExist ( mContext , mCurrentStation , FmRadioStation . STATION_TYPE_SEARCHED ) ) { \n\t\t\tFmRadioStation . updateStationToDb ( mContext , stationName , FmRadioStation . STATION_TYPE_FAVORITE , mCurrentStation ) ; \n\t\t\t} \n\t\telse { \n\t\t\tFmRadioStation . insertStationToDb ( mContext , stationName , mCurrentStation , FmRadioStation . STATION_TYPE_FAVORITE ) ; \n\t\t\t} \n\t\tmButtonAddToFavorite . setImageResource ( R . drawable . btn_fm_favorite_on_selector ) ; \n\t\tmTextStationName . setText ( stationName ) ; \n\t\tshowString = mProjectStringExt . getProjectString ( mContext , R . string . toast_channel_added , R . string . toast_channel_added1 ) ; \n\t\t} \n\tshowToast ( showString ) ; \n\t} \n"}, {"code": "public int addAllAbsent $F22451 ( c ) { \n\t$F11326 ( cs , c ) if $F9634 ( cs ) $F1082 $F677 ( lock , this ) $F790 ( lock ) try { \n\t\t$F8867 ( elements , getArray ) int len = elements . length ; \n\t\tint added = NUM00 ; \n\t\tfor ( $F9808 ( i , cs ) ) { \n\t\t\tObject e = cs [ i ] ; \n\t\t\tif ( indexOf ( e , elements , NUM00 , len ) < NUM00 && indexOf ( e , cs , NUM00 , added ) < NUM00 ) cs [ added ++ ] = e ; \n\t\t\t} \n\t\tif ( added > NUM00 ) { \n\t\t\t$F131 newElements = Arrays . copyOf ( elements , len + added ) ; \n\t\t\t$F6483 ( System , cs , newElements , len , added ) setArray ( newElements ) ; \n\t\t\t} \n\t\treturn added ; \n\t\t} \n\t$F796 ( lock ) } \n"}, {"code": "public Analyzer saveAnalysis ( File file ) throws IOException { \n\tPrintStream ps = null ; \n\ttry { \n\t\tps = new PrintStream ( new BufferedOutputStream $F4443 ( file ) ) ; \n\t\tprintAnalysis ( ps ) ; \n\t\t} \n\t$F14364 ( ps ) return this ; \n\t} \n"}, {"code": "public Iterator $F408319 dependencies $F72 $F16048 ( m_Dependencies ) "}, {"code": "public static void notifyTicket ( Context c , $F4170 Ticket t , boolean keepNotification ) { \n\tString text ; \n\tString ticker ; \n\tint smallIcon ; \n\tint largeIcon ; \n\tint status ; \n\tswitch ( TicketsAdapter . getValidityStatus ( t . getStatus ( ) , t . getValidTo ( ) ) ) { \n\t\tcase TicketProvider . Tickets . STATUS_VALID : case TicketProvider . Tickets . STATUS_VALID_EXPIRING : text = c . getString ( R . string . notif_valid_text , FormatUtil . formatDateTimeDifference ( t . getValidTo ( ) ) ) ; \n\t\tticker = c . getString ( R . string . notif_valid_ticker ) ; \n\t\tsmallIcon = R . drawable . notification_small_ready ; \n\t\tlargeIcon = R . drawable . notification_big_ready ; \n\t\tstatus = TicketProvider . Tickets . STATUS_VALID_EXPIRING ; \n\t\t$F597 case TicketProvider . Tickets . STATUS_EXPIRING : case TicketProvider . Tickets . STATUS_EXPIRING_EXPIRED : text = c . getString ( R . string . notif_expiring_text , FormatUtil . formatTime ( t . getValidTo ( ) ) ) ; \n\t\tticker = c . getString ( R . string . notif_expiring_ticker ) ; \n\t\tsmallIcon = R . drawable . notification_small_warning ; \n\t\tlargeIcon = R . drawable . notification_big_warning ; \n\t\tstatus = TicketProvider . Tickets . STATUS_EXPIRING_EXPIRED ; \n\t\t$F597 case TicketProvider . Tickets . STATUS_EXPIRED : text = c . getString ( R . string . notif_expired_text , FormatUtil . formatTime ( t . getValidTo ( ) ) ) ; \n\t\tticker = c . getString ( R . string . notif_expired_ticker ) ; \n\t\tsmallIcon = R . drawable . notification_small_expired ; \n\t\tlargeIcon = R . drawable . notification_big_expired ; \n\t\tstatus = TicketProvider . Tickets . STATUS_EXPIRED ; \n\t\t$F597 $F1267 $F665 } \n\tIntent intent = new Intent ( c , WearableService . class ) ; \n\tintent . setAction ( NUM00 ) ; \n\t$F107076 ( intent , t ) $F107076 ( intent , status ) c . startService ( intent ) ; \n\tIntent i = new Intent ( c , MainActivity . class ) ; \n\ti . addFlags ( Intent . FLAG_ACTIVITY_SINGLE_TOP | Intent . FLAG_ACTIVITY_CLEAR_TOP ) ; \n\ti . putExtra ( MainActivity . EXTRA_TICKET_ID , t . getId ( ) ) ; \n\tPendingIntent openIntent = PendingIntent . getActivity ( c , t . getNotificationId ( ) , i , PendingIntent . FLAG_CANCEL_CURRENT ) ; \n\tIntent i2 = new Intent ( c , MainActivity . class ) ; \n\ti2 . addFlags ( Intent . FLAG_ACTIVITY_SINGLE_TOP | Intent . FLAG_ACTIVITY_CLEAR_TOP ) ; \n\ti2 . putExtra ( MainActivity . EXTRA_TICKET_ID , t . getId ( ) ) ; \n\ti2 . putExtra ( MainActivity . EXTRA_SHOW_SMS , _BOOL ) ; \n\tPendingIntent showSmsIntent = PendingIntent . getActivity ( c , t . getNotificationId ( ) + NUM00 , i2 , PendingIntent . FLAG_CANCEL_CURRENT ) ; \n\tList < Action > actions = new ArrayList < Action > $F72 ; \n\tactions . add ( new Action ( R . drawable . notification_show_sms , R . string . notif_show_sms , showSmsIntent ) ) ; \n\t$F10144 ( rows ) rows . add ( text ) ; \n\trows . add ( c . getString ( R . string . tickets_valid_from ) + NUM00 + FormatUtil . formatDateTime ( t . getValidFrom ( ) ) ) ; \n\trows . add ( c . getString ( R . string . tickets_code ) + NUM00 + t . getHash ( ) ) ; \n\tfireNotification ( c , t . getNotificationId ( ) , openIntent , c . getString ( R . string . application_name ) , text , rows , t . getCity ( ) , ticker , smallIcon , largeIcon , actions , keepNotification ) ; \n\t} \n"}, {"code": "public final static int parseInt ( String str ) { \n\t$F12685 ( c , str ) $F115 ( length , str ) boolean negative = ( c == NUM00 ) ; \n\tint offset = NUM00 ; \n\tif ( negative ) { \n\t\tif ( length == NUM00 || length > NUM00 ) $F75349 ( Integer , str ) $F47698 ( c , str , offset ) } \n\telse { \n\t\tif ( length > NUM00 ) $F75349 ( Integer , str ) } \n\tif ( c > NUM00 || c < NUM00 ) $F75349 ( Integer , str ) int num = c - NUM00 ; \n\tif ( offset < length ) { \n\t\t$F47698 ( c , str , offset ) if ( c > NUM00 || c < NUM00 ) $F75349 ( Integer , str ) num = ( num * NUM00 ) + ( c - NUM00 ) ; \n\t\tif ( offset < length ) { \n\t\t\t$F47698 ( c , str , offset ) if ( c > NUM00 || c < NUM00 ) $F75349 ( Integer , str ) num = ( num * NUM00 ) + ( c - NUM00 ) ; \n\t\t\tif ( offset < length ) { \n\t\t\t\tdo { \n\t\t\t\t\t$F47698 ( c , str , offset ) if ( c > NUM00 || c < NUM00 ) $F75349 ( Integer , str ) num = ( num * NUM00 ) + ( c - NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\twhile ( offset < length ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn negative ? - num : num ; \n\t} \n"}, {"code": "public BufferedHeader ( final CharArrayBuffer buffer ) throws ParseException { \n\tsuper ( ) ; \n\t$F826 ( buffer ) $F1384 ( colon , buffer ) if ( colon == - NUM00 ) { \n\t\tthrow new ParseException $F3943 ( buffer ) ; \n\t\t} \n\tString s = buffer . substringTrimmed ( NUM00 , colon ) ; \n\tif $F1277 ( s ) { \n\t\tthrow new ParseException $F3943 ( buffer ) ; \n\t\t} \n\tthis . buffer = buffer ; \n\tthis . name = s ; \n\tthis . valuePos = colon + NUM00 ; \n\t} \n"}, {"code": "$F10929 ( buf , mSizeLimit , mBuffersByLastUse , pos , Collections , mBuffersBySize , BUF_COMPARATOR , mCurrentSize , trim ) "}, {"code": "public static String toDateString ( $F22273 date , String format ) { \n\t$F1747 ( date ) SimpleDateFormat dateFormat = null ; \n\tif ( format != null ) { \n\t\tdateFormat = new SimpleDateFormat ( format ) ; \n\t\t} \n\telse { \n\t\tdateFormat = new SimpleDateFormat $F72 ; \n\t\t} \n\t$F4377 ( calendar , Calendar ) calendar . setTime ( date ) ; \n\t$F5330 ( dateFormat , date ) } \n"}, {"code": "$F1309 public static $F4203 T executeWithBackOff ( AbstractGoogleClientRequest $F4203 client , String error , Object ... errorArgs ) throws $F3 { \n\treturn executeWithBackOff ( client , String . format ( error , errorArgs ) ) ; \n\t} \n"}, {"code": "private void checkServerResponseCode ( HttpURLConnection urlConnection ) throws RequestFailureException { \n\ttry { \n\t\tif ( urlConnection . getResponseCode ( ) != NUM00 ) { \n\t\t\tthrow new RequestFailureException ( $F7974 ( urlConnection ) + NUM00 ) ; \n\t\t\t} \n\t\t} \n\tcatch ( IOException e ) $F49482 ( e ) } \n"}, {"code": "public static void addResourceSource ( ResourceSource source ) $F207 ( ALL_RESOURCE_SOURCES , source ) "}, {"code": "private void commitChanges $F72 { \n\thopfieldPropsPanel . commitChanges ( ) ; \n\tinputPanel . commitChanges ( ) ; \n\t} \n"}, {"code": "private boolean connect_to_target ( PlaPointInt p_from_point ) { \n\tif ( nearest_target_item != null && target_set != null && ! target_set . contains ( nearest_target_item ) ) { \n\t\tnearest_target_item = null ; \n\t\t} \n\tif ( nearest_target_item == null || ! nearest_target_item . shares_net_no ( net_nos ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tboolean route_completed = _BOOL ; \n\tPlaPointInt connection_point = null ; \n\tif ( nearest_target_item instanceof BrdAbit ) { \n\t\tBrdAbit target = ( BrdAbit ) nearest_target_item ; \n\t\tconnection_point = target . center_get ( ) ; \n\t\t} \n\telse if ( nearest_target_item instanceof BrdTracep ) { \n\t\treturn r_board . connect_to_trace ( p_from_point , ( BrdTracep ) nearest_target_item , pen_half_width_arr [ layer_active_no ] , clearance_class ) ; \n\t\t} \n\telse if ( nearest_target_item instanceof BrdAreaConduction ) { \n\t\tconnection_point = p_from_point ; \n\t\t} \n\tif ( connection_point != null ) { \n\t\troute_completed = itera_connect ( p_from_point , connection_point ) ; \n\t\t} \n\treturn route_completed ; \n\t} \n"}, {"code": "public boolean onGenericMotionEvent ( MotionEvent ev ) { \n\tif ( ( ev . getSource ( ) & InputDevice . SOURCE_CLASS_POINTER ) == InputDevice . SOURCE_CLASS_POINTER ) { \n\t\tint action = ev . getAction ( ) ; \n\t\tswitch ( action & MotionEvent . ACTION_MASK ) { \n\t\t\tcase MotionEvent . ACTION_SCROLL : float vScroll = ev . getAxisValue ( MotionEvent . AXIS_VSCROLL ) ; \n\t\t\tif ( vScroll > NUM00 ) { \n\t\t\t\tif ( mDeckView . ensureFocusedTask ( ) ) { \n\t\t\t\t\tmDeckView . focusNextTask ( _BOOL , _BOOL ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( mDeckView . ensureFocusedTask ( ) ) { \n\t\t\t\t\tmDeckView . focusNextTask ( _BOOL , _BOOL ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean addClass ( OwlClass targetClass ) { \n\ttargetClass . addQCRestriction ( this ) ; \n\t$F20805 ( qcClasses , targetClass ) } \n"}, {"code": "public void editElement ( final Object element , final String columnPropertyName ) { \n\tfinal int columnIndex = TableViewerUtils . columnPropertyNameToColumnIndex ( columnPropertyName , _BOOL , viewer ) ; \n\tviewer . editElement ( element , columnIndex ) ; \n\t} \n"}, {"code": "public Fp ( ECCurve curve , ECFieldElement x , ECFieldElement y ) { \n\tthis ( curve , x , y , _BOOL ) ; \n\t} \n"}, {"code": "private static String serializeDocumentInt ( Document doc ) throws TransformerException , IOException { \n\t$F1538 ( s ) $F2218 ( factory , TransformerFactory ) $F94102 ( transformer , factory ) transformer . setOutputProperty ( OutputKeys . METHOD , NUM00 ) ; \n\t$F29108 ( transformer , OutputKeys ) $F29110 ( source , doc ) $F94122 ( outputTarget , s ) transformer . transform ( source , outputTarget ) ; \n\t$F1662 ( s ) } \n"}, {"code": "$F32569 ( panel , cols , rows , filler , filled_cell_11 , _BOOL , cc , Box , index ) "}, {"code": "$F1 public boolean useBufferPerWindow $F72 { \n\treturn ! Win32GraphicsEnvironment . isDWMCompositionEnabled ( ) ; \n\t} \n"}, {"code": "static double area ( S2Point a , S2Point b , S2Point c ) { \n\tfinal double sa = b . angle ( c ) ; \n\tfinal double sb = c . angle ( a ) ; \n\tfinal double sc = a . angle ( b ) ; \n\tfinal double s = NUM00 * ( sa + sb + sc ) ; \n\tif ( s >= NUM00 ) { \n\t\tdouble s2 = s * s ; \n\t\tdouble dmin = s - Math . max ( sa , Math . max ( sb , sc ) ) ; \n\t\tif ( dmin < NUM00 * s * s2 * s2 ) { \n\t\t\tdouble area = girardArea ( a , b , c ) ; \n\t\t\tif ( dmin < s * ( NUM00 * area ) ) { \n\t\t\t\treturn area ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn NUM00 * Math . atan ( Math . sqrt ( Math . max ( NUM00 , Math . tan ( NUM00 * s ) * Math . tan ( NUM00 * ( s - sa ) ) * Math . tan ( NUM00 * ( s - sb ) ) * Math . tan ( NUM00 * ( s - sc ) ) ) ) ) ; \n\t} \n"}, {"code": "private void hqr2 $F72 { \n\tint nn = this . n ; \n\tint n = nn - NUM00 ; \n\tint low = NUM00 ; \n\tint high = nn - NUM00 ; \n\t$F29087 ( eps , Math ) double exshift = NUM00 ; \n\tdouble p = NUM00 , q = NUM00 , r = NUM00 , s = NUM00 , z = NUM00 , t , w , x , y ; \n\tdouble norm = NUM00 ; \n\tfor ( $F119 ( i , nn ) ) { \n\t\tif ( i < low | i > high ) { \n\t\t\td [ i ] = H [ i ] [ i ] ; \n\t\t\te [ i ] = NUM00 ; \n\t\t\t} \n\t\tfor ( int j = $F23196 ( Math , i ) ; \n\t\tj < nn ; \n\t\tj ++ ) { \n\t\t\tnorm = norm + $F93143 ( Math , H , i , j ) ; \n\t\t\t} \n\t\t} \n\tint iter = NUM00 ; \n\twhile ( n >= low ) { \n\t\tint l = n ; \n\t\twhile ( l > low ) { \n\t\t\ts = $F161966 ( Math , H , l ) + $F93149 ( Math , H , l ) ; \n\t\t\t$F153178 ( s , norm ) if ( $F161970 ( Math , H , l ) < eps * s ) $F5153 l -- ; \n\t\t\t} \n\t\tif ( l == n ) { \n\t\t\tH [ n ] [ n ] = H [ n ] [ n ] + exshift ; \n\t\t\td [ n ] = H [ n ] [ n ] ; \n\t\t\te [ n ] = NUM00 ; \n\t\t\tn -- ; \n\t\t\titer = NUM00 ; \n\t\t\t} \n\t\telse if ( l == n - NUM00 ) { \n\t\t\tw = H [ n ] [ n - NUM00 ] * H [ n - NUM00 ] [ n ] ; \n\t\t\tp = ( $F161965 ( H , n ) - H [ n ] [ n ] ) / NUM00 ; \n\t\t\tq = p * p + w ; \n\t\t\tz = Math . sqrt ( Math . abs ( q ) ) ; \n\t\t\tH [ n ] [ n ] = H [ n ] [ n ] + exshift ; \n\t\t\t$F161965 ( H , n ) = $F161965 ( H , n ) + exshift ; \n\t\t\tx = H [ n ] [ n ] ; \n\t\t\tif ( q >= NUM00 ) { \n\t\t\t\tif ( p >= NUM00 ) { \n\t\t\t\t\tz = p + z ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tz = p - z ; \n\t\t\t\t\t} \n\t\t\t\td [ n - NUM00 ] = x + z ; \n\t\t\t\t$F130980 ( d , n ) if ( z != NUM00 ) { \n\t\t\t\t\td [ n ] = x - w / z ; \n\t\t\t\t\t} \n\t\t\t\te [ n - NUM00 ] = NUM00 ; \n\t\t\t\te [ n ] = NUM00 ; \n\t\t\t\tx = H [ n ] [ n - NUM00 ] ; \n\t\t\t\ts = Math . abs ( x ) + Math . abs ( z ) ; \n\t\t\t\tp = x / s ; \n\t\t\t\tq = z / s ; \n\t\t\t\t$F161998 ( r , Math , p , q ) p = p / r ; \n\t\t\t\tq = q / r ; \n\t\t\t\tfor ( int j = n - NUM00 ; \n\t\t\t\tj < nn ; \n\t\t\t\tj ++ ) { \n\t\t\t\t\tz = H [ n - NUM00 ] [ j ] ; \n\t\t\t\t\tH [ n - NUM00 ] [ j ] = q * z + p * H [ n ] [ j ] ; \n\t\t\t\t\t$F162003 ( H , n , j , q , p , z ) } \n\t\t\t\tfor ( $F9993 ( i , n ) ) { \n\t\t\t\t\tz = H [ i ] [ n - NUM00 ] ; \n\t\t\t\t\tH [ i ] [ n - NUM00 ] = q * z + p * H [ i ] [ n ] ; \n\t\t\t\t\t$F162003 ( H , i , n , q , p , z ) } \n\t\t\t\tfor ( int i = low ; \n\t\t\t\ti <= high ; \n\t\t\t\ti ++ ) { \n\t\t\t\t\tz = V [ i ] [ n - NUM00 ] ; \n\t\t\t\t\tV [ i ] [ n - NUM00 ] = q * z + p * V [ i ] [ n ] ; \n\t\t\t\t\t$F162003 ( V , i , n , q , p , z ) } \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\td [ n - NUM00 ] = x + p ; \n\t\t\t\td [ n ] = x + p ; \n\t\t\t\te [ n - NUM00 ] = z ; \n\t\t\t\te [ n ] = - z ; \n\t\t\t\t} \n\t\t\tn = n - NUM00 ; \n\t\t\titer = NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tx = H [ n ] [ n ] ; \n\t\t\ty = NUM00 ; \n\t\t\tw = NUM00 ; \n\t\t\tif ( l < n ) { \n\t\t\t\ty = $F161965 ( H , n ) ; \n\t\t\t\tw = H [ n ] [ n - NUM00 ] * H [ n - NUM00 ] [ n ] ; \n\t\t\t\t} \n\t\t\tif ( iter == NUM00 ) { \n\t\t\t\texshift += x ; \n\t\t\t\tfor ( int i = low ; \n\t\t\t\ti <= n ; \n\t\t\t\ti ++ ) { \n\t\t\t\t\tH [ i ] [ i ] -= x ; \n\t\t\t\t\t} \n\t\t\t\ts = $F161970 ( Math , H , n ) + $F161966 ( Math , H , n ) ; \n\t\t\t\tx = y = NUM00 * s ; \n\t\t\t\tw = - NUM00 * s * s ; \n\t\t\t\t} \n\t\t\tif ( iter == NUM00 ) { \n\t\t\t\ts = ( y - x ) / NUM00 ; \n\t\t\t\ts = s * s + w ; \n\t\t\t\tif ( s > NUM00 ) { \n\t\t\t\t\t$F84202 ( s , Math ) if ( y < x ) $F52810 ( s ) s = x - w / ( ( y - x ) / NUM00 + s ) ; \n\t\t\t\t\tfor ( int i = low ; \n\t\t\t\t\ti <= n ; \n\t\t\t\t\ti ++ ) { \n\t\t\t\t\t\tH [ i ] [ i ] -= s ; \n\t\t\t\t\t\t} \n\t\t\t\t\texshift += s ; \n\t\t\t\t\tx = y = w = NUM00 ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\titer = iter + NUM00 ; \n\t\t\tint m = n - NUM00 ; \n\t\t\twhile ( m >= l ) { \n\t\t\t\tz = H [ m ] [ m ] ; \n\t\t\t\tr = x - z ; \n\t\t\t\ts = y - z ; \n\t\t\t\tp = ( r * s - w ) / H [ m + NUM00 ] [ m ] + H [ m ] [ m + NUM00 ] ; \n\t\t\t\tq = $F162040 ( H , m ) - z - r - s ; \n\t\t\t\tr = $F162040 ( H , m ) ; \n\t\t\t\ts = $F162048 ( Math , p , q , r ) ; \n\t\t\t\tp = p / s ; \n\t\t\t\tq = q / s ; \n\t\t\t\tr = r / s ; \n\t\t\t\t$F15290 ( m , l ) if ( $F161970 ( Math , H , m ) * $F149599 ( Math , q , r ) < eps * ( Math . abs ( p ) * ( $F161966 ( Math , H , m ) + Math . abs ( z ) + Math . abs ( $F162040 ( H , m ) ) ) ) ) $F5153 m -- ; \n\t\t\t\t} \n\t\t\tfor ( $F28096 ( i , m , n ) ) { \n\t\t\t\t$F162065 ( H , i ) if ( i > m + NUM00 ) { \n\t\t\t\t\t$F162065 ( H , i ) } \n\t\t\t\t} \n\t\t\tfor ( $F162070 ( k , m , n ) ) { \n\t\t\t\tboolean notlast = ( k != n - NUM00 ) ; \n\t\t\t\tif ( k != m ) { \n\t\t\t\t\tp = H [ k ] [ k - NUM00 ] ; \n\t\t\t\t\tq = H [ k + NUM00 ] [ k - NUM00 ] ; \n\t\t\t\t\tr = ( notlast ? H [ k + NUM00 ] [ k - NUM00 ] : NUM00 ) ; \n\t\t\t\t\tx = $F162048 ( Math , p , q , r ) ; \n\t\t\t\t\tif ( x != NUM00 ) { \n\t\t\t\t\t\tp = p / x ; \n\t\t\t\t\t\tq = q / x ; \n\t\t\t\t\t\tr = r / x ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t$F7256 ( x ) s = $F16206 ( Math , p , q , r ) ; \n\t\t\t\t$F52811 ( p , s ) if ( s != NUM00 ) { \n\t\t\t\t\tif ( k != m ) { \n\t\t\t\t\t\tH [ k ] [ k - NUM00 ] = - s * x ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( l != m ) { \n\t\t\t\t\t\tH [ k ] [ k - NUM00 ] = - H [ k ] [ k - NUM00 ] ; \n\t\t\t\t\t\t} \n\t\t\t\t\tp = p + s ; \n\t\t\t\t\tx = p / s ; \n\t\t\t\t\ty = q / s ; \n\t\t\t\t\tz = r / s ; \n\t\t\t\t\tq = q / p ; \n\t\t\t\t\tr = r / p ; \n\t\t\t\t\tfor ( int j = k ; \n\t\t\t\t\tj < nn ; \n\t\t\t\t\tj ++ ) { \n\t\t\t\t\t\tp = H [ k ] [ j ] + q * H [ k + NUM00 ] [ j ] ; \n\t\t\t\t\t\tif ( notlast ) { \n\t\t\t\t\t\t\tp = p + r * H [ k + NUM00 ] [ j ] ; \n\t\t\t\t\t\t\tH [ k + NUM00 ] [ j ] = H [ k + NUM00 ] [ j ] - p * z ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\tH [ k ] [ j ] = H [ k ] [ j ] - p * x ; \n\t\t\t\t\t\tH [ k + NUM00 ] [ j ] = H [ k + NUM00 ] [ j ] - p * y ; \n\t\t\t\t\t\t} \n\t\t\t\t\tfor ( int i = NUM00 ; \n\t\t\t\t\ti <= Math . min ( n , k + NUM00 ) ; \n\t\t\t\t\ti ++ ) { \n\t\t\t\t\t\tp = x * H [ i ] [ k ] + y * H [ i ] [ k + NUM00 ] ; \n\t\t\t\t\t\tif ( notlast ) { \n\t\t\t\t\t\t\tp = p + z * H [ i ] [ k + NUM00 ] ; \n\t\t\t\t\t\t\t$F162112 ( H , i , k , p , r ) } \n\t\t\t\t\t\tH [ i ] [ k ] = H [ i ] [ k ] - p ; \n\t\t\t\t\t\t$F162112 ( H , i , k , p , q ) } \n\t\t\t\t\tfor ( int i = low ; \n\t\t\t\t\ti <= high ; \n\t\t\t\t\ti ++ ) { \n\t\t\t\t\t\tp = x * V [ i ] [ k ] + y * V [ i ] [ k + NUM00 ] ; \n\t\t\t\t\t\tif ( notlast ) { \n\t\t\t\t\t\t\tp = p + z * V [ i ] [ k + NUM00 ] ; \n\t\t\t\t\t\t\t$F162112 ( V , i , k , p , r ) } \n\t\t\t\t\t\tV [ i ] [ k ] = V [ i ] [ k ] - p ; \n\t\t\t\t\t\t$F162112 ( V , i , k , p , q ) } \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F32905 ( norm ) for ( $F157662 ( n , nn ) ) { \n\t\tp = d [ n ] ; \n\t\tq = e [ n ] ; \n\t\tif ( q == NUM00 ) { \n\t\t\tint l = n ; \n\t\t\t$F162129 ( H , n ) for ( $F18298 ( i , n ) ) { \n\t\t\t\tw = H [ i ] [ i ] - p ; \n\t\t\t\tr = NUM00 ; \n\t\t\t\tfor ( int j = l ; \n\t\t\t\tj <= n ; \n\t\t\t\tj ++ ) { \n\t\t\t\t\tr = r + $F162130 ( H , i , j , n ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( e [ i ] < NUM00 ) { \n\t\t\t\t\tz = w ; \n\t\t\t\t\ts = r ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tl = i ; \n\t\t\t\t\tif ( e [ i ] == NUM00 ) { \n\t\t\t\t\t\tif ( w != NUM00 ) { \n\t\t\t\t\t\t\tH [ i ] [ n ] = - r / w ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\telse { \n\t\t\t\t\t\t\tH [ i ] [ n ] = - r / ( eps * norm ) ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tx = H [ i ] [ i + NUM00 ] ; \n\t\t\t\t\t\ty = H [ i + NUM00 ] [ i ] ; \n\t\t\t\t\t\tq = $F162144 ( d , i , p ) + e [ i ] * e [ i ] ; \n\t\t\t\t\t\tt = ( x * s - z * r ) / q ; \n\t\t\t\t\t\tH [ i ] [ n ] = t ; \n\t\t\t\t\t\tif $F45017 ( Math , x , z ) { \n\t\t\t\t\t\t\tH [ i + NUM00 ] [ n ] = ( - r - w * t ) / x ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\telse { \n\t\t\t\t\t\t\tH [ i + NUM00 ] [ n ] = ( - s - y * t ) / z ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\tt = $F93143 ( Math , H , i , n ) ; \n\t\t\t\t\tif ( ( eps * t ) * t > NUM00 ) { \n\t\t\t\t\t\tfor ( int j = i ; \n\t\t\t\t\t\tj <= n ; \n\t\t\t\t\t\tj ++ ) { \n\t\t\t\t\t\t\tH [ j ] [ n ] = H [ j ] [ n ] / t ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( q < NUM00 ) { \n\t\t\tint l = n - NUM00 ; \n\t\t\tif ( $F161970 ( Math , H , n ) > Math . abs ( H [ n - NUM00 ] [ n ] ) ) { \n\t\t\t\t$F161965 ( H , n ) = q / H [ n ] [ n - NUM00 ] ; \n\t\t\t\tH [ n - NUM00 ] [ n ] = - ( H [ n ] [ n ] - p ) / H [ n ] [ n - NUM00 ] ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tcdiv ( NUM00 , - H [ n - NUM00 ] [ n ] , $F161965 ( H , n ) - p , q ) ; \n\t\t\t\t$F161965 ( H , n ) = cdivr ; \n\t\t\t\tH [ n - NUM00 ] [ n ] = cdivi ; \n\t\t\t\t} \n\t\t\t$F162065 ( H , n ) $F162129 ( H , n ) for ( $F18298 ( i , n ) ) { \n\t\t\t\tdouble ra , sa , vr , vi ; \n\t\t\t\tra = NUM00 ; \n\t\t\t\tsa = NUM00 ; \n\t\t\t\tfor ( int j = l ; \n\t\t\t\tj <= n ; \n\t\t\t\tj ++ ) { \n\t\t\t\t\tra = ra + H [ i ] [ j ] * H [ j ] [ n - NUM00 ] ; \n\t\t\t\t\tsa = sa + $F162130 ( H , i , j , n ) ; \n\t\t\t\t\t} \n\t\t\t\tw = H [ i ] [ i ] - p ; \n\t\t\t\tif ( e [ i ] < NUM00 ) { \n\t\t\t\t\tz = w ; \n\t\t\t\t\tr = ra ; \n\t\t\t\t\ts = sa ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tl = i ; \n\t\t\t\t\tif ( e [ i ] == NUM00 ) { \n\t\t\t\t\t\tcdiv ( - ra , - sa , w , q ) ; \n\t\t\t\t\t\tH [ i ] [ n - NUM00 ] = cdivr ; \n\t\t\t\t\t\tH [ i ] [ n ] = cdivi ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tx = H [ i ] [ i + NUM00 ] ; \n\t\t\t\t\t\ty = H [ i + NUM00 ] [ i ] ; \n\t\t\t\t\t\tvr = $F162144 ( d , i , p ) + e [ i ] * e [ i ] - q * q ; \n\t\t\t\t\t\tvi = ( d [ i ] - p ) * NUM00 * q ; \n\t\t\t\t\t\tif ( vr == NUM00 & vi == NUM00 ) { \n\t\t\t\t\t\t\tvr = eps * norm * ( $F162048 ( Math , w , q , x ) + Math . abs ( y ) + Math . abs ( z ) ) ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\tcdiv ( x * r - z * ra + q * sa , x * s - z * sa - q * ra , vr , vi ) ; \n\t\t\t\t\t\tH [ i ] [ n - NUM00 ] = cdivr ; \n\t\t\t\t\t\tH [ i ] [ n ] = cdivi ; \n\t\t\t\t\t\tif ( Math . abs ( x ) > $F149599 ( Math , z , q ) ) { \n\t\t\t\t\t\t\tH [ i + NUM00 ] [ n - NUM00 ] = ( - ra - w * H [ i ] [ n - NUM00 ] + q * H [ i ] [ n ] ) / x ; \n\t\t\t\t\t\t\tH [ i + NUM00 ] [ n ] = ( - sa - w * H [ i ] [ n ] - q * H [ i ] [ n - NUM00 ] ) / x ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\telse { \n\t\t\t\t\t\t\tcdiv ( - r - y * H [ i ] [ n - NUM00 ] , - s - y * H [ i ] [ n ] , z , q ) ; \n\t\t\t\t\t\t\tH [ i + NUM00 ] [ n - NUM00 ] = cdivr ; \n\t\t\t\t\t\t\tH [ i + NUM00 ] [ n ] = cdivi ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\tt = Math . max ( Math . abs ( H [ i ] [ n - NUM00 ] ) , $F93143 ( Math , H , i , n ) ) ; \n\t\t\t\t\tif ( ( eps * t ) * t > NUM00 ) { \n\t\t\t\t\t\tfor ( int j = i ; \n\t\t\t\t\t\tj <= n ; \n\t\t\t\t\t\tj ++ ) { \n\t\t\t\t\t\t\tH [ j ] [ n - NUM00 ] = H [ j ] [ n - NUM00 ] / t ; \n\t\t\t\t\t\t\tH [ j ] [ n ] = H [ j ] [ n ] / t ; \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tfor ( $F119 ( i , nn ) ) { \n\t\tif ( i < low | i > high ) { \n\t\t\tfor ( int j = i ; \n\t\t\tj < nn ; \n\t\t\tj ++ ) { \n\t\t\t\tV [ i ] [ j ] = H [ i ] [ j ] ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tfor ( $F151882 ( j , nn , low ) ) { \n\t\tfor ( int i = low ; \n\t\ti <= high ; \n\t\ti ++ ) { \n\t\t\tz = NUM00 ; \n\t\t\tfor ( int k = low ; \n\t\t\tk <= Math . min ( j , high ) ; \n\t\t\tk ++ ) { \n\t\t\t\tz = z + V [ i ] [ k ] * H [ k ] [ j ] ; \n\t\t\t\t} \n\t\t\tV [ i ] [ j ] = z ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void serializable ( final IsolationLevels level ) throws Exception { \n\tclear ( store ) ; \n\tfinal ValueFactory vf = store . getValueFactory ( ) ; \n\tfinal IRI subj = vf . createIRI ( NUM00 ) ; \n\tfinal IRI pred = vf . createIRI ( NUM00 ) ; \n\tRepositoryConnection prep = store . getConnection ( ) ; \n\ttry { \n\t\tprep . begin ( level ) ; \n\t\tprep . add ( subj , pred , vf . createLiteral ( NUM00 ) ) ; \n\t\t$F17621 ( prep ) } \n\t$F3229 ( prep ) $F123679 ( start ) $F123679 ( observed ) Thread t1 = incrementBy ( start , observed , level , vf , subj , pred , NUM00 ) ; \n\tThread t2 = incrementBy ( start , observed , level , vf , subj , pred , NUM00 ) ; \n\t$F2346 ( t2 ) $F2346 ( t1 ) $F14454 ( t2 ) $F14454 ( t1 ) assertNotFailed ( ) ; \n\tRepositoryConnection check = store . getConnection ( ) ; \n\ttry { \n\t\tcheck . begin ( level ) ; \n\t\tLiteral lit = readLiteral ( check , subj , pred ) ; \n\t\t$F79839 ( val , lit ) if ( val != NUM00 && val != NUM00 ) $F268701 ( assertEquals , val ) $F17621 ( check ) } \n\t$F3229 ( check ) } \n"}, {"code": "public static Array listToArrayRemoveEmpty ( String list , char delimiter ) { \n\t$F1749 ( len , list ) ArrayImpl array = new ArrayImpl $F72 ; \n\t$F116 ( len , array ) int last = NUM00 ; \n\tfor ( $F119 ( i , len ) ) { \n\t\tif $F44927 ( list , i , delimiter ) { \n\t\t\tif ( last < i ) array . _append ( list . substring ( last , i ) ) ; \n\t\t\tlast = i + NUM00 ; \n\t\t\t} \n\t\t} \n\tif ( last < len ) array . _append ( list . substring ( last ) ) ; \n\treturn array ; \n\t} \n"}, {"code": "$F49286 ( value , absMin , absMax , absValue , Math ) "}, {"code": "public static < T extends Object & $F25280 > T min $F11639 ( collection ) { \n\t$F11642 ( it , collection ) $F11644 ( min , it ) while $F2921 ( it ) { \n\t\t$F11646 ( next , it ) if $F9032 ( min , next ) { \n\t\t\tmin = next ; \n\t\t\t} \n\t\t} \n\treturn min ; \n\t} \n"}, {"code": "$F1 public ServerHeartbeat server ( String address , int port , boolean isSSL , String clusterId , String displayName , boolean isDynamic ) { \n\tObjects . requireNonNull ( address ) ; \n\tObjects . requireNonNull ( clusterId ) ; \n\tif $F2979 ( address ) { \n\t\taddress = NUM00 ; \n\t\t} \n\tClusterHeartbeat cluster = createCluster ( clusterId ) ; \n\tServerHeartbeat server ; \n\tif ( isDynamic ) { \n\t\tserver = cluster . createDynamicServer ( address , port , isSSL ) ; \n\t\t} \n\telse { \n\t\tserver = cluster . createServer ( address , port , isSSL ) ; \n\t\t} \n\tif ( displayName != null ) { \n\t\tserver . setDisplayName ( displayName ) ; \n\t\t} \n\tif ( ! isDynamic ) { \n\t\tcluster . addSeedServer ( server ) ; \n\t\t} \n\treturn server ; \n\t} \n"}, {"code": "public void testToString $F72 { \n\tLinkedBlockingQueue q = populatedQueue ( SIZE ) ; \n\t$F1822 ( s , q ) for ( $F1316 ( i , SIZE ) ) { \n\t\tassertTrue ( s . indexOf ( String . valueOf ( i ) ) >= NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private void findClub $F72 { \n\tif $F9774 ( ce ) $F932 $F21024 ( title , Messages ) $F21024 ( body , Messages ) if ( ! clientgui . doYesNoDialog ( title , body ) ) $F932 $F6050 ( attacks ) attacks . addElement ( new FindClubAction ( cen ) ) ; \n\tready ( ) ; \n\t} \n"}, {"code": "public void test_allocationContexts $F72 throws IOException { \n\tfinal Journal store = ( Journal ) getStore ( ) ; \n\ttry { \n\t\t$F205089 ( bs , store ) $F205091 ( rw , bs ) final IAllocationContext allocContext1 = rw . newAllocationContext ( _BOOL ) ; \n\t\tfinal IAllocationContext allocContext2 = rw . newAllocationContext ( _BOOL ) ; \n\t\tfinal int sze = NUM00 ; \n\t\tfinal $F96 $F83281 ( buf , sze ) ; \n\t\tr . nextBytes ( buf ) ; \n\t\tfinal long addr1a = bs . write ( ByteBuffer . wrap ( buf ) , allocContext1 ) ; \n\t\tfinal long addr1b = bs . write ( ByteBuffer . wrap ( buf ) , allocContext1 ) ; \n\t\trw . detachContext ( allocContext1 ) ; \n\t\tfinal long addr2a = bs . write ( ByteBuffer . wrap ( buf ) , allocContext2 ) ; \n\t\tfinal long addr2b = bs . write ( ByteBuffer . wrap ( buf ) , allocContext2 ) ; \n\t\trw . detachContext ( allocContext2 ) ; \n\t\ttry { \n\t\t\tbs . write ( ByteBuffer . wrap ( buf ) , allocContext1 ) ; \n\t\t\tfail ( NUM00 ) ; \n\t\t\t} \n\t\tcatch ( IllegalStateException ise ) $F845 final IAllocationContext allocContext3 = rw . newAllocationContext ( _BOOL ) ; \n\t\tfinal long addr1c = bs . write ( ByteBuffer . wrap ( buf ) , allocContext3 ) ; \n\t\tassertTrue ( NUM00 , bs . getPhysicalAddress ( addr1c ) > bs . getPhysicalAddress ( addr2b ) ) ; \n\t\tbs . delete ( addr1c , allocContext3 ) ; \n\t\tfinal long addr1d = bs . write ( ByteBuffer . wrap ( buf ) , allocContext3 ) ; \n\t\tassertTrue ( NUM00 , addr1c == addr1d ) ; \n\t\trw . detachContext ( allocContext3 ) ; \n\t\t$F17621 ( store ) bs . delete ( addr1d ) ; \n\t\tfinal long addr1e = bs . write ( ByteBuffer . wrap ( buf ) ) ; \n\t\tassertTrue ( NUM00 , addr1e != addr1d ) ; \n\t\t$F17621 ( store ) } \n\t$F17625 ( store ) } \n"}, {"code": "public PDFXref $F97 ( line ) { \n\tif ( line == null ) { \n\t\tid = - NUM00 ; \n\t\tgeneration = - NUM00 ; \n\t\t} \n\telse { \n\t\t$F254518 ( id , Integer , line ) $F254518 ( generation , Integer , line ) } \n\tcompressed = _BOOL ; \n\t} \n"}, {"code": "public static $F806 makeStrings ( Collection < InetAddress > addrs ) { \n\t$F5442 ( result , addrs ) int i = NUM00 ; \n\tfor ( InetAddress addr : addrs ) { \n\t\tresult [ i ++ ] = addr . getHostAddress ( ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public static void showProfile ( Activity activity , String pilotId , $F5466 $F12078 extras ) { \n\tif ( $F4251 ( pilotId ) && AirMap . hasValidAuthenticatedUser ( ) ) { \n\t\tpilotId = AirMap . getUserId ( ) ; \n\t\t} \n\tIntent intent = new Intent ( activity , ProfileActivity . class ) ; \n\tintent . putExtra ( ProfileActivity . ARG_PILOT_ID , pilotId ) ; \n\tif ( extras != null ) { \n\t\tintent . putExtra ( CreateFlightActivity . KEY_VALUE_EXTRAS , extras ) ; \n\t\t} \n\tactivity . startActivity ( intent ) ; \n\t} \n"}, {"code": "public SmoothMoves $F72 { \n\t$F11380 ( cycleStart , System ) ; \n\tstartTimer ( currentResolution ) ; \n\t} \n"}, {"code": "public static void updatePriceLists ( Properties ctx , ProductBean productBean , String trxName ) throws OperationException { \n\tArrayList < ProductBean > list = productBean . getProductBeanList ( ) ; \n\tif ( list != null ) { \n\t\tint productId = productBean . getProductId ( ) ; \n\t\tIterator < ProductBean > iter = list . iterator ( ) ; \n\t\twhile $F2921 ( iter ) { \n\t\t\tProductBean bean = iter . next ( ) ; \n\t\t\tint priceListId = bean . getPriceListId ( ) ; \n\t\t\tBigDecimal stdPrice = bean . getStdPrice ( ) ; \n\t\t\tBigDecimal listPrice = bean . getListPrice ( ) ; \n\t\t\tBigDecimal limitPrice = bean . getLimitPrice ( ) ; \n\t\t\tMPriceList priceList = MPriceList . get ( ctx , priceListId , trxName ) ; \n\t\t\tif ( priceList . isTaxIncluded ( ) ) { \n\t\t\t\tstdPrice = bean . getStdPriceIncl ( ) ; \n\t\t\t\tlistPrice = bean . getListPriceIncl ( ) ; \n\t\t\t\tlimitPrice = bean . getLimitPriceIncl ( ) ; \n\t\t\t\t} \n\t\t\tupdatePriceLists ( ctx , productId , priceListId , stdPrice , listPrice , limitPrice , trxName ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private String checkDependencies ( ModuleDescriptor md , HashMap < String , ModuleDescriptor > modlist ) { \n\tlogger . debug ( $F73839 ( md ) ) ; \n\tModuleInterface [ ] requires = md . getRequires ( ) ; \n\tif ( requires != null ) { \n\t\tfor ( ModuleInterface req : requires ) { \n\t\t\tString res = checkOneDependency ( md , req , modlist ) ; \n\t\t\tif $F5973 ( res ) { \n\t\t\t\treturn res ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1278 } \n"}, {"code": "public void testClearBitPositiveInside1 $F72 $F37104 ( aSign , number , aNumber , aBytes , result , rBytes , resBytes , i , assertTrue , assertEquals ) "}, {"code": "public void deserializeFunnel $F11546 ( serializedFunnel ) { \n\t$F113927 $F9626 ( funnelStepAccumulator ) ; \n\tfor ( Object e : serializedFunnel ) { \n\t\tif ( e != null ) $F207 ( funnelStepAccumulator , e ) else { \n\t\t\tfunnelSteps . add ( $F28906 ( funnelStepAccumulator ) ) ; \n\t\t\t$F725 ( funnelStepAccumulator ) } \n\t\t} \n\t} \n"}, {"code": "public static String appendParameter ( CtClass type , String descriptor ) { \n\t$F1384 ( i , descriptor ) if ( i < NUM00 ) return descriptor ; \n\telse { \n\t\t$F280 ( newdesc ) $F6937 ( newdesc , descriptor , i ) toDescriptor ( newdesc , type ) ; \n\t\t$F13047 ( newdesc , descriptor , i ) $F92 ( newdesc ) } \n\t} \n"}, {"code": "public void addCatchClause ( CatchClause clause ) { \n\tassertNotNull ( clause ) ; \n\tif ( catchClauses == null ) { \n\t\tcatchClauses = new ArrayList < CatchClause > $F72 ; \n\t\t} \n\tcatchClauses . add ( clause ) ; \n\tclause . setParent ( this ) ; \n\t} \n"}, {"code": "public static void streamContentToBrowser ( HttpServletResponse response , $F96 bytes , String contentType , String fileName ) throws IOException { \n\tsetResponseBrowserProxyNoCache ( response ) ; \n\tresponse . setContentLength ( bytes . length ) ; \n\tif ( contentType != null ) { \n\t\tresponse . setContentType ( contentType ) ; \n\t\t} \n\tif ( fileName != null ) { \n\t\tresponse . setHeader ( NUM00 , NUM00 + fileName + NUM00 ) ; \n\t\t} \n\t$F147972 ( out , response ) InputStream in = new ByteArrayInputStream ( bytes ) ; \n\ttry { \n\t\tstreamContent ( out , in , bytes . length ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\t$F59 ( in ) $F59 ( out ) throw e ; \n\t\t} \n\t$F59 ( in ) $F1206 ( out ) $F59 ( out ) } \n"}, {"code": "public void unlock ( Object key ) { \n\t$F2544 ( uid , String , key ) Transaction tr = lockedUIDHashMap . get ( uid ) ; \n\t$F2329 ( tr ) try $F19092 ( tr ) $F92403 ( logger , e ) finally $F106 ( lockedUIDHashMap , uid ) } \n"}, {"code": "public List < Order > fetchOrders ( int startIndex , int num ) { \n\tint endIndex = startIndex + num > orders . size ( ) ? orders . size ( ) : startIndex + num ; \n\treturn orders . subList ( startIndex , endIndex ) ; \n\t} \n"}, {"code": "public boolean ensureSchemaAgreement $F72 { \n\t$F657 ( start , System ) $F14855 schemas = null ; \n\twhile ( System . currentTimeMillis ( ) - start < DbClientContext . MAX_SCHEMA_WAIT_MS ) { \n\t\ttry { \n\t\t\tlog . info ( NUM00 , DbClientContext . SCHEMA_RETRY_SLEEP_MILLIS / NUM00 ) ; \n\t\t\tThread . sleep ( DbClientContext . SCHEMA_RETRY_SLEEP_MILLIS ) ; \n\t\t\t} \n\t\tcatch ( InterruptedException ex ) $F10911 ( log ) schemas = getSchemaVersions ( ) ; \n\t\tif $F3817 ( schemas ) $F1448 if $F10471 ( schemas ) { \n\t\t\tif ( ! schemas . containsKey ( StorageProxy . UNREACHABLE ) ) { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\telse $F1448 } \n\t\tif ( schemas . containsKey ( StorageProxy . UNREACHABLE ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\t$F5197 ( log , schemas ) $F4638 } \n"}, {"code": "$F40512 ( stack ) "}, {"code": "private TileStore ( final SpriteStore store ) { \n\tthis . store = store ; \n\ttiles = new ArrayList < Sprite > $F72 ; \n\ttiles . add ( store . getEmptySprite ( ) ) ; \n\t} \n"}, {"code": "public static String comparableQualifier ( String qualifier ) { \n\t$F12747 ( i , _QUALIFIERS , qualifier ) return i == - NUM00 ? $F37513 ( _QUALIFIERS ) + qualifier : String . valueOf ( i ) ; \n\t} \n"}, {"code": "public boolean moreWorkThan ( StoredBlock other ) { \n\treturn chainWork . compareTo ( other . chainWork ) > NUM00 ; \n\t} \n"}, {"code": "public static Object evaluate ( Object context , Object self , String expr , $F3803 engineConfigs ) throws CWLExpressionException { \n\tString trimmedExpr = StringUtils . trim ( expr ) ; \n\t$F3110 ( trimmedExpr ) String function = trimmedExpr ; \n\tif $F3106 ( trimmedExpr ) { \n\t\tfunction = NUM00 ; \n\t\t$F4969 ( function , trimmedExpr ) } \n\tContext cx = Context . enter ( ) ; \n\tcx . setOptimizationLevel ( OPTIMIZATION_LEVEL ) ; \n\tcx . setMaximumInterpreterStackDepth ( MAX_STACK_DEPTH ) ; \n\tcx . setClassShutter ( new CWLExpressionDenyAllClassShutter $F72 ) ; \n\ttry { \n\t\tScriptable globalScope = cx . initStandardObjects ( ) ; \n\t\tif ( engineConfigs != null ) { \n\t\t\tfor ( $F2277 ( i , engineConfigs ) ) { \n\t\t\t\tReader engineConfigReader = new StringReader $F73204 ( engineConfigs , i ) ; \n\t\t\t\tcx . evaluateReader ( globalScope , engineConfigReader , NUM00 + i + NUM00 , NUM00 , null ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tputToScope ( EXPR_CONTEXT_NAME , context , cx , globalScope ) ; \n\t\tputToScope ( EXPR_SELF_NAME , self , cx , globalScope ) ; \n\t\tScriptable resultScope = cx . newObject ( globalScope ) ; \n\t\tresultScope . setPrototype ( globalScope ) ; \n\t\tresultScope . setParentScope ( globalScope ) ; \n\t\tObject result = cx . evaluateString ( resultScope , function , NUM00 , NUM00 , null ) ; \n\t\tif ( result == null || result instanceof Undefined ) $F1337 Object wrappedResult = Context . javaToJS ( result , globalScope ) ; \n\t\tputToScope ( NUM00 , wrappedResult , cx , globalScope ) ; \n\t\tScriptableObject . putProperty ( globalScope , NUM00 , wrappedResult ) ; \n\t\t$F180114 ( finalFunction ) Scriptable wrapScope = cx . newObject ( globalScope ) ; \n\t\twrapScope . setPrototype ( globalScope ) ; \n\t\twrapScope . setParentScope ( globalScope ) ; \n\t\tresult = cx . evaluateString ( wrapScope , finalFunction , NUM00 , NUM00 , null ) ; \n\t\treturn castResult ( result ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F574 ( msg , String , expr ) throw new CWLExpressionException ( msg , e ) ; \n\t\t} \n\tfinally { \n\t\tContext . exit ( ) ; \n\t\t} \n\t} \n"}, {"code": "private void token ( char c ) throws ConfigurationException , IOException { \n\tint t = st . nextToken ( ) ; \n\tif ( t != c ) { \n\t\tif ( c == NUM00 ) $F1210 ( syntax ) else { \n\t\t\tsyntax ( new String ( new char [ ] { \n\t\t\t\tNUM00 , c , + NUM00 } \n\t\t\t) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static boolean isJarURL ( URL url ) { \n\t$F5524 ( protocol , url ) return ( $F86439 ( URL_PROTOCOL_JAR , protocol , URL_PROTOCOL_ZIP , URL_PROTOCOL_VFSZIP ) || URL_PROTOCOL_WSJAR . equals ( protocol ) ) ; \n\t} \n"}, {"code": "public boolean equals ( Object o ) { \n\tif ( o instanceof LDAPUsers ) { \n\t\tLDAPUsers g = ( LDAPUsers ) o ; \n\t\tif ( ( selectedUserDNs != null ) && ( g . selectedUserDNs != null ) && $F52920 ( selectedUserDNs , g ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected void applySetTimestamp ( Long timestamp ) throws SQLException { \n\tif ( timestamp != null && conn . supportsControlTimestamp ( ) ) { \n\t\tif ( timestamp . longValue ( ) != currentTimestamp ) { \n\t\t\tcurrentTimestamp = timestamp . longValue ( ) ; \n\t\t\tstatement . addBatch ( conn . getControlTimestampQuery ( timestamp ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F32797 ( sourcePosition , referencePosition , srcAndRefPositions , referenceCount , a , System ) "}, {"code": "public Accessor ( String className , ClassLoader classLoader , $F749 constructorTypes , $F131 constructorArgs ) { \n\ttry { \n\t\tfClass = Class . forName ( className , _BOOL , classLoader ) ; \n\t\t} \n\tcatch ( ClassNotFoundException e ) $F5795 ( fail ) catch ( ExceptionInInitializerError e ) $F5795 ( fail ) Constructor constructor = null ; \n\ttry { \n\t\tconstructor = fClass . getDeclaredConstructor ( constructorTypes ) ; \n\t\t} \n\tcatch ( SecurityException e2 ) $F5795 ( fail ) catch ( NoSuchMethodException e2 ) $F5795 ( fail ) Assert . isNotNull ( constructor ) ; \n\tconstructor . setAccessible ( _BOOL ) ; \n\ttry { \n\t\tfInstance = constructor . newInstance ( constructorArgs ) ; \n\t\t} \n\tcatch ( IllegalArgumentException e ) $F5795 ( fail ) catch ( InvocationTargetException e ) $F5795 ( fail ) catch ( InstantiationException e ) $F5795 ( fail ) catch ( IllegalAccessException e ) $F5795 ( fail ) } \n"}, {"code": "public static List < LoggedMqttMessage > parseMessageLog ( $F20109 ( messages ) , final ProgressUpdater progress , final long current , final long max ) throws SpyException { \n\ttry { \n\t\tfinal long startTime = TimeUtils . getMonotonicTime ( ) ; \n\t\t$F10162 ( items , messages ) final long chunkSize = items / NUM00 ; \n\t\tfinal MqttMessageLogParser parser = new MqttMessageLogParser $F72 ; \n\t\tfinal List < LoggedMqttMessage > list = new ArrayList < LoggedMqttMessage > $F72 ; \n\t\tlong item = NUM00 ; \n\t\tlong reportAt = NUM00 ; \n\t\tfor ( $F119 ( i , items ) ) { \n\t\t\t$F3056 ( message , messages , i ) if ( progress != null ) { \n\t\t\t\tif ( progress . isCancelled ( ) ) $F11048 ( logger ) item ++ ; \n\t\t\t\tif ( item % NUM00 == NUM00 ) { \n\t\t\t\t\tprogress . update ( current + item , max ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( ( i > NUM00 ) && ( i == ( chunkSize * reportAt ) ) ) { \n\t\t\t\tfinal long currentTime = TimeUtils . getMonotonicTime ( ) ; \n\t\t\t\tfinal long timeTaken = currentTime - startTime ; \n\t\t\t\tfinal long totalTimeExpected = timeTaken * items / i ; \n\t\t\t\tif ( timeTaken > NUM00 ) { \n\t\t\t\t\tlogger . info ( NUM00 , reportAt * NUM00 , ( totalTimeExpected - timeTaken ) / NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\treportAt ++ ; \n\t\t\t\t} \n\t\t\ttry { \n\t\t\t\tlist . add ( parser . parse ( message ) ) ; \n\t\t\t\t} \n\t\t\tcatch ( XMLException e ) $F30203 ( logger , message , e ) } \n\t\t$F11057 ( logger , list ) return list ; \n\t\t} \n\tcatch ( XMLException e ) { \n\t\tthrow new SpyException ( NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "public void stop $F72 { \n\tduration += System . currentTimeMillis ( ) - start ; \n\t} \n"}, {"code": "public void addRow $F22194 ( row ) throws CarbonSortKeyAndGroupByException { \n\tint currentSize = entryCount ; \n\tif ( sortBufferSize == currentSize ) { \n\t\t$F980 ( LOGGER ) $F5237 fileList ; \n\t\tif $F29395 ( procFiles , numberOfIntermediateFileToBeMerged ) { \n\t\t\tsynchronized ( lockObject ) { \n\t\t\t\tfileList = procFiles . toArray ( $F92261 ( procFiles ) ) ; \n\t\t\t\tthis . procFiles = new $F14386 $F989 ; \n\t\t\t\t} \n\t\t\tLOGGER . debug ( NUM00 + fileList . length ) ; \n\t\t\tstartIntermediateMerging ( fileList ) ; \n\t\t\t} \n\t\t$F29684 recordHolderListLocal = recordHolderList ; \n\t\ttry { \n\t\t\t$F90610 ( semaphore ) dataSorterAndWriterExecutorService . submit ( new DataSorterAndWriter ( recordHolderListLocal ) ) ; \n\t\t\t} \n\t\tcatch ( InterruptedException e ) { \n\t\t\t$F45904 ( LOGGER , e ) throw new CarbonSortKeyAndGroupByException $F1783 ( e ) ; \n\t\t\t} \n\t\tthis . recordHolderList = new Object [ this . sortBufferSize ] [ ] ; \n\t\tthis . entryCount = NUM00 ; \n\t\t} \n\trecordHolderList [ entryCount ++ ] = row ; \n\t} \n"}, {"code": "public static $F96 decode ( String data ) { \n\tint len = $F8196 ( data ) * NUM00 ; \n\t$F39018 ( bOut , len ) try { \n\t\tencoder . decode ( data , bOut ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new DecoderException $F11592 ( e ) ; \n\t\t} \n\t$F11316 ( bOut ) } \n"}, {"code": "@ Uninterruptible public static Address unwindNativeStackFrame ( Address currfp ) { \n\tif ( VM . BuildForIA32 ) { \n\t\treturn currfp ; \n\t\t} \n\tAddress callee_fp ; \n\tAddress fp = Magic . getCallerFramePointer ( currfp ) ; \n\tAddress ip ; \n\tdo { \n\t\tcallee_fp = fp ; \n\t\tip = Magic . getReturnAddressUnchecked ( fp ) ; \n\t\tfp = Magic . getCallerFramePointer ( fp ) ; \n\t\t} \n\twhile ( ! MemoryManager . addressInVM ( ip ) && fp . NE ( StackFrameLayout . getStackFrameSentinelFP ( ) ) ) ; \n\tif ( VM . BuildForPowerPC ) { \n\t\treturn fp ; \n\t\t} \n\telse { \n\t\treturn callee_fp ; \n\t\t} \n\t} \n"}, {"code": "$F1 public PathImpl schemeWalk ( String userPath , $F2100 ( attributes ) , String filePath , int offset ) { \n\tString canonicalPath ; \n\tif ( offset < filePath . length ( ) && ( filePath . charAt ( offset ) == NUM00 || filePath . charAt ( offset ) == _separatorChar ) ) canonicalPath = normalizePath ( NUM00 , filePath , offset , _separatorChar ) ; \n\telse canonicalPath = normalizePath ( _pathname , filePath , offset , _separatorChar ) ; \n\treturn fsWalk ( userPath , attributes , canonicalPath ) ; \n\t} \n"}, {"code": "public static boolean isMimeTypeImage ( String mimeType ) { \n\treturn mimeType != null && mimeType . startsWith ( NUM00 ) ; \n\t} \n"}, {"code": "public FXMessageDialog ( final Stage parent , final Parent group ) { \n\tthis ( parent ) ; \n\tcontent . setCenter ( group ) ; \n\t} \n"}, {"code": "$F30491 ( key , value , bitmapSize , getBitmapSize ) "}, {"code": "public Matrix abs $F72 { \n\t$F3788 ( result , m , n ) for ( int i = NUM00 ; \n\ti < result . A . length ; \n\ti ++ ) { \n\t\tfor ( int j = NUM00 ; \n\t\tj < result . A [ i ] . length ; \n\t\tj ++ ) result . A [ i ] [ j ] = $F93143 ( Math , A , i , j ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public void removeAttribute ( String attrName ) throws SMSException { \n\t$F125374 ( attribute , attrSet , attrName ) if ( attribute == null ) { \n\t\tthrow ( new SMSException ( LdapException . newLdapException ( ResultCode . ATTRIBUTE_OR_VALUE_EXISTS , getBundleString ( IUMSConstants . SMS_ATTR_OR_VAL_EXISTS ) ) , NUM00 ) ) ; \n\t\t} \n\tattrSet . remove ( attrName ) ; \n\tif ( modSet == null ) { \n\t\t$F266988 ( modSet ) } \n\tBasicAttribute ba = new BasicAttribute ( attrName , attribute ) ; \n\tfor ( $F2774 ( items , attribute ) ) ba . add ( items . next ( ) ) ; \n\tmodSet . add ( new ModificationItem ( DirContext . REMOVE_ATTRIBUTE , ba ) ) ; \n\t} \n"}, {"code": "@ TargetApi ( Build . VERSION_CODES . HONEYCOMB ) public void snapshot ( int cameraId ) { \n\tfinal int encWidth = NUM00 ; \n\tfinal int encHeight = NUM00 ; \n\tif ( enable . containsKey ( cameraId ) && ! enable . get ( cameraId ) ) $F932 Camera camera = null ; \n\tsynchronized ( cameraLock ) { \n\t\ttry { \n\t\t\tcamera = prepareCamera ( cameraId , encWidth , encHeight ) ; \n\t\t\t$F2329 ( camera ) $F44970 ( Cfg , Check , TAG , cameraId ) if ( this . surface == null ) { \n\t\t\t\t$F11844 ( surfaceparams ) GLES20 . glGenTextures ( NUM00 , surfaceparams , NUM00 ) ; \n\t\t\t\tGLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , surfaceparams [ NUM00 ] ) ; \n\t\t\t\tGLES20 . glTexParameteri ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_WRAP_S , GLES20 . GL_CLAMP_TO_EDGE ) ; \n\t\t\t\tGLES20 . glTexParameteri ( GLES20 . GL_TEXTURE_2D , GLES20 . GL_TEXTURE_WRAP_T , GLES20 . GL_CLAMP_TO_EDGE ) ; \n\t\t\t\tthis . surface = new SurfaceTexture ( surfaceparams [ NUM00 ] ) ; \n\t\t\t\t} \n\t\t\tcamera . setPreviewTexture ( surface ) ; \n\t\t\tcamera . startPreview ( ) ; \n\t\t\tcamera . setOneShotPreviewCallback ( previewCallback ) ; \n\t\t\t$F18604 ( cameraLock ) } \n\t\tcatch ( Exception e ) { \n\t\t\t$F44970 ( Cfg , Check , TAG , e ) } \n\t\t} \n\t} \n"}, {"code": "private static DebuggerException parseExceptionOption ( Node node ) { \n\treturn new DebuggerException ( parseStringOption ( node , NUM00 ) , parseLongOption ( node , NUM00 ) , DebuggerExceptionHandlingAction . convertToHandlingAction ( parseIntOption ( node , NUM00 ) ) ) ; \n\t} \n"}, {"code": "public Image rotate180Degrees ( Image image , boolean maintainOpacity ) { \n\t$F2027 rgb = image . getRGB ( ) ; \n\t$F22974 ( newRGB , rgb ) $F2049 ( width , image ) $F2047 ( height , image ) for ( $F119 ( y , height ) ) { \n\t\tfor ( $F119 ( x , width ) ) { \n\t\t\tint destX = width - x - NUM00 ; \n\t\t\tnewRGB [ destX + ( height - y - NUM00 ) * width ] = rgb [ x + y * width ] ; \n\t\t\t} \n\t\t} \n\treturn EncodedImage . createFromRGB ( newRGB , width , height , ! maintainOpacity ) ; \n\t} \n"}, {"code": "public static void updateFinantare ( SetGetModel m , String changedColumnName ) { \n\tBigDecimal valCofinantare = SetGetUtil . get_AttrValueAsBigDecimal ( m , COLUMNNAME_A_Valoare_Cofinantare ) ; \n\tBigDecimal assetCost = SetGetUtil . get_AttrValueAsBigDecimal ( m , COLUMNNAME_A_Asset_Cost ) ; \n\tBigDecimal valTert = SetGetUtil . get_AttrValueAsBigDecimal ( m , COLUMNNAME_A_Valoare_Tert ) ; \n\tif ( $F67525 ( valCofinantare ) && $F67525 ( valTert ) ) { \n\t\tvalCofinantare = assetCost ; \n\t\tvalTert = Env . ZERO ; \n\t\t} \n\telse if $F1238 ( COLUMNNAME_A_Asset_Cost , changedColumnName ) { \n\t\tvalCofinantare = assetCost . subtract ( valTert ) ; \n\t\t} \n\telse if $F1238 ( COLUMNNAME_A_Valoare_Cofinantare , changedColumnName ) { \n\t\tvalTert = assetCost . subtract ( valCofinantare ) ; \n\t\t} \n\telse if $F1238 ( COLUMNNAME_A_Valoare_Tert , changedColumnName ) { \n\t\tvalCofinantare = assetCost . subtract ( valTert ) ; \n\t\t} \n\telse { \n\t\tvalTert = assetCost . subtract ( valCofinantare ) ; \n\t\t} \n\tString tipFinantare = A_TIP_FINANTARE_Cofinantare ; \n\tif ( $F67525 ( valTert ) ) { \n\t\ttipFinantare = A_TIP_FINANTARE_Proprie ; \n\t\t} \n\telse if ( $F67525 ( valCofinantare ) ) { \n\t\ttipFinantare = A_TIP_FINANTARE_Terti ; \n\t\t} \n\tm . set_AttrValue ( COLUMNNAME_A_Tip_Finantare , tipFinantare ) ; \n\tm . set_AttrValue ( COLUMNNAME_A_Valoare_Cofinantare , valCofinantare ) ; \n\tm . set_AttrValue ( COLUMNNAME_A_Valoare_Tert , valTert ) ; \n\tif ( A_TIP_FINANTARE_Proprie . equals ( tipFinantare ) && SetGetUtil . isPersistent ( m ) ) { \n\t\tm . set_AttrValue ( COLUMNNAME_A_FundingMode_ID , null ) ; \n\t\t} \n\t} \n"}, {"code": "private void parseStartTag ( boolean xmldecl , boolean throwOnResolveFailure ) throws $F139192 { \n\tif ( ! xmldecl ) $F1210 ( read ) name = readName ( ) ; \n\tattributeCount = NUM00 ; \n\twhile ( _BOOL ) { \n\t\tskip ( ) ; \n\t\t$F336033 ( position , limit , fillBuffer , checkRelaxed , UNEXPECTED_EOF ) int c = buffer [ position ] ; \n\t\tif ( xmldecl ) { \n\t\t\tif ( c == NUM00 ) { \n\t\t\t\tposition ++ ; \n\t\t\t\tread ( NUM00 ) ; \n\t\t\t\t$F665 } \n\t\t\t} \n\t\telse { \n\t\t\tif ( c == NUM00 ) { \n\t\t\t\tdegenerated = _BOOL ; \n\t\t\t\tposition ++ ; \n\t\t\t\tskip ( ) ; \n\t\t\t\tread ( NUM00 ) ; \n\t\t\t\t$F597 } \n\t\t\telse if ( c == NUM00 ) $F56675 ( position ) } \n\t\tString attrName = readName ( ) ; \n\t\tint i = ( attributeCount ++ ) * NUM00 ; \n\t\tattributes = ensureCapacity ( attributes , i + NUM00 ) ; \n\t\tattributes [ i ] = NUM00 ; \n\t\tattributes [ i + NUM00 ] = null ; \n\t\tattributes [ i + NUM00 ] = attrName ; \n\t\tskip ( ) ; \n\t\t$F336033 ( position , limit , fillBuffer , checkRelaxed , UNEXPECTED_EOF ) if ( buffer [ position ] == NUM00 ) { \n\t\t\tposition ++ ; \n\t\t\tskip ( ) ; \n\t\t\t$F336033 ( position , limit , fillBuffer , checkRelaxed , UNEXPECTED_EOF ) char delimiter = buffer [ position ] ; \n\t\t\tif $F37111 ( delimiter ) { \n\t\t\t\tposition ++ ; \n\t\t\t\t} \n\t\t\telse if ( relaxed ) { \n\t\t\t\tdelimiter = NUM00 ; \n\t\t\t\t} \n\t\t\telse $F139239 ( this ) attributes [ i + NUM00 ] = readValue ( delimiter , _BOOL , throwOnResolveFailure , ValueContext . ATTRIBUTE ) ; \n\t\t\tif ( delimiter != NUM00 && peekCharacter ( ) == delimiter ) { \n\t\t\t\tposition ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( relaxed ) { \n\t\t\tattributes [ i + NUM00 ] = attrName ; \n\t\t\t} \n\t\telse { \n\t\t\tcheckRelaxed ( NUM00 + attrName ) ; \n\t\t\tattributes [ i + NUM00 ] = attrName ; \n\t\t\t} \n\t\t} \n\tint sp = depth ++ * NUM00 ; \n\telementStack = ensureCapacity ( elementStack , sp + NUM00 ) ; \n\telementStack [ sp + NUM00 ] = name ; \n\tif ( depth >= nspCounts . length ) { \n\t\t$F65716 ( bigger , depth ) $F7057 ( System , nspCounts , bigger ) nspCounts = bigger ; \n\t\t} \n\t$F130980 ( nspCounts , depth ) if ( processNsp ) $F5795 ( adjustNsp ) else { \n\t\tnamespace = NUM00 ; \n\t\t} \n\tif ( defaultAttributes != null ) { \n\t\t$F2539 elementDefaultAttributes = defaultAttributes . get ( name ) ; \n\t\tif ( elementDefaultAttributes != null ) { \n\t\t\tfor ( $F19318 ( entry , elementDefaultAttributes ) ) { \n\t\t\t\tif ( getAttributeValue ( null , entry . getKey ( ) ) != null ) $F1448 int i = ( attributeCount ++ ) * NUM00 ; \n\t\t\t\tattributes = ensureCapacity ( attributes , i + NUM00 ) ; \n\t\t\t\tattributes [ i ] = NUM00 ; \n\t\t\t\tattributes [ i + NUM00 ] = null ; \n\t\t\t\tattributes [ i + NUM00 ] = entry . getKey ( ) ; \n\t\t\t\tattributes [ i + NUM00 ] = entry . getValue ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telementStack [ sp ] = namespace ; \n\telementStack [ sp + NUM00 ] = prefix ; \n\telementStack [ sp + NUM00 ] = name ; \n\t} \n"}, {"code": "private void displayCalendar $F72 { \n\tListItem listItem = fieldResource . getSelectedItem ( ) ; \n\t$F8249 ( listItem ) KeyNamePair pp = new KeyNamePair ( ( Integer ) listItem . getValue ( ) , listItem . getLabel ( ) ) ; \n\tint S_Resource_ID = pp . getKey ( ) ; \n\tm_mAssignment . setS_Resource_ID ( S_Resource_ID ) ; \n\tDate date = fieldDate . getValue ( ) ; \n\t$F35 ( date , System ) m_loading = _BOOL ; \n\tschedulePane . recreate ( S_Resource_ID , date ) ; \n\tm_loading = _BOOL ; \n\tinvalidate ( ) ; \n\t} \n"}, {"code": "public LineString createLineString ( CoordinateSequence coordinates ) { \n\treturn new LineString ( coordinates , this ) ; \n\t} \n"}, {"code": "public static final $F5415 trim ( $F5415 a , int size ) { \n\tif ( a . length == size ) { \n\t\treturn a ; \n\t\t} \n\telse { \n\t\t$F25850 ( b , size ) $F135 ( System , a , b , size ) return b ; \n\t\t} \n\t} \n"}, {"code": "public void close $F72 { \n\tif $F48405 ( closed , _BOOL ) $F5795 ( doClose ) } \n"}, {"code": "$F1 public boolean connectionAllowed ( String eventName ) { \n\tif $F1264 ( eventName ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F20092 ( m_listenee , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "void subtractFlakes ( int quantity ) { \n\tfor ( $F1316 ( i , quantity ) ) { \n\t\tint index = numFlakes - i - NUM00 ; \n\t\tflakes . remove ( index ) ; \n\t\t} \n\tsetNumFlakes ( numFlakes - quantity ) ; \n\t} \n"}, {"code": "public int processBytes $F107623 ( in , inOff , len , out , outOff ) throws $F5278 { \n\t$F6853 ( len ) int blockSize = getBlockSize ( ) ; \n\tint length = getUpdateOutputSize ( len ) ; \n\t$F139178 ( length , outOff , out ) int resultLen = NUM00 ; \n\tint gapLen = buf . length - bufOff ; \n\t$F139183 ( len , gapLen , System , in , inOff , buf , bufOff , resultLen , cipher , out , outOff , blockSize ) System . arraycopy ( in , inOff , buf , bufOff , len ) ; \n\tbufOff += len ; \n\treturn resultLen ; \n\t} \n"}, {"code": "public boolean requiredResourceName ( Policy policy , String realmName , String name ) { \n\tgetSvcTypeNameToActionsMap ( policy , realmName ) ; \n\t$F297 ( requiredResourceNameService , name ) } \n"}, {"code": "public static void main $F39524 { \n\tboolean ok = parseOptions ( args ) ; \n\tif ( ! ok || ! stripFiles ( infiles , outfiles ) ) $F63967 ( System ) } \n"}, {"code": "protected String a $F18289 ( s , v , u ) throws Exception { \n\tchar sign = v >= NUM00 ? NUM00 : NUM00 ; \n\tDate dt = DateMathParser . parseMath ( null , s + NUM00 + sign + Math . abs ( v ) + u ) ; \n\treturn fmt . format ( dt . toInstant ( ) ) ; \n\t} \n"}, {"code": "public AuthorityKeyIdentifierStructure ( X509Certificate certificate ) throws CertificateParsingException $F14373 ( super , fromCertificate , certificate ) "}, {"code": "JarFile open ( final File jarFile ) throws IOException { \n\tisTrue ( jarFile . exists ( ) , NUM00 ) ; \n\treturn new JarFile ( jarFile ) ; \n\t} \n"}, {"code": "public void removeAllEmails $F72 $F9096 ( emails ) "}, {"code": "$F20296 ( mRootDirectory , VolleyLog , files , file , fis , entry , CacheHeader , putEntry ) "}, {"code": "protected void drawPath ( Canvas canvas , $F6205 points , Paint paint , boolean circular ) { \n\t$F6212 ( path ) $F2047 ( height , canvas ) $F2049 ( width , canvas ) $F5415 tempDrawPoints ; \n\t$F6215 ( points ) tempDrawPoints = calculateDrawPoints ( points . get ( NUM00 ) , points . get ( NUM00 ) , points . get ( NUM00 ) , points . get ( NUM00 ) , height , width ) ; \n\t$F6222 ( path , tempDrawPoints ) $F6224 ( path , tempDrawPoints ) $F2199 ( length , points ) for ( $F6225 ( i , length ) ) { \n\t\tif ( ( points . get ( i - NUM00 ) < NUM00 && $F6227 ( points , i ) ) || ( points . get ( i - NUM00 ) > height && points . get ( i + NUM00 ) > height ) ) $F1448 tempDrawPoints = calculateDrawPoints ( points . get ( i - NUM00 ) , points . get ( i - NUM00 ) , points . get ( i ) , points . get ( i + NUM00 ) , height , width ) ; \n\t\tif ( ! circular ) { \n\t\t\t$F6222 ( path , tempDrawPoints ) } \n\t\t$F6224 ( path , tempDrawPoints ) } \n\tif ( circular ) { \n\t\tpath . lineTo ( $F6243 ( points ) ) ; \n\t\t} \n\tcanvas . drawPath ( path , paint ) ; \n\t} \n"}, {"code": "$F61852 public void test_unwrap_02 $F72 throws SSLException { \n\tString host = NUM00 ; \n\tint port = NUM00 ; \n\t$F30907 ( bbA , ByteBuffer ) $F30909 ( bb , ByteBuffer ) SSLEngine sse = getEngine ( host , port ) ; \n\tsse . setUseClientMode ( _BOOL ) ; \n\ttry { \n\t\tsse . unwrap ( bb , bbA , - NUM00 , NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F191186 try { \n\t\tsse . unwrap ( bb , bbA , NUM00 , - NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F191186 try { \n\t\tsse . unwrap ( bb , bbA , bbA . length + NUM00 , bbA . length ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F191186 try { \n\t\tsse . unwrap ( bb , bbA , NUM00 , bbA . length + NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F191186 } \n"}, {"code": "public PWResetAdminLog ( SSOToken token ) { \n\tthis . token = token ; \n\tif ( logStatus ) { \n\t\tlogger = ( $F476277 ) Logger . getLogger ( logFile ) ; \n\t\t} \n\tString lstr = SystemProperties . get ( Constants . AM_LOCALE ) ; \n\tinit ( lstr ) ; \n\t} \n"}, {"code": "public static boolean isLetter ( Character self ) { \n\treturn Character . isLetter ( self ) ; \n\t} \n"}, {"code": "public void callArgVisitors ( XPathVisitor visitor ) { \n\tfor ( $F2277 ( i , m_argVec ) ) { \n\t\t$F11427 ( exp , m_argVec , i ) exp . callVisitors ( new ArgExtOwner ( exp ) , visitor ) ; \n\t\t} \n\t} \n"}, {"code": "public static String createLink ( String uri , String label ) { \n\t$F150391 ( uri , label ) } \n"}, {"code": "public static boolean isExpression ( String token , boolean isXml ) { \n\tString openExpr ; \n\tString closeExpr ; \n\tif ( isXml ) { \n\t\topenExpr = OPEN_EXPR_XML ; \n\t\tcloseExpr = CLOSE_EXPR_XML ; \n\t\t} \n\telse { \n\t\topenExpr = OPEN_EXPR ; \n\t\tcloseExpr = CLOSE_EXPR ; \n\t\t} \n\tif ( token . startsWith ( openExpr ) && token . endsWith ( closeExpr ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public void destroy $F72 { \n\tthis . isInitialized = _BOOL ; \n\tthis . isFinished = _BOOL ; \n\tthis . firstNode = null ; \n\tthis . tailLength = NUM00 ; \n\tthis . firstNodeHeight = - NUM00 ; \n\t} \n"}, {"code": "public static Uri fromFile ( File file ) { \n\t$F896 ( file ) PathPart path = PathPart . fromDecoded ( file . getAbsolutePath ( ) ) ; \n\treturn new HierarchicalUri ( NUM00 , Part . EMPTY , path , Part . NULL , Part . NULL ) ; \n\t} \n"}, {"code": "protected Object readFixedType ( BinaryReaderExImpl reader ) throws BinaryObjectException { \n\tObject val = null ; \n\tswitch ( mode ) { \n\t\tcase BYTE : val = reader . readByteNullable ( id ) ; \n\t\t$F597 case SHORT : val = reader . readShortNullable ( id ) ; \n\t\t$F597 case INT : val = reader . readIntNullable ( id ) ; \n\t\t$F597 case LONG : val = reader . readLongNullable ( id ) ; \n\t\t$F597 case FLOAT : val = reader . readFloatNullable ( id ) ; \n\t\t$F597 case DOUBLE : val = reader . readDoubleNullable ( id ) ; \n\t\t$F597 case CHAR : val = reader . readCharNullable ( id ) ; \n\t\t$F597 case BOOLEAN : val = reader . readBooleanNullable ( id ) ; \n\t\t$F597 case DECIMAL : val = reader . readDecimal ( id ) ; \n\t\t$F597 $F1262 val = reader . readString ( id ) ; \n\t\t$F597 case UUID : val = reader . readUuid ( id ) ; \n\t\t$F597 case DATE : val = reader . readDate ( id ) ; \n\t\t$F597 case TIMESTAMP : val = reader . readTimestamp ( id ) ; \n\t\t$F597 case BYTE_ARR : val = reader . readByteArray ( id ) ; \n\t\t$F597 case SHORT_ARR : val = reader . readShortArray ( id ) ; \n\t\t$F597 case INT_ARR : val = reader . readIntArray ( id ) ; \n\t\t$F597 case LONG_ARR : val = reader . readLongArray ( id ) ; \n\t\t$F597 case FLOAT_ARR : val = reader . readFloatArray ( id ) ; \n\t\t$F597 case DOUBLE_ARR : val = reader . readDoubleArray ( id ) ; \n\t\t$F597 case CHAR_ARR : val = reader . readCharArray ( id ) ; \n\t\t$F597 case BOOLEAN_ARR : val = reader . readBooleanArray ( id ) ; \n\t\t$F597 case DECIMAL_ARR : val = reader . readDecimalArray ( id ) ; \n\t\t$F597 case NUM00 <missing ';'> _ARR : val = reader . readStringArray ( id ) ; \n\t\t$F597 case UUID_ARR : val = reader . readUuidArray ( id ) ; \n\t\t$F597 case DATE_ARR : val = reader . readDateArray ( id ) ; \n\t\t$F597 case TIMESTAMP_ARR : val = reader . readTimestampArray ( id ) ; \n\t\t$F597 case OBJECT_ARR : val = reader . readObjectArray ( id ) ; \n\t\t$F597 case COL : val = reader . readCollection ( id , null ) ; \n\t\t$F597 case MAP : val = reader . readMap ( id , null ) ; \n\t\t$F597 case BINARY_OBJ : val = reader . readBinaryObject ( id ) ; \n\t\t$F597 case ENUM : val = reader . readEnum ( id , field . getType ( ) ) ; \n\t\t$F597 case ENUM_ARR : val = reader . readEnumArray ( id , field . getType ( ) . getComponentType ( ) ) ; \n\t\t$F597 case BINARY : case OBJECT : val = reader . readObject ( id ) ; \n\t\t$F597 case CLASS : val = reader . readClass ( id ) ; \n\t\t$F597 default : assert _BOOL : NUM00 + mode ; \n\t\t} \n\treturn val ; \n\t"}, {"code": "protected void processPlayRequest $F72 { \n\ttryToGetAudioFocus ( ) ; \n\tif ( mState == State . STOPPED ) $F5795 ( playMedia ) else if ( mState == State . PAUSED ) { \n\t\tmState = State . PLAYING ; \n\t\tsetUpAsForeground ( String . format ( getString ( R . string . media_state_playing ) , mFile . getFileName ( ) ) ) ; \n\t\tconfigAndStartMediaPlayer ( ) ; \n\t\t} \n\t} \n"}, {"code": "$F1431 public static $F4203 int binarySearch ( List $F10049 list , T object , $F38875 ( comparator ) ) { \n\tif ( comparator == null ) { \n\t\treturn Collections . binarySearch ( ( List < ? extends $F25280 > ) list , object ) ; \n\t\t} \n\tif ( ! ( list instanceof RandomAccess ) ) { \n\t\tListIterator $F10049 it = list . listIterator ( ) ; \n\t\twhile $F2921 ( it ) { \n\t\t\tint result ; \n\t\t\tif ( ( result = - comparator . compare ( it . next ( ) , object ) ) <= NUM00 ) { \n\t\t\t\tif ( result == NUM00 ) { \n\t\t\t\t\treturn it . previousIndex ( ) ; \n\t\t\t\t\t} \n\t\t\t\treturn - it . previousIndex ( ) - NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn - list . size ( ) - NUM00 ; \n\t\t} \n\tint low = NUM00 , mid = list . size ( ) , high = mid - NUM00 , result = - NUM00 ; \n\twhile ( low <= high ) { \n\t\tmid = ( low + high ) > > NUM00 ; \n\t\tif ( ( result = - comparator . compare ( list . get ( mid ) , object ) ) > NUM00 ) { \n\t\t\tlow = mid + NUM00 ; \n\t\t\t} \n\t\telse if ( result == NUM00 ) { \n\t\t\treturn mid ; \n\t\t\t} \n\t\telse { \n\t\t\thigh = mid - NUM00 ; \n\t\t\t} \n\t\t} \n\treturn - mid - ( result < NUM00 ? NUM00 : NUM00 ) ; \n\t} \n"}, {"code": "public void finish $F72 { \n\tm_bias = NUM00 ; \n\t$F1206 ( m_out ) } \n"}, {"code": "$F1 public Vector whatCanGoHere $F23416 ( state ) { \n\t$F6518 ( ret ) for ( $F119 ( i , fNumElements ) ) { \n\t\tif ( state [ i + NUM00 ] == STATE_START ) $F15869 ( ret , fAllElements , i ) } \n\treturn ret ; \n\t} \n"}, {"code": "public void remove ( RegionEntry entry , Object value ) { \n\t$F16628 ( object , map , entry ) $F8249 ( object ) if ( object instanceof Collection ) { \n\t\tCollection coll = ( Collection ) object ; \n\t\tboolean removed = _BOOL ; \n\t\tif ( useList ) { \n\t\t\tsynchronized ( coll ) { \n\t\t\t\tremoved = coll . remove ( value ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tremoved = coll . remove ( value ) ; \n\t\t\t} \n\t\tif ( removed ) { \n\t\t\tif $F10471 ( coll ) $F106 ( map , entry ) atomicUpdater . decrementAndGet ( this ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif $F1238 ( object , value ) $F106 ( map , entry ) atomicUpdater . decrementAndGet ( this ) ; \n\t\t} \n\t} \n"}, {"code": "private HashDataCache ( DataCache < Pair $F94549 > cache , String algorithm ) { \n\tthis . cache = cache ; \n\tthis . algorithm = algorithm ; \n\ttry { \n\t\tMessageDigest . getInstance ( algorithm ) ; \n\t\t} \n\tcatch ( NoSuchAlgorithmException e ) { \n\t\tString msg = NUM00 + algorithm ; \n\t\tLOG . warn ( msg , e ) ; \n\t\tthrow new SystemConfigException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "private void marshallEnum ( Object value , EnumType enumType ) throws IOException { \n\t$F39971 ( LOG , value , enumType ) jsonGenerator . writeString ( value . toString ( ) ) ; \n\t} \n"}, {"code": "public CholeskyDecomposition ( Matrix Arg ) { \n\t$F3791 ( A , Arg ) $F323738 ( n , Arg ) $F10226 ( L , n ) isspd = ( Arg . getColumnDimension ( ) == n ) ; \n\tfor ( $F119 ( j , n ) ) { \n\t\t$F42658 ( Lrowj , L , j ) double d = NUM00 ; \n\t\tfor ( $F119 ( k , j ) ) { \n\t\t\t$F42658 ( Lrowk , L , k ) double s = NUM00 ; \n\t\t\tfor ( $F119 ( i , k ) ) $F323742 ( s , Lrowk , i , Lrowj ) Lrowj [ k ] = s = ( A [ j ] [ k ] - s ) / L [ k ] [ k ] ; \n\t\t\td = d + s * s ; \n\t\t\tisspd = isspd & ( A [ k ] [ j ] == A [ j ] [ k ] ) ; \n\t\t\t} \n\t\td = A [ j ] [ j ] - d ; \n\t\tisspd = isspd & ( d > NUM00 ) ; \n\t\tL [ j ] [ j ] = Math . sqrt ( Math . max ( d , NUM00 ) ) ; \n\t\tfor ( $F2634 ( k , j , n ) ) $F211213 ( L , j , k ) } \n\t} \n"}, {"code": "private void initEvents $F72 { \n\tsetSelectionSounds ( play , hScore , credits , quit , quitY , quitN ) ; \n\tplay . setOnAction ( null ) ; \n\thScore . setOnAction ( null ) ; \n\tcredits . setOnAction ( null ) ; \n\tquit . setOnAction ( null ) ; \n\tquitY . setOnAction ( null ) ; \n\tquitN . setOnAction ( null ) ; \n\tscene . setOnKeyPressed ( null ) ; \n\tscene . setOnKeyReleased ( null ) ; \n\t} \n"}, {"code": "public static boolean isFileTypeSupported ( int fileType , Sequence sequence ) { \n\tList providers = getMidiFileWriters ( ) ; \n\tfor ( $F2277 ( i , providers ) ) { \n\t\tMidiFileWriter writer = ( MidiFileWriter ) providers . get ( i ) ; \n\t\tif $F317110 ( writer , fileType , sequence ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public $F96 windowNaf ( byte width , BigInteger k ) { \n\t$F96 wnaf = new byte [ $F75212 ( k ) ] ; \n\tshort pow2wB = ( short ) ( NUM00 < < width ) ; \n\t$F2544 ( pow2wBI , BigInteger , pow2wB ) int i = NUM00 ; \n\tint length = NUM00 ; \n\twhile ( k . signum ( ) > NUM00 ) { \n\t\tif $F310329 ( k ) { \n\t\t\tBigInteger remainder = k . mod ( pow2wBI ) ; \n\t\t\tif ( remainder . testBit ( width - NUM00 ) ) { \n\t\t\t\twnaf [ i ] = ( byte ) ( remainder . intValue ( ) - pow2wB ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\twnaf [ i ] = ( byte ) remainder . intValue ( ) ; \n\t\t\t\t} \n\t\t\tk = k . subtract ( BigInteger . valueOf ( wnaf [ i ] ) ) ; \n\t\t\tlength = i ; \n\t\t\t} \n\t\telse $F5629 ( wnaf , i ) k = k . shiftRight ( NUM00 ) ; \n\t\ti ++ ; \n\t\t} \n\tlength ++ ; \n\t$F2175 ( wnafShort , length ) $F135 ( System , wnaf , wnafShort , length ) return wnafShort ; \n\t} \n"}, {"code": "private String mapCollectionName ( String collectionName , boolean dest ) { \n\tif ( $F10471 ( collectionRules ) && $F7283 ( StringUtils , defaultCollectionAppend ) ) { \n\t\treturn collectionName ; \n\t\t} \n\tfor ( $F806 rule : collectionRules ) { \n\t\tString match = ( dest ) ? rule [ NUM00 ] : rule [ NUM00 ] ; \n\t\tString replace = ( dest ) ? rule [ NUM00 ] : rule [ NUM00 ] ; \n\t\tif $F105 ( collectionName , match ) { \n\t\t\treturn collectionName . replace ( match , replace ) ; \n\t\t\t} \n\t\t} \n\tif ( dest ) { \n\t\treturn collectionName + defaultCollectionAppend ; \n\t\t} \n\telse { \n\t\treturn collectionName . replace ( defaultCollectionAppend , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "$F30954 ( putLock , takeLock ) "}, {"code": "static public void fillRandomIntegerUniform ( IDoubleVector vec , Random rand , int min , int max ) { \n\tfinal int delta = max - min ; \n\tfor ( $F184528 ( i , vec ) ) { \n\t\tvec . set ( i , min + rand . nextInt ( delta ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F243654 ( Arrays , data ) "}, {"code": "private static void stoppingAnimation ( Thread me ) { \n\tfinal FetcherInfo info = FetcherInfo . getFetcherInfo ( ) ; \n\tsynchronized ( info . waitList ) { \n\t\tint index = - NUM00 ; \n\t\tfor ( int i = NUM00 ; \n\t\ti < info . fetchers . length ; \n\t\ti ++ ) { \n\t\t\tif ( info . fetchers [ i ] == me ) $F932 if ( info . fetchers [ i ] == null ) { \n\t\t\t\tindex = i ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( index >= NUM00 ) { \n\t\t\tinfo . fetchers [ index ] = me ; \n\t\t\tinfo . numFetchers ++ ; \n\t\t\t$F145048 ( me , index ) $F665 } \n\t\t} \n\t} \n"}, {"code": "public boolean name_is_equal ( String p_name ) { \n\t$F397 ( p_name , _BOOL ) $F84030 ( p_name , pkg_name ) } \n"}, {"code": "protected void drawRangeMarkers ( Graphics2D g2 , Rectangle2D dataArea , int index , Layer layer ) { \n\tXYItemRenderer r = getRenderer ( index ) ; \n\t$F2329 ( r ) if ( index >= getDatasetCount ( ) ) $F932 Collection markers = getRangeMarkers ( index , layer ) ; \n\tValueAxis axis = getRangeAxisForDataset ( index ) ; \n\tif ( markers != null && axis != null ) { \n\t\t$F19402 ( iterator , markers ) while $F2921 ( iterator ) { \n\t\t\tMarker marker = ( Marker ) iterator . next ( ) ; \n\t\t\tr . drawRangeMarker ( g2 , this , axis , marker , dataArea ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "static $F96 decryptData $F7233 ( password , encryptedData ) { \n\ttry { \n\t\t$F156 ( c , Cipher , ENCRYPT_DATA_ALGORITHM ) $F94768 ( c , Cipher , password , SECRET_KEY_ALGORITHM , CBC_SALT_DATA ) $F157 ( c , encryptedData ) } \n\tcatch ( Exception e ) { \n\t\tthrow new IllegalStateException ( ENCRYPT_DATA_ALGORITHM + NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "public VPFLayer $F72 { \n\tsetProjectionChangePolicy ( new com . bbn . openmap . layer . policy . ListResetPCPolicy ( this ) ) ; \n\tsetMouseModeIDsForEvents ( $F21904 ) ; \n\t} \n"}, {"code": "private void emitCode $F72 { \n\t$F23313 worklist = new $F23313 $F72 ; \n\tworklist . add ( new Instantiation ( null , mainSubroutine ) ) ; \n\tInsnList newInstructions = new InsnList $F72 ; \n\t$F23328 newTryCatchBlocks = new ArrayList < TryCatchBlockNode > $F72 ; \n\tList $F23335 newLocalVariables = new ArrayList $F23335 $F72 ; \n\twhile $F5973 ( worklist ) { \n\t\tInstantiation inst = worklist . removeFirst ( ) ; \n\t\temitSubroutine ( inst , worklist , newInstructions , newTryCatchBlocks , newLocalVariables ) ; \n\t\t} \n\tinstructions = newInstructions ; \n\ttryCatchBlocks = newTryCatchBlocks ; \n\tlocalVariables = newLocalVariables ; \n\t} \n"}, {"code": "protected boolean shouldClose ( PooledConnection con , int action ) { \n\tif ( con . getConnectionVersion ( ) < getPoolVersion ( ) ) return _BOOL ; \n\tif ( con . isDiscarded ( ) ) return _BOOL ; \n\tif ( isClosed ( ) ) return _BOOL ; \n\tif ( ! con . validate ( action ) ) return _BOOL ; \n\t$F2014 ( terminateTransaction , con , _BOOL ) if ( con . isMaxAgeExpired ( ) ) return _BOOL ; \n\telse return _BOOL ; \n\t} \n"}, {"code": "public Vector3D hsl $F72 { \n\tfloat r = redf ( ) ; \n\tfloat g = greenf ( ) ; \n\tfloat b = bluef ( ) ; \n\tfloat min = Math . min ( Math . min ( r , g ) , b ) ; \n\tfloat max = Math . max ( Math . max ( r , g ) , b ) ; \n\tfloat l = lighting ( min , max ) ; \n\tfloat s = saturation ( min , max , l ) ; \n\tfloat h = hue ( r , g , b , min , max ) ; \n\treturn new Vector3D ( h , s , l ) ; \n\t} \n"}, {"code": "public Future $F19437 shutdownAwaiting ( long timeoutForEach ) { \n\tExecutorService executor = Executors . newScheduledThreadPool ( NUM00 ) ; \n\treturn executor . submit ( createShutdown ( timeoutForEach ) ) ; \n\t} \n"}, {"code": "public boolean isUnused $F72 { \n\treturn ( numEntries < NUM00 ) && waitingThreads . isEmpty ( ) ; \n\t} \n"}, {"code": "public void changeDirectory ( String path ) throws IllegalStateException , IOException , FTPIllegalReplyException , FTPException { \n\tsynchronized ( lock ) { \n\t\t$F34216 ( connected ) $F34216 ( authenticated ) $F158032 ( communication , path ) $F73871 ( r , communication ) touchAutoNoopTimer ( ) ; \n\t\t$F73876 ( r ) } \n\t} \n"}, {"code": "private String removeQuote ( String column ) { \n\treturn column != null ? column . replaceAll ( statementBuilder . getColumnQuote ( ) , StringUtils . EMPTY ) : null ; \n\t} \n"}, {"code": "private boolean scrolledUpTimeout $F72 { \n\tif ( fixedChat || pauseKeyPressed ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( ! styles . autoScroll ( ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F5740 ( timePassed , System , lastChanged ) if ( timePassed > NUM00 * styles . autoScrollTimeout ( ) ) { \n\t\t$F9472 ( LOGGER , timePassed ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F100892 ( zzStartRead , System , zzBuffer , zzEndRead , zzCurrentPos , zzMarkedPos , newBuffer , numRead , zzReader , _BOOL , c ) "}, {"code": "public List < Document > search ( Query query , boolean prefixWildCard ) { \n\tList < Document > documents = new ArrayList < Document > $F72 ; \n\ttry { \n\t\tIndexSearcher searcher = getSearcher ( ) ; \n\t\tTopDocs search = searcher . search ( query , NUM00 ) ; \n\t\tfor ( ScoreDoc scoreDoc : search . scoreDocs ) { \n\t\t\tDocument doc = searcher . doc ( scoreDoc . doc ) ; \n\t\t\tdocuments . add ( doc ) ; \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F301 ( e ) $F5301 ( e ) } \n\treturn documents ; \n\t} \n"}, {"code": "public void writeListEnd $F72 throws IOException $F12032 ( os ) "}, {"code": "public static $F15367 childElementList ( Element element , $F2689 childElementNames ) { \n\t$F1275 ( element ) $F15375 ( elements ) $F397 ( childElementNames , elements ) $F15376 ( node , element ) if ( node != null ) { \n\t\tdo { \n\t\t\tif ( $F15377 ( node , Node ) && childElementNames . contains ( node . getNodeName ( ) ) ) $F15383 ( childElement , node , elements ) } \n\t\twhile $F15388 ( node ) ; \n\t\t} \n\treturn elements ; \n\t} \n"}, {"code": "protected synchronized $F96 engineGenerateSeed ( int numBytes ) { \n\t$F96 myBytes ; \n\tif ( numBytes < NUM00 ) { \n\t\tthrow new NegativeArraySizeException $F59159 ( Integer , numBytes ) ; \n\t\t} \n\tif ( numBytes == NUM00 ) { \n\t\treturn EmptyArray . BYTE ; \n\t\t} \n\tif ( myRandom == null ) { \n\t\tmyRandom = new SHA1PRNG_SecureRandomImpl $F72 ; \n\t\tmyRandom . engineSetSeed ( getRandomBytes ( DIGEST_LENGTH ) ) ; \n\t\t} \n\t$F1325 ( myBytes , numBytes ) myRandom . engineNextBytes ( myBytes ) ; \n\treturn myBytes ; \n\t} \n"}, {"code": "public String numArcsTipText $F72 $F2455 "}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "@ RequestMapping ( $F3144 , method = { \n\tRequestMethod . GET } \n) $F4586 public List < JobInstance > list ( JobListRequest jobRequest ) { \n\tList < JobInstance > jobInstanceList = Collections . emptyList ( ) ; \n\tList < JobStatusEnum > statusList = new ArrayList < JobStatusEnum > $F72 ; \n\tif ( null != jobRequest . getStatus ( ) ) { \n\t\tfor ( int status : jobRequest . getStatus ( ) ) { \n\t\t\tstatusList . add ( JobStatusEnum . getByCode ( status ) ) ; \n\t\t\t} \n\t\t} \n\tJobTimeFilterEnum timeFilter = JobTimeFilterEnum . getByCode ( jobRequest . getTimeFilter ( ) ) ; \n\ttry { \n\t\tjobInstanceList = jobService . listAllJobs ( jobRequest . getCubeName ( ) , jobRequest . getProjectName ( ) , statusList , jobRequest . getLimit ( ) , jobRequest . getOffset ( ) , timeFilter ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tlogger . error ( $F108155 ( e ) ) ; \n\t\tthrow new InternalErrorException ( e ) ; \n\t\t} \n\treturn jobInstanceList ; \n\t} \n"}, {"code": "public $F96 toBinary ( int q ) { \n\treturn ArrayEncoder . encodeModQ ( coeffs , q ) ; \n\t} \n"}, {"code": "$F13429 ( criteria , createCriteriaInternal , oredCriteria ) "}, {"code": "public final void openFallbackInputStream $F72 throws DataFallbackException { \n\tif ( inputBuf == null ) { \n\t\tif $F585 ( LOG ) LOG . debug ( $F2990 ( dataFile ) ) ; \n\t\ttry { \n\t\t\tsetInput ( new BufferedReader $F434 ( dataFile ) ) ; \n\t\t\t} \n\t\tcatch ( IOException e ) { \n\t\t\tthrow new DataFallbackException $F1783 ( e ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void addCaretListener ( final ICaretListener listener ) { \n\t$F1832 ( Preconditions , listener ) $F2201 ( m_listeners , listener ) } \n"}, {"code": "$F1309 static public SerialSensorManager instance $F72 $F1337 "}, {"code": "public void testIsCurrency $F72 { \n\ttry { \n\t\tassertFalse ( rsmd . isCurrency ( NUM00 ) ) ; \n\t\t} \n\t$F125502 ( fail , e1 ) try { \n\t\trsmd . isCurrency ( NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F31184 try { \n\t\trsmd . isCurrency ( NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F31184 try { \n\t\t$F59 ( rs ) rsmd . isCurrency ( NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F31184 } \n"}, {"code": "public String encodeBuffer $F183442 { \n\t$F1538 ( outStream ) $F5950 ( inStream , aBuffer ) try { \n\t\tencodeBuffer ( inStream , outStream ) ; \n\t\t} \n\t$F183443 $F27059 ( outStream ) } \n"}, {"code": "void checkFrameValue ( final Object value ) { \n\tif ( value == Opcodes . TOP || value == Opcodes . INTEGER || value == Opcodes . FLOAT || value == Opcodes . LONG || value == Opcodes . DOUBLE || value == Opcodes . NULL || value == Opcodes . UNINITIALIZED_THIS ) $F932 if ( value instanceof String ) { \n\t\tcheckInternalName ( ( String ) value , NUM00 ) ; \n\t\t$F665 } \n\tif ( ! ( value instanceof Label ) ) $F18931 ( value ) else { \n\t\tusedLabels . add ( ( Label ) value ) ; \n\t\t} \n\t} \n"}, {"code": "public void test_ConstructorIIIII $F72 { \n\tDate d1 = new Date ( NUM00 , NUM00 , NUM00 , NUM00 , NUM00 ) ; \n\tDate d2 = new Date ( NUM00 + d1 . getTimezoneOffset ( ) * NUM00 * NUM00 + $F264 + NUM00 * NUM00 ) ; \n\t$F114430 ( assertTrue , d1 , d2 ) } \n"}, {"code": "protected void pushBidirectionalVipRoutes ( IOFSwitch sw , OFPacketIn pi , FloodlightContext cntx , IPClient client , LBMember member ) { \n\tIDevice srcDevice = null ; \n\tIDevice dstDevice = null ; \n\tCollection < ? extends IDevice > allDevices = deviceManager . getAllDevices ( ) ; \n\tfor ( IDevice d : allDevices ) { \n\t\tfor ( int j = NUM00 ; \n\t\tj < d . getIPv4Addresses ( ) . length ; \n\t\tj ++ ) { \n\t\t\tif ( srcDevice == null && client . ipAddress == d . getIPv4Addresses ( ) [ j ] ) srcDevice = d ; \n\t\t\tif ( dstDevice == null && member . address == d . getIPv4Addresses ( ) [ j ] ) { \n\t\t\t\tdstDevice = d ; \n\t\t\t\tmember . macString = dstDevice . getMACAddressString ( ) ; \n\t\t\t\t} \n\t\t\tif ( srcDevice != null && dstDevice != null ) $F597 } \n\t\t} \n\t$F57400 ( srcDevice , dstDevice ) Long srcIsland = topology . getL2DomainId ( sw . getId ( ) ) ; \n\tif ( srcIsland == null ) { \n\t\tlog . debug ( NUM00 , sw . getStringId ( ) , pi . getInPort ( ) ) ; \n\t\t$F665 } \n\tboolean on_same_island = _BOOL ; \n\tboolean on_same_if = _BOOL ; \n\tfor ( SwitchPort dstDap : dstDevice . getAttachmentPoints ( ) ) { \n\t\tlong dstSwDpid = dstDap . getSwitchDPID ( ) ; \n\t\tLong dstIsland = topology . getL2DomainId ( dstSwDpid ) ; \n\t\tif $F16836 ( dstIsland , srcIsland ) { \n\t\t\ton_same_island = _BOOL ; \n\t\t\tif ( ( sw . getId ( ) == dstSwDpid ) && ( pi . getInPort ( ) == dstDap . getPort ( ) ) ) { \n\t\t\t\ton_same_if = _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 } \n\t\t} \n\tif ( ! on_same_island ) { \n\t\tif $F8415 ( log ) { \n\t\t\tlog . trace ( NUM00 + NUM00 , dstDevice ) ; \n\t\t\t} \n\t\t$F665 } \n\tif ( on_same_if ) { \n\t\tif $F8415 ( log ) { \n\t\t\tlog . trace ( NUM00 + NUM00 , sw . toString ( ) , pi . getInPort ( ) ) ; \n\t\t\t} \n\t\t$F665 } \n\tSwitchPort [ ] srcDaps = srcDevice . getAttachmentPoints ( ) ; \n\tArrays . sort ( srcDaps , clusterIdComparator ) ; \n\tSwitchPort [ ] dstDaps = dstDevice . getAttachmentPoints ( ) ; \n\tArrays . sort ( dstDaps , clusterIdComparator ) ; \n\tint iSrcDaps = NUM00 , iDstDaps = NUM00 ; \n\twhile ( ( iSrcDaps < srcDaps . length ) && ( iDstDaps < dstDaps . length ) ) { \n\t\tSwitchPort srcDap = srcDaps [ iSrcDaps ] ; \n\t\tSwitchPort dstDap = dstDaps [ iDstDaps ] ; \n\t\tLong srcCluster = topology . getL2DomainId ( srcDap . getSwitchDPID ( ) ) ; \n\t\tLong dstCluster = topology . getL2DomainId ( dstDap . getSwitchDPID ( ) ) ; \n\t\t$F58436 ( srcVsDest , srcCluster , dstCluster ) if ( srcVsDest == NUM00 ) { \n\t\t\tif ( ! srcDap . equals ( dstDap ) && ( srcCluster != null ) && ( dstCluster != null ) ) { \n\t\t\t\tRoute routeIn = routingEngine . getRoute ( srcDap . getSwitchDPID ( ) , ( short ) srcDap . getPort ( ) , dstDap . getSwitchDPID ( ) , ( short ) dstDap . getPort ( ) , NUM00 ) ; \n\t\t\t\tRoute routeOut = routingEngine . getRoute ( dstDap . getSwitchDPID ( ) , ( short ) dstDap . getPort ( ) , srcDap . getSwitchDPID ( ) , ( short ) srcDap . getPort ( ) , NUM00 ) ; \n\t\t\t\tif ( routeIn != null ) { \n\t\t\t\t\tpushStaticVipRoute ( _BOOL , routeIn , client , member , sw . getId ( ) ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( routeOut != null ) { \n\t\t\t\t\tpushStaticVipRoute ( _BOOL , routeOut , client , member , sw . getId ( ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tiSrcDaps ++ ; \n\t\t\tiDstDaps ++ ; \n\t\t\t} \n\t\telse if ( srcVsDest < NUM00 ) { \n\t\t\tiSrcDaps ++ ; \n\t\t\t} \n\t\telse { \n\t\t\tiDstDaps ++ ; \n\t\t\t} \n\t\t} \n\t$F665 } \n"}, {"code": "public static String parseIdFromSameDocumentURI ( String uri ) { \n\tif $F1277 ( uri ) $F1337 $F28924 ( id , uri ) if $F147883 ( id ) { \n\t\t$F1384 ( i1 , id ) $F50298 ( i2 , id , i1 ) id = id . substring ( i1 + NUM00 , i2 ) ; \n\t\t} \n\treturn id ; \n\t} \n"}, {"code": "public void markUsed ( long pos , int length ) { \n\tint start = getBlock ( pos ) ; \n\tint blocks = getBlockCount ( length ) ; \n\tset . set ( start , start + blocks ) ; \n\t} \n"}, {"code": "public CholMatrix ( Matrix Arg ) { \n\tfinal $F3789 A = Arg . toDoubleArray ( ) ; \n\tn = ( int ) Arg . getRowCount ( ) ; \n\t$F10226 ( L , n ) isspd = ( Arg . getColumnCount ( ) == n ) ; \n\t$F69807 ( Lrowj ) $F69807 ( Lrowk ) $F69807 ( Aj ) for ( $F119 ( j , n ) ) { \n\t\tLrowj = L [ j ] ; \n\t\tAj = A [ j ] ; \n\t\tdouble d = NUM00 ; \n\t\tfor ( $F119 ( k , j ) ) { \n\t\t\tLrowk = L [ k ] ; \n\t\t\tdouble s = NUM00 ; \n\t\t\tfor ( $F119 ( i , k ) ) $F323742 ( s , Lrowk , i , Lrowj ) Lrowj [ k ] = s = ( Aj [ k ] - s ) / Lrowk [ k ] ; \n\t\t\td = d + s * s ; \n\t\t\tisspd = isspd & ( A [ k ] [ j ] == Aj [ k ] ) ; \n\t\t\t} \n\t\td = Aj [ j ] - d ; \n\t\tisspd = isspd & ( d > NUM00 ) ; \n\t\tLrowj [ j ] = Math . sqrt ( Math . max ( d , NUM00 ) ) ; \n\t\tfor ( $F2634 ( k , j , n ) ) $F5629 ( Lrowj , k ) } \n\t} \n"}, {"code": "public static String readStringNZ ( Memory mem , int address , int n ) { \n\taddress &= Memory . addressMask ; \n\tif ( address + n > MemoryMap . END_RAM ) { \n\t\tn = MemoryMap . END_RAM - address + NUM00 ; \n\t\t$F17370 ( n ) } \n\t$F96 bytes = new byte [ Math . min ( n , NUM00 ) ] ; \n\tint length = NUM00 ; \n\tIMemoryReader memoryReader = MemoryReader . getMemoryReader ( address , n , NUM00 ) ; \n\tfor ( ; \n\tn > NUM00 ; \n\tn -- ) { \n\t\tint b = memoryReader . readNext ( ) ; \n\t\t$F7256 ( b ) if ( length >= bytes . length ) { \n\t\t\t$F64222 ( newBytes , bytes ) $F7057 ( System , bytes , newBytes ) bytes = newBytes ; \n\t\t\t} \n\t\t$F8214 ( bytes , length , b ) length ++ ; \n\t\t} \n\treturn new String ( bytes , NUM00 , length , Constants . charset ) ; \n\t} \n"}, {"code": "static boolean shiftRight ( $F2027 result , int resultLen , $F2027 source , int intCount , int count ) { \n\tint i ; \n\tboolean allZero = _BOOL ; \n\tfor ( i = NUM00 ; \n\ti < intCount ; \n\ti ++ ) allZero &= source [ i ] == NUM00 ; \n\tif ( count == NUM00 ) $F21536 ( System , source , intCount , result , resultLen , i ) else { \n\t\tint leftShiftCount = NUM00 - count ; \n\t\tallZero &= ( source [ i ] < < leftShiftCount ) == NUM00 ; \n\t\tfor ( $F35846 ( i , resultLen ) ) { \n\t\t\tresult [ i ] = $F35847 ( source , i , intCount , count ) | ( source [ i + intCount + NUM00 ] < < leftShiftCount ) ; \n\t\t\t} \n\t\tresult [ i ] = $F35847 ( source , i , intCount , count ) ; \n\t\ti ++ ; \n\t\t} \n\treturn allZero ; \n\t} \n"}, {"code": "$F1 public void agg ( Object newVal ) { \n\tvalueSet . add ( newVal instanceof Long ? ( Long ) newVal : $F173338 ( Long , newVal ) ) ; \n\tfirstTime = _BOOL ; \n\t} \n"}, {"code": "private boolean removeLegionMember $F7613 ( charName , kick , playerName ) { \n\tLegionMemberEx legionMember = getLegionMemberEx ( charName ) ; \n\tif ( legionMember == null ) $F124420 ( log , charName , _BOOL ) deleteLegionMemberFromDB ( legionMember ) ; \n\tPlayer player = world . findPlayer ( charName ) ; \n\tif ( player != null ) { \n\t\tPacketSendUtility . broadcastPacket ( player , new SM_LEGION_UPDATE_TITLE ( player . getObjectId ( ) , NUM00 , NUM00 , NUM00 ) , _BOOL ) ; \n\t\t} \n\tif ( kick ) { \n\t\tPacketSendUtility . broadcastPacketToLegion ( legionMember . getLegion ( ) , new SM_LEGION_LEAVE_MEMBER ( NUM00 , legionMember . getObjectId ( ) , playerName , legionMember . getName ( ) ) ) ; \n\t\t} \n\telse { \n\t\tPacketSendUtility . broadcastPacketToLegion ( legionMember . getLegion ( ) , new SM_LEGION_LEAVE_MEMBER ( NUM00 , legionMember . getObjectId ( ) , charName ) ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "synchronized void printBuffer $F72 throws IOException { \n\t$F1749 ( len , sb ) if ( len > NUM00 ) { \n\t\t$F18064 ( chars , len ) $F16116 ( sb , len , chars ) $F4910 ( sb ) $F17918 ( super , chars ) } \n\t} \n"}, {"code": "$F97565 ( value , pattern , locale , calendar , format , _BOOL , fail , e ) "}, {"code": "public boolean containsBafBody $F72 { \n\tIterator $F69372 methodIt = methodIterator ( ) ; \n\twhile $F2921 ( methodIt ) { \n\t\tSootMethod m = methodIt . next ( ) ; \n\t\tif ( m . hasActiveBody ( ) && m . getActiveBody ( ) instanceof soot . baf . BafBody ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static String retainAllChars ( String str , String retainChars ) { \n\tint pos = indexOfChars ( str , retainChars ) ; \n\tif ( pos == - NUM00 ) $F2455 $F83 ( buf ) do { \n\t\t$F4137 ( buf , str , pos ) pos = indexOfChars ( str , retainChars , pos + NUM00 ) ; \n\t\t} \n\twhile ( pos != - NUM00 ) ; \n\t$F92 ( buf ) } \n"}, {"code": "public synchronized void deleteLeastUsedConnection $F72 { \n\tfinal HttpConnection connection = ( HttpConnection ) freeConnections . removeFirst ( ) ; \n\tif ( connection != null ) { \n\t\tdeleteConnection ( connection ) ; \n\t\t} \n\telse $F35060 ( LOG ) } \n"}, {"code": "private int binarySearch ( T x , int from , int to ) { \n\twhile ( from <= to ) { \n\t\t$F41176 ( m , from , to ) if ( comp . compare ( x , data [ m ] ) >= NUM00 ) { \n\t\t\tfrom = m + NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\tto = m - NUM00 ; \n\t\t\t} \n\t\t} \n\treturn from ; \n\t} \n"}, {"code": "private TransitSchedule cleanUpSchedule ( TransitSchedule newTransitSchedule ) { \n\tnewTransitSchedule = TransitScheduleCleaner . removeRoutesWithoutDepartures ( newTransitSchedule ) ; \n\tnewTransitSchedule = TransitScheduleCleaner . removeEmptyLines ( newTransitSchedule ) ; \n\tnewTransitSchedule = TransitScheduleCleaner . removeStopsNotUsed ( newTransitSchedule ) ; \n\treturn newTransitSchedule ; \n\t} \n"}, {"code": "protected static boolean match ( Object ref , Object test ) { \n\t$F1933 ( ref , _BOOL ) $F3627 ( ref , test , _BOOL ) if ( ref instanceof LabelList && test instanceof LabelList ) { \n\t\tfinal LabelList lref = ( LabelList ) ref ; \n\t\tfinal LabelList ltest = ( LabelList ) test ; \n\t\tfinal int s1 = lref . size ( ) , s2 = ltest . size ( ) ; \n\t\tif ( s1 == NUM00 || s2 == NUM00 ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tfor ( $F119 ( i , s1 ) ) { \n\t\t\t$F1729 ( l1 , lref , i ) $F4322 ( l1 ) for ( $F119 ( j , s2 ) ) { \n\t\t\t\tif ( $F115302 ( l1 , ltest , j ) ) { \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1964 ( ref , test ) } \n"}, {"code": "private boolean step1 $F72 { \n\t$F397 ( CT , _BOOL ) if ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t$F373826 ( CT , replaceSuffix ) return _BOOL ; \n\t\t} \n\tif $F45145 ( CT ) { \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\treplaceSuffix ( CT , NUM00 , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\t$F373826 ( CT , replaceSuffix ) return _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R1 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\tif $F45145 ( CT ) { \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\t$F373826 ( CT , replaceSuffix ) return _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\t$F373826 ( CT , replaceSuffix ) return _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\t$F373826 ( CT , replaceSuffix ) return _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\tif $F45145 ( CT ) { \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( RV , NUM00 ) && suffixPreceded ( CT , NUM00 , NUM00 ) ) { \n\t\t\t$F373826 ( CT , replaceSuffix ) return _BOOL ; \n\t\t\t} \n\t\t} \n\tif $F45145 ( CT ) { \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( R2 , NUM00 ) ) { \n\t\t\tCT = removeSuffix ( CT , NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tif ( suffix ( CT , NUM00 ) && suffix ( RV , NUM00 ) && suffixPreceded ( CT , NUM00 , NUM00 ) ) { \n\t\t\t$F373826 ( CT , replaceSuffix ) return _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F146067 ( zzBuffer , zzStartRead , zzMarkedPos ) "}, {"code": "public String patch_toText ( List $F89473 patches ) { \n\t$F83 ( text ) for ( Patch aPatch : patches ) $F288 ( text , aPatch ) $F92 ( text ) } \n"}, {"code": "void close ( int contextPrec , int ownPrec ) throws IOException { \n\tif ( ownPrec < contextPrec ) $F3410 ( out ) } \n"}, {"code": "private void validateSortSize $F72 { \n\tString sortSizeStr = carbonProperties . getProperty ( CarbonCommonConstants . SORT_SIZE , CarbonCommonConstants . SORT_SIZE_DEFAULT_VAL ) ; \n\ttry { \n\t\t$F27213 ( sortSize , Integer , sortSizeStr ) if ( sortSize < CarbonCommonConstants . SORT_SIZE_MIN_VAL ) { \n\t\t\tLOGGER . info ( NUM00 + sortSizeStr + NUM00 + CarbonCommonConstants . SORT_SIZE_DEFAULT_VAL ) ; \n\t\t\tcarbonProperties . setProperty ( CarbonCommonConstants . SORT_SIZE , CarbonCommonConstants . SORT_SIZE_DEFAULT_VAL ) ; \n\t\t\t} \n\t\t} \n\tcatch ( NumberFormatException e ) { \n\t\tLOGGER . info ( NUM00 + sortSizeStr + NUM00 + CarbonCommonConstants . SORT_SIZE_DEFAULT_VAL ) ; \n\t\tcarbonProperties . setProperty ( CarbonCommonConstants . SORT_SIZE , CarbonCommonConstants . SORT_SIZE_DEFAULT_VAL ) ; \n\t\t} \n\t} \n"}, {"code": "public void finishPainting ( boolean useCache ) { \n\tDataBufferInt dataBuffer = new DataBufferInt ( w0 * h0 ) ; \n\tint transparency = nativeFinishPainting ( SunWritableRaster . stealData ( dataBuffer , NUM00 ) , w0 , h0 ) ; \n\tSunWritableRaster . markDirty ( dataBuffer ) ; \n\t$F2027 bands = BAND_OFFSETS [ transparency - NUM00 ] ; \n\tWritableRaster raster = Raster . createPackedRaster ( dataBuffer , w0 , h0 , w0 , bands , null ) ; \n\tColorModel cm = COLOR_MODELS [ transparency - NUM00 ] ; \n\tImage img = new BufferedImage ( cm , raster , _BOOL , null ) ; \n\tif ( useCache ) { \n\t\tcache . setImage ( getClass ( ) , null , w0 , h0 , cacheArgs , img ) ; \n\t\t} \n\t$F108383 ( graphics , img , x0 , y0 ) } \n"}, {"code": "public boolean deletePanel $F72 { \n\tif ( ! super . deletePanel ( ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F725 ( turnoutList ) $F725 ( trackList ) $F725 ( pointList ) $F725 ( xingList ) $F725 ( slipList ) $F725 ( turntableList ) return _BOOL ; \n\t} \n"}, {"code": "$F1 default CompletableFuture < OptionalDouble > averageDouble ( final ToDoubleFunction $F11632 fn ) $F257945 ( CompletableFuture , getExec ) "}, {"code": "public String next $F72 $F4915 ( next , ANY_PATTERN ) "}, {"code": "public XercesHTMLDocumentBuilderFactory $F230110 ( settings ) throws DOMTestIncompatibleException { \n\tsuper ( settings ) ; \n\ttry { \n\t\t$F50403 ( classLoader , ClassLoader ) $F198604 ( htmlBuilderClass , classLoader ) htmlBuilderConstructor = htmlBuilderClass . getConstructor ( NO_CLASSES ) ; \n\t\t$F18553 ( getHTMLDocumentMethod , htmlBuilderClass , NO_CLASSES ) $F198604 ( htmlDOMImpl , classLoader ) Method method = htmlDOMImpl . getMethod ( NUM00 , NO_CLASSES ) ; \n\t\tdomImpl = ( DOMImplementation ) method . invoke ( null , NO_OBJECTS ) ; \n\t\t$F198604 ( saxFactoryClass , classLoader ) factory = ( SAXParserFactory ) saxFactoryClass . newInstance ( ) ; \n\t\t} \n\tcatch ( InvocationTargetException ex ) { \n\t\tthrow new DOMTestIncompatibleException ( ex . getTargetException ( ) , null ) ; \n\t\t} \n\tcatch ( Exception ex ) $F349675 ( ex ) if ( settings != null ) { \n\t\tfor ( $F1139 ( i , settings ) ) $F845 } \n\ttry { \n\t\tfactory . newSAXParser ( ) ; \n\t\t} \n\tcatch ( ParserConfigurationException ex ) $F349675 ( ex ) catch ( SAXException ex ) $F349675 ( ex ) } \n"}, {"code": "$F1 public final String toString $F72 { \n\tStringBuilder cab = new StringBuilder ( NUM00 + getHopCount ( ) * NUM00 ) ; \n\t$F84 ( cab ) if ( this . localAddress != null ) { \n\t\tcab . append ( this . localAddress ) ; \n\t\t$F84 ( cab ) } \n\t$F84 ( cab ) if ( this . tunnelled == TunnelType . TUNNELLED ) $F84 ( cab ) if ( this . layered == LayerType . LAYERED ) $F84 ( cab ) if ( this . secure ) $F84 ( cab ) $F84 ( cab ) if ( this . proxyChain != null ) { \n\t\tfor ( HttpHost aProxyChain : this . proxyChain ) $F444 ( cab , aProxyChain ) } \n\tcab . append ( this . targetHost ) ; \n\t$F84 ( cab ) $F92 ( cab ) } \n"}, {"code": "$F4486 ( type , outputStack , n , outputStackTop , t , Math , System , top , owner ) "}, {"code": "public Macro ( File file ) throws EOFException , FileNotFoundException , IOException { \n\t$F2218 ( dbf , DocumentBuilderFactory ) DocumentBuilder db = null ; \n\tDocument doc = null ; \n\ttry { \n\t\t$F6281 ( db , dbf ) InputSource is = new InputSource ( new UnicodeReader $F113801 ( file , FILE_ENCODING ) ) ; \n\t\tis . setEncoding ( FILE_ENCODING ) ; \n\t\tdoc = db . parse ( is ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F301 ( e ) $F105671 ( desc , e ) if ( desc == null ) $F84156 ( desc , e ) $F3495 ( desc ) } \n\t$F13241 ( macroRecords ) boolean parsedOK = initializeFromXMLFile ( doc . getDocumentElement ( ) ) ; \n\tif ( parsedOK == _BOOL ) { \n\t\tname = null ; \n\t\t$F725 ( macroRecords ) macroRecords = null ; \n\t\t$F3575 } \n\t} \n"}, {"code": "public static void deleteESInput $F72 { \n\tString esPIRIndex = SystemConfiguration . getProperty ( DistributedTestDriver . ES_INPUT_NODES_PROPERTY ) + NUM00 + SystemConfiguration . getProperty ( DistributedTestDriver . ES_INPUT_PORT_PROPERTY ) + NUM00 + SystemConfiguration . getProperty ( DistributedTestDriver . ES_INPUT_INDEX_PROPERTY ) ; \n\t$F556 ( logger , esPIRIndex ) ProcessBuilder pDeletePIR = new ProcessBuilder ( NUM00 , NUM00 , esPIRIndex ) ; \n\ttry { \n\t\tTestUtils . executeCommand ( pDeletePIR ) ; \n\t\t$F973 ( logger ) } \n\t$F12241 ( e ) } \n"}, {"code": "private boolean add ( int part ) { \n\tif $F2200 ( parts , part ) $F18637 ( parts , part , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "private void terminateAndWaitFsyncService $F72 throws Exception { \n\tif ( fsyncService . isTerminated ( ) ) $F665 $F733 ( fsyncService ) $F735 ( fsyncService , TimeUnit ) Exception fsyncExceptionCopy = fsyncException ; \n\t$F84834 ( fsyncExceptionCopy ) } \n"}, {"code": "private Location findFarthestLocation ( Location location , Direction direction ) { \n\tLocation farthest ; \n\tdo { \n\t\tfarthest = location ; \n\t\tlocation = farthest . offset ( direction ) ; \n\t\t} \n\twhile ( gridOperator . isValidLocation ( location ) && gameGrid . get ( location ) == null ) ; \n\treturn farthest ; \n\t} \n"}, {"code": "public static int computeMinImageSampleSize ( ImageSize srcSize ) { \n\t$F2049 ( srcWidth , srcSize ) $F2047 ( srcHeight , srcSize ) $F2049 ( targetWidth , maxBitmapSize ) $F2047 ( targetHeight , maxBitmapSize ) int widthScale = ( int ) Math . ceil ( ( float ) srcWidth / targetWidth ) ; \n\tint heightScale = ( int ) Math . ceil ( ( float ) srcHeight / targetHeight ) ; \n\t$F85710 ( Math , widthScale , heightScale ) } \n"}, {"code": "private JSplitPane createMainSplitPane $F72 { \n\tfinal JSplitPane mainSplitPane = new JSplitPane $F72 ; \n\tmainSplitPane . setOneTouchExpandable ( _BOOL ) ; \n\tmainSplitPane . setDividerLocation ( NUM00 ) ; \n\t$F242063 ( mainSplitPane ) mainSplitPane . setOrientation ( JSplitPane . HORIZONTAL_SPLIT ) ; \n\t$F301047 ( m_componentPanel , Color ) mainSplitPane . setLeftComponent ( createProjectTreePanel ( ) ) ; \n\tmainSplitPane . setRightComponent ( m_componentPanel ) ; \n\tmainSplitPane . setBorder ( new LineBorder ( Color . GRAY ) ) ; \n\treturn mainSplitPane ; \n\t} \n"}, {"code": "private DigicoreChain cleanChain ( DigicoreChain chain ) { \n\treturn chain ; \n\t} \n"}, {"code": "private boolean checkSetup $F72 { \n\tthis . txmgr = TransactionManagerImp . getTransactionManager ( ) ; \n\tif ( this . txmgr == null ) { \n\t\ttry { \n\t\t\tHashtable $F2538 env = new Hashtable $F2538 $F72 ; \n\t\t\tenv . put ( Context . INITIAL_CONTEXT_FACTORY , this . initialContextFactory ) ; \n\t\t\tenv . put ( Context . PROVIDER_URL , this . providerUrl ) ; \n\t\t\tContext ctx = new InitialContext ( env ) ; \n\t\t\tthis . txmgrServer = ( UserTransactionServer ) PortableRemoteObject . narrow ( ctx . lookup ( this . userTransactionServerLookupName ) , UserTransactionServer . class ) ; \n\t\t\t} \n\t\tcatch ( Exception e ) { \n\t\t\t$F301 ( e ) throw new RuntimeException ( getNotFoundMessage ( ) ) ; \n\t\t\t} \n\t\tif ( this . txmgrServer == null ) throw new RuntimeException ( getNotFoundMessage ( ) ) ; \n\t\t} \n\treturn this . txmgr != null ; \n\t} \n"}, {"code": "public static final boolean givesCheck ( Position pos , Move m ) { \n\tboolean wtm = pos . whiteMove ; \n\tint oKingSq = pos . getKingSq ( ! wtm ) ; \n\tint oKing = wtm ? Piece . BKING : Piece . WKING ; \n\tint p = Piece . makeWhite ( m . promoteTo == Piece . EMPTY ? pos . getPiece ( m . from ) : m . promoteTo ) ; \n\tint d1 = BitBoard . getDirection ( m . to , oKingSq ) ; \n\tswitch ( d1 ) { \n\t\t$F3366 $F52533 $F3366 $F52533 if ( ( p == Piece . WQUEEN ) || ( p == Piece . WROOK ) ) if ( ( d1 != NUM00 ) && ( MoveGen . nextPiece ( pos , m . to , d1 ) == oKing ) ) return _BOOL ; \n\t\t$F597 $F3366 $F3366 $F52533 $F52533 if ( ( p == Piece . WQUEEN ) || ( p == Piece . WBISHOP ) ) { \n\t\t\tif ( ( d1 != NUM00 ) && ( MoveGen . nextPiece ( pos , m . to , d1 ) == oKing ) ) return _BOOL ; \n\t\t\t} \n\t\telse if ( p == Piece . WPAWN ) { \n\t\t\tif ( ( ( d1 > NUM00 ) == wtm ) && ( pos . getPiece ( m . to + d1 ) == oKing ) ) return _BOOL ; \n\t\t\t} \n\t\t$F597 $F1267 if ( d1 != NUM00 ) { \n\t\t\tif ( p == Piece . WKNIGHT ) return _BOOL ; \n\t\t\t} \n\t\t} \n\tint d2 = BitBoard . getDirection ( m . from , oKingSq ) ; \n\tif ( ( d2 != NUM00 ) && ( d2 != d1 ) && ( MoveGen . nextPiece ( pos , m . from , d2 ) == oKing ) ) { \n\t\tint p2 = MoveGen . nextPieceSafe ( pos , m . from , - d2 ) ; \n\t\tswitch ( d2 ) { \n\t\t\t$F3366 $F52533 $F3366 $F52533 if ( ( p2 == ( wtm ? Piece . WQUEEN : Piece . BQUEEN ) ) || ( p2 == ( wtm ? Piece . WROOK : Piece . BROOK ) ) ) return _BOOL ; \n\t\t\t$F597 $F3366 $F3366 $F52533 $F52533 if ( ( p2 == ( wtm ? Piece . WQUEEN : Piece . BQUEEN ) ) || ( p2 == ( wtm ? Piece . WBISHOP : Piece . BBISHOP ) ) ) return _BOOL ; \n\t\t\t$F597 } \n\t\t} \n\tif ( ( m . promoteTo != Piece . EMPTY ) && ( d1 != NUM00 ) && ( d1 == d2 ) ) { \n\t\tswitch ( d1 ) { \n\t\t\t$F3366 $F52533 $F3366 $F52533 if ( ( p == Piece . WQUEEN ) || ( p == Piece . WROOK ) ) if ( ( d1 != NUM00 ) && ( MoveGen . nextPiece ( pos , m . from , d1 ) == oKing ) ) return _BOOL ; \n\t\t\t$F597 $F3366 $F3366 $F52533 $F52533 if ( ( p == Piece . WQUEEN ) || ( p == Piece . WBISHOP ) ) { \n\t\t\t\tif ( ( d1 != NUM00 ) && ( MoveGen . nextPiece ( pos , m . from , d1 ) == oKing ) ) return _BOOL ; \n\t\t\t\t} \n\t\t\t$F597 } \n\t\t} \n\tif ( p == Piece . WKING ) { \n\t\tif ( m . to - m . from == NUM00 ) { \n\t\t\tif ( MoveGen . nextPieceSafe ( pos , m . from , - NUM00 ) == oKing ) return _BOOL ; \n\t\t\tif ( MoveGen . nextPieceSafe ( pos , m . from + NUM00 , wtm ? NUM00 : - NUM00 ) == oKing ) return _BOOL ; \n\t\t\t} \n\t\telse if ( m . to - m . from == - NUM00 ) { \n\t\t\tif ( MoveGen . nextPieceSafe ( pos , m . from , NUM00 ) == oKing ) return _BOOL ; \n\t\t\tif ( MoveGen . nextPieceSafe ( pos , m . from - NUM00 , wtm ? NUM00 : - NUM00 ) == oKing ) return _BOOL ; \n\t\t\t} \n\t\t} \n\telse if ( p == Piece . WPAWN ) { \n\t\tif ( pos . getPiece ( m . to ) == Piece . EMPTY ) { \n\t\t\tint dx = Position . getX ( m . to ) - Position . getX ( m . from ) ; \n\t\t\tif ( dx != NUM00 ) { \n\t\t\t\tint epSq = m . from + dx ; \n\t\t\t\tint d3 = BitBoard . getDirection ( epSq , oKingSq ) ; \n\t\t\t\tswitch ( d3 ) { \n\t\t\t\t\t$F3366 $F3366 $F52533 $F52533 if ( MoveGen . nextPiece ( pos , epSq , d3 ) == oKing ) { \n\t\t\t\t\t\tint p2 = MoveGen . nextPieceSafe ( pos , epSq , - d3 ) ; \n\t\t\t\t\t\tif ( ( p2 == ( wtm ? Piece . WQUEEN : Piece . BQUEEN ) ) || ( p2 == ( wtm ? Piece . WBISHOP : Piece . BBISHOP ) ) ) return _BOOL ; \n\t\t\t\t\t\t} \n\t\t\t\t\t$F597 $F3366 if ( MoveGen . nextPiece ( pos , Math . max ( epSq , m . from ) , d3 ) == oKing ) { \n\t\t\t\t\t\tint p2 = MoveGen . nextPieceSafe ( pos , Math . min ( epSq , m . from ) , - d3 ) ; \n\t\t\t\t\t\tif ( ( p2 == ( wtm ? Piece . WQUEEN : Piece . BQUEEN ) ) || ( p2 == ( wtm ? Piece . WROOK : Piece . BROOK ) ) ) return _BOOL ; \n\t\t\t\t\t\t} \n\t\t\t\t\t$F597 $F52533 if ( MoveGen . nextPiece ( pos , Math . min ( epSq , m . from ) , d3 ) == oKing ) { \n\t\t\t\t\t\tint p2 = MoveGen . nextPieceSafe ( pos , Math . max ( epSq , m . from ) , - d3 ) ; \n\t\t\t\t\t\tif ( ( p2 == ( wtm ? Piece . WQUEEN : Piece . BQUEEN ) ) || ( p2 == ( wtm ? Piece . WROOK : Piece . BROOK ) ) ) return _BOOL ; \n\t\t\t\t\t\t} \n\t\t\t\t\t$F597 } \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static FSDirectory newFSDirectory ( Class < ? extends FSDirectory > clazz , Path path ) throws ReflectiveOperationException { \n\treturn newFSDirectory ( clazz , path , FSLockFactory . getDefault ( ) ) ; \n\t} \n"}, {"code": "private static Element addElement ( Document doc , Node parent , String tagName , String attr1 , String val1 , String attr2 , String val2 ) { \n\t$F16570 ( elem , doc , tagName ) if ( attr1 != null ) elem . setAttribute ( attr1 , val1 ) ; \n\tif ( attr2 != null ) elem . setAttribute ( attr2 , val2 ) ; \n\tparent . appendChild ( elem ) ; \n\treturn elem ; \n\t} \n"}, {"code": "public static String stream2String ( InputStream is , int maxLength ) throws IOException { \n\t$F12496 ( buffer ) $F29429 ( sw ) int totalRead = NUM00 ; \n\tint read = NUM00 ; \n\tdo { \n\t\tsw . write ( $F626 ( buffer , read ) ) ; \n\t\ttotalRead += read ; \n\t\t$F142376 ( read , is , buffer ) ; \n\t\t} \n\twhile ( ( ( - NUM00 == maxLength ) || ( totalRead < maxLength ) ) && ( read != - NUM00 ) ) ; \n\t$F92 ( sw ) } \n"}, {"code": "private static Couple $F4 splitNameOfRemoteBranch ( String branchName ) { \n\t$F1384 ( firstSlash , branchName ) String remoteName = firstSlash > - NUM00 ? branchName . substring ( NUM00 , firstSlash ) : branchName ; \n\t$F36289 ( remoteBranchName , branchName , firstSlash ) return Couple . of ( remoteName , remoteBranchName ) ; \n\t} \n"}, {"code": "private static void decodeAnsiX12Segment ( BitSource bits , StringBuilder result ) throws FormatException { \n\t$F11844 ( cValues ) do { \n\t\t$F46340 ( bits ) $F2847 ( firstByte , bits ) $F32905 ( firstByte ) $F46342 ( parseTwoBytes , firstByte , bits , cValues ) for ( $F6268 ( i ) ) { \n\t\t\tint cValue = cValues [ i ] ; \n\t\t\tif ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue == NUM00 ) $F86 ( result ) else if ( cValue < NUM00 ) $F46359 ( result , cValue ) else if ( cValue < NUM00 ) $F46359 ( result , cValue ) else $F2172 ( FormatException ) } \n\t\t} \n\twhile $F2892 ( bits ) ; \n\t} \n"}, {"code": "public static OutputStream encrypt ( OutputStream unencryptedOutputStream , $F1469 password ) throws EncryptionException , IOException { \n\tOutputStream encryptedOutputStream = null ; \n\tPBEKeySpec pbeKeySpec = new PBEKeySpec ( password ) ; \n\tPBEParameterSpec pbeParameterSpec = new PBEParameterSpec ( SALT , ITERATION_COUNT ) ; \n\ttry { \n\t\t$F17013 ( secretKeyFactory , SecretKeyFactory , ENCRYPTION_ALGORITHM , CRYPTOPROVIDER ) SecretKey pbeKey = secretKeyFactory . generateSecret ( pbeKeySpec ) ; \n\t\t$F17013 ( cipher , Cipher , ENCRYPTION_ALGORITHM , CRYPTOPROVIDER ) $F20431 ( cipher , Cipher , pbeKey , pbeParameterSpec ) encryptedOutputStream = new CipherOutputStream ( unencryptedOutputStream , cipher ) ; \n\t\t} \n\tcatch ( GeneralSecurityException e ) { \n\t\tthrow new EncryptionException ( NUM00 , e ) ; \n\t\t} \n\treturn encryptedOutputStream ; \n\t} \n"}, {"code": "public static String rightPad $F41200 ( original , length , padChar ) { \n\tif ( original . length ( ) >= length ) { \n\t\treturn original ; \n\t\t} \n\treturn original + stringOfChar ( padChar , length - original . length ( ) ) ; \n\t} \n"}, {"code": "private boolean checkSelectForSwipe ( int action , MotionEvent motionEvent , int pointerIndex ) { \n\tif ( mSelected != null || action != MotionEvent . ACTION_MOVE || mActionState == ACTION_STATE_DRAG || ! mCallback . isItemViewSwipeEnabled ( ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( mRecyclerView . getScrollState ( ) == RecyclerView . SCROLL_STATE_DRAGGING ) { \n\t\treturn _BOOL ; \n\t\t} \n\tfinal ViewHolder vh = findSwipedView ( motionEvent ) ; \n\t$F1933 ( vh , _BOOL ) final int movementFlags = mCallback . getAbsoluteMovementFlags ( mRecyclerView , vh ) ; \n\tfinal int swipeFlags = ( movementFlags & ACTION_MODE_SWIPE_MASK ) > > ( DIRECTION_FLAG_COUNT * ACTION_STATE_SWIPE ) ; \n\t$F6482 ( swipeFlags , _BOOL ) $F105903 ( x , MotionEventCompat , motionEvent , pointerIndex ) $F105905 ( y , MotionEventCompat , motionEvent , pointerIndex ) final float dx = x - mInitialTouchX ; \n\tfinal float dy = y - mInitialTouchY ; \n\t$F41714 ( absDx , Math , dx ) $F41714 ( absDy , Math , dy ) if ( absDx < mSlop && absDy < mSlop ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( absDx > absDy ) $F105910 ( dx , swipeFlags , LEFT , _BOOL , RIGHT ) else $F105910 ( dy , swipeFlags , UP , _BOOL , DOWN ) mDx = mDy = NUM00 ; \n\tmActivePointerId = MotionEventCompat . getPointerId ( motionEvent , NUM00 ) ; \n\tselect ( vh , ACTION_STATE_SWIPE ) ; \n\tif ( mPreOpened != null && mPreOpened != vh && vh != null ) $F5795 ( closeOpenedPreItem ) return _BOOL ; \n\t} \n"}, {"code": "protected void reloadSwipeStateInView ( View frontView , int position ) { \n\tif $F87318 ( opened , position ) { \n\t\tViewCompat . setTranslationX ( frontView , NUM00 ) ; \n\t\t} \n\telse { \n\t\tif $F73204 ( openedRight , position ) { \n\t\t\tViewCompat . setTranslationX ( frontView , swipeListView . getWidth ( ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tViewCompat . setTranslationX ( frontView , $F115951 ( swipeListView ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public final void pushPair ( int v1 , int v2 ) { \n\tif ( null == m_map ) $F74814 ( m_map , m_blocksize , m_mapSize ) else { \n\t\tif $F11078 ( m_firstFree , m_mapSize ) { \n\t\t\tm_mapSize += m_blocksize ; \n\t\t\tint newMap [ ] = new int [ m_mapSize ] ; \n\t\t\t$F135 ( System , m_map , newMap , m_firstFree ) m_map = newMap ; \n\t\t\t} \n\t\t} \n\tm_map [ m_firstFree ] = v1 ; \n\tm_map [ m_firstFree + NUM00 ] = v2 ; \n\tm_firstFree += NUM00 ; \n\t} \n"}, {"code": "void reset $F72 $F138343 ( System , iv , k , blockSize ) "}, {"code": "public Matrix3 multiplyByVerticalFlip $F72 { \n\t$F1986 m = this . m ; \n\tm [ NUM00 ] += m [ NUM00 ] ; \n\tm [ NUM00 ] += m [ NUM00 ] ; \n\tm [ NUM00 ] += m [ NUM00 ] ; \n\tm [ NUM00 ] = - m [ NUM00 ] ; \n\tm [ NUM00 ] = - m [ NUM00 ] ; \n\tm [ NUM00 ] = - m [ NUM00 ] ; \n\treturn this ; \n\t} \n"}, {"code": "public void shutdown $F72 throws DataSourceException { \n\tif ( createdSessionFactory ) { \n\t\tif ( $F31240 ( sessionFactory ) ) { \n\t\t\ttry $F881 ( sessionFactory ) $F14110 ( sessionFactory ) } \n\t\t} \n\t} \n"}, {"code": "private String stringifyIP $F97 ( ip ) { \n\tString temp = NUM00 ; \n\tfor ( $F89941 ( i , ip ) ) { \n\t\ttemp += Integer . toString ( ip [ i ] & NUM00 ) + NUM00 ; \n\t\t} \n\t$F8993 ( temp ) temp += NUM00 ; \n\tfor ( int i = ip . length / NUM00 ; \n\ti < ip . length ; \n\ti ++ ) { \n\t\ttemp += Integer . toString ( ip [ i ] & NUM00 ) + NUM00 ; \n\t\t} \n\t$F8993 ( temp ) return temp ; \n\t} \n"}, {"code": "public COpenFunctionAction ( final CGraphWindow parent , final IViewContainer container , final INaviFunction function ) { \n\tsuper ( $F21900 ( String , function ) ) ; \n\t$F1832 ( Preconditions , parent ) $F1832 ( Preconditions , container ) m_parent = parent ; \n\tm_container = container ; \n\tm_function = function ; \n\t} \n"}, {"code": "public static $F96 hexStringToBytes ( String hexString ) { \n\tif $F3581 ( hexString ) $F1337 $F47567 ( hexString ) int length = $F8196 ( hexString ) ; \n\t$F7782 ( hexChars , hexString ) $F2175 ( d , length ) for ( $F119 ( i , length ) ) { \n\t\tint pos = i * NUM00 ; \n\t\td [ i ] = ( byte ) ( charToByte ( hexChars [ pos ] ) < < NUM00 | charToByte ( hexChars [ pos + NUM00 ] ) ) ; \n\t\t} \n\treturn d ; \n\t} \n"}, {"code": "public void writeString ( final String s ) { \n\t$F173719 ( bytes , s ) $F18832 ( len , bytes ) writeInt ( len ) ; \n\t$F6483 ( System , bytes , buffer , offset , len ) offset += len ; \n\tpad ( ) ; \n\t} \n"}, {"code": "private static PermissionCollection createAllPermissions $F72 { \n\tPermissions permissions = new Permissions $F72 ; \n\tpermissions . add ( new AllPermission $F72 ) ; \n\treturn permissions ; \n\t} \n"}, {"code": "private void mergeNetworks ( Network tzone , Network sZone ) { \n\t$F3803 addedEndPoints = new $F5 ( sZone . retrieveEndpoints ( ) ) ; \n\tStringSet newEndPoints = sZone . retrieveEndpoints ( ) ; \n\tfor ( String endpoint : tzone . retrieveEndpoints ( ) ) { \n\t\tif $F105 ( newEndPoints , endpoint ) $F106 ( addedEndPoints , endpoint ) } \n\tif $F5973 ( addedEndPoints ) { \n\t\ttzone . addEndpoints ( addedEndPoints , _BOOL ) ; \n\t\t} \n\ttzone . setNativeGuid ( sZone . getNativeGuid ( ) ) ; \n\t} \n"}, {"code": "static public void println ( String msg ) { \n\tprintln ( msg , CLLogLevel . normal ) ; \n\t} \n"}, {"code": "private static ByteString readChunk ( InputStream in , final int chunkSize ) throws IOException { \n\t$F4727 ( buf , chunkSize ) int bytesRead = NUM00 ; \n\twhile ( bytesRead < chunkSize ) { \n\t\tfinal int count = in . read ( buf , bytesRead , chunkSize - bytesRead ) ; \n\t\t$F76065 ( count ) bytesRead += count ; \n\t\t} \n\tif ( bytesRead == NUM00 ) $F1337 else { \n\t\treturn ByteString . copyFrom ( buf , NUM00 , bytesRead ) ; \n\t\t} \n\t} \n"}, {"code": "private $F422085 sumAssociations $F72 throws IOException { \n\tDirectoryReader indexReader = DirectoryReader . open ( indexDir ) ; \n\tIndexSearcher searcher = new IndexSearcher ( indexReader ) ; \n\tTaxonomyReader taxoReader = new DirectoryTaxonomyReader ( taxoDir ) ; \n\tFacetsCollector fc = new FacetsCollector $F72 ; \n\tFacetsCollector . search ( searcher , new MatchAllDocsQuery $F72 , NUM00 , fc ) ; \n\tFacets tags = new TaxonomyFacetSumIntAssociations ( NUM00 , taxoReader , config , fc ) ; \n\tFacets genre = new TaxonomyFacetSumFloatAssociations ( NUM00 , taxoReader , config , fc ) ; \n\t$F422085 $F204 ( results ) ; \n\t$F422106 ( results , tags ) $F422106 ( results , genre ) $F59 ( indexReader ) $F59 ( taxoReader ) return results ; \n\t} \n"}, {"code": "public ReverseGeoCode ( InputStream placenames , boolean majorOnly ) throws IOException { \n\tcreateKdTree ( placenames , majorOnly ) ; \n\t} \n"}, {"code": "protected String patchName ( String qname ) { \n\t$F55879 ( lastColon , qname ) if ( lastColon > NUM00 ) { \n\t\t$F46662 ( firstColon , qname ) $F66071 ( prefix , qname , firstColon ) $F49882 ( localName , qname , lastColon ) final String uri = m_prefixMap . lookupNamespace ( prefix ) ; \n\t\tif ( $F145545 ( uri ) ) { \n\t\t\treturn localName ; \n\t\t\t} \n\t\telse if ( firstColon != lastColon ) $F1949 ( prefix , localName ) } \n\treturn qname ; \n\t} \n"}, {"code": "public static String fromTag ( ListTag < Tag > tag ) { \n\t$F83 ( builder ) builder . append ( ARRAY_START ) ; \n\tboolean start = _BOOL ; \n\tfor ( Tag value : tag . getValue ( ) ) { \n\t\t$F11657 ( start , _BOOL , builder , ELEMENT_SEPERATOR ) $F6407 ( builder , fromGenericTag , value ) } \n\tbuilder . append ( ARRAY_END ) ; \n\t$F92 ( builder ) } \n"}, {"code": "private XMLElement2 createAnotherElement $F72 { \n\treturn new XMLElement2 ( this . entities , this . ignoreWhitespace , _BOOL , this . ignoreCase ) ; \n\t} \n"}, {"code": "public synchronized void reset $F72 { \n\t$F725 ( labels ) labels . put ( SensisionConstants . SENSISION_LABEL_TOPIC , this . topic ) ; \n\tlabels . put ( SensisionConstants . SENSISION_LABEL_GROUPID , this . groupid ) ; \n\tfor ( int i = NUM00 ; \n\ti < this . counters . length ; \n\ti ++ ) { \n\t\tif ( null == this . counters [ i ] ) $F1448 labels . put ( SensisionConstants . SENSISION_LABEL_PARTITION , Integer . toString ( i ) ) ; \n\t\tSensision . clear ( SensisionConstants . SENSISION_CLASS_WARP_KAFKA_CONSUMER_OFFSET , labels ) ; \n\t\tthis . counters [ i ] = null ; \n\t\t} \n\t} \n"}, {"code": "public Vector rotateInRadian ( double radians ) { \n\tfinal double length = length ( ) ; \n\tdouble angle = angleInRadian ( ) ; \n\tangle += radians ; \n\tfinal Vector result = new Vector ( Math . cos ( angle ) , Math . sin ( angle ) ) ; \n\treturn result . multiply ( length ) ; \n\t} \n"}, {"code": "public void connectionLost ( java . lang . Throwable cause ) { \n\tint rc = - NUM00 ; \n\tled . setAmber ( ) ; \n\tled . setFlash ( ) ; \n\tsetTitleText ( NUM00 ) ; \n\tsynchronized ( this ) { \n\t\twriteLogln ( NUM00 + mqtt . getServerURI ( ) ) ; \n\t\t} \n\ttry { \n\t\twhile ( ( rc == - NUM00 ) && connected ) { \n\t\t\ttry { \n\t\t\t\tsynchronized ( connLostWait ) $F34522 ( connLostWait ) } \n\t\t\tcatch ( InterruptedException iex ) $F845 synchronized ( this ) { \n\t\t\t\tif ( connected ) { \n\t\t\t\t\twriteLog ( NUM00 ) ; \n\t\t\t\t\ttry { \n\t\t\t\t\t\tconnect ( mqtt . getServerURI ( ) , optionsComp . isPersistenceSelected ( ) ) ; \n\t\t\t\t\t\trc = NUM00 ; \n\t\t\t\t\t\t} \n\t\t\t\t\tcatch ( MqttException mqte ) $F44867 ( rc ) if ( rc == - NUM00 ) $F1210 ( writeLogln ) else $F1210 ( writeLogln ) } \n\t\t\t\t} \n\t\t\t} \n\t\tsetTitleText ( NUM00 ) ; \n\t\t} \n\tcatch ( Exception ex ) { \n\t\tsetTitleText ( NUM00 ) ; \n\t\t$F301 ( ex ) disconnect ( ) ; \n\t\t} \n\tfinally { \n\t\tif ( led . isFlashing ( ) ) { \n\t\t\tled . setFlash ( ) ; \n\t\t\t} \n\t\t} \n\tif ( connected ) { \n\t\tled . setGreen ( ) ; \n\t\tsetConnected ( _BOOL ) ; \n\t\t} \n\telse { \n\t\tled . setRed ( ) ; \n\t\tsetConnected ( _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "$F28896 ( index , paint , bounds , title , getTitle ) "}, {"code": "public String headerOut ( String name ) { \n\t$F5 keys = _headerKeysOut ; \n\t$F2199 ( headerSize , keys ) for ( $F119 ( i , headerSize ) ) { \n\t\t$F1729 ( oldKey , keys , i ) if $F8397 ( oldKey , name ) { \n\t\t\treturn $F120 ( _headerValuesOut , i ) ; \n\t\t\t} \n\t\t} \n\tif $F21935 ( name ) { \n\t\treturn _contentLengthOut >= NUM00 ? String . valueOf ( _contentLengthOut ) : null ; \n\t\t} \n\tif $F21935 ( name ) { \n\t\treturn _contentTypeOut ; \n\t\t} \n\t$F1274 } \n"}, {"code": "private static $F10651 parseSparseFields ( $F223369 queryParams ) { \n\t$F10651 $F8690 ( result ) ; \n\tfor ( Map . Entry $F14854 kv : queryParams . entrySet ( ) ) { \n\t\t$F3477 ( key , kv ) if $F40448 ( key ) { \n\t\t\t$F13881 ( type , key ) LinkedHashSet $F4 $F22304 ( filters ) ; \n\t\t\tfor ( String filterParams : kv . getValue ( ) ) { \n\t\t\t\tCollections . addAll ( filters , filterParams . split ( NUM00 ) ) ; \n\t\t\t\t} \n\t\t\tif $F5973 ( filters ) $F1717 ( result , type , filters ) } \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public Element signWithWSSSAMLTokenProfile ( Document doc , $F132633 cert , String assertionID , String algorithm , List ids ) throws XMLSignatureException { \n\treturn signWithWSSSAMLTokenProfile ( doc , cert , assertionID , algorithm , ids , SOAPBindingConstants . WSF_10_VERSION ) ; \n\t} \n"}, {"code": "$F1 public void stateChanged ( ChangeEvent e ) { \n\tupdateFrameTitle ( ) ; \n\tupdateMenu ( ) ; \n\tif ( e . getSource ( ) instanceof JComponent ) { \n\t\tsetTabTitle ( ( JComponent ) e . getSource ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void addURL ( URL url , boolean isScanned ) { \n\t$F47073 ( containsURL , url ) super . addURL ( url , isScanned ) ; \n\tif ( isScanned ) _pendingScanRoots . add ( new ScanRoot ( url , null ) ) ; \n\t} \n"}, {"code": "public void add ( final int start , final int end , final byte status ) { \n\tfinal int s = start - mStart ; \n\tif ( s < mInterval . length && end > mStart ) { \n\t\tArrays . fill ( mInterval , Math . max ( s , NUM00 ) , Math . min ( end - mStart , mInterval . length ) , status ) ; \n\t\t} \n\t} \n"}, {"code": "public void reset $F72 { \n\talpha = initAlpha ; \n\tneighborhoodSize = initNeighborhoodSize ; \n\t} \n"}, {"code": "private void reload $F72 { \n\t$F47177 ( doc , textPane ) doc . putProperty ( Document . StreamDescriptionProperty , null ) ; \n\treference = currentReference ; \n\tloadPage ( currentPage ) ; \n\t} \n"}, {"code": "protected void drawHexagon ( int x , int y , int w , int h , Color fillColor , Paint fillPaint , Color penColor , boolean shadow , String direction ) { \n\t$F157439 ( hexagon ) if ( direction . equals ( mxConstants . DIRECTION_NORTH ) || direction . equals ( mxConstants . DIRECTION_SOUTH ) ) { \n\t\thexagon . addPoint ( x + $F11263 ( w ) , y ) ; \n\t\thexagon . addPoint ( x + w , y + $F11263 ( h ) ) ; \n\t\thexagon . addPoint ( x + w , y + $F11263 ( h ) ) ; \n\t\thexagon . addPoint ( x + $F11263 ( w ) , y + h ) ; \n\t\thexagon . addPoint ( x , y + $F11263 ( h ) ) ; \n\t\thexagon . addPoint ( x , y + $F11263 ( h ) ) ; \n\t\t} \n\telse { \n\t\thexagon . addPoint ( x + $F11263 ( w ) , y ) ; \n\t\thexagon . addPoint ( x + $F11263 ( w ) , y ) ; \n\t\thexagon . addPoint ( x + w , y + $F11263 ( h ) ) ; \n\t\thexagon . addPoint ( x + $F11263 ( w ) , y + h ) ; \n\t\thexagon . addPoint ( x + $F11263 ( w ) , y + h ) ; \n\t\thexagon . addPoint ( x , y + $F11263 ( h ) ) ; \n\t\t} \n\tdrawPolygon ( hexagon , fillColor , fillPaint , penColor , shadow ) ; \n\t} \n"}, {"code": "private boolean isStatic ( Field field ) { \n\t$F23165 ( modifier , field ) if ( Modifier . isStatic ( modifier ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public int outstandingRequests $F72 $F1522 ( outstanding ) "}, {"code": "final public static String toString $F41456 ( key , off , len ) { \n\t$F397 ( key , NULL ) final StringBuilder sb = new StringBuilder ( len * NUM00 + NUM00 ) ; \n\t$F84 ( sb ) for ( $F5883 ( i , off , len ) ) { \n\t\t$F96530 ( i , sb ) sb . append ( Integer . toString ( key [ i ] & NUM00 ) ) ; \n\t\t} \n\t$F84 ( sb ) $F92 ( sb ) } \n"}, {"code": "public void init ( String componentName ) throws LogException { \n\taccessLogger = Logger . getLogger ( componentName + NUM00 ) ; \n\terrorLogger = Logger . getLogger ( componentName + NUM00 ) ; \n\t} \n"}, {"code": "private View fillLeft ( int pos , int nextRight ) { \n\tif ( DEBUG ) Log . i ( TAG , NUM00 + pos + NUM00 + nextRight + M_FIRST_POSITION + mFirstPosition ) ; \n\tView selectedView = null ; \n\t$F280696 ( end , mListPadding ) while ( nextRight > end && pos >= NUM00 ) { \n\t\tView temp = makeColumn ( pos , nextRight , _BOOL ) ; \n\t\t$F57733 ( temp , selectedView ) nextRight = mReferenceView . getLeft ( ) - mHorizontalSpacing ; \n\t\tmFirstPosition = pos ; \n\t\tpos -= mNumRows ; \n\t\t} \n\tif ( mStackFromBottom ) { \n\t\tmFirstPosition = Math . max ( NUM00 , pos + NUM00 ) ; \n\t\t} \n\treturn selectedView ; \n\t} \n"}, {"code": "public void removeDefaultValue ( String value ) throws $F16995 { \n\tSet defaultValues = getDefaultValues ( ) ; \n\tif ( defaultValues != Collections . EMPTY_SET ) { \n\t\tdefaultValues . remove ( value ) ; \n\t\tupdateDefaultValues ( defaultValues ) ; \n\t\t} \n\t} \n"}, {"code": "public static int keyBindingDescriptionToKeyCode ( String keyBindingDescription ) { \n\tif $F7283 ( StringUtils , keyBindingDescription ) $F1083 else if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . ESC ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F1 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F2 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F3 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F4 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F5 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F6 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F7 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F8 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F9 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F10 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F11 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . F12 ; \n\t\t} \n\telse if $F3057 ( keyBindingDescription ) { \n\t\treturn SWT . SCROLL_LOCK ; \n\t\t} \n\telse if ( VALID_ACTION_KEY_CODES . indexOf ( $F7792 ( keyBindingDescription ) ) != - NUM00 ) { \n\t\treturn $F7792 ( keyBindingDescription ) ; \n\t\t} \n\telse $F1083 } \n"}, {"code": "public void testPutCauseEviction $F72 { \n\t$F10144 ( log ) LruCache $F2538 cache = newRemovalLogCache ( log ) ; \n\t$F16824 ( cache ) $F16824 ( cache ) $F16824 ( cache ) $F16824 ( cache ) assertEquals ( Arrays . asList ( NUM00 ) , log ) ; \n\t$F471147 ( assertSnapshot , cache ) } \n"}, {"code": "protected Signature mergeSignatures ( Signature first , Signature second , int numBins ) { \n\tint d2 = - NUM00 ; \n\tfor ( int i = NUM00 ; \n\ti < second . spec . length ; \n\ti += NUM00 ) { \n\t\tif ( second . spec [ i ] >= NUM00 ) { \n\t\t\tassert ( d2 == - NUM00 ) : NUM00 ; \n\t\t\td2 = i ; \n\t\t\t} \n\t\t} \n\tassert ( d2 >= NUM00 ) : NUM00 ; \n\tif ( first . spec [ d2 ] >= NUM00 ) $F1337 final ModifiableDBIDs intersection = DBIDUtil . intersection ( first . ids , second . ids ) ; \n\t$F10162 ( support , intersection ) double width = ( second . spec [ d2 + NUM00 ] - second . spec [ d2 ] + NUM00 ) / ( double ) numBins ; \n\tdouble expect = first . ids . size ( ) * width ; \n\tif ( support <= expect || support < minClusterSize ) $F1337 final double test = PoissonDistribution . rawProbability ( support , expect ) ; \n\tif ( ( poissonThreshold ) <= test ) $F1337 $F2027 spec = first . spec . clone ( ) ; \n\t$F439467 ( spec , d2 , second ) spec [ d2 + NUM00 ] = second . spec [ d2 ] ; \n\tfinal Signature newsig = new Signature ( spec , intersection ) ; \n\tif $F88618 ( LOG ) { \n\t\t$F62755 ( LOG , newsig ) } \n\treturn newsig ; \n\t} \n"}, {"code": "$F16587 ( super ) "}, {"code": "public IgniteDeploymentException ( Throwable cause ) $F51022 ( this , cause ) "}, {"code": "public synchronized boolean enter ( CnATreeElement obj ) throws TransactionAbortedException { \n\tif ( aborted ) { \n\t\tthrow new TransactionAbortedException $F72 ; \n\t\t} \n\tvisited . add ( obj ) ; \n\tif ( this . initiator != null ) { \n\t\treturn _BOOL ; \n\t\t} \n\tthis . initiator = obj ; \n\taborted = _BOOL ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public Options addOption ( Option opt ) { \n\t$F3477 ( key , opt ) if ( opt . hasLongOpt ( ) ) { \n\t\tlongOpts . put ( opt . getLongOpt ( ) , opt ) ; \n\t\t} \n\tif ( opt . isRequired ( ) ) { \n\t\tif $F105 ( requiredOpts , key ) { \n\t\t\trequiredOpts . remove ( requiredOpts . indexOf ( key ) ) ; \n\t\t\t} \n\t\trequiredOpts . add ( key ) ; \n\t\t} \n\tshortOpts . put ( key , opt ) ; \n\treturn this ; \n\t} \n"}, {"code": "private void pauseForClientToJoin $F72 { \n\tWait . pause ( NUM00 ) ; \n\t} \n"}, {"code": "public void propertyChange ( PropertyChangeEvent pce ) { \n\tif ( pce . getPropertyName ( ) == MapBean . BackgroundProperty && backgroundSlave ) { \n\t\tmap . setBckgrnd ( ( Paint ) pce . getNewValue ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public TransitionBuilder addFrame ( int imageResource ) $F18637 ( mFrames , imageResource , this ) "}, {"code": "public $F18547 scanForClasses ( String location , $F6969 implementedInterface ) throws Exception { \n\tLOG . debug ( $F106503 ( location , implementedInterface ) ) ; \n\t$F69670 classes = new ArrayList $F69669 $F72 ; \n\t$F2689 resourceNames = findResourceNames ( location , NUM00 , NUM00 ) ; \n\tfor ( String resourceName : resourceNames ) { \n\t\tString className = toClassName ( resourceName ) ; \n\t\t$F6969 clazz = classLoader . loadClass ( className ) ; \n\t\tif ( $F79998 ( Modifier , clazz ) || clazz . isEnum ( ) || clazz . isAnonymousClass ( ) ) { \n\t\t\t$F586 ( LOG , className ) $F598 } \n\t\tif $F80006 ( implementedInterface , clazz ) $F1448 try { \n\t\t\tClassUtils . instantiate ( className , classLoader ) ; \n\t\t\t} \n\t\tcatch ( Exception e ) { \n\t\t\tthrow new CassandraMigrationException ( NUM00 + className , e ) ; \n\t\t\t} \n\t\tclasses . add ( clazz ) ; \n\t\t$F586 ( LOG , className ) } \n\treturn classes . toArray ( new $F6969 $F2313 ( classes ) ) ; \n\t} \n"}, {"code": "public String nextCDATA $F72 throws JSONException { \n\tchar c ; \n\tint i ; \n\t$F280 ( sb ) for ( $F589 ) { \n\t\tc = next ( ) ; \n\t\tif ( end ( ) ) $F25983 ( syntaxError ) sb . append ( c ) ; \n\t\t$F25985 ( i , sb ) if ( $F25986 ( i , sb ) && $F10825 ( sb , i ) && $F10825 ( sb , i ) ) { \n\t\t\tsb . setLength ( i ) ; \n\t\t\t$F92 ( sb ) } \n\t\t} \n\t} \n"}, {"code": "private static boolean needsSkylightUpdate ( FastCubeBlockAccess access , MutableBlockPos pos ) { \n\tif ( access . getBlockLightOpacity ( pos ) >= NUM00 ) { \n\t\treturn _BOOL ; \n\t\t} \n\tint computedLight = access . computeLightValue ( pos ) ; \n\tfor ( $F40424 ( facing , EnumFacing ) ) { \n\t\tpos . move ( facing ) ; \n\t\tint currentLight = access . getLightFor ( EnumSkyBlock . SKY , pos ) ; \n\t\tint currentOpacity = Math . max ( NUM00 , access . getBlockLightOpacity ( pos ) ) ; \n\t\tpos . move ( facing . getOpposite ( ) ) ; \n\t\tif ( computedLight == currentLight - currentOpacity ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void expand ( Rectangle2D r , double amount ) { \n\tr . setRect ( r . getX ( ) - amount , r . getY ( ) - amount , r . getWidth ( ) + NUM00 * amount , r . getHeight ( ) + NUM00 * amount ) ; \n\t} \n"}, {"code": "static void stringToPacket ( String s , DatagramPacket packet ) { \n\t$F39526 ( bytes , s ) System . arraycopy ( bytes , NUM00 , packet . getData ( ) , NUM00 , bytes . length ) ; \n\t$F5660 ( packet , bytes ) } \n"}, {"code": "$F1 public String toString $F72 { \n\t$F8755 ( buffer ) $F84 ( buffer ) buffer . append ( gridX ) ; \n\t$F84 ( buffer ) buffer . append ( gridY ) ; \n\t$F84 ( buffer ) buffer . append ( gridWidth ) ; \n\t$F84 ( buffer ) buffer . append ( gridHeight ) ; \n\t$F84 ( buffer ) buffer . append ( hAlign ) ; \n\t$F84 ( buffer ) buffer . append ( vAlign ) ; \n\tif $F2137 ( EMPTY_INSETS , insets ) $F20352 ( buffer , insets ) $F84 ( buffer ) buffer . append ( honorsVisibility ) ; \n\t$F84 ( buffer ) $F92 ( buffer ) } \n"}, {"code": "private ArrayList < PROCLUSCluster > assignPoints ( ArrayDBIDs m_current , long [ ] [ ] dimensions , $F42616 database ) { \n\tModifiableDBIDs [ ] clusterIDs = new ModifiableDBIDs [ dimensions . length ] ; \n\tfor ( $F2277 ( i , m_current ) ) { \n\t\tclusterIDs [ i ] = DBIDUtil . newHashSet ( ) ; \n\t\t} \n\t$F150948 ( m_i , m_current ) for ( $F42632 ( it , database ) ) { \n\t\t$F42637 ( p , database , it ) double minDist = Double . NaN ; \n\t\tint best = - NUM00 , i = NUM00 ; \n\t\tfor ( m_i . seek ( NUM00 ) ; \n\t\tm_i . valid ( ) ; \n\t\t$F102236 ( m_i , i ) ) { \n\t\t\t$F42637 ( m , database , m_i ) double currentDist = manhattanSegmentalDistance ( p , m , dimensions [ i ] ) ; \n\t\t\tif ( ! ( minDist <= currentDist ) ) { \n\t\t\t\tminDist = currentDist ; \n\t\t\t\tbest = i ; \n\t\t\t\t} \n\t\t\t} \n\t\tassert best >= NUM00 ; \n\t\tModifiableDBIDs ids = clusterIDs [ best ] ; \n\t\tids . add ( it ) ; \n\t\t} \n\tArrayList < PROCLUSCluster > $F719 ( clusters , m_current ) ; \n\tfor ( $F1139 ( i , dimensions ) ) { \n\t\tModifiableDBIDs objectIDs = clusterIDs [ i ] ; \n\t\tif $F5973 ( objectIDs ) { \n\t\t\t$F2469 clusterDimensions = dimensions [ i ] ; \n\t\t\t$F1986 centroid = Centroid . make ( database , objectIDs ) . getArrayRef ( ) ; \n\t\t\tclusters . add ( new PROCLUSCluster ( objectIDs , clusterDimensions , centroid ) ) ; \n\t\t\t} \n\t\telse $F723 ( clusters ) } \n\tif $F88618 ( LOG ) { \n\t\t$F83 ( msg ) $F84 ( msg ) msg . append ( NUM00 ) . append ( clusters ) . append ( NUM00 ) ; \n\t\tLOG . debugFine ( msg . toString ( ) ) ; \n\t\t} \n\treturn clusters ; \n\t} \n"}, {"code": "public double slideSubtree ( MutableTree tree ) { \n\tdouble logHastingsRatio ; \n\tNodeRef i , newParent , newChild ; \n\tdo { \n\t\ti = tree . getNode ( MathUtils . nextInt ( tree . getNodeCount ( ) ) ) ; \n\t\t} \n\twhile ( tree . getRoot ( ) == i ) ; \n\t$F59939 ( iP , tree , i ) NodeRef CiP = getOtherChild ( tree , iP , i ) ; \n\t$F59939 ( PiP , tree , iP ) double delta = getDelta ( ) ; \n\t$F9667 ( oldHeight , tree , iP ) double newHeight = oldHeight + delta ; \n\tif ( delta > NUM00 ) { \n\t\tif ( PiP != null && tree . getNodeHeight ( PiP ) < newHeight ) { \n\t\t\tnewParent = PiP ; \n\t\t\tnewChild = iP ; \n\t\t\twhile ( tree . getNodeHeight ( newParent ) < newHeight ) { \n\t\t\t\tnewChild = newParent ; \n\t\t\t\tnewParent = tree . getParent ( newParent ) ; \n\t\t\t\t$F12576 ( newParent ) } \n\t\t\ttree . beginTreeEdit ( ) ; \n\t\t\tif ( tree . isRoot ( newChild ) ) { \n\t\t\t\ttree . removeChild ( iP , CiP ) ; \n\t\t\t\ttree . removeChild ( PiP , iP ) ; \n\t\t\t\ttree . addChild ( iP , newChild ) ; \n\t\t\t\ttree . addChild ( PiP , CiP ) ; \n\t\t\t\ttree . setRoot ( iP ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\ttree . removeChild ( iP , CiP ) ; \n\t\t\t\ttree . removeChild ( PiP , iP ) ; \n\t\t\t\ttree . removeChild ( newParent , newChild ) ; \n\t\t\t\ttree . addChild ( iP , newChild ) ; \n\t\t\t\ttree . addChild ( PiP , CiP ) ; \n\t\t\t\ttree . addChild ( newParent , iP ) ; \n\t\t\t\t} \n\t\t\ttree . setNodeHeight ( iP , newHeight ) ; \n\t\t\ttree . endTreeEdit ( ) ; \n\t\t\tint possibleSources = intersectingEdges ( tree , newChild , oldHeight , null ) ; \n\t\t\tlogHastingsRatio = Math . log ( NUM00 / ( double ) possibleSources ) ; \n\t\t\t} \n\t\telse { \n\t\t\ttree . setNodeHeight ( iP , newHeight ) ; \n\t\t\tlogHastingsRatio = NUM00 ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( tree . getNodeHeight ( i ) > newHeight ) $F86429 ( Double ) if ( tree . getNodeHeight ( CiP ) > newHeight ) { \n\t\t\t$F12181 ( newChildren ) int possibleDestinations = intersectingEdges ( tree , CiP , newHeight , newChildren ) ; \n\t\t\tif $F10471 ( newChildren ) $F86429 ( Double ) $F59615 ( childIndex , MathUtils , newChildren ) newChild = ( NodeRef ) newChildren . get ( childIndex ) ; \n\t\t\tnewParent = tree . getParent ( newChild ) ; \n\t\t\ttree . beginTreeEdit ( ) ; \n\t\t\tif ( tree . isRoot ( iP ) ) { \n\t\t\t\ttree . removeChild ( iP , CiP ) ; \n\t\t\t\ttree . removeChild ( newParent , newChild ) ; \n\t\t\t\ttree . addChild ( iP , newChild ) ; \n\t\t\t\ttree . addChild ( newParent , iP ) ; \n\t\t\t\ttree . setRoot ( CiP ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\ttree . removeChild ( iP , CiP ) ; \n\t\t\t\ttree . removeChild ( PiP , iP ) ; \n\t\t\t\ttree . removeChild ( newParent , newChild ) ; \n\t\t\t\ttree . addChild ( iP , newChild ) ; \n\t\t\t\ttree . addChild ( PiP , CiP ) ; \n\t\t\t\ttree . addChild ( newParent , iP ) ; \n\t\t\t\t} \n\t\t\ttree . setNodeHeight ( iP , newHeight ) ; \n\t\t\ttree . endTreeEdit ( ) ; \n\t\t\tlogHastingsRatio = Math . log ( ( double ) possibleDestinations ) ; \n\t\t\t} \n\t\telse { \n\t\t\ttree . setNodeHeight ( iP , newHeight ) ; \n\t\t\tlogHastingsRatio = NUM00 ; \n\t\t\t} \n\t\t} \n\treturn logHastingsRatio ; \n\t} \n"}, {"code": "public boolean isInitialized $F72 { \n\treturn _initialized ; \n\t} \n"}, {"code": "public boolean removeShutdownHook ( Thread hook ) { \n\t$F896 ( hook ) $F4640 ( shuttingDown ) synchronized ( shutdownHooks ) $F20067 ( shutdownHooks , hook ) } \n"}, {"code": "private ResultPointsAndTransitions transitionsBetween ( ResultPoint from , ResultPoint to ) { \n\t$F166720 ( fromX , from ) $F166722 ( fromY , from ) $F166720 ( toX , to ) $F166722 ( toY , to ) $F226920 ( steep , Math , toY , fromY , toX , fromX ) $F226922 ( steep , temp , fromX , fromY , toX , toY ) $F11871 ( dx , Math , toX , fromX ) $F11871 ( dy , Math , toY , fromY ) int error = - dx / NUM00 ; \n\t$F211050 ( ystep , fromY , toY ) $F211050 ( xstep , fromX , toX ) int transitions = NUM00 ; \n\t$F226926 ( inBlack , image , steep , fromY , fromX ) $F226931 ( x , fromX , y , fromY , toX , xstep , isBlack , image , steep , inBlack , transitions , error , dy , toY , ystep , dx ) $F226932 ( from , to , transitions ) } \n"}, {"code": "$F198049 ( Double , get ) "}, {"code": "boolean checkCameraSize ( CameraOptions cameraId ) { \n\tboolean sizeAvailable = _BOOL ; \n\tCamera camera = null ; \n\tMethod method = getCameraOpenMethod ( ) ; \n\tif ( method != null ) { \n\t\ttry { \n\t\t\tcamera = ( Camera ) method . invoke ( camera , new Object [ ] { \n\t\t\t\tcameraId . getValue ( ) } \n\t\t\t) ; \n\t\t\t} \n\t\tcatch ( Exception e ) { \n\t\t\t$F81052 ( camera , Camera ) } \n\t\t} \n\telse { \n\t\t$F81052 ( camera , Camera ) } \n\t$F1933 ( camera , _BOOL ) Parameters param = camera . getParameters ( ) ; \n\tList < Camera . Size > sizes = param . getSupportedPreviewSizes ( ) ; \n\tfor ( Camera . Size size : sizes ) { \n\t\tif ( ( size . width == H264Config . QVGA_WIDTH && size . height == H264Config . QVGA_HEIGHT ) || ( size . width == H264Config . CIF_WIDTH && size . height == H264Config . CIF_HEIGHT ) || ( size . width == H264Config . VGA_WIDTH && size . height == H264Config . VGA_HEIGHT ) ) $F3468 ( sizeAvailable , _BOOL ) } \n\t$F33833 ( camera ) return sizeAvailable ; \n\t} \n"}, {"code": "$F156045 ( msg , x , super , this ) "}, {"code": "public void append ( final String s ) $F98972 ( first , _BOOL , builder , space , s ) "}, {"code": "public static ByteArrayOutputStream encode ( String plaintext ) throws IOException , MessagingException { \n\t$F1538 ( out ) $F39526 ( in , plaintext ) $F1538 ( inStream ) $F17918 ( inStream , in ) if ( ( in . length % NUM00 ) == NUM00 ) { \n\t\t$F25097 ( inStream ) $F25097 ( inStream ) } \n\telse if ( ( in . length % NUM00 ) == NUM00 ) { \n\t\t$F25097 ( inStream ) } \n\tinStream . writeTo ( MimeUtility . encode ( out , NUM00 ) ) ; \n\treturn out ; \n\t} \n"}, {"code": "public LookupListTable lookupList $F72 { \n\tif $F61923 ( lookupListTable ) { \n\t\tlookupListTable . compareAndSet ( null , gsub . createLookupList ( ) ) ; \n\t\t} \n\t$F1521 ( lookupListTable ) } \n"}, {"code": "public long sum $F72 $F1522 ( deltaSum ) "}, {"code": "$F120210 ( maximumPullScroll , getMaximumPullScroll , pLeft , getPaddingLeft , pTop , getPaddingTop , pRight , getPaddingRight , pBottom , getPaddingBottom , getPullToRefreshScrollDirection , HORIZONTAL , mMode , mHeaderLayout , mFooterLayout , VERTICAL , DEBUG , Log , LOG_TAG , String , setPadding ) "}, {"code": "private static boolean isWordBoundary ( CharSequence singleChar , String wordSeparators ) { \n\treturn TextUtils . isEmpty ( singleChar ) || wordSeparators . contains ( singleChar ) ; \n\t} \n"}, {"code": "public void executeBlocking ( String desc , BlockingConsumer < MongoClient > operation ) throws InterruptedException { \n\twhile ( _BOOL ) { \n\t\tMongoClient primary = primaryConnectionSupplier . get ( ) ; \n\t\ttry { \n\t\t\toperation . accept ( primary ) ; \n\t\t\t$F665 } \n\t\tcatch ( Throwable t ) { \n\t\t\terrorHandler . accept ( desc , t ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void write $F53421 ( cbuf ) throws $F3258 { \n\t$F46502 ( write , cbuf ) } \n"}, {"code": "protected TableViewer createTable ( Composite parent , int span ) { \n\tTable table = new Table ( parent , SWT . H_SCROLL | SWT . V_SCROLL | SWT . BORDER | SWT . SINGLE | SWT . FULL_SELECTION ) ; \n\tGridData data = new GridData ( GridData . FILL_BOTH | GridData . GRAB_HORIZONTAL ) ; \n\tdata . horizontalSpan = span ; \n\ttable . setLayoutData ( data ) ; \n\tTableLayout layout = new TableLayout $F72 ; \n\tlayout . addColumnData ( new ColumnWeightData ( NUM00 , _BOOL ) ) ; \n\ttable . setLayout ( layout ) ; \n\tTableColumn col = new TableColumn ( table , SWT . NONE ) ; \n\tcol . setResizable ( _BOOL ) ; \n\treturn new TableViewer ( table ) ; \n\t} \n"}, {"code": "public String typeAsString $F72 { \n\tString typeStr = NUM00 ; \n\tString subtypeStr = NUM00 ; \n\tswitch ( this . type ) { \n\t\tcase ETYPE_CONTROL : typeStr = NUM00 ; \n\t\tswitch ( this . subtype ) { \n\t\t\t$F7242 ( ESTYPE_HEADER , subtypeStr ) $F7242 ( ESTYPE_FOOTER , subtypeStr ) } \n\t\t$F597 case ETYPE_TRANSACTIONS : typeStr = NUM00 ; \n\t\tswitch ( this . subtype ) { \n\t\t\t$F7242 ( ESTYPE_TRAN_START , subtypeStr ) $F7242 ( ESTYPE_TRAN_COMMIT , subtypeStr ) $F7242 ( ESTYPE_TRAN_ROLLBACK , subtypeStr ) $F7242 ( ESTYPE_TRAN_ROLLBACK_TO_SAVEPOINT , subtypeStr ) $F7242 ( ESTYPE_TRAN_AUDIT , subtypeStr ) } \n\t\t$F597 case ETYPE_LCR_DATA : typeStr = NUM00 ; \n\t\tswitch ( this . subtype ) { \n\t\t\t$F7242 ( ESTYPE_LCR_INSERT , subtypeStr ) $F7242 ( ESTYPE_LCR_DELETE , subtypeStr ) $F7242 ( ESTYPE_LCR_UPDATE , subtypeStr ) $F7242 ( ESTYPE_LCR_LOB_WRITE , subtypeStr ) $F7242 ( ESTYPE_LCR_LOB_TRIM , subtypeStr ) $F7242 ( ESTYPE_LCR_LOB_ERASE , subtypeStr ) $F7242 ( ESTYPE_LCR_DDL , subtypeStr ) } \n\t\t$F597 case ETYPE_LCR_PLOG : typeStr = NUM00 ; \n\t\tswitch ( this . subtype ) { \n\t\t\t$F7242 ( ESTYPE_LCR_PLOG_IFILE , subtypeStr ) $F7242 ( ESTYPE_LCR_PLOG_IFILE_STATS , subtypeStr ) } \n\t\t$F597 $F1267 typeStr = NUM00 + this . type + NUM00 ; \n\t\tsubtypeStr = NUM00 + this . subtype ; \n\t\t} \n\treturn typeStr + subtypeStr ; \n\t} \n"}, {"code": "public void lineTo ( float x , float y ) { \n\tmPoints . add ( PathPoint . lineTo ( x , y ) ) ; \n\t} \n"}, {"code": "public void flagActionItems $F72 { \n\t$F24126 ( mIsActionItemsStale ) boolean flagged = _BOOL ; \n\tfor ( $F232606 ref : mPresenters ) { \n\t\t$F232608 ( presenter , ref ) if ( presenter == null ) $F106 ( mPresenters , ref ) else { \n\t\t\tflagged |= presenter . flagActionItems ( ) ; \n\t\t\t} \n\t\t} \n\tif ( flagged ) { \n\t\t$F725 ( mActionItems ) $F725 ( mNonActionItems ) ArrayList < MenuItemImpl > visibleItems = getVisibleItems ( ) ; \n\t\t$F10162 ( itemsSize , visibleItems ) for ( $F119 ( i , itemsSize ) ) { \n\t\t\tMenuItemImpl item = visibleItems . get ( i ) ; \n\t\t\tif ( item . isActionButton ( ) ) $F207 ( mActionItems , item ) else $F207 ( mNonActionItems , item ) } \n\t\t} \n\telse { \n\t\t$F725 ( mActionItems ) $F725 ( mNonActionItems ) $F138067 ( mNonActionItems , getVisibleItems ) } \n\tmIsActionItemsStale = _BOOL ; \n\t} \n"}, {"code": "protected $F8748 canHandleMissing ( boolean nominalPredictor , boolean numericPredictor , boolean stringPredictor , boolean datePredictor , boolean relationalPredictor , boolean multiInstance , int classType , boolean predictorMissing , boolean classMissing , int missingLevel ) { \n\tif ( missingLevel == NUM00 ) $F1210 ( print ) print ( NUM00 ) ; \n\tif ( predictorMissing ) { \n\t\tprint ( NUM00 ) ; \n\t\t$F29727 ( classMissing , print ) } \n\t$F29727 ( classMissing , print ) print ( NUM00 ) ; \n\tprintAttributeSummary ( nominalPredictor , numericPredictor , stringPredictor , datePredictor , relationalPredictor , multiInstance , classType ) ; \n\tprint ( NUM00 ) ; \n\t$F8728 ( accepts ) $F18793 ( accepts ) $F18793 ( accepts ) $F18793 ( accepts ) int numTrain = getNumInstances ( ) , numTest = getNumInstances ( ) , numClasses = NUM00 ; \n\treturn runBasicTest ( nominalPredictor , numericPredictor , stringPredictor , datePredictor , relationalPredictor , multiInstance , classType , missingLevel , predictorMissing , classMissing , numTrain , numTest , numClasses , accepts ) ; \n\t} \n"}, {"code": "private void disableButtons $F72 { \n\tfor ( $F40424 ( cmd , DeployCommand ) ) { \n\t\tsetButtonEnabled ( cmd , _BOOL ) ; \n\t\t} \n\tbutDone . setEnabled ( _BOOL ) ; \n\tsetLoadEnabled ( _BOOL ) ; \n\tsetUnloadEnabled ( _BOOL ) ; \n\tsetAssaultDropEnabled ( _BOOL ) ; \n\t} \n"}, {"code": "public Artifact load ( File path ) throws IOException { \n\treturn load ( new ArtifactName $F27949 ( path ) , path ) ; \n\t} \n"}, {"code": "protected final boolean tryAcquire ( int acquires ) { \n\t$F9275 ( current , Thread ) int c = getState ( ) ; \n\tif ( c == NUM00 ) { \n\t\tif ( ! hasQueuedPredecessors ( ) && compareAndSetState ( NUM00 , acquires ) ) $F9278 ( setExclusiveOwnerThread , current , _BOOL ) } \n\telse $F9286 ( current , getExclusiveOwnerThread , nextc , c , acquires , setState , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "private static final boolean isHeaderEnd ( StringBuilder sb ) { \n\t$F1749 ( len , sb ) if ( len > NUM00 ) { \n\t\tif ( LF2 . equals ( sb . substring ( len - NUM00 ) ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\tif ( len > NUM00 ) { \n\t\tif ( CRLF2 . equals ( sb . substring ( len - NUM00 ) ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F20795 ( result ) $F1000 ( result ) $F1000 ( result ) $F1000 ( result ) $F1000 ( result ) $F77735 ( result ) $F1000 ( result ) $F1007 ( result ) } \n"}, {"code": "public TSActionDelay ( TransitSectionAction tsa , int delay ) { \n\t_tsa = tsa ; \n\t_delay = delay ; \n\t} \n"}, {"code": "public DAddExtensions ( JDialog parent , X509ExtensionSet extensions , PublicKey authorityPublicKey , X500Name authorityCertName , BigInteger authorityCertSerialNumber , PublicKey subjectPublicKey ) { \n\t$F36748 ( super , parent , Dialog ) $F15426 ( setTitle , res ) this . extensions = ( X509ExtensionSet ) extensions . clone ( ) ; \n\tthis . authorityPublicKey = authorityPublicKey ; \n\tthis . authorityCertName = authorityCertName ; \n\tthis . authorityCertSerialNumber = authorityCertSerialNumber ; \n\tthis . subjectPublicKey = subjectPublicKey ; \n\tinitComponents ( ) ; \n\t} \n"}, {"code": "public void add ( IMultiPoint pt ) { \n\tif ( inProgress ) { \n\t\tthrow new ConcurrentModificationException $F580 ; \n\t\t} \n\tpoints . add ( pt ) ; \n\t} \n"}, {"code": "public static boolean isCglibProxyClass $F60993 ( clazz ) { \n\treturn ( clazz != null && $F6798 ( isCglibProxyClassName , clazz ) ) ; \n\t} \n"}, {"code": "private DiscoveryInformation verifyDiscovered ( AuthSuccess authResp , DiscoveryInformation discovered ) throws DiscoveryException { \n\tif ( authResp == null || authResp . getIdentity ( ) == null ) $F11048 ( _log ) if ( authResp . isVersion2 ( ) ) return verifyDiscovered2 ( authResp , discovered ) ; \n\telse return verifyDiscovered1 ( authResp , discovered ) ; \n\t} \n"}, {"code": "public boolean generate ( ReportDescription description , Date date ) { \n\ttry { \n\t\tInteger targetDateInt = Integer . parseInt ( format . format ( date ) ) ; \n\t\tAnalysisResultSet logAggregation = makeLogAnal ( description , targetDateInt ) ; \n\t\tReport report = new Report $F72 ; \n\t\treport . setSendTime ( $F4094 ) ; \n\t\treport . setTargetDate ( date ) ; \n\t\treport . setLogReport ( logAggregation ) ; \n\t\treport . setTargets ( description . getTargets ( ) ) ; \n\t\t$F586 ( logger , report ) reportRepository . save ( report ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F1575 ( logger , e ) return _BOOL ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void updateTextViews ( Recharge recharge ) { \n\tunitTypeTextView . setText ( recharge . getUnits ( ) ) ; \n\tunitValueTextView . setText ( String . valueOf ( recharge . getCurrentAmount ( ) ) ) ; \n\tcostTextView . setText ( Currency . localize ( recharge . getCurrentCost ( ) , _BOOL ) ) ; \n\trechargeName . setText ( recharge . getTitle ( ) ) ; \n\tconfirmationTextView . setText ( NUM00 + recharge . getCurrentAmount ( ) + NUM00 + recharge . getUnits ( ) + NUM00 ) ; \n\tif ( recharge . getCurrentAmount ( ) == recharge . getInitialAmount ( ) ) { \n\t\t$F185816 ( downArrow , View ) } \n\telse $F29550 ( downArrow , View ) } \n"}, {"code": "private ConcurrentMap < GridCacheVersion , IgniteInternalTx > transactionMap ( IgniteInternalTx tx ) { \n\treturn ( tx . near ( ) && ! tx . local ( ) ) ? nearIdMap : idMap ; \n\t} \n"}, {"code": "public void stop $F72 { \n\tsynchronized ( this ) { \n\t\tmStopped = _BOOL ; \n\t\t$F2329 ( mListenerThread ) } \n\t$F7589 ( mListenerThread ) try $F6399 ( mServerSocket ) $F29052 } \n"}, {"code": "public static $F96 decode $F27539 ( data , pri_key ) { \n\ttry { \n\t\t$F5348 ( cipher , Cipher ) java . security . Key k = getPrivateKey ( pri_key ) ; \n\t\t$F116470 ( cipher , Cipher , k ) $F81525 ( deBytes , cipher , data ) return deBytes ; \n\t\t} \n\tcatch ( Exception e ) $F102355 ( log , pri_key , e ) $F1274 } \n"}, {"code": "public static int deriveARGB ( Color color1 , Color color2 , float midPoint ) { \n\tint r = color1 . getRed ( ) + ( int ) ( ( color2 . getRed ( ) - color1 . getRed ( ) ) * midPoint + NUM00 ) ; \n\tint g = color1 . getGreen ( ) + ( int ) ( ( color2 . getGreen ( ) - color1 . getGreen ( ) ) * midPoint + NUM00 ) ; \n\tint b = color1 . getBlue ( ) + ( int ) ( ( color2 . getBlue ( ) - color1 . getBlue ( ) ) * midPoint + NUM00 ) ; \n\tint a = color1 . getAlpha ( ) + ( int ) ( ( color2 . getAlpha ( ) - color1 . getAlpha ( ) ) * midPoint + NUM00 ) ; \n\treturn $F201782 ( a , r ) | $F74254 ( g ) | ( b & NUM00 ) ; \n\t} \n"}, {"code": "public void addLandingPad ( int x , int z ) { \n\tBlockPosition pos = new BlockPosition ( x , NUM00 , z ) ; \n\tif $F2200 ( spawnLocations , pos ) { \n\t\tspawnLocations . add ( pos ) ; \n\t\toccupiedLandingPads . put ( pos , _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "static AttackStrategy create ( String params ) { \n\t$F806 $F33985 ( arg , params ) ; \n\tif $F11845 ( arg ) $F29526 ( params ) $F7329 desc = parseStrategy ( arg [ NUM00 ] ) ; \n\tTargetSelectionStrategy targeter = TargetSelectionStrategyFactory . get ( desc . first ( ) , desc . second ( ) ) ; \n\tdesc = parseStrategy ( arg [ NUM00 ] ) ; \n\tPositioningStrategy positioner = PositioningStrategyFactory . get ( desc . first ( ) , desc . second ( ) ) ; \n\treturn new CompoundAttackStrategy ( getSubStrategy ( arg [ NUM00 ] ) , targeter , positioner ) ; \n\t} \n"}, {"code": "public OrderedThreadPoolExecutor $F72 { \n\tthis ( DEFAULT_INITIAL_THREAD_POOL_SIZE , DEFAULT_MAX_THREAD_POOL , DEFAULT_KEEP_ALIVE , TimeUnit . SECONDS , Executors . defaultThreadFactory ( ) , null ) ; \n\t} \n"}, {"code": "$F5105 ( pcl , m_pcSupport ) "}, {"code": "final public void writeChunk ( L locator , KVO $F65331 [ ] chunk ) throws MockStaleLocatorException { \n\tsynchronized ( this ) { \n\t\tif ( staleLocators . contains ( locator . getPartitionId ( ) ) ) { \n\t\t\tthrow new MockStaleLocatorException ( locator ) ; \n\t\t\t} \n\t\tif ( ! knownLocators . contains ( locator . getPartitionId ( ) ) ) $F1666 ( locator ) } \n\tacceptWrite ( locator , chunk ) ; \n\t} \n"}, {"code": "public Event event ( int id ) { \n\tif ( ! host ) { \n\t\treturn ( Event ) events . get ( new Integer ( id ) ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "private void initValues $F72 { \n\tIPreferenceStore store = doGetPreferenceStore ( ) ; \n\tfinal String storedItems = store . getString ( CheckerPreferences . PREF_CHECKER_CUSTOM_CLASSES ) ; \n\tif $F1264 ( storedItems ) { \n\t\tcustomCheckers . setItems ( storedItems . split ( NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "private void loadProperties $F72 { \n\t$F27462 ( property , System ) if ( null == property ) { \n\t\tproperty = CarbonCommonConstants . CARBON_PROPERTIES_FILE_PATH ; \n\t\t} \n\t$F1705 ( file , property ) $F36580 ( LOGGER , file ) FileInputStream fis = null ; \n\ttry { \n\t\tif $F3428 ( file ) $F175470 ( fis , file , carbonProperties ) } \n\tcatch ( FileNotFoundException e ) { \n\t\tLOGGER . error ( NUM00 + CarbonCommonConstants . CARBON_PROPERTIES_FILE_PATH + NUM00 ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tLOGGER . error ( NUM00 + CarbonCommonConstants . CARBON_PROPERTIES_FILE_PATH ) ; \n\t\t} \n\tfinally { \n\t\tif ( null != fis ) { \n\t\t\ttry $F881 ( fis ) catch ( IOException e ) { \n\t\t\t\tLOGGER . error ( NUM00 + CarbonCommonConstants . CARBON_PROPERTIES_FILE_PATH ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tprint ( ) ; \n\t} \n"}, {"code": "void sync ( int sourceRepoIndex , int destRepoIndex , AuthenticationInfo subject ) throws IOException { \n\t$F973 ( LOG ) $F4377 ( auth , NotebookAuthorization ) NotebookRepo srcRepo = getRepo ( sourceRepoIndex ) ; \n\tNotebookRepo dstRepo = getRepo ( destRepoIndex ) ; \n\tList < NoteInfo > allSrcNotes = srcRepo . list ( subject ) ; \n\tList < NoteInfo > srcNotes = auth . filterByUser ( allSrcNotes , subject ) ; \n\tList < NoteInfo > dstNotes = dstRepo . list ( subject ) ; \n\t$F14855 noteIds = notesCheckDiff ( srcNotes , srcRepo , dstNotes , dstRepo , subject ) ; \n\t$F64948 ( pushNoteIds , noteIds , pushKey ) $F64948 ( pullNoteIds , noteIds , pullKey ) $F64948 ( delDstNoteIds , noteIds , delDstKey ) if $F5973 ( pushNoteIds ) { \n\t\t$F973 ( LOG ) for ( String id : pushNoteIds ) $F10090 ( LOG , id ) pushNotes ( subject , pushNoteIds , srcRepo , dstRepo , _BOOL ) ; \n\t\t} \n\telse $F22715 ( LOG ) if $F5973 ( pullNoteIds ) { \n\t\t$F973 ( LOG ) for ( String id : pullNoteIds ) $F10090 ( LOG , id ) pushNotes ( subject , pullNoteIds , dstRepo , srcRepo , _BOOL ) ; \n\t\t} \n\telse $F22715 ( LOG ) if $F5973 ( delDstNoteIds ) { \n\t\t$F973 ( LOG ) for ( String id : delDstNoteIds ) $F10090 ( LOG , id ) deleteNotes ( subject , delDstNoteIds , dstRepo ) ; \n\t\t} \n\telse $F22715 ( LOG ) $F973 ( LOG ) } \n"}, {"code": "public void list ( PrintStream out ) { \n\t$F8438 ( out ) $F240196 h = new Hashtable $F200 $F72 ; \n\tenumerate ( h ) ; \n\tfor ( $F14937 e = h . keys ( ) ; \n\te . hasMoreElements ( ) ; \n\t) { \n\t\t$F14941 ( key , e ) $F123 ( val , h , key ) if $F4012 ( val ) { \n\t\t\tval = $F22881 ( val ) ; \n\t\t\t} \n\t\tout . println ( key + NUM00 + val ) ; \n\t\t} \n\t} \n"}, {"code": "public static Date stringToDate ( String strdate , $F1431 String format ) { \n\tDate date = null ; \n\t$F13438 ( formatter , format ) try $F49239 ( date , formatter , strdate ) catch ( ParseException e ) $F302 ( e ) return date ; \n\t} \n"}, {"code": "$F5466 public static String md5 ( $F5466 File file , $F5466 IgniteLogger log ) { \n\tif ( file != null ) return file . isFile ( ) ? fileMd5 ( file , log ) : directoryMd5 ( file , log ) ; \n\t$F1274 } \n"}, {"code": "public void init $F340693 ( size , certainty , random ) $F9180 ( this , size , certainty , random ) "}, {"code": "$F1 public boolean hasNext $F72 { \n\t$F19795 ( allRowsResult , _BOOL ) totalRecordCounter ++ ; \n\tlistRecordCounter ++ ; \n\tif ( listRecordCounter == NUM00 || ( listRecordCounter >= currentRowPointer . size ( ) && currentListCounter < allRowsResult . size ( ) ) ) { \n\t\tlistRecordCounter = NUM00 ; \n\t\tcurrentRowPointer = allRowsResult . get ( currentListCounter ) ; \n\t\tcurrentListCounter ++ ; \n\t\t} \n\treturn totalRecordCounter < totalNumberOfRecords ; \n\t} \n"}, {"code": "public void trimToSize $F72 $F51922 ( delegate ) "}, {"code": "JSONStringer open ( Scope empty , String openBracket ) throws JSONException { \n\tif ( stack . isEmpty ( ) && $F20 ( out ) ) $F19954 beforeValue ( ) ; \n\tstack . add ( empty ) ; \n\tout . append ( openBracket ) ; \n\treturn this ; \n\t} \n"}, {"code": "public static final String asciiBoard ( Position pos ) { \n\t$F20818 ( ret ) String nl = String . format ( Locale . US , NUM00 ) ; \n\t$F84 ( ret ) ret . append ( nl ) ; \n\tfor ( $F183017 ( y ) ) { \n\t\t$F84 ( ret ) for ( $F6268 ( x ) ) { \n\t\t\t$F84 ( ret ) int p = pos . getPiece ( Position . getSquare ( x , y ) ) ; \n\t\t\tif ( p == Piece . EMPTY ) { \n\t\t\t\tboolean dark = Position . darkSquare ( x , y ) ; \n\t\t\t\t$F97889 ( ret , dark ) } \n\t\t\telse { \n\t\t\t\tret . append ( Piece . isWhite ( p ) ? NUM00 : NUM00 ) ; \n\t\t\t\tString pieceName = pieceToChar ( p ) ; \n\t\t\t\tif $F1277 ( pieceName ) pieceName = NUM00 ; \n\t\t\t\tret . append ( pieceName ) ; \n\t\t\t\t$F84 ( ret ) } \n\t\t\t} \n\t\tret . append ( nl ) ; \n\t\t$F84 ( ret ) ret . append ( nl ) ; \n\t\t} \n\t$F92 ( ret ) } \n"}, {"code": "public final void clear $F72 $F5122 ( caches , sections ) "}, {"code": "static $F6870 toNodeSet ( $F27882 i ) { \n\t$F6870 nodeSet = new $F6871 $F72 ; \n\twhile $F2921 ( i ) { \n\t\t$F27886 ( n , i ) nodeSet . add ( n ) ; \n\t\tif $F61358 ( n , Node ) { \n\t\t\t$F32683 ( nnm , n ) for ( int j = NUM00 , length = nnm . getLength ( ) ; \n\t\t\tj < length ; \n\t\t\tj ++ ) { \n\t\t\t\tnodeSet . add ( nnm . item ( j ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn nodeSet ; \n\t} \n"}, {"code": "public static void runConcurrently ( final Callable $F8317 task , final int times ) throws Exception { \n\tfinal ExecutorService service = Executors . newFixedThreadPool ( NUM00 ) ; \n\tfinal List < $F44535 > futures = new ArrayList < $F44535 > $F72 ; \n\tfor ( $F119 ( i , times ) ) { \n\t\tfutures . add ( service . submit ( task ) ) ; \n\t\t} \n\tfor ( final $F44535 future : futures ) $F217730 ( future ) } \n"}, {"code": "private static ArrayList < ContainerVm > createVmList ( int brokerId , int containerVmsNumber ) { \n\tArrayList < ContainerVm > containerVms = new ArrayList < ContainerVm > $F72 ; \n\tfor ( $F1316 ( i , containerVmsNumber ) ) { \n\t\tArrayList < ContainerPe > peList = new ArrayList < ContainerPe > $F72 ; \n\t\tint vmType = i / ( int ) Math . ceil ( ( double ) containerVmsNumber / NUM00 ) ; \n\t\tfor ( int j = NUM00 ; \n\t\tj < ConstantsExamples . VM_PES [ vmType ] ; \n\t\t++ j ) { \n\t\t\tpeList . add ( new ContainerPe ( j , new CotainerPeProvisionerSimple ( ( double ) ConstantsExamples . VM_MIPS [ vmType ] ) ) ) ; \n\t\t\t} \n\t\tcontainerVms . add ( new PowerContainerVm ( IDs . pollId ( ContainerVm . class ) , brokerId , ( double ) ConstantsExamples . VM_MIPS [ vmType ] , ( float ) ConstantsExamples . VM_RAM [ vmType ] , ConstantsExamples . VM_BW , ConstantsExamples . VM_SIZE , NUM00 , new ContainerSchedulerTimeSharedOverSubscription ( peList ) , new ContainerRamProvisionerSimple ( ConstantsExamples . VM_RAM [ vmType ] ) , new ContainerBwProvisionerSimple ( ConstantsExamples . VM_BW ) , peList , ConstantsExamples . SCHEDULING_INTERVAL ) ) ; \n\t\t} \n\treturn containerVms ; \n\t} \n"}, {"code": "public static void addPortUse ( Map < StoragePort , Integer > portUseCounts , StoragePort port ) { \n\tif $F15257 ( portUseCounts , port ) $F248856 ( portUseCounts , port ) else { \n\t\tInteger newCount = portUseCounts . get ( port ) + NUM00 ; \n\t\tportUseCounts . put ( port , newCount ) ; \n\t\t} \n\t} \n"}, {"code": "public void popElemAttributeSet $F72 $F89427 ( m_attrSetStack ) "}, {"code": "private $F96 createPreviewBuffer ( Size previewSize ) { \n\tint bitsPerPixel = ImageFormat . getBitsPerPixel ( ImageFormat . NV21 ) ; \n\tlong sizeInBits = previewSize . getHeight ( ) * previewSize . getWidth ( ) * bitsPerPixel ; \n\tint bufferSize = $F96308 ( Math , sizeInBits ) + NUM00 ; \n\t$F2175 ( byteArray , bufferSize ) $F23500 ( buffer , ByteBuffer , byteArray ) if ( ! buffer . hasArray ( ) || ( buffer . array ( ) != byteArray ) ) $F4639 mBytesToByteBuffer . put ( byteArray , buffer ) ; \n\treturn byteArray ; \n\t} \n"}, {"code": "$F1 public synchronized CacheObject $F2193 put ( K key , CacheObject $F2193 value ) { \n\tif $F29395 ( cache , maxSize ) { \n\t\tif ( removeExpired ( ) <= NUM00 ) { \n\t\t\tif ( cacheFullRemoveType instanceof RemoveTypeNotRemove ) $F1337 if $F9774 ( fullRemoveOne ) $F1337 } \n\t\t} \n\tvalue . setEnterTime ( System . currentTimeMillis ( ) ) ; \n\tcache . put ( key , value ) ; \n\treturn value ; \n\t} \n"}, {"code": "$F32632 ( criteria , createCriteriaInternal , oredCriteria ) "}, {"code": "public void removeModelChange ( String tableName , ModelValidator listener ) { \n\t$F57400 ( tableName , listener ) String propertyName = m_globalValidators . contains ( listener ) ? tableName + NUM00 : tableName + listener . getAD_Client_ID ( ) ; \n\t$F105617 list = m_modelChangeListeners . get ( propertyName ) ; \n\t$F8249 ( list ) list . remove ( listener ) ; \n\tif $F10471 ( list ) m_modelChangeListeners . remove ( propertyName ) ; \n\t} \n"}, {"code": "protected void fireChangeEvent $F72 { \n\t$F10531 ( iter , m_listeners ) ChangeEvent evt = new ChangeEvent ( this ) ; \n\twhile $F2921 ( iter ) { \n\t\tChangeListener cl = ( ChangeListener ) iter . next ( ) ; \n\t\tcl . stateChanged ( evt ) ; \n\t\t} \n\t} \n"}, {"code": "private String createConnectionName $F72 { \n\t$F83 ( nameBuffer ) $F16690 ( nameBuffer , getConnectionType ) $F84 ( nameBuffer ) nameBuffer . append ( _host ) ; \n\t$F84 ( nameBuffer ) nameBuffer . append ( _port ) ; \n\t$F92 ( nameBuffer ) } \n"}, {"code": "public Query execute ( PageContext pc , SQL sql , int maxrows , int fetchsize , TimeSpan timeout ) throws PageException { \n\tStopwatch stopwatch = new Stopwatch ( Stopwatch . UNIT_NANO ) ; \n\t$F2346 ( stopwatch ) String prettySQL = null ; \n\tSelects selects = null ; \n\ttry { \n\t\tSelectParser parser = new SelectParser $F72 ; \n\t\tselects = parser . parse ( sql . getSQLString ( ) ) ; \n\t\tQuery q = qoq . execute ( pc , sql , selects , maxrows ) ; \n\t\tq . setExecutionTime ( stopwatch . time ( ) ) ; \n\t\treturn q ; \n\t\t} \n\tcatch ( SQLParserException spe ) { \n\t\tprettySQL = SQLPrettyfier . prettyfie ( sql . getSQLString ( ) ) ; \n\t\ttry { \n\t\t\tQuery query = executer . execute ( pc , sql , prettySQL , maxrows ) ; \n\t\t\tquery . setExecutionTime ( stopwatch . time ( ) ) ; \n\t\t\treturn query ; \n\t\t\t} \n\t\tcatch ( PageException ex ) $F845 } \n\tcatch ( PageException e ) $F845 try { \n\t\tboolean isUnion = _BOOL ; \n\t\t$F29150 ( tables ) if ( selects != null ) { \n\t\t\tHSQLUtil2 hsql2 = new HSQLUtil2 ( selects ) ; \n\t\t\t$F54171 ( isUnion , hsql2 ) tables = hsql2 . getInvokedTables ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( prettySQL == null ) prettySQL = SQLPrettyfier . prettyfie ( sql . getSQLString ( ) ) ; \n\t\t\tHSQLUtil hsql = new HSQLUtil ( prettySQL ) ; \n\t\t\ttables = hsql . getInvokedTables ( ) ; \n\t\t\t$F54171 ( isUnion , hsql ) } \n\t\tString strSQL = StringUtil . replace ( sql . getSQLString ( ) , NUM00 , NUM00 , _BOOL ) ; \n\t\tstrSQL = StringUtil . replace ( strSQL , NUM00 , NUM00 , _BOOL ) ; \n\t\tsql . setSQLString ( strSQL ) ; \n\t\treturn _execute ( pc , sql , maxrows , fetchsize , timeout , stopwatch , tables , isUnion ) ; \n\t\t} \n\tcatch ( ParseException e ) { \n\t\tthrow new DatabaseException ( e . getMessage ( ) , null , sql , null ) ; \n\t\t} \n\t} \n"}, {"code": "$F45332 $F2512 ( MediaType ) $F2513 @ CheckPermission ( roles = { \n\tRole . TENANT_ADMIN } \n) public TaskResourceRep discoverHost ( $F2515 ( id ) ) { \n\tArgValidator . checkFieldUriType ( id , $F2522 , NUM00 ) ; \n\tHost host = queryObject ( $F2522 , id , _BOOL ) ; \n\treturn doDiscoverHost ( host ) ; \n\t} \n"}, {"code": "public static final void readFully ( InputStream i , byte $F1310 , int off , int len ) throws IOException { \n\tif ( len < NUM00 ) $F81129 int n = NUM00 ; \n\twhile ( n < len ) { \n\t\t$F113519 ( count , i , b , off , n , len ) $F5148 ( count ) n += count ; \n\t\t} \n\t} \n"}, {"code": "private void drawLines ( Canvas canvas ) { \n\tfor ( $F2665 ( i , connectionOrder ) ) { \n\t\tdrawLine ( canvas , circles [ connectionOrder . get ( i ) ] , circles [ connectionOrder . get ( i + NUM00 ) ] ) ; \n\t\t} \n\t} \n"}, {"code": "private void addOrUpdateNode ( AStarNode newNode ) { \n\tboolean found = _BOOL ; \n\tfor ( AStarNode toUpdate : closedNodes ) { \n\t\tif $F1238 ( newNode , toUpdate ) { \n\t\t\ttoUpdate . updateDistance ( newNode . getG ( ) , newNode . parent ) ; \n\t\t\tfound = _BOOL ; \n\t\t\t$F597 } \n\t\t} \n\tif ( ! found ) $F1614 ( openQueue , newNode ) } \n"}, {"code": "public static File toFile ( JavaFileObject javaFileObject ) { \n\treturn new File $F27949 ( javaFileObject ) ; \n\t} \n"}, {"code": "$F9538 ( takeLock , this , notEmpty ) "}, {"code": "public WritableRaster createCompatibleWritableRaster ( int w , int h ) { \n\t$F2027 bOffs = $F79696 ; \n\treturn Raster . createInterleavedRaster ( DataBuffer . TYPE_BYTE , w , h , w * NUM00 , NUM00 , bOffs , null ) ; \n\t} \n"}, {"code": "public static MultiSegmentPowerLawBipartiteGraph buildRandomMultiSegmentBipartiteGraph ( int maxNumSegments , int maxNumEdgesPerSegment , int leftSize , int rightSize , double edgeProbability , Random random ) { \n\tMultiSegmentPowerLawBipartiteGraph multiSegmentPowerLawBipartiteGraph = new MultiSegmentPowerLawBipartiteGraph ( maxNumSegments , maxNumEdgesPerSegment , leftSize / NUM00 , ( int ) ( rightSize * edgeProbability / NUM00 ) , NUM00 , rightSize / NUM00 , ( int ) ( leftSize * edgeProbability / NUM00 ) , NUM00 , new IdentityEdgeTypeMask $F72 , new NullStatsReceiver $F72 ) ; \n\tfor ( $F119 ( i , leftSize ) ) { \n\t\tfor ( $F119 ( j , rightSize ) ) { \n\t\t\tif ( random . nextDouble ( ) < edgeProbability ) { \n\t\t\t\tmultiSegmentPowerLawBipartiteGraph . addEdge ( i , j , $F19905 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn multiSegmentPowerLawBipartiteGraph ; \n\t} \n"}, {"code": "public static String execute ( String command ) { \n\t$F298538 ( SubprocessUttility , command ) } \n"}, {"code": "public synchronized void updateProgress ( final int value ) { \n\t$F9275 ( t , Thread ) final MyInteger v = mIndividualThreadProgress . get ( t ) ; \n\tif ( v == null ) { \n\t\tmIndividualThreadProgress . put ( t , new MyInteger ( value ) ) ; \n\t\t} \n\telse $F18283 ( v , value ) if ( value > mLastReportedProgress ) { \n\t\tint min = Integer . MAX_VALUE ; \n\t\tfor ( final MyInteger m : mIndividualThreadProgress . values ( ) ) { \n\t\t\tif ( m . getValue ( ) < min ) $F37892 ( min , m ) } \n\t\tif ( min > mLastReportedProgress ) { \n\t\t\tmLastReportedProgress = min ; \n\t\t\tDiagnostic . progress ( NUM00 + min + NUM00 + mName ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private ContextHandler createContextHandler ( String directory , boolean isInJar , File installRootDirectory , int expiresInSeconds ) { \n\tfinal ContextHandler contextHandler = new ContextHandler $F72 ; \n\tfinal ResourceHandler resourceHandler = new ExpiresResourceHandler ( expiresInSeconds ) ; \n\tfinal String directoryWithSlash = NUM00 + directory ; \n\tcontextHandler . setContextPath ( directoryWithSlash ) ; \n\tResource directoryResource = getDirectoryResource ( directory , isInJar , installRootDirectory ) ; \n\tdirectoryResource = new JsMinifyingResource ( directoryResource ) ; \n\tif ( isInJar ) { \n\t\tdirectoryResource = new CachingResource ( directoryResource , directoryWithSlash ) ; \n\t\t} \n\tresourceHandler . setBaseResource ( directoryResource ) ; \n\tif ( ! isInJar ) { \n\t\tresourceHandler . setMinMemoryMappedContentLength ( NUM00 ) ; \n\t\t} \n\tcontextHandler . setHandler ( resourceHandler ) ; \n\treturn contextHandler ; \n\t} \n"}, {"code": "public boolean startsWith ( java . lang . CharSequence prefix ) $F41330 ( startsWith , prefix ) "}, {"code": "private List < ContainerInitializer > jspInitializers $F72 { \n\tJettyJasperInitializer sci = new JettyJasperInitializer $F72 ; \n\tContainerInitializer initializer = new ContainerInitializer ( sci , null ) ; \n\tList < ContainerInitializer > initializers = new ArrayList < ContainerInitializer > $F72 ; \n\tinitializers . add ( initializer ) ; \n\treturn initializers ; \n\t} \n"}, {"code": "public static TempPath createDirectory $F72 throws IOException { \n\treturn wrap ( Files . createTempDirectory ( PREFIX ) ) ; \n\t} \n"}, {"code": "public static String toString ( int partition [ ] [ ] ) { \n\t$F83 ( sb ) $F84 ( sb ) for ( $F1139 ( i , partition ) ) { \n\t\tsb . append ( NUM00 + Arrays . toString ( partition [ i ] ) ) ; \n\t\t} \n\t$F84 ( sb ) $F92 ( sb ) } \n"}, {"code": "public static boolean isCategoryChildOf ( ServletRequest request , String parentProductCategoryId , String productCategoryId ) { \n\treturn isCategoryChildOf ( ( Delegator ) request . getAttribute ( NUM00 ) , ( LocalDispatcher ) request . getAttribute ( NUM00 ) , parentProductCategoryId , productCategoryId ) ; \n\t} \n"}, {"code": "$F1 public boolean input ( Instance instance ) { \n\t$F161885 ( getInputFormat ) $F62355 ( m_NewBatch , resetQueue , _BOOL ) push ( $F69871 ( instance ) ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public $F6877 listColumns ( String table ) throws DatabaseException { \n\t$F31169 ( result ) ResultSet rs = null ; \n\ttry { \n\t\t$F9236 ( dbm , connection ) rs = dbm . getColumns ( null , null , table , null ) ; \n\t\twhile $F1682 ( rs ) { \n\t\t\tresult . add ( rs . getString ( NUM00 ) ) ; \n\t\t\t} \n\t\t} \n\tcatch ( SQLException e ) { \n\t\tthrow new DatabaseException ( e ) ; \n\t\t} \n\tfinally $F31188 ( rs ) return result ; \n\t} \n"}, {"code": "public void addCreatedResource ( Location location , Resource resource ) { \n\tresourceList . add ( resource ) ; \n\tlocationToResourceMap . put ( location , resource ) ; \n\t} \n"}, {"code": "public void signalEvent $F72 { \n\tCollection < Semaphore > semaphores = _semaphores . values ( ) ; \n\tfor ( Semaphore semaphore : semaphores ) { \n\t\t$F33833 ( semaphore ) semaphores . remove ( semaphore ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public boolean equals ( Object obj ) { \n\t$F3627 ( obj , this , _BOOL ) if ( ! ( obj instanceof KeyedObjects ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tKeyedObjects that = ( KeyedObjects ) obj ; \n\tint count = getItemCount ( ) ; \n\tif ( count != that . getItemCount ( ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tfor ( $F119 ( i , count ) ) { \n\t\tComparable k1 = getKey ( i ) ; \n\t\tComparable k2 = that . getKey ( i ) ; \n\t\t$F3067 ( k1 , k2 , _BOOL ) Object o1 = getObject ( i ) ; \n\t\tObject o2 = that . getObject ( i ) ; \n\t\tif ( o1 == null ) $F181246 ( o2 , _BOOL ) else { \n\t\t\t$F3067 ( o1 , o2 , _BOOL ) } \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected boolean isQuorumMaintained $F72 { \n\tif ( nodeCount == NUM00 ) $F53787 ( log , _BOOL ) int quorumNodeCnt = nodeCount / NUM00 + NUM00 ; \n\tCoordinatorClient coordinatorClient = coordinator . getCoordinatorClient ( ) ; \n\tList < Service > allActiveDbsvcs = coordinatorClient . locateAllSvcsAllVers ( Constants . DBSVC_NAME ) ; \n\t$F24645 ( otherActiveDbsvcIds ) String mySvcId = coordinator . getMySvcId ( ) ; \n\tString localDbSvcId = NUM00 + mySvcId . substring ( mySvcId . lastIndexOf ( NUM00 ) ) ; \n\tfor ( Service activeDbsvc : allActiveDbsvcs ) { \n\t\tif ( ! $F140091 ( localDbSvcId , activeDbsvc ) ) $F42097 ( otherActiveDbsvcIds , activeDbsvc ) } \n\t$F21153 ( log , otherActiveDbsvcIds , quorumNodeCnt ) boolean isMaintained = otherActiveDbsvcIds . size ( ) >= quorumNodeCnt ; \n\tif ( ! isMaintained ) $F22715 ( log ) return isMaintained ; \n\t} \n"}, {"code": "public static void scheduleNextAlarm ( Context context ) { \n\tscheduleNextAlarm ( context , AlertUtils . createAlarmManager ( context ) , REMINDER_QUERY_BATCH_SIZE , System . currentTimeMillis ( ) ) ; \n\t} \n"}, {"code": "public void requestStop $F72 $F24242 ( stopRequested , _BOOL ) "}, {"code": "public void test_engineCreateSSLEngine_02 $F72 { \n\t$F2027 invalid_port = { \n\t\tInteger . MIN_VALUE , - NUM00 , - NUM00 , NUM00 , Integer . MAX_VALUE } \n\t; \n\tSSLContextSpiImpl ssl = new SSLContextSpiImpl $F72 ; \n\ttry { \n\t\tSSLEngine sleng = ssl . engineCreateSSLEngine ( NUM00 , NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F132298 ( str , re , fail ) $F132299 ( fail , e ) for ( $F1139 ( i , invalid_port ) ) { \n\t\ttry { \n\t\t\tSSLEngine sleng = ssl . engineCreateSSLEngine ( NUM00 , invalid_port [ i ] ) ; \n\t\t\tfail ( NUM00 ) ; \n\t\t\t} \n\t\t$F72499 } \n\t} \n"}, {"code": "$F28183 public static $F4203 $F10809 join ( IntFunction < $F10809 > arrayFunction , $F10809 ... arrays ) { \n\tif $F9634 ( arrays ) { \n\t\treturn arrayFunction . apply ( NUM00 ) ; \n\t\t} \n\tif $F9634 ( arrays ) $F3262 ( arrays ) if $F9634 ( arrays ) { \n\t\treturn join ( $F156480 ( arrayFunction , arrays ) ) ; \n\t\t} \n\t$F10809 notNull = null ; \n\tint finalSize = NUM00 ; \n\tint nullArrays = NUM00 ; \n\t$F5675 list = new $F201 $F28143 ( arrays ) ; \n\tfor ( $F10809 array : arrays ) { \n\t\tif ( ( array == null ) || $F9634 ( array ) ) { \n\t\t\tnullArrays ++ ; \n\t\t\t} \n\t\telse { \n\t\t\tnotNull = array ; \n\t\t\tfinalSize += array . length ; \n\t\t\tCollections . addAll ( list , array ) ; \n\t\t\t} \n\t\t} \n\tif ( nullArrays == arrays . length ) { \n\t\treturn arrayFunction . apply ( NUM00 ) ; \n\t\t} \n\tif ( nullArrays == $F33765 ( arrays ) ) { \n\t\treturn notNull ; \n\t\t} \n\treturn list . toArray ( arrayFunction . apply ( list . size ( ) ) ) ; \n\t} \n"}, {"code": "private static $F2689 splitPath ( RelaxedURL url ) { \n\t$F2695 ( results ) $F2689 queries = normalizeQuery ( url . getQuery ( ) ) ; \n\t$F18793 ( results ) for ( String q : queries ) $F34171 ( results , q ) $F2689 paths = $F158868 ( splitPath , url ) ; \n\tresults . addAll ( paths ) ; \n\tfor ( String p : paths ) { \n\t\tfor ( String q : queries ) { \n\t\t\tresults . add ( p + NUM00 + q ) ; \n\t\t\t} \n\t\t} \n\treturn results ; \n\t} \n"}, {"code": "public ActionForward initBestSellingReport ( ActionMapping mapping , ActionForm form , HttpServletRequest request , HttpServletResponse response ) throws ApplicationException , OperationException { \n\tActionForward fwd = init ( mapping , form , request , response ) ; \n\t$F60730 ( fwd ) SellingItemForm reportForm = ( SellingItemForm ) form ; \n\tString timePeriod = ReportDateManager . TODAY ; \n\tString dateRange = Constants . FIXED_DATE_RANGE ; \n\treportForm . setTimePeriod ( timePeriod ) ; \n\treportForm . setDateRange ( dateRange ) ; \n\treportForm . setFromDate ( NUM00 ) ; \n\treportForm . setToDate ( NUM00 ) ; \n\treportForm . validate ( mapping , request ) ; \n\treturn mapping . findForward ( INIT_BEST_SELLING_REPORT ) ; \n\t} \n"}, {"code": "$F1 public void transactionBegin $F72 { \n\tfor ( BigdataGraphListener listener : listeners ) { \n\t\tlistener . transactionBegin ( ) ; \n\t\t} \n\t} \n"}, {"code": "public synchronized void add ( Job job ) { \n\tboolean canRunImmediately = dagManager . addJob ( job ) ; \n\tif ( canRunImmediately ) { \n\t\t$F630 ( LOG , job ) jobsToRun . add ( job ) ; \n\t\t} \n\tincrementSubmittedJobCount ( ) ; \n\t} \n"}, {"code": "public void reset ( String latex ) { \n\t$F4734 ( parseString , latex ) $F3935 ( len , parseString ) formula . root = null ; \n\tpos = NUM00 ; \n\tspos = NUM00 ; \n\tline = NUM00 ; \n\tcol = NUM00 ; \n\tgroup = NUM00 ; \n\tinsertion = _BOOL ; \n\tatIsLetter = NUM00 ; \n\tarrayMode = _BOOL ; \n\tignoreWhiteSpace = _BOOL ; \n\tfirstpass ( ) ; \n\t} \n"}, {"code": "public void addConstant ( ConstantPoolEntry entry ) { \n\tif ( entry instanceof Utf8Constant ) { \n\t\tUtf8Constant utf8 = ( Utf8Constant ) entry ; \n\t\t_utf8Map . put ( utf8 . getValue ( ) , utf8 ) ; \n\t\t} \n\t_entries . add ( entry ) ; \n\t} \n"}, {"code": "public void addData ( $F130209 data ) $F6988 ( this , data ) "}, {"code": "public final double infoGain $F72 { \n\treturn m_infoGain ; \n\t} \n"}, {"code": "static void writeRule ( ZoneOffsetTransitionRule rule , DataOutput out ) throws IOException { \n\tint month = rule . month ; \n\tbyte dom = rule . dom ; \n\tint dow = rule . dow ; \n\tLocalTime time = rule . time ; \n\tboolean timeEndOfDay = rule . timeEndOfDay ; \n\tTimeDefinition timeDefinition = rule . timeDefinition ; \n\tZoneOffset standardOffset = rule . standardOffset ; \n\tZoneOffset offsetBefore = rule . offsetBefore ; \n\tZoneOffset offsetAfter = rule . offsetAfter ; \n\tint timeSecs = ( timeEndOfDay ? NUM00 : time . toSecondOfDay ( ) ) ; \n\tint stdOffset = standardOffset . getTotalSeconds ( ) ; \n\tint beforeDiff = offsetBefore . getTotalSeconds ( ) - stdOffset ; \n\tint afterDiff = offsetAfter . getTotalSeconds ( ) - stdOffset ; \n\tint timeByte = ( timeSecs % NUM00 == NUM00 ? ( timeEndOfDay ? NUM00 : time . getHour ( ) ) : NUM00 ) ; \n\tint stdOffsetByte = ( stdOffset % NUM00 == NUM00 ? stdOffset / NUM00 + NUM00 : NUM00 ) ; \n\tint beforeByte = ( $F31339 ( beforeDiff ) ? beforeDiff / NUM00 : NUM00 ) ; \n\tint afterByte = ( $F31339 ( afterDiff ) ? afterDiff / NUM00 : NUM00 ) ; \n\tint dowByte = ( dow == - NUM00 ? NUM00 : dow ) ; \n\tint b = ( month < < NUM00 ) + ( $F33569 ( dom ) ) + ( dowByte < < NUM00 ) + ( timeByte < < NUM00 ) + ( timeDefinition . ordinal ( ) < < NUM00 ) + ( stdOffsetByte < < NUM00 ) + ( beforeByte < < NUM00 ) + afterByte ; \n\tout . writeInt ( b ) ; \n\tif ( timeByte == NUM00 ) $F33583 ( out , timeSecs ) if ( stdOffsetByte == NUM00 ) $F33583 ( out , stdOffset ) if ( beforeByte == NUM00 ) { \n\t\tout . writeInt ( offsetBefore . getTotalSeconds ( ) ) ; \n\t\t} \n\tif ( afterByte == NUM00 ) { \n\t\tout . writeInt ( offsetAfter . getTotalSeconds ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F66297 ( propertyConstant , mPropertyMask , mNameValuesHolder , count , i , nameValuesHolder , _BOOL ) "}, {"code": "$F1431 public static $F4203 TypeSerializer $F4203 deserialize $F97 ( bytes ) throws IOException { \n\t$F5950 ( bis , bytes ) ObjectInput in = null ; \n\ttry { \n\t\t$F14589 ( in , bis ) return ( TypeSerializer $F4203 ) in . readObject ( ) ; \n\t\t} \n\tcatch ( ClassNotFoundException e ) $F14525 finally { \n\t\t$F18072 ( bis ) try $F6399 ( in ) $F18071 } \n\t} \n"}, {"code": "public void testRemainderKnuthMultiDigitsByOneDigit $F72 { \n\tbyte $F3009 = { \n\t\tNUM00 , - NUM00 , NUM00 , - NUM00 , NUM00 , - NUM00 , NUM00 , NUM00 , - NUM00 } \n\t; \n\t$F88888 int aSign = NUM00 ; \n\tint bSign = - NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , - NUM00 , - NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F221355 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public void showSelectedNeuronProperties $F72 { \n\tNeuronDialog dialog = NeuronDialog . createNeuronDialog ( getSelectedNeurons ( ) ) ; \n\tdialog . setModalityType ( Dialog . ModalityType . MODELESS ) ; \n\t$F30070 ( dialog ) $F267779 ( dialog ) dialog . setVisible ( _BOOL ) ; \n\t} \n"}, {"code": "public void encrypt $F5474 ( in , length ) { \n\tint pos = NUM00 ; \n\twhile ( pos < in . length && pos < length ) { \n\t\tencryptBlock ( in , pos , length ) ; \n\t\tpos += blockSize ; \n\t\t} \n\t} \n"}, {"code": "private static boolean hasChangesOfChildren ( long last , PageContext pc , Class clazz ) { \n\tjava . lang . reflect . Method [ ] methods = clazz . getMethods ( ) ; \n\t$F33940 ( method ) $F749 params ; \n\tfor ( $F1139 ( i , methods ) ) { \n\t\tmethod = methods [ i ] ; \n\t\tif ( method . getDeclaringClass ( ) == clazz ) { \n\t\t\tif ( _hasChangesOfChildren ( pc , last , method . getReturnType ( ) ) ) return _BOOL ; \n\t\t\tparams = method . getParameterTypes ( ) ; \n\t\t\tfor ( $F1139 ( y , params ) ) { \n\t\t\t\tif ( _hasChangesOfChildren ( pc , last , params [ y ] ) ) return _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private WindowStuffHelper $F72 $F845 "}, {"code": "public static String removeSpecialChar ( String tempStr ) { \n\tif ( tempStr != null ) { \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\twhile $F56559 ( tempStr ) { \n\t\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\t\t} \n\t\ttempStr = replace ( tempStr , NUM00 , NUM00 , _BOOL , _BOOL ) ; \n\t\t} \n\treturn tempStr ; \n\t} \n"}, {"code": "public RunScriptAction ( NetworkPanel networkPanel ) { \n\tsuper ( NUM00 ) ; \n\tputValue ( SMALL_ICON , ResourceManager . getImageIcon ( NUM00 ) ) ; \n\tputValue ( SHORT_DESCRIPTION , NUM00 ) ; \n\tthis . networkPanel = networkPanel ; \n\t} \n"}, {"code": "public T webImage ( String url ) { \n\treturn webImage ( url , _BOOL , _BOOL , NUM00 ) ; \n\t} \n"}, {"code": "private Map < Installment , List < Receipt > > consolidateTuplesInstallmentWise ( final List < InstallmentReceiptTuple > tuples ) { \n\tfinal Map < Installment , List < Receipt > > consolidated = new HashMap < Installment , List < Receipt > > $F72 ; \n\tfor ( final InstallmentReceiptTuple t : tuples ) { \n\t\tList < Receipt > receiptsForInstallment = consolidated . get ( t . installment ) ; \n\t\tif ( receiptsForInstallment == null ) { \n\t\t\treceiptsForInstallment = new ArrayList < Receipt > $F72 ; \n\t\t\tconsolidated . put ( t . installment , receiptsForInstallment ) ; \n\t\t\t} \n\t\tif ( ! receiptsForInstallment . contains ( t . receipt ) ) receiptsForInstallment . add ( t . receipt ) ; \n\t\t} \n\t$F556 ( LOGGER , consolidated ) return consolidated ; \n\t} \n"}, {"code": "public static boolean isValidEmail ( String email ) { \n\tfinal String emailPattern = NUM00 ; \n\tMatcher matcher ; \n\t$F55449 ( pattern , Pattern , emailPattern ) matcher = pattern . matcher ( email ) ; \n\tif ( matcher != null ) $F36689 ( matcher ) else return _BOOL ; \n\t} \n"}, {"code": "public void add ( LineMergeDirectedEdge directedEdge ) $F207 ( directedEdges , directedEdge ) "}, {"code": "public static ApplicationXml parseApplicationXmlFromFile ( File file , EntityResolver entityResolver ) throws IOException , JDOMException { \n\tInputStream in = null ; \n\ttry { \n\t\t$F5335 ( in , file ) return parseApplicationXml ( in , entityResolver ) ; \n\t\t} \n\tfinally { \n\t\t$F141989 ( in ) } \n\t} \n"}, {"code": "public ChannelEntry newConnection ( ReadSelectorThread readHandler , SelectionKey key ) { \n\tSocketChannel channel = ( SocketChannel ) key . channel ( ) ; \n\tWriteSelectorThread writeHandler = _selectorManager . getWriteHandler ( key . channel ( ) ) ; \n\tSocket socket = channel . socket ( ) ; \n\tInetSocketAddress socketAddress = ( InetSocketAddress ) ( socket == null ? null : socket . getRemoteSocketAddress ( ) ) ; \n\tChannelEntry channelEntry = new ChannelEntry ( writeHandler , readHandler , key , socketAddress , this ) ; \n\tm_Channels . put ( channel , channelEntry ) ; \n\tif ( socketAddress != null ) $F1717 ( _clientToChannel , socketAddress , channelEntry ) if $F6456 ( _logger , Level ) _logger . log ( Level . FINE , NUM00 + channelEntry . getClientEndPointAddress ( ) + NUM00 ) ; \n\treturn channelEntry ; \n\t} \n"}, {"code": "$F45263 ( filename , extension , _BOOL , indexOfExtension , fileExt , getExtension ) "}, {"code": "public String report $F72 { \n\t$F280 ( report ) intHashTable = new int [ table . tableSize ] ; \n\tcalculateSlotUsage ( ) ; \n\tint max = maxCollisions ( ) ; \n\t$F65716 ( slotUsageCount , max ) for ( int i : intHashTable ) { \n\t\tslotUsageCount [ i ] ++ ; \n\t\t} \n\t$F286 ( report , numEntries ) report . append ( NUM00 + ( numEntries / ( NUM00 * table . tableSize ) + NUM00 ) ) ; \n\tfloat weightedAvg = NUM00 ; \n\tint numNonEmpty = NUM00 ; \n\t$F84 ( report ) for ( $F9993 ( j , max ) ) { \n\t\tif ( slotUsageCount [ j ] != NUM00 ) { \n\t\t\treport . append ( j + NUM00 + slotUsageCount [ j ] + NUM00 ) ; \n\t\t\tif ( j != NUM00 ) { \n\t\t\t\tweightedAvg += slotUsageCount [ j ] * j ; \n\t\t\t\tnumNonEmpty += slotUsageCount [ j ] ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tweightedAvg /= numNonEmpty ; \n\treport . append ( $F80356 ( minCollisions , max ) + weightedAvg ) ; \n\t$F92 ( report ) } \n"}, {"code": "public void addSubscriptionToStore $F2236 ( topic , clientId ) { \n\tfinal ClientTopicCouple subscription = new ClientTopicCouple ( clientId , topic ) ; \n\tif $F2200 ( topics , subscription ) { \n\t\tlogger . debug ( NUM00 + topic + NUM00 + clientId + NUM00 ) ; \n\t\tsubscriptionsStore . add ( subscription ) ; \n\t\ttopics . add ( topic ) ; \n\t\t} \n\t} \n"}, {"code": "public boolean zip ( String zipLocation , String toBeZippedName ) { \n\tboolean ret = _BOOL ; \n\tif ( verbose ) Debug . put ( NUM00 ) ; \n\t$F1705 ( toBeZipped , toBeZippedName ) if $F3428 ( toBeZipped ) { \n\t\ttry { \n\t\t\tFileUtils . saveZipFile ( zipLocation , toBeZipped ) ; \n\t\t\tret = _BOOL ; \n\t\t\t} \n\t\t$F35546 ( e ) $F12241 ( e ) } \n\treturn ret ; \n\t} \n"}, {"code": "private HashMap < Integer , Boolean > generateExpandedStateMap $F72 { \n\tHashMap < Integer , Boolean > $F8690 ( parentListItemHashMap ) ; \n\tint childCount = NUM00 ; \n\tObject listItem ; \n\tParentWrapper parentWrapper ; \n\t$F2199 ( listItemCount , mItemList ) for ( $F119 ( i , listItemCount ) ) { \n\t\tif $F26935 ( mItemList , i ) { \n\t\t\tlistItem = getListItem ( i ) ; \n\t\t\tif ( listItem instanceof ParentWrapper ) { \n\t\t\t\tparentWrapper = ( ParentWrapper ) listItem ; \n\t\t\t\tparentListItemHashMap . put ( i - childCount , parentWrapper . isExpanded ( ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tchildCount ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn parentListItemHashMap ; \n\t} \n"}, {"code": "public void addAudioPacketListener ( Listener < AudioPacket > listener ) $F232044 ( mAudioPacketBroadcaster , listener ) "}, {"code": "public static boolean decodeToFile ( String dataToDecode , String filename ) { \n\tboolean success = _BOOL ; \n\t$F87751 bos = null ; \n\ttry { \n\t\tbos = new $F87751 ( new java . io . FileOutputStream ( filename ) , Base64 . DECODE ) ; \n\t\tbos . write ( dataToDecode . getBytes ( PREFERRED_ENCODING ) ) ; \n\t\tsuccess = _BOOL ; \n\t\t} \n\tcatch ( $F3258 e ) { \n\t\tsuccess = _BOOL ; \n\t\t} \n\tfinally $F87767 ( bos ) return success ; \n\t} \n"}, {"code": "public DeltaCRLIndicatorExtension ( Boolean critical , Object value ) throws IOException { \n\tsuper ( PKIXExtensions . DeltaCRLIndicator_Id , critical . booleanValue ( ) , value , NAME , LABEL ) ; \n\t} \n"}, {"code": "public JavaEnvironment ( File javaPath ) { \n\tObjects . requireNonNull ( javaPath ) ; \n\tthis . javaPath = javaPath ; \n\t} \n"}, {"code": "private String printOFormat ( final long x ) { \n\tString sx = null ; \n\tif ( x == Long . MIN_VALUE ) { \n\t\tsx = NUM00 ; \n\t\t} \n\telse if ( x < NUM00 ) { \n\t\tfinal String $F161512 ( t , Long , x ) ; \n\t\tswitch $F45530 ( t ) { \n\t\t\t$F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) $F21995 ( sx , t ) } \n\t\t} \n\telse { \n\t\t$F161523 ( sx , Long , x ) } \n\treturn printOFormat ( sx ) ; \n\t} \n"}, {"code": "void addCallback ( JSObject source , String method , JSFunction callback , boolean async ) { \n\tString key = source . toJSPointer ( ) + NUM00 + method ; \n\tcallbacks . put ( key , callback ) ; \n\tString id = JSObject . ID_KEY ; \n\tString self = source . toJSPointer ( ) ; \n\tString js = self + NUM00 + method + NUM00 + NUM00 + self + NUM00 + method + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + id + NUM00 + NUM00 + jsLookupTable + NUM00 + jsLookupTable + NUM00 + id + NUM00 + jsLookupTable + NUM00 + jsLookupTable + NUM00 + id + NUM00 + NUM00 + NUM00 + jsLookupTable + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 + NUM00 ; \n\texec ( js , async ) ; \n\t} \n"}, {"code": "public void removeAllBlocksFromSection $F72 { \n\tfor ( $F2198 ( i , mBlockEntries ) ; \n\ti > NUM00 ; \n\ti -- ) { \n\t\tBlock b = mBlockEntries . get ( i - NUM00 ) ; \n\t\tif ( b != null ) { \n\t\t\tb . removePropertyChangeListener ( mBlockListeners . get ( i - NUM00 ) ) ; \n\t\t\t} \n\t\t$F18938 ( mBlockListeners , i ) $F18938 ( mBlockEntries , i ) } \n\tfor ( $F2198 ( i , mForwardEntryPoints ) ; \n\ti > NUM00 ; \n\ti -- ) { \n\t\t$F18938 ( mForwardEntryPoints , i ) } \n\tfor ( $F2198 ( i , mReverseEntryPoints ) ; \n\ti > NUM00 ; \n\ti -- ) { \n\t\t$F18938 ( mReverseEntryPoints , i ) } \n\tinitializationNeeded = _BOOL ; \n\t} \n"}, {"code": "public static void writeStringToFile ( Path file , String text ) throws IOException { \n\t$F96 buf = $F43004 ( text , StandardCharsets ) ; \n\tFiles . write ( file , buf ) ; \n\t} \n"}, {"code": "private static boolean isOperatorVariableAccess ( final INaviOperandTreeNode node ) { \n\tfinal List < INaviOperandTreeNode > children = node . getChildren ( ) ; \n\tif $F10471 ( children ) { \n\t\tfinal INaviOperandTreeNode child0 = children . get ( NUM00 ) ; \n\t\tfinal INaviOperandTreeNode child1 = children . get ( NUM00 ) ; \n\t\treturn isVariable ( child0 ) ^ isVariable ( child1 ) ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void onValueSelected $F39830 ( pickerIndex , newValue , autoAdvance ) { \n\tif ( pickerIndex == HOUR_INDEX ) { \n\t\tsetHour ( newValue , _BOOL ) ; \n\t\t$F574 ( announcement , String , newValue ) if ( mAllowAutoAdvance && autoAdvance ) { \n\t\t\tsetCurrentItemShowing ( MINUTE_INDEX , _BOOL , _BOOL , _BOOL ) ; \n\t\t\tannouncement += NUM00 + mSelectMinutes ; \n\t\t\t} \n\t\telse { \n\t\t\t$F152671 ( mTimePicker , mHourPickerDescription , newValue ) } \n\t\tUtils . tryAccessibilityAnnounce ( mTimePicker , announcement ) ; \n\t\t} \n\telse if ( pickerIndex == MINUTE_INDEX ) { \n\t\tsetMinute ( newValue ) ; \n\t\t$F152671 ( mTimePicker , mMinutePickerDescription , newValue ) } \n\telse if ( pickerIndex == HALF_DAY_INDEX ) { \n\t\tupdateHalfDay ( newValue ) ; \n\t\t} \n\telse if ( pickerIndex == ENABLE_PICKER_INDEX ) { \n\t\t$F152676 ( isTypedTimeFullyLegal , mTypedTimes ) finishKbMode ( _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "public static final List < Geo > segmentNearPoly ( Geo s1 , Geo s2 , GeoArray r , double near ) { \n\t$F17900 ( rlen , r ) Geo pl0 = r . get ( rlen - NUM00 , new Geo $F72 ) ; \n\tGeo pl1 = new Geo $F72 ; \n\tList < Geo > list = null ; \n\tGeo check = new Geo $F72 ; \n\tfor ( $F119 ( j , rlen ) ) { \n\t\tr . get ( j , pl1 ) ; \n\t\tGeo ret = segmentsIntersectOrNear ( s1 , s2 , pl0 , pl1 , near , check ) ; \n\t\tif ( ret != null ) { \n\t\t\tif ( list == null ) { \n\t\t\t\tlist = new LinkedList < Geo > $F72 ; \n\t\t\t\t} \n\t\t\tlist . add ( ret ) ; \n\t\t\tcheck = new Geo $F72 ; \n\t\t\t} \n\t\tpl0 . initialize ( pl1 ) ; \n\t\t} \n\treturn list ; \n\t} \n"}, {"code": "public void addAction ( UpdateAction action ) { \n\tactionList . add ( action ) ; \n\tfor ( UpdateManagerListener listener : listeners ) { \n\t\tlistener . actionAdded ( action ) ; \n\t\t} \n\t} \n"}, {"code": "public void load ( DataInput rafIn ) throws $F120868 { \n\t$F5952 ( numIdx , rafIn ) $F5961 ( idxInterval , rafIn ) if ( idxInterval <= NUM00 ) { \n\t\tthrow new MaryConfigurationException $F580 ; \n\t\t} \n\t$F11125 ( bytePtrs , numIdx ) $F11125 ( timePtrs , numIdx ) int numBytesToRead = NUM00 * numIdx + NUM00 ; \n\t$F2175 ( data , numBytesToRead ) rafIn . readFully ( data ) ; \n\tDataInput bufIn = new DataInputStream $F24702 ( data ) ; \n\tfor ( $F119 ( i , numIdx ) ) { \n\t\tbytePtrs [ i ] = bufIn . readLong ( ) ; \n\t\ttimePtrs [ i ] = bufIn . readLong ( ) ; \n\t\tif ( i > NUM00 ) { \n\t\t\tif ( bytePtrs [ i ] < bytePtrs [ i - NUM00 ] || timePtrs [ i ] < timePtrs [ i - NUM00 ] ) { \n\t\t\t\tthrow new MaryConfigurationException $F580 ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tbufIn . readLong ( ) ; \n\tbufIn . readLong ( ) ; \n\t} \n"}, {"code": "public URL find ( String classname ) { \n\tString jarname = $F139654 ( classname ) ; \n\treturn thisClass . getResource ( jarname ) ; \n\t} \n"}, {"code": "public void signoff ( String uniqueID ) { \n\tDebug . message ( NUM00 , NUM00 + uniqueID + NUM00 ) ; \n\tcaches . remove ( uniqueID ) ; \n\tviewAttributeLists . remove ( uniqueID ) ; \n\ttimestamps . remove ( uniqueID ) ; \n\t} \n"}, {"code": "private String createNonCGSrdfPairStepsOnEmptyGroup ( $F81867 sourceDescriptors , $F81867 targetDescriptors , RemoteDirectorGroup group , $F33156 uriVolumeMap , String waitFor , Workflow workflow ) { \n\tStorageSystem system = dbClient . queryObject ( $F41797 , group . getSourceStorageSystemUri ( ) ) ; \n\tURI vpoolChangeUri = getVirtualPoolChangeVolume ( sourceDescriptors ) ; \n\t$F10635 ( log , vpoolChangeUri ) $F28584 sourceURIs = VolumeDescriptor . getVolumeURIs ( sourceDescriptors ) ; \n\t$F42093 ( targetURIs ) for ( URI sourceURI : sourceURIs ) { \n\t\tVolume source = uriVolumeMap . get ( sourceURI ) ; \n\t\tStringSet srdfTargets = source . getSrdfTargets ( ) ; \n\t\tfor ( String targetStr : srdfTargets ) { \n\t\t\t$F43989 ( targetURI , URI , targetStr ) targetURIs . add ( targetURI ) ; \n\t\t\t} \n\t\t} \n\tMethod createListMethod = createListReplicasMethod ( system . getId ( ) , sourceURIs , targetURIs , vpoolChangeUri , _BOOL ) ; \n\tMethod rollbackMethod = rollbackSRDFLinksMethod ( system . getId ( ) , sourceURIs , targetURIs , _BOOL ) ; \n\tString stepId = workflow . createStep ( CREATE_SRDF_ACTIVE_VOLUME_PAIR_STEP_GROUP , CREATE_SRDF_ACTIVE_VOLUME_PAIR_STEP_DESC , waitFor , system . getId ( ) , system . getSystemType ( ) , getClass ( ) , createListMethod , rollbackMethod , null ) ; \n\treturn stepId ; \n\t} \n"}, {"code": "public static Long downsamplerTimestamp ( Long millitimestamp , long windowSize ) { \n\treturn millitimestamp - ( millitimestamp % windowSize ) ; \n\t} \n"}, {"code": "$F60342 ( mSmallestWidthDp , mInPortrait ) "}, {"code": "$F1 public String toString $F72 { \n\tif $F6036 ( points ) $F70142 ( idx ) $F280 ( bf ) try { \n\t\t$F86403 ( bf , idx ) ListNode temp ; \n\t\tfor ( $F2277 ( i , points ) ) { \n\t\t\ttemp = points . get ( i ) ; \n\t\t\tif ( i == NUM00 ) { \n\t\t\t\tbf . append ( NUM00 + temp . idx ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tbf . append ( NUM00 + temp . idx ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1516 ( ex ) $F92 ( bf ) } \n"}, {"code": "public void error $F146212 ( e ) throws $F2253 { \n\t$F105671 ( formattedMsg , e ) SAXSourceLocator locator = getLocator ( ) ; \n\t$F1875 ( handler , m_stylesheetProcessor ) try { \n\t\thandler . error ( new TransformerException ( formattedMsg , locator ) ) ; \n\t\t} \n\t$F2262 ( te ) } \n"}, {"code": "private void putHead ( String key , TemplateSubPatternAssociation assoc ) { \n\tif ( key . equals ( PsuedoNames . PSEUDONAME_TEXT ) ) m_textPatterns = assoc ; \n\telse if ( key . equals ( PsuedoNames . PSEUDONAME_ROOT ) ) m_docPatterns = assoc ; \n\telse if ( key . equals ( PsuedoNames . PSEUDONAME_COMMENT ) ) m_commentPatterns = assoc ; \n\tm_patternTable . put ( key , assoc ) ; \n\t} \n"}, {"code": "public UnionPathIterator ( Compiler compiler , int opPos ) throws $F1872 { \n\tsuper ( ) ; \n\topPos = OpMap . getFirstChildPos ( opPos ) ; \n\tloadLocationPaths ( compiler , opPos , NUM00 ) ; \n\t} \n"}, {"code": "public IStatus run ( IProgressMonitor monitor ) throws InvocationTargetException { \n\tZipFile zipFile = null ; \n\tFileOutputStream fos = null ; \n\tBufferedOutputStream dest = null ; \n\tBufferedInputStream is = null ; \n\tjobStatus = Status . OK_STATUS ; \n\ttry { \n\t\tzipFile = new ZipFile ( archive ) ; \n\t\tmonitor . beginTask ( $F2989 ( archive ) , zipFile . size ( ) ) ; \n\t\tEnumeration < ? extends ZipEntry > entries = zipFile . entries ( ) ; \n\t\twhile $F1444 ( entries ) { \n\t\t\t$F223881 ( zipEntry , entries ) $F20605 ( currentEntry , zipEntry ) $F4453 ( destFile , targetDir , currentEntry ) $F4924 ( destinationParent , destFile ) if $F4926 ( zipEntry ) { \n\t\t\t\t$F1907 ( destinationParent ) is = new BufferedInputStream ( zipFile . getInputStream ( zipEntry ) ) ; \n\t\t\t\tint numBytesRead ; \n\t\t\t\tbyte $F75368 = new byte [ BUFSIZE ] ; \n\t\t\t\t$F10893 ( fos , destFile ) dest = new BufferedOutputStream ( fos , BUFSIZE ) ; \n\t\t\t\twhile ( ( numBytesRead = is . read ( bytes , NUM00 , BUFSIZE ) ) != - NUM00 ) $F29756 ( dest , bytes , numBytesRead ) $F1206 ( dest ) } \n\t\t\telse $F1908 ( destFile ) monitor . worked ( NUM00 ) ; \n\t\t\tif ( monitor . isCanceled ( ) ) { \n\t\t\t\tjobStatus = Status . CANCEL_STATUS ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\tif ( ! monitor . isCanceled ( ) ) { \n\t\t\tjobStatus = Status . OK_STATUS ; \n\t\t\t} \n\t\t} \n\tcatch ( ZipException ze ) { \n\t\tString errormsg = errorMessage ( NUM00 ) ; \n\t\tjobStatus = new Status ( Status . ERROR , CorePlugin . PLUGIN_ID , errormsg ) ; \n\t\tCorePluginLog . logError ( ze , errormsg ) ; \n\t\t} \n\tcatch ( IOException ioe ) { \n\t\tString errormsg = errorMessage ( ) ; \n\t\tjobStatus = new Status ( Status . ERROR , CorePlugin . PLUGIN_ID , errormsg ) ; \n\t\tCorePluginLog . logError ( ioe , errormsg ) ; \n\t\t} \n\tfinally { \n\t\ttry $F2728 ( zipFile , is , dest ) catch ( IOException ioe ) { \n\t\t\tString errormsg = errorMessage ( ) ; \n\t\t\tjobStatus = new Status ( Status . ERROR , CorePlugin . PLUGIN_ID , errormsg ) ; \n\t\t\tCorePluginLog . logError ( ioe , errormsg ) ; \n\t\t\t} \n\t\t} \n\treturn jobStatus ; \n\t} \n"}, {"code": "public int read ( String table , String key , $F2689 fields , HashMap < String , ByteIterator > result ) { \n\t$F25238 ( st , System ) int res = _db . read ( table , key , fields , result ) ; \n\t$F25238 ( en , System ) _measurements . measure ( NUM00 , $F90472 ( en , st ) ) ; \n\t_measurements . reportReturnCode ( NUM00 , res ) ; \n\treturn res ; \n\t} \n"}, {"code": "protected void errorMessage ( String msg ) throws IOException { \n\tString str = $F31144 ( msg , m_Tokenizer ) ; \n\tif ( m_Lines > NUM00 ) { \n\t\tint line = Integer . parseInt ( $F2897 ( str ) ) ; \n\t\tstr = str . replaceAll ( NUM00 , NUM00 + ( m_Lines + line - NUM00 ) ) ; \n\t\t} \n\t$F5614 ( str ) } \n"}, {"code": "public static void spooky4 ( final BitVector bv , final long prefixLength , final long seed , final $F2469 state , final $F2469 tuple ) { \n\tlong h0 , h1 , h2 , h3 ; \n\th0 = seed ; \n\th1 = seed ; \n\th2 = ARBITRARY_BITS ; \n\th3 = ARBITRARY_BITS ; \n\tlong pos ; \n\tif ( prefixLength >= NUM00 * Long . SIZE ) { \n\t\tfinal int p = NUM00 * ( int ) ( ( prefixLength - NUM00 * Long . SIZE ) / ( NUM00 * Long . SIZE ) ) ; \n\t\th0 = state [ p + NUM00 ] ; \n\t\th1 = state [ p + NUM00 ] ; \n\t\th2 = state [ p + NUM00 ] ; \n\t\th3 = state [ p + NUM00 ] ; \n\t\tpos = p * Long . SIZE + NUM00 * Long . SIZE ; \n\t\t} \n\telse pos = NUM00 ; \n\tlong remaining = prefixLength - pos ; \n\tif $F538437 ( remaining , Long ) { \n\t\t$F538441 ( h0 , bv , pos , Long ) $F538441 ( h1 , bv , pos , Long ) remaining -= NUM00 * Long . SIZE ; \n\t\tpos += NUM00 * Long . SIZE ; \n\t\t} \n\tif ( remaining > Long . SIZE ) { \n\t\t$F538441 ( h2 , bv , pos , Long ) h3 += bv . getLong ( pos + NUM00 * Long . SIZE , prefixLength ) ; \n\t\t} \n\telse if ( remaining > NUM00 ) { \n\t\th2 += bv . getLong ( pos , prefixLength ) ; \n\t\t} \n\telse { \n\t\th2 += ARBITRARY_BITS ; \n\t\th3 += ARBITRARY_BITS ; \n\t\t} \n\th0 += prefixLength ; \n\th3 ^= h2 ; \n\t$F100868 ( h2 , Long ) h3 += h2 ; \n\th0 ^= h3 ; \n\t$F100868 ( h3 , Long ) h0 += h3 ; \n\th1 ^= h0 ; \n\t$F100868 ( h0 , Long ) h1 += h0 ; \n\th2 ^= h1 ; \n\t$F100868 ( h1 , Long ) h2 += h1 ; \n\th3 ^= h2 ; \n\t$F100868 ( h2 , Long ) h3 += h2 ; \n\th0 ^= h3 ; \n\t$F100868 ( h3 , Long ) h0 += h3 ; \n\th1 ^= h0 ; \n\t$F100868 ( h0 , Long ) h1 += h0 ; \n\th2 ^= h1 ; \n\t$F100868 ( h1 , Long ) h2 += h1 ; \n\th3 ^= h2 ; \n\t$F100868 ( h2 , Long ) h3 += h2 ; \n\th0 ^= h3 ; \n\t$F100868 ( h3 , Long ) h0 += h3 ; \n\th1 ^= h0 ; \n\t$F100868 ( h0 , Long ) h1 += h0 ; \n\tswitch ( tuple . length ) { \n\t\t$F447859 ( tuple , h3 ) $F447859 ( tuple , h2 ) $F447859 ( tuple , h1 ) $F447859 ( tuple , h0 ) } \n\t} \n"}, {"code": "public boolean hasNext $F72 { \n\tif ( deal > NUM00 ) $F881 ( sc ) return ( deal <= NUM00 ) ; \n\t} \n"}, {"code": "public void addIssuer ( X500Principal issuer ) { \n\t$F896 ( issuer ) $F30647 ( issuerNames ) String name = issuer . getName ( X500Principal . CANONICAL ) ; \n\t$F2201 ( issuerNames , name ) if ( issuerPrincipals == null ) { \n\t\tissuerPrincipals = new $F262894 $F716 ( issuerNames ) ; \n\t\t} \n\tint size = $F2281 ( issuerNames ) ; \n\tfor ( $F2198 ( i , issuerPrincipals ) ; \n\ti < size ; \n\ti ++ ) { \n\t\tissuerPrincipals . add ( new X500Principal $F73204 ( issuerNames , i ) ) ; \n\t\t} \n\tissuerPrincipals . add ( issuer ) ; \n\t} \n"}, {"code": "static String buildKeySelection ( int selectionCount ) { \n\t$F12914 ( list , selectionCount ) $F21017 ( Arrays , list ) return KEY_COLUMN + NUM00 + TextUtils . join ( NUM00 , list ) + NUM00 ; \n\t} \n"}, {"code": "private void filterNodeMap ( ConcurrentMap < String , $F33332 > map , final ClusterNode exclNode ) { \n\tfor ( $F3465 ( cacheName , registeredCaches ) ) { \n\t\tString maskedName = maskNull ( cacheName ) ; \n\t\twhile ( _BOOL ) { \n\t\t\t$F33332 oldNodes = map . get ( maskedName ) ; \n\t\t\tif $F4251 ( oldNodes ) $F597 $F33332 $F10252 ( newNodes , oldNodes ) ; \n\t\t\tif $F40971 ( newNodes , exclNode ) $F597 if ( map . replace ( maskedName , oldNodes , newNodes ) ) $F597 } \n\t\t} \n\t} \n"}, {"code": "public void storeDevice ( Device d ) { \n\t$F18748 ( isMaster ) $F8249 ( d ) $F25238 ( now , System ) writeUpdatedDeviceToStorage ( d ) ; \n\t$F198326 ( lastWriteTimes , d , now ) } \n"}, {"code": "public void testCreateElementNS1 $F72 throws Throwable { \n\tString namespaceURI = NUM00 ; \n\tString malformedName = NUM00 ; \n\tDocument doc ; \n\t$F236 ( doc , load , builder ) { \n\t\tboolean success = _BOOL ; \n\t\ttry { \n\t\t\tdoc . createElementNS ( namespaceURI , malformedName ) ; \n\t\t\t} \n\t\t$F28595 ( success , ex , DOMException ) assertTrue ( NUM00 , success ) ; \n\t\t} \n\t} \n"}, {"code": "private static void adjustAbs $F196672 ( array , lower , upper ) { \n\tint j , k ; \n\tdouble temp ; \n\tj = lower ; \n\tk = lower * NUM00 ; \n\twhile ( k <= upper ) { \n\t\tif ( ( k < upper ) && ( Math . abs ( array [ k - NUM00 ] ) < Math . abs ( array [ k ] ) ) ) { \n\t\t\tk += NUM00 ; \n\t\t\t} \n\t\tif ( Math . abs ( array [ j - NUM00 ] ) < Math . abs ( array [ k - NUM00 ] ) ) { \n\t\t\ttemp = array [ j - NUM00 ] ; \n\t\t\tarray [ j - NUM00 ] = array [ k - NUM00 ] ; \n\t\t\tarray [ k - NUM00 ] = temp ; \n\t\t\t} \n\t\tj = k ; \n\t\tk *= NUM00 ; \n\t\t} \n\t} \n"}, {"code": "public synchronized IAudioProcessor remove ( int index ) { \n\tIAudioProcessor processor = processors . remove ( index ) ; \n\tbuildFinalProcessor ( ) ; \n\treturn processor ; \n\t} \n"}, {"code": "LinkedList < TrieNode $F4203 > makeSuffixChain ( TrieNode $F4203 root , String suffix , T value ) { \n\tLinkedList < TrieNode $F4203 > $F19827 ( result ) ; \n\tString rootPrefix = root . getPrefix ( ) ; \n\tfor ( $F51283 ( i , suffixSize , suffix ) ; \n\ti <= suffixSize ; \n\ti ++ ) { \n\t\tString newPrefix = rootPrefix + suffix . substring ( NUM00 , i ) ; \n\t\tTrieNode $F4203 newNode = TrieNode . makeNode ( newPrefix ) ; \n\t\tresult . add ( newNode ) ; \n\t\troot . addChild ( newNode ) ; \n\t\troot = newNode ; \n\t\t} \n\troot . setValue ( value ) ; \n\treturn result ; \n\t} \n"}, {"code": "private static By byFromLocator ( String locator ) { \n\tif $F3106 ( locator ) { \n\t\treturn By . xpath ( locator ) ; \n\t\t} \n\tif $F3106 ( locator ) { \n\t\treturn By . id ( locator . replaceFirst ( NUM00 , NUM00 ) ) ; \n\t\t} \n\tif $F3106 ( locator ) { \n\t\treturn By . cssSelector ( locator . replaceFirst ( NUM00 , NUM00 ) ) ; \n\t\t} \n\tif $F3106 ( locator ) { \n\t\treturn By . xpath ( locator . replaceFirst ( NUM00 , NUM00 ) ) ; \n\t\t} \n\tif $F3106 ( locator ) { \n\t\treturn By . name ( locator . replaceFirst ( NUM00 , NUM00 ) ) ; \n\t\t} \n\tif $F3106 ( locator ) { \n\t\treturn By . linkText ( locator . replaceFirst ( NUM00 , NUM00 ) ) ; \n\t\t} \n\tif $F3106 ( locator ) { \n\t\treturn By . partialLinkText ( locator . replaceFirst ( NUM00 , NUM00 ) ) ; \n\t\t} \n\t$F11416 ( locator ) } \n"}, {"code": "private static void taskStarted ( ProgressThread task ) { \n\tfor ( ProgressThreadStateListener l : listener . getListeners ( ProgressThreadStateListener . class ) ) { \n\t\tl . progressThreadStarted ( task ) ; \n\t\t} \n\t} \n"}, {"code": "public static final void isCommentWF ( DOMErrorHandler errorHandler , DOMErrorImpl error , DOMLocatorImpl locator , String datavalue , boolean isXML11Version ) { \n\tif ( datavalue == null || $F1277 ( datavalue ) ) $F932 $F7782 ( dataarray , datavalue ) int datalength = dataarray . length ; \n\tif ( isXML11Version ) { \n\t\tint i = NUM00 ; \n\t\twhile ( i < datalength ) { \n\t\t\tchar c = dataarray [ i ++ ] ; \n\t\t\tif ( XML11Char . isXML11Invalid ( c ) ) { \n\t\t\t\t$F121844 ( XMLChar , c , i , datalength , c2 , dataarray ) String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . XML_DOMAIN , NUM00 , new Object [ ] { \n\t\t\t\t\tInteger . toString ( dataarray [ i - NUM00 ] , NUM00 ) } \n\t\t\t\t) ; \n\t\t\t\treportDOMError ( errorHandler , error , locator , msg , DOMError . SEVERITY_ERROR , NUM00 ) ; \n\t\t\t\t} \n\t\t\telse if ( c == NUM00 && i < datalength && dataarray [ i ] == NUM00 ) { \n\t\t\t\tString msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . XML_DOMAIN , NUM00 , null ) ; \n\t\t\t\treportDOMError ( errorHandler , error , locator , msg , DOMError . SEVERITY_ERROR , NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tint i = NUM00 ; \n\t\twhile ( i < datalength ) { \n\t\t\tchar c = dataarray [ i ++ ] ; \n\t\t\tif ( XMLChar . isInvalid ( c ) ) { \n\t\t\t\t$F121844 ( XMLChar , c , i , datalength , c2 , dataarray ) String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . XML_DOMAIN , NUM00 , new Object [ ] { \n\t\t\t\t\tInteger . toString ( dataarray [ i - NUM00 ] , NUM00 ) } \n\t\t\t\t) ; \n\t\t\t\treportDOMError ( errorHandler , error , locator , msg , DOMError . SEVERITY_ERROR , NUM00 ) ; \n\t\t\t\t} \n\t\t\telse if ( c == NUM00 && i < datalength && dataarray [ i ] == NUM00 ) { \n\t\t\t\tString msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . XML_DOMAIN , NUM00 , null ) ; \n\t\t\t\treportDOMError ( errorHandler , error , locator , msg , DOMError . SEVERITY_ERROR , NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void throwExceptionIfDestroyed ( String method ) throws DeepstreamRecordDestroyedException { \n\tif ( this . isDestroyed ) { \n\t\tthrow new DeepstreamRecordDestroyedException ( method ) ; \n\t\t} \n\t} \n"}, {"code": "public void upload ( final InputStream in , String artifact , String version , String fileName , Properties props ) throws IOException { \n\tprops . put ( FILE_NAME_PROPERTY , fileName ) ; \n\tprops . put ( VERSION_PROPERTY , version ) ; \n\tprops . put ( ARTIFACT_PROPERTY , artifact ) ; \n\tstoreProperties ( artifact , version , props ) ; \n\ttry ( OutputStream out = newOutputStream ( getArtifact ( artifact , version , fileName ) ) ) { \n\t\tIOUtils . copyLarge ( in , out ) ; \n\t\t} \n\t$F3229 ( in ) } \n"}, {"code": "static String escapeBytes ( final ByteString input ) { \n\tfinal StringBuilder $F133525 ( builder , input ) ; \n\tfor ( $F2277 ( i , input ) ) { \n\t\tfinal byte b = input . byteAt ( i ) ; \n\t\tswitch ( b ) { \n\t\t\t$F167274 ( builder ) $F2999 ( builder ) $F2999 ( builder ) $F2999 ( builder ) $F2999 ( builder ) $F2999 ( builder ) $F167274 ( builder ) $F2999 ( builder ) $F2999 ( builder ) $F2999 ( builder ) $F1267 if ( b >= NUM00 ) $F46352 ( builder , b ) else { \n\t\t\t\t$F84 ( builder ) builder . append ( ( char ) ( NUM00 + $F97528 ( b ) ) ) ; \n\t\t\t\tbuilder . append ( ( char ) ( NUM00 + $F97528 ( b ) ) ) ; \n\t\t\t\tbuilder . append ( ( char ) ( NUM00 + ( b & NUM00 ) ) ) ; \n\t\t\t\t} \n\t\t\t$F597 } \n\t\t} \n\t$F92 ( builder ) } \n"}, {"code": "public void load $F72 throws IOException { \n\tif ( magicNumber == NUM00 ) { \n\t\ttry ( InputReaderLittleEndian ins = new InputReaderLittleEndian ( new FileInputStreamAdapter ( fileName ) ) ) { \n\t\t\t$F33039 ( magicNumber , ins ) if ( magicNumber != MAGIC1BER ) $F3575 $F33039 ( version , ins ) if ( version > DAA_VERSION ) $F3575 $F33039 ( diamondBuild , ins ) $F33039 ( dbSeqs , ins ) $F33039 ( dbSeqsUsed , ins ) $F33039 ( dbLetters , ins ) $F33039 ( flags , ins ) $F33039 ( queryRecords , ins ) $F5961 ( modeRank , ins ) $F5961 ( gapOpen , ins ) $F5961 ( gapExtend , ins ) $F5961 ( reward , ins ) $F5961 ( penalty , ins ) $F5961 ( reserved1 , ins ) $F5961 ( reserved2 , ins ) $F5961 ( reserved3 , ins ) $F216839 ( k , ins ) $F216839 ( lambda , ins ) $F216839 ( reserved4 , ins ) $F216839 ( reserved5 , ins ) for ( $F1139 ( i , scoreMatrix ) ) { \n\t\t\t\tscoreMatrix [ i ] = ( byte ) ins . read ( ) ; \n\t\t\t\t} \n\t\t\tscoreMatrixName = Basic . toString ( scoreMatrix ) ; \n\t\t\tfor ( $F1139 ( i , blockSize ) ) blockSize [ i ] = ins . readLong ( ) ; \n\t\t\tif $F41780 ( blockSize ) $F3575 for ( $F1139 ( i , blockTypeRank ) ) { \n\t\t\t\tblockTypeRank [ i ] = ( byte ) ins . read ( ) ; \n\t\t\t\tswitch ( BlockType . value ( blockTypeRank [ i ] ) ) { \n\t\t\t\t\tcase ref_names : if ( refNamesBlockIndex != - NUM00 ) $F3575 refNamesBlockIndex = i ; \n\t\t\t\t\t$F597 case ref_lengths : if ( refLengthsBlockIndex != - NUM00 ) $F3575 refLengthsBlockIndex = i ; \n\t\t\t\t\t$F597 case alignments : if ( alignmentsBlockIndex != - NUM00 ) $F3575 alignmentsBlockIndex = i ; \n\t\t\t\t\t$F597 } \n\t\t\t\t} \n\t\t\tif ( refNamesBlockIndex == - NUM00 ) $F3575 if ( refLengthsBlockIndex == - NUM00 ) $F3575 if ( alignmentsBlockIndex == - NUM00 ) $F3575 if ( refLengthsBlockIndex < refNamesBlockIndex ) $F3575 headerSize = ins . getPosition ( ) ; \n\t\t\tlnK = Math . log ( k ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private static $F18547 types ( Object ... values ) { \n\tif ( values == null ) { \n\t\treturn $F33934 ; \n\t\t} \n\t$F65070 ( result , values ) for ( $F1139 ( i , values ) ) { \n\t\tObject value = values [ i ] ; \n\t\tresult [ i ] = value == null ? NULL . class : value . getClass ( ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private final void countAll $F72 throws IOException { \n\tMultiDocValues . OrdinalMap ordinalMap ; \n\tif ( dv instanceof MultiDocValues . MultiSortedSetDocValues ) { \n\t\tordinalMap = ( ( MultiSortedSetDocValues ) dv ) . mapping ; \n\t\t} \n\telse { \n\t\tordinalMap = null ; \n\t\t} \n\tIndexReader origReader = state . getOrigReader ( ) ; \n\tfor ( LeafReaderContext context : origReader . leaves ( ) ) { \n\t\tLeafReader reader = context . reader ( ) ; \n\t\tSortedSetDocValues segValues = reader . getSortedSetDocValues ( field ) ; \n\t\t$F4322 ( segValues ) Bits liveDocs = reader . getLiveDocs ( ) ; \n\t\tif ( ordinalMap != null ) { \n\t\t\tfinal LongValues ordMap = ordinalMap . getGlobalOrds ( context . ord ) ; \n\t\t\tint numSegOrds = ( int ) segValues . getValueCount ( ) ; \n\t\t\t$F64664 ( segCounts , numSegOrds ) int docID ; \n\t\t\twhile ( ( docID = segValues . nextDoc ( ) ) != DocIdSetIterator . NO_MORE_DOCS ) { \n\t\t\t\tif ( liveDocs == null || liveDocs . get ( docID ) ) { \n\t\t\t\t\tint term = ( int ) segValues . nextOrd ( ) ; \n\t\t\t\t\twhile ( term != SortedSetDocValues . NO_MORE_ORDS ) { \n\t\t\t\t\t\tsegCounts [ term ] ++ ; \n\t\t\t\t\t\tterm = ( int ) segValues . nextOrd ( ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tfor ( $F119 ( ord , numSegOrds ) ) { \n\t\t\t\tint count = segCounts [ ord ] ; \n\t\t\t\tif ( count != NUM00 ) { \n\t\t\t\t\tcounts [ $F113095 ( ordMap , ord ) ] += count ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tint docID ; \n\t\t\twhile ( ( docID = segValues . nextDoc ( ) ) != DocIdSetIterator . NO_MORE_DOCS ) { \n\t\t\t\tif ( liveDocs == null || liveDocs . get ( docID ) ) { \n\t\t\t\t\tint term = ( int ) segValues . nextOrd ( ) ; \n\t\t\t\t\twhile ( term != SortedSetDocValues . NO_MORE_ORDS ) { \n\t\t\t\t\t\tcounts [ term ] ++ ; \n\t\t\t\t\t\tterm = ( int ) segValues . nextOrd ( ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void addToParent ( Element headerE ) throws Exception { \n\t$F48047 ( doc , headerE ) Element securityE = doc . createElementNS ( wsseNS , WSSEConstants . TAG_WSSE + NUM00 + WSSEConstants . TAG_SECURITYT ) ; \n\tsecurityE . setAttributeNS ( SOAPBindingConstants . NS_XML , WSSEConstants . TAG_XML_WSSE , wsseNS ) ; \n\theaderE . appendChild ( securityE ) ; \n\tDocument binaryTokenD = XMLUtils . toDOMDocument ( toString ( ) , debug ) ; \n\t$F9029 ( binaryTokenE , binaryTokenD ) securityE . appendChild ( doc . importNode ( binaryTokenE , _BOOL ) ) ; \n\t} \n"}, {"code": "public final static int skipSpaces $F16495 ( in , start ) { \n\tint pos = start ; \n\twhile ( pos < in . length ( ) && $F64107 ( in , pos ) ) { \n\t\tpos ++ ; \n\t\t} \n\treturn pos < in . length ( ) ? pos : - NUM00 ; \n\t} \n"}, {"code": "public void update $F72 { \n\tif ( amplitude > NUM00 ) { \n\t\t$F5740 ( elapsed , System , timestamp ) double delta = amplitude * Math . exp ( - elapsed / timeConstant ) ; \n\t\tif $F33322 ( Math , delta ) { \n\t\t\tviewpointNode . drag ( lastDx * delta , lastDy * delta ) ; \n\t\t\t} \n\t\telse { \n\t\t\tamplitude = NUM00 ; \n\t\t\tupdateLookAt ( ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public Assignment sample $F72 { \n\tif $F5973 ( samples ) { \n\t\t$F59615 ( selection , sampler , samples ) Assignment selected = samples . get ( selection ) ; \n\t\treturn selected ; \n\t\t} \n\telse { \n\t\t$F18143 ( log ) return new Assignment $F72 ; \n\t\t} \n\t} \n"}, {"code": "@ SneakyThrows public static X509Certificate readCertificate ( InputStream is ) { \n\treturn $F28048 ( CERT_FACTORY , is ) ; \n\t} \n"}, {"code": "public GuacamoleHTTPTunnelMap $F72 { \n\texecutor . scheduleAtFixedRate ( new TunnelTimeoutTask ( TUNNEL_TIMEOUT * NUM00 ) , TUNNEL_TIMEOUT , TUNNEL_TIMEOUT , TimeUnit . SECONDS ) ; \n\t} \n"}, {"code": "default B with ( String key , $F6969 value ) { \n\treturn with ( key , $F155021 ( value ) ) ; \n\t} \n"}, {"code": "private void rename ( Table table ) { \n\tif ( renameDefinitions != null ) { \n\t\tfor ( Column col : table . getAllColumns ( ) ) { \n\t\t\tString newColName = renameDefinitions . getNewColumnName ( table . getSchema ( ) , table . getName ( ) , col . getName ( ) ) ; \n\t\t\tif ( newColName != null ) col . setName ( newColName ) ; \n\t\t\t} \n\t\tString newTableName = renameDefinitions . getNewTableName ( table . getSchema ( ) , table . getName ( ) ) ; \n\t\tString newSchemaName = renameDefinitions . getNewSchemaName ( table . getSchema ( ) , table . getName ( ) ) ; \n\t\tif ( newTableName != null ) table . setTable ( newTableName ) ; \n\t\tif ( newSchemaName != null ) table . setSchema ( newSchemaName ) ; \n\t\t} \n\t} \n"}, {"code": "private void handleReadLastConfirmedError ( int rc ) { \n\tif ( BKException . Code . NoSuchLedgerExistsException == rc ) { \n\t\tif ( bkcNoLedgerExceptionsOnReadLAC . incrementAndGet ( ) > noLedgerExceptionOnReadLACThreshold ) { \n\t\t\tLOG . info ( NUM00 , new Object [ ] { \n\t\t\t\tfullyQualifiedName , currentLH , conf . getReadAheadNoSuchLedgerExceptionOnReadLACErrorThresholdMillis ( ) } \n\t\t\t) ; \n\t\t\t$F3223 ( bkcNoLedgerExceptionsOnReadLAC ) if ( closeCurrentLedgerHandle ( ) ) { \n\t\t\t\tnext . process ( BKException . Code . OK ) ; \n\t\t\t\t} \n\t\t\t$F665 } \n\t\telse { \n\t\t\tif $F8415 ( LOG ) { \n\t\t\t\tLOG . info ( NUM00 , new Object [ ] { \n\t\t\t\t\tfullyQualifiedName , currentLH , conf . getReadAheadWaitTime ( ) } \n\t\t\t\t) ; \n\t\t\t\t} \n\t\t\tschedule ( ReadAheadWorker . this , conf . getReadAheadWaitTime ( ) ) ; \n\t\t\t$F665 } \n\t\t} \n\telse if ( BKException . Code . OK != rc ) { \n\t\thandleException ( ReadAheadPhase . READ_LAST_CONFIRMED , rc ) ; \n\t\t$F665 } \n\t} \n"}, {"code": "public synchronized boolean put ( long fp ) { \n\tint index = ( int ) ( fp & this . mask ) ; \n\t$F2469 list = this . table [ index ] ; \n\tif ( list != null ) { \n\t\tint listlen = list . length ; \n\t\tfor ( $F119 ( i , listlen ) ) { \n\t\t\tif ( list [ i ] == fp ) return _BOOL ; \n\t\t\t} \n\t\t} \n\tif ( count >= threshold ) { \n\t\trehash ( ) ; \n\t\tindex = ( int ) ( fp & this . mask ) ; \n\t\tlist = this . table [ index ] ; \n\t\t} \n\tint len = $F60632 ( list ) ; \n\t$F2469 $F284494 ( newList , len ) ; \n\tif ( list != null ) $F135 ( System , list , newList , len ) newList [ len ] = fp ; \n\tthis . table [ index ] = newList ; \n\tthis . count ++ ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F18907 ( extOrdering ) "}, {"code": "public void applyLayout $F72 { \n\tlayout . setInitialLocation ( getPosition ( ) ) ; \n\tlayout . layoutNeurons ( getNeuronList ( ) ) ; \n\t} \n"}, {"code": "$F4562 ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , fuzzyThreshold , scaleFactor , isTouchEvent , deltaValue , currentScrollValue , scrollValue , HORIZONTAL , VERTICAL , mode , newScrollValue , PullToRefreshBase , Log , LOG_TAG , State , Math ) "}, {"code": "public int nice $F72 $F22645 ( Integer , fields ) "}, {"code": "float layerSize ( int p_76490_1_ ) { \n\tif ( ( float ) p_76490_1_ < ( float ) this . heightLimit * NUM00 ) $F7629 else { \n\t\tfloat f = ( float ) this . heightLimit / NUM00 ; \n\t\tfloat f1 = f - ( float ) p_76490_1_ ; \n\t\tfloat f2 = MathHelper . sqrt_float ( f * f - f1 * f1 ) ; \n\t\tif ( f1 == NUM00 ) { \n\t\t\tf2 = f ; \n\t\t\t} \n\t\telse if ( Math . abs ( f1 ) >= f ) $F1083 return f2 * NUM00 ; \n\t\t} \n\t} \n"}, {"code": "public static Method findStaticMethod ( $F6969 type , String name , $F41498 ( args ) ) throws NoSuchMethodException { \n\tMethod method = findMethod ( type , name , args ) ; \n\tif $F48024 ( Modifier , method ) { \n\t\tthrow new NoSuchMethodException ( NUM00 + name + NUM00 ) ; \n\t\t} \n\treturn method ; \n\t} \n"}, {"code": "private void fetchSearchServiceCardsFromServer ( String keyword , String categoryId ) { \n\tfinal $F2539 $F143413 ( params ) ; \n\tparams . put ( HttpConstants . LATITUDE , SharedPreferenceHelper . getString ( R . string . pref_latitude ) ) ; \n\tparams . put ( HttpConstants . LONGITUDE , SharedPreferenceHelper . getString ( R . string . pref_longitude ) ) ; \n\tparams . put ( HttpConstants . TYPE , HttpConstants . SearchType . SERVICE_CARD ) ; \n\tparams . put ( HttpConstants . GROUP_ID , categoryId ) ; \n\tparams . put ( HttpConstants . PER , NUM00 ) ; \n\tparams . put ( HttpConstants . RADIUS , NUM00 ) ; \n\tparams . put ( HttpConstants . TITLE , keyword ) ; \n\tRetroCallback retroCallback ; \n\tretroCallback = new RetroCallback ( this ) ; \n\tretroCallback . setRequestId ( HttpConstants . ApiResponseCodes . SEARCH_SERVICES ) ; \n\tretroCallbackList . add ( retroCallback ) ; \n\tparams . put ( HttpConstants . PAGE , NUM00 ) ; \n\tmYeloApi . getServiceCards ( params , retroCallback ) ; \n\tmSwipeRefreshLayout . setRefreshing ( _BOOL ) ; \n\t} \n"}, {"code": "public void addPhonenumber ( String aPhonenumber ) { \n\tif $F283026 ( mPhoneNumbers , aPhonenumber ) $F207 ( mPhoneNumbers , aPhonenumber ) } \n"}, {"code": "public static final String digitsAndPlusOnly ( Matcher matcher ) { \n\t$F83 ( buffer ) $F45144 ( matchingRegion , matcher ) for ( $F51284 ( i , size , matchingRegion ) ) { \n\t\t$F1280 ( character , matchingRegion , i ) if ( character == NUM00 || Character . isDigit ( character ) ) $F288 ( buffer , character ) } \n\t$F92 ( buffer ) } \n"}, {"code": "boolean compareMethods ( Method a , Method b ) { \n\tif ( ( a == null ) != ( b == null ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( a != null && b != null ) { \n\t\t$F3067 ( a , b , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "MarkerSegment findMarkerSegment ( int tag ) { \n\t$F10531 ( iter , markerSequence ) while $F2921 ( iter ) { \n\t\tMarkerSegment seg = ( MarkerSegment ) iter . next ( ) ; \n\t\tif ( seg . tag == tag ) { \n\t\t\treturn seg ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "private static Reader openInput ( String from ) { \n\ttry { \n\t\treturn CliUtils . reader ( from ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\t$F5197 ( log , e ) $F5194 ( System ) $F1274 } \n\t} \n"}, {"code": "public PublisherConcatArray $F4203 concatAdditionalSourceFirst ( $F40799 ( source ) ) { \n\tint n = array . length ; \n\t$F1431 $F40798 [ ] $F48543 ( newArray , n ) ; \n\t$F135 ( System , array , newArray , n ) newArray [ NUM00 ] = source ; \n\treturn new PublisherConcatArray $F200 ( delayError , newArray ) ; \n\t} \n"}, {"code": "protected void doPublish ( String tenantId , $F5675 items , String subscriber , int retryCount , long delay ) throws Exception { \n\tString data = mapper . writeValueAsString ( items ) ; \n\tTextMessage tm = session . createTextMessage ( data ) ; \n\tif ( tenantId != null ) { \n\t\ttm . setStringProperty ( NUM00 , tenantId ) ; \n\t\t} \n\tif ( subscriber != null ) { \n\t\ttm . setStringProperty ( NUM00 , subscriber ) ; \n\t\t} \n\ttm . setIntProperty ( NUM00 , retryCount ) ; \n\tif ( delay > NUM00 ) { \n\t\ttm . setLongProperty ( NUM00 , System . currentTimeMillis ( ) + delay ) ; \n\t\t} \n\tif $F14148 ( log , Level ) { \n\t\t$F150605 ( log , tm ) } \n\tproducer . send ( tm ) ; \n\t} \n"}, {"code": "$F1 public boolean eIsSet ( int featureID ) { \n\tswitch ( featureID ) { \n\t\tcase MappingPackage . ATTRIBUTE__NAME : $F6439 ( NAME_EDEFAULT , name ) case MappingPackage . ATTRIBUTE__VALUE : $F6439 ( VALUE_EDEFAULT , value ) } \n\t$F6444 ( super , featureID ) } \n"}, {"code": "protected void checkValid $F72 throws URIException { \n\tif ( ! ( equals ( _scheme , DEFAULT_SCHEME ) || _scheme == null ) ) { \n\t\tthrow new URIException ( URIException . PARSING , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public PrivateKeyUsageExtension ( Boolean critical , Object value ) throws CertificateException , IOException { \n\tthis . extensionId = PKIXExtensions . PrivateKeyUsage_Id ; \n\t$F77551 ( this , critical ) $F149380 ( this , value ) DerInputStream str = new DerInputStream ( this . extensionValue ) ; \n\tDerValue [ ] seq = str . getSequence ( NUM00 ) ; \n\tfor ( $F1139 ( i , seq ) ) { \n\t\tDerValue opt = seq [ i ] ; \n\t\tif ( opt . isContextSpecific ( TAG_BEFORE ) && ! opt . isConstructed ( ) ) { \n\t\t\tif ( notBefore != null ) { \n\t\t\t\tthrow new CertificateParsingException $F580 ; \n\t\t\t\t} \n\t\t\topt . resetTag ( DerValue . tag_GeneralizedTime ) ; \n\t\t\tstr = new DerInputStream $F87573 ( opt ) ; \n\t\t\tnotBefore = str . getGeneralizedTime ( ) ; \n\t\t\t} \n\t\telse if ( opt . isContextSpecific ( TAG_AFTER ) && ! opt . isConstructed ( ) ) { \n\t\t\tif ( notAfter != null ) { \n\t\t\t\tthrow new CertificateParsingException $F580 ; \n\t\t\t\t} \n\t\t\topt . resetTag ( DerValue . tag_GeneralizedTime ) ; \n\t\t\tstr = new DerInputStream $F87573 ( opt ) ; \n\t\t\tnotAfter = str . getGeneralizedTime ( ) ; \n\t\t\t} \n\t\telse $F3490 } \n\t} \n"}, {"code": "$F1 public $F37278 generatePeriods ( DateTimeUnit dateTimeUnit ) { \n\tCalendar cal = getCalendar ( ) ; \n\tdateTimeUnit . setMonth ( NUM00 ) ; \n\t$F37280 ( dateTimeUnit ) $F37282 ( periods , Lists ) $F10485 ( year , dateTimeUnit ) while ( dateTimeUnit . getYear ( ) == year ) { \n\t\t$F12366 ( periods , createPeriod , dateTimeUnit , cal ) dateTimeUnit = cal . plusMonths ( dateTimeUnit , NUM00 ) ; \n\t\t} \n\treturn periods ; \n\t} \n"}, {"code": "public static SecretKey createAESKey $F72 { \n\ttry { \n\t\t$F10310 ( kgen , KeyGenerator ) final int keySize = NUM00 ; \n\t\tkgen . init ( keySize ) ; \n\t\treturn kgen . generateKey ( ) ; \n\t\t} \n\tcatch ( final NoSuchAlgorithmException e ) $F302 ( e ) $F1274 } \n"}, {"code": "$F1 public void valueChange ( ValueChangeEvent e ) { \n\tString name = e . getPropertyName ( ) ; \n\tObject value = e . getNewValue ( ) ; \n\tlog . config ( name + NUM00 + value ) ; \n\t$F8249 ( value ) } \n"}, {"code": "$F1309 public static JSONObject parseJson ( String response ) throws JSONException , FacebookError { \n\tif $F3057 ( response ) { \n\t\tthrow new FacebookError $F580 ; \n\t\t} \n\t$F16931 ( response ) $F16933 ( json , response ) if $F16934 ( json ) { \n\t\tJSONObject error = json . getJSONObject ( NUM00 ) ; \n\t\tthrow new FacebookError ( error . getString ( NUM00 ) , error . getString ( NUM00 ) , NUM00 ) ; \n\t\t} \n\tif ( json . has ( NUM00 ) && json . has ( NUM00 ) ) { \n\t\tthrow new FacebookError ( json . getString ( NUM00 ) , NUM00 , Integer . parseInt ( json . getString ( NUM00 ) ) ) ; \n\t\t} \n\tif $F16934 ( json ) { \n\t\tthrow new FacebookError ( NUM00 , NUM00 , Integer . parseInt ( json . getString ( NUM00 ) ) ) ; \n\t\t} \n\tif $F16934 ( json ) { \n\t\tthrow new FacebookError $F16961 ( json ) ; \n\t\t} \n\tif $F16934 ( json ) { \n\t\tthrow new FacebookError $F16961 ( json ) ; \n\t\t} \n\treturn json ; \n\t} \n"}, {"code": "public SpyVersions loadVersions $F72 throws XMLException { \n\tsetLoading ( _BOOL ) ; \n\tfinal String urlString = propertyLoader . getProperty ( BasePropertyNames . VERSION_INFO_URL ) + NUM00 + currentRelease ; \n\ttry { \n\t\t$F23801 ( url , urlString ) final String xml = IOUtils . toString ( url . openStream ( ) ) ; \n\t\tversions = ( SpyVersions ) loadFromString ( xml ) ; \n\t\t} \n\tcatch ( IOException | NullPointerException e ) { \n\t\tthrow new XMLException ( NUM00 + urlString , e ) ; \n\t\t} \n\tsetLoading ( _BOOL ) ; \n\treturn versions ; \n\t} \n"}, {"code": "@ RequestMapping ( $F3144 , method = POST , produces = APPLICATION_JSON_VALUE ) public ResponseEntity < PageResponse < UserDTO > > findAll ( $F151143 PageRequestByExample < UserDTO > prbe ) throws URISyntaxException { \n\tPageResponse < UserDTO > pageResponse = userDTOService . findAll ( prbe ) ; \n\treturn new $F151149 ( pageResponse , new HttpHeaders $F72 , HttpStatus . OK ) ; \n\t} \n"}, {"code": "public void addFooterView ( View view ) $F36131 ( mFooterViews , view , notifyDataSetChanged ) "}, {"code": "public void addFirst ( String seq ) { \n\tqueue = seq + queue . substring ( pos ) ; \n\tpos = NUM00 ; \n\t} \n"}, {"code": "public boolean isReadOnly ( boolean useSessionStatus ) throws SQLException { \n\tif ( useSessionStatus && ! this . isClosed && versionMeetsMinimum ( $F25460 ) && ! getUseLocalSessionState ( ) && getReadOnlyPropagatesToServer ( ) ) { \n\t\tjava . sql . Statement stmt = null ; \n\t\tjava . sql . ResultSet rs = null ; \n\t\ttry { \n\t\t\ttry { \n\t\t\t\tstmt = getMetadataSafeStatement ( ) ; \n\t\t\t\t$F264240 ( rs , stmt ) if $F1682 ( rs ) { \n\t\t\t\t\treturn rs . getInt ( NUM00 ) != NUM00 ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tcatch ( SQLException ex1 ) { \n\t\t\t\tif ( ex1 . getErrorCode ( ) != MysqlErrorNumbers . ER_MUST_CHANGE_PASSWORD || getDisconnectOnExpiredPasswords ( ) ) { \n\t\t\t\t\tthrow SQLError . createSQLException ( NUM00 , SQLError . SQL_STATE_GENERAL_ERROR , ex1 , getExceptionInterceptor ( ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tfinally { \n\t\t\tif ( rs != null ) { \n\t\t\t\ttry $F881 ( rs ) $F15720 rs = null ; \n\t\t\t\t} \n\t\t\tif ( stmt != null ) { \n\t\t\t\ttry $F881 ( stmt ) $F15720 stmt = null ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn this . readOnly ; \n\t} \n"}, {"code": "public void testConsume $F72 { \n\tAtomicInteger $F72840 ( sum ) ; \n\t$F408697 p = basicPublisher ( ) ; \n\t$F159508 f = p . consume ( null ) ; \n\tint n = NUM00 ; \n\tfor ( $F50176 ( i , n ) ) p . submit ( i ) ; \n\t$F59 ( p ) $F14454 ( f ) assertEquals ( ( n * ( n + NUM00 ) ) / NUM00 , sum . get ( ) ) ; \n\t} \n"}, {"code": "public void exprSetParent ( ExpressionNode n ) { \n\tsuper . exprSetParent ( n ) ; \n\t$F2199 ( nArgs , m_argVec ) for ( $F119 ( i , nArgs ) ) { \n\t\t$F11427 ( arg , m_argVec , i ) arg . exprSetParent ( n ) ; \n\t\t} \n\t} \n"}, {"code": "public static void cleanDirectory ( File directory ) throws IOException $F189472 ( directory , message , files , exception , file , forceDelete , ioe ) "}, {"code": "public final boolean isRegistered $F72 { \n\treturn $F132005 ( canonicalName ) ; \n\t} \n"}, {"code": "private static DownscaleQuality addConstant ( String type ) { \n\tinit ( ) ; \n\tif $F1710 ( constList , type ) $F5754 ( type ) DownscaleQuality q = new DownscaleQuality ( type ) ; \n\tconstList . put ( type , q ) ; \n\treturn q ; \n\t} \n"}, {"code": "public void bail ( String message , boolean printUsageStatement ) { \n\tDebug . output ( message ) ; \n\t$F32367 ( printUsageStatement , printUsage ) $F5194 ( System ) } \n"}, {"code": "private void assertTimestampsEqualWithEpsilon ( long expected , long actual , int epsilon , String desc ) { \n\tassertTrue ( NUM00 + desc + NUM00 + epsilon + NUM00 + expected + NUM00 + actual , Math . abs ( actual - expected ) < epsilon ) ; \n\t} \n"}, {"code": "public SpiderSitemapXMLParser ( SpiderParam params ) { \n\tsuper ( ) ; \n\t$F826 ( params ) this . params = params ; \n\t} \n"}, {"code": "public boolean flush ( boolean deaccelerated ) ; \n"}, {"code": "public void addHop ( int id ) { \n\t$F2329 ( entities ) hopsNumber ++ ; \n\t$F269561 ( entities , Integer , id ) } \n"}, {"code": "protected $F8748 datasetIntegrity ( boolean nominalPredictor , boolean numericPredictor , boolean stringPredictor , boolean datePredictor , boolean relationalPredictor , boolean multiInstance , int classType , boolean predictorMissing , boolean classMissing ) { \n\tprint ( NUM00 ) ; \n\tprintAttributeSummary ( nominalPredictor , numericPredictor , stringPredictor , datePredictor , relationalPredictor , multiInstance , classType ) ; \n\tprint ( NUM00 ) ; \n\tint numTrain = getNumInstances ( ) , numClasses = NUM00 , missingLevel = NUM00 ; \n\t$F125783 ( result ) Instances train = null ; \n\tAssociator associator = null ; \n\ttry { \n\t\ttrain = makeTestDataset ( NUM00 , numTrain , nominalPredictor ? getNumNominal ( ) : NUM00 , numericPredictor ? getNumNumeric ( ) : NUM00 , stringPredictor ? getNumString ( ) : NUM00 , datePredictor ? getNumDate ( ) : NUM00 , relationalPredictor ? getNumRelational ( ) : NUM00 , numClasses , classType , multiInstance ) ; \n\t\tif ( missingLevel > NUM00 ) { \n\t\t\taddMissing ( train , missingLevel , predictorMissing , classMissing ) ; \n\t\t\t} \n\t\tassociator = AbstractAssociator . makeCopies ( getAssociator ( ) , NUM00 ) [ NUM00 ] ; \n\t\t} \n\tcatch ( Exception ex ) $F220112 ( ex ) try { \n\t\tInstances trainCopy = new Instances ( train ) ; \n\t\tassociator . buildAssociations ( trainCopy ) ; \n\t\tcompareDatasets ( train , trainCopy ) ; \n\t\tprintln ( NUM00 ) ; \n\t\tresult [ NUM00 ] = _BOOL ; \n\t\t} \n\tcatch ( Exception ex ) { \n\t\tprintln ( NUM00 ) ; \n\t\tresult [ NUM00 ] = _BOOL ; \n\t\tif ( m_Debug ) { \n\t\t\tprintln ( NUM00 ) ; \n\t\t\tprint ( NUM00 ) ; \n\t\t\t$F5354 ( println , ex ) println ( NUM00 ) ; \n\t\t\tprintln ( $F369 ( train ) ) ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F18907 ( mEventQueue ) "}, {"code": "public static $F117572 ( testPrimitiveInstantiation , _BOOL ) "}, {"code": "public void readEntries ( TableKelp table , InSegment reader , SegmentEntryCallback cb ) { \n\tTempBuffer tBuf = TempBuffer . createLarge ( ) ; \n\t$F160054 ( buffer , tBuf ) InStore sIn = reader . getStoreRead ( ) ; \n\t$F96 tableKey = new byte [ TableKelp . TABLE_KEY_SIZE ] ; \n\tfor ( int ptr = length ( ) - BLOCK_SIZE ; \n\tptr > NUM00 ; \n\tptr -= BLOCK_SIZE ) { \n\t\tsIn . read ( getAddress ( ) + ptr , buffer , NUM00 , buffer . length ) ; \n\t\tint index = NUM00 ; \n\t\tlong seq = BitsUtil . readLong ( buffer , index ) ; \n\t\tindex += NUM00 ; \n\t\tif ( seq != getSequence ( ) ) { \n\t\t\tlog . warning ( L . l ( NUM00 , seq , getSequence ( ) , Long . toHexString ( getAddress ( ) + ptr ) ) ) ; \n\t\t\t$F597 } \n\t\t$F198866 ( System , buffer , index , tableKey ) index += tableKey . length ; \n\t\tif $F1209 ( Arrays , tableKey , _tableKey ) { \n\t\t\tlog . warning ( L . l ( NUM00 , Hex . toShortHex ( tableKey ) , Hex . toShortHex ( _tableKey ) , Long . toHexString ( getAddress ( ) + ptr ) ) ) ; \n\t\t\t$F597 } \n\t\tint head = index ; \n\t\twhile ( head < BLOCK_SIZE && buffer [ head ] != NUM00 ) { \n\t\t\thead = readEntry ( table , buffer , head , cb , getAddress ( ) ) ; \n\t\t\t} \n\t\tboolean isCont = buffer [ head + NUM00 ] != NUM00 ; \n\t\t$F30724 ( isCont ) } \n\ttBuf . free ( ) ; \n\t} \n"}, {"code": "static int numberOfHosts ( $F305017 net2InitiatorsMap ) { \n\t$F66346 ( hostSet ) for ( $F15661 initiators : net2InitiatorsMap . values ( ) ) { \n\t\tfor ( Initiator init : initiators ) { \n\t\t\thostSet . add ( init . getHost ( ) ) ; \n\t\t\t} \n\t\t} \n\t$F1651 ( hostSet ) } \n"}, {"code": "public void addCertificates ( Store certStore ) throws CMSException { \n\tcerts . addAll ( CMSUtils . getCertificatesFromStore ( certStore ) ) ; \n\t} \n"}, {"code": "protected void processLob ( LobMetadata lob , DatabaseMapping mapping , MetadataClass referenceClass , boolean isForMapKey ) { \n\tlob . process ( mapping , this , referenceClass , isForMapKey ) ; \n\t} \n"}, {"code": "protected AttributesImpl startPrefixMapping ( Element element , NamespaceStack namespaceStack ) throws SAXException { \n\tAttributesImpl namespaceAttributes = null ; \n\tNamespace elementNamespace = element . getNamespace ( ) ; \n\tif ( ( elementNamespace != null ) && ! isIgnoreableNamespace ( elementNamespace , namespaceStack ) ) { \n\t\tnamespaceStack . push ( elementNamespace ) ; \n\t\tcontentHandler . startPrefixMapping ( elementNamespace . getPrefix ( ) , elementNamespace . getURI ( ) ) ; \n\t\tnamespaceAttributes = addNamespaceAttribute ( namespaceAttributes , elementNamespace ) ; \n\t\t} \n\tList < Namespace > declaredNamespaces = element . declaredNamespaces ( ) ; \n\tfor ( Namespace namespace : declaredNamespaces ) { \n\t\tif ( ! isIgnoreableNamespace ( namespace , namespaceStack ) ) { \n\t\t\tnamespaceStack . push ( namespace ) ; \n\t\t\tcontentHandler . startPrefixMapping ( namespace . getPrefix ( ) , namespace . getURI ( ) ) ; \n\t\t\tnamespaceAttributes = addNamespaceAttribute ( namespaceAttributes , namespace ) ; \n\t\t\t} \n\t\t} \n\treturn namespaceAttributes ; \n\t} \n"}, {"code": "$F41720 ( value , absMin , absMax , absValue , Math ) "}, {"code": "public void printStackTrace ( java . io . PrintWriter pw ) $F31329 ( rootCause , superString , super , pw ) "}, {"code": "private static DataFlavor [ ] convertToArray ( List < DataFlavor > dataFlavourList ) { \n\tDataFlavor [ ] array = new DataFlavor $F2313 ( dataFlavourList ) ; \n\tdataFlavourList . toArray ( array ) ; \n\treturn array ; \n\t} \n"}, {"code": "public void testChoiceEmptyIconErrorHandling $F72 { \n\tString xml = NUM00 ; \n\txml += createStartMissionXml ( NUM00 , NUM00 ) ; \n\txml += createStartChoiceMomentXml ( NUM00 , NUM00 , NUM00 , NUM00 ) ; \n\txml += createChoiceXml ( NUM00 , NUM00 , NUM00 , _BOOL , _BOOL , NUM00 ) ; \n\txml += createChoiceXml ( NUM00 , NUM00 , NUM00 , _BOOL , _BOOL , NUM00 ) ; \n\txml += createEndChoiceMomentXml ( ) ; \n\txml += createEndChoiceMomentXml ( ) ; \n\txml += createEndMissionXml ( ) ; \n\tUtils . logDebug ( TAG , xml ) ; \n\t$F217487 ( momentInputStream , xml ) mMission = new Mission ( mMissionData ) ; \n\tboolean didMissionParseFail = _BOOL ; \n\ttry { \n\t\tmMission . readMoments ( momentInputStream ) ; \n\t\t} \n\tcatch ( MissionParseException e ) $F25007 ( e , didMissionParseFail , _BOOL ) Assert . assertEquals ( _BOOL , didMissionParseFail ) ; \n\t} \n"}, {"code": "public static String translateAttribute ( String attributes ) throws IOException { \n\t$F5078 flags = strAttrToBooleanFlags ( attributes ) ; \n\t$F83 ( sb ) if ( flags [ READ_ONLY ] == YES ) $F84 ( sb ) else if ( flags [ READ_ONLY ] == NO ) $F84 ( sb ) if ( flags [ HIDDEN ] == YES ) $F84 ( sb ) else if ( flags [ HIDDEN ] == NO ) $F84 ( sb ) if ( flags [ SYSTEM ] == YES ) $F84 ( sb ) else if ( flags [ SYSTEM ] == NO ) $F84 ( sb ) if ( flags [ ARCHIVE ] == YES ) $F84 ( sb ) else if ( flags [ ARCHIVE ] == NO ) $F84 ( sb ) $F92 ( sb ) } \n"}, {"code": "public static int nextIndexId $F72 { \n\treturn msgIdx . getAndIncrement ( ) ; \n\t} \n"}, {"code": "private void fillFieldValues $F72 { \n\tif ( isCreationPanel ) { \n\t\tphrase . setText ( NUM00 + Hearing . DEFAULT_PHRASE ) ; \n\t\toutputAmount . setText ( NUM00 + Hearing . DEFAULT_OUTPUT_AMOUNT ) ; \n\t\t} \n\telse { \n\t\tphrase . setText ( NUM00 + hearingSensor . getPhrase ( ) ) ; \n\t\toutputAmount . setText ( NUM00 + hearingSensor . getOutputAmount ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean checkSecurityInfos ( String endpoint , Identity clientIdentity , List < SecurityInfo > securityInfos ) { \n\tif ( clientIdentity . isSecure ( ) ) { \n\t\tif $F4251 ( securityInfos ) { \n\t\t\t$F18942 ( LOG , endpoint ) return _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\tfor ( SecurityInfo securityInfo : securityInfos ) { \n\t\t\t\t$F24922 ( checkSecurityInfo , endpoint , clientIdentity , securityInfo , _BOOL ) } \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\telse if $F1032 ( securityInfos ) { \n\t\t$F18942 ( LOG , endpoint ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public boolean retainAll ( AbstractIntList other ) $F205711 ( other , size , _BOOL , setSize , limit , j , i , getQuick , setQuick , modified ) "}, {"code": "public static ArrayList < ByteString > byteArraysToStrings ( $F3511 byteArrays ) { \n\t$F1338 ( byteArrays ) ArrayList < ByteString > byteStrings = new ArrayList < ByteString > $F72 ; \n\tfor ( $F96 bytes : byteArrays ) { \n\t\tbyteStrings . add ( ByteString . of ( bytes ) ) ; \n\t\t} \n\treturn byteStrings ; \n\t} \n"}, {"code": "void addIndex ( IndexType type , $F3803 columnNames ) { \n\tIndexDefinition index = new IndexDefinition $F72 ; \n\tindex . indexName = tableName + NUM00 + indexes . size ( ) ; \n\tindex . columnNames = New . arrayList ( columnNames ) ; \n\tindex . type = type ; \n\tindexes . add ( index ) ; \n\t} \n"}, {"code": "public Builder withKeyStoreKeyPassword ( String keyStoreKeyPassword ) { \n\tproperties . setProperty ( NettyOptions . SSL_KEY_STORE_KEY_PASSWORD , Assert . notNull ( keyStoreKeyPassword , NUM00 ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "public ZookeeperStateMachineEnsemble ( CuratorFramework curatorClient , String basePath ) { \n\tthis ( curatorClient , basePath , _BOOL , DEFAULT_LOGSIZE ) ; \n\t} \n"}, {"code": "public static CustomShortcutSet createShortcut ( char ch ) { \n\t$F2544 ( mnemonic , Character , ch ) String shortcut = SystemInfo . isMac && SystemInfo . isJavaVersionAtLeast ( NUM00 ) ? NUM00 + mnemonic : NUM00 + mnemonic ; \n\t$F32358 ( CustomShortcutSet , shortcut ) } \n"}, {"code": "public void gc $F72 { \n\t$F58463 ( System ) } \n"}, {"code": "private Node deleteMin ( Node x ) { \n\tif ( x . left == null ) return x . right ; \n\tx . left = deleteMin ( x . left ) ; \n\tx . size = NUM00 + size ( x . left ) + size ( x . right ) ; \n\tx . height = NUM00 + Math . max ( height ( x . left ) , height ( x . right ) ) ; \n\treturn balance ( x ) ; \n\t} \n"}, {"code": "public static void resetCounters $F72 $F18712 ( errors , warnings ) "}, {"code": "public void write ( CeylonConfig config , File source , OutputStream out ) throws IOException { \n\tif $F7110 ( source ) { \n\t\tInputStream in = null ; \n\t\ttry { \n\t\t\t$F5335 ( in , source ) write ( config , in , out ) ; \n\t\t\t} \n\t\t$F34262 ( in ) } \n\telse { \n\t\tthrow new FileNotFoundException $F580 ; \n\t\t} \n\t} \n"}, {"code": "protected Map < TargetClass , List < Attribute . TypeCompound > > sift ( final Iterable < Attribute . TypeCompound > typeCompounds ) { \n\tfinal Map < TargetClass , List < Attribute . TypeCompound > > targetClassToCompound = new EnumMap $F200 ( TargetClass . class ) ; \n\tfor ( $F40424 ( targetClass , TargetClass ) ) { \n\t\ttargetClassToCompound . put ( targetClass , new ArrayList < TypeCompound > $F72 ) ; \n\t\t} \n\tfor ( final Attribute . TypeCompound typeCompound : typeCompounds ) { \n\t\tfinal TargetType typeCompoundTarget = typeCompound . position . type ; \n\t\tfinal List < Attribute . TypeCompound > destList ; \n\t\tif ( ElementAnnotationUtil . contains ( typeCompoundTarget , annotatedTargets ( ) ) ) { \n\t\t\tdestList = targetClassToCompound . get ( TargetClass . TARGETED ) ; \n\t\t\t} \n\t\telse if ( ElementAnnotationUtil . contains ( typeCompoundTarget , validTargets ( ) ) ) { \n\t\t\tdestList = targetClassToCompound . get ( TargetClass . VALID ) ; \n\t\t\t} \n\t\telse { \n\t\t\tdestList = targetClassToCompound . get ( TargetClass . INVALID ) ; \n\t\t\t} \n\t\tdestList . add ( typeCompound ) ; \n\t\t} \n\treturn targetClassToCompound ; \n\t} \n"}, {"code": "protected synchronized void updateLocation ( Point newLocn ) { \n\tprev = locn ; \n\tlocn = newLocn ; \n\tif ( Math . abs ( locn . x - prev . x ) > hysteresis || Math . abs ( locn . y - prev . y ) > hysteresis ) { \n\t\tif ( timer . isRunning ( ) ) $F5191 ( timer ) } \n\telse { \n\t\tif $F28174 ( timer ) $F2346 ( timer ) } \n\t} \n"}, {"code": "$F1 public int compareTo ( Value o ) { \n\tif ( o instanceof StringVal ) { \n\t\treturn str . compareTo ( ( ( StringVal ) o ) . str ) ; \n\t\t} \n\telse $F1083 } \n"}, {"code": "public void bind ( IntegerProperty property , int value ) { \n\t$F140642 ( isAchieved ) bind ( property . greaterThanOrEqualTo ( value ) ) ; \n\tBooleanBinding bb = property . greaterThanOrEqualTo ( value / NUM00 ) ; \n\tprogressListener = null ; \n\tbb . addListener ( progressListener ) ; \n\t} \n"}, {"code": "public void removeColumn ( Column c ) { \n\t$F12747 ( idx , m_columns , c ) $F6853 ( idx ) removeColumn ( idx ) ; \n\t} \n"}, {"code": "public synchronized void write ( String logData ) { \n\tif ( logEnabled ) { \n\t\thistData . append ( logData ) ; \n\t\t$F8797 ( histData ) $F8073 ( histData ) } \n\t} \n"}, {"code": "public void closeConnection $F72 { \n\ttry $F6399 ( m_connection ) catch ( final SQLException exception ) { \n\t\tNaviLogger . severe ( NUM00 , exception ) ; \n\t\t} \n\tm_connection = null ; \n\t} \n"}, {"code": "public StructEmBayesSearchEditor ( StructEmBayesSearchRunner semBayesEstWrapper ) { \n\tthis ( semBayesEstWrapper . getEstimatedBayesIm ( ) , semBayesEstWrapper . getDataSet ( ) ) ; \n\t} \n"}, {"code": "public void removeActionListener ( ActionListener listener ) { \n\tforwardProjectionButton . addActionListener ( listener ) ; \n\tbackProjectionButton . addActionListener ( listener ) ; \n\t} \n"}, {"code": "$F37597 ( tag , msg , args , sLevel , LEVEL_FATAL , String , Log ) "}, {"code": "boolean isLiteral ( int index ) { \n\tif ( isValidMask ( ) && index < string . length ( ) ) $F8314 ( literalMask , index ) return _BOOL ; \n\t} \n"}, {"code": "protected Granularity generateGranularity ( String granularity , GranularityParser granularityParser ) throws BadApiRequestException { \n\ttry { \n\t\treturn granularityParser . parseGranularity ( granularity ) ; \n\t\t} \n\tcatch ( GranularityParseException e ) { \n\t\tLOG . error ( UNKNOWN_GRANULARITY . logFormat ( granularity ) , granularity ) ; \n\t\tthrow new BadApiRequestException $F1783 ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public WordIterator $F72 { \n\t$F90366 ( this , Locale ) } \n"}, {"code": "$F1 public void close $F72 { \n\t$F39863 ( leaf ) ccMgr . releaseIndexLocks ( ) ; \n\tdirsMayBeUpdated = null ; \n\t} \n"}, {"code": "public void pushFile ( String local , String remote , ISyncProgressMonitor monitor ) throws SyncException , IOException , TimeoutException { \n\t$F1705 ( f , local ) if $F1906 ( f ) { \n\t\tthrow new SyncException ( SyncError . NO_LOCAL_FILE ) ; \n\t\t} \n\tif $F3444 ( f ) { \n\t\tthrow new SyncException ( SyncError . LOCAL_IS_DIRECTORY ) ; \n\t\t} \n\tmonitor . start ( $F5338 ( f ) ) ; \n\tdoPushFile ( local , remote , monitor ) ; \n\t$F5191 ( monitor ) } \n"}, {"code": "public String process ( Item seg ) throws ProcessException $F73165 ( segCodaCtype , seg ) "}, {"code": "public void resize ( int size ) { \n\tif ( buffer != null ) { \n\t\tif ( size >= NUM00 && size < buffer . size ( ) ) { \n\t\t\t$F40484 ( oldLastIndex , buffer ) int newLastIndex = size - NUM00 ; \n\t\t\tfor ( int i = oldLastIndex ; \n\t\t\ti > newLastIndex ; \n\t\t\ti -- ) $F106 ( buffer , i ) } \n\t\t} \n\telse { \n\t\tif ( size >= NUM00 && size < offsets . size ( ) ) { \n\t\t\t$F249632 ( offset , offsets , size ) byteCache . resize ( key , offset ) ; \n\t\t\t$F17804 newOffsets = new $F17804 ( size ) ; \n\t\t\tfor ( $F119 ( i , size ) ) $F62006 ( newOffsets , offsets , i ) offsets = newOffsets ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F195241 ( uint8 , hexString , Integer , low , high , result ) "}, {"code": "protected void sprint ( short shortField ) $F45719 ( sprint , String , shortField ) "}, {"code": "protected void initFromDir ( String prefix , File dir ) { \n\t$F5237 files ; \n\tfiles = dir . listFiles ( new ClassFileFilter $F72 ) ; \n\tfor ( File file : files ) { \n\t\tif ( prefix == null ) { \n\t\t\t$F12110 ( add , file ) } \n\t\telse { \n\t\t\tadd ( $F44940 ( prefix , file ) ) ; \n\t\t\t} \n\t\t} \n\tfiles = dir . listFiles ( new DirectoryFilter $F72 ) ; \n\tfor ( File file : files ) { \n\t\tif ( prefix == null ) { \n\t\t\tinitFromDir ( file . getName ( ) , file ) ; \n\t\t\t} \n\t\telse { \n\t\t\tinitFromDir ( $F44940 ( prefix , file ) , file ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void removeBandwidth ( String name ) { \n\tif ( name != null ) if ( bandwidthList != null ) { \n\t\tfor ( $F2277 ( i , bandwidthList ) ) { \n\t\t\tObject o = bandwidthList . elementAt ( i ) ; \n\t\t\tif ( o instanceof BandwidthField ) { \n\t\t\t\tBandwidthField b = ( BandwidthField ) o ; \n\t\t\t\ttry { \n\t\t\t\t\t$F14181 ( type , b ) if ( type != null ) { \n\t\t\t\t\t\tif $F1238 ( name , type ) $F106 ( bandwidthList , b ) } \n\t\t\t\t\t} \n\t\t\t\tcatch ( SdpParseException e ) $F845 } \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected static void succeed $F72 $F63967 ( System ) "}, {"code": "public static long now $F72 { \n\t$F21879 ( System ) } \n"}, {"code": "public static String collapseNewlines ( String argStr ) { \n\t$F12685 ( last , argStr ) $F280 ( argBuf ) for ( $F1088 ( cIdx , argStr ) ) { \n\t\t$F1280 ( ch , argStr , cIdx ) if ( ch != NUM00 || last != NUM00 ) { \n\t\t\targBuf . append ( ch ) ; \n\t\t\tlast = ch ; \n\t\t\t} \n\t\t} \n\t$F92 ( argBuf ) } \n"}, {"code": "LinkedList < TrieNode $F4203 > makeSuffixChain ( TrieNode $F4203 root , String suffix , T value ) { \n\tLinkedList < TrieNode $F4203 > $F19827 ( result ) ; \n\tString rootPrefix = root . getPrefix ( ) ; \n\tfor ( $F51283 ( i , suffixSize , suffix ) ; \n\ti <= suffixSize ; \n\ti ++ ) { \n\t\tString newPrefix = rootPrefix + suffix . substring ( NUM00 , i ) ; \n\t\tTrieNode $F4203 newNode = TrieNode . makeNode ( newPrefix ) ; \n\t\tresult . add ( newNode ) ; \n\t\troot . addChild ( newNode ) ; \n\t\troot = newNode ; \n\t\t} \n\troot . setValue ( value ) ; \n\treturn result ; \n\t} \n"}, {"code": "$F1 protected String generateJavadoc ( int index ) throws Exception $F9451 "}, {"code": "public Properties extractProperties ( Iterable < $F19317 > propSrc ) { \n\t$F2697 ( result ) for ( $F19317 entry : propSrc ) { \n\t\t$F3477 ( name , entry ) if ( isNamespacedProperty ( name ) ) { \n\t\t\t$F840 ( val , entry ) result . setProperty ( name , val ) ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public T removeLast $F72 { \n\tif $F6887 ( rows ) $F30606 ( rows ) return instance ( ) ; \n\t} \n"}, {"code": "public static void ensureVisible ( String componentName ) { \n\tif ( verbose ) $F47196 ( log , componentName ) ensureVisible ( findByName ( componentName ) ) ; \n\t} \n"}, {"code": "public char next $F72 { \n\treturn pos < in . length ( ) ? in . charAt ( pos ++ ) : NUM00 ; \n\t} \n"}, {"code": "public void endRepresentation $F72 { \n\tif ( ! representationProtectionsSet ) { \n\t\tif ( currentRepresentationProtections != null ) $F57005 ( Collections , currentRepresentationProtections , this ) representationProtections = currentRepresentationProtections ; \n\t\trepresentationProtectionsSet = _BOOL ; \n\t\t} \n\telse { \n\t\tif ( currentRepresentationProtections == null ) { \n\t\t\tAssertions . checkState ( representationProtections == null ) ; \n\t\t\t} \n\t\telse { \n\t\t\tCollections . sort ( currentRepresentationProtections , this ) ; \n\t\t\tAssertions . checkState ( currentRepresentationProtections . equals ( representationProtections ) ) ; \n\t\t\t} \n\t\t} \n\tcurrentRepresentationProtections = null ; \n\t} \n"}, {"code": "public StandardPieSectionLabelGenerator ( String labelFormat ) { \n\tthis ( labelFormat , NumberFormat . getNumberInstance ( ) , NumberFormat . getPercentInstance ( ) ) ; \n\t} \n"}, {"code": "public static CharSequence [ ] split ( CharSequence line , int delimiter ) { \n\tCharSequence [ ] tokens0 = split ( line , delimiter , N ) ; \n\tif ( tokens0 . length < N ) { \n\t\treturn tokens0 ; \n\t\t} \n\telse { \n\t\tCharSequence [ ] tokens1 = split ( tokens0 [ N - NUM00 ] , delimiter ) ; \n\t\tCharSequence [ ] tokens2 = new CharSequence $F102045 ( tokens0 , tokens1 ) ; \n\t\t$F12508 ( System , tokens0 , tokens2 ) System . arraycopy ( tokens1 , NUM00 , tokens2 , tokens0 . length - NUM00 , tokens1 . length ) ; \n\t\treturn tokens2 ; \n\t\t} \n\t} \n"}, {"code": "public CCTimer ( Object t , String s , float seconds ) { \n\ttarget = t ; \n\tselector = s ; \n\tinterval = seconds ; \n\telapsed = - NUM00 ; \n\ttry { \n\t\t$F20850 ( cls , target ) invocation = cls . getMethod ( s , Float . TYPE ) ; \n\t\t} \n\tcatch ( NoSuchMethodException e ) $F302 ( e ) } \n"}, {"code": "public Tuple read $F72 throws IOException { \n\ttry { \n\t\tMap fields = jsonTupleStream . next ( ) ; \n\t\tif ( fields == null ) { \n\t\t\t$F28017 ( m ) $F545 ( m , _BOOL ) return new Tuple ( m ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F28495 ( msg , fields ) if ( msg != null ) { \n\t\t\t\tHandledException ioException = new HandledException ( msg ) ; \n\t\t\t\tthrow ioException ; \n\t\t\t\t} \n\t\t\tif ( trace ) { \n\t\t\t\tfields . put ( NUM00 , this . baseUrl ) ; \n\t\t\t\t$F70196 ( slice , fields ) } \n\t\t\tif ( fieldMappings != null ) $F176272 ( fields , mapFields , fieldMappings ) return new Tuple ( fields ) ; \n\t\t\t} \n\t\t} \n\tcatch ( HandledException e ) { \n\t\tthrow new IOException ( NUM00 + this . baseUrl + NUM00 + e . getMessage ( ) ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new IOException ( NUM00 + this . baseUrl + NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "private String compute ( String left , double right , boolean isInteger ) { \n\tif ( left == null && Double . isNaN ( right ) ) $F1337 if ( isInteger && right == ( int ) right ) { \n\t\treturn $F81465 ( left ) + ( int ) right ; \n\t\t} \n\telse if $F28102 ( Double , right ) { \n\t\treturn $F81465 ( left ) + Tools . formatNumber ( right ) ; \n\t\t} \n\telse { \n\t\treturn $F81465 ( left ) + ( Double . isNaN ( right ) ? NUM00 : right ) ; \n\t\t} \n\t} \n"}, {"code": "public void removePropertyChangeListener ( final PropertyChangeListener listener ) $F9106 ( propertyChangeSupport , listener ) "}, {"code": "public void loadXML ( Node stepnode , List < DatabaseMeta > databases , Map < String , Counter > counters ) throws KettleXMLException { \n\ttry { \n\t\tthis . tabelName = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . outputRowSize = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . factDimLensString = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . tableName = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . databaseName = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . dimensionCount = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . noDictionaryDims = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . noDictionaryDimsMapping = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . complexDimensionCount = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . measureCount = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . updateMemberRequest = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . measureDataType = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . partitionID = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . segmentId = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\tthis . taskNo = XMLHandler . getTagValue ( stepnode , NUM00 ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new KettleXMLException ( NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "public final $F2027 hashSignature ( final $F2027 signature ) { \n\t$F4120 ( hash , stages ) int rows = signature . length / stages ; \n\tfor ( $F1139 ( i , signature ) ) { \n\t\tint stage = Math . min ( i / rows , stages - NUM00 ) ; \n\t\thash [ stage ] = ( int ) ( ( hash [ stage ] + ( long ) signature [ i ] * LARGE_PRIME ) % buckets ) ; \n\t\t} \n\treturn hash ; \n\t} \n"}, {"code": "void onConsumeFinished ( Purchase purchase , IabResult result ) ; \n"}, {"code": "public void cast ( final Type from , final Type to ) { \n\tif ( from != to ) { \n\t\tif ( from == Type . DOUBLE_TYPE ) { \n\t\t\tif ( to == Type . FLOAT_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . D2F ) ; \n\t\t\t\t} \n\t\t\telse if ( to == Type . LONG_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . D2L ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tmv . visitInsn ( Opcodes . D2I ) ; \n\t\t\t\tcast ( Type . INT_TYPE , to ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( from == Type . FLOAT_TYPE ) { \n\t\t\tif ( to == Type . DOUBLE_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . F2D ) ; \n\t\t\t\t} \n\t\t\telse if ( to == Type . LONG_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . F2L ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tmv . visitInsn ( Opcodes . F2I ) ; \n\t\t\t\tcast ( Type . INT_TYPE , to ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( from == Type . LONG_TYPE ) { \n\t\t\tif ( to == Type . DOUBLE_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . L2D ) ; \n\t\t\t\t} \n\t\t\telse if ( to == Type . FLOAT_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . L2F ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tmv . visitInsn ( Opcodes . L2I ) ; \n\t\t\t\tcast ( Type . INT_TYPE , to ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( to == Type . BYTE_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . I2B ) ; \n\t\t\t\t} \n\t\t\telse if ( to == Type . CHAR_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . I2C ) ; \n\t\t\t\t} \n\t\t\telse if ( to == Type . DOUBLE_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . I2D ) ; \n\t\t\t\t} \n\t\t\telse if ( to == Type . FLOAT_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . I2F ) ; \n\t\t\t\t} \n\t\t\telse if ( to == Type . LONG_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . I2L ) ; \n\t\t\t\t} \n\t\t\telse if ( to == Type . SHORT_TYPE ) { \n\t\t\t\tmv . visitInsn ( Opcodes . I2S ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void addTriggerGroupName ( String groupName ) throws JobPersistenceException , ResourceException { \n\taddRepoListName ( groupName , TRIGGER_GROUP_NAMES_RESOURCE_PATH , NUM00 ) ; \n\t} \n"}, {"code": "public String readString $F72 throws IOException { \n\tint firstByte = readByte ( ) ; \n\tint length = readInt ( firstByte , PREFIX_8_BITS ) ; \n\t$F2175 ( encoded , length ) bytesLeft -= length ; \n\tin . readFully ( encoded ) ; \n\t$F34259 ( encoded ) } \n"}, {"code": "private synchronized void clearTempFiles $F72 { \n\tif $F20074 ( tempFiles ) { \n\t\t$F10531 ( it , tempFiles ) File file = null ; \n\t\twhile $F2921 ( it ) { \n\t\t\tfile = ( File ) it . next ( ) ; \n\t\t\t$F1900 ( file ) } \n\t\t$F725 ( tempFiles ) } \n\t} \n"}, {"code": "private Bitmap readAndDecompressThumbnail ( File file ) { \n\ttry { \n\t\tif $F4012 ( file ) { \n\t\t\t$F4647 ( instream , file ) ReadableByteChannel bytechan = Channels . newChannel ( instream ) ; \n\t\t\tByteBuffer buff = ByteBuffer . allocateDirect ( $F5338 ( file ) ) ; \n\t\t\tif ( buff != null ) { \n\t\t\t\tbytechan . read ( buff ) ; \n\t\t\t\t$F59 ( instream ) $F23501 ( buff ) PDQImage pthumb = DecompressionService . decompressThumbnailImage ( buff ) ; \n\t\t\t\tif ( pthumb != null ) { \n\t\t\t\t\tBitmap bm = ConversionService . convertPDQImageToBitmap ( pthumb , _BOOL ) ; \n\t\t\t\t\t$F59 ( pthumb ) return bm ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F12241 ( ex ) $F1274 } \n"}, {"code": "public void testSubmitRunnable $F72 throws Throwable { \n\t$F25236 ( e ) PoolCleaner cleaner = null ; \n\ttry { \n\t\tcleaner = cleaner ( e ) ; \n\t\t$F44535 future = e . submit ( new NoOpRunnable $F72 ) ; \n\t\t$F80909 ( assertNull , future ) $F123690 ( assertTrue , future ) assertFalse ( future . isCancelled ( ) ) ; \n\t\t} \n\t$F14364 ( cleaner ) } \n"}, {"code": "public Rectangle2D shrink ( Rectangle2D area , Rectangle2D result ) { \n\tif ( result == null ) { \n\t\t$F1637 ( result ) ; \n\t\t} \n\tresult . setRect ( area . getX ( ) + this . left , area . getY ( ) + this . top , area . getWidth ( ) - this . left - this . right , area . getHeight ( ) - this . top - this . bottom ) ; \n\treturn result ; \n\t} \n"}, {"code": "public static String assertJQ ( SolrQueryRequest req , String ... tests ) throws Exception { \n\treturn assertJQ ( req , JSONTestUtil . DEFAULT_DELTA , tests ) ; \n\t} \n"}, {"code": "protected void buildAbsoluteStats ( String name , long value , long time ) throws InterruptedException { \n\tList < XYDataItem > stats = statsCollection . getStats ( name ) ; \n\tif ( stats == null ) { \n\t\tstats = statsCollection . newStats ( name , maxSeries ) ; \n\t\t} \n\telse { \n\t\tXYDataItem data = new XYDataItem ( time , value ) ; \n\t\tstatsCollection . lockForUpdate ( ) ; \n\t\ttry { \n\t\t\tstats . add ( data ) ; \n\t\t\thouseKeepStats ( stats ) ; \n\t\t\t} \n\t\tfinally { \n\t\t\tstatsCollection . releaseLock ( ) ; \n\t\t\t} \n\t\tif ( listeners != null ) { \n\t\t\tStatsCollectionEvent event = new StatsCollectionEvent ( name , data ) ; \n\t\t\tfor ( StatsCollectionListener listener : listeners ) { \n\t\t\t\tif $F34496 ( listener ) { \n\t\t\t\t\tlistener . statsCollected ( event ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public void run $F72 { \n\tamIActive = _BOOL ; \n\tString demHeader = null ; \n\tString streamHeadsHeader = null ; \n\tString elevationModifiedHeader = null ; \n\tString correctedDemHeader = null ; \n\tList < StreamHead > $F204 ( streamHeadList ) ; \n\tint counter = NUM00 ; \n\tfloat progress = NUM00 ; \n\t$F51364 ( args , showFeedback ) for ( $F1139 ( i , args ) ) { \n\t\tif ( i == NUM00 ) { \n\t\t\tdemHeader = args [ i ] ; \n\t\t\t} \n\t\telse if ( i == NUM00 ) { \n\t\t\tstreamHeadsHeader = args [ i ] ; \n\t\t\t} \n\t\telse if ( i == NUM00 ) { \n\t\t\televationModifiedHeader = args [ i ] ; \n\t\t\t} \n\t\telse if ( i == NUM00 ) { \n\t\t\tcorrectedDemHeader = args [ i ] ; \n\t\t\t} \n\t\telse if ( i == NUM00 ) { \n\t\t\tmaxRadius = Double . parseDouble ( args [ i ] ) ; \n\t\t\t} \n\t\t} \n\tif ( $F51374 ( demHeader , streamHeadsHeader ) || ( elevationModifiedHeader == null ) || ( correctedDemHeader == null ) ) $F3602 ( showFeedback ) try { \n\t\t$F90048 ( dem , demHeader ) $F90048 ( streamHeads , streamHeadsHeader ) numRows = dem . getNumberRows ( ) ; \n\t\tnumCols = dem . getNumberColumns ( ) ; \n\t\t$F51458 ( noData , dem ) gridRes = dem . getCellSizeX ( ) ; \n\t\televationModified = new WhiteboxRaster ( elevationModifiedHeader , NUM00 , demHeader , WhiteboxRaster . DataType . FLOAT , NUM00 ) ; \n\t\televationModified . setPreferredPalette ( NUM00 ) ; \n\t\televationModified . setDataScale ( WhiteboxRasterBase . DataScale . CONTINUOUS ) ; \n\t\televationModified . setZUnits ( NUM00 ) ; \n\t\tcorrectedDEM = new WhiteboxRaster ( correctedDemHeader , NUM00 , demHeader , WhiteboxRaster . DataType . FLOAT , NUM00 ) ; \n\t\tcorrectedDEM . setPreferredPalette ( NUM00 ) ; \n\t\tcorrectedDEM . setDataScale ( WhiteboxRasterBase . DataScale . CONTINUOUS ) ; \n\t\tcorrectedDEM . setZUnits ( NUM00 ) ; \n\t\tif ( streamHeads . getNumberColumns ( ) != numCols || streamHeads . getNumberRows ( ) != numRows ) $F3602 ( showFeedback ) updateProgress ( NUM00 , NUM00 ) ; \n\t\tfor ( $F119 ( row , numRows ) ) { \n\t\t\tfor ( $F119 ( col , numCols ) ) { \n\t\t\t\tif ( dem . getValue ( row , col ) != noData ) { \n\t\t\t\t\televationModified . setValue ( row , col , NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\televationModified . setValue ( row , col , noData ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t$F51521 ( cancelOp , cancelOperation ) $F90104 ( progress , row , numRows ) $F51526 ( updateProgress , progress ) } \n\t\tupdateProgress ( NUM00 , NUM00 ) ; \n\t\tfor ( $F119 ( row , numRows ) ) { \n\t\t\tfor ( $F119 ( col , numCols ) ) { \n\t\t\t\tif ( streamHeads . getValue ( row , col ) == NUM00 ) { \n\t\t\t\t\tstreamHeadList . add ( new StreamHead ( col , row , dem . getValue ( row , col ) ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t$F51521 ( cancelOp , cancelOperation ) $F90104 ( progress , row , numRows ) $F51526 ( updateProgress , progress ) } \n\t\tstreamHeadList = OrderStreamHeads ( streamHeadList ) ; \n\t\tupdateProgress ( NUM00 , NUM00 ) ; \n\t\tfor ( StreamHead streamHead : streamHeadList ) { \n\t\t\tCheckFlowPath ( streamHead . GetXCoord ( ) , streamHead . GetYCoord ( ) ) ; \n\t\t\tcounter = counter + NUM00 ; \n\t\t\t$F51521 ( cancelOp , cancelOperation ) progress = ( float ) ( NUM00 * counter / streamHeadList . size ( ) ) ; \n\t\t\t$F51526 ( updateProgress , progress ) } \n\t\tupdateProgress ( NUM00 , NUM00 ) ; \n\t\tfor ( $F119 ( row , numRows ) ) { \n\t\t\tfor ( $F119 ( col , numCols ) ) { \n\t\t\t\tif ( elevationModified . getValue ( row , col ) != noData ) { \n\t\t\t\t\tcorrectedDEM . setValue ( row , col , dem . getValue ( row , col ) - elevationModified . getValue ( row , col ) ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tcorrectedDEM . setValue ( row , col , noData ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t$F51521 ( cancelOp , cancelOperation ) $F90104 ( progress , row , numRows ) $F51526 ( updateProgress , progress ) } \n\t\t$F90114 ( elevationModified , getDescriptiveName ) $F90117 ( elevationModified ) $F90114 ( correctedDEM , getDescriptiveName ) $F90117 ( correctedDEM ) $F59 ( dem ) $F59 ( streamHeads ) $F59 ( elevationModified ) $F59 ( correctedDEM ) returnData ( correctedDemHeader ) ; \n\t\t} \n\tcatch ( Exception e ) $F51532 ( showFeedback , e ) $F51536 ( updateProgress , amIActive , _BOOL , myHost ) } \n"}, {"code": "protected void serialize ( String filename ) { \n\tclassifier . serializeClassifier ( filename ) ; \n\t} \n"}, {"code": "public static _Fields findByThriftId ( int fieldId ) { \n\tswitch ( fieldId ) { \n\t\t$F3366 return BEGIN_IN_BOTH ; \n\t\t$F3366 return NEWINT ; \n\t\t$F3366 return NEWBYTE ; \n\t\t$F3366 return NEWSHORT ; \n\t\t$F3366 return NEWLONG ; \n\t\t$F3366 return NEWDOUBLE ; \n\t\t$F3366 return NEWSTRUCT ; \n\t\t$F3366 return NEWLIST ; \n\t\t$F3366 return NEWSET ; \n\t\t$F3366 return NEWMAP ; \n\t\t$F3366 return NEW \"STRING\" ; \n\t\t$F3366 return END_IN_BOTH ; \n\t\t$F20809 } \n\t} \n"}, {"code": "public boolean isPartitionTag ( String field ) { \n\tif ( partitions == null || ( ! isTag ( field ) ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F28787 ( partition , partitions , field , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "protected Size2D arrangeFN ( BlockContainer container , Graphics2D g2 , RectangleConstraint constraint ) { \n\t$F150084 ( blocks , container ) Block b = ( Block ) blocks . get ( NUM00 ) ; \n\tSize2D s = b . arrange ( g2 , RectangleConstraint . NONE ) ; \n\t$F324 ( width , constraint ) Rectangle2D bounds = new $F1634 ( ( width - s . width ) / NUM00 , NUM00 , s . width , s . height ) ; \n\tb . setBounds ( bounds ) ; \n\treturn new Size2D ( ( width - s . width ) / NUM00 , s . height ) ; \n\t} \n"}, {"code": "private Object processExecute ( Statement proxy , Method method , $F131 args ) throws Throwable { \n\tlong startTime = logSlowQuery ? System . currentTimeMillis ( ) : NUM00 ; \n\ttry { \n\t\tif ( method . getName ( ) == NUM00 ) return newProxiedResultSet ( proxy , method , args ) ; \n\t\treturn targetInvoke ( method , args ) ; \n\t\t} \n\tfinally { \n\t\tif ( logSlowQuery ) logQuery ( proxy , args , startTime ) ; \n\t\t} \n\t} \n"}, {"code": "int boundedIndexOf ( String string , char search , int start , int end ) { \n\t$F204924 ( retValue , string , search , start ) $F55825 ( retValue , end ) return retValue ; \n\t} \n"}, {"code": "public int incr ( T k , int delta ) { \n\t$F99426 ( i , counts , k ) if ( i == null ) { \n\t\ti = NUM00 ; \n\t\t} \n\tint next = i . intValue ( ) + delta ; \n\tif ( next < NUM00 ) { \n\t\tthrow new java . lang . ArithmeticException $F72 ; \n\t\t} \n\tif ( next == NUM00 ) $F106 ( counts , k ) else { \n\t\tcounts . put ( k , i + delta ) ; \n\t\t} \n\treturn i ; \n\t} \n"}, {"code": "public void send ( final OscPacket thePacket , final TcpClient theClient ) { \n\ttheClient . send ( thePacket . getBytes ( ) ) ; \n\t} \n"}, {"code": "$F1 $F1431 public void keyTyped ( KeyEvent evt ) { \n\t$F23165 ( modifiers , evt ) char c = evt . getKeyChar ( ) ; \n\tif ( c != KeyEvent . CHAR_UNDEFINED && ( modifiers & InputEvent . ALT_MASK ) == NUM00 ) { \n\t\tif ( c >= NUM00 && c != NUM00 ) { \n\t\t\tKeyStroke keyStroke = KeyStroke . getKeyStroke ( Character . toUpperCase ( c ) ) ; \n\t\t\t$F16628 ( o , currentBindings , keyStroke ) if ( o instanceof Hashtable ) { \n\t\t\t\tcurrentBindings = ( Hashtable ) o ; \n\t\t\t\t$F665 } \n\t\t\telse if ( o instanceof ActionListener ) { \n\t\t\t\tcurrentBindings = bindings ; \n\t\t\t\texecuteAction ( ( ActionListener ) o , evt . getSource ( ) , String . valueOf ( c ) ) ; \n\t\t\t\t$F665 } \n\t\t\tcurrentBindings = bindings ; \n\t\t\tif ( grabAction != null ) $F14411 ( handleGrabAction , evt ) if ( repeat && Character . isDigit ( c ) ) { \n\t\t\t\trepeatCount *= NUM00 ; \n\t\t\t\trepeatCount += ( c - NUM00 ) ; \n\t\t\t\t$F665 } \n\t\t\texecuteAction ( INSERT_CHAR , evt . getSource ( ) , String . valueOf ( evt . getKeyChar ( ) ) ) ; \n\t\t\trepeatCount = NUM00 ; \n\t\t\trepeat = _BOOL ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static $F215161 fillInTheGaps ( $F215161 mappedClasses , MappingMode mode ) { \n\tfor ( $F3465 ( originalName , mappedClasses ) ) { \n\t\tmappedClasses = fillGap ( mappedClasses . get ( originalName ) , mappedClasses , mode ) ; \n\t\t} \n\treturn mappedClasses ; \n\t} \n"}, {"code": "private void readObject ( ObjectInputStream s ) throws $F6427 { \n\t$F6428 ( s ) if ( name == null ) { \n\t\tif ( types != null ) $F6433 } \n\telse { \n\t\ttry $F5795 ( check ) catch ( RuntimeException e ) { \n\t\t\trethrow ( e ) ; \n\t\t\t} \n\t\t} \n\tif $F171402 ( constraints ) $F6433 } \n"}, {"code": "public static Script createMultiSigInputScriptBytes ( $F4358 ( signatures ) ) { \n\tcheckArgument ( $F119129 ( signatures ) ) ; \n\tScriptBuilder builder = new ScriptBuilder $F72 ; \n\tbuilder . smallNum ( NUM00 ) ; \n\tfor ( $F96 signature : signatures ) builder . data ( signature ) ; \n\t$F17464 ( builder ) } \n"}, {"code": "public void deleteInstances $F23416 ( rowIndices ) { \n\tint i ; \n\tArrays . sort ( rowIndices ) ; \n\taddUndoPoint ( ) ; \n\tm_IgnoreChanges = _BOOL ; \n\tfor ( $F121270 ( i , rowIndices ) ) $F218373 ( deleteInstanceAt , rowIndices , i , _BOOL ) m_IgnoreChanges = _BOOL ; \n\tnotifyListener ( new TableModelEvent ( this , rowIndices [ NUM00 ] , $F8528 ( rowIndices ) , TableModelEvent . ALL_COLUMNS , TableModelEvent . DELETE ) ) ; \n\t} \n"}, {"code": "public synchronized < T extends EventListener > void add ( $F20474 t , T l ) { \n\t$F2329 ( l ) if $F78643 ( t , l ) $F20855 ( l , t ) if ( listenerList == NULL_ARRAY ) { \n\t\tlistenerList = $F40356 ( t , l ) ; \n\t\t} \n\telse { \n\t\tint i = listenerList . length ; \n\t\t$F131 $F133947 ( tmp , i ) ; \n\t\t$F135 ( System , listenerList , tmp , i ) tmp [ i ] = t ; \n\t\ttmp [ i + NUM00 ] = l ; \n\t\tlistenerList = tmp ; \n\t\t} \n\t} \n"}, {"code": "public static void gc2gc ( double c1 [ ] , int m1 , double g1 , double c2 [ ] , int m2 , double g2 ) { \n\t$F1986 gc2gc_buff = Arrays . copyOf ( c1 , m1 + NUM00 ) ; \n\t$F603 ( c2 , gc2gc_buff ) for ( $F9993 ( i , m2 ) ) { \n\t\tdouble ss1 = NUM00 ; \n\t\tdouble ss2 = NUM00 ; \n\t\tint min = m1 < i ? m1 : i - NUM00 ; \n\t\tfor ( $F9993 ( k , min ) ) { \n\t\t\tint mk = i - k ; \n\t\t\tdouble cc = gc2gc_buff [ k ] * c2 [ mk ] ; \n\t\t\tss2 += k * cc ; \n\t\t\tss1 += mk * cc ; \n\t\t\t} \n\t\tif ( i <= m1 ) c2 [ i ] = gc2gc_buff [ i ] + ( g2 * ss2 - g1 * ss1 ) / i ; \n\t\telse c2 [ i ] = ( g2 * ss2 - g1 * ss1 ) / i ; \n\t\t} \n\t} \n"}, {"code": "public static boolean between ( Date baseDate , Date startDate , Date endDate ) { \n\tif ( startDate . equals ( endDate ) || endDate . before ( startDate ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( ( startDate . before ( baseDate ) || startDate . equals ( baseDate ) ) && ( endDate . after ( baseDate ) || endDate . equals ( baseDate ) ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void addListener ( final TimeoutEventListener listener ) { \n\tfinal long timeout = listener . getTimeout ( ) ; \n\tif ( timeout > NUM00 ) { \n\t\tlisteners . add ( listener ) ; \n\t\tsynchronized ( stateLock ) { \n\t\t\t$F16700 ( pendingListenerMinDelay , Math , timeout ) $F165 ( stateLock ) } \n\t\t} \n\t} \n"}, {"code": "public static $F806 convertStrings $F24643 ( strings ) { \n\t$F5442 ( ret , strings ) $F25191 ( i , ret , strings ) return ret ; \n\t} \n"}, {"code": "public static String transformToolTipText ( final String description , final boolean addHTMLTags , final int lineLength , final boolean escapeSlashes , final boolean escapeHTML ) { \n\t$F9652 ( completeText , description ) if ( escapeHTML ) { \n\t\tcompleteText = Tools . escapeHTML ( completeText ) ; \n\t\t} \n\tif ( escapeSlashes ) { \n\t\t$F2899 ( completeText ) } \n\t$F280 ( result ) $F12290 ( addHTMLTags , result ) completeText = Tools . transformAllLineSeparators ( completeText ) ; \n\t$F6542 ( lines , completeText ) for ( String text : lines ) { \n\t\tboolean first = _BOOL ; \n\t\twhile $F62924 ( text , lineLength ) { \n\t\t\t$F12712 ( spaceIndex , text , lineLength ) $F48750 ( first , result ) first = _BOOL ; \n\t\t\tif ( spaceIndex >= NUM00 ) { \n\t\t\t\t$F6937 ( result , text , spaceIndex ) $F6943 ( text , spaceIndex ) } \n\t\t\telse { \n\t\t\t\tresult . append ( text ) ; \n\t\t\t\ttext = NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\tif $F185156 ( first , text ) $F86 ( result ) result . append ( text ) ; \n\t\t$F84 ( result ) } \n\t$F12290 ( addHTMLTags , result ) $F92 ( result ) } \n"}, {"code": "$F1 public void write $F24576 ( buffer , offset , length ) { \n\tif ( isClosed ( ) || isHead ( ) ) $F932 int byteLength = _offset ; \n\twhile ( _BOOL ) { \n\t\t$F1472 ( sublen , Math , length , SIZE , byteLength ) System . arraycopy ( buffer , offset , _buffer , byteLength , sublen ) ; \n\t\toffset += sublen ; \n\t\tlength -= sublen ; \n\t\tbyteLength += sublen ; \n\t\t$F65649 ( length ) _offset = byteLength ; \n\t\tflushByteBuffer ( ) ; \n\t\tbyteLength = _offset ; \n\t\t} \n\t_offset = byteLength ; \n\t} \n"}, {"code": "public ClientHttpRequest ( URLConnection connection ) throws IOException { \n\tthis . connection = connection ; \n\tconnection . setDoOutput ( _BOOL ) ; \n\tconnection . setDoInput ( _BOOL ) ; \n\tconnection . setRequestProperty ( NUM00 , NUM00 + boundary ) ; \n\t} \n"}, {"code": "public void characters ( String characters ) throws SAXException { \n\t$F22998 ( len , characters ) if ( len > m_charsBuff . length ) { \n\t\tm_charsBuff = new char [ len * NUM00 + NUM00 ] ; \n\t\t} \n\t$F16116 ( characters , len , m_charsBuff ) characters ( m_charsBuff , NUM00 , len ) ; \n\t} \n"}, {"code": "private void appendTag ( String tagName , String value ) { \n\t$F84 ( xml ) xml . append ( tagName ) ; \n\t$F84 ( xml ) xml . append ( value ) ; \n\t$F84 ( xml ) xml . append ( tagName ) ; \n\t$F84 ( xml ) } \n"}, {"code": "$F1 public CertificateTokenValidationExtraInfo extraInfo $F72 { \n\treturn extraInfo ; \n\t} \n"}, {"code": "public void addTopLevelContents ( Collection < ContentElement > contents ) $F21926 ( topLevelContents , contents ) "}, {"code": "public static void withInstance ( $F2100 ( args ) , Closure c ) throws SQLException , ClassNotFoundException { \n\tSql sql = null ; \n\ttry { \n\t\tsql = newInstance ( args ) ; \n\t\tc . call ( sql ) ; \n\t\t} \n\t$F48674 ( sql ) } \n"}, {"code": "public void write $F169066 ( buffer , offset , length , isEnd ) throws IOException { \n\tthrow new UnsupportedOperationException $F45942 ( String , this ) ; \n\t} \n"}, {"code": "private boolean addIndexEntry ( ServiceType resourceType , String resourceName , String policyName ) throws PolicyException { \n\tResourceIndex resourceIndex = ( ResourceIndex ) $F22754 ( resourceIndices , resourceType ) ; \n\t$F5178 ( resourceIndex , refreshResourceIndexFromDataStore , resourceType ) return resourceIndex . addIndexEntry ( resourceName , policyName ) ; \n\t} \n"}, {"code": "public void ddSolve ( $F6870 qryNodes ) { \n\tlong solve_time = NUM00 , prepare_time = NUM00 ; \n\tif ( hasExecuted == _BOOL ) solve ( ) ; \n\tif ( ddPrepared == _BOOL || offlineProcessor == null ) { \n\t\tofflineProcessor = new OfflineProcessor ( this ) ; \n\t\tIFigureManager . cleanCache ( ) ; \n\t\tddPrepared = _BOOL ; \n\t\t$F21416 ( ps ) $F8438 ( ps ) } \n\t$F2199 ( init_size , qryNodes ) if ( init_size == NUM00 ) { \n\t\t$F8438 ( ps ) $F665 } \n\t$F6357 ( prepare_begin ) $F10089 ( offlineProcessor ) offlineProcessor . addUserDefPts ( qryNodes ) ; \n\tofflineProcessor . runOptimizations ( ) ; \n\t$F6357 ( prepare_end ) prepare_time += $F265 ( prepare_end , prepare_begin ) ; \n\t$F6357 ( begin ) prepareNextRun ( ) ; \n\tnodeGenerator . initFlowGraph ( this ) ; \n\tsolveConstraints ( ) ; \n\t$F6357 ( end ) solve_time += $F265 ( end , begin ) ; \n\t$F21416 ( ps ) ps . printf ( NUM00 , ( double ) prepare_time / NUM00 ) ; \n\tps . printf ( NUM00 , ( double ) solve_time / NUM00 ) ; \n\t} \n"}, {"code": "private static void deleteFrom ( int deleteAt , $F2027 starts , int numStarts ) { \n\twhile ( starts [ -- numStarts ] > deleteAt ) { \n\t\tstarts [ numStarts ] -= NUM00 ; \n\t\t} \n\t} \n"}, {"code": "public static EventTypeMetadata createBeanType ( String name , Class clazz , boolean isPreConfiguredStatic , boolean isPreConfigured , boolean isConfigured , TypeClass typeClass ) { \n\t$F29150 ( secondaryNames ) if ( name == null ) $F128776 ( name , clazz ) else { \n\t\tif ( ! $F3174 ( name , clazz ) ) { \n\t\t\tsecondaryNames = new LinkedHashSet $F4 $F72 ; \n\t\t\t$F29790 ( secondaryNames , clazz ) } \n\t\t} \n\treturn new EventTypeMetadata ( name , secondaryNames , typeClass , isPreConfiguredStatic , isPreConfigured , isConfigured , ApplicationType . CLASS , _BOOL ) ; \n\t} \n"}, {"code": "private boolean reverseIt $F72 { \n\tif $F931 ( isActive ) $F4638 MPeriod . testPeriodOpen ( getCtx ( ) , getDateTrx ( ) , MPeriodControl . DOCBASETYPE_PaymentAllocation , getAD_Org_ID ( ) ) ; \n\tsetIsActive ( _BOOL ) ; \n\tif $F931 ( isPosted ) setPosted ( _BOOL ) ; \n\tsetDocumentNo ( getDocumentNo ( ) + NUM00 ) ; \n\tsetDocStatus ( DOCSTATUS_Reversed ) ; \n\tif ( ! save ( ) || isActive ( ) ) $F4638 MFactAcct . deleteEx ( MAllocationHdr . Table_ID , getC_AllocationHdr_ID ( ) , get_TrxName ( ) ) ; \n\tgetLines ( _BOOL ) ; \n\t$F87074 $F87077 ( bps ) ; \n\tfor ( $F1139 ( i , m_lines ) ) { \n\t\tMAllocationLine line = m_lines [ i ] ; \n\t\tline . setIsActive ( _BOOL ) ; \n\t\t$F45240 ( line ) bps . add ( new Integer ( line . processIt ( _BOOL ) ) ) ; \n\t\t} \n\tupdateBP ( bps ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static boolean useSubjectCredsOnly ( GSSCaller caller ) { \n\tif ( caller instanceof HttpCaller ) { \n\t\treturn _BOOL ; \n\t\t} \n\tString propValue = AccessController . doPrivileged ( new GetPropertyAction $F6600 ) ; \n\treturn $F14072 ( propValue ) ; \n\t} \n"}, {"code": "private void readEntityDeclaration $F72 throws $F139192 { \n\tread ( START_ENTITY ) ; \n\tboolean generalEntity = _BOOL ; \n\tskip ( ) ; \n\tif $F249882 ( peekCharacter ) { \n\t\tgeneralEntity = _BOOL ; \n\t\tposition ++ ; \n\t\tskip ( ) ; \n\t\t} \n\tString name = readName ( ) ; \n\tskip ( ) ; \n\tint quote = peekCharacter ( ) ; \n\tString entityValue ; \n\tif $F37111 ( quote ) { \n\t\tposition ++ ; \n\t\tentityValue = readValue ( ( char ) quote , _BOOL , _BOOL , ValueContext . ENTITY_DECLARATION ) ; \n\t\tif ( peekCharacter ( ) == quote ) { \n\t\t\tposition ++ ; \n\t\t\t} \n\t\t} \n\telse if ( readExternalId ( _BOOL , _BOOL ) ) { \n\t\tentityValue = NUM00 ; \n\t\tskip ( ) ; \n\t\tif ( peekCharacter ( ) == NDATA [ NUM00 ] ) { \n\t\t\tread ( NDATA ) ; \n\t\t\tskip ( ) ; \n\t\t\treadName ( ) ; \n\t\t\t} \n\t\t} \n\telse $F139239 ( this ) if ( generalEntity && processDocDecl ) { \n\t\tif ( documentEntities == null ) { \n\t\t\tdocumentEntities = new HashMap < String , $F1469 > $F72 ; \n\t\t\t} \n\t\tdocumentEntities . put ( name , entityValue . toCharArray ( ) ) ; \n\t\t} \n\tskip ( ) ; \n\tread ( NUM00 ) ; \n\t} \n"}, {"code": "public void add ( String fieldName , String value ) { \n\t$F19273 ( fieldName ) $F19273 ( value ) if ( $F1276 ( fieldName ) || $F412 ( fieldName ) || $F412 ( value ) ) $F20855 ( fieldName , value ) addLenient ( fieldName , value ) ; \n\t} \n"}, {"code": "public void deleteStorage ( StorageData storageData ) throws BusinessException , IOException { \n\tStorageData local = getLocalStorageDataObject ( storageData ) ; \n\tsynchronized ( local ) { \n\t\tif ( ( storageRecorder . isRecordingOn ( ) || storageRecorder . isRecordingScheduled ( ) ) && Objects . equals ( local , recorderStorageData ) ) { \n\t\t\tthrow new BusinessException ( NUM00 + local + NUM00 , StorageErrorCodeEnum . STORAGE_ALREADY_CLOSED ) ; \n\t\t\t} \n\t\tif ( local . isStorageOpened ( ) ) { \n\t\t\tStorageWriter writer = openedStoragesMap . get ( local ) ; \n\t\t\t$F65150 ( writer ) openedStoragesMap . remove ( local ) ; \n\t\t\t} \n\t\tdeleteCompleteStorageDataFromDisk ( local ) ; \n\t\texistingStoragesSet . remove ( local ) ; \n\t\t} \n\t} \n"}, {"code": "public CoapResponse advanced ( Request request ) { \n\tassignClientUriIfEmpty ( request ) ; \n\treturn synchronous ( request ) ; \n\t} \n"}, {"code": "public void visitErrorNode ( ErrorNode node ) { \n\tProgressIndicatorProvider . checkCanceled ( ) ; \n\tToken badToken = node . getSymbol ( ) ; \n\tboolean isConjuredToken = badToken . getTokenIndex ( ) < NUM00 ; \n\tint nodeStartIndex = badToken . getStartIndex ( ) ; \n\tSyntaxError error = tokenToErrorMap . get ( nodeStartIndex ) ; \n\tif ( error != null ) { \n\t\tPsiBuilder . Marker errorMarker = builder . mark ( ) ; \n\t\tif ( badToken . getStartIndex ( ) >= NUM00 && badToken . getType ( ) != Token . EOF && ! isConjuredToken ) { \n\t\t\tbuilder . advanceLexer ( ) ; \n\t\t\t} \n\t\tString message = String . format ( $F10629 ( error ) ) ; \n\t\terrorMarker . error ( message ) ; \n\t\t} \n\telse { \n\t\tif ( isConjuredToken ) { \n\t\t\tPsiBuilder . Marker errorMarker = builder . mark ( ) ; \n\t\t\terrorMarker . error ( badToken . getText ( ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tbuilder . advanceLexer ( ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F4562 ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , fuzzyThreshold , scaleFactor , isTouchEvent , deltaValue , currentScrollValue , scrollValue , HORIZONTAL , VERTICAL , mode , newScrollValue , PullToRefreshBase , Log , LOG_TAG , State , Math ) "}, {"code": "$F1 public boolean conditionOk ( Example example ) { \n\tboolean isOk = _BOOL ; \n\tfor ( Attribute attribute : checkedAttributes ) { \n\t\tisOk &= ! Double . isNaN ( example . getValue ( attribute ) ) ; \n\t\t} \n\treturn isOk ; \n\t} \n"}, {"code": "private void loadBinary ( InputStream is ) throws IOException { \n\tif ( useNewIO && is instanceof FileInputStream ) { \n\t\tFileInputStream fis = ( FileInputStream ) is ; \n\t\tif ( useIndexing ) { \n\t\t\tloadBinaryIndex ( new URL ( indexName ) ) ; \n\t\t\tmapDatabase ( fis ) ; \n\t\t\t} \n\t\telse { \n\t\t\tloadMappedBinary ( fis ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tDataInputStream dis = new DataInputStream $F209243 ( is ) ; \n\t\tloadBinary ( dis ) ; \n\t\t} \n\t} \n"}, {"code": "public VNXeCommandJob deleteLunsFromLunGroup $F13322 ( lunGroupId , luns ) { \n\tLunGroupModifyParam param = new LunGroupModifyParam $F72 ; \n\tList $F42136 lunDelete = new ArrayList $F42136 $F72 ; \n\tfor ( String lunId : luns ) { \n\t\tVNXeBase lun = new VNXeBase ( lunId ) ; \n\t\tLunAddParam lunAdd = new LunAddParam $F72 ; \n\t\tlunAdd . setLun ( lun ) ; \n\t\tlunDelete . add ( lunAdd ) ; \n\t\t} \n\tparam . setLunDelete ( lunDelete ) ; \n\tLunGroupRequests req = new LunGroupRequests ( _khClient ) ; \n\treturn req . modifyLunGroupAsync ( lunGroupId , param ) ; \n\t} \n"}, {"code": "public void removeLocators ( LookupLocator [ ] locators ) { \n\ttestSetForNull ( locators ) ; \n\tsynchronized ( this ) { \n\t\t$F4640 ( terminated ) HashMap $F6450 ( groupsMap ) ; \n\t\tfor ( $F1139 ( i , locators ) ) { \n\t\t\tLocatorReg reg = removeDiscoveredLocator ( locators [ i ] ) ; \n\t\t\tif ( reg != null ) { \n\t\t\t\tgroupsMap . put ( reg . proxy , reg . memberGroups ) ; \n\t\t\t\t$F598 } \n\t\t\treg = findReg ( locators [ i ] ) ; \n\t\t\t$F231860 ( reg , undiscoveredLocators ) } \n\t\tif $F133343 ( groupsMap , listeners ) { \n\t\t\taddNotify ( ( ArrayList ) listeners . clone ( ) , groupsMap , _BOOL ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean is_selected ( ItemSelectionChoice p_choice ) { \n\treturn sel_array [ p_choice . ordinal ( ) ] ; \n\t} \n"}, {"code": "private void add ( final IProgressOperation operation ) { \n\tfinal GridBagConstraints constraints = new GridBagConstraints $F72 ; \n\t$F45961 ( constraints , GridBagConstraints ) constraints . gridy = counter ++ ; \n\tconstraints . gridx = NUM00 ; \n\tconstraints . weightx = NUM00 ; \n\tconstraints . weighty = NUM00 ; \n\tm_progressPanel . add ( operation . getProgressPanel ( ) , constraints ) ; \n\t} \n"}, {"code": "public KeyStoreBuilder withProvider ( final String providerName ) { \n\tProvider provider = Security . getProvider ( providerName ) ; \n\t$F26344 ( provider , providerName ) return withProvider ( provider ) ; \n\t} \n"}, {"code": "private boolean compareAndDecrementWorkerCount ( int expect ) { \n\treturn ctl . compareAndSet ( expect , expect - NUM00 ) ; \n\t} \n"}, {"code": "public static HttpURLConnection toHttpConnection ( Request ... requests ) $F28185 ( toHttpConnection , Arrays , requests ) "}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "public CompositeRouteFinder ( final GameMap map , final HashMap < Match < Territory > , Integer > matches ) { \n\tm_map = map ; \n\tm_matches = matches ; \n\ts_logger . finer ( NUM00 ) ; \n\t} \n"}, {"code": "public TCPEndpoint ( String host , int port ) { \n\tthis ( host , port , null , null ) ; \n\t} \n"}, {"code": "public void testBug22613 $F72 throws Exception { \n\tcreateTable ( NUM00 , NUM00 ) ; \n\tcheckMetadataForBug22613 ( this . conn ) ; \n\tif $F57555 ( versionMeetsMinimum ) { \n\t\tConnection infoSchemConn = null ; \n\t\ttry { \n\t\t\t$F2697 ( props ) $F2699 ( props ) infoSchemConn = getConnectionWithProps ( props ) ; \n\t\t\tcheckMetadataForBug22613 ( infoSchemConn ) ; \n\t\t\t} \n\t\t$F14364 ( infoSchemConn ) } \n\t} \n"}, {"code": "public long stime $F72 $F12907 ( Long , fields ) "}, {"code": "public ProgramRewriter ( ArrayList < HopRewriteRule > hRewrites , ArrayList < StatementBlockRewriteRule > sbRewrites ) { \n\t_dagRuleSet = new ArrayList < HopRewriteRule > $F72 ; \n\t_dagRuleSet . addAll ( hRewrites ) ; \n\t_sbRuleSet = new ArrayList < StatementBlockRewriteRule > $F72 ; \n\t_sbRuleSet . addAll ( sbRewrites ) ; \n\t} \n"}, {"code": "private JMenu createSettingsMenu $F72 { \n\tfinal JMenu menu = new JMenu $F580 ; \n\t$F208200 ( menu ) menu . add ( new CActionShowSettingsDialog ( getParent ( ) ) ) ; \n\t$F100282 ( menu ) menu . add ( new CActionInitialCallgraphSettings ( getParent ( ) ) ) ; \n\tmenu . add ( new CActionInitialFlowgraphSettings ( getParent ( ) ) ) ; \n\treturn menu ; \n\t} \n"}, {"code": "public static void writeString ( DataOutputStream os , String s ) throws IOException { \n\tif ( s == null ) { \n\t\t$F150188 ( os ) } \n\telse { \n\t\tbyte $F44671 = s . getBytes ( ) ; \n\t\t$F17916 ( os , array ) os . write ( array ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isJavaValidName ( String str ) { \n\t$F69790 ( str , _BOOL ) $F12651 ( javaKeys , str , _BOOL ) $F12685 ( first , str ) if ( isValidNameStartChar ( first ) ) { \n\t\tfor ( $F38840 ( i , str ) ) { \n\t\t\t$F1280 ( c , str , i ) $F2014 ( isValidNameChar , c , _BOOL ) } \n\t\treturn _BOOL ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "private $F3803 createCommands $F72 { \n\t$F13406 ( commands , createNodeCommands , nodejsFile , tsFile ) $F53443 ( args , createNodeArgs ) $F36447 ( args , commands ) return commands ; \n\t} \n"}, {"code": "private void parsePackages ( SensorContext sensorContext ) { \n\tfor ( Directory directory : packageList ) { \n\t\tsensorContext . saveMeasure ( directory , CoreMetrics . DIRECTORIES , NUM00 ) ; \n\t\tsensorContext . saveMeasure ( directory , CoreMetrics . FILES , ( double ) filesCount . get ( directory ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static Thread consumeProcessErrorStream ( Process self , Appendable error ) { \n\tThread thread = new Thread ( new TextDumper ( self . getErrorStream ( ) , error ) ) ; \n\t$F2346 ( thread ) return thread ; \n\t} \n"}, {"code": "public StrBuilder deleteFirst ( final String str ) { \n\tfinal int len = ( str == null ? NUM00 : str . length ( ) ) ; \n\tif ( len > NUM00 ) { \n\t\tfinal int index = indexOf ( str , NUM00 ) ; \n\t\tif ( index >= NUM00 ) { \n\t\t\tdeleteImpl ( index , index + len , len ) ; \n\t\t\t} \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "@ Reference ( authors = NUM00 , booktitle = NUM00 , title = NUM00 , url = NUM00 ) public static < V extends NumberVector > double logLikelihood ( $F42616 relation , Clustering < ? extends MeanModel > clustering , NumberVectorDistanceFunction $F42625 distanceFunction ) { \n\tList < ? extends Cluster < ? extends MeanModel > > clusters = clustering . getAllClusters ( ) ; \n\t$F2601 ( dim , RelationUtil , relation ) $F10162 ( m , clusters ) int n = NUM00 ; \n\t$F4120 ( n_i , m ) double d = NUM00 ; \n\t$F9662 ( d_i , m ) Iterator < ? extends Cluster < ? extends MeanModel > > it = clusters . iterator ( ) ; \n\tfor ( int i = NUM00 ; \n\tit . hasNext ( ) ; \n\t++ i ) { \n\t\tCluster < ? extends MeanModel > cluster = it . next ( ) ; \n\t\tn += n_i [ i ] = cluster . size ( ) ; \n\t\td += d_i [ i ] = varianceOfCluster ( cluster , distanceFunction , relation ) ; \n\t\t} \n\tif ( n <= m ) $F86429 ( Double ) final double v = d / ( n - m ) , logv = Math . log ( v ) ; \n\tdouble logLikelihood = NUM00 ; \n\tfor ( $F119 ( i , m ) ) { \n\t\tlogLikelihood += n_i [ i ] * Math . log ( n_i [ i ] ) - n_i [ i ] * NUM00 * MathUtil . LOGTWOPI - n_i [ i ] * dim * NUM00 * logv - ( d_i [ i ] - m ) * NUM00 ; \n\t\t} \n\tlogLikelihood -= n * Math . log ( n ) ; \n\treturn logLikelihood ; \n\t} \n"}, {"code": "private static $F18547 classesForParams $F24643 ( params ) { \n\t$F18547 result = new $F6969 $F2313 ( params ) ; \n\tfor ( $F2277 ( i , params ) ) { \n\t\tresult [ i ] = classForParam ( params . get ( i ) ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private boolean announce $F4374 ( groups ) { \n\tif ( dataPackets == null || ! lastLocator . equals ( myLocator ) || ! Arrays . equals ( lastGroups , groups ) ) { \n\t\tList < DatagramPacket > packets = new ArrayList < DatagramPacket > $F72 ; \n\t\tDiscovery disco ; \n\t\ttry { \n\t\t\tdisco = getDiscovery ( multicastAnnouncementConstraints . chooseProtocolVersion ( ) ) ; \n\t\t\t} \n\t\tcatch ( DiscoveryProtocolException e ) $F27253 ( e ) EncodeIterator ei = disco . encodeMulticastAnnouncement ( new MulticastAnnouncement ( announcementSeqNo ++ , myLocator . getHost ( ) , myLocator . getPort ( ) , groups , myServiceID ) , multicastAnnouncementConstraints . getMulticastMaxPacketSize ( DEFAULT_MAX_PACKET_SIZE ) , multicastAnnouncementConstraints . getUnfulfilledConstraints ( ) ) ; \n\t\twhile $F2921 ( ei ) { \n\t\t\ttry { \n\t\t\t\tpackets . addAll ( Arrays . asList ( ei . next ( ) ) ) ; \n\t\t\t\t} \n\t\t\tcatch ( Exception e ) { \n\t\t\t\tlogger . log ( ( e instanceof UnsupportedConstraintException ) ? Levels . HANDLED : Level . INFO , NUM00 + NUM00 , e ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tlastLocator = myLocator ; \n\t\tlastGroups = groups ; \n\t\tdataPackets = packets . toArray ( new DatagramPacket $F2313 ( packets ) ) ; \n\t\t} \n\ttry { \n\t\tsend ( dataPackets ) ; \n\t\t} \n\tcatch ( InterruptedIOException e ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static String encodeLines ( $F96 in , int iOff , int iLen , int lineLen , String lineSeparator ) { \n\tint blockLen = ( lineLen * NUM00 ) / NUM00 ; \n\t$F61934 ( blockLen ) $F61936 ( lines , iLen , blockLen ) int bufLen = $F61937 ( iLen ) * NUM00 + lines * lineSeparator . length ( ) ; \n\t$F7542 ( buf , bufLen ) int ip = NUM00 ; \n\twhile ( ip < iLen ) { \n\t\t$F55158 ( l , Math , iLen , ip , blockLen ) buf . append ( encode ( in , iOff + ip , l ) ) ; \n\t\tbuf . append ( lineSeparator ) ; \n\t\tip += l ; \n\t\t} \n\t$F92 ( buf ) } \n"}, {"code": "final public void trimToSize $F72 { \n\tfor ( GazEntry ge : gaz . values ( ) ) $F51922 ( ge ) } \n"}, {"code": "public boolean containsSelectAccount $F72 $F298 ( prompts , PROMPT_SELECT_ACCOUNT ) "}, {"code": "protected static void quickSort ( Instances insts , $F2027 indices , int attidx , int left , int right ) { \n\tif ( left < right ) { \n\t\tint middle = partition ( insts , indices , attidx , left , right ) ; \n\t\tquickSort ( insts , indices , attidx , left , middle ) ; \n\t\tquickSort ( insts , indices , attidx , middle + NUM00 , right ) ; \n\t\t} \n\t} \n"}, {"code": "public Image flipImageHorizontally ( Image image , boolean maintainOpacity ) { \n\t$F2027 rgb = image . getRGB ( ) ; \n\t$F22974 ( newRGB , rgb ) $F2049 ( width , image ) $F2047 ( height , image ) for ( $F119 ( y , height ) ) { \n\t\tfor ( $F119 ( x , width ) ) { \n\t\t\tnewRGB [ ( width - x - NUM00 ) + y * width ] = rgb [ x + y * width ] ; \n\t\t\t} \n\t\t} \n\treturn EncodedImage . createFromRGB ( newRGB , width , height , ! maintainOpacity ) ; \n\t} \n"}, {"code": "public static boolean audit $F72 { \n\treturn $F61922 ( audit ) ? _BOOL : audit . get ( ) ; \n\t} \n"}, {"code": "public static boolean isTermsRequest ( SipRequest request ) { \n\tString contentType = request . getContentType ( ) ; \n\treturn $F147883 ( contentType ) ; \n\t} \n"}, {"code": "private void readSegments $F72 throws IOException { \n\tfor ( SegmentExtent10 extent : _segmentExtents ) { \n\t\ttry ( ReadStream is = openRead ( extent . address ( ) , extent . length ( ) ) ) { \n\t\t\tis . skip ( extent . length ( ) - BLOCK_SIZE ) ; \n\t\t\tlong sequence = BitsUtil . readLong ( is ) ; \n\t\t\t$F2175 ( tableKey , TABLE_KEY_SIZE ) is . readAll ( tableKey , NUM00 , tableKey . length ) ; \n\t\t\tif ( sequence > NUM00 ) { \n\t\t\t\tSegment10 segment = new Segment10 ( sequence , tableKey , extent ) ; \n\t\t\t\t_segments . add ( segment ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static double projectTimeWithin24Hours ( double time ) { \n\tdouble secondsInOneDay = $F264 ; \n\tif ( time == Double . NEGATIVE_INFINITY || time == Double . POSITIVE_INFINITY ) { \n\t\tDebugLib . stopSystemAndReportInconsistency ( NUM00 ) ; \n\t\t} \n\twhile ( time < NUM00 ) { \n\t\ttime += secondsInOneDay ; \n\t\t} \n\tif ( time < secondsInOneDay ) { \n\t\treturn time ; \n\t\t} \n\telse { \n\t\treturn ( ( time / secondsInOneDay ) - ( Math . floor ( time / secondsInOneDay ) ) ) * secondsInOneDay ; \n\t\t} \n\t} \n"}, {"code": "private $F96 updateMinMaxForNoDictionary $F97 ( valueWithLength ) { \n\t$F23500 ( buffer , ByteBuffer , valueWithLength ) $F96 actualValue = new byte [ buffer . getShort ( ) ] ; \n\tbuffer . get ( actualValue ) ; \n\treturn actualValue ; \n\t} \n"}, {"code": "void constructNode ( String nodeName , String prefix , String nodeNamespace , TransformerImpl transformer ) throws TransformerException { \n\tboolean shouldAddAttrs ; \n\ttry { \n\t\tSerializationHandler rhandler = transformer . getResultTreeHandler ( ) ; \n\t\tif ( null == nodeName ) { \n\t\t\tshouldAddAttrs = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( null != prefix ) { \n\t\t\t\trhandler . startPrefixMapping ( prefix , nodeNamespace , _BOOL ) ; \n\t\t\t\t} \n\t\t\trhandler . startElement ( nodeNamespace , QName . getLocalPart ( nodeName ) , nodeName ) ; \n\t\t\tsuper . execute ( transformer ) ; \n\t\t\tshouldAddAttrs = _BOOL ; \n\t\t\t} \n\t\ttransformer . executeChildTemplates ( this , shouldAddAttrs ) ; \n\t\tif ( null != nodeName ) { \n\t\t\trhandler . endElement ( nodeNamespace , QName . getLocalPart ( nodeName ) , nodeName ) ; \n\t\t\tif ( null != prefix ) { \n\t\t\t\trhandler . endPrefixMapping ( prefix ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F237369 ( se ) } \n"}, {"code": "$F1431 public static void checkType ( $F2100 ( map ) , String name ) { \n\t$F15921 ( tmap ) if ( map . get ( MetamodelGenerator . KEY_TYPE ) instanceof Map ) { \n\t\ttmap = ( $F529 ) map . get ( MetamodelGenerator . KEY_TYPE ) ; \n\t\t} \n\telse if ( map . get ( MetamodelGenerator . KEY_TYPE ) instanceof String ) { \n\t\ttmap = $F532 ; \n\t\ttmap . put ( MetamodelGenerator . KEY_NAME , map . get ( MetamodelGenerator . KEY_TYPE ) ) ; \n\t\t} \n\telse { \n\t\ttmap = map ; \n\t\t} \n\t$F1384 ( join , name ) if ( join > NUM00 ) { \n\t\twhile ( join > NUM00 && ! $F12723 ( pointyBracketsEven , name , join ) ) { \n\t\t\t$F101462 ( join , name ) } \n\t\tif ( join > NUM00 ) { \n\t\t\tAssert . assertEquals ( NUM00 , NUM00 , tmap . get ( NUM00 ) ) ; \n\t\t\tcheckTypeParameters ( - NUM00 , ( $F20526 ) tmap . get ( MetamodelGenerator . KEY_TYPES ) , name . substring ( NUM00 , join ) ) ; \n\t\t\tcheckTypeParameters ( - NUM00 , ( $F20526 ) tmap . get ( MetamodelGenerator . KEY_TYPES ) , name . substring ( join + NUM00 ) ) ; \n\t\t\t$F665 } \n\t\t} \n\t$F49897 ( join , name ) if ( join > NUM00 ) { \n\t\twhile ( join > NUM00 && ! $F12723 ( pointyBracketsEven , name , join ) ) { \n\t\t\t$F101462 ( join , name ) } \n\t\tif ( join > NUM00 ) { \n\t\t\tAssert . assertEquals ( NUM00 , NUM00 , tmap . get ( NUM00 ) ) ; \n\t\t\tcheckTypeParameters ( - NUM00 , ( $F20526 ) tmap . get ( MetamodelGenerator . KEY_TYPES ) , name . substring ( NUM00 , join ) ) ; \n\t\t\tcheckTypeParameters ( - NUM00 , ( $F20526 ) tmap . get ( MetamodelGenerator . KEY_TYPES ) , name . substring ( join + NUM00 ) ) ; \n\t\t\t$F665 } \n\t\t} \n\t$F1384 ( sep , name ) String typeParams = null ; \n\tif ( sep > NUM00 ) { \n\t\ttypeParams = name . substring ( sep + NUM00 , $F1092 ( name ) ) ; \n\t\t$F45799 ( name , sep ) } \n\tif ( tmap . containsKey ( MetamodelGenerator . KEY_PACKAGE ) ) { \n\t\tAssert . assertEquals ( name , String . format ( NUM00 , packageName ( tmap ) , tmap . get ( MetamodelGenerator . KEY_NAME ) ) ) ; \n\t\t} \n\telse { \n\t\tAssert . assertEquals ( name , tmap . get ( MetamodelGenerator . KEY_NAME ) ) ; \n\t\t} \n\tif ( typeParams != null ) { \n\t\t$F20526 tparms = ( $F20526 ) tmap . get ( MetamodelGenerator . KEY_TYPE_PARAMS ) ; \n\t\tAssert . assertFalse ( NUM00 , tparms . isEmpty ( ) ) ; \n\t\tcheckTypeParameters ( NUM00 , tparms , typeParams ) ; \n\t\t} \n\t} \n"}, {"code": "private Object _deserializeStruct ( Element elStruct ) throws ConverterException { \n\t$F9031 ( type , elStruct ) Struct struct = new StructImpl $F72 ; \n\t$F9040 ( list , elStruct ) $F19322 ( len , list ) for ( $F119 ( i , len ) ) { \n\t\t$F61359 ( node , list , i ) if ( node instanceof Element ) { \n\t\t\t$F6721 ( var , node ) Element value = getChildElement ( ( Element ) node ) ; \n\t\t\tif ( value != null ) { \n\t\t\t\tstruct . setEL ( var . getAttribute ( NUM00 ) , _deserialize ( value ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( $F10470 ( struct ) && type != null && $F20 ( type ) ) $F2455 return struct ; \n\t} \n"}, {"code": "public QuerierCLI $F4374 ( args ) { \n\tcliOptions = createOptions ( ) ; \n\ttry { \n\t\tCommandLineParser parser = new GnuParser $F72 ; \n\t\tcommandLine = parser . parse ( cliOptions , args , _BOOL ) ; \n\t\tif ( hasOption ( NUM00 ) ) { \n\t\t\tprintHelp ( ) ; \n\t\t\t$F5194 ( System ) } \n\t\tif $F931 ( parseOptions ) { \n\t\t\t$F973 ( logger ) printHelp ( ) ; \n\t\t\t$F5194 ( System ) } \n\t\t} \n\t$F38136 ( e , System ) } \n"}, {"code": "private static $F96 concatBytes $F7233 ( array1 , array2 ) { \n\t$F148496 ( cBytes , array1 , array2 ) try { \n\t\t$F7057 ( System , array1 , cBytes ) $F11244 ( System , array2 , cBytes , array1 ) } \n\t$F12237 ( e ) return cBytes ; \n\t} \n"}, {"code": "public In ( File file ) { \n\t$F1149 ( file ) try { \n\t\t$F4647 ( fis , file ) scanner = new Scanner ( new BufferedInputStream ( fis ) , CHARSET_NAME ) ; \n\t\tscanner . useLocale ( LOCALE ) ; \n\t\t} \n\tcatch ( IOException ioe ) $F18931 ( file ) } \n"}, {"code": "protected ExtendedDismaxConfiguration createConfiguration ( String qstr , SolrParams localParams , SolrParams params , SolrQueryRequest req ) { \n\treturn new ExtendedDismaxConfiguration ( localParams , params , req ) ; \n\t} \n"}, {"code": "void writeValueProperties ( String fullId , long dbId , String localId , JsonValue value , Connection connection ) throws SQLException { \n\tif ( cfg . hasPossibleSearchableProperties ( ) ) { \n\t\tInteger batchingCount = NUM00 ; \n\t\tPreparedStatement propCreateStatement = getPreparedStatement ( connection , QueryDefinition . PROPCREATEQUERYSTR ) ; \n\t\ttry { \n\t\t\tbatchingCount = writeValueProperties ( fullId , dbId , localId , value , connection , propCreateStatement , batchingCount ) ; \n\t\t\tif ( enableBatching && batchingCount > NUM00 ) { \n\t\t\t\t$F2027 numUpdates = propCreateStatement . executeBatch ( ) ; \n\t\t\t\t$F7028 ( logger , numUpdates ) if $F585 ( logger ) { \n\t\t\t\t\tlogger . debug ( NUM00 , Arrays . asList ( numUpdates ) ) ; \n\t\t\t\t\t} \n\t\t\t\tpropCreateStatement . clearBatch ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tfinally { \n\t\t\tCleanupHelper . loggedClose ( propCreateStatement ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected double computeMaxYAxisValueLogScale ( double maxValue ) { \n\tdouble v = NUM00 ; \n\tint mantisse = NUM00 ; \n\tint exponent = NUM00 ; \n\twhile ( v < maxValue ) { \n\t\tif ( mantisse < NUM00 ) mantisse ++ ; \n\t\telse $F88253 ( mantisse , exponent ) v = mantisse * Math . pow ( NUM00 , exponent ) ; \n\t\t} \n\treturn Math . log10 ( v ) ; \n\t} \n"}, {"code": "public void addFocusClearedListener ( FocusClearedListener focusClearedListener ) $F207 ( mFocusClearedListeners , focusClearedListener ) "}, {"code": "public void addItemListener ( ItemListener aListener ) { \n\tlistenerList . add ( ItemListener . class , aListener ) ; \n\t} \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\tVector $F986 result ; \n\tresult = new Vector $F986 $F72 ; \n\t$F9007 ( result ) $F1006 ( result ) $F83529 ( result , getDefaultNumDecimals ) $F1006 ( result ) $F1006 ( result ) $F1007 ( result ) } \n"}, {"code": "public static MosaicLevy createMosaicLevy ( final MosaicId mosaicId ) { \n\treturn new MosaicLevy ( MosaicTransferFeeType . Absolute , generateRandomAccount ( ) , mosaicId , Quantity . fromValue ( NUM00 ) ) ; \n\t} \n"}, {"code": "public int rankOf ( double value ) { \n\tint ret = NUM00 ; \n\tif $F931 ( hasCapacity ) { \n\t\tret = Arrays . binarySearch ( data , value ) ; \n\t\tif ( ret < NUM00 ) { \n\t\t\treturn - ret - NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\treturn ret ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tfor ( $F119 ( i , next ) ) { \n\t\t\tif ( data [ i ] < value ) { \n\t\t\t\tret ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\treturn ret ; \n\t\t} \n\t} \n"}, {"code": "$F30491 ( key , value , bitmapSize , getBitmapSize ) "}, {"code": "public static $F4203 $F54596 not ( $F54596 predicate ) { \n\treturn predicate . negate ( ) ; \n\t} \n"}, {"code": "private static void addMarginTopToContentChild ( View mContentChild , int statusBarHeight ) { \n\t$F2329 ( mContentChild ) if ( ! TAG_MARGIN_ADDED . equals ( mContentChild . getTag ( ) ) ) { \n\t\tFrameLayout . LayoutParams lp = ( FrameLayout . LayoutParams ) mContentChild . getLayoutParams ( ) ; \n\t\tlp . topMargin += statusBarHeight ; \n\t\tmContentChild . setLayoutParams ( lp ) ; \n\t\tmContentChild . setTag ( TAG_MARGIN_ADDED ) ; \n\t\t} \n\t} \n"}, {"code": "static $F96 hexStringToByteArray ( String hexString ) { \n\tString s = hexString ; \n\t$F1749 ( len , s ) if ( len % NUM00 == NUM00 ) { \n\t\ts = NUM00 + s ; \n\t\tlen ++ ; \n\t\t} \n\t$F96 data = new byte [ len / NUM00 ] ; \n\tfor ( $F6225 ( i , len ) ) { \n\t\tdata [ i / NUM00 ] = ( byte ) ( ( Character . digit ( s . charAt ( i ) , NUM00 ) < < NUM00 ) + Character . digit ( s . charAt ( i + NUM00 ) , NUM00 ) ) ; \n\t\t} \n\treturn data ; \n\t} \n"}, {"code": "public int send $F24576 ( buffer , offset , count ) { \n\tcheckArrayBounds ( buffer , offset , count ) ; \n\t$F14826 ( count ) $F96 data = buffer ; \n\tif ( offset > NUM00 ) $F65231 ( data , count , System , buffer , offset ) IntOut bytesSentOut = new IntOut $F72 ; \n\ttry { \n\t\tIDevice . checkResult ( LibIMobileDevice . idevice_connection_send ( getRef ( ) , data , count , bytesSentOut ) ) ; \n\t\t$F233317 ( bytesSentOut ) } \n\t$F105993 ( bytesSentOut ) } \n"}, {"code": "private void fetchSchema $F72 throws ExecutionException , RpcException , TimeoutException { \n\tMessage schema = Rpc . get ( myClient . getSchema ( ) , FETCH_SCHEMA_TIMEOUT_MS , TimeUnit . MILLISECONDS ) ; \n\tLOG . info ( NUM00 + schema . entities . length + NUM00 + schema . constants . length + NUM00 ) ; \n\tint atoms = NUM00 ; \n\tfor ( Entity type : schema . entities ) { \n\t\tif ( AtomMetadata . find ( type ) != null ) { \n\t\t\tatoms ++ ; \n\t\t\t} \n\t\tDynamic . register ( type ) ; \n\t\t} \n\t$F9472 ( LOG , atoms ) for ( ConstantSet set : schema . constants ) { \n\t\tConstantSet . register ( set ) ; \n\t\t} \n\t} \n"}, {"code": "private void append ( StringBuilder buffer , $F1986 data , String prefix , String separator , String suffix ) { \n\tbuffer . append ( prefix ) ; \n\tfor ( $F9808 ( i , data ) ) { \n\t\t$F234280 ( i , buffer , separator ) $F6939 ( buffer , data , i ) } \n\tbuffer . append ( suffix ) ; \n\t} \n"}, {"code": "public T toRealArray $F72 { \n\treturn _outputArrayType . cast ( ArrayMultidimensionalizer . multidimensionalize ( _real , _dimensions ) ) ; \n\t} \n"}, {"code": "private ArrayList < WritableComparable > readPartitions ( FileSystem fs , Path p , JobConf job ) throws IOException { \n\tSequenceFile . Reader reader = new SequenceFile . Reader ( fs , p , job ) ; \n\tArrayList < WritableComparable > parts = new ArrayList < WritableComparable > $F72 ; \n\ttry { \n\t\tDoubleWritable key = new DoubleWritable $F72 ; \n\t\t$F53800 ( value , NullWritable ) while ( reader . next ( key , value ) ) { \n\t\t\tparts . add ( key ) ; \n\t\t\tkey = new DoubleWritable $F72 ; \n\t\t\t} \n\t\t} \n\t$F12237 ( e ) $F448 ( IOUtilFunctions , reader ) $F59 ( reader ) return parts ; \n\t} \n"}, {"code": "public boolean pollSeqno ( long seqno ) { \n\treturn seqno <= diskLog . getMaxSeqno ( ) ; \n\t} \n"}, {"code": "public void addSlide ( $F4170 Fragment fragment ) { \n\tfragments . add ( fragment ) ; \n\taddBackgroundColor ( Color . TRANSPARENT ) ; \n\t$F4176 ( pagerAdapter ) } \n"}, {"code": "private static void drawLine ( int x0 , int y0 , int x1 , int y1 , $F189761 ( pic ) ) { \n\tfinal int xres = pic . length , yres = pic [ NUM00 ] . length ; \n\ty0 = ( y0 < NUM00 ) ? NUM00 : ( y0 >= yres ) ? ( yres - NUM00 ) : y0 ; \n\ty1 = ( y1 < NUM00 ) ? NUM00 : ( y1 >= yres ) ? ( yres - NUM00 ) : y1 ; \n\tx0 = ( x0 < NUM00 ) ? NUM00 : ( x0 >= xres ) ? ( xres - NUM00 ) : x0 ; \n\tx1 = ( x1 < NUM00 ) ? NUM00 : ( x1 >= xres ) ? ( xres - NUM00 ) : x1 ; \n\tfinal int dx = + Math . abs ( x1 - x0 ) , sx = x0 < x1 ? NUM00 : - NUM00 ; \n\tfinal int dy = - Math . abs ( y1 - y0 ) , sy = y0 < y1 ? NUM00 : - NUM00 ; \n\tint err = dx + dy ; \n\tfor ( $F589 ) { \n\t\tpic [ x0 ] [ y0 ] = _BOOL ; \n\t\tif ( x0 == x1 && y0 == y1 ) $F5153 final int e2 = err < < NUM00 ; \n\t\tif ( e2 > dy ) { \n\t\t\terr += dy ; \n\t\t\tx0 += sx ; \n\t\t\t} \n\t\tif ( e2 < dx ) { \n\t\t\terr += dx ; \n\t\t\ty0 += sy ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public String process ( Item item ) throws ProcessException { \n\tint count = NUM00 ; \n\tItem inPhrase = SUB_PHRASE_PATH . findItem ( item ) ; \n\tfor ( Item p = inPhrase ; \n\tp != null ; \n\tp = p . getPrevious ( ) ) { \n\t\tcount ++ ; \n\t\t} \n\t$F100077 ( Integer , rail , count ) } \n"}, {"code": "$F4562 ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , fuzzyThreshold , scaleFactor , isTouchEvent , deltaValue , currentScrollValue , scrollValue , HORIZONTAL , VERTICAL , mode , newScrollValue , PullToRefreshBase , Log , LOG_TAG , State , Math ) "}, {"code": "public E push ( E value ) { \n\telements . add ( value ) ; \n\treturn value ; \n\t} \n"}, {"code": "public long cardinality ( final int tailIndex ) $F4915 ( rangeCount , tailIndex ) "}, {"code": "public static void createResponse ( HttpServletRequest request , HttpServletResponse response , HttpServlet servlet , Properties cookieProperties , WebDoc doc , boolean debug ) throws IOException { \n\t$F11562 ( response ) $F11560 ( response ) if ( cookieProperties != null ) { \n\t\tCookie cookie = new Cookie ( WebEnv . COOKIE_INFO , propertiesEncode ( cookieProperties ) ) ; \n\t\tcookie . setComment ( NUM00 ) ; \n\t\tcookie . setSecure ( _BOOL ) ; \n\t\t$F244296 ( cookie ) if $F10471 ( cookieProperties ) $F137579 ( cookie ) else $F137579 ( cookie ) response . addCookie ( cookie ) ; \n\t\t} \n\tif ( debug && WebEnv . DEBUG ) { \n\t\tWebEnv . addFooter ( request , response , servlet , doc . getBody ( ) ) ; \n\t\t} \n\t$F70095 ( out , response ) doc . output ( out ) ; \n\t$F1206 ( out ) if ( out . checkError ( ) ) $F81302 ( log , Level ) $F59 ( out ) } \n"}, {"code": "public static Long toLong ( Object o ) throws PageException { \n\tif ( o instanceof Long ) return ( Long ) o ; \n\treturn Long . valueOf ( toLongValue ( o ) ) ; \n\t} \n"}, {"code": "$F49286 ( value , absMin , absMax , absValue , Math ) "}, {"code": "protected void finishGridRow $F72 { \n\t$F45960 ( constraints ) constraints . gridwidth = GridBagConstraints . REMAINDER ; \n\tconstraints . weightx = NUM00 ; \n\tfinal JLabel icon ; \n\tif ( param . isOptional ( ) ) { \n\t\tif ( param . isDefined ( ) && param . tookDefaultValue ( ) && ! ( param instanceof Flag ) ) { \n\t\t\ticon = new JLabel ( StockIcon . getStockIcon ( StockIcon . DIALOG_INFORMATION ) ) ; \n\t\t\ticon . setToolTipText ( NUM00 + param . getDefaultValueAsString ( ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F171121 ( icon ) $F167982 ( icon ) } \n\t\t} \n\telse { \n\t\tif ( ! param . isDefined ( ) ) { \n\t\t\ticon = new JLabel ( StockIcon . getStockIcon ( StockIcon . DIALOG_ERROR ) ) ; \n\t\t\t$F58097 ( icon ) } \n\t\telse { \n\t\t\t$F171121 ( icon ) $F167982 ( icon ) } \n\t\t} \n\tparent . add ( icon , constraints ) ; \n\t} \n"}, {"code": "public final void testIsStatePreserved1 $F72 { \n\t$F65113 ( encodedKey ) $F96 encodedKeyCopy = encodedKey . clone ( ) ; \n\t$F65117 ( meks , encodedKeyCopy ) $F65119 ( encodedKeyCopy ) $F46943 ( ek , meks ) assertTrue ( Arrays . equals ( encodedKey , ek ) ) ; \n\t} \n"}, {"code": "$F1 public void shutdown $F72 { \n\tif ( ! shouldKeepAdbAlive ) { \n\t\tAndroidDebugBridge . disconnectBridge ( ) ; \n\t\t$F72716 ( AndroidDebugBridge ) } \n\t$F973 ( logger ) } \n"}, {"code": "public void pingReceived ( Ping pong ) { \n\t$F657 ( now , System ) long previousReceived = ( int ) $F96314 ( lastPingSent ) ; \n\tlog . debug ( NUM00 , new Object [ ] { \n\t\tgetId ( ) , now , pong . getValue2 ( ) , previousReceived } \n\t) ; \n\tif ( pong . getValue2 ( ) == previousReceived ) { \n\t\tlastPingTime . set ( $F76474 ( now ) - pong . getValue2 ( ) ) ; \n\t\t} \n\tlastPongReceived . set ( now ) ; \n\t} \n"}, {"code": "public static int findObjectLiteral ( Object literal ) { \n\tsynchronized ( objectLiterals ) { \n\t\t$F99426 ( result , objectLiterals , literal ) return result == null ? NUM00 : result . intValue ( ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void resetViewableArea $F72 $F11389 "}, {"code": "public static Lexicon buildWumpusLex $F72 { \n\tLexicon l = new Lexicon $F72 ; \n\tArrayList < LexWord > list = new ArrayList < LexWord > $F72 ; \n\tlist . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tlist . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tlist . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tlist . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tlist . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tlist . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tlist . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tlist . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tlist . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\t$F545 ( l , list ) ArrayList < LexWord > verbList = new ArrayList < LexWord > $F72 ; \n\tverbList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tverbList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tverbList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tverbList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tverbList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tverbList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tverbList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tverbList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tverbList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\t$F545 ( l , verbList ) ArrayList < LexWord > adjList = new ArrayList < LexWord > $F72 ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\tadjList . add ( new LexWord ( NUM00 , $F77473 ) ) ; \n\t$F545 ( l , adjList ) l . addLexWords ( NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 ) ; \n\tl . addLexWords ( NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 ) ; \n\tl . addLexWords ( NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 ) ; \n\tl . addLexWords ( buildNameLexicon ( ) ) ; \n\tl . addLexWords ( NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 ) ; \n\tl . addLexWords ( NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 ) ; \n\tl . addLexWords ( NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 ) ; \n\tl . addLexWords ( NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 ) ; \n\treturn l ; \n\t} \n"}, {"code": "private void testTransferRate $F72 { \n\tAssert . assertNotNull ( mExpectedTransferRateOps ) ; \n\tAssert . assertNotNull ( mExpectedTransferRateBps ) ; \n\tAssert . assertTrue ( mExpectedTransferRateBps . intValue ( ) > NUM00 ) ; \n\tAssert . assertTrue ( mExpectedTransferRateOps . intValue ( ) > NUM00 ) ; \n\t} \n"}, {"code": "$F21572 ( doc , elementList , nameNode , child , childData , load , _BOOL , assertEquals ) "}, {"code": "public void add ( X509TrustManager mgr ) { \n\tif ( mgr instanceof X509Extensions ) { \n\t\tmanagers . add ( ( X509Extensions ) mgr ) ; \n\t\t} \n\telse { \n\t\tmanagers . add ( new X509ExtensionsWrapper ( mgr ) ) ; \n\t\t} \n\t} \n"}, {"code": "public Iterator $F68180 findChildren $F72 { \n\tList $F68180 nodes ; \n\tif ( children == null ) $F28529 ( nodes , Collections ) else nodes = children ; \n\t$F16047 ( nodes ) } \n"}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "private int createFolder $F72 { \n\tif ( mNewDirectoryName != null && mSelectedDir != null && mSelectedDir . canWrite ( ) ) { \n\t\t$F4453 ( newDir , mSelectedDir , mNewDirectoryName ) if $F1906 ( newDir ) { \n\t\t\tboolean result = newDir . mkdir ( ) ; \n\t\t\tif ( result ) { \n\t\t\t\tchangeDirectory ( newDir ) ; \n\t\t\t\treturn R . string . create_folder_success ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\treturn R . string . create_folder_error ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\treturn R . string . create_folder_error_already_exists ; \n\t\t\t} \n\t\t} \n\telse if ( mSelectedDir != null && $F14321 ( mSelectedDir ) ) { \n\t\treturn R . string . create_folder_error_no_write_access ; \n\t\t} \n\telse { \n\t\treturn R . string . create_folder_error ; \n\t\t} \n\t} \n"}, {"code": "public static double I ( double P [ ] [ ] , int j , int k ) { \n\tdouble I = NUM00 ; \n\tdouble p_x = P [ j ] [ j ] ; \n\tdouble p_y = P [ k ] [ k ] ; \n\tdouble p_xy = P [ j ] [ k ] ; \n\tI += p_xy * Math . log ( p_xy / ( p_x * p_y ) ) ; \n\tI += ( NUM00 - p_xy ) * Math . log ( ( NUM00 - p_xy ) / ( ( NUM00 - p_x ) * ( NUM00 - p_y ) ) ) ; \n\treturn I ; \n\t} \n"}, {"code": "public Result doComparisonTest ( Properties properties ) throws Exception { \n\tfinal long timeout = Long . parseLong ( properties . getProperty ( TestOptions . TIMEOUT ) ) ; \n\tfinal int nclients = Integer . parseInt ( properties . getProperty ( TestOptions . NCLIENTS ) ) ; \n\tfinal int ntrials = Integer . parseInt ( properties . getProperty ( TestOptions . NTRIALS ) ) ; \n\tfinal int keyLen = Integer . parseInt ( properties . getProperty ( TestOptions . KEYLEN ) ) ; \n\tfinal int nops = Integer . parseInt ( properties . getProperty ( TestOptions . NOPS ) ) ; \n\tfinal double insertRate = Integer . parseInt ( properties . getProperty ( TestOptions . INSERT_RATE ) ) ; \n\tfinal int nindices = Integer . parseInt ( properties . getProperty ( TestOptions . NINDICES ) ) ; \n\tfinal boolean testCorrectness = Boolean . parseBoolean ( properties . getProperty ( TestOptions . TEST_CORRECTNESS ) ) ; \n\tResult result = doConcurrentClientTest ( client , nclients , timeout , ntrials , keyLen , nops , insertRate , nindices , testCorrectness ) ; \n\treturn result ; \n\t} \n"}, {"code": "public void testGetScale $F72 throws SQLException { \n\ttry { \n\t\tint scale = NUM00 ; \n\t\tString createTable = NUM00 + NUM00 + scale + NUM00 ; \n\t\tString insert = NUM00 ; \n\t\tString select = NUM00 ; \n\t\t$F11282 ( st , conn ) st . executeUpdate ( createTable ) ; \n\t\tst . executeUpdate ( insert ) ; \n\t\trs = st . executeQuery ( select ) ; \n\t\t$F19097 ( rsmd2 , rs ) assertNotNull ( rsmd2 ) ; \n\t\tassertEquals ( scale , rsmd2 . getScale ( NUM00 ) ) ; \n\t\tassertTrue ( rsmd2 . getScale ( NUM00 ) > NUM00 ) ; \n\t\tassertTrue ( rsmd2 . getScale ( NUM00 ) > NUM00 ) ; \n\t\ttry { \n\t\t\trsmd . getScale ( NUM00 ) ; \n\t\t\tfail ( NUM00 ) ; \n\t\t\t} \n\t\t$F31184 try { \n\t\t\trsmd . getScale ( NUM00 ) ; \n\t\t\tfail ( NUM00 ) ; \n\t\t\t} \n\t\t$F31184 try { \n\t\t\t$F59 ( conn ) rsmd . getScale ( NUM00 ) ; \n\t\t\tfail ( NUM00 ) ; \n\t\t\t} \n\t\t$F31184 } \n\tfinally $F65149 ( st ) } \n"}, {"code": "static String valueToString ( Object value , int indentFactor , int indent ) { \n\tif ( value == null || value . equals ( null ) ) $F2455 try { \n\t\tif ( value instanceof String ) { \n\t\t\treturn quote ( ( String ) value ) ; \n\t\t\t} \n\t\t} \n\t$F3957 if ( value instanceof Float || value instanceof Double || value instanceof Byte || value instanceof Short || value instanceof Integer || value instanceof Long ) $F4915 ( numberToString , value ) if ( value instanceof Boolean ) $F2495 ( value ) if ( value instanceof Map ) { \n\t\treturn print ( ( Map ) value , indentFactor , indent ) ; \n\t\t} \n\tif ( value instanceof List ) { \n\t\treturn print ( ( List ) value , indentFactor , indent ) ; \n\t\t} \n\t$F17718 ( quote , value ) } \n"}, {"code": "public static boolean isRetainedAtRuntime ( $F26426 ( annotationType ) ) { \n\tRetention retention = annotationType . getAnnotation ( Retention . class ) ; \n\treturn retention != null && retention . value ( ) == RetentionPolicy . RUNTIME ; \n\t} \n"}, {"code": "public void testProcessMsg5 $F72 { \n\t$F57834 ( pdu , createPDU ) int headerLen = pdu . length - ( $F118127 ( mGsmHeader , mUserDataHeader , mMessageBody ) ) ; \n\tint pduType = NUM00 ; \n\tint tranId = NUM00 ; \n\tString originalPackageName = mPackageName ; \n\tString originalClassName = mClassName ; \n\ttry { \n\t\tmClassName = NUM00 ; \n\t\tIWapPushManager iwapman = getInterface ( ) ; \n\t\tiwapman . addPackage ( Integer . toString ( mAppIdValue ) , Integer . toString ( mContentTypeValue ) , mPackageName , mClassName , WapPushManagerParams . APP_TYPE_ACTIVITY , _BOOL , _BOOL ) ; \n\t\tassertTrue ( ( $F118137 ( iwapman , Integer , mAppIdValue , mContentTypeValue , createIntent , pduType , tranId ) & WapPushManagerParams . MESSAGE_HANDLED ) == WapPushManagerParams . MESSAGE_HANDLED ) ; \n\t\t$F118145 ( iwapman , Integer , mAppIdValue , mContentTypeValue , mPackageName , mClassName ) } \n\t$F118147 ( assertTrue , _BOOL ) mPackageName = originalPackageName ; \n\tmClassName = originalClassName ; \n\t} \n"}, {"code": "public void addClassPath ( String classpath ) { \n\tchar sep = CauchoUtil . getPathSeparatorChar ( ) ; \n\tint head = NUM00 ; \n\tint tail = NUM00 ; \n\twhile $F7007 ( head , classpath ) { \n\t\ttail = classpath . indexOf ( sep , head ) ; \n\t\tString segment = null ; \n\t\tif ( tail < NUM00 ) { \n\t\t\tsegment = classpath . substring ( head ) ; \n\t\t\t$F3935 ( head , classpath ) } \n\t\telse { \n\t\t\tsegment = classpath . substring ( head , tail ) ; \n\t\t\thead = tail + NUM00 ; \n\t\t\t} \n\t\tif $F3057 ( segment ) $F598 else if $F128455 ( segment ) addMergePath ( JarPath . create ( VfsOld . lookup ( segment ) ) ) ; \n\t\telse addMergePath ( VfsOld . lookup ( segment ) ) ; \n\t\t} \n\t} \n"}, {"code": "@ Singleton public static synchronized void loadDirectories ( String firstOption ) throws InvalidConfigException { \n\tif ( userIdDirectories == null ) { \n\t\tuserIdDirectories = new $F345384 $F72 ; \n\t\tuserIdDirectories . put ( NUM00 , $F64883 ( firstOption ) ) ; \n\t\tProperties properties = directoriesProperties ( ) ; \n\t\tfor ( $F261788 ( entry , properties ) ) { \n\t\t\tString key = StringUtils . trim ( $F123408 ( entry ) ) ; \n\t\t\tString value = StringUtils . trim ( $F71217 ( entry ) ) ; \n\t\t\tif ( key != null && value != null ) $F1717 ( userIdDirectories , key , value ) else { \n\t\t\t\tString error = DIRECTORIES_PROPFILE_PATH + NUM00 ; \n\t\t\t\tLOG . error ( error ) ; \n\t\t\t\tthrow new InvalidConfigException ( InvalidConfigException . TYPE . INVALID_PROPERTIES_FILE , error ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( $F113103 ( userIdDirectories ) == NUM00 ) { \n\t\t\tString error = NUM00 + DIRECTORIES_PROPFILE_PATH + NUM00 ; \n\t\t\tLOG . error ( error ) ; \n\t\t\tthrow new InvalidConfigException ( InvalidConfigException . TYPE . INVALID_PROPERTIES_FILE , error ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static Individuum nullIndividuum ( int dim ) { \n\t$F5099 ( gene , dim ) Arrays . fill ( gene , DONT_CARE ) ; \n\treturn new Individuum ( NUM00 , gene ) ; \n\t} \n"}, {"code": "public $F69670 findAllClasses ( String uri ) throws $F6427 { \n\t$F69670 $F204 ( classes ) ; \n\t$F43655 ( strings , findAllStrings , uri ) for ( String className : strings ) { \n\t\t$F6969 clazz = _classLoader . loadClass ( className ) ; \n\t\tclasses . add ( clazz ) ; \n\t\t} \n\treturn classes ; \n\t} \n"}, {"code": "private boolean isSlavoGermanic ( String value ) { \n\treturn value . indexOf ( NUM00 ) > - NUM00 || value . indexOf ( NUM00 ) > - NUM00 || value . indexOf ( NUM00 ) > - NUM00 || value . indexOf ( NUM00 ) > - NUM00 ; \n\t} \n"}, {"code": "public void shuffleInventory ( $F2304 IInventory inv , $F2304 Random random ) { \n\tfinal List $F13970 list = getInventoryList ( inv ) ; \n\tCollections . shuffle ( list , random ) ; \n\tfor ( int i = NUM00 ; \n\ti < inv . getSizeInventory ( ) ; \n\t++ i ) { \n\t\tinv . setInventorySlotContents ( i , list . get ( i ) ) ; \n\t\t} \n\t} \n"}, {"code": "protected ChromeAnimation $F1011 createUpdateDiscardAnimatorSet ( StackTab [ ] tabs , int spacing , float warpSize , float discardRange ) { \n\tChromeAnimation < Animatable $F1011 > set = new ChromeAnimation < Animatable $F1011 > $F72 ; \n\tint dyingTabsCount = NUM00 ; \n\tfloat firstDyingTabOffset = NUM00 ; \n\tfor ( $F9808 ( i , tabs ) ) { \n\t\tStackTab tab = tabs [ i ] ; \n\t\taddTiltScrollAnimation ( set , tab . getLayoutTab ( ) , NUM00 , UNDISCARD_ANIMATION_DURATION , NUM00 ) ; \n\t\tif ( tab . isDying ( ) ) { \n\t\t\tdyingTabsCount ++ ; \n\t\t\tif ( dyingTabsCount == NUM00 ) { \n\t\t\t\tfirstDyingTabOffset = getScreenPositionInScrollDirection ( tab ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tInterpolator interpolator = BakedBezierInterpolator . FADE_OUT_CURVE ; \n\tint newIndex = NUM00 ; \n\tfor ( $F9808 ( i , tabs ) ) { \n\t\tStackTab tab = tabs [ i ] ; \n\t\tlong startTime = ( long ) Math . max ( NUM00 , TAB_REORDER_START_SPAN / getScreenSizeInScrollDirection ( ) * ( getScreenPositionInScrollDirection ( tab ) - firstDyingTabOffset ) ) ; \n\t\tif ( tab . isDying ( ) ) { \n\t\t\tfloat discard = tab . getDiscardAmount ( ) ; \n\t\t\tif ( discard == NUM00 ) discard = isDefaultDiscardDirectionPositive ( ) ? NUM00 : - NUM00 ; \n\t\t\tfloat s = Math . copySign ( NUM00 , discard ) ; \n\t\t\tlong duration = ( long ) ( DISCARD_ANIMATION_DURATION * ( NUM00 - Math . abs ( discard / discardRange ) ) ) ; \n\t\t\taddAnimation ( set , tab , DISCARD_AMOUNT , discard , discardRange * s , duration , startTime , _BOOL , interpolator ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( tab . getDiscardAmount ( ) != NUM00 ) { \n\t\t\t\taddAnimation ( set , tab , DISCARD_AMOUNT , tab . getDiscardAmount ( ) , NUM00 , UNDISCARD_ANIMATION_DURATION , NUM00 ) ; \n\t\t\t\t} \n\t\t\tfloat newScrollOffset = StackTab . screenToScroll ( spacing * newIndex , warpSize ) ; \n\t\t\tif ( tab . getDiscardAmount ( ) >= discardRange ) { \n\t\t\t\ttab . setScrollOffset ( newScrollOffset ) ; \n\t\t\t\ttab . setScale ( SCALE_AMOUNT ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tfloat start = tab . getScrollOffset ( ) ; \n\t\t\t\tif ( start != newScrollOffset ) { \n\t\t\t\t\taddAnimation ( set , tab , SCROLL_OFFSET , start , newScrollOffset , TAB_REORDER_DURATION , startTime ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tnewIndex ++ ; \n\t\t\t} \n\t\t} \n\treturn set ; \n\t} \n"}, {"code": "$F1 public String format ( double value , int formatNumber ) { \n\tif ( formatNumber % NUM00 == NUM00 ) { \n\t\t$F137119 ( format , value ) } \n\telse $F1337 } \n"}, {"code": "public static String toLowerCase ( String string ) $F45889 ( changed , _BOOL , chars , string , i , ch ) "}, {"code": "public void runAsserts ( List < Step > list , int size , Boolean needAssignee ) { \n\tassertEquals ( size , list . size ( ) ) ; \n\tfor ( $F119 ( i , size ) ) { \n\t\trunAsserts ( list . get ( i ) , i , needAssignee ) ; \n\t\t} \n\t} \n"}, {"code": "protected void onException ( final WroRuntimeException e ) { \n\tthrow e ; \n\t} \n"}, {"code": "public static boolean registerTransform ( final String transformURI ) { \n\tfinal boolean added = transforms . add ( transformURI ) ; \n\treturn added ; \n\t} \n"}, {"code": "public synchronized void co_exit ( int thisCoroutine ) { \n\tm_activeIDs . clear ( thisCoroutine ) ; \n\tm_nextCoroutine = NOBODY ; \n\tnotify ( ) ; \n\t} \n"}, {"code": "public void shrink $F72 { \n\tif ( c . length == length ) $F932 $F18064 ( newc , length ) $F135 ( System , c , newc , length ) c = newc ; \n\t} \n"}, {"code": "public ANDCondition ( Condition ... conditions ) { \n\tReject . ifNull ( conditions ) ; \n\t$F37437 ( this , Arrays , conditions ) } \n"}, {"code": "private void dropDownstreamTo ( long absolutePosition ) { \n\t$F82462 ( relativePosition , absolutePosition , totalBytesDropped ) int allocationIndex = relativePosition / allocationLength ; \n\tfor ( $F119 ( i , allocationIndex ) ) { \n\t\tallocator . release ( dataQueue . remove ( ) ) ; \n\t\ttotalBytesDropped += allocationLength ; \n\t\t} \n\t} \n"}, {"code": "public HopImpl $F18289 ( hostName , portNumber , trans ) { \n\thost = hostName ; \n\tif $F48846 ( host ) if $F1731 ( host ) host = NUM00 + host + NUM00 ; \n\tport = portNumber ; \n\ttransport = trans ; \n\t} \n"}, {"code": "private void updateControls $F72 { \n\tSpinner difficulty = ( Spinner ) findViewById ( R . id . spinner_difficultyLevel ) ; \n\tdifficulty . setSelection ( GameActivity . getDifficultyIndex ( ) ) ; \n\tButton resume = ( Button ) findViewById ( R . id . button_resumeGame ) ; \n\tresume . setEnabled ( GameActivity . canResumeFromSave ( ) ) ; \n\tCheckBox neverLoseBall = ( CheckBox ) findViewById ( R . id . checkbox_neverLoseBall ) ; \n\tneverLoseBall . setChecked ( GameActivity . getNeverLoseBall ( ) ) ; \n\tCheckBox soundEffectsEnabled = ( CheckBox ) findViewById ( R . id . checkbox_soundEffectsEnabled ) ; \n\tsoundEffectsEnabled . setChecked ( GameActivity . getSoundEffectsEnabled ( ) ) ; \n\tTextView highScore = ( TextView ) findViewById ( R . id . text_highScore ) ; \n\t$F65173 ( highScore , String , mHighScore ) } \n"}, {"code": "public static void write ( OutputStream out , int c ) { \n\t$F826 ( out ) try $F4050 ( out , c ) catch ( IOException e ) { \n\t\tthrow new RuntimeException $F2808 ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public void message ( LocoNetMessage m ) { \n\tif ( m . getNumDataElements ( ) != NUM00 ) $F932 int b1 = $F470482 ( m ) ; \n\tint b2 = $F470482 ( m ) ; \n\tint b3 = $F470482 ( m ) ; \n\tint b4 = $F470482 ( m ) ; \n\tif ( ( b1 == NUM00 ) && ( ( b2 == NUM00 ) || ( b2 == NUM00 ) || ( b2 == NUM00 ) ) && ( b3 == NUM00 ) ) { \n\t\tidBox . setSelectedIndex ( b4 + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public Void call $F72 throws Exception { \n\t$F57503 ( keys , nops ) $F57503 ( vals , nops ) if ( r . nextDouble ( ) <= insertRate ) { \n\t\tfor ( $F119 ( i , nops ) ) { \n\t\t\tkeys [ i ] = nextKey ( ) ; \n\t\t\tvals [ i ] = $F10314 ; \n\t\t\tr . nextBytes ( vals [ i ] ) ; \n\t\t\t} \n\t\t$F790 ( lock ) try { \n\t\t\tndx . submit ( NUM00 , nops , keys , vals , BatchInsertConstructor . RETURN_NO_VALUES , null ) ; \n\t\t\tif ( groundTruth != null ) { \n\t\t\t\tgroundTruth . submit ( NUM00 , nops , keys , vals , BatchInsertConstructor . RETURN_NO_VALUES , null ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F796 ( lock ) } \n\telse { \n\t\t$F58179 ( i , nops , keys , nextKey ) $F790 ( lock ) try { \n\t\t\tndx . submit ( NUM00 , nops , keys , null , BatchRemoveConstructor . RETURN_MUTATION_COUNT , null ) ; \n\t\t\tif ( groundTruth != null ) { \n\t\t\t\tgroundTruth . submit ( NUM00 , nops , keys , null , BatchRemoveConstructor . RETURN_MUTATION_COUNT , null ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F796 ( lock ) } \n\t$F1274 } \n"}, {"code": "public boolean allowMultipleAdditions ( String systemName ) { \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected static boolean isObjectClassPresent ( Set objectClasses , String objectClass ) { \n\tif $F1032 ( objectClasses ) { \n\t\t$F10531 ( itr , objectClasses ) while $F2921 ( itr ) { \n\t\t\t$F2778 ( serviceOC , itr ) $F72433 ( serviceOC , objectClass , _BOOL ) } \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void writeField $F16495 ( name , value ) throws $F3258 $F261761 ( writeField , name , Integer , value ) "}, {"code": "public static double lnFactorial ( int x ) { \n\tif ( x < NUM00 ) $F11416 ( x ) else if ( x > NUM00 ) return lnGamma ( x + NUM00 ) ; \n\telse { \n\t\t$F2199 ( l , factorialsBuffer ) for ( int i = l ; \n\t\ti <= x ; \n\t\ti ++ ) { \n\t\t\tfactorialsBuffer . add ( log ( i ) + factorialsBuffer . get ( i - NUM00 ) ) ; \n\t\t\t} \n\t\t$F8313 ( factorialsBuffer , x ) } \n\t} \n"}, {"code": "public void sync $F72 throws IOException { \n\ttry $F24081 ( latch ) catch ( InterruptedException e ) { \n\t\t$F84406 ( Thread ) throw IOExceptionSupport . create ( e ) ; \n\t\t} \n\tfailOnError ( ) ; \n\t} \n"}, {"code": "public int addAndGet ( T obj , int delta ) { \n\tfor ( $F589 ) { \n\t\tint current = get ( obj ) ; \n\t\tint next = current + delta ; \n\t\t$F158832 ( compareAndSet , obj , current , next ) } \n\t} \n"}, {"code": "public static void closeSilently ( Closeable closeable ) { \n\t$F2329 ( closeable ) try $F881 ( closeable ) $F41337 ( rethrown ) $F63878 } \n"}, {"code": "public synchronized boolean append $F3295 ( data ) { \n\tif ( data == null ) { \n\t\t$F135076 ( Cfg , Check , TAG ) return _BOOL ; \n\t\t} \n\tFileOutputStream fout = null ; \n\tOutputStream out = null ; \n\ttry { \n\t\tfout = new FileOutputStream ( file , _BOOL ) ; \n\t\tout = new BufferedOutputStream ( fout , data . length ) ; \n\t\tout . write ( data ) ; \n\t\t$F1206 ( out ) } \n\tcatch ( final Exception ex ) { \n\t\treturn _BOOL ; \n\t\t} \n\tfinally { \n\t\tif ( fout != null ) { \n\t\t\ttry $F881 ( fout ) catch ( final IOException e ) { \n\t\t\t\t$F44960 ( Cfg , Check , e ) if ( Cfg . DEBUG ) { \n\t\t\t\t\tCheck . log ( $F31144 ( TAG , e ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tif ( out != null ) { \n\t\t\ttry $F881 ( out ) catch ( final IOException e ) { \n\t\t\t\t$F44960 ( Cfg , Check , e ) if ( Cfg . DEBUG ) { \n\t\t\t\t\tCheck . log ( $F31144 ( TAG , e ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F45923 private void notifyListListeners $F72 { \n\tif $F5973 ( listListeners ) { \n\t\tList temp = new ArrayList $F6680 ( sensorDataObjects ) ; \n\t\t$F2966 ( temp , objectStorages ) for ( ListListener $F1011 listListener : listListeners ) { \n\t\t\tlistListener . contentChanged ( temp ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static InetAddress intToInetAddress ( int hostAddress ) { \n\t$F112238 ( hostAddress ) $F96 addressBytes = { \n\t\t$F167643 ( hostAddress ) , ( byte ) ( $F43599 ( hostAddress ) ) , ( byte ) ( $F43599 ( hostAddress ) ) , ( byte ) ( $F43599 ( hostAddress ) ) } \n\t; \n\ttry { \n\t\treturn InetAddress . getByAddress ( addressBytes ) ; \n\t\t} \n\tcatch ( UnknownHostException e ) $F10176 } \n"}, {"code": "private AFTPClient actionOpen $F72 throws IOException , PageException { \n\trequired ( NUM00 , server ) ; \n\trequired ( NUM00 , username ) ; \n\trequired ( NUM00 , password ) ; \n\tAFTPClient client = getClient ( ) ; \n\twriteCfftp ( client ) ; \n\treturn client ; \n\t} \n"}, {"code": "public void testPlusMathContextPositive $F72 { \n\tString a = NUM00 ; \n\tint aScale = NUM00 ; \n\tint precision = NUM00 ; \n\tRoundingMode rm = RoundingMode . FLOOR ; \n\t$F9512 ( mc , precision , rm ) String c = NUM00 ; \n\tint cScale = NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) BigDecimal res = aNumber . plus ( mc ) ; \n\t$F1925 ( assertEquals , c , res ) $F1928 ( assertEquals , cScale , res ) } \n"}, {"code": "private static $F1469 zzUnpackCMap ( String packed ) { \n\tint size = NUM00 ; \n\tfor ( int i = NUM00 , length = packed . length ( ) ; \n\ti < length ; \n\ti += NUM00 ) { \n\t\tsize += packed . charAt ( i ) ; \n\t\t} \n\t$F18064 ( map , size ) int i = NUM00 ; \n\tint j = NUM00 ; \n\twhile $F7007 ( i , packed ) { \n\t\t$F52835 ( count , packed , i ) $F52837 ( value , packed , i ) do map [ j ++ ] = value ; \n\t\twhile ( -- count > NUM00 ) ; \n\t\t} \n\treturn map ; \n\t} \n"}, {"code": "public V putIfAbsent ( final K k , final V v ) { \n\tfinal WeakReference $F2193 ref = newWeakRef ( k , v , referenceQueue ) ; \n\tfinal WeakReference $F2193 oldRef = map . putIfAbsent ( k , ref ) ; \n\tfinal V oldVal = oldRef == null ? null : oldRef . get ( ) ; \n\tif ( oldRef != null && oldVal == null ) { \n\t\tif ( map . replace ( k , oldRef , ref ) ) { \n\t\t\tif ( queue . add ( v ) && DEBUG ) { \n\t\t\t\t$F8922 ( log , k , v ) } \n\t\t\tdidUpdate ( k , ref , oldRef ) ; \n\t\t\t$F1274 } \n\t\t} \n\tif ( oldVal == null ) { \n\t\tif ( queue . add ( v ) && DEBUG ) { \n\t\t\t$F8922 ( log , k , v ) } \n\t\tdidUpdate ( k , ref , null ) ; \n\t\t$F1274 } \n\treturn oldVal ; \n\t} \n"}, {"code": "public int diff_commonSuffix ( String text1 , String text2 ) { \n\t$F1749 ( text1_length , text1 ) $F1749 ( text2_length , text2 ) $F17565 ( n , Math , text1_length , text2_length ) for ( $F9993 ( i , n ) ) { \n\t\tif ( text1 . charAt ( text1_length - i ) != text2 . charAt ( text2_length - i ) ) $F143681 ( i ) } \n\treturn n ; \n\t} \n"}, {"code": "public void close $F72 { \n\t$F263153 ( elementLayers ) inputSource = null ; \n\tcurListener = null ; \n\t} \n"}, {"code": "public void start $F72 { \n\tif ( monitorThread != null ) { \n\t\tif ( ! monitorThread . isAlive ( ) ) $F5795 ( startMonitorThread ) else $F21338 ( LOG ) } \n\telse $F5795 ( startMonitorThread ) } \n"}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "@ HLEUnimplemented $F79740 public int sceUsbCamPollReadVideoFrameEnd $F72 { \n\tif ( jpegBuffer == null || jpegBuffer . isNull ( ) ) { \n\t\treturn SceKernelErrors . ERROR_USBCAM_NO_READ_ON_VIDEO_FRAME ; \n\t\t} \n\tif ( currentVideoFrameCount <= lastVideoFrameCount ) { \n\t\tif $F585 ( log ) { \n\t\t\tlog . debug ( String . format ( NUM00 , currentVideoFrameCount , lastVideoFrameCount ) ) ; \n\t\t\t} \n\t\treturn SceKernelErrors . ERROR_USBCAM_NO_VIDEO_FRAME_AVAILABLE ; \n\t\t} \n\treturn writeCurrentVideoImage ( jpegBuffer , jpegBufferSize ) ; \n\t} \n"}, {"code": "public void scale ( int factor ) { \n\tif ( m_icon != null ) { \n\t\tremoveAll ( ) ; \n\t\tImage pic = m_icon . getImage ( ) ; \n\t\tint width = m_icon . getIconWidth ( ) ; \n\t\t$F79641 ( height , m_icon ) int reduction = width / factor ; \n\t\twidth -= reduction ; \n\t\theight -= reduction ; \n\t\tpic = pic . getScaledInstance ( width , height , Image . SCALE_SMOOTH ) ; \n\t\t$F308462 ( m_icon , pic ) m_visualLabel = new JLabel ( m_icon ) ; \n\t\tadd ( m_visualLabel , BorderLayout . CENTER ) ; \n\t\t$F86864 ( d , m_visualLabel ) Dimension d2 = new Dimension ( $F63353 ( d ) + NUM00 , $F63349 ( d ) + NUM00 ) ; \n\t\tsetMinimumSize ( d2 ) ; \n\t\tsetPreferredSize ( d2 ) ; \n\t\tsetMaximumSize ( d2 ) ; \n\t\t} \n\t} \n"}, {"code": "private void readObject ( ObjectInputStream in ) throws $F6427 { \n\t$F6428 ( in ) try $F7429 ( initFromName , getName ) catch ( RuntimeException e ) { \n\t\tif ( e instanceof NullPointerException || e instanceof IllegalArgumentException ) { \n\t\t\tInvalidObjectException ee = new InvalidObjectException $F1783 ( e ) ; \n\t\t\tee . initCause ( e ) ; \n\t\t\tthrow ee ; \n\t\t\t} \n\t\tthrow e ; \n\t\t} \n\t} \n"}, {"code": "public String toLowerCamel $F72 { \n\treturn toCamel ( CaseFormat . LOWER_CAMEL ) ; \n\t} \n"}, {"code": "$F112611 ( encoded , base64Data , len , removeWhiteSpace , FOURBYTE , numberQuadruple , b1 , b2 , b3 , b4 , d1 , d2 , d3 , d4 , i , encodedIndex , dataIndex , decodedData , isData , base64Alphabet , isPad , tmp , System ) "}, {"code": "protected List $F30635 sortFullCopySourceList ( List $F30635 fcSourceObjects ) { \n\tList $F30635 sortedSourceObjects = new ArrayList $F30635 $F72 ; \n\tMap < String , BlockObject > fcSourcObjectsMap = new HashMap < String , BlockObject > $F72 ; \n\tfor ( BlockObject fcSourceObject : fcSourceObjects ) { \n\t\tfcSourcObjectsMap . put ( fcSourceObject . getLabel ( ) , fcSourceObject ) ; \n\t\t} \n\t$F3803 fcSourceLabels = new $F5 $F57797 ( fcSourcObjectsMap ) ; \n\tCollections . sort ( fcSourceLabels ) ; \n\tfor ( String fcSourceLabel : fcSourceLabels ) $F62006 ( sortedSourceObjects , fcSourcObjectsMap , fcSourceLabel ) return sortedSourceObjects ; \n\t} \n"}, {"code": "public E poll $F72 { \n\tif ( isEmpty ( ) ) $F1337 E result = elements [ NUM00 ] ; \n\tremoveAt ( NUM00 ) ; \n\treturn result ; \n\t} \n"}, {"code": "public MovieSetAddAction ( boolean withTitle ) { \n\tif ( withTitle ) { \n\t\t$F364853 ( putValue , NAME , BUNDLE ) } \n\tputValue ( LARGE_ICON_KEY , IconManager . LIST_ADD ) ; \n\tputValue ( SMALL_ICON , IconManager . LIST_ADD ) ; \n\t$F364853 ( putValue , SHORT_DESCRIPTION , BUNDLE ) } \n"}, {"code": "protected void createRegistry ( int port ) { \n\tif ( rmiRegistry == null ) { \n\t\ttry { \n\t\t\t$F15998 ( logger , port ) rmiRegistry = LocateRegistry . createRegistry ( port ) ; \n\t\t\t} \n\t\tcatch ( Throwable e ) { \n\t\t\tthrow new ServerRuntimeException ( NUM00 + port , e ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void poll ( final UdpSocketStatisticsHandler handler ) { \n\tthis . statisticsHandler = handler ; \n\ttry { \n\t\t$F37249 ( fileLoader ) final ByteBuffer buffer = fileLoader . getBuffer ( ) ; \n\t\t$F2268 ( lineParser ) lineParser . handleToken ( buffer , buffer . position ( ) , buffer . limit ( ) ) ; \n\t\t} \n\tfinally { \n\t\tthis . statisticsHandler = null ; \n\t\t} \n\tmonitoredSockets . purgeEntriesOlderThan ( updateCount ) ; \n\tupdateCount ++ ; \n\t} \n"}, {"code": "$F9105 ( url ) "}, {"code": "private void resetInternal $F72 { \n\tmTransitionState = TRANSITION_NONE ; \n\t$F9952 ( Arrays , mStartAlphas ) mStartAlphas [ NUM00 ] = NUM00 ; \n\t$F9952 ( Arrays , mAlphas ) mAlphas [ NUM00 ] = NUM00 ; \n\tArrays . fill ( mIsLayerOn , _BOOL ) ; \n\tmIsLayerOn [ NUM00 ] = _BOOL ; \n\t} \n"}, {"code": "void fixWhiteSpace $F72 { \n\tfinal int $F22865 ( index , mOutputBuilder ) ; \n\tif ( index >= NUM00 ) { \n\t\t$F1090 ( lastCharacter , mOutputBuilder , index ) if $F32022 ( Character , lastCharacter ) $F86 ( mOutputBuilder ) } \n\t} \n"}, {"code": "public void handleTblRequestHandlerListHrefDupActionRequest ( RequestInvocationEvent event ) throws ModelControlException { \n\ttry { \n\t\tMap values = getValues ( ) ; \n\t\tonBeforeSaveProfile ( values ) ; \n\t\t$F50322 ( setPageSessionAttribute , PROPERTY_ATTRIBUTE , values ) SCSOAPBindingRequestHandlerListDupViewBean vb = ( SCSOAPBindingRequestHandlerListDupViewBean ) getViewBean ( SCSOAPBindingRequestHandlerListDupViewBean . class ) ; \n\t\tunlockPageTrail ( ) ; \n\t\tpassPgSessionMap ( vb ) ; \n\t\tint idx = Integer . parseInt ( ( String ) getDisplayFieldValue ( TBL_REQUEST_HANDLER_LIST_HREF_DUP_ACTION ) ) ; \n\t\tvb . setDupIndex ( idx ) ; \n\t\t$F50333 ( vb , getRequestContext ) } \n\t$F50339 ( setInlineAlertMessage , CCAlert , e ) } \n"}, {"code": "public boolean expired ( long expire ) { \n\tlong mod = time . getTime ( ) ; \n\t$F657 ( now , System ) long diff = now - mod ; \n\tif ( diff > expire && getSource ( ) != NETWORK ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F110091 ( mv , type , Opcodes , local , asArray , stack ) "}, {"code": "private static native $F806 specialProperties $F72 ; \n"}, {"code": "private void handleDoneQuery ( final UUID queryId , final $F8318 doneQueryFuture ) { \n\ttry { \n\t\t$F217726 ( doneQueryFuture ) $F2757 } \n\t$F73196 ( e ) catch ( ExecutionException e ) $F9491 ( e ) } \n"}, {"code": "public void storeDevice ( Device d ) { \n\t$F18748 ( isMaster ) $F8249 ( d ) $F25238 ( now , System ) writeUpdatedDeviceToStorage ( d ) ; \n\t$F198326 ( lastWriteTimes , d , now ) } \n"}, {"code": "synchronized public static $F3803 formerIdentities $F72 { \n\tif ( instance == null ) { \n\t\tinstance = new NodeIdentity $F72 ; \n\t\tlog . info ( NUM00 , instance . getIdentity ( ) ) ; \n\t\t} \n\treturn instance . getFormerIdentities ( ) ; \n\t} \n"}, {"code": "public final double doOperation $F72 { \n\t$F62063 ( dim , parameter ) double sum = NUM00 ; \n\tif ( usesPriorOnSum ) { \n\t\tfor ( $F119 ( i , dim ) ) { \n\t\t\tsum += Math . abs ( parameter . getParameterValue ( i ) ) ; \n\t\t\t} \n\t\t} \n\tfinal int pos = MathUtils . nextInt ( dim ) ; \n\tfinal int value = ( int ) parameter . getParameterValue ( pos ) ; \n\tdouble logq = NUM00 ; \n\tif ( value == NUM00 ) { \n\t\tlogq = bitFlipHelper . flipZero ( pos , dim , sum ) ; \n\t\t} \n\telse if ( value == NUM00 ) { \n\t\tlogq = bitFlipHelper . flipOne ( pos , dim , sum ) ; \n\t\t} \n\telse if ( value == - NUM00 ) { \n\t\tlogq = bitFlipHelper . flipNegOne ( pos , dim , sum ) ; \n\t\t} \n\telse $F11389 if ( ! usesPriorOnSum ) { \n\t\tlogq = NUM00 ; \n\t\t} \n\treturn logq ; \n\t} \n"}, {"code": "$F234188 ( webClient ) "}, {"code": "$F1 public void chartProgress ( ChartProgressEvent event ) $F845 "}, {"code": "public void init ( Object o , int depth , int traversal ) { \n\t$F725 ( m_queue ) m_depth = depth ; \n\tif ( traversal < NUM00 || traversal >= Constants . TRAVERSAL_COUNT ) $F11416 ( traversal ) m_traversal = traversal ; \n\tm_includeNodes = ( traversal == Constants . NODE_TRAVERSAL || traversal == Constants . NODE_AND_EDGE_TRAVERSAL ) ; \n\tm_includeEdges = ( traversal == Constants . EDGE_TRAVERSAL || traversal == Constants . NODE_AND_EDGE_TRAVERSAL ) ; \n\tif ( m_includeNodes ) { \n\t\tif ( o instanceof Node ) { \n\t\t\t$F125471 ( m_queue , o ) } \n\t\telse { \n\t\t\tIterator tuples = ( Iterator ) o ; \n\t\t\twhile $F2921 ( tuples ) m_queue . add ( tuples . next ( ) , NUM00 ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( o instanceof Node ) { \n\t\t\t$F125481 ( n , o ) m_queue . visit ( n , NUM00 ) ; \n\t\t\tIterator edges = getEdges ( n ) ; \n\t\t\twhile $F2921 ( edges ) { \n\t\t\t\t$F17998 ( e , edges ) Node nn = e . getAdjacentNode ( n ) ; \n\t\t\t\tm_queue . visit ( nn , NUM00 ) ; \n\t\t\t\tif ( m_queue . getDepth ( e ) < NUM00 ) $F125471 ( m_queue , e ) } \n\t\t\t} \n\t\telse { \n\t\t\tIterator tuples = ( Iterator ) o ; \n\t\t\twhile $F2921 ( tuples ) { \n\t\t\t\t$F67766 ( n , tuples ) m_queue . visit ( n , NUM00 ) ; \n\t\t\t\tIterator edges = getEdges ( n ) ; \n\t\t\t\twhile $F2921 ( edges ) { \n\t\t\t\t\t$F17998 ( e , edges ) Node nn = e . getAdjacentNode ( n ) ; \n\t\t\t\t\tm_queue . visit ( nn , NUM00 ) ; \n\t\t\t\t\tif ( m_queue . getDepth ( e ) < NUM00 ) $F125471 ( m_queue , e ) } \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "$F1 public JapaneseDate dateEpochDay ( long epochDay ) { \n\treturn new JapaneseDate ( LocalDate . ofEpochDay ( epochDay ) ) ; \n\t} \n"}, {"code": "public long convertTransverseMercatorToGeodetic ( double Easting , double Northing ) { \n\tdouble c ; \n\tdouble de ; \n\tdouble dlam ; \n\tdouble eta ; \n\tdouble eta2 ; \n\tdouble eta3 ; \n\tdouble eta4 ; \n\tdouble ftphi ; \n\tint i ; \n\tdouble sn ; \n\tdouble sr ; \n\tdouble t ; \n\tdouble tan2 ; \n\tdouble tan4 ; \n\tdouble t10 ; \n\tdouble t11 ; \n\tdouble t12 ; \n\tdouble t13 ; \n\tdouble t14 ; \n\tdouble t15 ; \n\tdouble t16 ; \n\tdouble t17 ; \n\tdouble tmd ; \n\tdouble tmdo ; \n\tlong Error_Code = TRANMERC_NO_ERROR ; \n\tif $F448867 ( Easting , TranMerc_False_Easting , TranMerc_Delta_Easting ) { \n\t\tError_Code |= TRANMERC_EASTING_ERROR ; \n\t\t} \n\tif $F448867 ( Northing , TranMerc_False_Northing , TranMerc_Delta_Northing ) { \n\t\tError_Code |= TRANMERC_NORTHING_ERROR ; \n\t\t} \n\tif ( Error_Code == TRANMERC_NO_ERROR ) { \n\t\t$F448886 ( tmdo , TranMerc_ap , TranMerc_Origin_Lat , TranMerc_bp , Math , TranMerc_cp , TranMerc_dp , TranMerc_ep ) tmd = tmdo + ( Northing - TranMerc_False_Northing ) / TranMerc_Scale_Factor ; \n\t\tsr = TranMerc_a * ( NUM00 - TranMerc_es ) / Math . pow ( Math . sqrt ( NUM00 - TranMerc_es * Math . pow ( Math . sin ( NUM00 ) , NUM00 ) ) , NUM00 ) ; \n\t\tftphi = tmd / sr ; \n\t\tfor ( $F61299 ( i ) ) { \n\t\t\t$F448886 ( t10 , TranMerc_ap , ftphi , TranMerc_bp , Math , TranMerc_cp , TranMerc_dp , TranMerc_ep ) sr = TranMerc_a * ( NUM00 - TranMerc_es ) / Math . pow ( Math . sqrt ( $F264452 ( TranMerc_es , Math , ftphi ) ) , NUM00 ) ; \n\t\t\tftphi = ftphi + ( tmd - t10 ) / sr ; \n\t\t\t} \n\t\tsr = TranMerc_a * ( NUM00 - TranMerc_es ) / Math . pow ( Math . sqrt ( $F264452 ( TranMerc_es , Math , ftphi ) ) , NUM00 ) ; \n\t\tsn = TranMerc_a / Math . sqrt ( $F264452 ( TranMerc_es , Math , ftphi ) ) ; \n\t\tc = Math . cos ( ftphi ) ; \n\t\tt = Math . tan ( ftphi ) ; \n\t\ttan2 = t * t ; \n\t\ttan4 = tan2 * tan2 ; \n\t\teta = TranMerc_ebs * Math . pow ( c , NUM00 ) ; \n\t\teta2 = eta * eta ; \n\t\teta3 = eta2 * eta ; \n\t\teta4 = eta3 * eta ; \n\t\tde = Easting - TranMerc_False_Easting ; \n\t\tif $F20932 ( Math , de ) de = NUM00 ; \n\t\tt10 = t / ( NUM00 * sr * sn * Math . pow ( TranMerc_Scale_Factor , NUM00 ) ) ; \n\t\tt11 = t * ( NUM00 + NUM00 * tan2 + eta - $F124737 ( Math , eta ) - NUM00 * tan2 * eta ) / ( NUM00 * sr * Math . pow ( sn , NUM00 ) * Math . pow ( TranMerc_Scale_Factor , NUM00 ) ) ; \n\t\tt12 = t * ( NUM00 + NUM00 * tan2 + NUM00 * eta + NUM00 * tan4 - NUM00 * tan2 * eta - NUM00 * eta2 + NUM00 * eta3 - NUM00 * tan2 * eta2 - NUM00 * tan4 * eta + NUM00 * eta4 + NUM00 * tan4 * eta2 + NUM00 * tan2 * eta3 - NUM00 * tan2 * eta4 ) / ( NUM00 * sr * Math . pow ( sn , NUM00 ) * Math . pow ( TranMerc_Scale_Factor , NUM00 ) ) ; \n\t\tt13 = t * ( NUM00 + NUM00 * tan2 + NUM00 * tan4 + $F124737 ( Math , t ) ) / ( NUM00 * sr * Math . pow ( sn , NUM00 ) * Math . pow ( TranMerc_Scale_Factor , NUM00 ) ) ; \n\t\tLatitude = ftphi - Math . pow ( de , NUM00 ) * t10 + Math . pow ( de , NUM00 ) * t11 - Math . pow ( de , NUM00 ) * t12 + Math . pow ( de , NUM00 ) * t13 ; \n\t\tt14 = NUM00 / ( sn * c * TranMerc_Scale_Factor ) ; \n\t\tt15 = ( NUM00 + NUM00 * tan2 + eta ) / ( $F124737 ( Math , sn ) * c * Math . pow ( TranMerc_Scale_Factor , NUM00 ) ) ; \n\t\tt16 = ( NUM00 + NUM00 * eta + NUM00 * tan2 - NUM00 * eta2 + NUM00 * tan2 * eta + NUM00 * tan4 - NUM00 * eta3 + NUM00 * tan2 * eta2 + NUM00 * tan2 * eta3 ) / ( $F124737 ( Math , sn ) * c * Math . pow ( TranMerc_Scale_Factor , NUM00 ) ) ; \n\t\tt17 = ( NUM00 + NUM00 * tan2 + NUM00 * tan4 + $F124737 ( Math , t ) ) / ( $F124737 ( Math , sn ) * c * Math . pow ( TranMerc_Scale_Factor , NUM00 ) ) ; \n\t\tdlam = de * t14 - Math . pow ( de , NUM00 ) * t15 + Math . pow ( de , NUM00 ) * t16 - Math . pow ( de , NUM00 ) * t17 ; \n\t\tLongitude = TranMerc_Origin_Long + dlam ; \n\t\tif ( Math . abs ( Latitude ) > ( NUM00 * PI / NUM00 ) ) Error_Code |= TRANMERC_NORTHING_ERROR ; \n\t\tif ( ( Longitude ) > ( PI ) ) { \n\t\t\tLongitude -= ( NUM00 * PI ) ; \n\t\t\tif $F34222 ( Math , Longitude , PI ) Error_Code |= TRANMERC_EASTING_ERROR ; \n\t\t\t} \n\t\tif ( Math . abs ( dlam ) > ( NUM00 * PI / NUM00 ) * Math . cos ( Latitude ) ) { \n\t\t\tError_Code |= TRANMERC_LON_WARNING ; \n\t\t\t} \n\t\tif ( Latitude > NUM00 ) Error_Code |= TRANMERC_LON_WARNING ; \n\t\t} \n\treturn ( Error_Code ) ; \n\t} \n"}, {"code": "private void checkEmpty $F72 { \n\tfor ( $F50810 ( i , gridCount ) ) { \n\t\tIgniteCache $F20665 cache = jcache ( i ) ; \n\t\tassertEquals ( NUM00 , cache . localSize ( ) ) ; \n\t\t$F70108 ( assertEquals , cache ) for ( $F40424 ( peekMode , CachePeekMode ) ) { \n\t\t\tassertEquals ( NUM00 , cache . localSize ( peekMode ) ) ; \n\t\t\tassertEquals ( NUM00 , cache . size ( peekMode ) ) ; \n\t\t\t} \n\t\t} \n\tcheckPrimarySize ( NUM00 ) ; \n\t} \n"}, {"code": "$F9341 find ( int h , Object k ) { \n\t$F140572 ( e , this ) if ( k != null ) { \n\t\tdo { \n\t\t\tK ek ; \n\t\t\tif ( e . hash == h && ( ( ek = e . key ) == k || ek != null && myHashingStrategy . equals ( ( K ) k , ek ) ) ) { \n\t\t\t\treturn e ; \n\t\t\t\t} \n\t\t\t} \n\t\twhile ( $F53574 ( e ) ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "$F112793 ( key , entry , pruneIfNeeded , file , getFileForKey , fos , e , success , VolleyLog , putEntry , deleted ) "}, {"code": "@ LoopProcessorAnnotations ( loopProcessorAnnotations = { \n\t@ LoopProcessorAnnotation ( processPath = { \n\t\tIModelingElementDefinitions . CLASSES_PROCESSOR , IModelingElementDefinitions . OPERATIONS_PROCESSOR } \n\t) , @ LoopProcessorAnnotation ( processPath = { \n\t\tIModelingElementDefinitions . INTERFACES_PROCESSOR , IModelingElementDefinitions . OPERATIONS_PROCESSOR } \n\t) } \n, aspect = LoopAspectConstants . AFTER ) public static void operationsProcessor ( @ GenerationRegistry GenerationPolicyRegistry generationValueGetter , @ GenerationBaseElement Object element , @ GenerationLoopElement Object modelPackage , @ GenerationLoopElement ( id = { \n\tIModelingElementDefinitions . CLASSES_PROCESSOR , IModelingElementDefinitions . INTERFACES_PROCESSOR } \n) Object parent ) { \n\t$F6689 userAddedDependTypes = generationValueGetter . getValues ( DEPEND_TYPES_TRACKER , parent ) ; \n\t$F6689 parametersArgument = generationValueGetter . getValues ( IModelingDecisions . OPERATION_PARAMETER_ARGUMENT , element , parent ) ; \n\tfor ( Object item : parametersArgument ) { \n\t\tif ( item instanceof SimpleEntry == _BOOL ) $F1448 SimpleEntry $F5162 simpleEntry = ( SimpleEntry $F5162 ) item ; \n\t\tObject type = simpleEntry . getKey ( ) ; \n\t\tif $F2200 ( userAddedDependTypes , type ) { \n\t\t\t$F6689 types = generationValueGetter . getValues ( IModelingConstants . TYPES_TRACKER , modelPackage , type ) ; \n\t\t\tif $F2979 ( types ) $F1448 addDepend ( generationValueGetter , parent , type ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static void addLanguage ( Language language ) { \n\t$F8249 ( language ) ArrayList < Language > list = new ArrayList < Language > $F6 ( Arrays , s_languages ) ; \n\tlist . add ( language ) ; \n\ts_languages = new Language $F2313 ( list ) ; \n\tlist . toArray ( s_languages ) ; \n\t} \n"}, {"code": "public static int binarySearchCeil ( $F2469 a , long key , boolean inclusive , boolean stayInBounds ) { \n\t$F8533 ( index , Arrays , a , key ) index = index < NUM00 ? ~ index : ( inclusive ? index : ( index + NUM00 ) ) ; \n\treturn stayInBounds ? Math . min ( a . length - NUM00 , index ) : index ; \n\t} \n"}, {"code": "protected void doAddUser ( User user ) throws UsersRepositoryException { \n\tConnection conn = null ; \n\tPreparedStatement addUserStatement = null ; \n\ttry { \n\t\tconn = openConnection ( ) ; \n\t\taddUserStatement = conn . prepareStatement ( m_insertUserSql ) ; \n\t\tsetUserForInsertStatement ( user , addUserStatement ) ; \n\t\t$F1699 ( addUserStatement ) } \n\tcatch ( SQLException sqlExc ) { \n\t\t$F301 ( sqlExc ) throw new UsersRepositoryException ( NUM00 , sqlExc ) ; \n\t\t} \n\tfinally { \n\t\ttheJDBCUtil . closeJDBCStatement ( addUserStatement ) ; \n\t\ttheJDBCUtil . closeJDBCConnection ( conn ) ; \n\t\t} \n\t} \n"}, {"code": "void blockMix128 ( long k1 , long k2 ) { \n\th1 ^= mixK1 ( k1 ) ; \n\t$F100868 ( h1 , Long ) h1 += h2 ; \n\th1 = ( h1 * NUM00 ) + NUM00 ; \n\th2 ^= mixK2 ( k2 ) ; \n\t$F100868 ( h2 , Long ) h2 += h1 ; \n\th2 = ( h2 * NUM00 ) + NUM00 ; \n\t} \n"}, {"code": "private void registerHost ( SimEvent ev ) { \n\tNetworkHost hs = ( NetworkHost ) ev . getData ( ) ; \n\t$F33163 ( hostlist , hs ) } \n"}, {"code": "$F1 public void reconcileFlow ( OFMatchReconcile ofmRcIn , EventPriority priority ) { \n\t$F8249 ( ofmRcIn ) OFMatchReconcile myOfmRc = new OFMatchReconcile ( ofmRcIn ) ; \n\tflowQueue . offer ( myOfmRc , priority ) ; \n\t$F72375 ( ctrFlowReconcileRequest ) $F6357 ( currTime ) long delay = NUM00 ; \n\tif ( currTime . after ( new Date ( lastReconcileTime . getTime ( ) + NUM00 ) ) ) { \n\t\tdelay = NUM00 ; \n\t\t} \n\telse { \n\t\tdelay = FLOW_RECONCILE_DELAY_MILLISEC ; \n\t\t} \n\tflowReconcileTask . reschedule ( delay , TimeUnit . MILLISECONDS ) ; \n\tif $F8415 ( logger ) { \n\t\tlogger . trace ( NUM00 , myOfmRc . toString ( ) , flowQueue . size ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public Format ( String pFormatString ) { \n\tString formatVars [ ] = pFormatString . split ( NUM00 ) ; \n\t$F51416 ( mId , Integer , formatVars ) } \n"}, {"code": "$F112793 ( key , entry , pruneIfNeeded , file , getFileForKey , fos , e , success , VolleyLog , putEntry , deleted ) "}, {"code": "void createJar ( FileOutputStream outStream , $F48568 all ) throws IOException { \n\tJarOutputStream jar = new JarOutputStream ( outStream ) ; \n\tfor ( Entry $F3068 entry : all . entrySet ( ) ) { \n\t\t$F3477 ( name , entry ) JarEntry jar_entry = new JarEntry ( name ) ; \n\t\tjar . putNextEntry ( jar_entry ) ; \n\t\tjar . write ( entry . getValue ( ) ) ; \n\t\t$F22108 ( jar ) } \n\t$F1206 ( jar ) $F59 ( jar ) } \n"}, {"code": "public void appendCell ( int value ) $F45719 ( appendCell , String , value ) "}, {"code": "public void expectServerProxyFailed $F72 { \n\texpectedApiCalls . add ( new ApiCall ( SERVER_PROXY_FAILED ) ) ; \n\t} \n"}, {"code": "$F120210 ( maximumPullScroll , getMaximumPullScroll , pLeft , getPaddingLeft , pTop , getPaddingTop , pRight , getPaddingRight , pBottom , getPaddingBottom , getPullToRefreshScrollDirection , HORIZONTAL , mMode , mHeaderLayout , mFooterLayout , VERTICAL , DEBUG , Log , LOG_TAG , String , setPadding ) "}, {"code": "public Object remove ( final Object key ) $F20067 ( parameters , key ) "}, {"code": "$F1 public void recalculateAttributeStatistics ( Attribute attribute ) { \n\t$F32586 $F53628 ( allAttributes ) ; \n\tallAttributes . add ( attribute ) ; \n\trecalculateAttributeStatistics ( allAttributes ) ; \n\t} \n"}, {"code": "$F18907 ( children ) "}, {"code": "public void insertColumn ( int columnIndex , ColumnSpec columnSpec ) { \n\tif ( columnIndex < NUM00 || columnIndex > getColumnCount ( ) ) { \n\t\tthrow new IndexOutOfBoundsException ( $F90567 ( columnIndex , getColumnCount ) ) ; \n\t\t} \n\t$F143037 ( colSpecs , columnIndex , columnSpec ) shiftComponentsHorizontally ( columnIndex , _BOOL ) ; \n\tadjustGroupIndices ( colGroupIndices , columnIndex , _BOOL ) ; \n\t} \n"}, {"code": "public int match ( String s ) { \n\tString rep = $F626 ( _dataChars , _nDataChars ) ; \n\treturn rep . indexOf ( s ) ; \n\t} \n"}, {"code": "private int calcRhsSize ( Production production ) { \n\tint result = production . getRHSSizeWithoutEpsilon ( ) ; \n\tif ( production . getLHS ( ) instanceof AuxiliaryLHS4SemanticShiftAction ) { \n\t\tfinal AuxiliaryLHS4SemanticShiftAction auxAction = ( AuxiliaryLHS4SemanticShiftAction ) production . getLHS ( ) ; \n\t\tresult += auxAction . numPrecedingSymbolsNotEpsilon ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private BshMethod loadScriptedCommand ( InputStream in , String name , $F749 argTypes , String resourcePath , Interpreter interpreter ) throws UtilEvalError { \n\ttry { \n\t\tinterpreter . eval ( new InputStreamReader ( in ) , this , resourcePath ) ; \n\t\t} \n\tcatch ( EvalError e ) { \n\t\t$F62755 ( Interpreter , e ) throw new UtilEvalError $F16296 ( e ) ; \n\t\t} \n\tBshMethod meth = getMethod ( name , argTypes ) ; \n\treturn meth ; \n\t} \n"}, {"code": "public static Object invokeCompiledCommand ( Class commandClass , $F131 args , Interpreter interpreter , CallStack callstack ) throws UtilEvalError { \n\t$F224767 ( invokeArgs , args ) invokeArgs [ NUM00 ] = interpreter ; \n\tinvokeArgs [ NUM00 ] = callstack ; \n\t$F7057 ( System , args , invokeArgs ) BshClassManager bcm = interpreter . getClassManager ( ) ; \n\ttry { \n\t\treturn Reflect . invokeStaticMethod ( bcm , commandClass , NUM00 , invokeArgs ) ; \n\t\t} \n\tcatch ( InvocationTargetException e ) { \n\t\tthrow new UtilEvalError ( NUM00 + e . getTargetException ( ) ) ; \n\t\t} \n\tcatch ( ReflectError e ) { \n\t\tthrow new UtilEvalError ( NUM00 + e ) ; \n\t\t} \n\t} \n"}, {"code": "private static void computeProbabilitiesMultinomialLogistic $F9830 ( responses ) { \n\t$F1986 r = responses . clone ( ) ; \n\tfor ( $F1139 ( j , r ) ) { \n\t\tdouble sum = NUM00 ; \n\t\tboolean overflow = _BOOL ; \n\t\tfor ( $F1139 ( k , r ) ) { \n\t\t\tif ( r [ k ] - r [ j ] > NUM00 ) $F3468 ( overflow , _BOOL ) sum += Math . exp ( r [ k ] - r [ j ] ) ; \n\t\t\t} \n\t\tif ( overflow ) $F5629 ( responses , j ) else { \n\t\t\tresponses [ j ] = NUM00 / sum ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public int addClientExternal ( SSOToken token , Map props ) throws AMClientCapException { \n\tsynchronized ( externalClientData ) { \n\t\textCapInstance . addClient ( token , props ) ; \n\t\tString ct = getClientType ( props ) ; \n\t\tMap eMap = mergeWithParent ( props ) ; \n\t\texternalClientData . put ( ct , eMap ) ; \n\t\taddToIndexes ( ct , eMap ) ; \n\t\t} \n\t$F1082 } \n"}, {"code": "public static void delete ( File resourceToDelete ) throws IOException { \n\tif $F3428 ( resourceToDelete ) { \n\t\tdelete ( resourceToDelete . toPath ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "private void addExportRemoveVolumeSteps ( Workflow workflow , ProtectionSystem rpSystem , URI exportGroupID , $F28584 boIDs ) throws InternalException { \n\tExportGroup exportGroup = _dbClient . queryObject ( ExportGroup . class , exportGroupID ) ; \n\tString exportStep = workflow . createStepId ( ) ; \n\tinitTaskStatus ( exportGroup , exportStep , Operation . Status . pending , NUM00 ) ; \n\t$F42106 deviceToBlockObjects = new HashMap < URI , $F28584 > $F72 ; \n\tfor ( URI snapshotID : boIDs ) { \n\t\tBlockSnapshot $F34887 ( snapshot , _dbClient , snapshotID ) ; \n\t\tList $F30635 objectsToRemove = getExportObjectsForBookmark ( snapshot ) ; \n\t\tfor ( BlockObject blockObject : objectsToRemove ) { \n\t\t\t$F28584 blockObjects = deviceToBlockObjects . get ( blockObject . getStorageController ( ) ) ; \n\t\t\tif ( blockObjects == null ) { \n\t\t\t\tblockObjects = new ArrayList < URI > $F72 ; \n\t\t\t\tdeviceToBlockObjects . put ( blockObject . getStorageController ( ) , blockObjects ) ; \n\t\t\t\t} \n\t\t\t$F42096 ( blockObjects , blockObject ) } \n\t\t} \n\tfor ( Map . Entry < URI , $F28584 > deviceEntry : deviceToBlockObjects . entrySet ( ) ) { \n\t\t_log . info ( String . format ( NUM00 , exportGroup . getId ( ) , deviceEntry . getKey ( ) , deviceEntry . getValue ( ) ) ) ; \n\t\t_exportWfUtils . generateExportGroupRemoveVolumes ( workflow , STEP_EXPORT_REMOVE_SNAPSHOT , STEP_EXPORT_GROUP_DISABLE , deviceEntry . getKey ( ) , exportGroupID , deviceEntry . getValue ( ) ) ; \n\t\t} \n\t_log . info ( String . format ( $F181627 ( exportGroup ) ) ) ; \n\t} \n"}, {"code": "public double inferenceByGibbsSampling ( Document d , $F1986 pzd , int numBurnIn , int numSampling ) { \n\t$F9952 ( Arrays , pzd ) double loglikelihood = NUM00 ; \n\tfor ( $F41842 ( i , numBurnIn , numSampling ) ) { \n\t\tloglikelihood += gibbsSampling ( d ) ; \n\t\tif ( i >= numBurnIn ) { \n\t\t\tfor ( int topic : d . topics ) { \n\t\t\t\tif ( topic != NO_TOPIC ) pzd [ topic ] ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tloglikelihood = NUM00 ; \n\t\t\t} \n\t\t} \n\tnormalize ( pzd , alpha ) ; \n\treturn loglikelihood / numSampling ; \n\t} \n"}, {"code": "public static void remove ( String dbgToken ) $F106 ( dbgTable , dbgToken ) "}, {"code": "protected void checkSAXVersion ( Hashtable h ) { \n\t$F59851 ( h ) final String SAX_VERSION1_CLASS = NUM00 ; \n\tfinal String SAX_VERSION1_METHOD = NUM00 ; \n\tfinal String SAX_VERSION2_CLASS = NUM00 ; \n\tfinal String SAX_VERSION2_METHOD = NUM00 ; \n\tfinal String SAX_VERSION2BETA_CLASSNF = NUM00 ; \n\tfinal String SAX_VERSION2BETA_METHODNF = NUM00 ; \n\tfinal Class oneStringArg [ ] = { \n\t\t$F70518 } \n\t; \n\tfinal Class attributesArg [ ] = { \n\t\torg . xml . sax . Attributes . class } \n\t; \n\ttry $F70532 ( clazz , ObjectFactory , SAX_VERSION2BETA_CLASSNF , _BOOL , method , SAX_VERSION2BETA_METHODNF , attributesArg , h , VERSION ) catch ( Exception e ) { \n\t\t$F70535 ( h , ERROR , VERSION , e ) h . put ( ERROR , ERROR_FOUND ) ; \n\t\ttry $F70532 ( clazz , ObjectFactory , SAX_VERSION2_CLASS , _BOOL , method , SAX_VERSION2_METHOD , oneStringArg , h , VERSION ) catch ( Exception e2 ) { \n\t\t\t$F70535 ( h , ERROR , VERSION , e ) h . put ( ERROR , ERROR_FOUND ) ; \n\t\t\ttry $F70532 ( clazz , ObjectFactory , SAX_VERSION1_CLASS , _BOOL , method , SAX_VERSION1_METHOD , oneStringArg , h , VERSION ) catch ( Exception e3 ) { \n\t\t\t\t$F70535 ( h , ERROR , VERSION , e3 ) } \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected boolean isRecompilationNeeded $F23416 ( loadedChecksums ) { \n\tthis . checksums [ NUM00 ] = calculateChecksum ( ) ; \n\tif ( this . checksums [ NUM00 ] != loadedChecksums [ NUM00 ] ) { \n\t\tif ( Trace . swcChecksum ) $F111759 ( Trace ) return _BOOL ; \n\t\t} \n\tif ( ! isSwcChecksumEnabled ) { \n\t\tif ( Trace . swcChecksum ) $F111759 ( Trace ) return _BOOL ; \n\t\t} \n\tMap < QName , Long > signatureChecksums = swcDefSignatureChecksums ; \n\tif ( signatureChecksums == null ) { \n\t\tif ( Trace . swcChecksum ) $F111759 ( Trace ) } \n\telse { \n\t\tfor ( Map . Entry < QName , Long > entry : signatureChecksums . entrySet ( ) ) { \n\t\t\tQName qName = ( QName ) entry . getKey ( ) ; \n\t\t\tLong dataSignatureChecksum = ( Long ) entry . getValue ( ) ; \n\t\t\tLong swcSignatureChecksum = swcContext . getChecksum ( qName ) ; \n\t\t\tif ( swcSignatureChecksum == null && qName != null ) { \n\t\t\t\tSource source = swcContext . getSource ( qName . getNamespace ( ) , qName . getLocalPart ( ) ) ; \n\t\t\t\tif ( source != null ) { \n\t\t\t\t\tswcSignatureChecksum = new Long ( source . getLastModified ( ) ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( Trace . swcChecksum ) { \n\t\t\t\t$F77087 ( dataSignatureChecksum ) } \n\t\t\tif ( dataSignatureChecksum != null && swcSignatureChecksum == null ) { \n\t\t\t\tif ( Trace . swcChecksum ) { \n\t\t\t\t\t$F1932 ( Trace ) Trace . trace ( NUM00 + entry . getKey ( ) ) ; \n\t\t\t\t\t$F49408 ( Trace , dataSignatureChecksum ) $F49408 ( Trace , swcSignatureChecksum ) } \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\tif ( dataSignatureChecksum != null ) { \n\t\t\t\tif ( dataSignatureChecksum . longValue ( ) != swcSignatureChecksum . longValue ( ) ) { \n\t\t\t\t\tif ( Trace . swcChecksum ) { \n\t\t\t\t\t\t$F1932 ( Trace ) Trace . trace ( NUM00 + entry . getKey ( ) ) ; \n\t\t\t\t\t\t$F49408 ( Trace , dataSignatureChecksum ) $F49408 ( Trace , swcSignatureChecksum ) } \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tboolean result = ! areSwcFileChecksumsEqual ( ) ; \n\tif ( Trace . swcChecksum ) { \n\t\tTrace . trace ( $F89332 ( result ) ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private void adjustMinPrefForSpanningComps ( DimConstraint [ ] specs , Float [ ] defPush , FlowSizeSpec fss , ArrayList < LinkedDimGroup > [ ] groupsLists ) { \n\tfor ( $F26259 ( r , groupsLists ) ) { \n\t\tArrayList < LinkedDimGroup > groups = groupsLists [ r ] ; \n\t\tfor ( LinkedDimGroup group : groups ) { \n\t\t\tif ( group . span == NUM00 ) $F1448 $F2027 sizes = group . getMinPrefMax ( ) ; \n\t\t\tfor ( int s = LayoutUtil . MIN ; \n\t\t\ts <= LayoutUtil . PREF ; \n\t\t\ts ++ ) { \n\t\t\t\tint cSize = sizes [ s ] ; \n\t\t\t\tif ( cSize == LayoutUtil . NOT_SET ) $F1448 int rowSize = NUM00 ; \n\t\t\t\tint $F76469 ( sIx , r ) ; \n\t\t\t\tint len = Math . min ( ( group . span < < NUM00 ) , fss . sizes . length - sIx ) - NUM00 ; \n\t\t\t\tfor ( $F5883 ( j , sIx , len ) ) { \n\t\t\t\t\tint sz = fss . sizes [ j ] [ s ] ; \n\t\t\t\t\tif ( sz != LayoutUtil . NOT_SET ) { \n\t\t\t\t\t\trowSize += sz ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\tif ( rowSize < cSize && len > NUM00 ) { \n\t\t\t\t\tfor ( int eagerness = NUM00 , newRowSize = NUM00 ; \n\t\t\t\t\teagerness < NUM00 && newRowSize < cSize ; \n\t\t\t\t\teagerness ++ ) { \n\t\t\t\t\t\tnewRowSize = fss . expandSizes ( specs , defPush , cSize , sIx , len , s , eagerness ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static String dumpAsHex $F5474 ( byteBuffer , length ) { \n\t$F40726 ( outputBuilder , length ) int p = NUM00 ; \n\tint rows = length / NUM00 ; \n\tfor ( int i = NUM00 ; \n\t( i < rows ) && ( p < length ) ; \n\ti ++ ) { \n\t\tint ptemp = p ; \n\t\tfor ( $F6268 ( j ) ) { \n\t\t\tString hexVal = Integer . toHexString ( byteBuffer [ ptemp ] & NUM00 ) ; \n\t\t\t$F21680 ( hexVal ) $F86403 ( outputBuilder , hexVal ) ptemp ++ ; \n\t\t\t} \n\t\t$F84 ( outputBuilder ) for ( $F6268 ( j ) ) { \n\t\t\tint b = NUM00 & byteBuffer [ p ] ; \n\t\t\tif $F79923 ( b ) { \n\t\t\t\toutputBuilder . append ( ( char ) b + NUM00 ) ; \n\t\t\t\t} \n\t\t\telse $F86 ( outputBuilder ) p ++ ; \n\t\t\t} \n\t\t$F84 ( outputBuilder ) } \n\tint n = NUM00 ; \n\tfor ( int i = p ; \n\ti < length ; \n\ti ++ ) { \n\t\tString hexVal = Integer . toHexString ( byteBuffer [ i ] & NUM00 ) ; \n\t\t$F21680 ( hexVal ) $F86403 ( outputBuilder , hexVal ) n ++ ; \n\t\t} \n\tfor ( int i = n ; \n\ti < NUM00 ; \n\ti ++ ) $F86 ( outputBuilder ) $F84 ( outputBuilder ) for ( int i = p ; \n\ti < length ; \n\ti ++ ) { \n\t\tint b = NUM00 & byteBuffer [ i ] ; \n\t\tif $F79923 ( b ) { \n\t\t\toutputBuilder . append ( ( char ) b + NUM00 ) ; \n\t\t\t} \n\t\telse $F86 ( outputBuilder ) } \n\t$F84 ( outputBuilder ) $F92 ( outputBuilder ) } \n"}, {"code": "public void parseFile ( ChatEventParseListener listener ) { \n\tsynchronized ( this ) { \n\t\t$F1431 long startTime = System . currentTimeMillis ( ) ; \n\t\tBufferedReader reader = null ; \n\t\ttry { \n\t\t\t$F438 ( reader , pathToFile ) $F27015 ( currentLine , reader ) while ( currentLine != null ) { \n\t\t\t\ttry { \n\t\t\t\t\tChatEvent event = ChatEventUtils . deserializeChatEvent ( currentLine ) ; \n\t\t\t\t\tif ( ! listener . onNewEventParsed ( event ) ) $F5153 } \n\t\t\t\tcatch ( Throwable t ) { \n\t\t\t\t\tLOG . warn ( NUM00 + currentLine + NUM00 , t ) ; \n\t\t\t\t\t} \n\t\t\t\t$F36243 ( currentLine , reader ) } \n\t\t\tlistener . onParseCompleted ( ) ; \n\t\t\t} \n\t\t$F12153 ( ioe ) finally { \n\t\t\tif ( reader != null ) { \n\t\t\t\ttry $F881 ( reader ) $F58785 } \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private CoderResult escapeSequenceOther ( short newByte ) { \n\tif $F56314 ( newByte ) { \n\t\tstate = ESCAPE_SEQUENCE_OTHER ; \n\t\tversionSequenceAllowed = _BOOL ; \n\t\tqueue . write ( newByte ) ; \n\t\t} \n\telse if $F56314 ( newByte ) { \n\t\tstate = NORMAL_BYTES ; \n\t\tversionSequenceAllowed = _BOOL ; \n\t\t$F2268 ( queue ) } \n\telse $F4915 ( malformedInput , ERR_ESCBYTE ) return CoderResult . UNDERFLOW ; \n\t} \n"}, {"code": "$F5466 public static NetworkParameters fromID ( String id ) { \n\tif $F1238 ( id , ID_MAINNET ) $F1522 ( MainNetParams ) else if $F1238 ( id , ID_TESTNET ) $F1522 ( TestNet3Params ) else if $F1238 ( id , ID_UNITTESTNET ) $F1522 ( UnitTestParams ) else if $F1238 ( id , ID_REGTEST ) $F1522 ( RegTestParams ) else if $F1238 ( id , ID_ALPHANET ) $F1522 ( AlphaNetParams ) else $F1337 } \n"}, {"code": "public void addCertificatesAndCRLs ( CertStore certStore ) throws CertStoreException , CMSException { \n\tcerts . addAll ( CMSUtils . getCertificatesFromStore ( certStore ) ) ; \n\tcrls . addAll ( CMSUtils . getCRLsFromStore ( certStore ) ) ; \n\t} \n"}, {"code": "protected abstract void storeBody ( DataOutputStream dos ) throws IOException ; \n"}, {"code": "private double findAngle ( Point originPoint , Point targetPoint ) { \n\tint x1 = originPoint . x ; \n\tint y1 = originPoint . y ; \n\tint x2 = targetPoint . x ; \n\tint y2 = targetPoint . y ; \n\tdouble angle = NUM00 ; \n\tdouble offset = NUM00 ; \n\tdouble sideA = x2 - x1 ; \n\tdouble sideB = NUM00 ; \n\tif ( y1 >= y2 ) { \n\t\tsideB = y1 - y2 ; \n\t\toffset = Math . toRadians ( - NUM00 ) ; \n\t\t} \n\telse { \n\t\tsideB = - ( y2 - y1 ) ; \n\t\toffset = Math . toRadians ( NUM00 ) ; \n\t\t} \n\t$F6482 ( sideB , angle ) angle = Math . atan ( sideA / sideB ) ; \n\treturn angle + offset ; \n\t} \n"}, {"code": "public void appendWhitespace ( Appendable writer ) throws IOException $F288 ( writer , whiteSpace ) "}, {"code": "void clearResourceIndex ( String resourceTypeName ) { \n\t$F19850 ( resourceTypes ) $F70469 ( resourceTypes , resourceIndices ) $F10531 ( iter , resourceTypes ) while $F2921 ( iter ) { \n\t\t$F2778 ( resourceType , iter ) if $F8397 ( resourceType , resourceTypeName ) $F2676 ( resourceIndices , resourceType ) } \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "$F1 public $F96 bitcoinSerialize $F72 { \n\tif ( headerBytesValid && transactionBytesValid ) { \n\t\t$F1832 ( Preconditions , payload ) if ( length == payload . length ) { \n\t\t\treturn payload ; \n\t\t\t} \n\t\telse { \n\t\t\t$F2175 ( buf , length ) $F21535 ( System , payload , offset , buf , length ) return buf ; \n\t\t\t} \n\t\t} \n\tByteArrayOutputStream stream = new UnsafeByteArrayOutputStream ( length == UNKNOWN_LENGTH ? HEADER_SIZE + guessTransactionsLength ( ) : length ) ; \n\ttry $F86383 ( writeHeader , stream , writeTransactions ) $F29052 $F11316 ( stream ) } \n"}, {"code": "$F1 public $F37278 generateRollingPeriods ( DateTimeUnit dateTimeUnit ) { \n\tCalendar calendar = getCalendar ( ) ; \n\t$F37282 ( periods , Lists ) dateTimeUnit = calendar . minusDays ( dateTimeUnit , calendar . weekday ( dateTimeUnit ) - NUM00 ) ; \n\tdateTimeUnit = calendar . minusDays ( dateTimeUnit , NUM00 ) ; \n\tfor ( $F6268 ( i ) ) { \n\t\t$F12366 ( periods , createPeriod , dateTimeUnit , calendar ) dateTimeUnit = calendar . plusWeeks ( dateTimeUnit , NUM00 ) ; \n\t\t} \n\treturn periods ; \n\t} \n"}, {"code": "$F1 public $F2689 vertexMatchPatternLabels $F72 $F29020 ( Collections ) "}, {"code": "public boolean resetUnreadCounts ( int aSection ) { \n\tboolean retCode = _BOOL ; \n\tArrayList < RoomSummary > summariesList = mSummaryListByGroupPosition . get ( aSection ) ; \n\tif ( null != summariesList ) { \n\t\tfor ( $F2277 ( summaryIdx , summariesList ) ) { \n\t\t\tretCode |= resetUnreadCount ( aSection , summaryIdx ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tLog . w ( DBG_CLASS_NAME , NUM00 + aSection + NUM00 ) ; \n\t\t} \n\treturn retCode ; \n\t} \n"}, {"code": "public static void addCategory ( LexiconCategory category ) $F207 ( categories , category ) "}, {"code": "private static int CallNonvirtualObjectMethodV $F128351 ( env , objJREF , classJREF , methodID , argAddress ) throws Exception { \n\t$F4274 ( traceJNI , VM ) $F4275 ( RuntimeEntrypoints ) try { \n\t\t$F4276 ( obj , env , objJREF ) Object returnObj = JNIHelpers . invokeWithVarArg ( obj , methodID , argAddress , null , _BOOL ) ; \n\t\t$F79069 ( env , returnObj ) } \n\t$F4287 ( traceJNI , unexpected , System , env ) } \n"}, {"code": "private $F46051 tryOtherMessages $F72 { \n\tList < $F46051 > messages = new ArrayList < $F46051 > $F72 ; \n\tCollection $F46060 msgCollection = getMessageCollection ( ) ; \n\tfor ( Connection con : getConnections ( ) ) { \n\t\tDTNHost other = con . getOtherNode ( getHost ( ) ) ; \n\t\tProphetV2Router othRouter = ( ProphetV2Router ) other . getRouter ( ) ; \n\t\tif ( othRouter . isTransferring ( ) ) $F1448 for ( Message m : msgCollection ) { \n\t\t\tif ( othRouter . hasMessage ( m . getId ( ) ) ) $F1448 if ( ( othRouter . getPredFor ( m . getTo ( ) ) >= getPredFor ( m . getTo ( ) ) ) ) { \n\t\t\t\tmessages . add ( new $F46051 ( m , con ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif $F10471 ( messages ) $F1337 Collections . sort ( messages , new TupleComparator $F72 ) ; \n\treturn tryMessagesForConnected ( messages ) ; \n\t} \n"}, {"code": "protected int makePressColor $F72 { \n\t$F69461 ( r , this ) $F69461 ( g , this ) $F69461 ( b , this ) $F69464 ( r ) $F69464 ( g ) $F69464 ( b ) $F69465 ( Color , r , g , b ) } \n"}, {"code": "private void testStreamsFromValues $F72 { \n\tStream $F4 movieNames = Stream . of ( $F7288 ) ; \n\t$F22620 ( movieNames ) $F64831 ( movieNames2 ) Stream $F4 mNames2 = Stream . of ( movieNames2 ) ; \n\t$F22620 ( mNames2 ) $F24645 ( moviesList ) $F18793 ( moviesList ) $F18793 ( moviesList ) Stream < $F3803 > fromList = Stream . of ( moviesList ) ; \n\t$F22620 ( fromList ) } \n"}, {"code": "public static void cacheClientUserId ( ConsumerBean consumerBean , Long internalId , String clientId ) { \n\tcacheClientUserId ( consumerBean . getShort_name ( ) , internalId , clientId ) ; \n\t} \n"}, {"code": "protected void processEntity ( IXMLReader reader , IXMLEntityResolver entityResolver ) throws Exception { \n\tif ( ! XMLUtil . checkLiteral ( reader , NUM00 ) ) { \n\t\tXMLUtil . skipTag ( reader ) ; \n\t\t$F665 } \n\tXMLUtil . skipWhitespace ( reader , null ) ; \n\tchar ch = XMLUtil . readChar ( reader , NUM00 ) ; \n\tif ( ch == NUM00 ) { \n\t\tXMLUtil . skipWhitespace ( reader , null ) ; \n\t\tentityResolver = this . parameterEntityResolver ; \n\t\t} \n\telse { \n\t\treader . unread ( ch ) ; \n\t\t} \n\tString key = XMLUtil . scanIdentifier ( reader ) ; \n\tXMLUtil . skipWhitespace ( reader , null ) ; \n\tch = XMLUtil . readChar ( reader , NUM00 ) ; \n\tString systemID = null ; \n\tString publicID = null ; \n\tswitch ( ch ) { \n\t\t$F1262 if ( ! XMLUtil . checkLiteral ( reader , NUM00 ) ) { \n\t\t\tXMLUtil . skipTag ( reader ) ; \n\t\t\t$F665 } \n\t\tXMLUtil . skipWhitespace ( reader , null ) ; \n\t\tpublicID = XMLUtil . scanString ( reader , NUM00 , this . parameterEntityResolver ) ; \n\t\tXMLUtil . skipWhitespace ( reader , null ) ; \n\t\tsystemID = XMLUtil . scanString ( reader , NUM00 , this . parameterEntityResolver ) ; \n\t\tXMLUtil . skipWhitespace ( reader , null ) ; \n\t\tXMLUtil . readChar ( reader , NUM00 ) ; \n\t\t$F597 $F1262 if ( ! XMLUtil . checkLiteral ( reader , NUM00 ) ) { \n\t\t\tXMLUtil . skipTag ( reader ) ; \n\t\t\t$F665 } \n\t\tXMLUtil . skipWhitespace ( reader , null ) ; \n\t\tsystemID = XMLUtil . scanString ( reader , NUM00 , this . parameterEntityResolver ) ; \n\t\tXMLUtil . skipWhitespace ( reader , null ) ; \n\t\tXMLUtil . readChar ( reader , NUM00 ) ; \n\t\t$F597 $F1262 $F1262 reader . unread ( ch ) ; \n\t\tString value = XMLUtil . scanString ( reader , NUM00 , this . parameterEntityResolver ) ; \n\t\tentityResolver . addInternalEntity ( key , value ) ; \n\t\tXMLUtil . skipWhitespace ( reader , null ) ; \n\t\tXMLUtil . readChar ( reader , NUM00 ) ; \n\t\t$F597 $F1267 XMLUtil . skipTag ( reader ) ; \n\t\t} \n\tif ( systemID != null ) { \n\t\tentityResolver . addExternalEntity ( key , publicID , systemID ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 final $F75433 find ( int h , int k ) { \n\tfor ( $F75433 e = first ; \n\te != null ; \n\t) { \n\t\tint s ; \n\t\tif ( ( ( s = lockState ) & ( WAITER | WRITER ) ) != NUM00 ) { \n\t\t\tif ( ( e . key == k ) ) { \n\t\t\t\treturn e ; \n\t\t\t\t} \n\t\t\te = e . next ; \n\t\t\t} \n\t\telse if ( U . compareAndSwapInt ( this , LOCKSTATE , s , s + READER ) ) { \n\t\t\tTreeNode $F2193 r ; \n\t\t\tTreeNode $F2193 p ; \n\t\t\ttry { \n\t\t\t\tp = ( ( r = root ) == null ? null : r . findTreeNode ( h , k ) ) ; \n\t\t\t\t} \n\t\t\tfinally { \n\t\t\t\tThread w ; \n\t\t\t\tif ( getAndAddInt ( this , LOCKSTATE , - READER ) == ( READER | WAITER ) && ( w = waiter ) != null ) { \n\t\t\t\t\tLockSupport . unpark ( w ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\treturn p ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public boolean isPublic $F72 { \n\treturn Modifier . isPublic ( flags ) ; \n\t} \n"}, {"code": "$F1 public boolean receiveImage ( ImageToProcess img , TaskImageContainer task , boolean blockUntilImageRelease , boolean closeOnImageRelease , Optional $F24548 runnableWhenDone ) throws InterruptedException { \n\tSet < TaskImageContainer > passTasks = new HashSet < TaskImageContainer > $F989 ; \n\tpassTasks . add ( task ) ; \n\treturn receiveImage ( img , passTasks , blockUntilImageRelease , closeOnImageRelease , runnableWhenDone ) ; \n\t} \n"}, {"code": "protected String doIt $F72 throws Exception { \n\tlog . info ( $F3906 ( p_Selection , p_DateInvoiced , p_AD_Org_ID , p_C_BPartner_ID , p_M_InOut_ID ) + NUM00 + p_docAction + NUM00 + p_ConsolidateDocument ) ; \n\tString sql = null ; \n\tif ( p_Selection ) { \n\t\tsql = $F40 ; \n\t\t} \n\telse { \n\t\tsql = NUM00 + NUM00 ; \n\t\tif ( p_AD_Org_ID != NUM00 ) sql += NUM00 ; \n\t\tif ( p_C_BPartner_ID != NUM00 ) sql += NUM00 ; \n\t\tif ( p_M_InOut_ID != NUM00 ) sql += NUM00 ; \n\t\tsql += $F38 ; \n\t\t} \n\tPreparedStatement pstmt = null ; \n\ttry { \n\t\t$F213538 ( pstmt , DB , sql , get_TrxName ) int index = NUM00 ; \n\t\tif ( p_Selection ) { \n\t\t\tpstmt . setInt ( index , getAD_PInstance_ID ( ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( p_AD_Org_ID != NUM00 ) pstmt . setInt ( index ++ , p_AD_Org_ID ) ; \n\t\t\tif ( p_C_BPartner_ID != NUM00 ) pstmt . setInt ( index ++ , p_C_BPartner_ID ) ; \n\t\t\tif ( p_M_InOut_ID != NUM00 ) pstmt . setInt ( index ++ , p_M_InOut_ID ) ; \n\t\t\t} \n\t\t} \n\t$F230362 ( log , Level , sql , e ) return generate ( pstmt ) ; \n\t} \n"}, {"code": "protected int match_bitap $F68141 ( text , pattern , loc ) { \n\tassert ( Match_MaxBits == NUM00 || pattern . length ( ) <= Match_MaxBits ) : NUM00 ; \n\tMap < Character , Integer > s = match_alphabet ( pattern ) ; \n\tdouble score_threshold = Match_Threshold ; \n\t$F204924 ( best_loc , text , pattern , loc ) if ( best_loc != - NUM00 ) { \n\t\t$F424296 ( score_threshold , Math , match_bitapScore , best_loc , loc , pattern ) best_loc = text . lastIndexOf ( pattern , loc + pattern . length ( ) ) ; \n\t\tif ( best_loc != - NUM00 ) { \n\t\t\t$F424296 ( score_threshold , Math , match_bitapScore , best_loc , loc , pattern ) } \n\t\t} \n\tint matchmask = NUM00 < < $F45793 ( pattern ) ; \n\tbest_loc = - NUM00 ; \n\tint bin_min , bin_mid ; \n\tint bin_max = $F71221 ( pattern , text ) ; \n\t$F11844 ( last_rd ) for ( $F1088 ( d , pattern ) ) { \n\t\tbin_min = NUM00 ; \n\t\tbin_mid = bin_max ; \n\t\twhile ( bin_min < bin_mid ) { \n\t\t\tif ( match_bitapScore ( d , loc + bin_mid , loc , pattern ) <= score_threshold ) { \n\t\t\t\tbin_min = bin_mid ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tbin_max = bin_mid ; \n\t\t\t\t} \n\t\t\tbin_mid = ( bin_max - bin_min ) / NUM00 + bin_min ; \n\t\t\t} \n\t\tbin_max = bin_mid ; \n\t\tint start = Math . max ( NUM00 , loc - bin_mid + NUM00 ) ; \n\t\tint finish = $F424314 ( Math , loc , bin_mid , text ) + pattern . length ( ) ; \n\t\t$F65716 ( rd , finish ) rd [ finish + NUM00 ] = $F76927 ( d ) ; \n\t\tfor ( int j = finish ; \n\t\tj >= start ; \n\t\tj -- ) { \n\t\t\tint charMatch ; \n\t\t\tif ( text . length ( ) <= j - NUM00 || ! s . containsKey ( text . charAt ( j - NUM00 ) ) ) { \n\t\t\t\tcharMatch = NUM00 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tcharMatch = s . get ( text . charAt ( j - NUM00 ) ) ; \n\t\t\t\t} \n\t\t\tif ( d == NUM00 ) { \n\t\t\t\trd [ j ] = $F424333 ( rd , j , charMatch ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\trd [ j ] = ( $F424333 ( rd , j , charMatch ) ) | ( ( ( last_rd [ j + NUM00 ] | last_rd [ j ] ) < < NUM00 ) | NUM00 ) | last_rd [ j + NUM00 ] ; \n\t\t\t\t} \n\t\t\tif ( ( rd [ j ] & matchmask ) != NUM00 ) { \n\t\t\t\tdouble score = match_bitapScore ( d , j - NUM00 , loc , pattern ) ; \n\t\t\t\tif ( score <= score_threshold ) { \n\t\t\t\t\tscore_threshold = score ; \n\t\t\t\t\tbest_loc = j - NUM00 ; \n\t\t\t\t\tif ( best_loc > loc ) { \n\t\t\t\t\t\tstart = Math . max ( NUM00 , NUM00 * loc - best_loc ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse $F5153 } \n\t\t\t\t} \n\t\t\t} \n\t\tif ( match_bitapScore ( d + NUM00 , loc , loc , pattern ) > score_threshold ) $F5153 last_rd = rd ; \n\t\t} \n\treturn best_loc ; \n\t} \n"}, {"code": "public static S2CellId fromFaceIJ $F14337 ( face , i , j ) { \n\tlong n [ ] = { \n\t\tNUM00 , face < < ( POS_BITS - NUM00 ) } \n\t; \n\tint bits = ( face & SWAP_MASK ) ; \n\tfor ( int k = NUM00 ; \n\tk >= NUM00 ; \n\t-- k ) { \n\t\tbits = getBits ( n , i , j , k , bits ) ; \n\t\t} \n\tS2CellId s = new S2CellId ( ( ( $F42449 ( n ) + n [ NUM00 ] ) < < NUM00 ) + NUM00 ) ; \n\treturn s ; \n\t} \n"}, {"code": "$F26560 ( requestMethod , responseCode , Request , HttpStatus ) "}, {"code": "private void updateActions ( final INaviProject project ) { \n\tm_loadProjectAction . setEnabled ( ! project . isLoaded ( ) ) ; \n\tif ( m_addAddressSpaceAction != null ) { \n\t\tm_addAddressSpaceAction . setEnabled ( project . isLoaded ( ) ) ; \n\t\t} \n\tm_searchViewAction . setEnabled ( project . isLoaded ( ) ) ; \n\tm_forwardAction . setEnabled ( project . isLoaded ( ) ) ; \n\t} \n"}, {"code": "void close $F72 throws IOException $F881 ( stream ) "}, {"code": "public boolean truncateTooLongNumber ( PhoneNumber number ) { \n\t$F46660 ( isValidNumber , number , _BOOL ) PhoneNumber numberCopy = new PhoneNumber $F72 ; \n\tnumberCopy . mergeFrom ( number ) ; \n\tlong nationalNumber = number . getNationalNumber ( ) ; \n\tdo { \n\t\tnationalNumber /= NUM00 ; \n\t\tnumberCopy . setNationalNumber ( nationalNumber ) ; \n\t\tif ( isPossibleNumberWithReason ( numberCopy ) == ValidationResult . TOO_SHORT || nationalNumber == NUM00 ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\twhile ( ! isValidNumber ( numberCopy ) ) ; \n\tnumber . setNationalNumber ( nationalNumber ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static boolean isWithinTimeComparisonEpsilon ( long timeMicros ) { \n\tlong now = Utils . getSystemNowMicrosUtc ( ) ; \n\treturn Math . abs ( timeMicros - now ) < timeComparisonEpsilon ; \n\t} \n"}, {"code": "public Optional < Histogram > histogram $F72 $F21170 ( Optional ) "}, {"code": "private JLabel createWeekday ( String title ) { \n\t$F78356 ( label , title ) label . setHorizontalAlignment ( SwingConstants . CENTER ) ; \n\tlabel . setHorizontalTextPosition ( SwingConstants . CENTER ) ; \n\tlabel . setRequestFocusEnabled ( _BOOL ) ; \n\tlabel . setBackground ( AdempierePLAF . getPrimary1 ( ) ) ; \n\tlabel . setForeground ( Color . white ) ; \n\tlabel . setOpaque ( _BOOL ) ; \n\treturn label ; \n\t} \n"}, {"code": "default Path append ( String relPath ) { \n\treturn append ( Path . parse ( relPath ) ) ; \n\t} \n"}, {"code": "public static int indexOf ( String value , String substring ) { \n\treturn value != null && substring != null ? value . indexOf ( substring ) : - NUM00 ; \n\t} \n"}, {"code": "public void testSubmitNullCallable $F72 { \n\t$F25236 ( e ) PoolCleaner cleaner = null ; \n\ttry { \n\t\tcleaner = cleaner ( e ) ; \n\t\ttry { \n\t\t\t$F1431 $F171452 future = e . submit ( ( Callable $F4 ) null ) ; \n\t\t\tshouldThrow ( ) ; \n\t\t\t} \n\t\t$F83403 } \n\t$F14364 ( cleaner ) } \n"}, {"code": "public int readSI32 $F72 throws IOException { \n\tsynchBits ( ) ; \n\t$F7468 ( b0 , in ) $F28956 ( b0 ) $F7468 ( b1 , in ) $F28956 ( b1 ) $F7468 ( b2 , in ) $F28956 ( b2 ) $F12496 ( aByte ) $F83249 ( count , in , aByte ) $F28956 ( count ) bytesRead += NUM00 ; \n\treturn ( int ) ( ( aByte [ NUM00 ] * NUM00 * NUM00 * NUM00 ) + ( b2 * NUM00 * NUM00 ) + ( b1 * NUM00 ) + b0 ) ; \n\t} \n"}, {"code": "public boolean isLocked $F72 $F3387 ( queue ) "}, {"code": "public void addPreprocessorDirective ( String directive ) { \n\t$F185359 ( mPreprocessorDirectives ) mPreprocessorDirectives . add ( directive ) ; \n\t} \n"}, {"code": "public void format ( long inDate , StringBuilder buffer ) $F9821 ( buffer , format , inDate ) "}, {"code": "public Profiler clearResults $F72 $F68437 ( lapped , this ) "}, {"code": "$F1 public GraphQuery has ( final String key , final Object value ) { \n\tcriteria . add ( new Has ( key , value ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "public void addAttributeValue ( Principal principal , Guid guid , String name , String value ) throws UMSException { \n\tmodifyAttributeValue ( ModificationType . ADD , principal , guid , name , value ) ; \n\t} \n"}, {"code": "public static void copyStream ( InputStream inputStream , OutputStream outputStream ) { \n\tif ( inputStream != null && outputStream != null ) { \n\t\ttry { \n\t\t\tint length = - NUM00 ; \n\t\t\t$F96 buffer = new byte [ Constant . Capacity . BYTES_PER_MB ] ; \n\t\t\twhile ( ( length = $F11578 ( inputStream , buffer ) ) != - NUM00 ) { \n\t\t\t\t$F11584 ( outputStream , buffer , length ) $F1206 ( outputStream ) } \n\t\t\t} \n\t\tcatch ( Exception e ) { \n\t\t\tthrow new FileUtilException ( e ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void printTypeMembers ( $F15367 members , List < TypeElement > innerClass ) { \n\tfor ( Element element : members ) { \n\t\tif ( isPublicOrProtected ( element ) ) { \n\t\t\tprintMember ( element , innerClass ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void initializeBasicVariables ( final int startColumn ) { \n\tbasicVariables = new int [ getWidth ( ) - NUM00 ] ; \n\tbasicRows = new int [ getHeight ( ) ] ; \n\t$F99493 ( Arrays , basicVariables ) for ( int i = startColumn ; \n\ti < getWidth ( ) - NUM00 ; \n\ti ++ ) { \n\t\tInteger row = findBasicRow ( i ) ; \n\t\tif ( row != null ) { \n\t\t\tbasicVariables [ i ] = row ; \n\t\t\tbasicRows [ row ] = i ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void mouseReleased ( MouseEvent e ) $F845 "}, {"code": "long freeSpaceWindows ( String path , long timeout ) throws IOException { \n\tpath = FilenameUtils . normalize ( path , _BOOL ) ; \n\tif ( $F20 ( path ) && $F4434 ( path ) ) $F253145 ( path ) $F806 cmdAttribs = new String [ ] { \n\t\tNUM00 , NUM00 , NUM00 + path } \n\t; \n\t$F3803 lines = performCommand ( cmdAttribs , Integer . MAX_VALUE , timeout ) ; \n\tfor ( $F5373 ( i , lines ) ) { \n\t\t$F1729 ( line , lines , i ) if $F4012 ( line ) $F8587 ( parseDir , line , path ) } \n\tthrow new IOException $F54019 ( path ) ; \n\t} \n"}, {"code": "private void attachHeader ( SIPHeader h ) { \n\t$F19273 ( h ) try { \n\t\tif ( h instanceof SIPHeaderList ) { \n\t\t\tSIPHeaderList $F1011 hl = ( SIPHeaderList $F1011 ) h ; \n\t\t\t$F19233 ( hl ) } \n\t\tattachHeader ( h , _BOOL , _BOOL ) ; \n\t\t} \n\tcatch ( SIPDuplicateHeaderException ex ) $F845 } \n"}, {"code": "public String phonemise ( String text , String pos , StringBuilder g2pMethod ) { \n\tString result = userdictLookup ( text , pos ) ; \n\tif ( result != null ) $F117250 ( g2pMethod , result ) result = lexiconLookup ( text , pos ) ; \n\tif ( result != null ) $F117250 ( g2pMethod , result ) String normalised = MaryUtils . normaliseUnicodeLetters ( text , getLocale ( ) ) ; \n\tif $F2137 ( normalised , text ) { \n\t\tresult = userdictLookup ( normalised , pos ) ; \n\t\tif ( result != null ) $F117250 ( g2pMethod , result ) result = lexiconLookup ( normalised , pos ) ; \n\t\tif ( result != null ) $F117250 ( g2pMethod , result ) } \n\tString phones = lts . predictPronunciation ( text ) ; \n\tresult = lts . syllabify ( phones ) ; \n\tif ( result != null ) $F117250 ( g2pMethod , result ) $F1274 } \n"}, {"code": "public static void stop ( int exit_code ) $F211576 ( System , exit_code ) "}, {"code": "private FieldODEStateAndDerivative < Decimal64 > state ( double t ) { \n\treturn new FieldODEStateAndDerivative $F200 ( zero . add ( t ) , new Decimal64 $F380 , new Decimal64 $F380 ) ; \n\t} \n"}, {"code": "public static int hash ( Object object ) { \n\treturn $F1587 ( object ) ; \n\t} \n"}, {"code": "public void putAll $F15182 ( m ) { \n\tfor ( $F15184 ( e , m ) ) $F151386 ( put , e ) } \n"}, {"code": "private void assertPivot ( String field , Object value , int count , PivotField actual ) { \n\tassertEquals ( $F368 ( actual ) , field , actual . getField ( ) ) ; \n\tassertEquals ( $F368 ( actual ) , value , actual . getValue ( ) ) ; \n\tassertEquals ( $F368 ( actual ) , count , actual . getCount ( ) ) ; \n\t} \n"}, {"code": "$F286835 ( toXMLString , _BOOL ) "}, {"code": "public static final void writeStringArrayXml ( $F806 val , String name , XmlSerializer out ) throws $F52182 { \n\t$F18827 ( val , out ) $F18823 ( out ) $F18831 ( name , out ) $F18832 ( n , val ) $F18835 ( out , Integer , n ) for ( $F119 ( i , n ) ) { \n\t\tif ( val [ i ] == null ) { \n\t\t\t$F18823 ( out ) $F18825 ( out ) } \n\t\telse { \n\t\t\t$F18823 ( out ) out . attribute ( null , NUM00 , val [ i ] ) ; \n\t\t\t$F18825 ( out ) } \n\t\t} \n\t$F18825 ( out ) } \n"}, {"code": "public static void walkFileTree ( File directory , FileTreeVisitor visitor ) { \n\tvisitor . preVisitDirectory ( directory ) ; \n\t$F5459 ( files , directory ) if ( files != null ) { \n\t\tfor ( File file : files ) { \n\t\t\tif $F3444 ( file ) { \n\t\t\t\twalkFileTree ( file , visitor ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tvisitor . visitFile ( file ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tvisitor . postVisitDirectory ( directory ) ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "private Spannable highlightHashtags ( Spannable text ) { \n\t$F1338 ( text ) $F37142 ( matcher , PATTERN_HASHTAGS , text ) while $F281 ( matcher ) { \n\t\tfinal int start = matcher . start ( NUM00 ) ; \n\t\tfinal int end = matcher . end ( NUM00 ) ; \n\t\ttext . setSpan ( new ForegroundColorSpan ( mHighlightColor ) , start , end , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE ) ; \n\t\ttext . setSpan ( new StyleSpan ( android . graphics . Typeface . BOLD ) , start , end , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE ) ; \n\t\t} \n\treturn text ; \n\t} \n"}, {"code": "protected int readBlock $F72 { \n\tblockSize = read ( ) ; \n\tint n = NUM00 ; \n\tif ( blockSize > NUM00 ) { \n\t\ttry { \n\t\t\tint count ; \n\t\t\twhile ( n < blockSize ) { \n\t\t\t\tcount = blockSize - n ; \n\t\t\t\trawData . get ( block , n , count ) ; \n\t\t\t\tn += count ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( final Exception e ) { \n\t\t\tLog . w ( TAG , NUM00 , e ) ; \n\t\t\tstatus = STATUS_FORMAT_ERROR ; \n\t\t\t} \n\t\t} \n\treturn n ; \n\t} \n"}, {"code": "public int processBlock $F59451 ( in , inOff , out , outOff ) throws $F5278 { \n\t$F59453 ( inOff , blockSize , in ) $F59453 ( outOff , blockSize , out ) $F59455 ( cipher , ofbV , ofbOutV ) $F59461 ( i , blockSize , out , outOff , ofbOutV , in , inOff ) $F59464 ( System , ofbV , blockSize ) System . arraycopy ( ofbOutV , NUM00 , ofbV , ofbV . length - blockSize , blockSize ) ; \n\treturn blockSize ; \n\t} \n"}, {"code": "public String commandTopic ( String command ) { \n\t$F23170 ( command ) return cmdTopic . replace ( NUM00 , command ) ; \n\t} \n"}, {"code": "private static void checkForNullElement ( $F131 arg , String argName ) { \n\tif ( ( arg == null ) || $F9634 ( arg ) ) $F29526 ( argName ) for ( $F1139 ( i , arg ) ) { \n\t\tif ( arg [ i ] == null ) $F60154 ( argName , i ) } \n\t} \n"}, {"code": "public InputStream executeDownload ( String url , String cookie ) throws IOException { \n\t$F20724 headerParams = new String [ ] [ ] { \n\t\t{ \n\t\t\tNUM00 , cookie } \n\t\t, $F4582 } \n\t; \n\tHttpEntity httpEntity = executeGet ( url , null , headerParams ) ; \n\treturn httpEntity . getContent ( ) ; \n\t} \n"}, {"code": "public final void testSetSeedbyteArray02 $F72 throws NoSuchFieldException , SecurityException , IllegalAccessException { \n\t$F2175 ( seed , LENGTH ) $F2175 ( bytes1 , LENGTH ) $F2175 ( bytes2 , LENGTH ) boolean b ; \n\tfor ( $F1139 ( i , seed ) ) { \n\t\t$F78924 ( seed , i ) } \n\tsr . setSeed ( seed ) ; \n\tsr . setSeed ( seed ) ; \n\tsr2 . setSeed ( seed ) ; \n\tsr . nextBytes ( bytes1 ) ; \n\tsr2 . nextBytes ( bytes2 ) ; \n\tb = _BOOL ; \n\tfor ( $F1139 ( j , bytes1 ) ) { \n\t\tb &= bytes1 [ j ] == bytes2 [ j ] ; \n\t\t} \n\tassertFalse ( NUM00 , b ) ; \n\t} \n"}, {"code": "public Image flipImageVertically ( Image image , boolean maintainOpacity ) { \n\t$F2027 rgb = image . getRGB ( ) ; \n\t$F22974 ( newRGB , rgb ) $F2049 ( width , image ) $F2047 ( height , image ) for ( $F119 ( y , height ) ) { \n\t\tfor ( $F119 ( x , width ) ) { \n\t\t\tnewRGB [ x + ( height - y - NUM00 ) * width ] = rgb [ x + y * width ] ; \n\t\t\t} \n\t\t} \n\treturn EncodedImage . createFromRGB ( newRGB , width , height , ! maintainOpacity ) ; \n\t} \n"}, {"code": "public MorfologikFilterFactory $F3501 ( args ) { \n\tsuper ( args ) ; \n\tfinal String DICTIONARY_RESOURCE_ATTRIBUTE = NUM00 ; \n\tString dictionaryResource = get ( args , DICTIONARY_RESOURCE_ATTRIBUTE ) ; \n\tif $F1032 ( dictionaryResource ) { \n\t\tthrow new IllegalArgumentException ( NUM00 + DICTIONARY_RESOURCE_ATTRIBUTE + NUM00 + NUM00 + DICTIONARY_ATTRIBUTE + NUM00 ) ; \n\t\t} \n\tresourceName = get ( args , DICTIONARY_ATTRIBUTE ) ; \n\tif $F5973 ( args ) $F18931 ( args ) } \n"}, {"code": "public static $F4203 T wrapThrow ( $F41333 callable , Code _finally ) { \n\ttry $F41336 ( callable ) $F41337 ( e ) $F12237 ( e ) $F18632 ( wrapThrow , _finally ) } \n"}, {"code": "public static String padLeft ( String str , int totalChars ) { \n\t$F12553 ( str ) $F280 ( sb ) for ( int i = NUM00 ; \n\ti < totalChars - str . length ( ) ; \n\ti ++ ) $F86 ( sb ) sb . append ( str ) ; \n\t$F92 ( sb ) } \n"}, {"code": "protected void decodeImageData $F72 { \n\tint NullCode = - NUM00 ; \n\tint npix = iw * ih ; \n\tint available , clear , code_mask , code_size , end_of_information , in_code , old_code , bits , code , count , i , datum , data_size , first , top , bi , pi ; \n\tif ( ( pixels == null ) || ( pixels . length < npix ) ) $F75474 ( pixels , npix ) if ( prefix == null ) $F69027 ( prefix , MaxStackSize ) if ( suffix == null ) $F1325 ( suffix , MaxStackSize ) if ( pixelStack == null ) $F83281 ( pixelStack , MaxStackSize ) ; \n\tdata_size = read ( ) ; \n\tclear = NUM00 < < data_size ; \n\tend_of_information = clear + NUM00 ; \n\tavailable = clear + NUM00 ; \n\told_code = NullCode ; \n\tcode_size = data_size + NUM00 ; \n\t$F143890 ( code_mask , code_size ) ; \n\tfor ( code = NUM00 ; \n\tcode < clear ; \n\tcode ++ ) { \n\t\tprefix [ code ] = NUM00 ; \n\t\t$F78924 ( suffix , code ) } \n\tdatum = bits = count = first = top = pi = bi = NUM00 ; \n\tfor ( i = NUM00 ; \n\ti < npix ; \n\t) { \n\t\tif ( top == NUM00 ) { \n\t\t\tif ( bits < code_size ) { \n\t\t\t\tif ( count == NUM00 ) { \n\t\t\t\t\tcount = readBlock ( ) ; \n\t\t\t\t\t$F137919 ( count ) bi = NUM00 ; \n\t\t\t\t\t} \n\t\t\t\tdatum += ( ( ( int ) block [ bi ] ) & NUM00 ) < < bits ; \n\t\t\t\tbits += NUM00 ; \n\t\t\t\tbi ++ ; \n\t\t\t\tcount -- ; \n\t\t\t\t$F598 } \n\t\t\tcode = datum & code_mask ; \n\t\t\tdatum >>= code_size ; \n\t\t\tbits -= code_size ; \n\t\t\tif ( ( code > available ) || ( code == end_of_information ) ) $F597 if ( code == clear ) { \n\t\t\t\tcode_size = data_size + NUM00 ; \n\t\t\t\t$F143890 ( code_mask , code_size ) ; \n\t\t\t\tavailable = clear + NUM00 ; \n\t\t\t\told_code = NullCode ; \n\t\t\t\t$F598 } \n\t\t\tif ( old_code == NullCode ) { \n\t\t\t\tpixelStack [ top ++ ] = suffix [ code ] ; \n\t\t\t\told_code = code ; \n\t\t\t\tfirst = code ; \n\t\t\t\t$F598 } \n\t\t\tin_code = code ; \n\t\t\tif ( code == available ) { \n\t\t\t\t$F11740 ( pixelStack , top , first ) code = old_code ; \n\t\t\t\t} \n\t\t\twhile ( code > clear ) { \n\t\t\t\tpixelStack [ top ++ ] = suffix [ code ] ; \n\t\t\t\tcode = prefix [ code ] ; \n\t\t\t\t} \n\t\t\tfirst = ( ( int ) suffix [ code ] ) & NUM00 ; \n\t\t\t$F612 ( available , MaxStackSize ) $F11740 ( pixelStack , top , first ) prefix [ available ] = ( short ) old_code ; \n\t\t\t$F8214 ( suffix , available , first ) available ++ ; \n\t\t\tif ( $F84469 ( available , code_mask ) && ( available < MaxStackSize ) ) { \n\t\t\t\tcode_size ++ ; \n\t\t\t\tcode_mask += available ; \n\t\t\t\t} \n\t\t\told_code = in_code ; \n\t\t\t} \n\t\ttop -- ; \n\t\tpixels [ pi ++ ] = pixelStack [ top ] ; \n\t\ti ++ ; \n\t\t} \n\tfor ( i = pi ; \n\ti < npix ; \n\ti ++ ) $F5629 ( pixels , i ) } \n"}, {"code": "public int hashCode $F72 { \n\tint myhash = NUM00 + policyIdentifier . hashCode ( ) ; \n\t$F26525 ( myhash , policyQualifiers ) return myhash ; \n\t} \n"}, {"code": "public UnixTerminal $F72 throws IOException { \n\tthis ( System . in , System . out , Charset . defaultCharset ( ) ) ; \n\t} \n"}, {"code": "public static void v $F3867 ( tag , s , args ) { \n\tif ( LOG . VERBOSE >= LOGLEVEL ) Log . v ( tag , String . format ( s , args ) ) ; \n\t} \n"}, {"code": "$F1 public boolean isCellEditable ( int rowIndex , int columnIndex ) { \n\tProcessFunctionParameterValue value = valueList . get ( rowIndex ) ; \n\tswitch ( columnIndex ) { \n\t\tcase COL_OPTIONAL : return value . optional ; \n\t\tcase COL_VALUE : if ( value . optional ) { \n\t\t\treturn value . included ; \n\t\t\t} \n\t\telse { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tcase COL_PARAMETER : case COL_TYPE : $F1267 return _BOOL ; \n\t\t} \n\t} \n"}, {"code": "private void checkStreams $F72 { \n\tif ( $F32708 ( System , lastChecked ) < CHECK_DELAY ) $F932 $F3224 ( lastChecked , System ) Set < StreamInfo > $F9626 ( remove ) ; \n\tfor ( StreamInfo info : data ) { \n\t\tif ( ! info . isValid ( ) || ! info . getOnline ( ) ) $F207 ( remove , info ) } \n\tfor ( StreamInfo info : remove ) { \n\t\tdata . remove ( info ) ; \n\t\titemRemoved ( info ) ; \n\t\t} \n\tif $F2979 ( remove ) $F5795 ( listDataChanged ) } \n"}, {"code": "$F129060 ( views , direction , focusableMode , focusableCount , descendantFocusability , getDescendantFocusability , FOCUS_BLOCK_DESCENDANTS , i , getChildCount , child , getChildAt , VISIBLE , ii , infoForChild , mCurItem , FOCUS_AFTER_DESCENDANTS , isFocusable , FOCUSABLES_TOUCH_MODE , isInTouchMode , isFocusableInTouchMode , this ) "}, {"code": "public void addPriorityPackage ( String pkg ) { \n\tif ( _priorityPackages == null ) $F384 ( _priorityPackages ) int oldLength = _priorityPackages . length ; \n\t$F806 newPkgs = $F113629 ( oldLength ) ; \n\t$F135 ( System , _priorityPackages , newPkgs , oldLength ) if $F2364 ( pkg ) pkg = pkg + NUM00 ; \n\tnewPkgs [ oldLength ] = pkg ; \n\t_priorityPackages = newPkgs ; \n\t} \n"}, {"code": "$F1 public void actionPerformed ( ActionEvent ev ) { \n\tfinal megan . remote . RemoteServiceBrowser remoteServiceBrowser = ( megan . remote . RemoteServiceBrowser ) getViewer ( ) ; \n\tif ( remoteServiceBrowser != null ) { \n\t\tString url = remoteServiceBrowser . getURL ( ) ; \n\t\tString user = remoteServiceBrowser . getUser ( ) ; \n\t\tString password = remoteServiceBrowser . getPasswd ( ) ; \n\t\tString command = NUM00 + url + NUM00 ; \n\t\tif $F4012 ( user ) command += NUM00 + user + NUM00 ; \n\t\tif $F4012 ( password ) { \n\t\t\tsynchronized ( syncObject ) { \n\t\t\t\tOpenRemoteServerCommand . hiddenPassword = password ; \n\t\t\t\t} \n\t\t\tcommand += NUM00 + HIDDEN_PASSWORD + NUM00 ; \n\t\t\t} \n\t\tcommand += NUM00 ; \n\t\tif $F4012 ( url ) { \n\t\t\texecute ( command ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static String verifyCertificate ( X509Certificate cert , Collection < CRL > crls , Calendar calendar ) { \n\tif ( SignUtils . hasUnsupportedCriticalExtension ( cert ) ) $F1278 try { \n\t\tcert . checkValidity ( calendar . getTime ( ) ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\treturn e . getMessage ( ) ; \n\t\t} \n\tif ( crls != null ) { \n\t\tfor ( CRL crl : crls ) { \n\t\t\tif ( crl . isRevoked ( cert ) ) $F1278 } \n\t\t} \n\t$F1274 } \n"}, {"code": "public static void expand $F72 { \n\t$F12914 ( st , L ) int i ; \n\tfor ( i = NUM00 ; \n\ti < R ; \n\ti ++ ) st [ i ] = NUM00 + ( char ) i ; \n\tst [ i ++ ] = NUM00 ; \n\tint codeword = BinaryStdIn . readInt ( W ) ; \n\t$F16699 ( codeword , R ) String val = st [ codeword ] ; \n\twhile ( _BOOL ) { \n\t\tBinaryStdOut . write ( val ) ; \n\t\tcodeword = BinaryStdIn . readInt ( W ) ; \n\t\t$F67767 ( codeword , R ) String s = st [ codeword ] ; \n\t\tif ( i == codeword ) s = val + val . charAt ( NUM00 ) ; \n\t\tif ( i < L ) st [ i ++ ] = val + s . charAt ( NUM00 ) ; \n\t\tval = s ; \n\t\t} \n\t$F59 ( BinaryStdOut ) } \n"}, {"code": "AudioCapabilities $F11072 ( supportedEncodings , maxChannelCount ) { \n\tif ( supportedEncodings != null ) { \n\t\t$F17879 ( this , Arrays , supportedEncodings ) Arrays . sort ( this . supportedEncodings ) ; \n\t\t} \n\telse { \n\t\tthis . supportedEncodings = $F4468 ; \n\t\t} \n\tthis . maxChannelCount = maxChannelCount ; \n\t} \n"}, {"code": "$F1 public boolean isRotateEdgeLabels $F72 { \n\treturn graphCreator . isRotatingEdgeLabels ( ) ; \n\t} \n"}, {"code": "public static ResponseCode createExtension ( String name ) { \n\tStringBuffer $F1289 ( buffer , name ) ; \n\tif $F14943 ( name ) $F86 ( buffer ) buffer . append ( name ) ; \n\treturn new ResponseCode $F3362 ( buffer ) ; \n\t} \n"}, {"code": "$F1 public $F1986 makeInverseCumulativeTestValues $F72 { \n\t$F33257 ( points , makeCumulativeTestPoints ) $F284341 ( points2 , points ) $F5634 ( System , points , points2 ) return points2 ; \n\t} \n"}, {"code": "public $F14638 append ( boolean b ) { \n\tif ( b ) $F148106 ( append ) return append ( NUM00 ) ; \n\t} \n"}, {"code": "public void deleteServers ( Set servers ) throws AMConsoleException { \n\tif ( servers . contains ( SystemProperties . getServerInstanceName ( ) ) ) { \n\t\tthrow new AMConsoleException ( getLocalizedString ( NUM00 ) ) ; \n\t\t} \n\tString serverName = null ; \n\ttry { \n\t\tif $F2772 ( servers ) { \n\t\t\tSSOToken token = getUserSSOToken ( ) ; \n\t\t\tfor ( $F2774 ( i , servers ) ) { \n\t\t\t\t$F103384 ( serverName , i ) $F78467 ( param , serverName ) logEvent ( NUM00 , param ) ; \n\t\t\t\tServerConfiguration . deleteServerInstance ( token , serverName ) ; \n\t\t\t\tlogEvent ( NUM00 , param ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( SMSException e ) $F566144 ( params , serverName , e , logEvent , getErrorString ) catch ( SSOException e ) $F566144 ( params , serverName , e , logEvent , getErrorString ) } \n"}, {"code": "protected void arraycopy $F24576 ( buf , pos , length ) { \n\tmMessage . write ( buf , pos , length ) ; \n\tmPosition = mPosition + length ; \n\t} \n"}, {"code": "static void sort ( $F5415 a , int left , int right , $F5415 work , int workBase , int workLen ) { \n\twhile ( left <= right && Float . isNaN ( a [ right ] ) ) { \n\t\t-- right ; \n\t\t} \n\tfor ( int k = right ; \n\t-- k >= left ; \n\t) { \n\t\tfloat ak = a [ k ] ; \n\t\tif ( ak != ak ) { \n\t\t\ta [ k ] = a [ right ] ; \n\t\t\ta [ right ] = ak ; \n\t\t\t-- right ; \n\t\t\t} \n\t\t} \n\tdoSort ( a , left , right , work , workBase , workLen ) ; \n\tint hi = right ; \n\twhile ( left < hi ) { \n\t\t$F41176 ( middle , left , hi ) float middleValue = a [ middle ] ; \n\t\tif ( middleValue < NUM00 ) { \n\t\t\tleft = middle + NUM00 ; \n\t\t\t} \n\t\telse { \n\t\t\thi = middle ; \n\t\t\t} \n\t\t} \n\twhile ( left <= right && Float . floatToRawIntBits ( a [ left ] ) < NUM00 ) { \n\t\t++ left ; \n\t\t} \n\tfor ( int k = left , p = left - NUM00 ; \n\t++ k <= right ; \n\t) { \n\t\tfloat ak = a [ k ] ; \n\t\tif ( ak != NUM00 ) $F5153 if ( Float . floatToRawIntBits ( ak ) < NUM00 ) { \n\t\t\ta [ k ] = NUM00 ; \n\t\t\ta [ ++ p ] = - NUM00 ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void fatalError $F146212 ( e ) throws $F2253 { \n\t$F105671 ( formattedMsg , e ) SAXSourceLocator locator = getLocator ( ) ; \n\t$F1875 ( handler , m_stylesheetProcessor ) try { \n\t\thandler . fatalError ( new TransformerException ( formattedMsg , locator ) ) ; \n\t\t} \n\t$F2262 ( te ) } \n"}, {"code": "public boolean add ( terminal sym ) throws internal_error { \n\tboolean result ; \n\tnot_null ( sym ) ; \n\tresult = _elements . get ( sym . index ( ) ) ; \n\tif ( ! result ) _elements . set ( sym . index ( ) ) ; \n\treturn result ; \n\t} \n"}, {"code": "private void createRecursivly ( String path ) throws $F80658 { \n\ttry { \n\t\tif ( zk . exists ( path , _BOOL ) == null && $F20 ( path ) ) { \n\t\t\tString temp = path . substring ( NUM00 , $F23703 ( path , File ) ) ; \n\t\t\tcreateRecursivly ( temp ) ; \n\t\t\tzk . create ( path , null , Ids . OPEN_ACL_UNSAFE , CreateMode . PERSISTENT ) ; \n\t\t\t} \n\t\telse $F932 } \n\tcatch ( KeeperException e ) { \n\t\tthrow e ; \n\t\t} \n\tcatch ( InterruptedException e ) { \n\t\tthrow e ; \n\t\t} \n\t} \n"}, {"code": "public void stopRecording $F72 { \n\tmHandler . sendMessage ( mHandler . obtainMessage ( MSG_STOP_RECORDING ) ) ; \n\tmHandler . sendMessage ( mHandler . obtainMessage ( MSG_QUIT ) ) ; \n\t} \n"}, {"code": "private void writeTag ( String name , Tag tag ) throws IOException { \n\tTagType type = tag . getType ( ) ; \n\t$F96 nameBytes = $F43004 ( name , StandardCharsets ) ; \n\tif ( type == TagType . END ) $F14525 os . writeByte ( type . getId ( ) ) ; \n\tos . writeShort ( nameBytes . length ) ; \n\tos . write ( nameBytes ) ; \n\twriteTagPayload ( tag ) ; \n\t} \n"}, {"code": "public int hashCode $F72 { \n\tif ( myhash == - NUM00 ) { \n\t\tif ( timestamp == null ) { \n\t\t\t$F80728 ( myhash , signerCertPath ) } \n\t\telse { \n\t\t\tmyhash = signerCertPath . hashCode ( ) + timestamp . hashCode ( ) ; \n\t\t\t} \n\t\t} \n\treturn myhash ; \n\t} \n"}, {"code": "public TypeVariableBV typeVariable $F72 { \n\t$F2199 ( id , typeVariableList ) $F722 ( typeVariableList ) TypeVariableBV result = new TypeVariableBV ( id , this ) ; \n\ttypeVariableList . set ( id , result ) ; \n\treturn result ; \n\t} \n"}, {"code": "public int process ( $F12090 callbacks , int state ) throws AuthLoginException { \n\tinitAuthConfig ( ) ; \n\t$F5958 allCerts = null ; \n\ttry { \n\t\tHttpServletRequest servletRequest = getHttpServletRequest ( ) ; \n\t\tif ( servletRequest != null ) { \n\t\t\tallCerts = ( $F5958 ) servletRequest . getAttribute ( NUM00 ) ; \n\t\t\tif $F12414 ( allCerts ) { \n\t\t\t\t$F18126 ( debug ) if ( ! portal_gw_cert_auth_enabled ) { \n\t\t\t\t\t$F137865 ( debug ) $F12117 ( amAuthCert ) } \n\t\t\t\tthecert = getPortalStyleCert ( servletRequest ) ; \n\t\t\t\tallCerts = new X509Certificate [ ] { \n\t\t\t\t\tthecert } \n\t\t\t\t; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( portal_gw_cert_auth_enabled && portal_gw_cert_preferred ) { \n\t\t\t\t\tthecert = getPortalStyleCert ( servletRequest ) ; \n\t\t\t\t\tallCerts = new X509Certificate [ ] { \n\t\t\t\t\t\tthecert } \n\t\t\t\t\t; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tif $F6299 ( debug ) { \n\t\t\t\t\t\tdebug . message ( NUM00 + NUM00 , allCerts . length ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\tthecert = allCerts [ NUM00 ] ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\telse $F20182 ( thecert , sendCallback ) if ( thecert == null ) { \n\t\t\t$F18126 ( debug ) $F12117 ( amAuthCert ) } \n\t\tgetTokenFromCert ( thecert ) ; \n\t\tstoreUsernamePasswd ( userTokenId , null ) ; \n\t\tif $F6299 ( debug ) $F235771 ( debug , userTokenId ) } \n\tcatch ( AuthLoginException e ) { \n\t\tsetFailureID ( userTokenId ) ; \n\t\t$F5197 ( debug , e ) $F12117 ( amAuthCert ) } \n\tif $F6299 ( debug ) { \n\t\t$F18129 ( debug , thecert ) } \n\tif ( amAuthCert_chkCertInLDAP . equalsIgnoreCase ( NUM00 ) && amAuthCert_chkCRL . equalsIgnoreCase ( NUM00 ) && ! ocspEnabled ) { \n\t\treturn ISAuthConstants . LOGIN_SUCCEED ; \n\t\t} \n\t$F113304 ( ldapParam , setLdapStoreParam ) if $F21935 ( amAuthCert_chkCertInLDAP ) { \n\t\tX509Certificate ldapcert = AMCertStore . getRegisteredCertificate ( ldapParam , thecert , amAuthCert_chkAttrCertInLDAP ) ; \n\t\tif ( ldapcert == null ) { \n\t\t\t$F9464 ( debug ) setFailureID ( userTokenId ) ; \n\t\t\t$F12117 ( amAuthCert ) } \n\t\t} \n\tint ret = doJCERevocationValidation ( allCerts ) ; \n\tif ( ret != ISAuthConstants . LOGIN_SUCCEED ) { \n\t\t$F9464 ( debug ) setFailureID ( userTokenId ) ; \n\t\t$F12117 ( amAuthCert ) } \n\treturn ISAuthConstants . LOGIN_SUCCEED ; \n\t} \n"}, {"code": "public static void downto ( Number self , Number to , $F50462 ( closure ) ) { \n\t$F79839 ( self1 , self ) $F79839 ( to1 , to ) if ( self1 >= to1 ) { \n\t\tfor ( int i = self1 ; \n\t\ti >= to1 ; \n\t\ti -- ) $F50467 ( closure , i ) } \n\telse $F50472 ( to , self ) } \n"}, {"code": "public void add ( SelectClauseElementRaw element ) $F207 ( selectClauseElements , element ) "}, {"code": "public synchronized void removePvChangeListener ( PvChangeListener l ) { \n\tlog . debug ( $F55902 ( String , this ) + String . valueOf ( l ) ) ; \n\tPvChangeListeners . remove ( l ) ; \n\t} \n"}, {"code": "public static boolean isNormal ( GeoTimeSerie gts , int buckets , double pcterror , boolean bessel ) { \n\tif ( NUM00 == gts . values ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( TYPE . DOUBLE != gts . type && TYPE . LONG != gts . type ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F1986 musigma = musigma ( gts , bessel ) ; \n\tdouble mu = musigma [ NUM00 ] ; \n\tdouble sigma = musigma [ NUM00 ] ; \n\tif ( NUM00 == sigma ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F1986 bounds = SAXUtils . getBounds ( buckets ) ; \n\t$F32792 ( counts , bounds ) for ( $F168888 ( i , gts ) ) { \n\t\tdouble v = ( ( double ) GTSHelper . valueAtIndex ( gts , i ) - mu ) / sigma ; \n\t\t$F8533 ( insertion , Arrays , bounds , v ) if ( insertion >= NUM00 ) { \n\t\t\tcounts [ insertion ] ++ ; \n\t\t\t} \n\t\telse { \n\t\t\tcounts [ - ( NUM00 + insertion ) ] ++ ; \n\t\t\t} \n\t\t} \n\tdouble mean = gts . values / counts . length ; \n\tfor ( $F1139 ( i , counts ) ) { \n\t\tif ( Math . abs ( NUM00 - ( counts [ i ] / mean ) ) > pcterror ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void loadFromProperties ( Properties properties ) { \n\tprojected = StringUtil . getBooleanValue ( properties , NUM00 , _BOOL , _BOOL ) ; \n\ttiePoint = StringUtil . getDoubleArray ( properties , NUM00 , null , _BOOL ) ; \n\tscale = StringUtil . getDoubleArray ( properties , NUM00 , null , _BOOL ) ; \n\tglobe = StringUtil . getStringValue ( properties , NUM00 , null , _BOOL ) ; \n\trasterWidth = StringUtil . getIntegerValue ( properties , NUM00 , _BOOL , NUM00 , _BOOL ) ; \n\trasterLength = StringUtil . getIntegerValue ( properties , NUM00 , _BOOL , NUM00 , _BOOL ) ; \n\tdatumCode = StringUtil . getIntegerValue ( properties , NUM00 , _BOOL , NUM00 , _BOOL ) ; \n\tellipsoidCode = StringUtil . getIntegerValue ( properties , NUM00 , _BOOL , NUM00 , _BOOL ) ; \n\tsemiMajorAxis = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tsemiMinorAxis = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tinverseFlattening = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tgcsPrimeMeridianLon = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tprojCode = StringUtil . getIntegerValue ( properties , NUM00 , _BOOL , NUM00 , _BOOL ) ; \n\tpcsCode = StringUtil . getIntegerValue ( properties , NUM00 , _BOOL , NUM00 , _BOOL ) ; \n\tcoordTransformCode = StringUtil . getIntegerValue ( properties , NUM00 , _BOOL , NUM00 , _BOOL ) ; \n\tstdParallel1 = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tpoleLat = ( int ) ( Math . signum ( stdParallel1 ) * NUM00 ) ; \n\tstdParallel2 = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tnaturalOriginLon = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tnaturalOriginLat = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tfalseOriginLon = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tfalseOriginLat = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tfalseEasting = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tfalseNorthing = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tcenterEasting = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tcenterNorthing = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tcenterLon = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tcenterLat = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tscaleAtNaturalOrigin = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tscaleAtCenter = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tazimuth = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tstraightVertPoleLon = StringUtil . getDoubleValue ( properties , NUM00 , _BOOL , Double . NaN , _BOOL ) ; \n\tgcsCitation = StringUtil . getStringValue ( properties , NUM00 , null , _BOOL ) ; \n\tpcsCitation = StringUtil . getStringValue ( properties , NUM00 , null , _BOOL ) ; \n\tprojLinearUnits = StringUtil . getStringValue ( properties , NUM00 , NUM00 , _BOOL ) ; \n\tif ( coordTransformCode == GeoKey . Code_Undefined ) { \n\t\tString citation = ( pcsCitation == null ? NUM00 : pcsCitation . toLowerCase ( ) ) ; \n\t\tif ( citation . contains ( NUM00 ) && $F100843 ( citation ) ) { \n\t\t\tcoordTransformCode = GeoKey . Code_CT_Mercator ; \n\t\t\tif $F35707 ( Double , naturalOriginLon ) naturalOriginLon = NUM00 ; \n\t\t\tif $F35707 ( Double , falseEasting ) falseEasting = NUM00 ; \n\t\t\tif $F35707 ( Double , falseNorthing ) falseNorthing = NUM00 ; \n\t\t\tif ( $F63172 ( citation ) ) { \n\t\t\t\tif $F2292 ( Double , semiMajorAxis ) semiMinorAxis = semiMajorAxis ; \n\t\t\t\telse { \n\t\t\t\t\tsemiMajorAxis = SEMI_MAJOR_AXIS [ NUM00 ] ; \n\t\t\t\t\tsemiMinorAxis = SEMI_MINOR_AXIS [ NUM00 ] ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static double gamma ( double x ) { \n\tdouble P [ ] = { \n\t\tNUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\tdouble Q [ ] = { \n\t\t- NUM00 , NUM00 , - NUM00 , NUM00 , NUM00 , - NUM00 , NUM00 , NUM00 } \n\t; \n\tdouble p , z ; \n\t$F95016 ( q , Math , x ) if ( q > NUM00 ) { \n\t\tif ( x < NUM00 ) { \n\t\t\tp = Math . floor ( q ) ; \n\t\t\tif ( p == q ) $F290806 z = q - p ; \n\t\t\tif ( z > NUM00 ) { \n\t\t\t\tp += NUM00 ; \n\t\t\t\tz = q - p ; \n\t\t\t\t} \n\t\t\tz = q * Math . sin ( Math . PI * z ) ; \n\t\t\tif ( z == NUM00 ) $F290806 $F15467 ( z , Math ) z = Math . PI / ( z * stirlingFormula ( q ) ) ; \n\t\t\treturn - z ; \n\t\t\t} \n\t\telse $F4915 ( stirlingFormula , x ) } \n\tz = NUM00 ; \n\twhile ( x >= NUM00 ) { \n\t\tx -= NUM00 ; \n\t\tz *= x ; \n\t\t} \n\twhile ( x < NUM00 ) { \n\t\tif ( x == NUM00 ) $F290806 else if ( x > - NUM00 ) { \n\t\t\treturn ( z / ( ( NUM00 + NUM00 * x ) * x ) ) ; \n\t\t\t} \n\t\tz /= x ; \n\t\tx += NUM00 ; \n\t\t} \n\twhile ( x < NUM00 ) { \n\t\tif ( x == NUM00 ) $F290806 else if ( x < NUM00 ) { \n\t\t\treturn ( z / ( ( NUM00 + NUM00 * x ) * x ) ) ; \n\t\t\t} \n\t\tz /= x ; \n\t\tx += NUM00 ; \n\t\t} \n\tif $F61413 ( x ) { \n\t\treturn z ; \n\t\t} \n\tx -= NUM00 ; \n\tp = polevl ( x , P , NUM00 ) ; \n\tq = polevl ( x , Q , NUM00 ) ; \n\treturn z * p / q ; \n\t} \n"}, {"code": "public ShowProgress $F72 { \n\tstart = last = System . currentTimeMillis ( ) ; \n\t} \n"}, {"code": "public static RepositoryExpression parseRepositoryExpression ( String toParse ) throws ParseError { \n\tStreamTokenizer t = Parser . tokenize ( toParse ) ; \n\tTerm creator = Parser . parseTerm ( t ) ; \n\tList < Operation > operations = Parser . parseOperationList ( t ) ; \n\tRepositoryExpression ex = new RepositoryExpression ( creator ) ; \n\tif $F5973 ( operations ) { \n\t\tthrow new ParseError $F580 ; \n\t\t} \n\treturn ex ; \n\t} \n"}, {"code": "$F1 public synchronized void close $F72 throws IOException { \n\tbuffer = null ; \n\tnotifyAll ( ) ; \n\t} \n"}, {"code": "public void addSection ( SourceSection section ) $F207 ( sections , section ) "}, {"code": "public static GenomeRelationships load ( BufferedReader reader ) throws IOException { \n\tfinal GenomeRelationships ped = new GenomeRelationships $F72 ; \n\tString line ; \n\twhile $F443 ( line , reader ) { \n\t\t$F1382 ( line ) if ( line . startsWith ( NUM00 ) || line . matches ( NUM00 ) ) $F1448 if $F11809 ( line ) $F171537 ( parseGenomeLine , ped , line ) if $F11809 ( line ) $F171537 ( parseRelationshipLine , ped , line ) throw new NoTalkbackSlimException ( NUM00 + line + NUM00 ) ; \n\t\t} \n\treturn ped ; \n\t} \n"}, {"code": "private $F2027 versionParts ( String version ) { \n\t$F6542 ( parts , version ) $F11844 ( p ) for ( $F6268 ( i ) ) { \n\t\tint pi ; \n\t\tif ( i < parts . length ) { \n\t\t\t$F191709 ( p , i , Integer , parts ) } \n\t\telse { \n\t\t\tp [ i ] = - NUM00 ; \n\t\t\t} \n\t\t} \n\treturn p ; \n\t} \n"}, {"code": "private FgsRunner . Type computeType $F72 { \n\tObject model = getDataModel ( ) ; \n\tif ( model == null && getSourceGraph ( ) != null ) $F20182 ( model , getSourceGraph ) if ( model == null ) { \n\t\tthrow new RuntimeException ( $F39 ) ; \n\t\t} \n\tif ( model instanceof Graph ) { \n\t\ttype = FgsRunner . Type . GRAPH ; \n\t\t} \n\telse if ( model instanceof DataSet ) { \n\t\tDataSet dataSet = ( DataSet ) model ; \n\t\tif ( dataSet . isContinuous ( ) ) { \n\t\t\ttype = FgsRunner . Type . CONTINUOUS ; \n\t\t\t} \n\t\telse if ( dataSet . isDiscrete ( ) ) { \n\t\t\ttype = FgsRunner . Type . DISCRETE ; \n\t\t\t} \n\t\telse $F4639 } \n\telse if ( model instanceof ICovarianceMatrix ) { \n\t\ttype = FgsRunner . Type . CONTINUOUS ; \n\t\t} \n\telse if ( model instanceof DataModelList ) { \n\t\tDataModelList list = ( DataModelList ) model ; \n\t\tif ( allContinuous ( list ) ) { \n\t\t\ttype = FgsRunner . Type . CONTINUOUS ; \n\t\t\t} \n\t\telse if ( allDiscrete ( list ) ) { \n\t\t\ttype = FgsRunner . Type . DISCRETE ; \n\t\t\t} \n\t\telse $F825 } \n\treturn type ; \n\t} \n"}, {"code": "public static boolean approxEquals $F46897 ( a , b , tolerance ) { \n\tif $F89880 ( Double , a , b ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F3627 ( a , b , _BOOL ) if ( Double . isInfinite ( a ) || Double . isInfinite ( b ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tif ( a >= ( b - tolerance ) && a <= ( b + tolerance ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static $F529 loadJsonModel ( File jsFile ) { \n\ttry { \n\t\t$F529 model = JavaScriptResolver . readJsonModel ( jsFile ) ; \n\t\tif ( model == null ) { \n\t\t\tthrow new CompilerErrorException $F27407 ( jsFile ) ; \n\t\t\t} \n\t\tif $F154125 ( model ) { \n\t\t\tthrow new CeylonRunJsException ( NUM00 + jsFile + NUM00 ) ; \n\t\t\t} \n\t\treturn model ; \n\t\t} \n\tcatch ( IOException ex ) { \n\t\tthrow new CompilerErrorException ( NUM00 + jsFile ) ; \n\t\t} \n\t} \n"}, {"code": "static $F806 splitLine ( final String line ) { \n\t$F46662 ( ix0 , line ) final int ix = ix0 == - NUM00 ? line . length ( ) : ix0 ; \n\t$F66071 ( lessComment , line , ix ) if $F11809 ( lessComment ) $F1337 return lessComment . split ( NUM00 ) ; \n\t} \n"}, {"code": "private $F47942 createVolumeData ( String name , int numVolumes ) { \n\t$F47942 $F110578 ( volumes ) ; \n\tURI cgUri = createBlockConsistencyGroup ( name + NUM00 ) ; \n\tfor ( $F9993 ( i , numVolumes ) ) { \n\t\tVolume volume = new Volume $F72 ; \n\t\t$F132261 ( volumeURI , URIUtil ) testVolumeURIs . add ( volumeURI ) ; \n\t\tvolume . setId ( volumeURI ) ; \n\t\tvolume . setLabel ( name + i ) ; \n\t\tvolume . setConsistencyGroup ( cgUri ) ; \n\t\t_dbClient . createObject ( volume ) ; \n\t\t} \n\treturn volumes ; \n\t} \n"}, {"code": "private static $F4203 T hashMapToObject ( LinkedHashMap map , $F20474 type ) { \n\ttry { \n\t\treturn stringToObject ( mapper . writeValueAsString ( map ) , type ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tlog . warn ( $F2990 ( type ) + map . toString ( ) + NUM00 + e . getMessage ( ) ) ; \n\t\t$F1274 } \n\t} \n"}, {"code": "$F37100 ( fieldId , SUCCESS ) "}, {"code": "private void deleteSMS ( String cmd , String search ) { \n\tint nbDeleted = - NUM00 ; \n\tif $F3057 ( cmd ) { \n\t\tnbDeleted = mSmsManager . deleteAllSms ( ) ; \n\t\t} \n\telse if $F3057 ( cmd ) { \n\t\tnbDeleted = mSmsManager . deleteSentSms ( ) ; \n\t\t} \n\telse if $F3106 ( cmd ) { \n\t\tInteger number = Tools . parseInt ( search ) ; \n\t\tif ( number == null ) { \n\t\t\tnumber = NUM00 ; \n\t\t\t} \n\t\tif $F3057 ( cmd ) { \n\t\t\tnbDeleted = mSmsManager . deleteLastSms ( number ) ; \n\t\t\t} \n\t\telse if $F3057 ( cmd ) { \n\t\t\tnbDeleted = mSmsManager . deleteLastInSms ( number ) ; \n\t\t\t} \n\t\telse if $F3057 ( cmd ) { \n\t\t\tnbDeleted = mSmsManager . deleteLastOutSms ( number ) ; \n\t\t\t} \n\t\telse { \n\t\t\tsend ( R . string . chat_del_sms_error ) ; \n\t\t\t} \n\t\t} \n\telse if ( cmd . equals ( NUM00 ) && search != null ) { \n\t\tArrayList $F249696 contacts = ContactsManager . getMatchingContacts ( sContext , search ) ; \n\t\tif $F3817 ( contacts ) { \n\t\t\tStringBuilder sb = new StringBuilder ( getString ( R . string . chat_specify_details ) ) ; \n\t\t\tsb . append ( Tools . LineSep ) ; \n\t\t\tfor ( Contact contact : contacts ) { \n\t\t\t\tsb . append ( contact . name ) ; \n\t\t\t\tsb . append ( Tools . LineSep ) ; \n\t\t\t\t} \n\t\t\t$F31458 ( send , sb ) } \n\t\telse if $F10471 ( contacts ) { \n\t\t\tContact contact = contacts . get ( NUM00 ) ; \n\t\t\tsend ( R . string . chat_del_sms_from , contact . name ) ; \n\t\t\tnbDeleted = mSmsManager . deleteSmsByContact ( contact . rawIds ) ; \n\t\t\t} \n\t\telse { \n\t\t\tsend ( R . string . chat_no_match_for , search ) ; \n\t\t\t} \n\t\t} \n\telse if ( cmd . equals ( NUM00 ) && search != null ) { \n\t\tsend ( R . string . chat_del_sms_from , search ) ; \n\t\tnbDeleted = mSmsManager . deleteSmsByNumber ( search ) ; \n\t\tif ( nbDeleted <= NUM00 ) { \n\t\t\tsend ( R . string . chat_no_match_for , search ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tsend ( R . string . chat_del_sms_syntax ) ; \n\t\t} \n\tif ( nbDeleted >= NUM00 ) { \n\t\tsend ( R . string . chat_del_sms_nb , nbDeleted ) ; \n\t\t} \n\telse if ( nbDeleted == - NUM00 ) { \n\t\tsend ( R . string . chat_del_sms_error ) ; \n\t\t} \n\t} \n"}, {"code": "private static BlocksRemoveInfo isStartBlock ( BlockNode remBlock , BlockNode startBlock ) { \n\tList < InsnNode > remInsns = remBlock . getInstructions ( ) ; \n\tList < InsnNode > startInsns = startBlock . getInstructions ( ) ; \n\tif $F45088 ( remInsns , startInsns ) $F1337 int startPos = remInsns . size ( ) - startInsns . size ( ) ; \n\tint endPos = NUM00 ; \n\tif ( ! checkInsns ( remInsns , startInsns , startPos , null ) ) { \n\t\tif ( checkInsns ( remInsns , startInsns , NUM00 , null ) ) { \n\t\t\tstartPos = NUM00 ; \n\t\t\t$F8935 ( endPos , startInsns ) } \n\t\telse { \n\t\t\tboolean found = _BOOL ; \n\t\t\tfor ( $F119 ( i , startPos ) ) { \n\t\t\t\tif ( checkInsns ( remInsns , startInsns , i , null ) ) { \n\t\t\t\t\tstartPos = i ; \n\t\t\t\t\tendPos = startInsns . size ( ) + i ; \n\t\t\t\t\tfound = _BOOL ; \n\t\t\t\t\t$F597 } \n\t\t\t\t} \n\t\t\t$F81346 ( found ) } \n\t\t} \n\tBlocksPair startPair = new BlocksPair ( remBlock , startBlock ) ; \n\tBlocksRemoveInfo removeInfo = new BlocksRemoveInfo ( startPair ) ; \n\tremoveInfo . setStartSplitIndex ( startPos ) ; \n\tremoveInfo . setEndSplitIndex ( endPos ) ; \n\tif ( endPos != NUM00 ) { \n\t\tremoveInfo . setEnd ( startPair ) ; \n\t\t} \n\tif ( ! checkInsns ( remInsns , startInsns , startPos , removeInfo ) ) $F1337 return removeInfo ; \n\t} \n"}, {"code": "public boolean checkError $F72 { \n\treturn pw . checkError ( ) ; \n\t} \n"}, {"code": "public List < PdfDocument > splitBySize ( long size ) { \n\tList < PageRange > $F204 ( splitRanges ) ; \n\tint currentPage = NUM00 ; \n\tint numOfPages = pdfDocument . getNumberOfPages ( ) ; \n\twhile ( currentPage <= numOfPages ) { \n\t\tPageRange nextRange = getNextRange ( currentPage , numOfPages , size ) ; \n\t\tsplitRanges . add ( nextRange ) ; \n\t\t$F3807 allPages = nextRange . getAllPages ( ) ; \n\t\tcurrentPage = ( int ) $F7661 ( allPages ) + NUM00 ; \n\t\t} \n\treturn extractPageRanges ( splitRanges ) ; \n\t} \n"}, {"code": "private boolean validateAuthSchemes ( Set authSchemeSet ) throws PolicyException { \n\tif $F2979 ( authSchemeSet ) $F136372 ( AUTH_SCHEME , ResBundleUtils , args ) $F10531 ( authSchemeSetIter , authSchemeSet ) $F725 ( authSchemes ) while $F2921 ( authSchemeSetIter ) { \n\t\ttry { \n\t\t\t$F2778 ( authScheme , authSchemeSetIter ) authSchemes . add ( authScheme ) ; \n\t\t\t} \n\t\tcatch ( ClassCastException e ) $F136372 ( AUTH_SCHEME , ResBundleUtils , args ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static UUID fromUUIDAsURNStringToUUID ( String UUIDasURN ) { \n\tif ( ! UUIDasURN . startsWith ( UUIDHelper . UUID_as_a_URN_PREFIX ) ) { \n\t\tIMFErrorLogger imfErrorLogger = new IMFErrorLoggerImpl $F72 ; \n\t\timfErrorLogger . addError ( IMFErrorLogger . IMFErrors . ErrorCodes . UUID_ERROR , IMFErrorLogger . IMFErrors . ErrorLevels . FATAL , String . format ( NUM00 + NUM00 , UUIDasURN , UUIDHelper . UUID_as_a_URN_PREFIX ) ) ; \n\t\tthrow new IMFException ( String . format ( NUM00 , UUIDasURN , UUIDHelper . UUID_as_a_URN_PREFIX ) , imfErrorLogger ) ; \n\t\t} \n\treturn UUID . fromString ( UUIDasURN . split ( UUIDHelper . UUID_as_a_URN_PREFIX ) [ NUM00 ] ) ; \n\t} \n"}, {"code": "public String readLine $F72 { \n\tString line ; \n\ttry { \n\t\tline = scanner . nextLine ( ) ; \n\t\t} \n\tcatch ( NoSuchElementException e ) { \n\t\tline = null ; \n\t\t} \n\treturn line ; \n\t} \n"}, {"code": "public static $F96 decode ( final String s ) { \n\treturn Base64 . decode ( s , Base64 . NO_OPTIONS ) ; \n\t} \n"}, {"code": "public static GradientPaint makeRedPaint $F30455 ( width , height ) { \n\treturn new GradientPaint ( NUM00 , NUM00 , $F89156 , ( float ) width / NUM00 , ( float ) height / NUM00 , $F89156 , _BOOL ) ; \n\t} \n"}, {"code": "public static $F3803 matchNumbers ( String text ) { \n\tString pattern = NUM00 ; \n\t$F55449 ( pat , Pattern , pattern ) $F1150 ( m , pat , text ) $F10144 ( matches ) while $F281 ( m ) { \n\t\tmatches . add ( m . group ( ) ) ; \n\t\t} \n\treturn matches ; \n\t} \n"}, {"code": "private boolean deleteStorage ( TrackerServer trackerServer , String groupName , String storageIpAddr ) throws IOException { \n\t$F96 header ; \n\t$F96 bGroupName ; \n\t$F96 bs ; \n\tint len ; \n\tSocket trackerSocket ; \n\ttrackerSocket = trackerServer . getSocket ( ) ; \n\t$F147972 ( out , trackerSocket ) bs = groupName . getBytes ( ClientGlobal . g_charset ) ; \n\tbGroupName = new byte [ ProtoCommon . FDFS_GROUP_NAME_MAX_LEN ] ; \n\tif ( bs . length <= ProtoCommon . FDFS_GROUP_NAME_MAX_LEN ) $F9454 ( len , bs ) else { \n\t\tlen = ProtoCommon . FDFS_GROUP_NAME_MAX_LEN ; \n\t\t} \n\t$F26770 ( Arrays , bGroupName ) $F135 ( System , bs , bGroupName , len ) int ipAddrLen ; \n\t$F96 bIpAddr = storageIpAddr . getBytes ( ClientGlobal . g_charset ) ; \n\tif ( bIpAddr . length < ProtoCommon . FDFS_IPADDR_SIZE ) $F9454 ( ipAddrLen , bIpAddr ) else { \n\t\tipAddrLen = ProtoCommon . FDFS_IPADDR_SIZE - NUM00 ; \n\t\t} \n\theader = ProtoCommon . packHeader ( ProtoCommon . TRACKER_PROTO_CMD_SERVER_DELETE_STORAGE , ProtoCommon . FDFS_GROUP_NAME_MAX_LEN + ipAddrLen , $F19905 ) ; \n\t$F96 wholePkg = new byte [ header . length + bGroupName . length + ipAddrLen ] ; \n\t$F7057 ( System , header , wholePkg ) $F11244 ( System , bGroupName , wholePkg , header ) System . arraycopy ( bIpAddr , NUM00 , wholePkg , header . length + bGroupName . length , ipAddrLen ) ; \n\tout . write ( wholePkg ) ; \n\tProtoCommon . RecvPackageInfo pkgInfo = ProtoCommon . recvPackage ( trackerSocket . getInputStream ( ) , ProtoCommon . TRACKER_PROTO_CMD_RESP , NUM00 ) ; \n\tthis . errno = pkgInfo . errno ; \n\treturn pkgInfo . errno == NUM00 ; \n\t} \n"}, {"code": "$F1 public UUID createEntryNode ( UUID parentNode ) { \n\t$F116795 ( uuid , UUID ) graphServer . addVertex ( uuid ) ; \n\tgraphServer . addEdge ( uuid , parentNode ) ; \n\treturn uuid ; \n\t} \n"}, {"code": "protected void assertDeliveryStates ( final Collection < CustomerOrderDelivery > deliveries , $F27504 ( expectedState ) ) { \n\tfor ( CustomerOrderDelivery delivery : deliveries ) { \n\t\tassertEquals ( NUM00 + delivery . getDeliveryGroup ( ) + NUM00 + delivery . getDeliveryNum ( ) , expectedState . get ( delivery . getDeliveryGroup ( ) ) , delivery . getDeliveryStatus ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "$F5466 private CompileScope createFacetsCompileScope ( $F1113 final CompilerManager compilerManager , $F1113 final VirtualFile [ ] files ) { \n\tfinal Set $F122212 modules = New . set ( ) ; \n\tboolean facetsFound = _BOOL ; \n\tfor ( final VirtualFile file : files ) { \n\t\tfinal Module module = ModuleUtilCore . findModuleForFile ( file , project ) ; \n\t\tif ( module != null ) { \n\t\t\tmodules . add ( module ) ; \n\t\t\tif ( ! facetsFound ) { \n\t\t\t\tfacetsFound = hasFacets ( module ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( facetsFound ) { \n\t\treturn compilerManager . createModulesCompileScope ( modules . toArray ( Module . EMPTY_ARRAY ) , _BOOL , _BOOL ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "$F5466 @ WorkerThread static File writeBitmapToFile ( $F4170 Bitmap bitmap , $F4170 File file ) { \n\tFileOutputStream fileStream = null ; \n\ttry { \n\t\t$F1538 ( byteStream ) $F125872 ( bitmap , Bitmap , byteStream ) $F10893 ( fileStream , file ) $F1569 ( fileStream , byteStream ) return file ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tLog . e ( $F65849 ( TAG , e ) ) ; \n\t\t} \n\tfinally { \n\t\tif ( fileStream != null ) { \n\t\t\ttry $F881 ( fileStream ) catch ( IOException e ) { \n\t\t\t\tLog . e ( $F65849 ( TAG , e ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public static Sentence parse ( final String text , final ConversationContext ctx ) { \n\tString txt ; \n\tif ( text == null ) { \n\t\ttxt = NUM00 ; \n\t\t} \n\telse { \n\t\tif ( ( ctx != null ) && ctx . isForMatching ( ) ) { \n\t\t\tfinal ExpressionMatcher matcher = new ExpressionMatcher $F72 ; \n\t\t\ttxt = matcher . readMatchingFlags ( text ) ; \n\t\t\tif ( matcher . isAnyFlagSet ( ) ) { \n\t\t\t\treturn matcher . parseSentence ( txt , ctx ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\ttxt = text ; \n\t\t\t} \n\t\t} \n\t$F1382 ( txt ) final SentenceImplementation sentence = new SentenceImplementation ( ctx , txt ) ; \n\ttry { \n\t\tfinal ConversationParser parser = new ConversationParser ( sentence ) ; \n\t\tsentence . parse ( parser ) ; \n\t\tsentence . classifyWords ( parser ) ; \n\t\tif ( ( ctx != null ) && ctx . getMergeExpressions ( ) ) { \n\t\t\tsentence . evaluateSentenceType ( ) ; \n\t\t\tsentence . mergeWords ( ) ; \n\t\t\tif ( ! ctx . isForMatching ( ) ) { \n\t\t\t\tsentence . standardizeSentenceType ( ) ; \n\t\t\t\tsentence . performaAliasing ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tsentence . setError ( parser . getErrorString ( ) ) ; \n\t\t} \n\tcatch ( final Exception e ) { \n\t\t$F19652 ( LOGGER , text ) sentence . setError ( e . getMessage ( ) ) ; \n\t\t$F301 ( e ) } \n\treturn sentence ; \n\t} \n"}, {"code": "public ElemTemplateElement replaceChild ( ElemTemplateElement newChildElem , ElemTemplateElement oldChildElem ) { \n\tif ( oldChildElem == null || oldChildElem . getParentElem ( ) != this ) $F1274 ElemTemplateElement prev = oldChildElem . getPreviousSiblingElem ( ) ; \n\tif ( null != prev ) prev . m_nextSibling = newChildElem ; \n\tif ( m_firstChild == oldChildElem ) m_firstChild = newChildElem ; \n\tnewChildElem . m_parentNode = this ; \n\toldChildElem . m_parentNode = null ; \n\tnewChildElem . m_nextSibling = oldChildElem . m_nextSibling ; \n\toldChildElem . m_nextSibling = null ; \n\treturn newChildElem ; \n\t} \n"}, {"code": "protected int hash ( Object key1 , Object key2 , Object key3 ) { \n\tint h = NUM00 ; \n\t$F104661 ( key1 , h ) $F104661 ( key2 , h ) $F104661 ( key3 , h ) $F159349 ( h ) $F159351 ( h ) $F159353 ( h ) $F159351 ( h ) return h ; \n\t} \n"}, {"code": "public void flush $F72 throws IOException { \n\tflushBuffer ( ) ; \n\t$F1206 ( _outputStream ) } \n"}, {"code": "$F9749 ( namespace , attName , attValue , xmlWriter , registerPrefix ) "}, {"code": "private void addEntryToInfoList ( Entry entry , List < EntryInfo > entryInfoList ) { \n\tif ( entryInfoList != null ) { \n\t\t$F14181 ( typeToAdd , entry ) if ( typeToAdd . equals ( DbLogic . Constants . quotation ) ) { \n\t\t\ttypeToAdd = DbLogic . Constants . note ; \n\t\t\t} \n\t\tentryInfoList . add ( new EntryInfo ( entry . getId ( ) , entry . getNoteOrTitle ( NUM00 ) , entry . getQuotation ( NUM00 ) , entry . getIsPublic ( ) , entry . hasFirstChildId ( ) , entry . hasParentId ( ) , typeToAdd ) ) ; \n\t\t} \n\t} \n"}, {"code": "private void updateSliding ( float newPositionNormalized ) { \n\tcurrentSlide = newPositionNormalized ; \n\tstate = currentSlide == NUM00 ? EXPANDED : currentSlide == NUM00 ? COLLAPSED : SLIDING ; \n\tfloat slideY = Math . abs ( ( currentSlide * maxSlide ) - maxSlide ) ; \n\tslidableView . setY ( slideY ) ; \n\tinvalidate ( ) ; \n\tnotifyListeners ( currentSlide ) ; \n\t} \n"}, {"code": "void flush ( VcfWriter writer ) throws IOException { \n\tif ( mPrevRecord != null ) { \n\t\tif ( ! mPrevDense ) { \n\t\t\twriteCount ( writer , mPrevRecord ) ; \n\t\t\t} \n\t\telse { \n\t\t\tmVcfFilterStatistics . increment ( Stat . DENSITY_WINDOW_COUNT ) ; \n\t\t\t} \n\t\t} \n\tmPrevRecord = null ; \n\tmPrevDense = _BOOL ; \n\t} \n"}, {"code": "public VideoStream ( String streamStr ) { \n\t$F6542 ( args , streamStr ) $F13404 ( argMap ) for ( String arg : args ) { \n\t\t$F6542 ( argsValues , arg ) if ( argsValues != null ) { \n\t\t\tif $F106758 ( argsValues ) { \n\t\t\t\t$F266434 ( argMap , argsValues ) } \n\t\t\t} \n\t\t} \n\t$F178035 ( mUrl , argMap ) } \n"}, {"code": "public boolean equals ( String str ) { \n\t$F397 ( str , _BOOL ) if $F20325 ( _length , str ) return _BOOL ; \n\tfor ( int i = _length , j = _offset + _length ; \n\t-- i >= NUM00 ; \n\t) { \n\t\tif ( _array [ -- j ] != str . charAt ( i ) ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected void flush $F72 $F29882 ( stream ) "}, {"code": "private ServerStarter startServers $F72 throws Exception { \n\tServerStarter srvStarter = new ServerStarter $F72 ; \n\t$F24440 ( t , srvStarter ) t . setDaemon ( _BOOL ) ; \n\t$F87453 ( t ) $F2346 ( t ) srvStarter . waitForServerStart ( ) ; \n\treturn srvStarter ; \n\t} \n"}, {"code": "public Pagination evaluate ( final Class entityClass ) { \n\tPaginate paginate = entityClass != null ? ( Paginate ) entityClass . getAnnotation ( Paginate . class ) : null ; \n\tint defaultLimit = paginate != null ? paginate . defaultLimit ( ) : DEFAULT_PAGE_LIMIT ; \n\tint maxLimit = paginate != null ? paginate . maxLimit ( ) : MAX_PAGE_LIMIT ; \n\tevaluate ( defaultLimit , maxLimit ) ; \n\tgenerateTotals = generateTotals && ( paginate == null || paginate . countable ( ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "public RuntimeCollector ( Algorithm algorithm , int frequency , ResultFileWriter writer ) { \n\tsuper ( algorithm , frequency , FrequencyType . EVALUATIONS ) ; \n\tthis . writer = writer ; \n\t$F101251 ( startTime , System ) } \n"}, {"code": "public boolean deregisterServiceProvider ( Object provider ) { \n\tObject oprovider = map . get ( provider . getClass ( ) ) ; \n\tif ( provider == oprovider ) { \n\t\tmap . remove ( provider . getClass ( ) ) ; \n\t\tposet . remove ( provider ) ; \n\t\tif ( provider instanceof RegisterableService ) { \n\t\t\tRegisterableService rs = ( RegisterableService ) provider ; \n\t\t\trs . onDeregistration ( registry , category ) ; \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public NewestFirstComparator ( Date now ) { \n\tPreconditions . checkNotNull ( now ) ; \n\tmNow = new Date ( now . getTime ( ) + MILLIS_IN_DAY ) ; \n\t} \n"}, {"code": "protected void update ( Comparable x , Object y ) { \n\tint index = indexOf ( x ) ; \n\tif ( index < NUM00 ) { \n\t\tthrow new SeriesException ( NUM00 + x ) ; \n\t\t} \n\telse { \n\t\tComparableObjectItem item = getDataItem ( index ) ; \n\t\titem . setObject ( y ) ; \n\t\tfireSeriesChanged ( ) ; \n\t\t} \n\t} \n"}, {"code": "public void writeField ( String name , float value ) throws $F3258 $F261761 ( writeField , name , Float , value ) "}, {"code": "public $F96 decodeData $F5474 ( data , numErrorCorrectionBytes ) throws ReedSolomonException , DataTooLargeException { \n\tif $F12414 ( data ) $F1337 if $F3305 ( data ) { \n\t\tthrow new DataTooLargeException $F580 ; \n\t\t} \n\t$F22974 ( dataInts , data ) for ( $F1139 ( i , data ) ) { \n\t\tdataInts [ i ] = data [ i ] & NUM00 ; \n\t\t} \n\tint totalBytes = data . length - numErrorCorrectionBytes ; \n\tdecoder . decode ( dataInts , numErrorCorrectionBytes ) ; \n\t$F1538 ( bos ) for ( int i = NUM00 ; \n\ti < totalBytes && i < dataInts . length ; \n\ti ++ ) $F31431 ( bos , dataInts , i ) $F11316 ( bos ) } \n"}, {"code": "public static $F5 stringToArrayList ( String string ) { \n\treturn new $F201 ( $F34166 ( Arrays , string ) ) ; \n\t} \n"}, {"code": "public Shape createScrollButtonApart $F2026 ( x , y , w , h ) { \n\t$F2268 ( path ) path . moveTo ( x , y ) ; \n\tpath . lineTo ( x , y + h ) ; \n\tpath . lineTo ( x + w , y + h ) ; \n\taddScrollGapPath ( x , y , w , h , _BOOL ) ; \n\t$F2272 ( path ) return path ; \n\t} \n"}, {"code": "void removeAllViewsFromAdapter ( ViewPager pager ) { \n\t$F725 ( mViews ) $F66394 ( pager ) mIsViewPagerInIntentionallyInconsistentState = _BOOL ; \n\t} \n"}, {"code": "public static boolean isValidMobile $F20574 ( mobile ) { \n\tif ( ! TextUtils . isEmpty ( mobile ) && $F1276 ( mobile ) ) { \n\t\tif ( $F132104 ( mobile ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public String convertError ( String filename , int line , int column , String message ) { \n\tString srcFilename = null ; \n\tint destLine = NUM00 ; \n\tint srcLine = NUM00 ; \n\tfor ( $F2277 ( i , _lines ) ) { \n\t\tLine map = _lines . get ( i ) ; \n\t\tif ( filename != null && ! filename . endsWith ( _dstFilename ) ) $F845 else if ( map . _dstLine <= line && line <= map . getLastDestinationLine ( ) ) { \n\t\t\tsrcFilename = map . _srcFilename ; \n\t\t\tsrcLine = map . getSourceLine ( line ) ; \n\t\t\t} \n\t\t} \n\tif ( srcFilename != null ) return srcFilename + NUM00 + srcLine + NUM00 + message ; \n\telse return filename + NUM00 + line + NUM00 + message ; \n\t} \n"}, {"code": "public static Number sinh ( Number a ) { \n\treturn Math . sinh ( a . doubleValue ( ) ) ; \n\t} \n"}, {"code": "public void addNotification ( $F1113 Notification notification ) { \n\tNotificationItem item = new NotificationItem ( resources , notification , delegate , panel ) ; \n\tnotificationWidget . add ( notification ) ; \n\t} \n"}, {"code": "protected boolean isAttributesModified $F72 { \n\tif ( attributes != null ) { \n\t\treturn $F2979 ( attributes ) ? _BOOL : _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public IOUtils $F72 $F5795 ( super ) "}, {"code": "$F5466 public static IgnoreDescriptor forMethod ( Class cls , Method mthd ) { \n\tif ( mthd . isAnnotationPresent ( IgniteIgnore . class ) ) { \n\t\tIgniteIgnore ignore = mthd . getAnnotation ( IgniteIgnore . class ) ; \n\t\tString reason = ignore . value ( ) ; \n\t\tif $F4329 ( F , reason ) throw new IllegalArgumentException ( $F27322 ( cls , mthd ) ) ; \n\t\treturn new IgnoreDescriptor ( reason , ignore . forceFailure ( ) ) ; \n\t\t} \n\telse $F1274 } \n"}, {"code": "protected void runFullImport $F5805 ( dataConfig , extraParams ) throws Exception { \n\t$F274034 ( params ) $F16824 ( params ) $F16824 ( params ) $F545 ( params , dataConfig ) $F16824 ( params ) $F16824 ( params ) params . putAll ( extraParams ) ; \n\tNamedList l = new NamedList $F72 ; \n\tfor ( $F19318 ( e , params ) ) { \n\t\tl . add ( $F15245 ( e ) ) ; \n\t\t} \n\tLocalSolrQueryRequest request = new LocalSolrQueryRequest ( h . getCore ( ) , l ) ; \n\th . query ( NUM00 , request ) ; \n\t} \n"}, {"code": "public static ModifiableDBIDs randomSample ( DBIDs source , int k , Random random ) { \n\tif ( k < NUM00 || k > source . size ( ) ) { \n\t\tthrow new IllegalArgumentException ( $F57676 ( k , source ) ) ; \n\t\t} \n\tif ( random == null ) { \n\t\trandom = new FastNonThreadsafeRandom $F72 ; \n\t\t} \n\tif ( k < source . size ( ) > > NUM00 ) { \n\t\tArrayDBIDs aids = DBIDUtil . ensureArray ( source ) ; \n\t\tDBIDArrayIter iter = aids . iter ( ) ; \n\t\tHashSetModifiableDBIDs sample = DBIDUtil . newHashSet ( k ) ; \n\t\twhile $F10255 ( sample , k ) { \n\t\t\titer . seek ( random . nextInt ( aids . size ( ) ) ) ; \n\t\t\tsample . add ( iter ) ; \n\t\t\t} \n\t\treturn sample ; \n\t\t} \n\telse { \n\t\tArrayModifiableDBIDs sample = DBIDUtil . newArray ( source ) ; \n\t\trandomShuffle ( sample , random , k ) ; \n\t\tfor ( int i = $F2281 ( sample ) ; \n\t\ti >= k ; \n\t\ti -- ) $F106 ( sample , i ) return sample ; \n\t\t} \n\t} \n"}, {"code": "protected int drawMessageSize $F72 { \n\tint sizeDiff = sizeRange [ NUM00 ] == sizeRange [ NUM00 ] ? NUM00 : rng . nextInt ( $F50510 ( sizeRange ) ) ; \n\treturn sizeRange [ NUM00 ] + sizeDiff ; \n\t} \n"}, {"code": "public static $F806 grabArgs ( String signature ) { \n\t$F275 ( matcher , sigRE , signature ) boolean b = matcher . matches ( ) ; \n\tif ( ! b && matcher . groupCount ( ) != NUM00 ) $F5197 ( logger , signature ) $F283 ( args , matcher ) if $F2979 ( args ) return $F382 ; \n\treturn args . split ( NUM00 ) ; \n\t} \n"}, {"code": "$F43277 ( listener , mListeners ) "}, {"code": "public void test_engineCreateSSLEngine_01 $F72 { \n\tSSLContextSpiImpl ssl = new SSLContextSpiImpl $F72 ; \n\ttry { \n\t\tSSLEngine sleng = ssl . engineCreateSSLEngine ( ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F132298 ( str , re , fail ) $F132299 ( fail , e ) } \n"}, {"code": "public void processDispatch ( UniformPair $F324611 events ) { \n\tif ( ! forClauseDelivery ) $F14411 ( dispatchInternal , events ) if ( ( groupDeliveryExpressions == null ) || $F9634 ( groupDeliveryExpressions ) ) { \n\t\tUniformPair $F324611 todeliver = new UniformPair $F324611 $F73801 ; \n\t\tif ( events != null ) { \n\t\t\tif ( events . getFirst ( ) != null ) { \n\t\t\t\tfor ( EventBean theEvent : events . getFirst ( ) ) { \n\t\t\t\t\ttodeliver . setFirst ( new EventBean [ ] { \n\t\t\t\t\t\ttheEvent } \n\t\t\t\t\t) ; \n\t\t\t\t\tdispatchInternal ( todeliver ) ; \n\t\t\t\t\t} \n\t\t\t\ttodeliver . setFirst ( null ) ; \n\t\t\t\t} \n\t\t\tif ( events . getSecond ( ) != null ) { \n\t\t\t\tfor ( EventBean theEvent : events . getSecond ( ) ) { \n\t\t\t\t\ttodeliver . setSecond ( new EventBean [ ] { \n\t\t\t\t\t\ttheEvent } \n\t\t\t\t\t) ; \n\t\t\t\t\tdispatchInternal ( todeliver ) ; \n\t\t\t\t\t} \n\t\t\t\ttodeliver . setSecond ( null ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F665 } \n\tMap < Object , UniformPair $F324611 > groups ; \n\ttry { \n\t\tgroups = getGroupedResults ( events ) ; \n\t\t} \n\tcatch ( RuntimeException ex ) { \n\t\tlog . error ( $F5352 ( ex ) , ex ) ; \n\t\tdispatchInternal ( events ) ; \n\t\t$F665 } \n\tfor ( Map . Entry < Object , UniformPair $F324611 > group : groups . entrySet ( ) ) { \n\t\t$F25313 ( dispatchInternal , group ) } \n\t} \n"}, {"code": "public V put ( K key , V value ) { \n\tfinal int hash ; \n\tint index ; \n\tif ( key == null ) { \n\t\thash = NUM00 ; \n\t\tindex = indexOfNull ( ) ; \n\t\t} \n\telse { \n\t\t$F80728 ( hash , key ) index = indexOf ( key , hash ) ; \n\t\t} \n\tif ( index >= NUM00 ) { \n\t\tindex = $F50054 ( index ) ; \n\t\tfinal V old = ( V ) mArray [ index ] ; \n\t\tmArray [ index ] = value ; \n\t\treturn old ; \n\t\t} \n\tindex = ~ index ; \n\tif ( mSize >= mHashes . length ) { \n\t\tfinal int n = mSize >= ( BASE_SIZE * NUM00 ) ? $F107995 ( mSize ) : ( mSize >= BASE_SIZE ? ( BASE_SIZE * NUM00 ) : BASE_SIZE ) ; \n\t\t$F92861 ( ohashes , mHashes ) $F108000 ( oarray , mArray ) allocArrays ( n ) ; \n\t\tif $F3305 ( mHashes ) { \n\t\t\t$F7057 ( System , ohashes , mHashes ) $F7057 ( System , oarray , mArray ) } \n\t\tfreeArrays ( ohashes , oarray , mSize ) ; \n\t\t} \n\tif ( index < mSize ) { \n\t\t$F27096 ( System , mHashes , index , mSize ) System . arraycopy ( mArray , index < < NUM00 , mArray , $F33569 ( index ) , ( mSize - index ) < < NUM00 ) ; \n\t\t} \n\tmHashes [ index ] = hash ; \n\tmArray [ index < < NUM00 ] = key ; \n\t$F107987 ( mArray , index ) = value ; \n\tmSize ++ ; \n\t$F1274 } \n"}, {"code": "protected void reset $F72 { \n\tArrays . fill ( m_isCandidate , _BOOL ) ; \n\t} \n"}, {"code": "protected void redefine $F103468 ( nodetype , namespace , localName ) { \n\tthis . nodetype = nodetype ; \n\tthis . namespace = namespace ; \n\tthis . localName = localName ; \n\tthis . hash = nodetype + namespace . hashCode ( ) + localName . hashCode ( ) ; \n\t} \n"}, {"code": "public void putLong ( long pos , long val ) { \n\tunsafe . putLong ( pos + addr , val ) ; \n\t} \n"}, {"code": "public void lineTo ( float x , float y ) { \n\tmPoints . add ( PathPoint . lineTo ( x , y ) ) ; \n\t} \n"}, {"code": "public boolean deleteRSetStep ( URI rpSystemId , $F28584 volumeIds , String token ) throws InternalException { \n\t$F10144 ( replicationSetNames ) try { \n\t\tList < RecoverPointVolumeProtectionInfo > volumeProtectionInfoList = new ArrayList < RecoverPointVolumeProtectionInfo > $F72 ; \n\t\tProtectionSystem rpSystem = _dbClient . queryObject ( ProtectionSystem . class , rpSystemId ) ; \n\t\tRecoverPointClient rp = RPHelper . getRecoverPointClient ( rpSystem ) ; \n\t\tfor ( URI volumeId : volumeIds ) { \n\t\t\t$F8544 ( volume , _dbClient , volumeId ) RecoverPointVolumeProtectionInfo volumeProtectionInfo = rp . getProtectionInfoForVolume ( RPHelper . getRPWWn ( volume . getId ( ) , _dbClient ) ) ; \n\t\t\tVolume sourceVolume = RPHelper . getRPSourceVolume ( _dbClient , volume ) ; \n\t\t\tVirtualPool virtualPool = _dbClient . queryObject ( $F81883 , sourceVolume . getVirtualPool ( ) ) ; \n\t\t\tvolumeProtectionInfo . setMetroPoint ( VirtualPool . vPoolSpecifiesMetroPoint ( virtualPool ) ) ; \n\t\t\tvolumeProtectionInfoList . add ( volumeProtectionInfo ) ; \n\t\t\treplicationSetNames . add ( volume . getRSetName ( ) ) ; \n\t\t\t} \n\t\tif $F5973 ( volumeProtectionInfoList ) { \n\t\t\trp . deleteReplicationSets ( volumeProtectionInfoList ) ; \n\t\t\t} \n\t\tWorkflowStepCompleter . stepSucceded ( token ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t_log . error ( $F44379 ( String , replicationSetNames ) ) ; \n\t\treturn stepFailed ( token , e , NUM00 ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void moveToNext $F72 { \n\tcheckMainThread ( ) ; \n\tscheduled . set ( _BOOL ) ; \n\tBitmap next = pending . poll ( ) ; \n\tif ( next != null ) { \n\t\tif ( current != null && ! finished . offer ( current ) ) $F11388 current = next ; \n\t\tinvalidateSelf ( ) ; \n\t\tensureScheduled ( ) ; \n\t\tframeAvailableSubject . onNext ( null ) ; \n\t\t$F92039 ( fpsCounter ) } \n\t} \n"}, {"code": "$F34537 ( listener , changingListeners ) "}, {"code": "public String rma $F83882 ( ctx , WindowNo , mTab , mField , value ) { \n\t$F179073 ( M_RMA_ID , value ) if ( M_RMA_ID == null || $F179074 ( M_RMA_ID ) ) $F1278 if ( isCalloutActive ( ) ) $F1278 MRMA rma = new MRMA ( ctx , M_RMA_ID . intValue ( ) , null ) ; \n\tMInOut originalReceipt = rma . getShipment ( ) ; \n\tif ( rma . get_ID ( ) != NUM00 ) { \n\t\tmTab . setValue ( NUM00 , originalReceipt . getDateOrdered ( ) ) ; \n\t\tmTab . setValue ( NUM00 , originalReceipt . getPOReference ( ) ) ; \n\t\tmTab . setValue ( NUM00 , new Integer ( originalReceipt . getAD_Org_ID ( ) ) ) ; \n\t\tmTab . setValue ( NUM00 , new Integer ( originalReceipt . getAD_OrgTrx_ID ( ) ) ) ; \n\t\tmTab . setValue ( NUM00 , new Integer ( originalReceipt . getC_Activity_ID ( ) ) ) ; \n\t\tmTab . setValue ( NUM00 , new Integer ( originalReceipt . getC_Campaign_ID ( ) ) ) ; \n\t\tmTab . setValue ( NUM00 , new Integer ( originalReceipt . getC_Project_ID ( ) ) ) ; \n\t\tmTab . setValue ( NUM00 , new Integer ( originalReceipt . getUser1_ID ( ) ) ) ; \n\t\tmTab . setValue ( NUM00 , new Integer ( originalReceipt . getUser2_ID ( ) ) ) ; \n\t\tmTab . setValue ( NUM00 , new Integer ( originalReceipt . getM_Warehouse_ID ( ) ) ) ; \n\t\tmTab . setValue ( NUM00 , originalReceipt . getDeliveryRule ( ) ) ; \n\t\tmTab . setValue ( NUM00 , originalReceipt . getDeliveryViaRule ( ) ) ; \n\t\tmTab . setValue ( NUM00 , new Integer ( originalReceipt . getM_Shipper_ID ( ) ) ) ; \n\t\tmTab . setValue ( NUM00 , originalReceipt . getFreightCostRule ( ) ) ; \n\t\tmTab . setValue ( NUM00 , originalReceipt . getFreightAmt ( ) ) ; \n\t\tmTab . setValue ( NUM00 , new Integer ( originalReceipt . getC_BPartner_ID ( ) ) ) ; \n\t\tmTab . setValue ( NUM00 , new Integer ( originalReceipt . getC_BPartner_Location_ID ( ) ) ) ; \n\t\tif ( originalReceipt . getAD_User_ID ( ) > NUM00 ) mTab . setValue ( NUM00 , new Integer ( originalReceipt . getAD_User_ID ( ) ) ) ; \n\t\telse $F179081 ( mTab ) } \n\t$F1278 } \n"}, {"code": "public final long readLong $F72 throws $F3258 { \n\treadFully ( scratch , NUM00 , NUM00 ) ; \n\tint h = $F257717 ( scratch ) | $F257715 ( scratch ) ; \n\tint l = $F257717 ( scratch ) | $F257715 ( scratch ) ; \n\treturn $F81616 ( h ) | ( ( long ) l ) & NUM00 ; \n\t} \n"}, {"code": "public void testGetColumnsMetaData $F72 throws Exception { \n\t$F9236 ( dmd , con ) ResultSet rs = dmd . getColumns ( null , null , NUM00 , null ) ; \n\tassertNotNull ( rs ) ; \n\t$F19097 ( rsmd , rs ) assertNotNull ( rsmd . getCatalogName ( NUM00 ) ) ; \n\tassertNotNull ( rsmd . getColumnClassName ( NUM00 ) ) ; \n\trsmd . getColumnCount ( ) ; \n\tassertTrue ( NUM00 != rsmd . getColumnDisplaySize ( NUM00 ) ) ; \n\tassertNotNull ( rsmd . getColumnLabel ( NUM00 ) ) ; \n\tassertNotNull ( rsmd . getColumnName ( NUM00 ) ) ; \n\trsmd . getColumnType ( NUM00 ) ; \n\tassertNotNull ( rsmd . getColumnTypeName ( NUM00 ) ) ; \n\trsmd . getPrecision ( NUM00 ) ; \n\trsmd . getScale ( NUM00 ) ; \n\tassertNotNull ( rsmd . getSchemaName ( NUM00 ) ) ; \n\tassertNotNull ( rsmd . getTableName ( NUM00 ) ) ; \n\trsmd . isAutoIncrement ( NUM00 ) ; \n\trsmd . isCaseSensitive ( NUM00 ) ; \n\trsmd . isCurrency ( NUM00 ) ; \n\trsmd . isDefinitelyWritable ( NUM00 ) ; \n\trsmd . isNullable ( NUM00 ) ; \n\trsmd . isReadOnly ( NUM00 ) ; \n\trsmd . isSearchable ( NUM00 ) ; \n\trsmd . isSigned ( NUM00 ) ; \n\trsmd . isWritable ( NUM00 ) ; \n\t$F59 ( rs ) } \n"}, {"code": "private Log discoverLogImplementation ( String logCategory ) throws LogConfigurationException { \n\tif ( isDiagnosticsEnabled ( ) ) $F1210 ( logDiagnostic ) initConfiguration ( ) ; \n\tLog result = null ; \n\tString specifiedLogClassName = findUserSpecifiedLogClassName ( ) ; \n\tif ( specifiedLogClassName != null ) { \n\t\tif ( isDiagnosticsEnabled ( ) ) $F47196 ( logDiagnostic , specifiedLogClassName ) result = createLogFromClass ( specifiedLogClassName , logCategory , _BOOL ) ; \n\t\tif ( result == null ) { \n\t\t\t$F8755 ( messageBuffer ) messageBuffer . append ( specifiedLogClassName ) ; \n\t\t\t$F84 ( messageBuffer ) if ( specifiedLogClassName != null ) { \n\t\t\t\tinformUponSimilarName ( messageBuffer , specifiedLogClassName , LOGGING_IMPL_LOG4J_LOGGER ) ; \n\t\t\t\tinformUponSimilarName ( messageBuffer , specifiedLogClassName , LOGGING_IMPL_JDK14_LOGGER ) ; \n\t\t\t\tinformUponSimilarName ( messageBuffer , specifiedLogClassName , LOGGING_IMPL_LUMBERJACK_LOGGER ) ; \n\t\t\t\tinformUponSimilarName ( messageBuffer , specifiedLogClassName , LOGGING_IMPL_SIMPLE_LOGGER ) ; \n\t\t\t\t} \n\t\t\tthrow new LogConfigurationException $F3362 ( messageBuffer ) ; \n\t\t\t} \n\t\treturn result ; \n\t\t} \n\tif ( isDiagnosticsEnabled ( ) ) $F32318 ( logDiagnostic ) for ( int i = NUM00 ; \n\t( i < classesToDiscover . length ) && ( result == null ) ; \n\t++ i ) { \n\t\tresult = createLogFromClass ( classesToDiscover [ i ] , logCategory , _BOOL ) ; \n\t\t} \n\tif ( result == null ) { \n\t\tthrow new LogConfigurationException $F580 ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public NSData ( File file ) throws IOException { \n\tbytes = new byte [ $F5338 ( file ) ] ; \n\t$F18800 ( raf , file ) raf . read ( bytes ) ; \n\t$F59 ( raf ) } \n"}, {"code": "public ViaHeader createViaHeader ( String host , int port , String transport , String branch ) throws ParseException , InvalidArgumentException { \n\tif ( host == null || transport == null ) $F894 Via via = new Via $F72 ; \n\tif ( branch != null ) via . setBranch ( branch ) ; \n\tif ( $F48845 ( host ) && $F1730 ( host ) ) { \n\t\tif ( stripAddressScopeZones ) { \n\t\t\t$F1384 ( zoneStart , host ) if ( zoneStart != - NUM00 ) $F45799 ( host , zoneStart ) } \n\t\thost = NUM00 + host + NUM00 ; \n\t\t} \n\tvia . setHost ( host ) ; \n\tvia . setPort ( port ) ; \n\tvia . setTransport ( transport ) ; \n\treturn via ; \n\t} \n"}, {"code": "public String toString $F72 { \n\treturn $F5528 ( super ) + recordMap . size ( ) + NUM00 + firstOffset + NUM00 + releaseBuffer + NUM00 + prefixWrites + NUM00 + useChecksum + NUM00 + bytesWritten ( ) + NUM00 + remaining ( ) + NUM00 + m_removed + NUM00 ; \n\t} \n"}, {"code": "$F9159 ( logDebug , mSetupDone , _BOOL , mServiceConn , mContext , mDisposed , mService , mPurchaseListener ) "}, {"code": "public int find ( String string ) { \n\t$F14469 ( string ) for ( int i = NUM00 ; \n\ti != m_stringOffsets . length ; \n\t++ i ) { \n\t\tint offset = m_stringOffsets [ i ] ; \n\t\tint length = getShort ( m_strings , offset ) ; \n\t\tif ( length != string . length ( ) ) $F1448 int j = NUM00 ; \n\t\tfor ( ; \n\t\tj != length ; \n\t\t++ j ) { \n\t\t\toffset += NUM00 ; \n\t\t\tif ( string . charAt ( j ) != getShort ( m_strings , offset ) ) $F5153 } \n\t\t$F3627 ( j , length , i ) } \n\t$F150 } \n"}, {"code": "private void handleJsonCreateAccount ( RequestAndResponse requestAndResponse ) throws $F47978 { \n\trequestAndResponse . setResponseContentTypeJson ( ) ; \n\tString userName , password , password2 , email ; \n\tboolean mayContact = _BOOL ; \n\tString csrft ; \n\ttry { \n\t\tfinal JsonNodeHelper json = getJsonNode ( requestAndResponse ) ; \n\t\t$F35515 ( userName , json ) $F35515 ( password , json ) $F35515 ( password2 , json ) $F35515 ( email , json ) mayContact = json . getBoolean ( NUM00 ) ; \n\t\t$F35515 ( csrft , json ) } \n\tcatch ( final IOException e ) { \n\t\treturnJson400 ( requestAndResponse , servletText . errorJson ( ) ) ; \n\t\t$F665 } \n\tif ( userName != null ) { \n\t\t$F37156 ( userName ) } \n\tif ( isTheCsrftWrong ( requestAndResponse , csrft ) ) { \n\t\treturnJson400 ( requestAndResponse , servletText . errorWrongCsrft ( ) ) ; \n\t\t$F665 } \n\tif ( ! allowSelfSignUp ) { \n\t\treturnJson400 ( requestAndResponse , servletText . errorSelfSignUpNotAllowed ( ) ) ; \n\t\t$F665 } \n\tif $F4251 ( userName ) { \n\t\treturnJson400 ( requestAndResponse , servletText . errorUsernameMustNotBeBlank ( ) ) ; \n\t\t$F665 } \n\tif $F4251 ( password ) { \n\t\treturnJson400 ( requestAndResponse , servletText . errorFirstPasswordMustBeSet ( _BOOL , null ) ) ; \n\t\t$F665 } \n\tif ( password == null || password2 . isEmpty ( ) ) { \n\t\treturnJson400 ( requestAndResponse , servletText . errorSecondPasswordMustBeSet ( _BOOL , null ) ) ; \n\t\t$F665 } \n\tif $F2137 ( password2 , password ) { \n\t\treturnJson400 ( requestAndResponse , servletText . errorPasswordsMustMatch ( ) ) ; \n\t\t$F665 } \n\tif ( ! AccountAttributeValidator . isUserNameValid ( userName ) ) { \n\t\treturnJson400 ( requestAndResponse , servletText . errorUserNameIsNotValid ( ) ) ; \n\t\t$F665 } \n\tif ( ! AccountAttributeValidator . isPasswordValid ( password ) ) { \n\t\treturnJson400 ( requestAndResponse , servletText . errorPasswordIsNotValid ( ) ) ; \n\t\t$F665 } \n\tif $F171402 ( email ) { \n\t\temail = null ; \n\t\t} \n\tif ( email != null && ! AccountAttributeValidator . isEmailValid ( email ) ) { \n\t\treturnJson400 ( requestAndResponse , servletText . errorEmailIsNotValid ( ) ) ; \n\t\t$F665 } \n\ttry { \n\t\tUser user = dbLogic . getUserByUserName ( userName ) ; \n\t\tif ( user != null ) { \n\t\t\treturnJson400 ( requestAndResponse , servletText . errorUserNameIsAlreadyTaken ( ) ) ; \n\t\t\t$F665 } \n\t\tuser = dbLogic . createUser ( userName ) ; \n\t\tif ( user == null ) { \n\t\t\treturnJson400 ( requestAndResponse , servletText . errorCouldNotCreateAccount ( ) ) ; \n\t\t\t$F665 } \n\t\tuser . setPassword ( DigestUtils . sha1Hex ( password ) ) ; \n\t\tuser . setEmail ( email ) ; \n\t\tuser . setMayContact ( mayContact ) ; \n\t\tmapSessionToUser ( requestAndResponse , user . getId ( ) ) ; \n\t\t$F17621 ( dbLogic ) returnJson200 ( requestAndResponse ) ; \n\t\t} \n\tcatch ( final PersistenceException e ) { \n\t\tlogger . log ( Level . INFO , NUM00 , e ) ; \n\t\treturnJson500 ( requestAndResponse , servletText . errorInternalDatabase ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "private $F131 resolveParameters ( Executable executable , Optional $F1432 target , Object outerInstance , ExtensionContext extensionContext , ExtensionRegistry extensionRegistry ) { \n\t$F18062 ( Preconditions , target ) Parameter [ ] parameters = executable . getParameters ( ) ; \n\t$F193824 ( values , parameters ) int start = NUM00 ; \n\tif ( outerInstance != null ) { \n\t\tvalues [ NUM00 ] = outerInstance ; \n\t\tstart = NUM00 ; \n\t\t} \n\tfor ( $F9958 ( i , start , parameters ) ) { \n\t\tParameterContext parameterContext = new DefaultParameterContext ( parameters [ i ] , i , target ) ; \n\t\tvalues [ i ] = resolveParameter ( parameterContext , executable , extensionContext , extensionRegistry ) ; \n\t\t} \n\treturn values ; \n\t} \n"}, {"code": "public static boolean isValidNameChar ( char c ) { \n\treturn isValidNameStartChar ( c ) || $F19295 ( c ) ; \n\t} \n"}, {"code": "public void supportTlsIntolerantServer ( SSLSocket socket ) { \n\tsocket . setEnabledProtocols ( $F21904 ) ; \n\t} \n"}, {"code": "protected static boolean id_start_char ( int ch ) { \n\treturn $F19295 ( ch ) || $F19295 ( ch ) || ( ch == NUM00 ) ; \n\t} \n"}, {"code": "public int hashCode $F72 { \n\tint fhash = ( family != null ) ? family . hashCode ( ) : NUM00 ; \n\treturn fhash ^ style ^ size ; \n\t} \n"}, {"code": "private CommandHandlerEnum ( final Command command1 ) { \n\tthis . command = command1 ; \n\t} \n"}, {"code": "public static boolean isFloat ( String desc ) $F74727 ( desc ) "}, {"code": "public void componentResized ( ComponentEvent e ) { \n\tJScrollBar bar = getVerticalScrollBar ( ) ; \n\tint incr = ( int ) ( getSize ( ) . getHeight ( ) - ( bar . getUnitIncrement ( NUM00 ) * NUM00 ) ) ; \n\tgetVerticalScrollBar ( ) . setBlockIncrement ( incr ) ; \n\t} \n"}, {"code": "public Arg $F118231 ( aName , desc , expectedNumberOfArguments , expectDashedArguments ) { \n\tname = aName ; \n\tdescription = desc ; \n\tnumExpectedValues = expectedNumberOfArguments ; \n\t$F7783 ( c , name ) dashedArguments = expectDashedArguments ; \n\t} \n"}, {"code": "private boolean remove ( Object o , $F131 snapshot , int index ) { \n\t$F677 ( lock , this ) $F790 ( lock ) try { \n\t\t$F8867 ( current , getArray ) int len = current . length ; \n\t\tif ( snapshot != current ) findIndex : { \n\t\t\t$F17565 ( prefix , Math , index , len ) for ( $F119 ( i , prefix ) ) { \n\t\t\t\tif ( current [ i ] != snapshot [ i ] && eq ( o , current [ i ] ) ) { \n\t\t\t\t\tindex = i ; \n\t\t\t\t\tbreak findIndex ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( index >= len ) return _BOOL ; \n\t\t\tif ( current [ index ] == o ) break findIndex ; \n\t\t\tindex = indexOf ( o , current , index , len ) ; \n\t\t\t$F12655 ( index , _BOOL ) } \n\t\t$F131 newElements = new Object [ len - NUM00 ] ; \n\t\t$F135 ( System , current , newElements , index ) System . arraycopy ( current , index + NUM00 , newElements , index , len - index - NUM00 ) ; \n\t\tsetArray ( newElements ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t$F796 ( lock ) } \n"}, {"code": "public void removeModel ( Model model ) $F106 ( models , model ) "}, {"code": "public void readMap ( int map_Number ) { \n\tInputStream map_file ; \n\ttry { \n\t\tmap_file = new FileInputStream ( NUM00 + map_Number + NUM00 ) ; \n\t\ttry { \n\t\t\t$F143466 ( data , map_file ) map_file . read ( data ) ; \n\t\t\t$F59 ( map_file ) String $F116025 ( load_data , data ) ; \n\t\t\tmakeMap ( load_data ) ; \n\t\t\t} \n\t\t$F12241 ( e ) } \n\t$F35546 ( e1 ) } \n"}, {"code": "public static double hoeffdingLn $F7635 ( trials , observed , prob ) { \n\treturn - NUM00 * Math . pow ( trials * prob - observed , NUM00 ) / trials ; \n\t} \n"}, {"code": "$F73303 ( axis , trans , prevImageSize , imageSize , prevViewSize , viewSize , drawableSize , m , Matrix , percentage , Math ) "}, {"code": "public void run $F72 { \n\tRandomAccessFile reader = null ; \n\ttry { \n\t\tlong last = NUM00 ; \n\t\tlong position = NUM00 ; \n\t\twhile ( run && reader == null ) { \n\t\t\ttry { \n\t\t\t\treader = new RandomAccessFile ( file , RAF_MODE ) ; \n\t\t\t\t} \n\t\t\tcatch ( FileNotFoundException e ) { \n\t\t\t\tlistener . fileNotFound ( ) ; \n\t\t\t\t} \n\t\t\tif ( reader == null ) $F7597 ( Thread , delayMillis ) else { \n\t\t\t\tposition = end ? file . length ( ) : NUM00 ; \n\t\t\t\t$F3224 ( last , System ) reader . seek ( position ) ; \n\t\t\t\t} \n\t\t\t} \n\t\twhile ( run ) { \n\t\t\tboolean newer = FileUtils . isFileNewer ( file , last ) ; \n\t\t\t$F14662 ( length , file ) if ( length < position ) { \n\t\t\t\tlistener . fileRotated ( ) ; \n\t\t\t\ttry { \n\t\t\t\t\tRandomAccessFile save = reader ; \n\t\t\t\t\treader = new RandomAccessFile ( file , RAF_MODE ) ; \n\t\t\t\t\tposition = NUM00 ; \n\t\t\t\t\tIOUtils . closeQuietly ( save ) ; \n\t\t\t\t\t} \n\t\t\t\tcatch ( FileNotFoundException e ) { \n\t\t\t\t\tlistener . fileNotFound ( ) ; \n\t\t\t\t\t} \n\t\t\t\t$F598 } \n\t\t\telse { \n\t\t\t\tif ( length > position ) { \n\t\t\t\t\tposition = readLines ( reader ) ; \n\t\t\t\t\t$F3224 ( last , System ) } \n\t\t\t\telse if ( newer ) { \n\t\t\t\t\tposition = NUM00 ; \n\t\t\t\t\treader . seek ( position ) ; \n\t\t\t\t\tposition = readLines ( reader ) ; \n\t\t\t\t\t$F3224 ( last , System ) } \n\t\t\t\t} \n\t\t\tif ( reOpen ) { \n\t\t\t\tIOUtils . closeQuietly ( reader ) ; \n\t\t\t\t} \n\t\t\ttry $F7595 ( Thread , delayMillis ) $F887 if ( run && reOpen ) { \n\t\t\t\treader = new RandomAccessFile ( file , RAF_MODE ) ; \n\t\t\t\treader . seek ( position ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) { \n\t\tlistener . handle ( e ) ; \n\t\t} \n\t$F18090 ( IOUtils , reader ) } \n"}, {"code": "$F1 public void onNestedPreScroll ( View target , int dx , int dy , $F2027 consumed ) { \n\tif ( ( ! mPullRefreshEnable && ! mPullLoadEnable ) ) $F932 if $F33322 ( Math , dy ) $F932 if ( ! isConfirm ) { \n\t\tif ( dy < NUM00 && ! canChildScrollUp ( ) ) { \n\t\t\tmCurrentAction = PULL_REFRESH ; \n\t\t\tisConfirm = _BOOL ; \n\t\t\t} \n\t\telse if ( dy > NUM00 && ! canChildScrollDown ( ) ) { \n\t\t\tmCurrentAction = LOAD_MORE ; \n\t\t\tisConfirm = _BOOL ; \n\t\t\t} \n\t\t} \n\tif ( moveSpinner ( - dy ) ) { \n\t\tconsumed [ NUM00 ] += dy ; \n\t\t} \n\t} \n"}, {"code": "public void testLocalInstances_deterministic $F72 { \n\t$F2268 ( MatsimRandom ) Random local1a = MatsimRandom . getLocalInstance ( ) ; \n\tRandom local1b = MatsimRandom . getLocalInstance ( ) ; \n\t$F2268 ( MatsimRandom ) Random local2a = MatsimRandom . getLocalInstance ( ) ; \n\tRandom local2b = MatsimRandom . getLocalInstance ( ) ; \n\tassertEqualRandomNumberGenerators ( local1a , local2a ) ; \n\tassertEqualRandomNumberGenerators ( local1b , local2b ) ; \n\t} \n"}, {"code": "public void add ( Match match , AppliedRegion appliedRegion ) { \n\tadd ( match , appliedRegion , _BOOL ) ; \n\t} \n"}, {"code": "public void reset $F72 { \n\ttechTree . checkSubTree ( techTree . getPathForRow ( NUM00 ) , _BOOL ) ; \n\t} \n"}, {"code": "$F1431 private static $F4203 void assertThrows ( final Consumer $F8317 consumer , $F98259 ( exceptionClass ) , final $F39462 assertExceptionProperties , final String message ) { \n\tfinal String normalizedMessage = null == message ? NUM00 : String . format ( NUM00 , message ) ; \n\ttry { \n\t\tconsumer . accept ( null ) ; \n\t\t} \n\tcatch ( final Exception ex ) { \n\t\tif $F178804 ( exceptionClass , ex ) { \n\t\t\tassertExceptionProperties . accept ( ( T ) ex ) ; \n\t\t\t$F665 } \n\t\tAssert . fail ( String . format ( NUM00 , normalizedMessage , ex . getClass ( ) , ex . getMessage ( ) ) ) ; \n\t\t} \n\tAssert . fail ( String . format ( NUM00 , normalizedMessage , exceptionClass ) ) ; \n\t} \n"}, {"code": "public boolean isEmpty $F72 { \n\treturn $F38237 ( nodes , ways , relations ) ; \n\t} \n"}, {"code": "public static void assertBool ( boolean b ) { \n\tif ( verbose ) $F47196 ( log , b ) if ( ! b ) $F65782 } \n"}, {"code": "$F13429 ( criteria , createCriteriaInternal , oredCriteria ) "}, {"code": "public TagKeyValueMapConverter ( boolean nullIfEmpty , String idKey ) { \n\tObjects . requireNonNull ( idKey ) ; \n\tthis . nullIfEmpty = nullIfEmpty ; \n\tthis . addId = _BOOL ; \n\tthis . idKey = idKey ; \n\t} \n"}, {"code": "private static void postInit $F72 { \n\tdebugAll = dbgTable . containsKey ( debugAllToken ) ; \n\t} \n"}, {"code": "$F11730 ( logPrefix , request , exception , retryPolicy , oldTimeout , String , e ) "}, {"code": "public static $F11300 sortInBatch ( File file , Comparator $F4 cmp ) throws IOException $F19580 ( sortInBatch , file , cmp , DEFAULTMAXTEMPFILES ) "}, {"code": "public void addDirectorySet ( Context context , String path ) { \n\tTinyDB tinydb = new TinyDB ( context ) ; \n\t$F5 file = tinydb . getListString ( NUM00 ) ; \n\tfile . add ( path ) ; \n\ttinydb . putListString ( NUM00 , file ) ; \n\t} \n"}, {"code": "private FastConcurrentSkipListMap . Node $F9340 hiNode $F72 { \n\tif ( hi == null ) return m . findLast ( ) ; \n\telse if ( hiInclusive ) return m . findNear ( hi , m . LT | m . EQ ) ; \n\telse return m . findNear ( hi , m . LT ) ; \n\t} \n"}, {"code": "protected void processEventProperties ( Properties eventProps ) { \n\tint status ; \n\tNode node ; \n\tLine line ; \n\t$F7601 ( cmd , eventProps , COMMAND_FIELD ) int index = PropUtils . intFromProperties ( eventProps , INDEX_FIELD , ERROR_VALUE_INT ) ; \n\tif $F1238 ( cmd , NODE_OBJECT ) { \n\t\tint shape = PropUtils . intFromProperties ( eventProps , SHAPE_FIELD , ERROR_VALUE_INT ) ; \n\t\tif ( index == ERROR_VALUE_INT ) $F9465 ( Debug ) node = nodeList . get ( index ) ; \n\t\tif ( shape == NUM00 ) { \n\t\t\t$F7601 ( icon , eventProps , ICON_FIELD ) if ( DEBUG ) $F32925 ( Debug , icon ) } \n\t\tif ( shape == NODE_DELETE ) { \n\t\t\tif ( node != null ) { \n\t\t\t\tlineList . del ( node ) ; \n\t\t\t\tnodeList . del ( node ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( shape == NODE_MOVE && node != null ) { \n\t\t\tsetNodePositionFromEventProps ( node , eventProps ) ; \n\t\t\tlineList . move ( node ) ; \n\t\t\tnode . setTime ( Double . parseDouble ( eventProps . getProperty ( TIME_FIELD , NUM00 ) ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tstatus = PropUtils . intFromProperties ( eventProps , STATUS_FIELD , NUM00 ) ; \n\t\t\tint menu = PropUtils . intFromProperties ( eventProps , MENU_FIELD , NUM00 ) ; \n\t\t\t$F7601 ( label , eventProps , LABEL_FIELD ) if ( label == null ) $F10616 ( label , eventProps , INDEX_FIELD ) $F7601 ( ip , eventProps , IP_FIELD ) boolean isLocalhost = _BOOL ; \n\t\t\tif ( ip != null && localhostIP != null ) { \n\t\t\t\tisLocalhost = localhostIP . equals ( ip ) ; \n\t\t\t\t$F45900 ( DEBUG , Debug , localhostIP ) } \n\t\t\tif ( DEBUG ) { \n\t\t\t\t$F151102 ( Debug , label ) } \n\t\t\ttry { \n\t\t\t\tif ( shape != ERROR_VALUE_INT ) { \n\t\t\t\t\tnode = nodeList . add ( label , index , shape , menu , status ) ; \n\t\t\t\t\tnode . setLocalhost ( isLocalhost ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tcatch ( Exception e ) $F21338 ( Debug ) setNodePositionFromEventProps ( node , eventProps ) ; \n\t\t\t} \n\t\t} \n\telse if $F1238 ( cmd , NODE_OBJECT_STATUS ) { \n\t\tif ( index == ERROR_VALUE_INT ) $F9465 ( Debug ) node = nodeList . get ( index ) ; \n\t\tif ( node != null ) { \n\t\t\tstatus = PropUtils . intFromProperties ( eventProps , STATUS_FIELD , ERROR_VALUE_INT ) ; \n\t\t\tif ( status != ERROR_VALUE_INT ) { \n\t\t\t\tnode . setStatus ( status ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse if $F1238 ( cmd , LINK_OBJECT_STATUS ) { \n\t\tif ( index == ERROR_VALUE_INT ) $F9465 ( Debug ) line = lineList . get ( index ) ; \n\t\tif ( line != null ) { \n\t\t\tstatus = PropUtils . intFromProperties ( eventProps , STATUS_FIELD , ERROR_VALUE_INT ) ; \n\t\t\tif ( status != ERROR_VALUE_INT ) { \n\t\t\t\tline . setStatus ( status ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse if $F1238 ( cmd , LINK_OBJECT ) { \n\t\tif ( index == ERROR_VALUE_INT ) $F9465 ( Debug ) line = lineList . get ( index ) ; \n\t\tint shape = PropUtils . intFromProperties ( eventProps , SHAPE_FIELD , ERROR_VALUE_INT ) ; \n\t\tif ( shape == NODE_DELETE ) { \n\t\t\tlineList . del ( index ) ; \n\t\t\t} \n\t\telse { \n\t\t\tstatus = PropUtils . intFromProperties ( eventProps , STATUS_FIELD , NUM00 ) ; \n\t\t\tint node1 = PropUtils . intFromProperties ( eventProps , LINK_NODE1_FIELD , ERROR_VALUE_INT ) ; \n\t\t\tint node2 = PropUtils . intFromProperties ( eventProps , LINK_NODE2_FIELD , ERROR_VALUE_INT ) ; \n\t\t\tif ( node1 == ERROR_VALUE_INT || node2 == ERROR_VALUE_INT ) $F9465 ( Debug ) $F22142 ( n1 , nodeList , node1 ) $F22142 ( n2 , nodeList , node2 ) if ( n1 != null && n2 != null ) { \n\t\t\t\tlineList . add ( String . valueOf ( index ) , index , shape , status , n1 , n2 ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F18537 ( DEBUG , Debug ) } \n\t\t\t} \n\t\t} \n\telse if $F22081 ( cmd , REFRESH , UPDATE ) $F845 else if $F1238 ( cmd , CLEAR ) { \n\t\t$F165012 ( nodeList ) $F165012 ( lineList ) } \n\telse { \n\t\tif ( DEBUG ) { \n\t\t\tDebug . output ( $F368 ( eventProps ) ) ; \n\t\t\t} \n\t\t} \n\tmanageGraphics ( ) ; \n\t} \n"}, {"code": "protected static void addIdRepoAMSDKPlugin ( SSOToken token , String orgName ) throws $F16995 { \n\tServiceConfigManager scm = new ServiceConfigManager ( ServiceManager . REALM_SERVICE , token ) ; \n\t$F105641 ( sc , scm , orgName ) $F28017 ( attributes ) $F19850 ( values ) $F18793 ( values ) $F545 ( attributes , values ) $F266988 ( values ) values . add ( DNMapper . realmNameToAMSDKName ( DNMapper . orgNameToDN ( orgName ) ) ) ; \n\t$F545 ( attributes , values ) sc . addSubConfig ( NUM00 , NUM00 , NUM00 , attributes ) ; \n\t} \n"}, {"code": "$F202347 ( mRootDirectory , VolleyLog , files , file , fis , entry , CacheHeader , putEntry ) "}, {"code": "public static String onKeyPress ( String key ) { \n\tpin = pin . concat ( key ) ; \n\treturn pin ; \n\t} \n"}, {"code": "public boolean isHierachic ( String string ) { \n\t$F12747 ( index , string , m_Seperator ) if ( ( index == $F45793 ( string ) ) || ( index == - NUM00 ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public Shape paintLayer ( Graphics g , int offs0 , int offs1 , Shape bounds , JTextComponent c , View view ) { \n\tColor base = getColor ( ) ; \n\tColor color = base != null ? new Color ( base . getRed ( ) , base . getGreen ( ) , base . getBlue ( ) , NUM00 ) : null ; \n\tif ( color == null ) { \n\t\tg . setColor ( c . getSelectionColor ( ) ) ; \n\t\t} \n\telse $F158293 ( g , color ) if ( offs0 == view . getStartOffset ( ) && offs1 == view . getEndOffset ( ) ) { \n\t\tRectangle alloc ; \n\t\tif ( bounds instanceof Rectangle ) { \n\t\t\talloc = ( Rectangle ) bounds ; \n\t\t\t} \n\t\telse { \n\t\t\talloc = bounds . getBounds ( ) ; \n\t\t\t} \n\t\tg . fillRect ( alloc . x , alloc . y , c . getWidth ( ) - alloc . x , alloc . height ) ; \n\t\t} \n\telse { \n\t\ttry { \n\t\t\tShape shape = view . modelToView ( offs0 , Position . Bias . Forward , offs1 , Position . Bias . Backward , bounds ) ; \n\t\t\tRectangle r = ( shape instanceof Rectangle ) ? ( Rectangle ) shape : shape . getBounds ( ) ; \n\t\t\tg . fillRect ( NUM00 , r . y , c . getWidth ( ) , r . height ) ; \n\t\t\treturn r ; \n\t\t\t} \n\t\t$F258112 } \n\t$F1274 } \n"}, {"code": "synchronized void receive ( char oneChar ) throws IOException { \n\t$F31068 ( buffer ) $F187220 ( lastReader ) $F72351 ( lastWriter , Thread ) try { \n\t\twhile ( buffer != null && out == in ) { \n\t\t\tnotifyAll ( ) ; \n\t\t\twait ( NUM00 ) ; \n\t\t\t$F187220 ( lastReader ) } \n\t\t} \n\tcatch ( InterruptedException e ) { \n\t\tthrow new InterruptedIOException $F72 ; \n\t\t} \n\t$F31068 ( buffer ) $F166242 ( in ) buffer [ in ++ ] = oneChar ; \n\t$F15430 ( in , buffer ) } \n"}, {"code": "public static final ByteBuffer bufferToByteBuffer ( final $F96 buffer , final ByteOrder order ) { \n\t$F17615 ( retBuff , ByteBuffer , buffer ) retBuff . order ( order ) ; \n\treturn retBuff ; \n\t} \n"}, {"code": "$F49924 ( out , b , buffer ) "}, {"code": "private URI processLocalFiles ( URI uri ) { \n\t$F1822 ( uriStr , uri ) if $F3106 ( uriStr ) { \n\t\turiStr = NUM00 + System . getProperty ( NUM00 ) + NUM00 + uriStr . substring ( NUM00 ) ; \n\t\tURL url ; \n\t\ttry { \n\t\t\t$F105456 ( url , uriStr ) return url . toURI ( ) ; \n\t\t\t} \n\t\t$F1516 ( e ) } \n\treturn uri ; \n\t} \n"}, {"code": "private String generateScreenOnOrOffUtternace ( int feedbackIndex ) { \n\tint resourceId = ( feedbackIndex == INDEX_SCREEN_ON ) ? R . string . template_screen_on : R . string . template_screen_off ; \n\t$F19101 ( template , mContext , resourceId ) int currentRingerVolume = mAudioManager . getStreamVolume ( AudioManager . STREAM_RING ) ; \n\tint maxRingerVolume = mAudioManager . getStreamMaxVolume ( AudioManager . STREAM_RING ) ; \n\tint volumePercent = ( NUM00 / maxRingerVolume ) * currentRingerVolume ; \n\tint adjustment = volumePercent % NUM00 ; \n\tif ( adjustment < NUM00 ) { \n\t\tvolumePercent -= adjustment ; \n\t\t} \n\telse if ( adjustment > NUM00 ) { \n\t\tvolumePercent += ( NUM00 - adjustment ) ; \n\t\t} \n\t$F27028 ( String , template , volumePercent ) } \n"}, {"code": "$F30789 ( d , imageView , getImageView , viewWidth , viewHeight , drawableWidth , drawableHeight , mBaseMatrix , widthScale , heightScale , mScaleType , ScaleType , scale , Math , mTempSrc , mTempDst , FIT_CENTER , ScaleToFit , FIT_START , FIT_END , FIT_XY , resetMatrix ) "}, {"code": "public void reset $F72 { \n\tcount = NUM00 ; \n\t$F3224 ( startTime , System ) } \n"}, {"code": "public int readInt $F72 throws IOException { \n\tlength += NUM00 ; \n\t$F7468 ( k1 , in ) if ( k1 < NUM00 ) $F1082 int k2 = in . read ( ) < < NUM00 ; \n\tint k3 = in . read ( ) < < NUM00 ; \n\treturn k1 + k2 + k3 + $F82091 ( in ) ; \n\t} \n"}, {"code": "$F163365 ( doc , elementList , nameNode , child , childData , load , _BOOL , assertEquals ) "}, {"code": "public Enumeration listOptions $F72 { \n\t$F153203 ( newVector ) $F1000 ( newVector ) $F1000 ( newVector ) $F1007 ( newVector ) } \n"}, {"code": "public void testAddIssuerLjavax_security_auth_x500_X500Principal02 $F72 { \n\t$F40920 ( selector ) $F221540 ( iss1 ) $F221540 ( iss2 ) CRL crl1 = new TestCRL ( iss1 ) ; \n\tCRL crl2 = new TestCRL ( iss2 ) ; \n\tselector . addIssuer ( iss1 ) ; \n\t$F97594 ( assertTrue , selector , crl1 ) $F97594 ( assertFalse , selector , crl2 ) selector . addIssuer ( iss2 ) ; \n\t$F97594 ( assertTrue , selector , crl2 ) } \n"}, {"code": "public void addTransformation ( TagTransformation tagTransformation ) { \n\tif ( tagTransformation != null ) { \n\t\tmappings . put ( tagTransformation . getSourceTag ( ) , tagTransformation ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public boolean isFileModified ( long fileTimeStamp , long endOffset ) { \n\tboolean isFileModified = _BOOL ; \n\tif ( getLastModifiedTime ( ) > fileTimeStamp || getSize ( ) > endOffset ) { \n\t\tisFileModified = _BOOL ; \n\t\t} \n\treturn isFileModified ; \n\t} \n"}, {"code": "public String nextString $F72 { \n\tnextClean ( NUM00 ) ; \n\t$F83 ( sb ) for ( $F589 ) { \n\t\tchar c = next ( ) ; \n\t\tswitch ( c ) { \n\t\t\t$F3366 $F1262 $F1262 throw syntaxError ( NUM00 ) ; \n\t\t\t$F1262 c = next ( ) ; \n\t\t\tswitch ( c ) { \n\t\t\t\t$F2999 ( sb ) $F2999 ( sb ) $F2999 ( sb ) $F2999 ( sb ) $F2999 ( sb ) $F1262 sb . append ( ( char ) Integer . parseInt ( next ( NUM00 ) , NUM00 ) ) ; \n\t\t\t\t$F597 $F38142 ( sb , c ) } \n\t\t\t$F597 $F1262 $F92 ( sb ) $F1267 if ( c < NUM00 ) { \n\t\t\t\tthrow syntaxError ( NUM00 + $F1047 ( c ) + NUM00 ) ; \n\t\t\t\t} \n\t\t\tsb . append ( c ) ; \n\t\t\t$F597 } \n\t\t} \n\t} \n"}, {"code": "private void readLyrics3Tag ( File file , RandomAccessFile newFile , int loadOptions ) throws IOException $F845 "}, {"code": "public double evaluate ( VectorInstance x , VectorInstance y ) throws Exception { \n\tdouble dotProd = x . dotProduct ( y ) ; \n\treturn Math . pow ( m_gamma * dotProd + m_coef0 , m_degree ) ; \n\t} \n"}, {"code": "private boolean isDbConfigurationPresent $F72 { \n\treturn StringUtils . isNotBlank ( selectColumn ) && StringUtils . isNotBlank ( tableName ) ; \n\t} \n"}, {"code": "public boolean isIncompleteNumericalRun ( String pin ) { \n\t$F22998 ( len , pin ) int consecutive = NUM00 ; \n\t$F12685 ( last , pin ) for ( $F119 ( i , len ) ) { \n\t\t$F1090 ( c , pin , i ) if ( last == c ) { \n\t\t\tconsecutive ++ ; \n\t\t\t} \n\t\telse { \n\t\t\tconsecutive = NUM00 ; \n\t\t\t} \n\t\tlast = c ; \n\t\t$F324226 ( consecutive , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "private static void generateJavaScriptLogAlertCloseWindow ( Writer writer , String message ) throws IOException { \n\t$F64181 ( writer , message ) $F3410 ( writer ) $F3410 ( writer ) } \n"}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "public Tree $F4 extractBestMaxRuleParse1 ( int start , int end , int state , $F3803 sentence ) { \n\tint cState = maxcChild [ start ] [ end ] [ state ] ; \n\tif ( cState == - NUM00 ) $F33971 ( extractBestMaxRuleParse2 , start , end , state , sentence ) else { \n\t\t$F5081 child = new ArrayList < Tree $F4 > $F72 ; \n\t\t$F108108 ( child , extractBestMaxRuleParse2 , start , end , cState , sentence ) String stateStr = $F595865 ( tagNumberer , state ) ; \n\t\t$F212530 ( stateStr ) int intermediateNode = grammar . getUnaryIntermediate ( ( short ) state , ( short ) cState ) ; \n\t\tif ( intermediateNode == NUM00 ) $F845 if ( intermediateNode > NUM00 ) { \n\t\t\t$F5081 restoredChild = new ArrayList < Tree $F4 > $F72 ; \n\t\t\tString stateStr2 = $F595865 ( tagNumberer , intermediateNode ) ; \n\t\t\t$F212530 ( stateStr2 ) restoredChild . add ( $F605438 ( stateStr2 , child ) ) ; \n\t\t\treturn $F605438 ( stateStr , restoredChild ) ; \n\t\t\t} \n\t\treturn $F605438 ( stateStr , child ) ; \n\t\t} \n\t} \n"}, {"code": "protected void parseDOMAttributes ( Element element ) throws SAML2Exception { \n\tsuper . parseDOMAttributes ( element ) ; \n\t} \n"}, {"code": "private static double distance $F12359 ( x1 , y1 , x2 , y2 ) { \n\treturn $F127640 ( Math , y2 , y1 , x2 , x1 ) ; \n\t} \n"}, {"code": "protected void drawCenterText ( Canvas c ) { \n\tSpannableString centerText = mChart . getCenterText ( ) ; \n\tif ( mChart . isDrawCenterTextEnabled ( ) && centerText != null ) { \n\t\tPointF center = mChart . getCenterCircleBox ( ) ; \n\t\tfloat innerRadius = mChart . isDrawHoleEnabled ( ) && mChart . isHoleTransparent ( ) ? mChart . getRadius ( ) * ( mChart . getHoleRadius ( ) / NUM00 ) : mChart . getRadius ( ) ; \n\t\tRectF holeRect = mRectBuffer [ NUM00 ] ; \n\t\tholeRect . left = center . x - innerRadius ; \n\t\tholeRect . top = center . y - innerRadius ; \n\t\tholeRect . right = center . x + innerRadius ; \n\t\tholeRect . bottom = center . y + innerRadius ; \n\t\tRectF boundingRect = mRectBuffer [ NUM00 ] ; \n\t\tboundingRect . set ( holeRect ) ; \n\t\tfloat radiusPercent = mChart . getCenterTextRadiusPercent ( ) ; \n\t\tif ( radiusPercent > NUM00 ) { \n\t\t\tboundingRect . inset ( ( boundingRect . width ( ) - boundingRect . width ( ) * radiusPercent ) / NUM00 , ( boundingRect . height ( ) - boundingRect . height ( ) * radiusPercent ) / NUM00 ) ; \n\t\t\t} \n\t\tif ( ! centerText . equals ( mCenterTextLastValue ) || ! boundingRect . equals ( mCenterTextLastBounds ) ) { \n\t\t\tmCenterTextLastBounds . set ( boundingRect ) ; \n\t\t\tmCenterTextLastValue = centerText ; \n\t\t\tfloat width = mCenterTextLastBounds . width ( ) ; \n\t\t\tmCenterTextLayout = new StaticLayout ( centerText , NUM00 , centerText . length ( ) , mCenterTextPaint , ( int ) Math . max ( Math . ceil ( width ) , NUM00 ) , Layout . Alignment . ALIGN_CENTER , NUM00 , NUM00 , _BOOL ) ; \n\t\t\t} \n\t\tfloat layoutHeight = mCenterTextLayout . getHeight ( ) ; \n\t\t$F72208 ( c ) c . translate ( boundingRect . left , boundingRect . top + ( boundingRect . height ( ) - layoutHeight ) / NUM00 ) ; \n\t\tmCenterTextLayout . draw ( c ) ; \n\t\t$F72213 ( c ) } \n\t} \n"}, {"code": "public void start ( int conditions ) throws IOException { \n\tprint ( NUM00 , new String [ ] { \n\t\tInteger . toBinaryString ( conditions ) } \n\t) ; \n\t$F1206 ( printer ) } \n"}, {"code": "$F167254 ( value , places , padCharacter , sb ) "}, {"code": "private static ResultCode registerErrorResultCode ( final int intValue , final LocalizableMessage name , final Enum resultCodeEnum ) { \n\tfinal ResultCode t = new ResultCode ( intValue , name , _BOOL , resultCodeEnum ) ; \n\tELEMENTS . put ( intValue , t ) ; \n\treturn t ; \n\t} \n"}, {"code": "public void addAll ( ExceptionSet other ) { \n\texceptionSet . or ( other . exceptionSet ) ; \n\texplicitSet . or ( other . explicitSet ) ; \n\tsize = countBits ( exceptionSet ) ; \n\tcommonSupertype = null ; \n\t} \n"}, {"code": "@ HLEUnimplemented $F79740 public int sceUsbCamStartVideo $F72 { \n\tif $F931 ( setupVideo ) { \n\t\tlog . warn ( String . format ( NUM00 ) ) ; \n\t\t} \n\t$F1082 } \n"}, {"code": "protected ResourceLoaderLicenseLocator ( final Charset charset , final String ... licenseFiles ) { \n\t$F37435 ( licenseFiles ) $F896 ( charset ) this . licenseFiles = $F8 ( Arrays , licenseFiles ) ; \n\tthis . charset = charset ; \n\t} \n"}, {"code": "private static boolean isIntendedException ( Exception e , $F6969 clazz ) { \n\tfinal String message = e . getMessage ( ) ; \n\treturn ( ! TextUtils . isEmpty ( message ) && message . startsWith ( clazz . getName ( ) ) ) ; \n\t} \n"}, {"code": "$F14125 public ProjectTypeRegistry ( Set < ProjectTypeDef > types ) { \n\t$F23429 ( projectTypes ) $F23429 ( validatedData ) validate ( types ) ; \n\tfor ( ProjectTypeDef type : validatedData . values ( ) ) { \n\t\ttry { \n\t\t\tinit ( type ) ; \n\t\t\t} \n\t\tcatch ( ProjectTypeConstraintException e ) $F27824 ( LOG , e ) } \n\t} \n"}, {"code": "static public void addNotificationListener ( JMXConnector jmxConnector , $F6969 mbeanInterface , String mbeanName , NotificationListener notificationListener , boolean ignored ) throws InstanceNotFoundException , Exception { \n\tMBeanServerConnection mbsc = jmxConnector . getMBeanServerConnection ( ) ; \n\tObjectName $F98155 ( objectName , generateMBeanObjectName , mbeanInterface , mbeanName ) ; \n\tmbsc . addNotificationListener ( objectName , notificationListener , null , null ) ; \n\t} \n"}, {"code": "public void testCase16 $F72 { \n\t$F7829 $F161331 int aSign = - NUM00 ; \n\tint bSign = - NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , NUM00 , NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 , - NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) $F10683 ( result , aNumber , bNumber ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F10686 ( assertEquals , result ) } \n"}, {"code": "private void consume $F72 { \n\tconsumer . subscribe ( topics ) ; \n\twhile $F27748 ( running ) { \n\t\ttry { \n\t\t\tConsumerRecords records = consumer . poll ( pollIntervalMs ) ; \n\t\t\t$F4322 ( records ) Iterator < ConsumerRecord $F2538 > iterator = records . iterator ( ) ; \n\t\t\t$F7685 ( iterator , sendMessage ) } \n\t\tcatch ( Exception ex ) { \n\t\t\tString error = NUM00 ; \n\t\t\tlogger . error ( error , ex ) ; \n\t\t\tbus . send ( ConfigConstants . CONSUMER_ERROR_TOPIC , getErrorString ( error , ex . getMessage ( ) ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private $F96 readRawBytesSlowPath ( final int size ) throws IOException { \n\tif ( size <= NUM00 ) { \n\t\tif ( size == NUM00 ) { \n\t\t\treturn Internal . EMPTY_BYTE_ARRAY ; \n\t\t\t} \n\t\telse { \n\t\t\tthrow InvalidProtocolBufferException . negativeSize ( ) ; \n\t\t\t} \n\t\t} \n\tif ( totalBytesRetired + bufferPos + size > currentLimit ) { \n\t\tskipRawBytes ( currentLimit - totalBytesRetired - bufferPos ) ; \n\t\tthrow InvalidProtocolBufferException . truncatedMessage ( ) ; \n\t\t} \n\tif ( size < BUFFER_SIZE ) { \n\t\t$F4727 ( bytes , size ) int pos = bufferSize - bufferPos ; \n\t\t$F21535 ( System , buffer , bufferPos , bytes , pos ) bufferPos = bufferSize ; \n\t\tensureAvailable ( size - pos ) ; \n\t\tSystem . arraycopy ( buffer , NUM00 , bytes , pos , size - pos ) ; \n\t\tbufferPos = size - pos ; \n\t\treturn bytes ; \n\t\t} \n\telse { \n\t\tfinal int originalBufferPos = bufferPos ; \n\t\tfinal int originalBufferSize = bufferSize ; \n\t\ttotalBytesRetired += bufferSize ; \n\t\tbufferPos = NUM00 ; \n\t\tbufferSize = NUM00 ; \n\t\tint sizeLeft = size - ( originalBufferSize - originalBufferPos ) ; \n\t\tfinal $F3510 $F96301 ( chunks ) ; \n\t\twhile ( sizeLeft > NUM00 ) { \n\t\t\tfinal $F96 chunk = new byte [ Math . min ( sizeLeft , BUFFER_SIZE ) ] ; \n\t\t\tint pos = NUM00 ; \n\t\t\twhile ( pos < chunk . length ) { \n\t\t\t\tfinal int n = ( input == null ) ? - NUM00 : input . read ( chunk , pos , chunk . length - pos ) ; \n\t\t\t\tif ( n == - NUM00 ) { \n\t\t\t\t\tthrow InvalidProtocolBufferException . truncatedMessage ( ) ; \n\t\t\t\t\t} \n\t\t\t\ttotalBytesRetired += n ; \n\t\t\t\tpos += n ; \n\t\t\t\t} \n\t\t\tsizeLeft -= chunk . length ; \n\t\t\tchunks . add ( chunk ) ; \n\t\t\t} \n\t\t$F4727 ( bytes , size ) int pos = originalBufferSize - originalBufferPos ; \n\t\t$F21535 ( System , buffer , originalBufferPos , bytes , pos ) for ( final $F96 chunk : chunks ) $F181805 ( System , chunk , bytes , pos ) return bytes ; \n\t\t} \n\t} \n"}, {"code": "private void deleteAttrs ( SvcReg reg , EntryRep entry , boolean checkDups ) { \n\tEntryClass eclass = entry . eclass ; \n\tdeleteInstance ( eclass ) ; \n\t$F59796 ( fields , entry ) if $F9634 ( fields ) { \n\t\tArrayList regs = serviceByEmptyAttr . get ( eclass ) ; \n\t\tif ( regs == null || ( checkDups && hasEmptyAttr ( reg , eclass ) ) ) $F665 $F12747 ( idx , regs , reg ) if ( idx >= NUM00 ) { \n\t\t\tregs . remove ( idx ) ; \n\t\t\tif $F2979 ( regs ) serviceByEmptyAttr . remove ( eclass ) ; \n\t\t\t} \n\t\t$F665 } \n\tfor ( $F45516 ( fldidx , fields ) ) { \n\t\teclass = getDefiningClass ( eclass , fldidx ) ; \n\t\tHashMap [ ] attrMaps = serviceByAttr . get ( eclass ) ; \n\t\tif ( attrMaps == null || attrMaps [ fldidx ] == null || ( checkDups && hasAttr ( reg , eclass , fldidx , fields [ fldidx ] ) ) ) $F598 HashMap map = attrMaps [ fldidx ] ; \n\t\tObject value = fields [ fldidx ] ; \n\t\t$F73534 ( regs , map , value ) $F45557 ( regs ) $F12747 ( idx , regs , reg ) $F166042 ( idx ) regs . remove ( idx ) ; \n\t\tif $F5973 ( regs ) $F598 map . remove ( value ) ; \n\t\tif $F5973 ( map ) $F598 attrMaps [ fldidx ] = null ; \n\t\tif ( allNull ( attrMaps ) ) serviceByAttr . remove ( eclass ) ; \n\t\t} \n\t} \n"}, {"code": "public void testDSAProvider $F72 throws Exception { \n\t$F5348 ( params , AlgorithmParameters ) assertEquals ( NUM00 , NUM00 , params . getAlgorithm ( ) ) ; \n\tBigInteger p = BigInteger . ONE ; \n\tBigInteger q = BigInteger . TEN ; \n\tBigInteger g = BigInteger . ZERO ; \n\tparams . init ( new DSAParameterSpec ( p , q , g ) ) ; \n\t$F46943 ( enc , params ) assertNotNull ( enc ) ; \n\tassertNotNull ( params . getEncoded ( NUM00 ) ) ; \n\tDSAParameterSpec spec = params . getParameterSpec ( DSAParameterSpec . class ) ; \n\tassertEquals ( NUM00 , p , spec . getP ( ) ) ; \n\tassertEquals ( NUM00 , q , spec . getQ ( ) ) ; \n\tassertEquals ( NUM00 , g , spec . getG ( ) ) ; \n\t$F6161 ( params , AlgorithmParameters ) params . init ( enc ) ; \n\tassertTrue ( NUM00 , $F75165 ( Arrays , enc , params ) ) ; \n\t$F6161 ( params , AlgorithmParameters ) params . init ( enc , NUM00 ) ; \n\tassertTrue ( NUM00 , $F75165 ( Arrays , enc , params ) ) ; \n\t$F6161 ( params , AlgorithmParameters ) try { \n\t\tparams . init ( enc , NUM00 ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F29052 } \n"}, {"code": "public static boolean isClassLiteralPossible ( ClassNode classNode ) { \n\treturn $F57120 ( Modifier , classNode ) ; \n\t} \n"}, {"code": "private Properties loadLogFile ( License license , boolean create ) { \n\t$F2697 ( log ) File logFile = getLogFile ( license ) ; \n\ttry { \n\t\tif ( create && logFile . createNewFile ( ) ) { \n\t\t\tlogger . fine ( $F4929 ( logFile ) ) ; \n\t\t\t} \n\t\tfinal InputStream in = new FileInputStream ( logFile ) ; \n\t\ttry $F46567 ( log , in ) $F3229 ( in ) } \n\tcatch ( FileNotFoundException ex ) { \n\t\tif ( create ) { \n\t\t\tlogger . log ( Level . SEVERE , $F4929 ( logFile ) , ex ) ; \n\t\t\t} \n\t\telse $F22807 ( logger ) } \n\tcatch ( IOException ex ) { \n\t\tlogger . log ( Level . WARNING , $F4929 ( logFile ) , ex ) ; \n\t\t} \n\treturn log ; \n\t} \n"}, {"code": "public HTMLStripCharFilterFactory $F3501 ( args ) { \n\tsuper ( args ) ; \n\tescapedTags = getSet ( args , NUM00 ) ; \n\tif $F5973 ( args ) $F18931 ( args ) } \n"}, {"code": "public static int update ( long id , V v ) { \n\tString passwd = ( String ) v . value ( NUM00 ) ; \n\tif $F20899 ( X , passwd ) { \n\t\tpasswd = encrypt ( passwd ) ; \n\t\tv . set ( NUM00 , passwd , _BOOL ) ; \n\t\t} \n\telse { \n\t\t$F36382 ( v ) } \n\treturn Helper . update ( id , v . set ( $F132682 ( System ) ) , User . class ) ; \n\t} \n"}, {"code": "public double likelihood $F28786 ( doc , tag ) { \n\tdouble likelihood = NUM00 ; \n\tif ( ntw . rowSum ( tag ) == NUM00 ) { \n\t\treturn likelihood ; \n\t\t} \n\t$F57783 nwd = new $F57783 $F72 ; \n\tfor ( String w : doc ) { \n\t\tnwd . inc ( w , NUM00 ) ; \n\t\t} \n\tdouble norm = NUM00 ; \n\t$F2536 prwd = new Hashtable $F2535 $F72 ; \n\tfor ( Entry $F12294 e : nwd ) { \n\t\tdouble prw = prw ( e . getKey ( ) ) ; \n\t\tnorm += prw ; \n\t\t$F15251 ( prwd , e , prw ) } \n\tfor ( Entry $F2535 e : prwd . entrySet ( ) ) { \n\t\tdouble prw = e . getValue ( ) / norm ; \n\t\tlikelihood += ptr ( tag , e . getKey ( ) ) * prw * ( NUM00 - pcm ( ) ) ; \n\t\t} \n\tlikelihood += ptr ( tag , NOISE ) * pcm ( ) ; \n\treturn likelihood ; \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\t$F280 ( text ) text . append ( NUM00 + attributesToString ( ) + NUM00 ) ; \n\ttext . append ( NUM00 + getInstNums ( ) ) ; \n\t$F92 ( text ) } \n"}, {"code": "public boolean isSafeMode $F72 { \n\treturn this . safeMode ; \n\t} \n"}, {"code": "public void test_getPutByteArrayWithOffsetAndLength $F72 { \n\tfinal int size = NUM00 ; \n\tfinal IDataRecord buf = new FixedByteArrayBuffer ( size ) ; \n\tassertEquals ( $F19905 , buf . getByte ( NUM00 ) ) ; \n\tassertEquals ( $F19905 , buf . getByte ( size - NUM00 ) ) ; \n\tfinal int pos = NUM00 ; \n\tfor ( $F119 ( i , LIMIT ) ) { \n\t\tfinal $F96 expected = new byte [ r . nextInt ( size - NUM00 ) ] ; \n\t\tfinal int off = ( expected . length / NUM00 == NUM00 ? NUM00 : r . nextInt ( expected . length / NUM00 ) ) ; \n\t\tfinal int len = ( expected . length == NUM00 ? NUM00 : r . nextInt ( expected . length - off ) ) ; \n\t\tr . nextBytes ( expected ) ; \n\t\tbuf . put ( pos , expected , off , len ) ; \n\t\tassertEquals ( NUM00 , BytesUtil . compareBytesWithLenAndOffset ( off , len , expected , pos , len , buf . array ( ) ) ) ; \n\t\t$F221031 ( dstoff , r ) final $F96 actual = new byte [ expected . length + dstoff ] ; \n\t\tbuf . get ( pos , actual , dstoff , expected . length ) ; \n\t\tassertEquals ( NUM00 , BytesUtil . compareBytesWithLenAndOffset ( off , len , expected , dstoff , len , actual ) ) ; \n\t\t} \n\tassertEquals ( $F19905 , buf . getByte ( NUM00 ) ) ; \n\tassertEquals ( $F19905 , buf . getByte ( pos + size - NUM00 ) ) ; \n\t} \n"}, {"code": "public void addLastItem ( M model ) { \n\t$F28711 ( addItem , mDatas , model ) ; \n\t} \n"}, {"code": "static boolean hasLocalizedMessages $F72 { \n\treturn GUIMediator . isEnglishLocale ( ) || ! FIRST_MESSAGE . equals ( I18n . tr ( FIRST_MESSAGE ) ) ; \n\t} \n"}, {"code": "public boolean textboxKeyTyped ( char p_146201_1_ , int p_146201_2_ ) { \n\tif ( ! field_146213_o ) return _BOOL ; \n\telse switch ( p_146201_1_ ) { \n\t\t$F3366 func_146202_e ( ) ; \n\t\tfunc_146199_i ( NUM00 ) ; \n\t\treturn _BOOL ; \n\t\t$F3366 GuiScreen . setClipboardString ( func_146207_c ( ) ) ; \n\t\treturn _BOOL ; \n\t\t$F3366 if ( field_146226_p ) func_146191_b ( GuiScreen . getClipboardString ( ) ) ; \n\t\treturn _BOOL ; \n\t\t$F3366 GuiScreen . setClipboardString ( func_146207_c ( ) ) ; \n\t\t$F10954 ( field_146226_p , func_146191_b ) return _BOOL ; \n\t\t$F1267 switch ( p_146201_2_ ) { \n\t\t\t$F3366 if $F114759 ( GuiScreen ) { \n\t\t\t\tif ( field_146226_p ) func_146177_a ( - NUM00 ) ; \n\t\t\t\t} \n\t\t\telse if ( field_146226_p ) func_146175_b ( - NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t$F3366 if ( GuiScreen . isShiftKeyDown ( ) ) func_146199_i ( NUM00 ) ; \n\t\t\telse func_146196_d ( ) ; \n\t\t\treturn _BOOL ; \n\t\t\t$F3366 if ( GuiScreen . isShiftKeyDown ( ) ) { \n\t\t\t\tif $F114759 ( GuiScreen ) func_146199_i ( func_146183_a ( - NUM00 , func_146186_n ( ) ) ) ; \n\t\t\t\telse func_146199_i ( func_146186_n ( ) - NUM00 ) ; \n\t\t\t\t} \n\t\t\telse if $F114759 ( GuiScreen ) func_146190_e ( func_146187_c ( - NUM00 ) ) ; \n\t\t\telse func_146182_d ( - NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t$F3366 if ( GuiScreen . isShiftKeyDown ( ) ) { \n\t\t\t\tif $F114759 ( GuiScreen ) func_146199_i ( func_146183_a ( NUM00 , func_146186_n ( ) ) ) ; \n\t\t\t\telse func_146199_i ( func_146186_n ( ) + NUM00 ) ; \n\t\t\t\t} \n\t\t\telse if $F114759 ( GuiScreen ) func_146190_e ( func_146187_c ( NUM00 ) ) ; \n\t\t\telse func_146182_d ( NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t$F3366 if ( GuiScreen . isShiftKeyDown ( ) ) $F43187 ( func_146199_i , field_146216_j ) else func_146202_e ( ) ; \n\t\t\treturn _BOOL ; \n\t\t\t$F3366 if $F114759 ( GuiScreen ) { \n\t\t\t\tif ( field_146226_p ) func_146177_a ( NUM00 ) ; \n\t\t\t\t} \n\t\t\telse if ( field_146226_p ) func_146175_b ( NUM00 ) ; \n\t\t\treturn _BOOL ; \n\t\t\t$F1267 if ( ChatAllowedCharacters . isAllowedCharacter ( p_146201_1_ ) ) { \n\t\t\t\tif ( field_146226_p ) func_146191_b ( Character . toString ( p_146201_1_ ) ) ; \n\t\t\t\treturn _BOOL ; \n\t\t\t\t} \n\t\t\telse return _BOOL ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static DockerImage fromImageName ( String imageName ) { \n\timageName = prepare ( imageName ) ; \n\t$F35105 ( parts , imageName , SECTION_SEPARATOR ) switch ( parts . length ) { \n\t\t$F3366 return fromParts ( null , null , parts [ NUM00 ] ) ; \n\t\t$F3366 if ( isValidNamespace ( parts [ NUM00 ] ) ) { \n\t\t\treturn fromParts ( null , parts [ NUM00 ] , parts [ NUM00 ] ) ; \n\t\t\t} \n\t\telse { \n\t\t\treturn fromParts ( parts [ NUM00 ] , null , parts [ NUM00 ] ) ; \n\t\t\t} \n\t\t$F3366 return fromParts ( $F26406 ( parts ) ) ; \n\t\t$F61916 ( imageName ) } \n\t} \n"}, {"code": "public synchronized void listen ( final Set < NotificationChannel > channelNames ) $F21926 ( m_channels , channelNames ) "}, {"code": "public static void deleteDirectory ( File directory ) throws IOException { \n\t$F201570 ( directory ) $F201571 ( isSymlink , directory , cleanDirectory ) $F281715 ( directory , message ) } \n"}, {"code": "private void displayNonVerbose ( ConsoleApplication app , String categoryName , String typeName , Tag tag , $F2689 propertyNames ) { \n\tif ( ! app . isScriptFriendly ( ) ) { \n\t\tdisplayPropertyOptionKey ( app ) ; \n\t\t$F21416 ( app ) $F21416 ( app ) } \n\tTableBuilder builder = new TableBuilder $F72 ; \n\tbuilder . appendHeading ( INFO_DSCFG_HEADING_COMPONENT_NAME . get ( ) ) ; \n\tbuilder . appendHeading ( INFO_DSCFG_HEADING_COMPONENT_TYPE . get ( ) ) ; \n\tbuilder . appendHeading ( INFO_DSCFG_HEADING_PROPERTY_NAME . get ( ) ) ; \n\tbuilder . appendHeading ( INFO_DSCFG_HEADING_PROPERTY_OPTIONS . get ( ) ) ; \n\tbuilder . appendHeading ( INFO_DSCFG_HEADING_PROPERTY_SYNTAX . get ( ) ) ; \n\tbuilder . addSortKey ( NUM00 ) ; \n\tbuilder . addSortKey ( NUM00 ) ; \n\tbuilder . addSortKey ( NUM00 ) ; \n\tfor ( $F3465 ( category , categoryMap ) ) { \n\t\tif $F10335 ( categoryName , category ) $F1448 Map < String , AbstractManagedObjectDefinition $F5162 > subTypes = categoryMap . get ( category ) ; \n\t\tfor ( $F3465 ( type , subTypes ) ) { \n\t\t\tif $F10335 ( typeName , type ) $F1448 AbstractManagedObjectDefinition $F5162 mod = subTypes . get ( type ) ; \n\t\t\tif ( cannotDisplay ( app , mod , tag ) ) $F1448 Set < PropertyDefinition $F1011 > pds = getPropertyDefinitions ( mod ) ; \n\t\t\tfor ( PropertyDefinition $F1011 pd : pds ) { \n\t\t\t\tif ( cannotDisplay ( app , pd , propertyNames ) ) $F1448 builder . startRow ( ) ; \n\t\t\t\tbuilder . appendCell ( category ) ; \n\t\t\t\tbuilder . appendCell ( type ) ; \n\t\t\t\tbuilder . appendCell ( pd . getName ( ) ) ; \n\t\t\t\tbuilder . appendCell ( getPropertyOptionSummary ( pd ) ) ; \n\t\t\t\tPropertyDefinitionUsageBuilder v = new PropertyDefinitionUsageBuilder ( _BOOL ) ; \n\t\t\t\tbuilder . appendCell ( v . getUsage ( pd ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tTablePrinter printer ; \n\tif ( app . isScriptFriendly ( ) ) { \n\t\tprinter = createScriptFriendlyTablePrinter ( app . getOutputStream ( ) ) ; \n\t\t} \n\telse { \n\t\tprinter = new TextTablePrinter ( app . getOutputStream ( ) ) ; \n\t\t} \n\tbuilder . print ( printer ) ; \n\t} \n"}, {"code": "public $F27145 deleteEmptyFolders $F72 { \n\t$F17809 ( folderIds ) SQLiteDatabase db = mOpenHelper . getWritableDatabase ( ) ; \n\t$F41822 ( db ) try { \n\t\tString selection = LauncherSettings . Favorites . ITEM_TYPE + NUM00 + LauncherSettings . Favorites . ITEM_TYPE_FOLDER + NUM00 + LauncherSettings . Favorites . _ID + NUM00 + LauncherSettings . Favorites . CONTAINER + NUM00 + TABLE_FAVORITES + NUM00 ; \n\t\tCursor c = db . query ( TABLE_FAVORITES , new String [ ] { \n\t\t\tLauncherSettings . Favorites . _ID } \n\t\t, selection , null , null , null , null ) ; \n\t\twhile $F12260 ( c ) { \n\t\t\tfolderIds . add ( c . getLong ( NUM00 ) ) ; \n\t\t\t} \n\t\t$F59 ( c ) if $F3817 ( folderIds ) { \n\t\t\tdb . delete ( TABLE_FAVORITES , Utilities . createDbSelectionQuery ( LauncherSettings . Favorites . _ID , folderIds ) , null ) ; \n\t\t\t} \n\t\t$F41894 ( db ) } \n\tcatch ( SQLException ex ) { \n\t\tLog . e ( $F65849 ( TAG , ex ) ) ; \n\t\t$F725 ( folderIds ) } \n\tfinally { \n\t\t$F41895 ( db ) } \n\treturn folderIds ; \n\t} \n"}, {"code": "$F1 default $F70219 sumInt ( final ToIntFunction $F11632 fn ) $F257945 ( CompletableFuture , getExec ) "}, {"code": "public void testWrite3 $F72 throws Exception { \n\t$F1191 ( data ) $F1196 ( tos ) CipherOutputStream cos = new CipherOutputStream $F1200 ( tos ) ; \n\tfor ( $F1139 ( i , data ) ) { \n\t\tcos . write ( data , i , NUM00 ) ; \n\t\t} \n\t$F1206 ( cos ) $F1208 ( result , tos ) $F1211 ( Arrays , result , data , fail ) } \n"}, {"code": "private Document parse ( final String data ) { \n\t$F13264 ( docBuilder , data ) Document document = null ; \n\ttry { \n\t\tString buf = BEGINPART + data + ENDPART ; \n\t\tInputSource inputSource = $F265821 ( buf ) ; \n\t\tdocument = docBuilder . parse ( inputSource ) ; \n\t\t} \n\t$F1516 ( e ) return document ; \n\t} \n"}, {"code": "public boolean isProductionJournal ( $F2689 productionCopies , Volume volume ) { \n\tfor ( String productionCopy : productionCopies ) { \n\t\tif ( productionCopy . equalsIgnoreCase ( volume . getRpCopyName ( ) ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void testPoundSymbolInColumnName $F72 throws SQLException { \n\tdeleteDb ( NUM00 ) ; \n\tConnection conn = getConnection ( NUM00 ) ; \n\t$F11282 ( stat , conn ) $F131050 ( stat ) $F131050 ( stat ) assertResult ( NUM00 , stat , NUM00 ) ; \n\t$F59 ( conn ) } \n"}, {"code": "public static String decode ( final String escaped ) throws URIException { \n\ttry { \n\t\tfinal $F96 rawdata = URLCodec . decodeUrl ( EncodingUtil . getAsciiBytes ( escaped ) ) ; \n\t\treturn EncodingUtil . getString ( rawdata , URI . getDefaultProtocolCharset ( ) ) ; \n\t\t} \n\tcatch ( final DecoderException e ) { \n\t\tthrow new URIException $F1783 ( e ) ; \n\t\t} \n\t} \n"}, {"code": "void waitBeforeNextPoll ( int pollingInterval ) throws InterruptedException { \n\tsynchronized ( this ) { \n\t\twait ( pollingInterval ) ; \n\t\t} \n\t$F24126 ( pollOutstanding ) $F980 ( log ) for ( $F6268 ( i ) ) { \n\t\tsynchronized ( this ) { \n\t\t\twait ( pollingInterval / NUM00 ) ; \n\t\t\t} \n\t\t$F980 ( log ) $F24126 ( pollOutstanding ) } \n\t} \n"}, {"code": "private void shiftMappingVectorTokensLeft $F14337 ( lineNum , startCol , shift ) { \n\tboolean lastWasBeginTLAToken = _BOOL ; \n\tint lastBeginTLATokCol = - NUM00 ; \n\tVector line = ( Vector ) mappingVector . elementAt ( lineNum ) ; \n\tfor ( $F2277 ( i , line ) ) { \n\t\tMappingObject obj = ( MappingObject ) line . elementAt ( i ) ; \n\t\tif ( obj . getType ( ) == MappingObject . BEGIN_TLATOKEN ) { \n\t\t\tMappingObject . BeginTLAToken tobj = ( MappingObject . BeginTLAToken ) obj ; \n\t\t\tint col = tobj . getColumn ( ) ; \n\t\t\tif ( col >= startCol ) { \n\t\t\t\ttobj . setColumn ( col - shift ) ; \n\t\t\t\t} \n\t\t\tlastWasBeginTLAToken = _BOOL ; \n\t\t\tlastBeginTLATokCol = tobj . getColumn ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( obj . getType ( ) == MappingObject . END_TLATOKEN ) { \n\t\t\t\tMappingObject . EndTLAToken tobj = ( MappingObject . EndTLAToken ) obj ; \n\t\t\t\tint col = tobj . getColumn ( ) ; \n\t\t\t\tif ( col >= startCol ) { \n\t\t\t\t\ttobj . setColumn ( col - shift ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( lastWasBeginTLAToken && tobj . getColumn ( ) <= lastBeginTLATokCol ) { \n\t\t\t\t\tPcalDebug . ReportBug ( NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse if ( obj . getType ( ) == MappingObject . SOURCE_TOKEN ) { \n\t\t\t\tMappingObject . SourceToken tobj = ( MappingObject . SourceToken ) obj ; \n\t\t\t\tint col = tobj . getBeginColumn ( ) ; \n\t\t\t\tif ( col >= startCol ) { \n\t\t\t\t\ttobj . setBeginColumn ( col - shift ) ; \n\t\t\t\t\t} \n\t\t\t\tcol = tobj . getEndColumn ( ) ; \n\t\t\t\tif ( col >= startCol ) { \n\t\t\t\t\ttobj . setEndColumn ( col - shift ) ; \n\t\t\t\t\t} \n\t\t\t\tlastWasBeginTLAToken = _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected Dimension computeLengths ( String annoText ) { \n\t$F806 lines = Util . splitLines ( annoText ) ; \n\tint lineLength = NUM00 ; \n\tfor ( String line : lines ) { \n\t\tif $F62924 ( line , lineLength ) $F3935 ( lineLength , line ) } \n\treturn new Dimension ( lineLength + NUM00 , lines . length + NUM00 ) ; \n\t} \n"}, {"code": "public static void writeImageMap ( PrintWriter writer , String name , ChartRenderingInfo info , ToolTipTagFragmentGenerator toolTipTagFragmentGenerator , URLTagFragmentGenerator urlTagFragmentGenerator ) throws IOException { \n\twriter . println ( ImageMapUtilities . getImageMap ( name , info , toolTipTagFragmentGenerator , urlTagFragmentGenerator ) ) ; \n\t} \n"}, {"code": "ImportNoteBuilder addMessage ( ImportNoteMessage . Type type , String message ) { \n\tif $F48189 ( Strings , message ) { \n\t\tmessages . add ( new ImportNoteMessage ( type , message ) ) ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException $F19580 ( toXMLString , includeNS , declareNS , _BOOL ) "}, {"code": "public static $F3803 asStringList ( Collection $F4222 objects ) { \n\t$F24645 ( list ) for ( Object object : objects ) { \n\t\t$F269561 ( list , String , object ) } \n\treturn list ; \n\t} \n"}, {"code": "public < E extends T > E min ( Iterable $F11685 iterable ) { \n\t$F11686 iterator = iterable . iterator ( ) ; \n\t$F378645 ( minSoFar , iterator ) while $F2921 ( iterator ) { \n\t\tminSoFar = $F11626 ( min , minSoFar , iterator ) ; \n\t\t} \n\treturn minSoFar ; \n\t} \n"}, {"code": "public synchronized int read $F1313 ( off , len ) throws IOException { \n\tif ( len <= NUM00 ) $F1082 int moreSpace ; \n\tsynchronized ( lock ) { \n\t\tif ( pos >= present ) pos = present = NUM00 ; \n\t\telse if ( pos >= waterMark ) { \n\t\t\tSystem . arraycopy ( buffer , pos , buffer , NUM00 , present - pos ) ; \n\t\t\tpresent -= pos ; \n\t\t\tpos = NUM00 ; \n\t\t\t} \n\t\tint freeSpace = buffer . length - present ; \n\t\tmoreSpace = Math . max ( freeSpace - requested , NUM00 ) ; \n\t\t} \n\tif ( moreSpace > NUM00 ) manager . sendRequest ( info , moreSpace ) ; \n\tsynchronized ( lock ) { \n\t\trequested += moreSpace ; \n\t\twhile ( ( pos >= present ) && ! disconnected ) { \n\t\t\t$F29028 ( lock ) } \n\t\tif ( disconnected && pos >= present ) $F150 int available = present - pos ; \n\t\tif ( len < available ) { \n\t\t\tSystem . arraycopy ( buffer , pos , b , off , len ) ; \n\t\t\tpos += len ; \n\t\t\treturn len ; \n\t\t\t} \n\t\telse { \n\t\t\tSystem . arraycopy ( buffer , pos , b , off , available ) ; \n\t\t\tpos = present = NUM00 ; \n\t\t\treturn available ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public final void put ( String key , int value ) { \n\tif $F11078 ( m_firstFree , m_mapSize ) { \n\t\tm_mapSize += m_blocksize ; \n\t\t$F140073 ( m_mapSize ) $F10236 ( System , m_map , newMap , m_firstFree ) m_map = newMap ; \n\t\tint newValues [ ] = new int [ m_mapSize ] ; \n\t\t$F10236 ( System , m_values , newValues , m_firstFree ) m_values = newValues ; \n\t\t} \n\tm_map [ m_firstFree ] = key ; \n\tm_values [ m_firstFree ] = value ; \n\tm_firstFree ++ ; \n\t} \n"}, {"code": "public static List $F13970 consolidateItemStacks ( List $F13970 inputStacks ) { \n\tList $F13970 outputStacks = new ArrayList $F13970 $F72 ; \n\tfor ( ItemStack sourceIS : inputStacks ) { \n\t\tboolean bFound = _BOOL ; \n\t\tfor ( ItemStack destIS : outputStacks ) { \n\t\t\tif ( destIS != null && sourceIS != null && itemStackIngredientsMatch ( destIS , sourceIS ) ) { \n\t\t\t\tbFound = _BOOL ; \n\t\t\t\tdestIS . stackSize += sourceIS . stackSize ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( ! bFound ) outputStacks . add ( sourceIS . copy ( ) ) ; \n\t\t} \n\treturn outputStacks ; \n\t} \n"}, {"code": "public static int howManyDaysOld ( long time ) { \n\treturn ( int ) ( $F32707 ( System , time ) / DateUtils . DAY_IN_MILLIS ) ; \n\t} \n"}, {"code": "protected Character isWFXMLChar ( String chardata ) { \n\tCharacter refInvalidChar ; \n\tif ( chardata == null || $F1277 ( chardata ) ) $F1337 $F7782 ( dataarray , chardata ) int datalength = dataarray . length ; \n\tif ( fIsXMLVersion11 ) { \n\t\tint i = NUM00 ; \n\t\twhile ( i < datalength ) { \n\t\t\tif ( XML11Char . isXML11Invalid ( dataarray [ i ++ ] ) ) { \n\t\t\t\tchar ch = dataarray [ i - NUM00 ] ; \n\t\t\t\t$F121844 ( XMLChar , ch , i , datalength , ch2 , dataarray ) refInvalidChar = new Character ( ch ) ; \n\t\t\t\treturn refInvalidChar ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tint i = NUM00 ; \n\t\twhile ( i < datalength ) { \n\t\t\tif ( XMLChar . isInvalid ( dataarray [ i ++ ] ) ) { \n\t\t\t\tchar ch = dataarray [ i - NUM00 ] ; \n\t\t\t\t$F121844 ( XMLChar , ch , i , datalength , ch2 , dataarray ) refInvalidChar = new Character ( ch ) ; \n\t\t\t\treturn refInvalidChar ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public void testZeroZero $F72 $F9149 ( numA , numB , res , aNumber , bNumber , result , assertTrue ) "}, {"code": "public final $F69963 doOnNext ( Consumer $F11632 onNext ) { \n\t$F10578 ( Objects , onNext ) return doOnSignal ( this , onNext , null , null , null , null , null , null , null ) ; \n\t} \n"}, {"code": "public void test_fill$CIIC $F72 { \n\tchar val = NUM00 ; \n\tchar $F3234 = $F11574 ; \n\t$F47119 ( Arrays , d , val ) $F47123 ( i , assertTrue , d , val ) $F47124 ( i , d , assertTrue , val ) $F47128 ( Arrays , d , val , fail ) $F47133 ( Arrays , d , val , fail ) $F47138 ( Arrays , d , val , fail ) } \n"}, {"code": "protected void addMissing ( Instances data , int level , boolean predictorMissing , boolean classMissing ) { \n\t$F115 ( classIndex , data ) $F24605 ( random ) for ( $F208679 ( i , data ) ) { \n\t\t$F338882 ( current , data , i ) for ( $F180066 ( j , data ) ) { \n\t\t\tif ( ( ( j == classIndex ) && classMissing ) || ( ( j != classIndex ) && predictorMissing ) ) { \n\t\t\t\tif ( $F23772 ( Math , random ) % NUM00 < level ) current . setMissing ( j ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public $F9883 void insertInBatches ( $F5675 records , int partitionSize , DbClient dbClient , String type ) { \n\t$F98026 volume_partitions = Lists . partition ( records , partitionSize ) ; \n\tfor ( $F5675 partition : volume_partitions ) { \n\t\ttry { \n\t\t\tdbClient . createObject ( partition ) ; \n\t\t\t_log . info ( $F2580 ( partition , type ) ) ; \n\t\t\t} \n\t\tcatch ( DatabaseException e ) $F73607 ( _log , type , e ) } \n\t} \n"}, {"code": "public void modify ( SSOToken token , String objName , ModificationItem [ ] mods ) throws $F16995 { \n\tif ( $F29136 ( objName ) || ( mods == null ) || $F9634 ( mods ) ) $F11813 mRWLock . readRequest ( ) ; \n\ttry { \n\t\tif ( ! root . isExists ( mRootDir , objName ) ) { \n\t\t\tString errmsg = NUM00 + objName + NUM00 ; \n\t\t\tmDebug . error ( errmsg ) ; \n\t\t\tthrow new ServiceNotFoundException ( errmsg ) ; \n\t\t\t} \n\t\t} \n\tfinally { \n\t\tmRWLock . readDone ( ) ; \n\t\t} \n\tmRWLock . writeRequest ( ) ; \n\ttry { \n\t\tSMSFlatFileTreeNode node = root . getChild ( objName ) ; \n\t\tif ( node == null ) { \n\t\t\tString errmsg = NUM00 + objName + NUM00 ; \n\t\t\tmDebug . error ( errmsg ) ; \n\t\t\tthrow new ServiceNotFoundException ( errmsg ) ; \n\t\t\t} \n\t\tString filepath = node . getAttributeFilename ( mRootDir ) ; \n\t\tif ( filepath == null ) { \n\t\t\tString errmsg = NUM00 + objName + NUM00 ; \n\t\t\tmDebug . error ( errmsg ) ; \n\t\t\tthrow new ServiceNotFoundException ( errmsg ) ; \n\t\t\t} \n\t\t$F1705 ( filehandle , filepath ) if $F48790 ( filehandle ) { \n\t\t\tString errmsg = NUM00 + NUM00 + objName + NUM00 ; \n\t\t\tmDebug . error ( errmsg ) ; \n\t\t\tthrow new ServiceNotFoundException ( errmsg ) ; \n\t\t\t} \n\t\tProperties props = loadProperties ( filehandle , objName ) ; \n\t\tboolean hasSunXmlKeyValue = props . getProperty ( SMSEntry . ATTR_XML_KEYVAL ) != null ; \n\t\tfor ( $F1139 ( i , mods ) ) { \n\t\t\tmodifyValues ( objName , mods [ i ] , props ) ; \n\t\t\t} \n\t\tsaveProperties ( props , filehandle , objName ) ; \n\t\tString newSunXMLKeyValue = props . getProperty ( SMSEntry . ATTR_XML_KEYVAL ) ; \n\t\tif ( newSunXMLKeyValue != null ) { \n\t\t\tSet xmlKeyVals = toValSet ( SMSEntry . ATTR_XML_KEYVAL , newSunXMLKeyValue ) ; \n\t\t\t$F42258 ( hasSunXmlKeyValue , deleteSunXmlKeyValFiles , node ) createSunXmlKeyValFiles ( node , xmlKeyVals ) ; \n\t\t\tsaveDirectoryTree ( ) ; \n\t\t\t} \n\t\t} \n\tfinally { \n\t\tmRWLock . writeDone ( ) ; \n\t\t} \n\t} \n"}, {"code": "public void removeOnTabSelectedListener ( OnTabSelectedListener listener ) $F275325 ( listener , mListeners ) "}, {"code": "public ConnectUriManager $F24643 ( connectUri ) throws THLException { \n\tthis . uriList = connectUri ; \n\tif $F10471 ( connectUri ) { \n\t\tthrow new THLException $F580 ; \n\t\t} \n\t} \n"}, {"code": "private void addVolumesToParkingStorageGroup ( StorageSystem storage , String policyName , $F2689 volumeDeviceIds ) throws Exception { \n\t$F806 tokens = policyName . split ( Constants . SMIS_PLUS_REGEX ) ; \n\tCIMObjectPath groupPath = _helper . getVolumeGroupBasedOnSLO ( storage , storage , tokens [ NUM00 ] , tokens [ NUM00 ] , tokens [ NUM00 ] ) ; \n\tif ( groupPath == null ) { \n\t\tgroupPath = _helper . createVolumeGroupBasedOnSLO ( storage , storage , tokens [ NUM00 ] , tokens [ NUM00 ] , tokens [ NUM00 ] ) ; \n\t\t} \n\t$F50603 inArgs = _helper . getAddVolumesToMaskingGroupInputArguments ( storage , groupPath , volumeDeviceIds ) ; \n\t$F50610 ( outArgs ) SmisJob addVolumesToSGJob = new SmisSynchSubTaskJob ( null , storage . getId ( ) , SmisConstants . ADD_MEMBERS ) ; \n\t_helper . invokeMethodSynchronously ( storage , _cimPath . getControllerConfigSvcPath ( storage ) , NUM00 , inArgs , outArgs , addVolumesToSGJob ) ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "$F37331 ( input , encoding , Charsets ) "}, {"code": "public boolean exportPkcs8 $F72 $F28110 ( jrbPkcs8 ) "}, {"code": "$F29422 ( encodedPublicKey , decodedKey , Base64 , keyFactory , KeyFactory , KEY_FACTORY_ALGORITHM , e , Log , TAG ) "}, {"code": "public NumberTick ( Number number , String label , TextAnchor textAnchor , TextAnchor rotationAnchor , double angle ) { \n\tsuper ( number . doubleValue ( ) , label , textAnchor , rotationAnchor , angle ) ; \n\tthis . number = number ; \n\t} \n"}, {"code": "private boolean isStoppable $F72 { \n\treturn ( isRunning ( ) && getCache ( ) != null ) ; \n\t} \n"}, {"code": "private void log ( String message , String level , String levelColor , PrintStream ps ) { \n\t$F83 ( builder ) if $F1264 ( level ) $F19976 ( builder , getPrefix , level , levelColor ) builder . append ( message ) ; \n\t$F1822 ( ts , builder ) ps . println ( ts ) ; \n\tfor ( LogHandler hand : handlers ) hand . onLog ( level , message , ts , this ) ; \n\t} \n"}, {"code": "public void addGossipMember ( GossipMember member ) $F207 ( gossipMembers , member ) "}, {"code": "public static boolean isPublic ( int mod ) { \n\treturn Modifier . isPublic ( mod ) ; \n\t} \n"}, {"code": "$F29422 ( encodedPublicKey , decodedKey , Base64 , keyFactory , KeyFactory , KEY_FACTORY_ALGORITHM , e , Log , TAG ) "}, {"code": "public static $F529 createUserPrefMap ( GenericValue rec ) throws GeneralException { \n\treturn addPrefToMap ( rec , $F67652 ) ; \n\t} \n"}, {"code": "$F49286 ( value , absMin , absMax , absValue , Math ) "}, {"code": "public JSONBuffer appendString ( Object cont ) { \n\tif ( stack . empty ( ) || stack . peek ( ) != Operand . ARRAY ) $F19954 addQuotedString ( cont ) ; \n\taddSeparator ( ) ; \n\treturn this ; \n\t} \n"}, {"code": "public static void deleteUserFromAuthenticationInfo ( AuthenticationInfo authenticationInfo ) throws ServerRuntimeException { \n\tString username = authenticationInfo . getUsername ( ) ; \n\tString passwordFileLocation = authenticationInfo . getPasswordFileLocation ( ) ; \n\ttry { \n\t\tPropertiesConfiguration props = new PropertiesConfiguration ( passwordFileLocation ) ; \n\t\t$F19101 ( usernameInFile , props , username ) if ( usernameInFile == null ) { \n\t\t\tthrow new ServerRuntimeException $F10797 ( MessageFormat , username ) ; \n\t\t\t} \n\t\tprops . clearProperty ( username ) ; \n\t\t$F72208 ( props ) } \n\tcatch ( org . apache . commons . configuration . ConfigurationException ce ) { \n\t\tlogger . error ( NUM00 + authenticationInfo . getPasswordFileLocation ( ) , ce ) ; \n\t\tthrow new ServerRuntimeException $F16296 ( ce ) ; \n\t\t} \n\t} \n"}, {"code": "public void error ( Level level , String messageId , String $F19196 , Object session ) throws LogException { \n\terror ( level , messageId , data , session , null ) ; \n\t} \n"}, {"code": "public synchronized void remove ( IAudioProcessor processor ) $F15777 ( processors , processor , buildFinalProcessor ) "}, {"code": "$F41720 ( value , absMin , absMax , absValue , Math ) "}, {"code": "private int endRecoverAnimation ( ViewHolder viewHolder , boolean override ) { \n\t$F10162 ( recoverAnimSize , mRecoverAnimations ) for ( $F18298 ( i , recoverAnimSize ) ) { \n\t\tfinal RecoverAnimation anim = mRecoverAnimations . get ( i ) ; \n\t\tif ( anim . mViewHolder == viewHolder ) { \n\t\t\tanim . mOverridden |= override ; \n\t\t\tif ( ! anim . mEnded ) $F65149 ( anim ) mRecoverAnimations . remove ( i ) ; \n\t\t\treturn anim . mAnimationType ; \n\t\t\t} \n\t\t} \n\t$F1082 } \n"}, {"code": "public final void addElement ( String value ) { \n\tif $F11078 ( m_firstFree , m_mapSize ) { \n\t\tm_mapSize += m_blocksize ; \n\t\t$F140073 ( m_mapSize ) $F10236 ( System , m_map , newMap , m_firstFree ) m_map = newMap ; \n\t\t} \n\tm_map [ m_firstFree ] = value ; \n\tm_firstFree ++ ; \n\t} \n"}, {"code": "private boolean isMethodContained ( Method m , $F107547 wrapperMethods ) { \n\t$F20605 ( name , m ) $F272051 ( paramTypes , m ) $F135977 ( returnType , m ) for ( Method wm : wrapperMethods ) { \n\t\tif ( $F3174 ( name , wm ) && Arrays . equals ( paramTypes , wm . getParameterTypes ( ) ) && returnType == wm . getReturnType ( ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void deleteNode ( Node n ) { \n\tAssert . check ( nodes . contains ( n ) ) ; \n\tnodes . remove ( n ) ; \n\tnotifyUpdate ( n , null ) ; \n\t} \n"}, {"code": "void updatePressed ( ActionEvent e , boolean newRoute ) { \n\t$F45667 ( uName , _userName ) Route g = checkNamesOK ( ) ; \n\t$F2329 ( g ) g . setUserName ( uName ) ; \n\tg . clearOutputTurnouts ( ) ; \n\tg . clearOutputSensors ( ) ; \n\tg . clearRouteSensors ( ) ; \n\tinitializeIncludedList ( ) ; \n\tsetTurnoutInformation ( g ) ; \n\tsetSensorInformation ( g ) ; \n\tg . setOutputScriptName ( scriptFile . getText ( ) ) ; \n\tg . setOutputSoundName ( soundFile . getText ( ) ) ; \n\tsetControlInformation ( g ) ; \n\tcurRoute = g ; \n\tfinishUpdate ( ) ; \n\tstatus1 . setText ( ( newRoute ? Bundle . getMessage ( NUM00 ) : Bundle . getMessage ( NUM00 ) ) + NUM00 + uName + NUM00 + _includedTurnoutList . size ( ) + NUM00 + Bundle . getMessage ( NUM00 ) + NUM00 + _includedSensorList . size ( ) + NUM00 + Bundle . getMessage ( NUM00 ) + NUM00 ) ; \n\t} \n"}, {"code": "$F112299 ( m_Attributes ) "}, {"code": "private static void checkForXStream $F72 { \n\ttry { \n\t\t$F32352 ( Class ) m_Present = _BOOL ; \n\t\t} \n\t$F28453 ( m_Present , _BOOL ) } \n"}, {"code": "@ TargetApi ( Build . VERSION_CODES . GINGERBREAD_MR1 ) private Response < BitmapDrawable > doParse ( NetworkResponse response ) { \n\t$F56524 ( data , response ) $F56530 ( decodeOptions ) decodeOptions . inInputShareable = _BOOL ; \n\tdecodeOptions . inPurgeable = _BOOL ; \n\tdecodeOptions . inPreferredConfig = mDecodeConfig ; \n\tBitmap bitmap ; \n\tif ( mMaxWidth == NUM00 && mMaxHeight == NUM00 ) { \n\t\tbitmap = BitmapFactory . decodeByteArray ( data , NUM00 , data . length , decodeOptions ) ; \n\t\t} \n\telse { \n\t\tdecodeOptions . inJustDecodeBounds = _BOOL ; \n\t\tBitmapFactory . decodeByteArray ( data , NUM00 , data . length , decodeOptions ) ; \n\t\tint actualWidth = decodeOptions . outWidth ; \n\t\tint actualHeight = decodeOptions . outHeight ; \n\t\tint desiredWidth = getResizedDimension ( mMaxWidth , mMaxHeight , actualWidth , actualHeight ) ; \n\t\tint desiredHeight = getResizedDimension ( mMaxHeight , mMaxWidth , actualHeight , actualWidth ) ; \n\t\tdecodeOptions . inJustDecodeBounds = _BOOL ; \n\t\tif ( Utils . hasGingerbreadMR1 ( ) ) { \n\t\t\tdecodeOptions . inPreferQualityOverSpeed = PREFER_QUALITY_OVER_SPEED ; \n\t\t\t} \n\t\t$F61110 ( decodeOptions , ImageUtils , actualWidth , actualHeight , desiredWidth , desiredHeight ) Bitmap tempBitmap = BitmapFactory . decodeByteArray ( data , NUM00 , data . length , decodeOptions ) ; \n\t\tif ( tempBitmap != null && ( tempBitmap . getWidth ( ) > desiredWidth || tempBitmap . getHeight ( ) > desiredHeight ) ) { \n\t\t\tbitmap = Bitmap . createScaledBitmap ( tempBitmap , desiredWidth , desiredHeight , _BOOL ) ; \n\t\t\t$F17551 ( tempBitmap ) } \n\t\telse { \n\t\t\tbitmap = tempBitmap ; \n\t\t\t} \n\t\t} \n\tif ( bitmap == null ) { \n\t\treturn Response . error ( new ParseError ( response ) ) ; \n\t\t} \n\telse { \n\t\tBitmapDrawable drawable ; \n\t\tif ( Utils . hasHoneycomb ( ) ) { \n\t\t\tdrawable = new BitmapDrawable ( mResources , bitmap ) ; \n\t\t\t} \n\t\telse { \n\t\t\tdrawable = new RecyclingBitmapDrawable ( mResources , bitmap ) ; \n\t\t\t} \n\t\treturn Response . success ( drawable , HttpHeaderParser . parseCacheHeaders ( response ) ) ; \n\t\t} \n\t} \n"}, {"code": "public double evaluate ( VectorInstance x , $F1986 y ) throws Exception { \n\tVectorInstance diff = x . subtract ( y ) ; \n\tdouble result = - m_gamma * diff . dotProduct ( diff ) ; \n\treturn Math . exp ( result ) ; \n\t} \n"}, {"code": "$F1 public int batchSize $F72 { \n\treturn batchSize ; \n\t} \n"}, {"code": "public static final $F96 decodeUrl $F97 ( bytes ) throws DecoderException { \n\t$F1338 ( bytes ) $F1538 ( buffer ) for ( $F1139 ( i , bytes ) ) { \n\t\tint b = bytes [ i ] ; \n\t\tif ( b == NUM00 ) $F12032 ( buffer ) else if ( b == NUM00 ) { \n\t\t\ttry { \n\t\t\t\tint u = Character . digit ( ( char ) bytes [ ++ i ] , NUM00 ) ; \n\t\t\t\tint l = Character . digit ( ( char ) bytes [ ++ i ] , NUM00 ) ; \n\t\t\t\tif $F44600 ( u , l ) { \n\t\t\t\t\tthrow new DecoderException $F580 ; \n\t\t\t\t\t} \n\t\t\t\tbuffer . write ( $F313438 ( u , l ) ) ; \n\t\t\t\t} \n\t\t\tcatch ( ArrayIndexOutOfBoundsException e ) { \n\t\t\t\tthrow new DecoderException $F580 ; \n\t\t\t\t} \n\t\t\t} \n\t\telse $F4050 ( buffer , b ) } \n\t$F11316 ( buffer ) } \n"}, {"code": "public void clear $F72 $F13478 ( mAttachedScrap , recycleAndClearCachedViews ) "}, {"code": "public void addDataSet ( T d ) { \n\t$F8249 ( d ) mYValCount += d . getEntryCount ( ) ; \n\tmYValueSum += d . getYValueSum ( ) ; \n\tif $F119130 ( mDataSets ) { \n\t\t$F546052 ( mYMax , d ) $F546053 ( mYMin , d ) if $F259981 ( d , AxisDependency ) { \n\t\t\t$F546052 ( mLeftAxisMax , d ) $F546053 ( mLeftAxisMin , d ) } \n\t\telse { \n\t\t\t$F546052 ( mRightAxisMax , d ) $F546053 ( mRightAxisMin , d ) } \n\t\t} \n\telse { \n\t\t$F546058 ( mYMax , d ) $F546060 ( mYMin , d ) if $F259981 ( d , AxisDependency ) { \n\t\t\t$F546058 ( mLeftAxisMax , d ) $F546060 ( mLeftAxisMin , d ) } \n\t\telse { \n\t\t\t$F546058 ( mRightAxisMax , d ) $F546060 ( mRightAxisMin , d ) } \n\t\t} \n\tmDataSets . add ( d ) ; \n\t$F256591 ( handleEmptyAxis , getFirstLeft , getFirstRight ) } \n"}, {"code": "public void endElement ( String elementName ) throws SAXException { \n\t$F8801 ( m_firstTagNotEmitted , flush ) m_handler . endElement ( elementName ) ; \n\t} \n"}, {"code": "public LibVLC $F39268 ( options ) { \n\tboolean setAout = _BOOL , setChroma = _BOOL ; \n\tif ( options != null ) { \n\t\tfor ( String option : options ) { \n\t\t\t$F252743 ( option , setAout , _BOOL ) $F252743 ( option , setChroma , _BOOL ) if ( ! setAout && ! setChroma ) $F597 } \n\t\t} \n\tif ( setAout || setChroma ) { \n\t\t$F185359 ( options ) if ( setAout ) { \n\t\t\tfinal HWDecoderUtil . AudioOutput hwAout = HWDecoderUtil . getAudioOutputFromDevice ( ) ; \n\t\t\tif ( hwAout == HWDecoderUtil . AudioOutput . OPENSLES ) $F18793 ( options ) else $F18793 ( options ) } \n\t\tif ( setChroma ) { \n\t\t\t$F18793 ( options ) $F18793 ( options ) } \n\t\t} \n\t$F182030 ( nativeNew , options ) ; \n\t} \n"}, {"code": "public FPSTextureView addChildAt ( int location , $F4170 DisplayBase displayBase ) { \n\tdisplayBase . setUp ( mFps ) ; \n\tmDisplayList . add ( location , displayBase ) ; \n\treturn this ; \n\t} \n"}, {"code": "private $F1986 pruneEM ( Tree tree , NodeRef node , ColourChangeMatrix mm , MetaPopulation mp ) { \n\t$F9662 ( p , colourCount ) if ( tree . isExternal ( node ) ) { \n\t\tp [ getColour ( node ) ] = NUM00 ; \n\t\t} \n\telse { \n\t\t$F9666 ( leftChild , tree , node ) $F9666 ( rightChild , tree , node ) $F1986 left = pruneEM ( tree , leftChild , mm , mp ) ; \n\t\t$F1986 right = pruneEM ( tree , rightChild , mm , mp ) ; \n\t\t$F1986 leftBranchPartials = pruneBranchEM ( mm , left , node , leftChild , tree , mp ) ; \n\t\t$F1986 rightBranchPartials = pruneBranchEM ( mm , right , node , rightChild , tree , mp ) ; \n\t\tdouble maxp = NUM00 ; \n\t\tfor ( $F119 ( i , colourCount ) ) { \n\t\t\tp [ i ] = leftBranchPartials [ i ] * rightBranchPartials [ i ] ; \n\t\t\tif ( useNodeBias ) { \n\t\t\t\tp [ i ] *= mm . getEquilibrium ( i ) / mp . getDemographic ( tree . getNodeHeight ( node ) - tinyTime , i ) ; \n\t\t\t\t} \n\t\t\tif ( p [ i ] > maxp ) { \n\t\t\t\tmaxp = p [ i ] ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( maxp < NUM00 ) { \n\t\t\tfor ( $F119 ( i , colourCount ) ) { \n\t\t\t\tp [ i ] *= NUM00 ; \n\t\t\t\t} \n\t\t\tlogNodePartialsRescaling -= Math . log ( NUM00 ) ; \n\t\t\t} \n\t\t} \n\t$F9688 ( nodePartials , node ) = p ; \n\tif ( debugNodePartials ) { \n\t\tprettyPrint ( NUM00 + node . getNumber ( ) + NUM00 , p ) ; \n\t\t} \n\treturn p ; \n\t} \n"}, {"code": "public static int minPathSum $F53007 ( grid ) { \n\tif $F12414 ( grid ) $F1082 int m = grid . length ; \n\t$F26358 ( n , grid ) $F4120 ( rowSum , n ) $F400289 ( rowSum , grid ) for ( $F119 ( col , n ) ) rowSum [ col ] = rowSum [ col - NUM00 ] + grid [ NUM00 ] [ col ] ; \n\tfor ( $F119 ( row , m ) ) { \n\t\trowSum [ NUM00 ] += grid [ row ] [ NUM00 ] ; \n\t\tfor ( $F119 ( col , n ) ) { \n\t\t\trowSum [ col ] = Math . min ( rowSum [ col - NUM00 ] , rowSum [ col ] ) + grid [ row ] [ col ] ; \n\t\t\t} \n\t\t} \n\treturn rowSum [ n - NUM00 ] ; \n\t} \n"}, {"code": "$F43588 ( json , key , value , isValueNumeric , _BOOL , Double , escapeJSON ) "}, {"code": "public Time ( Date time ) { \n\tSimpleTimeZone tz = new SimpleTimeZone ( NUM00 , NUM00 ) ; \n\t$F108456 ( dateF ) dateF . setTimeZone ( tz ) ; \n\tString d = dateF . format ( time ) + NUM00 ; \n\t$F215024 ( year , Integer , d ) if $F19274 ( year ) { \n\t\tthis . time = new DERGeneralizedTime ( d ) ; \n\t\t} \n\telse { \n\t\tthis . time = new DERUTCTime ( d . substring ( NUM00 ) ) ; \n\t\t} \n\t} \n"}, {"code": "public DCheckUpdate ( JFrame parent ) { \n\t$F36748 ( super , parent , Dialog ) initComponents ( ) ; \n\t} \n"}, {"code": "public static Automaton minimizeSimple ( Automaton a ) { \n\t$F87079 ( initialSet ) a = determinizeSimple ( Operations . reverse ( a , initialSet ) , initialSet ) ; \n\t$F725 ( initialSet ) a = determinizeSimple ( Operations . reverse ( a , initialSet ) , initialSet ) ; \n\treturn a ; \n\t} \n"}, {"code": "$F1 public boolean equals ( Object o ) { \n\tif ( this == o ) return _BOOL ; \n\t$F82512 ( o , getClass , _BOOL ) AbstractItem $F5162 that = ( AbstractItem $F5162 ) o ; \n\treturn mIdentifier == that . mIdentifier ; \n\t} \n"}, {"code": "public void addColumn ( Column column ) $F17651 ( column , columns ) "}, {"code": "$F13591 ( str , flags , decode ) "}, {"code": "private boolean checkForNaNs ( NumberVector vec ) { \n\tfor ( int i = NUM00 , d = vec . getDimensionality ( ) ; \n\ti < d ; \n\ti ++ ) { \n\t\t$F42635 ( v , vec , i ) if ( v != v ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void fill ( StringBuilder strb , int offset ) { \n\twhile $F80353 ( strb , offset ) $F84 ( strb ) } \n"}, {"code": "public void openForWrite $F72 throws EventException { \n\tFile f = new File ( ConfigUtils . getInitialPropertyExpanded ( m_address . getPathname ( ) ) ) ; \n\ttry { \n\t\tif $F1906 ( f ) $F88728 ( f ) else { \n\t\t\tLOGGER . info ( NUM00 + m_address . getPathname ( ) ) ; \n\t\t\t} \n\t\t} \n\tcatch ( IOException ioe ) { \n\t\tthrow new EventException ( NUM00 + m_address . getPathname ( ) + NUM00 + ioe ) ; \n\t\t} \n\ttry { \n\t\tm_fos = new FileOutputStream ( f , _BOOL ) ; \n\t\t} \n\tcatch ( FileNotFoundException fnfe ) { \n\t\tthrow new EventException ( NUM00 + m_address . getPathname ( ) + NUM00 + fnfe ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public double calculate_K ( $F2027 x_index , $F1986 x_att , $F2027 y_index , $F1986 y_att ) { \n\treturn ( Math . exp ( gamma * norm2 ( x_index , x_att , y_index , y_att ) ) ) ; \n\t} \n"}, {"code": "$F1 public void close $F72 throws IOException { \n\tThrowable thrown = null ; \n\ttry $F5795 ( flush ) $F268630 ( thrown , e ) try $F881 ( out ) catch ( Throwable e ) { \n\t\t$F13265 ( thrown , e ) } \n\t} \n"}, {"code": "public static void writeFofn ( final File destination , $F40514 ( files ) ) throws IOException { \n\tfinal BufferedWriter bw = new BufferedWriter ( new FileWriter ( destination ) ) ; \n\ttry { \n\t\tfor ( final File file : files ) { \n\t\t\tbw . write ( $F40519 ( wrapArg , file ) ) ; \n\t\t\t$F1769 ( bw ) } \n\t\t$F1206 ( bw ) } \n\t$F3229 ( bw ) } \n"}, {"code": "void markInternalClasses $F72 { \n\tfor ( $F26259 ( i , mClassDefs ) ) { \n\t\tmTypeIds [ mClassDefs [ i ] . classIdx ] . internal = _BOOL ; \n\t\t} \n\tfor ( $F1139 ( i , mTypeIds ) ) { \n\t\tString className = mStrings [ mTypeIds [ i ] . descriptorIdx ] ; \n\t\tif $F1277 ( className ) { \n\t\t\tmTypeIds [ i ] . internal = _BOOL ; \n\t\t\t} \n\t\telse if $F4432 ( className ) { \n\t\t\tmTypeIds [ i ] . internal = _BOOL ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public final double cos $F72 { \n\treturn Math . cos ( this . radians ) ; \n\t} \n"}, {"code": "public static double ssError $F6762 ( predictedValues , targetAttribute ) { \n\tdouble ret = NUM00 ; \n\tfor ( $F1139 ( i , predictedValues ) ) { \n\t\tret += Math . pow ( targetAttribute [ i ] - predictedValues [ i ] , NUM00 ) ; \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "$F1654 ( prefixes ) "}, {"code": "$F31780 ( value , builder , this ) "}, {"code": "public static String timestamp ( DateTime ts ) { \n\treturn Long . toString ( ts . getMillis ( ) / NUM00 ) ; \n\t} \n"}, {"code": "public String consume ( String name , boolean required ) throws ParseException { \n\tif ( name == null ) { \n\t\tif ( content == null && required ) { \n\t\t\tthrow new ParseException ( CoreErrorDomain . ERR . missingRequiredContent ) ; \n\t\t\t} \n\t\tcontentConsumed = _BOOL ; \n\t\treturn content ; \n\t\t} \n\t$F1729 ( value , attrs , name ) if ( value == null ) { \n\t\tif ( required ) { \n\t\t\tParseException pe = new ParseException ( CoreErrorDomain . ERR . missingAttribute ) ; \n\t\t\tpe . setInternalReason ( NUM00 + name + NUM00 ) ; \n\t\t\tthrow pe ; \n\t\t\t} \n\t\t$F1274 } \n\tattrs . remove ( name ) ; \n\treturn value ; \n\t} \n"}, {"code": "public int copy $F5474 ( bytes , at ) { \n\tSystem . arraycopy ( this . bytes , NUM00 , bytes , at , this . length ) ; \n\treturn at + this . length ; \n\t} \n"}, {"code": "public void importKey ( ECKey key ) { \n\t$F790 ( lock ) try { \n\t\tcheckKeyEncryptionStateMatches ( key ) ; \n\t\tif ( hasKey ( key ) ) $F665 importKeyLocked ( key ) ; \n\t\tqueueOnKeysAdded ( ImmutableList . of ( key ) ) ; \n\t\t} \n\t$F796 ( lock ) } \n"}, {"code": "public ConnectionGroupTree ( UserContext userContext , ConnectionGroup root , List < ObjectPermission . Type > permissions ) throws GuacamoleException { \n\tthis . rootAPIGroup = new APIConnectionGroup ( root ) ; \n\tretrievedGroups . put ( root . getIdentifier ( ) , this . rootAPIGroup ) ; \n\tUser self = userContext . self ( ) ; \n\tthis . connectionPermissions = self . getConnectionPermissions ( ) ; \n\tthis . sharingProfilePermissions = self . getSharingProfilePermissions ( ) ; \n\tthis . connectionDirectory = userContext . getConnectionDirectory ( ) ; \n\tthis . connectionGroupDirectory = userContext . getConnectionGroupDirectory ( ) ; \n\tthis . sharingProfileDirectory = userContext . getSharingProfileDirectory ( ) ; \n\taddConnectionGroupDescendants ( Collections . singleton ( root ) , permissions ) ; \n\t} \n"}, {"code": "private boolean containsSingleMetric ( BufferedReader reader ) throws FormatParseException { \n\ttry { \n\t\t$F46282 ( reader ) char firstChar = ( char ) reader . read ( ) ; \n\t\t$F2268 ( reader ) return firstChar == NUM00 ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tthrow new FormatParseException ( NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "public void addButtonPressedListener ( FieldConfigStringButtonInterface listener ) { \n\tif ( buttonPressedListenerList == null ) { \n\t\tbuttonPressedListenerList = new ArrayList < FieldConfigStringButtonInterface > $F72 ; \n\t\t} \n\tbuttonPressedListenerList . add ( listener ) ; \n\t} \n"}, {"code": "private String separeMetaTagsContent ( String content ) { \n\tString result = Utils . pregMatch ( content , Constants . METATAG_CONTENT_PATTERN , NUM00 ) ; \n\treturn htmlDecode ( result ) ; \n\t} \n"}, {"code": "$F1 public void removeColumns ( Column ... columns ) { \n\tfor ( Column c : columns ) $F106 ( columnList , c ) } \n"}, {"code": "private void readServiceConfig $F72 throws $F10643 { \n\t$F144577 ( debug ) $F19771 ( internalToken , AccessController , AdminTokenAction ) serviceSchemaManager = new ServiceSchemaManager ( G11N_SETTINGS_SERVICE_NAME , internalToken ) ; \n\tServiceSchema gsc = serviceSchemaManager . getGlobalSchema ( ) ; \n\trawServiceData = gsc . getAttributeDefaults ( ) ; \n\t} \n"}, {"code": "public void refreshPreferences ( Context context ) { \n\tif ( mEnabledResId != NUM00 ) { \n\t\tfinal SharedPreferences prefs = PreferenceManager . getDefaultSharedPreferences ( context ) ; \n\t\tif ( ! prefs . getBoolean ( context . getString ( mEnabledResId ) , mEnabledDefault ) ) { \n\t\t\tsetTriggerKeys ( Collections . $F17803 $F35890 ) ; \n\t\t\t$F665 } \n\t\t} \n\tsetTriggerKeys ( KeyComboPreference . getKeyCodesForPreference ( context , mAssignedKeysResId ) ) ; \n\t} \n"}, {"code": "void addInheritedTypes ( TypeMirror typeMirror , Types typesUtils ) { \n\tif ( ! CompilerUtils . typeMirrorInCollection ( inheritedTypes , typeMirror , typesUtils ) ) $F207 ( inheritedTypes , typeMirror ) } \n"}, {"code": "public static Histogram multiply ( Histogram x , double y ) { \n\treturn x . modifyEventCounters ( null ) ; \n\t} \n"}, {"code": "public void paint ( Graphics g ) { \n\t$F57400 ( m_from , m_to ) $F157439 ( arrow ) Point from = null ; \n\tPoint to = null ; \n\tif ( isRightTop ( ) ) { \n\t\tfrom = addPoint ( arrow , m_from , SwingConstants . RIGHT , _BOOL ) ; \n\t\tto = addPoint ( arrow , m_to , SwingConstants . TOP , _BOOL ) ; \n\t\t} \n\telse if ( isBottomTop ( ) ) { \n\t\tfrom = addPoint ( arrow , m_from , SwingConstants . BOTTOM , _BOOL ) ; \n\t\tto = addPoint ( arrow , m_to , SwingConstants . TOP , _BOOL ) ; \n\t\t} \n\telse if ( isTopBottom ( ) ) { \n\t\tfrom = addPoint ( arrow , m_from , SwingConstants . TOP , _BOOL ) ; \n\t\tto = addPoint ( arrow , m_to , SwingConstants . BOTTOM , _BOOL ) ; \n\t\t} \n\telse if ( isLeftRight ( ) ) { \n\t\tfrom = addPoint ( arrow , m_from , SwingConstants . LEFT , _BOOL ) ; \n\t\tto = addPoint ( arrow , m_to , SwingConstants . RIGHT , _BOOL ) ; \n\t\t} \n\telse { \n\t\tfrom = addPoint ( arrow , m_from , SwingConstants . RIGHT , _BOOL ) ; \n\t\tto = addPoint ( arrow , m_to , SwingConstants . LEFT , _BOOL ) ; \n\t\t} \n\tif ( ! m_next . isUnconditional ( ) ) { \n\t\tg . setColor ( Color . red ) ; \n\t\tg . fillPolygon ( arrow ) ; \n\t\t} \n\tif ( m_visited ) g . setColor ( Color . green ) ; \n\telse $F129587 ( g , Color ) g . drawPolygon ( arrow ) ; \n\tif ( m_next . isFromSplitAnd ( ) ) { \n\t\tg . setColor ( Color . magenta ) ; \n\t\tg . fillOval ( from . x - NUM00 , from . y - NUM00 , NUM00 , NUM00 ) ; \n\t\t} \n\tif ( m_next . isToJoinAnd ( ) ) { \n\t\tg . setColor ( Color . magenta ) ; \n\t\tg . fillOval ( to . x - NUM00 , to . y - NUM00 , NUM00 , NUM00 ) ; \n\t\t} \n\tif ( m_description != null ) { \n\t\t$F20230 ( g2D , g ) Font font = new Font $F13847 ( Font ) ; \n\t\tif ( m_next . isUnconditional ( ) ) $F129587 ( g2D , Color ) else g2D . setColor ( Color . red ) ; \n\t\tTextLayout layout = new TextLayout ( m_description , font , g2D . getFontRenderContext ( ) ) ; \n\t\tint x = NUM00 ; \n\t\tif ( from . x < to . x ) x = from . x + ( $F27158 ( to , from ) / NUM00 ) ; \n\t\telse x = to . x + ( $F27158 ( from , to ) / NUM00 ) ; \n\t\tint y = NUM00 ; \n\t\tif ( from . y < to . y ) y = from . y + ( $F27159 ( to , from ) / NUM00 ) ; \n\t\telse y = to . y + ( $F27159 ( from , to ) / NUM00 ) ; \n\t\ty -= ( layout . getAscent ( ) - NUM00 ) ; \n\t\tx -= ( layout . getAdvance ( ) / NUM00 ) ; \n\t\t$F26242 ( x ) layout . draw ( g2D , x , y ) ; \n\t\t} \n\t} \n"}, {"code": "public void addCacheParticipants ( Map < UUID , IgniteUuid > allParticipants , Map < UUID , IgniteUuid > addedParticipants ) { \n\tverStore . addParticipants ( allParticipants , addedParticipants ) ; \n\t} \n"}, {"code": "public static String toJSONString ( Map map ) $F82771 ( writer , writeJSONString , map , e ) "}, {"code": "public void printContext ( PrintStream out ) { \n\t$F143477 ( out , getMessage ) out . print ( context ) ; \n\t} \n"}, {"code": "$F1654 ( methods ) "}, {"code": "private void storeRequestId ( String requestId , String key ) $F1717 ( requestIds , requestId , key ) "}, {"code": "private void savepostMni ( String mnipostLocation , String mnipostRespLocation , List manageNameIdList , $F82550 ( objFact ) ) throws JAXBException { \n\tif $F22 ( mnipostLocation ) { \n\t\tManageNameIDServiceElement slsElemPost = objFact . createManageNameIDServiceElement ( ) ; \n\t\tslsElemPost . setBinding ( httpPostBinding ) ; \n\t\tslsElemPost . setLocation ( mnipostLocation ) ; \n\t\tslsElemPost . setResponseLocation ( mnipostRespLocation ) ; \n\t\tmanageNameIdList . add ( slsElemPost ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean goToUpdatePage ( Context context ) { \n\tfinal Uri playStoreUri = Uri . parse ( NUM00 + context . getPackageName ( ) ) ; \n\tFreshAirLog . i ( $F368 ( playStoreUri ) ) ; \n\tfinal Intent playStoreIntent = new Intent ( Intent . ACTION_VIEW , playStoreUri ) ; \n\tfinal PackageManager packageManager = context . getPackageManager ( ) ; \n\tfor ( ResolveInfo resolveInfo : packageManager . queryIntentActivities ( playStoreIntent , NUM00 ) ) { \n\t\tfinal ActivityInfo resolveActivity = resolveInfo . activityInfo ; \n\t\tfinal String resolvePackageName = resolveActivity . packageName ; \n\t\tif $F3057 ( resolvePackageName ) { \n\t\t\t$F2980 ( FreshAirLog ) playStoreIntent . setComponent ( new ComponentName ( resolvePackageName , resolveActivity . name ) ) ; \n\t\t\tcontext . startActivity ( playStoreIntent ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\tFreshAirLog . e ( $F368 ( playStoreUri ) ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public IJavaElement createElement ( ClassScope scope , ICompilationUnit unit , HashSet existingElements , HashMap knownScopes ) { \n\treturn createElement ( scope , scope . referenceContext . sourceStart , unit , existingElements , knownScopes ) ; \n\t} \n"}, {"code": "public static $F3803 toRelativeFiles ( $F1113 VirtualFile root , $F1113 final Collection $F85423 files ) { \n\t$F5 $F37973 ( rc , files ) ; \n\tfor ( VirtualFile file : files ) $F18351 ( rc , relativePath , root , file ) return rc ; \n\t} \n"}, {"code": "synchronized static void ensureSecurityManager $F72 { \n\tif ( System . getSecurityManager ( ) == null ) { \n\t\tSystem . setSecurityManager ( new RMISecurityManager $F72 ) ; \n\t\t} \n\t} \n"}, {"code": "public static BigDecimal rate ( int p_C_CurrencyFrom_ID , int p_C_CurrencyTo_ID , Timestamp p_ConversionDate , int p_C_ConversionType_ID , int p_AD_Client_ID , int p_AD_Org_ID ) throws SQLException { \n\tif ( p_C_CurrencyFrom_ID == p_C_CurrencyTo_ID ) return Adempiere . ONE ; \n\tTimestamp ConversionDate = p_ConversionDate ; \n\t$F35 ( ConversionDate , System ) ConversionDate = Adempiere . trunc ( ConversionDate ) ; \n\tint C_ConversionType_ID = p_C_ConversionType_ID ; \n\tif ( C_ConversionType_ID == NUM00 ) { \n\t\t$F180114 ( sql ) C_ConversionType_ID = Adempiere . getSQLValue ( sql , p_AD_Client_ID ) ; \n\t\t} \n\tBigDecimal rate = null ; \n\tString sql = $F34354 + NUM00 ; \n\t$F3915 ( pstmt , Adempiere , sql ) $F47 ( pstmt , p_C_CurrencyFrom_ID ) $F47 ( pstmt , p_C_CurrencyTo_ID ) $F47 ( pstmt , C_ConversionType_ID ) pstmt . setTimestamp ( NUM00 , ConversionDate ) ; \n\tpstmt . setTimestamp ( NUM00 , ConversionDate ) ; \n\t$F47 ( pstmt , p_AD_Client_ID ) $F47 ( pstmt , p_AD_Org_ID ) $F49 ( rs , pstmt ) if $F1682 ( rs ) { \n\t\trate = rs . getBigDecimal ( NUM00 ) ; \n\t\t} \n\t$F59 ( rs ) $F59 ( pstmt ) $F1275 ( rate ) return rate ; \n\t} \n"}, {"code": "public static Socket doInteraction ( final HttpsURLConnection clientConnection , final ServerSocket serverSocket , final int responseCode , final boolean doAuthentication ) throws Throwable { \n\tclientConnection . setDoInput ( _BOOL ) ; \n\tclientConnection . setConnectTimeout ( TIMEOUT ) ; \n\tclientConnection . setReadTimeout ( TIMEOUT ) ; \n\tServerWork server = new ServerWork ( serverSocket , responseCode , doAuthentication ) ; \n\tClientConnectionWork client = new ClientConnectionWork ( clientConnection ) ; \n\t$F171451 ( executorService , Executors ) try { \n\t\t$F8318 serverFuture = executorService . submit ( server ) ; \n\t\t$F8318 clientFuture = executorService . submit ( client ) ; \n\t\tThrowable t = null ; \n\t\ttry { \n\t\t\t$F171463 ( serverFuture , TimeUnit ) ; \n\t\t\t} \n\t\tcatch ( ExecutionException e ) { \n\t\t\tt = e . getCause ( ) ; \n\t\t\t} \n\t\ttry { \n\t\t\t$F171463 ( clientFuture , TimeUnit ) ; \n\t\t\t} \n\t\tcatch ( ExecutionException e ) { \n\t\t\tif ( t != null ) $F302 ( t ) t = e . getCause ( ) ; \n\t\t\t} \n\t\t$F731 ( t ) } \n\tcatch ( ExecutionException e ) { \n\t\tthrow e . getCause ( ) ; \n\t\t} \n\tfinally $F736 ( executorService ) return server . peerSocket ; \n\t} \n"}, {"code": "public static SnmpEngineId createEngineId ( int port ) throws UnknownHostException { \n\tint suniana = NUM00 ; \n\tInetAddress address = null ; \n\taddress = InetAddress . getLocalHost ( ) ; \n\treturn createEngineId ( address , port , suniana ) ; \n\t} \n"}, {"code": "public static $F38669 parseReferential ( String path ) { \n\tRuleset ruleset = DelphiRulesUtils . buildRuleSetFromXml ( DelphiRulesUtils . getConfigurationFromFile ( path ) ) ; \n\t$F38669 rulesRepository = new $F255887 $F72 ; \n\tfor ( DelphiRule fRule : ruleset . getRules ( ) ) $F3762 ( rulesRepository , createRepositoryRule , fRule ) return rulesRepository ; \n\t} \n"}, {"code": "$F9159 ( logDebug , mSetupDone , _BOOL , mServiceConn , mContext , mDisposed , mService , mPurchaseListener ) "}, {"code": "public org . w3c . dom . Document encryptAndReplaceWSSElements ( org . w3c . dom . Document doc , java . util . Map elmMap , $F9738 ( encDataEncAlg ) , int encDataEncAlgStrength , String certAlias , int kekStrength , $F9738 ( tokenType ) , $F9738 ( providerID ) ) throws EncryptionException $F1337 "}, {"code": "public void addIssue ( int reason , EObject obj , int featureId ) { \n\tissues . add ( new TransformationIssue ( reason , obj , featureId , null ) ) ; \n\t} \n"}, {"code": "public void insertChild ( Node node , int index ) { \n\tnode . detachFromParent ( ) ; \n\tnode . parentNode = this ; \n\ttry { \n\t\tinitChildNodes ( node ) ; \n\t\tchildNodes . add ( index , node ) ; \n\t\t} \n\tcatch ( IndexOutOfBoundsException ignore ) { \n\t\tthrow new LagartoDOMException ( NUM00 + index ) ; \n\t\t} \n\treindexChildren ( ) ; \n\t} \n"}, {"code": "private static $F96 ntlmHash ( final String password ) throws AuthenticationException { \n\ttry { \n\t\tfinal $F96 unicodePassword = password . getBytes ( NUM00 ) ; \n\t\tfinal MD4 md4 = new MD4 $F72 ; \n\t\tmd4 . update ( unicodePassword ) ; \n\t\treturn md4 . getOutput ( ) ; \n\t\t} \n\tcatch ( UnsupportedEncodingException e ) { \n\t\tthrow new AuthenticationException $F11592 ( e ) ; \n\t\t} \n\t} \n"}, {"code": "private boolean betweenZeroAndOne ( final String paramName , final double val ) { \n\tif $F61157 ( val ) { \n\t\tJOptionPane . showMessageDialog ( null , paramName + NUM00 , NUM00 , JOptionPane . WARNING_MESSAGE ) ; \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public abstract String substituteMacros ( String parameterValue , MacroHandler mh ) throws UndefinedParameterError ; \n"}, {"code": "public void powEquals ( double exp ) { \n\tfor ( $F1139 ( i , A ) ) for ( $F179379 ( j , A , i ) ) A [ i ] [ j ] = Math . pow ( A [ i ] [ j ] , exp ) ; \n\t} \n"}, {"code": "private static $F3803 splitCamelCase ( String className ) { \n\tString remaining = className ; \n\t$F10144 ( result ) while $F5973 ( remaining ) { \n\t\tboolean found = _BOOL ; \n\t\tfor ( $F1088 ( i , remaining ) ) { \n\t\t\tif ( $F952 ( Character , remaining , i ) ) { \n\t\t\t\tresult . add ( remaining . substring ( NUM00 , i ) ) ; \n\t\t\t\t$F11978 ( remaining , i ) found = _BOOL ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\tif ( ! found ) { \n\t\t\tresult . add ( remaining ) ; \n\t\t\tremaining = NUM00 ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public static NodeList selectNodeList ( Node doc , String str , NamespaceContext nsctx ) throws XPathException { \n\tXPathFactory xpf = xpathFactoryCache . getInstanceForCurrentThread ( ) ; \n\tXPath xpath = xpf . newXPath ( ) ; \n\txpath . setNamespaceContext ( nsctx ) ; \n\tXPathExpression expr = xpath . compile ( str ) ; \n\treturn $F99893 ( expr , doc , XPathConstants ) ; \n\t} \n"}, {"code": "public ResultEntry ( NondominatedPopulation population , TypedProperties properties ) { \n\tthis ( population , properties == null ? null : properties . getProperties ( ) ) ; \n\t} \n"}, {"code": "private void generateDiscovery $F72 throws SAXException { \n\t$F153269 ( handler , LOCATORS , EMPTY ) generateLocators ( ) ; \n\t$F153271 ( handler , LOCATORS ) } \n"}, {"code": "protected BasicType ( $F20474 type , int sqlType ) { \n\tsuper ( type , sqlType ) ; \n\tcheckNull = ! type . isPrimitive ( ) ; \n\t} \n"}, {"code": "$F1 public void actionPerformed ( ActionEvent e ) $F845 "}, {"code": "public void applyProperties $F72 { \n\tfor ( ParameterType type : allParameterTypes ) { \n\t\tString value = allParameterValues . getProperty ( type . getKey ( ) ) ; \n\t\tParameterService . setParameterValue ( type , value ) ; \n\t\t} \n\t} \n"}, {"code": "private void rotateLeft $F17573 ( root ) { \n\t$F17577 ( left , root ) $F17579 ( pivot , root ) $F17575 ( pivotLeft , pivot ) $F17579 ( pivotRight , pivot ) root . right = pivotLeft ; \n\t$F17581 ( pivotLeft , root ) replaceInParent ( root , pivot ) ; \n\tpivot . left = root ; \n\troot . parent = pivot ; \n\t$F17587 ( root , Math , left , pivotLeft ) $F17592 ( pivot , Math , root , pivotRight ) } \n"}, {"code": "public void add ( ClusterNode newNode ) { \n\tif ( node != null ) { \n\t\t$F216947 ( nodes ) nodes . add ( node ) ; \n\t\tnode = null ; \n\t\t} \n\tnodes . add ( newNode ) ; \n\t} \n"}, {"code": "public boolean checkIfBackupSetExists ( String setName ) { \n\tvalidateNotNullOrEmpty ( setName ) ; \n\ttry { \n\t\tFile $F1897 ( file , getBackupRoot , setName ) ; \n\t\tif $F3428 ( file ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) $F21338 ( log ) return _BOOL ; \n\t} \n"}, {"code": "public static $F806 toQuotedAndCommaSeparatedArray ( String str ) throws IOException { \n\t$F28830 $F31408 ( values ) ; \n\tStreamTokenizer tt = new StreamTokenizer $F33896 ( str ) ; \n\t$F33902 ( tt ) $F33902 ( tt ) tt . wordChars ( NUM00 + NUM00 , NUM00 ) ; \n\ttt . whitespaceChars ( NUM00 , NUM00 ) ; \n\t$F70966 ( tt ) $F70966 ( tt ) while ( tt . nextToken ( ) != StreamTokenizer . TT_EOF ) { \n\t\tswitch ( tt . ttype ) { \n\t\t\tcase StreamTokenizer . TT_WORD : $F1262 $F1262 values . add ( tt . sval ) ; \n\t\t\t$F597 } \n\t\t} \n\t$F14862 ( values ) } \n"}, {"code": "public void writeStringNoCompression ( String str ) throws IOException { \n\tif ( str == null ) $F73598 ( writeInt ) else { \n\t\t$F43187 ( writeInt , str ) for ( $F1088 ( i , str ) ) io . write ( ( byte ) str . charAt ( i ) ) ; \n\t\t} \n\t} \n"}, {"code": "public SmartThresholds parse ( final Resource thresholdFileResource ) throws IOException { \n\tfinal SmartThresholds holder = new SmartThresholds $F72 ; \n\tBufferedReader reader = null ; \n\ttry { \n\t\t$F306749 ( reader , thresholdFileResource ) String line ; \n\t\twhile $F443 ( line , reader ) { \n\t\t\tif $F3106 ( line ) { \n\t\t\t\t$F6542 ( lineInput , line ) holder . addThreshold ( new SmartThreshold ( lineInput ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F14364 ( reader ) return holder ; \n\t} \n"}, {"code": "public void shutdown $F72 { \n\tExecutorService executor = Executors . newScheduledThreadPool ( NUM00 ) ; \n\texecutor . submit ( createShutdown ( NUM00 ) ) ; \n\t} \n"}, {"code": "$F1 public Point drawingToView $F85239 ( p ) { \n\treturn new Point ( ( int ) ( p . x * scaleFactor ) - translation . x , ( int ) ( p . y * scaleFactor ) - translation . y ) ; \n\t} \n"}, {"code": "protected void onConnect $F72 $F845 "}, {"code": "public void addDescriptor ( final SetupDescriptor desc ) $F207 ( descriptors , desc ) "}, {"code": "public static boolean containIP $F14337 ( cidrPrefix , cidrMaskBits , ip ) { \n\tboolean matched = _BOOL ; \n\tint bitsToShift = NUM00 - cidrMaskBits ; \n\tif ( bitsToShift > NUM00 ) { \n\t\tcidrPrefix = cidrPrefix > > bitsToShift ; \n\t\tip = ip > > bitsToShift ; \n\t\tcidrPrefix = cidrPrefix < < bitsToShift ; \n\t\tip = ip < < bitsToShift ; \n\t\t} \n\tif ( cidrPrefix != ip ) { \n\t\tmatched = _BOOL ; \n\t\t} \n\treturn matched ; \n\t} \n"}, {"code": "public static String compileProgressSuccessAction ( String progressSuccessAction ) throws TemplateModelException { \n\tEnvironment env = CommonFtlUtil . getCurrentEnvironment ( ) ; \n\treturn compileProgressSuccessAction ( progressSuccessAction , ContextFtlUtil . getRequest ( env ) , ContextFtlUtil . getResponse ( env ) ) ; \n\t} \n"}, {"code": "public static String join ( String separator , float ... elements ) { \n\t$F13363 ( elements ) List $F7482 list = new ArrayList $F7482 ( elements . length ) ; \n\tfor ( Float elem : elements ) $F207 ( list , elem ) return join ( separator , list ) ; \n\t} \n"}, {"code": "public static void putUnsignedByte ( ByteBuffer bb , short v ) { \n\t$F42832 ( bb , v ) } \n"}, {"code": "public static int numOfParameters ( String desc ) { \n\tint n = NUM00 ; \n\tint i = NUM00 ; \n\tfor ( $F589 ) { \n\t\t$F1280 ( c , desc , i ) if ( c == NUM00 ) $F597 while ( c == NUM00 ) $F373845 ( c , desc , i ) if ( c == NUM00 ) { \n\t\t\ti = desc . indexOf ( NUM00 , i ) + NUM00 ; \n\t\t\tif ( i <= NUM00 ) throw new IndexOutOfBoundsException $F580 ; \n\t\t\t} \n\t\telse ++ i ; \n\t\t++ n ; \n\t\t} \n\treturn n ; \n\t} \n"}, {"code": "$F1 public Trie optimize ( Trie orig ) { \n\tList $F11616 cmds = orig . cmds ; \n\t$F99479 $F204 ( rows ) ; \n\t$F99479 orows = orig . rows ; \n\tint remap [ ] = $F2315 ( orows ) ; \n\tfor ( $F5373 ( j , orows ) ) { \n\t\tRow now = new Remap ( orows . get ( j ) , remap ) ; \n\t\tboolean merged = _BOOL ; \n\t\tfor ( $F2277 ( i , rows ) ) { \n\t\t\tRow q = merge ( now , rows . get ( i ) ) ; \n\t\t\tif ( q != null ) { \n\t\t\t\trows . set ( i , q ) ; \n\t\t\t\tmerged = _BOOL ; \n\t\t\t\tremap [ j ] = i ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\tif ( merged == _BOOL ) { \n\t\t\tremap [ j ] = rows . size ( ) ; \n\t\t\trows . add ( now ) ; \n\t\t\t} \n\t\t} \n\tint root = remap [ orig . root ] ; \n\t$F99493 ( Arrays , remap ) rows = removeGaps ( root , rows , new ArrayList $F33449 $F72 , remap ) ; \n\treturn new Trie ( orig . forward , remap [ root ] , cmds , rows ) ; \n\t} \n"}, {"code": "public boolean isAllDenied $F72 { \n\tint count = NUM00 ; \n\tfor ( $F2277 ( i , mPerms ) ) { \n\t\tif ( $F67701 ( mPerms , mUserPermission , i ) == PackageManager . PERMISSION_DENIED ) count ++ ; \n\t\t} \n\treturn count == mPerms . size ( ) ; \n\t} \n"}, {"code": "public String toStringKey $F72 { \n\tString result ; \n\tint i ; \n\tresult = NUM00 + NUM00 ; \n\tfor ( $F95978 ( i , getColCount ) ) { \n\t\t$F324879 ( getColHidden , i ) result += NUM00 + NUM00 + ( i + NUM00 ) + NUM00 + NUM00 + removeFilterName ( m_ColNames [ i ] ) + NUM00 + NUM00 ; \n\t\t} \n\tresult += NUM00 ; \n\treturn result ; \n\t} \n"}, {"code": "private DateTimeFormatter toFormatter ( Locale locale , ResolverStyle resolverStyle , Chronology chrono ) { \n\t$F10578 ( Objects , locale ) while ( active . parent != null ) $F5795 ( optionalEnd ) CompositePrinterParser pp = new CompositePrinterParser ( printerParsers , _BOOL ) ; \n\treturn new DateTimeFormatter ( pp , locale , DecimalStyle . STANDARD , resolverStyle , null , chrono , null ) ; \n\t} \n"}, {"code": "protected void waitForExternalStoreMount $F72 throws Exception { \n\t$F139156 ( extStorageState , Environment ) int currentWaitTime = NUM00 ; \n\twhile ( ! extStorageState . equals ( Environment . MEDIA_MOUNTED ) ) { \n\t\t$F1594 ( Log , LOG_TAG ) currentWaitTime = timeoutWait ( currentWaitTime , DEFAULT_WAIT_POLL_TIME , DEFAULT_MAX_WAIT_TIME , NUM00 ) ; \n\t\textStorageState = Environment . getExternalStorageState ( ) ; \n\t\t} \n\t} \n"}, {"code": "public final void push ( Node value ) { \n\tint ff = m_firstFree ; \n\tif $F11078 ( ff , m_mapSize ) { \n\t\tif ( null == m_map ) $F132454 ( m_map , m_blocksize , m_mapSize ) else $F132458 ( m_mapSize , m_blocksize , System , m_map , newMap , ff ) } \n\tm_map [ ff ] = value ; \n\tff ++ ; \n\tm_firstFree = ff ; \n\t} \n"}, {"code": "public boolean uploadAndInstallApk ( $F1113 IDevice device , $F1113 String packageName , $F1113 File localFile , $F1113 LaunchStatus launchStatus ) { \n\tif ( ! needsInstall ( device , localFile , packageName ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tString remotePath = NUM00 + packageName ; \n\tmyPrinter . stdout ( NUM00 + localFile + NUM00 + remotePath ) ; \n\ttry { \n\t\tdevice . pushFile ( localFile . getPath ( ) , remotePath ) ; \n\t\tboolean installed = installApp ( device , remotePath , packageName , launchStatus ) ; \n\t\tif ( installed ) { \n\t\t\tmyInstalledApkCache . setInstalled ( device , localFile , packageName ) ; \n\t\t\t} \n\t\treturn installed ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tmyPrinter . stderr ( e . toString ( ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public static ByteArrayList readAsBytes ( InputStream is ) throws IOException { \n\tByteArrayList buf = new ByteArrayList $F72 ; \n\t$F12496 ( b ) int nread = - NUM00 ; \n\twhile $F42482 ( nread , is , b ) { \n\t\tbuf . add ( b , NUM00 , nread ) ; \n\t\t} \n\treturn buf ; \n\t} \n"}, {"code": "public static int uninstallSilent ( Context context , String packageName ) $F19580 ( uninstallSilent , context , packageName , _BOOL ) "}, {"code": "public void open ( final $F2469 list , final int position ) { \n\tlaunchPlayerActivity = _BOOL ; \n\tsynchronized ( this ) { \n\t\tif ( mShuffleMode == SHUFFLE_AUTO ) { \n\t\t\tmShuffleMode = SHUFFLE_NORMAL ; \n\t\t\t} \n\t\tfinal long oldId = getAudioId ( ) ; \n\t\t$F18832 ( listlength , list ) boolean newlist = _BOOL ; \n\t\tif ( mPlayListLen == listlength ) { \n\t\t\tnewlist = _BOOL ; \n\t\t\tfor ( $F119 ( i , listlength ) ) { \n\t\t\t\tif $F14614 ( list , i , mPlayList ) $F3468 ( newlist , _BOOL ) } \n\t\t\t} \n\t\tif ( newlist ) { \n\t\t\taddToPlayList ( list , - NUM00 ) ; \n\t\t\tnotifyChange ( QUEUE_CHANGED ) ; \n\t\t\t} \n\t\tif ( position >= NUM00 ) { \n\t\t\tmPlayPos = position ; \n\t\t\t} \n\t\telse { \n\t\t\tmPlayPos = mShuffler . nextInt ( mPlayListLen ) ; \n\t\t\t} \n\t\t$F725 ( mHistory ) openCurrentAndNext ( ) ; \n\t\tif ( oldId != getAudioId ( ) ) { \n\t\t\tnotifyChange ( META_CHANGED ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public Builder names $F74419 ( names ) { \n\treturn names ( Arrays . asList ( names ) ) ; \n\t} \n"}, {"code": "public void scheduleAtFixedRate $F61001 ( task , when , period ) { \n\t$F61005 ( period , when ) $F61009 ( delay , when , System ) scheduleImpl ( task , delay , period , _BOOL ) ; \n\t} \n"}, {"code": "public void testNegativeReverseStepByOneWithClosure $F72 { \n\t$F102316 ( callLog ) $F305363 ( closure , callLog ) $F271415 ( range , createRange ) range . step ( - NUM00 , closure ) ; \n\t$F153255 ( assertEquals , callLog ) $F242733 ( iter , callLog ) for ( $F34659 ( i ) ) $F271421 ( assertEquals , createValue , i , iter ) } \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "public static BigDecimal normalizeDecimalValue ( BigDecimal bigDecimal , int allowedPrecision ) { \n\tif ( bigDecimal . precision ( ) > allowedPrecision ) $F1337 return bigDecimal ; \n\t} \n"}, {"code": "protected static Node deserializeString ( String doc ) { \n\ttry { \n\t\t$F161688 ( reader , doc ) StreamSource source = new StreamSource ( reader ) ; \n\t\tDOMResult result = new DOMResult $F72 ; \n\t\t$F2218 ( tf , TransformerFactory ) $F94102 ( transformer , tf ) transformer . setOutputProperty ( OutputKeys . ENCODING , DEFAULT_ENCODING ) ; \n\t\ttransformer . setOutputProperty ( OutputKeys . INDENT , DEFAULT_INDENT ) ; \n\t\ttransformer . transform ( source , result ) ; \n\t\treturn result . getNode ( ) ; \n\t\t} \n\tcatch ( Throwable e ) $F81306 ( log , Level , e ) $F1274 } \n"}, {"code": "public static String append ( final CharSequence url , final Object ... params ) { \n\t$F52199 ( baseUrl , url ) $F44432 ( params , baseUrl ) if $F132130 ( params ) $F824 $F94214 ( result , baseUrl ) addPathSeparator ( baseUrl , result ) ; \n\taddParamPrefix ( baseUrl , result ) ; \n\tObject value ; \n\t$F13031 ( result , params ) $F84 ( result ) value = params [ NUM00 ] ; \n\t$F208830 ( value , result ) for ( $F24429 ( i , params ) ) { \n\t\t$F84 ( result ) $F6939 ( result , params , i ) $F84 ( result ) value = params [ i + NUM00 ] ; \n\t\t$F208830 ( value , result ) } \n\t$F92 ( result ) } \n"}, {"code": "public void sendEventToAgent ( final String event ) { \n\tsynchronized ( eventSocket ) $F7523 ( eventWriter , event ) } \n"}, {"code": "private void applyJMSObjects ( $F140617 ( filters ) ) { \n\t$F29429 ( writer ) $F80496 ( printWriter , writer ) $F21416 ( printWriter ) for ( String str : getQueueList ( ) ) $F101061 ( printWriter , str ) for ( String str : getTopicList ( ) ) $F101061 ( printWriter , str ) $F108920 ( filters , writer ) } \n"}, {"code": "$F1 public Revision next $F72 { \n\ttry { \n\t\tint revCount , articleID ; \n\t\t$F55 ( revCount , result ) $F55 ( articleID , result ) if ( articleID != this . currentArticleID ) { \n\t\t\tthis . currentRevCounter = NUM00 ; \n\t\t\tthis . currentArticleID = articleID ; \n\t\t\t} \n\t\tif ( revCount - NUM00 != this . currentRevCounter ) { \n\t\t\tlogger . error ( NUM00 + NUM00 + articleID + NUM00 + result . getInt ( NUM00 ) + NUM00 + result . getInt ( NUM00 ) + NUM00 + ( this . currentRevCounter + NUM00 ) ) ; \n\t\t\tthis . currentRevCounter = revCount ; \n\t\t\tthis . previousRevision = null ; \n\t\t\t$F1274 } \n\t\tthis . currentRevCounter = revCount ; \n\t\tthis . primaryKey = result . getInt ( NUM00 ) ; \n\t\tRevision revision = new Revision ( revCount ) ; \n\t\trevision . setPrimaryKey ( this . primaryKey ) ; \n\t\tif ( ! shouldLoadRevisionText ) { \n\t\t\tString currentRevision ; \n\t\t\tDiff diff ; \n\t\t\tRevisionDecoder decoder = new RevisionDecoder ( config . getCharacterSet ( ) ) ; \n\t\t\tif ( binaryData ) { \n\t\t\t\tdecoder . setInput ( result . getBinaryStream ( NUM00 ) , _BOOL ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tdecoder . setInput ( result . getString ( NUM00 ) ) ; \n\t\t\t\t} \n\t\t\tdiff = decoder . decode ( ) ; \n\t\t\ttry { \n\t\t\t\tcurrentRevision = diff . buildRevision ( previousRevision ) ; \n\t\t\t\t} \n\t\t\tcatch ( Exception e ) { \n\t\t\t\tthis . previousRevision = null ; \n\t\t\t\tlogger . error ( NUM00 + NUM00 + result . getInt ( NUM00 ) + NUM00 + result . getInt ( NUM00 ) + NUM00 + result . getInt ( NUM00 ) + NUM00 ) ; \n\t\t\t\t$F1274 } \n\t\t\tpreviousRevision = currentRevision ; \n\t\t\trevision . setRevisionText ( currentRevision ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif ( revApi == null ) { \n\t\t\t\trevApi = new RevisionApi ( config ) ; \n\t\t\t\t} \n\t\t\trevision . setRevisionApi ( revApi ) ; \n\t\t\t} \n\t\trevision . setRevisionID ( result . getInt ( NUM00 ) ) ; \n\t\trevision . setArticleID ( articleID ) ; \n\t\trevision . setTimeStamp ( new Timestamp ( result . getLong ( NUM00 ) ) ) ; \n\t\trevision . setFullRevisionID ( result . getInt ( NUM00 ) ) ; \n\t\trevision . setContributorName ( result . getString ( NUM00 ) ) ; \n\t\trevision . setContributorId ( result . getInt ( NUM00 ) ) ; \n\t\trevision . setComment ( result . getString ( NUM00 ) ) ; \n\t\trevision . setMinor ( result . getBoolean ( NUM00 ) ) ; \n\t\trevision . setContributorIsRegistered ( result . getBoolean ( NUM00 ) ) ; \n\t\treturn revision ; \n\t\t} \n\tcatch ( DecodingException e ) $F9491 ( e ) catch ( SQLException e ) $F9491 ( e ) $F12153 ( e ) catch ( WikiApiException e ) $F9491 ( e ) } \n"}, {"code": "public void addSelectionColumn ( GridField mField ) { \n\tlog . config ( mField . getHeader ( ) ) ; \n\tint displayLength = mField . getDisplayLength ( ) ; \n\tif ( displayLength <= NUM00 || displayLength > FIELDLENGTH ) mField . setDisplayLength ( FIELDLENGTH ) ; \n\telse displayLength = NUM00 ; \n\tWEditor editor = null ; \n\tLabel label = null ; \n\tRow panel = new Row $F72 ; \n\tcontentSimpleRows . appendChild ( panel ) ; \n\tif ( mField . isRange ( ) ) { \n\t\tHbox box = new Hbox $F72 ; \n\t\teditor = WebEditorFactory . getEditor ( mField , _BOOL ) ; \n\t\tlabel = editor . getLabel ( ) ; \n\t\teditor . setMandatory ( _BOOL ) ; \n\t\teditor . setReadWrite ( _BOOL ) ; \n\t\teditor . dynamicDisplay ( ) ; \n\t\tComponent fieldLabel = editor . getComponent ( ) ; \n\t\tbox . appendChild ( editor . getComponent ( ) ) ; \n\t\trangeFirstEditor . add ( mField . getColumnName ( ) ) ; \n\t\tWEditor toRangeEditor = WebEditorFactory . getEditor ( mField , _BOOL ) ; \n\t\ttoRangeEditor . setMandatory ( _BOOL ) ; \n\t\ttoRangeEditor . setReadWrite ( _BOOL ) ; \n\t\ttoRangeEditor . dynamicDisplay ( ) ; \n\t\tm_sEditors2 . add ( toRangeEditor ) ; \n\t\tLabel separator = new Label $F580 ; \n\t\tbox . appendChild ( separator ) ; \n\t\tComponent fieldLabel1 = toRangeEditor . getComponent ( ) ; \n\t\tbox . appendChild ( toRangeEditor . getComponent ( ) ) ; \n\t\tif ( displayLength > NUM00 ) mField . setDisplayLength ( displayLength ) ; \n\t\tif ( isTwoColumns ) { \n\t\t\tif ( ! isPair ) panel = new Row $F72 ; \n\t\t\t} \n\t\telse panel = new Row $F72 ; \n\t\tpanel . appendChild ( LayoutUtils . makeRightAlign ( label ) ) ; \n\t\tpanel . appendChild ( box ) ; \n\t\tfieldLabel . addEventListener ( Events . ON_OK , this ) ; \n\t\tfieldLabel1 . addEventListener ( Events . ON_OK , this ) ; \n\t\t} \n\telse { \n\t\teditor = WebEditorFactory . getEditor ( mField , _BOOL ) ; \n\t\tlabel = editor . getLabel ( ) ; \n\t\teditor . setMandatory ( _BOOL ) ; \n\t\teditor . setReadWrite ( _BOOL ) ; \n\t\teditor . dynamicDisplay ( ) ; \n\t\tComponent fieldLabel = editor . getComponent ( ) ; \n\t\tif ( displayLength > NUM00 ) mField . setDisplayLength ( displayLength ) ; \n\t\tpanel . appendChild ( LayoutUtils . makeRightAlign ( label ) ) ; \n\t\tpanel . appendChild ( fieldLabel ) ; \n\t\tfieldLabel . addEventListener ( Events . ON_OK , this ) ; \n\t\t$F722 ( m_sEditors2 ) } \n\tm_sEditors . add ( editor ) ; \n\t} \n"}, {"code": "public void index ( Iterator tuples , String field ) { \n\twhile $F2921 ( tuples ) { \n\t\tTuple t = ( Tuple ) tuples . next ( ) ; \n\t\tindex ( t , field ) ; \n\t\t} \n\t} \n"}, {"code": "public final static void closeEL ( final OutputStream os ) { \n\ttry $F1823 ( os ) catch ( final Throwable e ) $F845 } \n"}, {"code": "public void addSearchListener ( SearchListener l ) $F207 ( m_SearchListeners , l ) "}, {"code": "public boolean isSingleAttributeContainer $F72 { \n\treturn _BOOL ; \n\t} \n"}, {"code": "public Process executeAsync ( final CommandLine command , $F2540 ( environment ) ) throws IOException { \n\tif $F271542 ( workingDirectory ) $F124393 ( workingDirectory ) return executeInternal ( command , environment , workingDirectory , streamHandler , null ) ; \n\t} \n"}, {"code": "public CacheSpan touch $F72 { \n\t$F657 ( now , System ) File newCacheFile = getCacheFileName ( file . getParentFile ( ) , key , position , now ) ; \n\tfile . renameTo ( newCacheFile ) ; \n\treturn CacheSpan . createCacheEntry ( key , position , now , newCacheFile ) ; \n\t} \n"}, {"code": "$F52843 ( packed , map , i , j , count , value ) "}, {"code": "public void open ( File file ) throws IOException { \n\tcheckAWTPermission ( ) ; \n\tcheckExec ( ) ; \n\tcheckActionSupport ( Action . OPEN ) ; \n\tcheckFileValidation ( file ) ; \n\tpeer . open ( file ) ; \n\t} \n"}, {"code": "public static String convertISO8601DurationToNormalTime ( String isoTime ) { \n\t$F153364 ( formattedTime ) if ( $F63172 ( isoTime ) && isoTime . contains ( NUM00 ) ) { \n\t\tString hours = $F106856 ( isoTime ) ; \n\t\tString minutes = $F106856 ( isoTime ) ; \n\t\tString seconds = $F106856 ( isoTime ) ; \n\t\tformattedTime = hours + NUM00 + formatTo2Digits ( minutes ) + NUM00 + formatTo2Digits ( seconds ) ; \n\t\t} \n\telse if ( $F49413 ( isoTime ) && isoTime . contains ( NUM00 ) && isoTime . contains ( NUM00 ) ) { \n\t\tString minutes = $F106856 ( isoTime ) ; \n\t\tString seconds = $F106856 ( isoTime ) ; \n\t\tformattedTime = minutes + NUM00 + formatTo2Digits ( seconds ) ; \n\t\t} \n\telse if ( isoTime . contains ( NUM00 ) && $F49413 ( isoTime ) && isoTime . contains ( NUM00 ) ) { \n\t\tString hours = $F106856 ( isoTime ) ; \n\t\tString seconds = $F106856 ( isoTime ) ; \n\t\tformattedTime = hours + NUM00 + formatTo2Digits ( seconds ) ; \n\t\t} \n\telse if ( $F63172 ( isoTime ) && $F49413 ( isoTime ) ) { \n\t\tString hours = $F106856 ( isoTime ) ; \n\t\tString minutes = $F106856 ( isoTime ) ; \n\t\tformattedTime = hours + NUM00 + formatTo2Digits ( minutes ) + NUM00 ; \n\t\t} \n\telse if ( $F49413 ( isoTime ) && $F49413 ( isoTime ) && isoTime . contains ( NUM00 ) ) { \n\t\tString seconds = $F106856 ( isoTime ) ; \n\t\tformattedTime = NUM00 + formatTo2Digits ( seconds ) ; \n\t\t} \n\telse if ( $F49413 ( isoTime ) && isoTime . contains ( NUM00 ) && $F49413 ( isoTime ) ) { \n\t\tString minutes = $F106856 ( isoTime ) ; \n\t\tformattedTime = minutes + NUM00 ; \n\t\t} \n\telse if ( isoTime . contains ( NUM00 ) && $F49413 ( isoTime ) && $F49413 ( isoTime ) ) { \n\t\tString hours = $F106856 ( isoTime ) ; \n\t\tformattedTime = hours + NUM00 ; \n\t\t} \n\treturn formattedTime ; \n\t} \n"}, {"code": "$F1 public void toggleSelection ( T photo ) { \n\tif $F105 ( selectedPhotos , photo ) $F106 ( selectedPhotos , photo ) else $F207 ( selectedPhotos , photo ) } \n"}, {"code": "protected void preTick $F72 $F845 "}, {"code": "public byte map ( byte src ) { \n\tchar c = map ( ( char ) src ) ; \n\tif ( c < Byte . MIN_VALUE || c > Byte . MAX_VALUE ) $F1083 return ( byte ) c ; \n\t} \n"}, {"code": "$F73303 ( axis , trans , prevImageSize , imageSize , prevViewSize , viewSize , drawableSize , m , Matrix , percentage , Math ) "}, {"code": "public Object produceEvent $F72 throws InvocationTargetException { \n\tif ( ! valid ) { \n\t\tthrow new IllegalStateException ( toString ( ) + NUM00 ) ; \n\t\t} \n\ttry { \n\t\treturn method . invoke ( target ) ; \n\t\t} \n\t$F180169 ( e ) catch ( InvocationTargetException e ) { \n\t\tif ( e . getCause ( ) instanceof Error ) { \n\t\t\tthrow ( Error ) e . getCause ( ) ; \n\t\t\t} \n\t\tthrow e ; \n\t\t} \n\t} \n"}, {"code": "public String wrapIfKeywordOrBuiltIn ( String name ) { \n\tif $F105 ( KEYWORD_BUILT_IN_SET , name ) $F70142 ( name ) return name ; \n\t} \n"}, {"code": "public IssueMatcher add $F72 { \n\tIssueMatcher issueMatcher = new IssueMatcher $F72 ; \n\tissueMatchers . add ( issueMatcher ) ; \n\treturn issueMatcher ; \n\t} \n"}, {"code": "private $F4203 InjectScope $F4203 findScope ( AnnotatedElement annElement ) { \n\tfor ( Annotation ann : annElement . getAnnotations ( ) ) { \n\t\t$F26425 annType = ann . annotationType ( ) ; \n\t\tif ( annType . isAnnotationPresent ( Scope . class ) ) { \n\t\t\tSupplier < InjectScope $F4203 > scopeGen = ( Supplier ) _scopeMap . get ( annType ) ; \n\t\t\tif ( scopeGen != null ) $F1522 ( scopeGen ) else { \n\t\t\t\tlog . fine ( L . l ( NUM00 , annType . getSimpleName ( ) ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn new InjectScopeFactory $F200 $F72 ; \n\t} \n"}, {"code": "private static native $F2027 RegOpenKey ( int hKey , $F96 subKey , int securityMask ) ; \n"}, {"code": "public void removePropertyChangeListener ( IPropertyChangeListener listener ) $F106 ( listeners , listener ) "}, {"code": "$F1 public int previous $F72 { \n\tCharacterIterator text = getText ( ) ; \n\tif ( current ( ) == text . getBeginIndex ( ) ) { \n\t\treturn BreakIterator . DONE ; \n\t\t} \n\tint start = current ( ) ; \n\tint lastResult = cachedLastKnownBreak ; \n\tif ( lastResult >= start || lastResult <= BreakIterator . DONE ) { \n\t\tgetPrevious ( ) ; \n\t\tlastResult = handlePrevious ( ) ; \n\t\t} \n\telse { \n\t\ttext . setIndex ( lastResult ) ; \n\t\t} \n\tint result = lastResult ; \n\twhile ( result != BreakIterator . DONE && result < start ) { \n\t\tlastResult = result ; \n\t\tresult = handleNext ( ) ; \n\t\t} \n\ttext . setIndex ( lastResult ) ; \n\tcachedLastKnownBreak = lastResult ; \n\treturn lastResult ; \n\t} \n"}, {"code": "public DeferredImageReplacedElement ( ImageResource imageResource , RepaintListener repaintListener , int w , int h ) { \n\tthis . _imageResource = imageResource ; \n\t_loaded = _BOOL ; \n\tthis . repaintListener = repaintListener ; \n\tif $F96093 ( w , h ) { \n\t\t_doScaleImage = _BOOL ; \n\t\t_targetHeight = NUM00 ; \n\t\t_targetWidth = NUM00 ; \n\t\t} \n\telse { \n\t\t_doScaleImage = _BOOL ; \n\t\t_targetHeight = Math . max ( NUM00 , h ) ; \n\t\t_targetWidth = Math . max ( NUM00 , w ) ; \n\t\t} \n\t_image = ImageUtil . createCompatibleBufferedImage ( _targetWidth , _targetHeight ) ; \n\t} \n"}, {"code": "public boolean startsWith ( Name n ) { \n\tif ( n instanceof CompoundName ) { \n\t\treturn ( impl . startsWith ( n . size ( ) , n . getAll ( ) ) ) ; \n\t\t} \n\telse { \n\t\treturn _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public ParameterizedGenericMethodBinding ( MethodBinding originalMethod , TypeBinding [ ] typeArguments , LookupEnvironment environment ) { \n\tthis . environment = environment ; \n\tthis . modifiers = originalMethod . modifiers ; \n\tthis . selector = originalMethod . selector ; \n\tthis . declaringClass = originalMethod . declaringClass ; \n\tthis . typeVariables = Binding . NO_TYPE_VARIABLES ; \n\tthis . typeArguments = typeArguments ; \n\tthis . isRaw = _BOOL ; \n\tthis . tagBits = originalMethod . tagBits ; \n\tthis . originalMethod = originalMethod ; \n\tthis . parameters = Scope . substitute ( this , originalMethod . parameters ) ; \n\tthis . returnType = Scope . substitute ( this , originalMethod . returnType ) ; \n\tthis . thrownExceptions = Scope . substitute ( this , originalMethod . thrownExceptions ) ; \n\tif ( this . thrownExceptions == null ) this . thrownExceptions = Binding . NO_EXCEPTIONS ; \n\tcheckMissingType : { \n\t\tif ( ( this . tagBits & TagBits . HasMissingType ) != NUM00 ) break checkMissingType ; \n\t\tif ( ( this . returnType . tagBits & TagBits . HasMissingType ) != NUM00 ) { \n\t\t\tthis . tagBits |= TagBits . HasMissingType ; \n\t\t\tbreak checkMissingType ; \n\t\t\t} \n\t\tfor ( int i = NUM00 , max = this . parameters . length ; \n\t\ti < max ; \n\t\ti ++ ) { \n\t\t\tif ( ( this . parameters [ i ] . tagBits & TagBits . HasMissingType ) != NUM00 ) { \n\t\t\t\tthis . tagBits |= TagBits . HasMissingType ; \n\t\t\t\tbreak checkMissingType ; \n\t\t\t\t} \n\t\t\t} \n\t\tfor ( int i = NUM00 , max = this . thrownExceptions . length ; \n\t\ti < max ; \n\t\ti ++ ) { \n\t\t\tif ( ( this . thrownExceptions [ i ] . tagBits & TagBits . HasMissingType ) != NUM00 ) { \n\t\t\t\tthis . tagBits |= TagBits . HasMissingType ; \n\t\t\t\tbreak checkMissingType ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tthis . wasInferred = _BOOL ; \n\t} \n"}, {"code": "public void testInvokeAll5 $F72 throws Throwable { \n\t$F25236 ( e ) PoolCleaner cleaner = null ; \n\ttry { \n\t\tcleaner = cleaner ( e ) ; \n\t\t$F25247 ( l ) $F25251 ( l ) $F25251 ( l ) List < $F171452 > futures = e . invokeAll ( l ) ; \n\t\t$F70108 ( assertEquals , futures ) for ( $F171452 future : futures ) assertSame ( TEST_ <missing ';'> NUM00 , future . get ( ) ) ; \n\t\t} \n\t$F14364 ( cleaner ) } \n"}, {"code": "public InternalListener ( final ConfigManager configFile ) $F6988 ( this , configFile ) "}, {"code": "public $F96 sign $F97 ( hash ) { \n\tECDSASigner signer = new ECDSASigner ( new HMacDSAKCalculator ( new SHA256Digest $F72 ) ) ; \n\tsigner . init ( _BOOL , new ECPrivateKeyParameters ( priv , domain ) ) ; \n\t$F81942 signature = signer . generateSignature ( hash ) ; \n\t$F1538 ( baos ) try { \n\t\tDERSequenceGenerator seq = new DERSequenceGenerator ( baos ) ; \n\t\tseq . addObject ( new ASN1Integer ( signature [ NUM00 ] ) ) ; \n\t\tseq . addObject ( new ASN1Integer ( toCanonicalS ( signature [ NUM00 ] ) ) ) ; \n\t\t$F59 ( seq ) $F11316 ( baos ) } \n\t$F29052 $F1274 } \n"}, {"code": "public TimePeriod ( Date startTime , Date endTime ) { \n\tif ( startTime != null && endTime != null && ! endTime . after ( startTime ) ) $F20855 ( endTime , startTime ) this . startTime = startTime ; \n\tthis . endTime = endTime ; \n\t} \n"}, {"code": "JMenu createEditMenu $F72 { \n\t$F132272 ( editMenu ) editMenu . add ( actionManager . getCutAction ( ) ) ; \n\teditMenu . add ( actionManager . getCopyAction ( ) ) ; \n\teditMenu . add ( actionManager . getPasteAction ( ) ) ; \n\teditMenu . add ( actionManager . getDeleteAction ( ) ) ; \n\t$F55657 ( editMenu ) editMenu . add ( actionManager . getClearSourceNeuronsAction ( ) ) ; \n\teditMenu . add ( actionManager . getSetSourceNeuronsAction ( ) ) ; \n\teditMenu . add ( actionManager . getConnectionMenu ( ) ) ; \n\teditMenu . add ( actionManager . getAddSynapseGroupAction ( ) ) ; \n\t$F55657 ( editMenu ) editMenu . add ( actionManager . getRandomizeObjectsAction ( ) ) ; \n\teditMenu . add ( actionManager . getShowAdjustSynapsesDialog ( ) ) ; \n\t$F55657 ( editMenu ) editMenu . add ( actionManager . getLayoutMenu ( ) ) ; \n\teditMenu . add ( actionManager . getGroupMenu ( ) ) ; \n\t$F55657 ( editMenu ) $F3876 ( editMenu , createAlignMenu ) $F3876 ( editMenu , createSpacingMenu ) $F55657 ( editMenu ) editMenu . add ( actionManager . getSetNeuronPropertiesAction ( ) ) ; \n\teditMenu . add ( actionManager . getSetSynapsePropertiesAction ( ) ) ; \n\t$F55657 ( editMenu ) $F3876 ( editMenu , createSelectionMenu ) return editMenu ; \n\t} \n"}, {"code": "public void removeHistoryChangedListener ( HistoryChangedListener l ) $F106 ( m_HistoryChangedListeners , l ) "}, {"code": "public void currentState ( long state , Model currentModel ) { \n\tcurrentState = state ; \n\tif ( loggers != null ) { \n\t\tfor ( Logger logger : loggers ) { \n\t\t\tlogger . log ( state ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public boolean isBOM $F72 { \n\treturn m_isBOM ; \n\t} \n"}, {"code": "public boolean isSigned $F72 { \n\treturn signed ; \n\t} \n"}, {"code": "public Object parseText ( String text ) { \n\t$F20313 ( text ) return parse ( new LineColumnReader $F33896 ( text ) ) ; \n\t} \n"}, {"code": "$F1654 ( parts ) "}, {"code": "protected $F4203 Database makeSimpleDatabase ( String filename , int expectedSize , ListParameterization params , $F63826 ( filters ) ) { \n\ttry ( InputStream is = open ( filename ) ) { \n\t\tList < ObjectFilter > $F204 ( filterlist ) ; \n\t\tfilterlist . add ( new FixedDBIDsFilter $F989 ) ; \n\t\tif ( filters != null ) { \n\t\t\tfor ( $F6969 filtercls : filters ) { \n\t\t\t\tObjectFilter filter = ClassGenericsUtil . parameterizeOrAbort ( filtercls , params ) ; \n\t\t\t\tfilterlist . add ( filter ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tNumberVectorLabelParser < DoubleVector > parser = new NumberVectorLabelParser $F200 ( DoubleVector . FACTORY ) ; \n\t\tInputStreamDatabaseConnection dbc = new InputStreamDatabaseConnection ( is , filterlist , parser ) ; \n\t\tparams . addParameter ( AbstractDatabase . Parameterizer . DATABASE_CONNECTION_ID , dbc ) ; \n\t\tDatabase db = ClassGenericsUtil . parameterizeOrAbort ( StaticArrayDatabase . class , params ) ; \n\t\ttestParameterizationOk ( params ) ; \n\t\t$F21883 ( db ) Relation $F1011 rel = db . getRelation ( TypeUtil . ANY ) ; \n\t\tassertEquals ( $F99343 ( expectedSize , rel ) ) ; \n\t\treturn db ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tfail ( NUM00 + filename + NUM00 ) ; \n\t\t$F1274 } \n\t} \n"}, {"code": "protected void addChooserFilters ( JFileChooser chooser ) { \n\tjavax . swing . filechooser . FileNameExtensionFilter filter ; \n\tchooser . addChoosableFileFilter ( filter = new javax . swing . filechooser . FileNameExtensionFilter $F6600 ) ; \n\tchooser . setFileFilter ( filter ) ; \n\t} \n"}, {"code": "public void onStop $F72 { \n\tif ( null != mService ) { \n\t\tif ( null != mContext ) { \n\t\t\tmContext . unbindService ( mServiceConnection ) ; \n\t\t\t} \n\t\tmServiceConnection = null ; \n\t\tmService = null ; \n\t\t} \n\t} \n"}, {"code": "public String peek $F72 { \n\tString result = null ; \n\tif ( isEmpty ( ) ) $F1337 else { \n\t\tint cachedCurrentIndex = currentIndex ; \n\t\t$F8801 ( isEatingBlocksOfDelimiters , trimStartingDelimiters ) int nearestDelimeter = - NUM00 ; \n\t\tfor ( $F1088 ( i , delimiters ) ) { \n\t\t\tint delimiter = source . indexOf ( delimiters . charAt ( i ) , currentIndex ) ; \n\t\t\tif ( nearestDelimeter == - NUM00 || delimiter != - NUM00 && delimiter < nearestDelimeter ) { \n\t\t\t\tnearestDelimeter = delimiter ; \n\t\t\t\t} \n\t\t\t} \n\t\tif ( nearestDelimeter == - NUM00 ) { \n\t\t\tresult = source . substring ( currentIndex ) ; \n\t\t\t} \n\t\telse { \n\t\t\tresult = source . substring ( currentIndex , nearestDelimeter ) ; \n\t\t\t} \n\t\tcurrentIndex = cachedCurrentIndex ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private void eliminarUsuariosOrgano ( GestionOrganizacionBI organizacionBI , OrganizacionVO organizacionVO ) { \n\torganizacionBI . eliminarUsuariosOrgano ( organizacionVO . getId ( ) ) ; \n\t} \n"}, {"code": "private static void addPreviousLayer ( List < $F372817 > layers , $F372817 sourceLayer , $F372817 layerToCheck ) { \n\tfinal int MAXLAYERS = NUM00 ; \n\tSet $F257385 newLayerTemp = new HashSet $F257385 $F72 ; \n\tboolean theNextLayerIsTheSourceLayer = _BOOL ; \n\tfor ( Neuron neuron : layerToCheck ) { \n\t\tfor ( Synapse synapse : neuron . getFanIn ( ) ) { \n\t\t\tNeuron sourceNeuron = synapse . getSource ( ) ; \n\t\t\tif $F105 ( sourceLayer , sourceNeuron ) { \n\t\t\t\ttheNextLayerIsTheSourceLayer = _BOOL ; \n\t\t\t\t} \n\t\t\t$F83608 ( sourceNeuron , neuron ) newLayerTemp . add ( synapse . getSource ( ) ) ; \n\t\t\t} \n\t\t} \n\tif ( ( theNextLayerIsTheSourceLayer ) || $F10471 ( newLayerTemp ) || $F60125 ( layers , MAXLAYERS ) ) $F207 ( layers , sourceLayer ) else { \n\t\t$F372817 newLayer = new ArrayList $F257385 ( newLayerTemp ) ; \n\t\tCollections . sort ( newLayer , OrientationComparator . X_ORDER ) ; \n\t\tlayers . add ( newLayer ) ; \n\t\taddPreviousLayer ( layers , sourceLayer , newLayer ) ; \n\t\t} \n\t} \n"}, {"code": "public void testShiftRight2 $F72 { \n\t$F17888 int aSign = NUM00 ; \n\tint number = - NUM00 ; \n\tbyte $F3018 = { \n\t\tNUM00 , NUM00 , - NUM00 , NUM00 , - NUM00 , - NUM00 , - NUM00 , NUM00 , - NUM00 , NUM00 , - NUM00 , NUM00 , - NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\t$F3023 ( aNumber , aSign , aBytes ) $F86501 ( result , aNumber , number ) $F3030 ( rBytes ) $F3031 ( resBytes , result ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , result ) } \n"}, {"code": "public static void ignorm ( double c1 [ ] , double c2 [ ] , int m , double ng ) { \n\tif ( ng != NUM00 ) { \n\t\tdouble k = Math . pow ( c1 [ NUM00 ] , ng ) ; \n\t\tfor ( $F141 ( i , m ) ) c2 [ i ] = k * c1 [ i ] ; \n\t\tc2 [ NUM00 ] = ( k - NUM00 ) / ng ; \n\t\t} \n\telse { \n\t\tSystem . arraycopy ( c1 , NUM00 , c2 , NUM00 , m - NUM00 ) ; \n\t\tc2 [ NUM00 ] = Math . log ( c1 [ NUM00 ] ) ; \n\t\t} \n\t} \n"}, {"code": "public static int findNonwhitespaceCharacter ( String s , int index ) { \n\t$F1749 ( sLength , s ) while ( index < sLength && $F1750 ( Character , s , index ) ) { \n\t\tindex ++ ; \n\t\t} \n\treturn index ; \n\t} \n"}, {"code": "public void readContent $F72 throws IOException { \n\tif ( offset + length > buffer . length ) $F11734 if ( in == null ) { \n\t\toffset += length ; \n\t\t} \n\telse { \n\t\t$F24020 ( bytesRead , in , buffer , offset , length ) if ( bytesRead != length ) { \n\t\t\tint c = bytesRead ; \n\t\t\tdo { \n\t\t\t\tif ( c < NUM00 || bytesRead > length ) $F11734 c = in . read ( buffer , offset + bytesRead , length - bytesRead ) ; \n\t\t\t\tbytesRead += c ; \n\t\t\t\t} \n\t\t\twhile ( bytesRead != length ) ; \n\t\t\t} \n\t\toffset += length ; \n\t\t} \n\t} \n"}, {"code": "public Primitive ( Object value ) { \n\tthis . value = value ; \n\ttype = ( value != null ) ? Utilities . getPrimitiveType ( value . getClass ( ) ) : null ; \n\t$F26344 ( type , value ) } \n"}, {"code": "public void createCashBasedJournalEntriesAndReversalsForSavingsTax ( final Office office , final String currencyCode , final CASH_ACCOUNTS_FOR_SAVINGS accountTypeToBeDebited , final CASH_ACCOUNTS_FOR_SAVINGS accountTypeToBeCredited , final Long savingsProductId , final Long paymentTypeId , final Long savingsId , final String transactionId , final Date transactionDate , final BigDecimal amount , final Boolean isReversal , final List < TaxPaymentDTO > taxDetails ) { \n\tfor ( TaxPaymentDTO taxPaymentDTO : taxDetails ) { \n\t\tif ( taxPaymentDTO . getAmount ( ) != null ) { \n\t\t\tif ( taxPaymentDTO . getCreditAccountId ( ) == null ) { \n\t\t\t\tcreateCashBasedCreditJournalEntriesAndReversalsForSavings ( office , currencyCode , accountTypeToBeCredited . getValue ( ) , savingsProductId , paymentTypeId , savingsId , transactionId , transactionDate , taxPaymentDTO . getAmount ( ) , isReversal ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tcreateCashBasedCreditJournalEntriesAndReversalsForSavings ( office , currencyCode , taxPaymentDTO . getCreditAccountId ( ) , savingsId , transactionId , transactionDate , taxPaymentDTO . getAmount ( ) , isReversal ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcreateCashBasedDebitJournalEntriesAndReversalsForSavings ( office , currencyCode , accountTypeToBeDebited . getValue ( ) , savingsProductId , paymentTypeId , savingsId , transactionId , transactionDate , amount , isReversal ) ; \n\t} \n"}, {"code": "public int read ( ByteBuf dst , int dstStart , int dstLength ) throws IOException { \n\tfinal int remaining = ( int ) Math . min ( this . length - this . position , Integer . MAX_VALUE ) ; \n\t$F50166 ( read , Math , remaining , dstLength ) final int bufferPosition = checkOffset ( position , read ) ; \n\tfinal long srcAddress = PlatformDependent . directBufferAddress ( lastMapped ) + bufferPosition ; \n\tif ( dst . hasMemoryAddress ( ) ) { \n\t\tfinal long dstAddress = dst . memoryAddress ( ) + dstStart ; \n\t\tPlatformDependent . copyMemory ( srcAddress , dstAddress , read ) ; \n\t\t} \n\telse if $F181184 ( dst ) { \n\t\t$F45857 ( dstArray , dst ) PlatformDependent . copyMemory ( srcAddress , dstArray , dstStart , read ) ; \n\t\t} \n\telse $F825 position += read ; \n\treturn read ; \n\t} \n"}, {"code": "public static Calendar clearTime ( final Calendar self ) { \n\tclearTimeCommon ( self ) ; \n\treturn self ; \n\t} \n"}, {"code": "public double pdf ( int k ) { \n\treturn Math . exp ( k * Math . log ( this . mean ) - Arithmetic . logFactorial ( k ) - this . mean ) ; \n\t} \n"}, {"code": "public static void appendUnpaddedInteger ( StringBuffer buf , long value ) { \n\t$F29204 ( intValue , value ) if ( intValue == value ) { \n\t\tappendUnpaddedInteger ( buf , intValue ) ; \n\t\t} \n\telse { \n\t\t$F42779 ( buf , Long , value ) } \n\t} \n"}, {"code": "private void drawTextElements ( Canvas canvas , float textSize , Typeface typeface , ColorStateList textColor , $F806 texts , $F5415 textX , $F5415 textY , Paint paint , int alpha , boolean showActivated , int activatedDegrees , boolean activatedOnly ) { \n\tpaint . setTextSize ( textSize ) ; \n\tpaint . setTypeface ( typeface ) ; \n\tfinal float activatedIndex = activatedDegrees / ( NUM00 / NUM_POSITIONS ) ; \n\tfinal int activatedFloor = ( int ) activatedIndex ; \n\tfinal int activatedCeil = ( $F63596 ( Math , activatedIndex ) ) % NUM_POSITIONS ; \n\tfor ( $F6268 ( i ) ) { \n\t\tfinal boolean activated = ( activatedFloor == i || activatedCeil == i ) ; \n\t\tif ( activatedOnly && ! activated ) $F1448 final $F2027 stateMask = new int [ ] { \n\t\t\tandroid . R . attr . state_enabled , ( showActivated && activated ? android . R . attr . state_selected : NUM00 ) } \n\t\t; \n\t\tfinal int color = textColor . getColorForState ( stateMask , NUM00 ) ; \n\t\tpaint . setColor ( color ) ; \n\t\tpaint . setAlpha ( getMultipliedAlpha ( color , alpha ) ) ; \n\t\tcanvas . drawText ( texts [ i ] , textX [ i ] , textY [ i ] , paint ) ; \n\t\t} \n\t} \n"}, {"code": "public void testFindSpringActiveDirectoryWithLimit $F72 { \n\tLdapProxy proxy = getLdapAD ( ) ; \n\tList result = null ; \n\tint limit = NUM00 ; \n\ttry { \n\t\tresult = proxy . find ( getLdapSearchVO ( NUM00 , limit , NUM00 , NUM00 , null , LdapScopeConstants . SCOPE_SUBTREE ) ) ; \n\t\t} \n\t$F3957 assertNotNull ( result ) ; \n\tif ( result != null ) { \n\t\t$F43476 ( assertEquals , limit , result ) } \n\t} \n"}, {"code": "$F1 public void handleKey ( int virtualKeyCode , int transitionState , char keyChar ) { \n\tswitchControlKeys ( virtualKeyCode , transitionState ) ; \n\tinputBuffer . add ( new GlobalKeyEvent ( this , virtualKeyCode , transitionState , keyChar , menuPressed , shiftPressed , controlPressed , extendedKey ) ) ; \n\t} \n"}, {"code": "public int hashCode $F72 { \n\treturn alignment ^ leader ^ Math . round ( position ) ; \n\t} \n"}, {"code": "public static String stripLeadingPeriod ( String s ) { \n\tif ( null != s && s . startsWith ( NUM00 ) ) return s . substring ( Math . min ( $F34024 ( s ) ) , s . length ( ) ) ; \n\treturn s ; \n\t} \n"}, {"code": "public static boolean isRequiredConfigDirectory ( final String directory ) $F298 ( requiredConfigDirectories , directory ) "}, {"code": "protected ConnectionStateSSLv3 ( SSLSessionImpl session ) { \n\ttry { \n\t\tCipherSuite cipherSuite = session . cipherSuite ; \n\t\tboolean is_exportabe = cipherSuite . isExportable ( ) ; \n\t\thash_size = cipherSuite . getMACLength ( ) ; \n\t\tint key_size = ( is_exportabe ) ? cipherSuite . keyMaterial : cipherSuite . expandedKeyMaterial ; \n\t\tint iv_size = cipherSuite . ivSize ; \n\t\tblock_size = cipherSuite . getBlockSize ( ) ; \n\t\tString algName = cipherSuite . getBulkEncryptionAlgorithm ( ) ; \n\t\tString hashName = cipherSuite . getHashName ( ) ; \n\t\tif ( logger != null ) { \n\t\t\t$F8438 ( logger ) logger . println ( NUM00 + session . getCipherSuite ( ) ) ; \n\t\t\t$F7957 ( logger , algName ) $F7957 ( logger , hashName ) $F7957 ( logger , hash_size ) $F7957 ( logger , block_size ) $F7957 ( logger , iv_size ) $F7957 ( logger , key_size ) } \n\t\t$F56524 ( clientRandom , session ) $F56524 ( serverRandom , session ) $F96 key_block = new byte [ NUM00 * hash_size + NUM00 * key_size + NUM00 * iv_size ] ; \n\t\t$F148496 ( seed , clientRandom , serverRandom ) $F7057 ( System , serverRandom , seed ) $F11244 ( System , clientRandom , seed , serverRandom ) PRF . computePRF_SSLv3 ( key_block , session . master_secret , seed ) ; \n\t\t$F2175 ( client_mac_secret , hash_size ) $F2175 ( server_mac_secret , hash_size ) $F2175 ( client_key , key_size ) $F2175 ( server_key , key_size ) boolean is_client = ! session . isServer ; \n\t\t$F135 ( System , key_block , client_mac_secret , hash_size ) $F30985 ( System , key_block , hash_size , server_mac_secret ) System . arraycopy ( key_block , NUM00 * hash_size , client_key , NUM00 , key_size ) ; \n\t\tSystem . arraycopy ( key_block , NUM00 * hash_size + key_size , server_key , NUM00 , key_size ) ; \n\t\tIvParameterSpec clientIV = null ; \n\t\tIvParameterSpec serverIV = null ; \n\t\tif ( is_exportabe ) { \n\t\t\tif ( logger != null ) $F12204 ( logger ) $F5348 ( md5 , MessageDigest ) md5 . update ( client_key ) ; \n\t\t\tmd5 . update ( clientRandom ) ; \n\t\t\tmd5 . update ( serverRandom ) ; \n\t\t\t$F14611 ( client_key , md5 ) md5 . update ( server_key ) ; \n\t\t\tmd5 . update ( serverRandom ) ; \n\t\t\tmd5 . update ( clientRandom ) ; \n\t\t\t$F14611 ( server_key , md5 ) key_size = cipherSuite . expandedKeyMaterial ; \n\t\t\tif ( block_size != NUM00 ) { \n\t\t\t\tmd5 . update ( clientRandom ) ; \n\t\t\t\tmd5 . update ( serverRandom ) ; \n\t\t\t\tclientIV = new IvParameterSpec ( md5 . digest ( ) , NUM00 , iv_size ) ; \n\t\t\t\tmd5 . update ( serverRandom ) ; \n\t\t\t\tmd5 . update ( clientRandom ) ; \n\t\t\t\tserverIV = new IvParameterSpec ( md5 . digest ( ) , NUM00 , iv_size ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( block_size != NUM00 ) { \n\t\t\tclientIV = new IvParameterSpec ( key_block , NUM00 * hash_size + NUM00 * key_size , iv_size ) ; \n\t\t\tserverIV = new IvParameterSpec ( key_block , NUM00 * hash_size + NUM00 * key_size + iv_size , iv_size ) ; \n\t\t\t} \n\t\tif ( logger != null ) { \n\t\t\t$F7957 ( logger , is_exportabe ) $F8438 ( logger ) logger . print ( session . master_secret ) ; \n\t\t\t$F8438 ( logger ) logger . print ( clientRandom ) ; \n\t\t\t$F8438 ( logger ) logger . print ( serverRandom ) ; \n\t\t\t$F8438 ( logger ) logger . print ( client_mac_secret ) ; \n\t\t\t$F8438 ( logger ) logger . print ( server_mac_secret ) ; \n\t\t\t$F8438 ( logger ) logger . print ( client_key , NUM00 , key_size ) ; \n\t\t\t$F8438 ( logger ) logger . print ( server_key , NUM00 , key_size ) ; \n\t\t\tif ( clientIV != null ) { \n\t\t\t\t$F8438 ( logger ) logger . print ( clientIV . getIV ( ) ) ; \n\t\t\t\t$F8438 ( logger ) logger . print ( serverIV . getIV ( ) ) ; \n\t\t\t\t} \n\t\t\telse $F12204 ( logger ) } \n\t\tif ( algName == null ) { \n\t\t\t$F83645 ( encCipher ) ; \n\t\t\t$F83645 ( decCipher ) ; \n\t\t\t} \n\t\telse { \n\t\t\tencCipher = Cipher . getInstance ( algName ) ; \n\t\t\tdecCipher = Cipher . getInstance ( algName ) ; \n\t\t\tif ( is_client ) { \n\t\t\t\tencCipher . init ( Cipher . ENCRYPT_MODE , new SecretKeySpec ( client_key , NUM00 , key_size , algName ) , clientIV ) ; \n\t\t\t\tdecCipher . init ( Cipher . DECRYPT_MODE , new SecretKeySpec ( server_key , NUM00 , key_size , algName ) , serverIV ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tencCipher . init ( Cipher . ENCRYPT_MODE , new SecretKeySpec ( server_key , NUM00 , key_size , algName ) , serverIV ) ; \n\t\t\t\tdecCipher . init ( Cipher . DECRYPT_MODE , new SecretKeySpec ( client_key , NUM00 , key_size , algName ) , clientIV ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tmessageDigest = MessageDigest . getInstance ( hashName ) ; \n\t\tif ( is_client ) { \n\t\t\tmac_write_secret = client_mac_secret ; \n\t\t\tmac_read_secret = server_mac_secret ; \n\t\t\t} \n\t\telse { \n\t\t\tmac_write_secret = server_mac_secret ; \n\t\t\tmac_read_secret = client_mac_secret ; \n\t\t\t} \n\t\tif $F3057 ( hashName ) { \n\t\t\tpad_1 = SSLv3Constants . MD5pad1 ; \n\t\t\tpad_2 = SSLv3Constants . MD5pad2 ; \n\t\t\t} \n\t\telse { \n\t\t\tpad_1 = SSLv3Constants . SHApad1 ; \n\t\t\tpad_2 = SSLv3Constants . SHApad2 ; \n\t\t\t} \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F301 ( e ) throw new AlertException ( AlertProtocol . INTERNAL_ERROR , new SSLProtocolException $F580 ) ; \n\t\t} \n\t} \n"}, {"code": "$F221804 ( d , imageView , getImageView , viewWidth , getImageViewWidth , viewHeight , getImageViewHeight , drawableWidth , drawableHeight , mBaseMatrix , widthScale , heightScale , mScaleType , ScaleType , scale , Math , mTempSrc , mTempDst , FIT_CENTER , ScaleToFit , FIT_START , FIT_END , FIT_XY , resetMatrix ) "}, {"code": "private void cleanUpLabels $F72 { \n\tint id = NUM00 ; \n\tfor ( Iterator < Label > i = labels . iterator ( ) ; \n\ti . hasNext ( ) ; \n\t) { \n\t\tLabel label = i . next ( ) ; \n\t\tif $F2979 ( label ) $F38599 ( i ) else { \n\t\t\t$F116630 ( label ) label . id = id ++ ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "void zrot ( double theta ) { \n\ttheta *= ( pi / NUM00 ) ; \n\t$F54226 ( ct , Math , theta ) $F33859 ( st , Math , theta ) $F193831 ( Nyx , yx , ct , xx , st ) $F193831 ( Nyy , yy , ct , xy , st ) $F193831 ( Nyz , yz , ct , xz , st ) $F193831 ( Nyo , yo , ct , xo , st ) $F193835 ( Nxx , xx , ct , yx , st ) $F193835 ( Nxy , xy , ct , yy , st ) $F193835 ( Nxz , xz , ct , yz , st ) $F193835 ( Nxo , xo , ct , yo , st ) yo = Nyo ; \n\tyx = Nyx ; \n\tyy = Nyy ; \n\tyz = Nyz ; \n\txo = Nxo ; \n\txx = Nxx ; \n\txy = Nxy ; \n\txz = Nxz ; \n\t} \n"}, {"code": "public static long nanosFromDate ( long ms ) { \n\tCalendar cal = getCalendar ( ) ; \n\tcal . setTimeInMillis ( ms ) ; \n\treturn nanosFromCalendar ( cal ) ; \n\t} \n"}, {"code": "$F1 default CompletableFuture < OptionalLong > maxLong ( final ToLongFunction $F11632 fn ) $F257945 ( CompletableFuture , getExec ) "}, {"code": "protected BalancedWebResource createHttpsClient ( final String username , final String password , $F3803 hosts ) throws NoSuchAlgorithmException $F33971 ( createHttpsClient , username , password , hosts , _BOOL ) "}, {"code": "public static $F1469 createArraySignature ( $F1469 typeSignature , int arrayCount ) { \n\t$F116 ( arrayCount , typeSignature ) int sigLength = typeSignature . length ; \n\t$F1469 result = new char [ arrayCount + sigLength ] ; \n\tfor ( $F119 ( i , arrayCount ) ) { \n\t\tresult [ i ] = C_ARRAY ; \n\t\t} \n\t$F6483 ( System , typeSignature , result , arrayCount , sigLength ) return result ; \n\t} \n"}, {"code": "public void println $F72 throws IOException { \n\twriter . write ( format . getLineSeparator ( ) ) ; \n\t} \n"}, {"code": "protected void increaseBufferSize ( int minSize ) { \n\tint newLength = buf . length ; \n\twhile ( newLength < minSize ) newLength *= NUM00 ; \n\t$F9662 ( newBuf , newLength ) int avail = currentlyInBuffer ( ) ; \n\t$F21535 ( System , buf , readPos , newBuf , avail ) buf = newBuf ; \n\treadPos = NUM00 ; \n\twritePos = avail ; \n\t} \n"}, {"code": "private void handleEnumeratedAttribute ( Instances trainInstances ) throws Exception { \n\tInstance instance ; \n\tm_distribution = new Distribution ( m_complexityIndex , trainInstances . numClasses ( ) ) ; \n\tEnumeration $F90868 enu = trainInstances . enumerateInstances ( ) ; \n\twhile $F1444 ( enu ) { \n\t\t$F1445 ( instance , enu ) if $F246479 ( instance , m_attIndex ) { \n\t\t\tm_distribution . add ( ( int ) instance . value ( m_attIndex ) , instance ) ; \n\t\t\t} \n\t\t} \n\tif ( m_distribution . check ( m_minNoObj ) ) { \n\t\tm_numSubsets = m_complexityIndex ; \n\t\tm_infoGain = infoGainCrit . splitCritValue ( m_distribution , m_sumOfWeights ) ; \n\t\tm_gainRatio = gainRatioCrit . splitCritValue ( m_distribution , m_sumOfWeights , m_infoGain ) ; \n\t\t} \n\t} \n"}, {"code": "private boolean isLoadMore $F72 { \n\treturn mNextLoadEnable && pageSize != - NUM00 && mRequestLoadMoreListener != null && mData . size ( ) >= pageSize ; \n\t} \n"}, {"code": "private void addWorkerIfNecessary $F72 { \n\tif $F76102 ( idleWorkers ) { \n\t\tsynchronized ( workers ) { \n\t\t\tif ( workers . isEmpty ( ) || $F76102 ( idleWorkers ) ) $F5795 ( addWorker ) } \n\t\t} \n\t} \n"}, {"code": "$F1 protected Node removeFromFrontier $F72 { \n\tNode result = frontier . remove ( ) ; \n\tfrontierNodeLookup . remove ( result . getState ( ) ) ; \n\texplored . add ( result . getState ( ) ) ; \n\t$F4173 ( updateMetrics , frontier ) return result ; \n\t} \n"}, {"code": "public static String encode $F97 ( data ) { \n\tint start = NUM00 ; \n\tint len = data . length ; \n\tStringBuffer buf = new StringBuffer ( data . length * NUM00 / NUM00 ) ; \n\tint end = len - NUM00 ; \n\tint i = start ; \n\tint n = NUM00 ; \n\twhile ( i <= end ) { \n\t\tint d = ( ( ( ( int ) data [ i ] ) & NUM00 ) < < NUM00 ) | ( ( ( ( int ) data [ i + NUM00 ] ) & NUM00 ) < < NUM00 ) | ( ( ( int ) data [ i + NUM00 ] ) & NUM00 ) ; \n\t\tbuf . append ( $F138727 ( legalChars , d ) ) ; \n\t\tbuf . append ( $F138727 ( legalChars , d ) ) ; \n\t\tbuf . append ( $F138727 ( legalChars , d ) ) ; \n\t\t$F3248 ( buf , legalChars , d ) i += NUM00 ; \n\t\tif ( n ++ >= NUM00 ) { \n\t\t\tn = NUM00 ; \n\t\t\t} \n\t\t} \n\tif ( i == start + len - NUM00 ) { \n\t\tint d = ( ( ( ( int ) data [ i ] ) & NUM00 ) < < NUM00 ) | ( ( ( ( int ) data [ i + NUM00 ] ) & NUM00 ) < < NUM00 ) ; \n\t\tbuf . append ( $F138727 ( legalChars , d ) ) ; \n\t\tbuf . append ( $F138727 ( legalChars , d ) ) ; \n\t\tbuf . append ( $F138727 ( legalChars , d ) ) ; \n\t\t$F84 ( buf ) } \n\telse if ( i == start + len - NUM00 ) { \n\t\tint d = ( ( ( int ) data [ i ] ) & NUM00 ) < < NUM00 ; \n\t\tbuf . append ( $F138727 ( legalChars , d ) ) ; \n\t\tbuf . append ( $F138727 ( legalChars , d ) ) ; \n\t\t$F84 ( buf ) } \n\t$F92 ( buf ) } \n"}, {"code": "public static Font createBitmapFont ( String name , Image bitmap , $F2027 cutOffsets , $F2027 charWidth , String charsets ) { \n\tFont f = createBitmapFont ( bitmap , cutOffsets , charWidth , charsets ) ; \n\tbitmapCache . put ( name , f ) ; \n\treturn f ; \n\t} \n"}, {"code": "static boolean isTenured ( MemoryPoolMXBean memoryPoolMXBean ) { \n\tif ( memoryPoolMXBean . getType ( ) != MemoryType . HEAP ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F20605 ( name , memoryPoolMXBean ) return $F5129 ( name ) || name . equals ( NUM00 ) || name . equals ( NUM00 ) || name . equals ( NUM00 ) || $F35166 ( HEAP_POOL , name ) ; \n\t} \n"}, {"code": "public String toSimpleString $F72 { \n\t$F280 ( buffer ) buffer . append ( NUM00 + $F81465 ( mLabel ) + NUM00 + mYVals . size ( ) + NUM00 ) ; \n\t$F92 ( buffer ) } \n"}, {"code": "public static $F4203 T interpreterOnly $F41334 ( callable ) throws Exception $F41336 ( callable ) "}, {"code": "public static $F3803 tokenize ( String arguments , boolean stringify ) { \n\t$F28830 $F31408 ( argList ) ; \n\t$F83 ( currArg ) boolean escaped = _BOOL ; \n\tint state = NO_TOKEN_STATE ; \n\t$F1749 ( len , arguments ) for ( $F119 ( i , len ) ) { \n\t\t$F1280 ( c , arguments , i ) if ( escaped ) $F40007 ( escaped , _BOOL , currArg , c ) else { \n\t\t\tswitch ( state ) { \n\t\t\t\tcase SINGLE_QUOTE_STATE : if ( c == NUM00 ) { \n\t\t\t\t\tstate = NORMAL_TOKEN_STATE ; \n\t\t\t\t\t} \n\t\t\t\telse $F288 ( currArg , c ) $F597 case DOUBLE_QUOTE_STATE : if ( c == NUM00 ) { \n\t\t\t\t\tstate = NORMAL_TOKEN_STATE ; \n\t\t\t\t\t} \n\t\t\t\telse if ( c == NUM00 ) { \n\t\t\t\t\ti ++ ; \n\t\t\t\t\t$F1280 ( next , arguments , i ) if $F37111 ( next ) $F288 ( currArg , next ) else $F31988 ( currArg , c , next ) } \n\t\t\t\telse $F288 ( currArg , c ) $F597 case NO_TOKEN_STATE : case NORMAL_TOKEN_STATE : switch ( c ) { \n\t\t\t\t\t$F1262 escaped = _BOOL ; \n\t\t\t\t\tstate = NORMAL_TOKEN_STATE ; \n\t\t\t\t\t$F597 $F32808 ( state , SINGLE_QUOTE_STATE ) $F32808 ( state , DOUBLE_QUOTE_STATE ) $F1267 if $F32022 ( Character , c ) $F40016 ( currArg , c , state , NORMAL_TOKEN_STATE ) else if ( state == NORMAL_TOKEN_STATE ) { \n\t\t\t\t\t\t$F40018 ( argList , currArg ) $F6932 ( currArg ) state = NO_TOKEN_STATE ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t$F597 $F1267 $F40027 ( state ) } \n\t\t\t} \n\t\t} \n\tif ( escaped ) { \n\t\t$F84 ( currArg ) $F40018 ( argList , currArg ) } \n\telse if ( state != NO_TOKEN_STATE ) $F40035 ( argList , currArg ) if ( stringify ) { \n\t\tfor ( $F2277 ( i , argList ) ) { \n\t\t\targList . set ( i , NUM00 + _escapeQuotesAndBackslashes ( argList . get ( i ) ) + NUM00 ) ; \n\t\t\t} \n\t\t} \n\treturn argList ; \n\t} \n"}, {"code": "private void addSelectorForProtocol ( Properties settings , String protocol , ProtocolDispatchSelector ps ) { \n\t$F7601 ( proxy , settings , protocol ) if ( proxy != null ) { \n\t\tFixedProxySelector protocolSelector = ProxyUtil . parseProxySettings ( proxy ) ; \n\t\tps . setSelector ( protocol , protocolSelector ) ; \n\t\t} \n\t} \n"}, {"code": "public void addHeader ( String name , String value ) $F1717 ( header , name , value ) "}, {"code": "public static void readSkel ( BufferedReader reader ) throws IOException { \n\t$F10144 ( lines ) $F83 ( section ) String ln ; \n\twhile $F443 ( ln , reader ) { \n\t\tif $F3106 ( ln ) { \n\t\t\t$F40018 ( lines , section ) $F4910 ( section ) } \n\t\telse $F31988 ( section , ln , NL ) } \n\tif $F4012 ( section ) $F40018 ( lines , section ) if $F137887 ( lines , size ) { \n\t\tOut . error ( ErrorMessages . WRONG_SKELETON ) ; \n\t\tthrow new GeneratorException $F72 ; \n\t\t} \n\t$F58180 ( line , size ) for ( $F119 ( i , size ) ) $F15302 ( line , i , lines ) } \n"}, {"code": "public static $F2689 nonMonogamousSamples ( Collection < Family > families ) { \n\tfinal LinkedHashSet $F4 $F22304 ( ret ) ; \n\tfinal $F2690 $F9626 ( parents ) ; \n\tfor ( Family f : families ) { \n\t\tif ( ! parents . add ( f . getFather ( ) ) ) { \n\t\t\tret . add ( f . getFather ( ) ) ; \n\t\t\t} \n\t\tif ( ! parents . add ( f . getMother ( ) ) ) { \n\t\t\tret . add ( f . getMother ( ) ) ; \n\t\t\t} \n\t\t} \n\treturn ret ; \n\t} \n"}, {"code": "private void createSceneVao $F72 { \n\tint vao = glGenVertexArrays ( ) ; \n\tint vbo = glGenBuffers ( ) ; \n\tglBindVertexArray ( vao ) ; \n\tglBindBuffer ( GL_ARRAY_BUFFER , vbo ) ; \n\tByteBuffer bb = BufferUtils . createByteBuffer ( boxes . length * NUM00 * $F210280 * NUM00 * NUM00 ) ; \n\t$F16708 ( fv , bb ) for ( $F24429 ( i , boxes ) ) { \n\t\tDemoUtils . triangulateBox ( $F283339 ( boxes , i , fv ) ) ; \n\t\t} \n\tglBufferData ( GL_ARRAY_BUFFER , bb , GL_STATIC_DRAW ) ; \n\tglEnableVertexAttribArray ( NUM00 ) ; \n\tglVertexAttribPointer ( NUM00 , NUM00 , GL_FLOAT , _BOOL , $F297295 , NUM00 ) ; \n\tglEnableVertexAttribArray ( NUM00 ) ; \n\tglVertexAttribPointer ( NUM00 , NUM00 , GL_FLOAT , _BOOL , $F297295 , NUM00 * NUM00 ) ; \n\tglBindBuffer ( GL_ARRAY_BUFFER , NUM00 ) ; \n\tglBindVertexArray ( NUM00 ) ; \n\tthis . vaoScene = vao ; \n\t} \n"}, {"code": "public boolean contains ( File file , String fileContent ) { \n\tif ( exists ( file ) ) { \n\t\tString content = readFileContent ( file ) ; \n\t\treturn content != null && content . equals ( fileContent ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static boolean [ ] [ ] loadImage ( File file , char offChar ) throws FileNotFoundException , RuntimeException { \n\t$F5 rows = loadImagePad ( file , offChar ) ; \n\t$F13410 ( s , rows ) boolean [ ] [ ] img = new boolean [ rows . size ( ) ] [ s . length ( ) ] ; \n\tfor ( $F2277 ( i , rows ) ) { \n\t\ts = rows . get ( i ) ; \n\t\tfor ( $F1088 ( j , s ) ) { \n\t\t\t$F1280 ( c , s , j ) if ( c == offChar ) { \n\t\t\t\timg [ i ] [ j ] = _BOOL ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\timg [ i ] [ j ] = _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn img ; \n\t} \n"}, {"code": "protected void updateReceiptStatusWhenCancelled ( final String receiptNumber ) { \n\tfinal List < EgdmCollectedReceipt > egdmCollectedReceipts = demandGenericDAO . getAllEgdmCollectedReceipts ( receiptNumber ) ; \n\tif $F1032 ( egdmCollectedReceipts ) for ( final EgdmCollectedReceipt egDmCollectedReceipt : egdmCollectedReceipts ) { \n\t\tegDmCollectedReceipt . setStatus ( DemandConstants . CANCELLED_RECEIPT ) ; \n\t\tegDmCollectedReceipt . setUpdatedTime ( $F4094 ) ; \n\t\tegdmCollectedReceiptDAO . update ( egDmCollectedReceipt ) ; \n\t\t} \n\t} \n"}, {"code": "public void addAnimation ( int id , Animation ... animations ) { \n\tif $F4257 ( mAnimations , id ) { \n\t\tmAnimations . put ( id , new ArrayList < Animation > ( animations . length ) ) ; \n\t\tif ( id != Animation . FULL_PAGE ) $F207 ( mAnimatedViews , id ) } \n\tArrayList < Animation > anims = mAnimations . get ( id ) ; \n\tCollections . addAll ( anims , animations ) ; \n\t} \n"}, {"code": "private void cleanupDiscovery ( StorageSystem system ) { \n\ttry { \n\t\tsystem . setReachableStatus ( _BOOL ) ; \n\t\t_dbClient . persistObject ( system ) ; \n\t\t} \n\t$F88154 ( _logger , e ) } \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "$F1 public SSLEngineResult wrap ( $F30903 srcs , int offset , int len , ByteBuffer dst ) throws SSLException { \n\tif ( engine_was_shutteddown ) { \n\t\treturn new SSLEngineResult ( SSLEngineResult . Status . CLOSED , SSLEngineResult . HandshakeStatus . NOT_HANDSHAKING , NUM00 , NUM00 ) ; \n\t\t} \n\tif $F54923 ( srcs , dst ) $F4639 if ( dst . isReadOnly ( ) ) { \n\t\tthrow new ReadOnlyBufferException $F72 ; \n\t\t} \n\t$F14406 ( handshake_started , beginHandshake ) SSLEngineResult . HandshakeStatus handshakeStatus = getHandshakeStatus ( ) ; \n\tif ( ( session == null || engine_was_closed ) && ( handshakeStatus . equals ( SSLEngineResult . HandshakeStatus . NEED_UNWRAP ) || handshakeStatus . equals ( SSLEngineResult . HandshakeStatus . NEED_TASK ) ) ) { \n\t\treturn new SSLEngineResult ( getEngineStatus ( ) , handshakeStatus , NUM00 , NUM00 ) ; \n\t\t} \n\t$F45850 ( capacity , dst ) int produced = NUM00 ; \n\tif ( alertProtocol . hasAlert ( ) ) { \n\t\tif ( capacity < recordProtocol . getRecordSize ( NUM00 ) ) { \n\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . BUFFER_OVERFLOW , handshakeStatus , NUM00 , NUM00 ) ; \n\t\t\t} \n\t\t$F96 alert_data = alertProtocol . wrap ( ) ; \n\t\tdst . put ( alert_data ) ; \n\t\tif ( alertProtocol . isFatalAlert ( ) ) { \n\t\t\talertProtocol . setProcessed ( ) ; \n\t\t\tif ( session != null ) $F5218 ( session ) shutdown ( ) ; \n\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . CLOSED , SSLEngineResult . HandshakeStatus . NOT_HANDSHAKING , NUM00 , alert_data . length ) ; \n\t\t\t} \n\t\telse { \n\t\t\talertProtocol . setProcessed ( ) ; \n\t\t\tif ( close_notify_was_sent && close_notify_was_received ) { \n\t\t\t\tshutdown ( ) ; \n\t\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . CLOSED , SSLEngineResult . HandshakeStatus . NOT_HANDSHAKING , NUM00 , alert_data . length ) ; \n\t\t\t\t} \n\t\t\treturn new SSLEngineResult ( getEngineStatus ( ) , getHandshakeStatus ( ) , NUM00 , alert_data . length ) ; \n\t\t\t} \n\t\t} \n\tif ( capacity < recordProtocol . getMinRecordSize ( ) ) { \n\t\tif ( logger != null ) { \n\t\t\tlogger . println ( NUM00 + capacity + NUM00 + recordProtocol . getMinRecordSize ( ) + NUM00 ) ; \n\t\t\t} \n\t\treturn new SSLEngineResult ( SSLEngineResult . Status . BUFFER_OVERFLOW , handshakeStatus , NUM00 , NUM00 ) ; \n\t\t} \n\ttry { \n\t\tif ( ! handshakeStatus . equals ( SSLEngineResult . HandshakeStatus . NEED_WRAP ) ) { \n\t\t\tdataStream . setSourceBuffers ( srcs , offset , len ) ; \n\t\t\tif ( ( capacity < SSLRecordProtocol . MAX_SSL_PACKET_SIZE ) && ( capacity < recordProtocol . getRecordSize ( dataStream . available ( ) ) ) ) { \n\t\t\t\tif ( logger != null ) { \n\t\t\t\t\tlogger . println ( NUM00 + capacity + NUM00 + recordProtocol . getRecordSize ( dataStream . available ( ) ) + NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . BUFFER_OVERFLOW , handshakeStatus , NUM00 , NUM00 ) ; \n\t\t\t\t} \n\t\t\tif ( remaining_wrapped_data == null ) { \n\t\t\t\tremaining_wrapped_data = recordProtocol . wrap ( ContentType . APPLICATION_DATA , dataStream ) ; \n\t\t\t\t} \n\t\t\tif ( capacity < remaining_wrapped_data . length ) { \n\t\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . BUFFER_OVERFLOW , handshakeStatus , dataStream . consumed ( ) , NUM00 ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tdst . put ( remaining_wrapped_data ) ; \n\t\t\t\tproduced = remaining_wrapped_data . length ; \n\t\t\t\tremaining_wrapped_data = null ; \n\t\t\t\treturn new SSLEngineResult ( getEngineStatus ( ) , handshakeStatus , dataStream . consumed ( ) , produced ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( remaining_hsh_data == null ) { \n\t\t\t\tremaining_hsh_data = handshakeProtocol . wrap ( ) ; \n\t\t\t\t} \n\t\t\tif ( capacity < remaining_hsh_data . length ) { \n\t\t\t\treturn new SSLEngineResult ( SSLEngineResult . Status . BUFFER_OVERFLOW , handshakeStatus , NUM00 , NUM00 ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tdst . put ( remaining_hsh_data ) ; \n\t\t\t\tproduced = remaining_hsh_data . length ; \n\t\t\t\tremaining_hsh_data = null ; \n\t\t\t\thandshakeStatus = handshakeProtocol . getStatus ( ) ; \n\t\t\t\tif ( handshakeStatus . equals ( SSLEngineResult . HandshakeStatus . FINISHED ) ) { \n\t\t\t\t\tsession = recordProtocol . getSession ( ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\treturn new SSLEngineResult ( getEngineStatus ( ) , getHandshakeStatus ( ) , NUM00 , produced ) ; \n\t\t\t} \n\t\t} \n\tcatch ( AlertException e ) { \n\t\talertProtocol . alert ( AlertProtocol . FATAL , e . getDescriptionCode ( ) ) ; \n\t\tengine_was_closed = _BOOL ; \n\t\tif ( session != null ) $F5218 ( session ) throw e . getReason ( ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 protected void initialize $F72 { \n\t$F101494 ( words ) $F21883 ( super ) $F21884 ( m_Words ) words = read ( ) ; \n\tfor ( String word : words ) { \n\t\tif $F14943 ( word ) m_Words . add ( word ) ; \n\t\t} \n\t} \n"}, {"code": "protected boolean existsInRange $F36827 ( x , minLength , maxLength ) { \n\tx = StringUtils . trimToNull ( x ) ; \n\treturn x != null && x . length ( ) >= minLength && x . length ( ) <= maxLength ; \n\t} \n"}, {"code": "public synchronized void unwatch ( String pathName ) throws IOException $F80218 ( unregisterAll , Paths , pathName ) "}, {"code": "public Criteria addProperty ( String name , String value , Operator operator ) { \n\tproperties . add ( new PropertyCriteria ( name , value , operator ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "public void removeColumn ( final String columnName ) { \n\t$F2329 ( columnName ) final $F3803 cols = Arrays . asList ( getInfo ( ) . headers ) ; \n\t$F1086 ( colIndex , cols , columnName ) removeColumn ( colIndex ) ; \n\t} \n"}, {"code": "public static UnManagedProtectionSet checkUnManagedProtectionSetExistsInDB ( DbClient dbClient , String nativeGuid ) throws IOException { \n\tList < UnManagedProtectionSet > cgs = CustomQueryUtility . getUnManagedProtectionSetByNativeGuid ( dbClient , nativeGuid ) ; \n\tIterator < UnManagedProtectionSet > cgsItr = cgs . iterator ( ) ; \n\tif $F2921 ( cgsItr ) $F43105 ( cgsItr ) $F1274 } \n"}, {"code": "$F45746 ( destbytes , srcString , destOffset , srcOffset , count , i ) "}, {"code": "private void checkQuery ( String expRes , String qry ) throws Exception { \n\tassertEquals ( NUM00 , executeHiveQuery ( NUM00 ) ) ; \n\tassertEquals ( NUM00 , executeHiveQuery ( $F39 + qry ) ) ; \n\tIgfsInputStream in = igfs . open ( new IgfsPath $F580 ) ; \n\t$F5344 ( buf , in ) in . read ( buf ) ; \n\tassertEquals ( expRes , new String ( buf ) ) ; \n\t} \n"}, {"code": "public final V updateAndGet ( UnaryOperator $F2193 updateFunction ) { \n\tV prev , next ; \n\tdo { \n\t\tprev = get ( ) ; \n\t\tnext = updateFunction . apply ( prev ) ; \n\t\t} \n\twhile ( ! compareAndSet ( prev , next ) ) ; \n\treturn next ; \n\t} \n"}, {"code": "public void close $F72 { \n\tstopTimers ( ) ; \n\tclosed = _BOOL ; \n\t$F355 ( window ) if ( listener != null ) { \n\t\tlistener . notificationRemoved ( this ) ; \n\t\t} \n\tif ( activityListener != null ) { \n\t\tActivityTracker . removeActivityListener ( activityListener ) ; \n\t\t} \n\t} \n"}, {"code": "protected boolean shouldMove ( final ILoadBalancerService loadBalancerService ) { \n\t$F10057 ( loadBalancerService ) final boolean highlyUtilizedService ; \n\ttry { \n\t\tfinal UUID serviceUUID = resourceManager . getDataServiceUUID ( ) ; \n\t\thighlyUtilizedService = loadBalancerService . isHighlyUtilizedDataService ( serviceUUID ) ; \n\t\t} \n\tcatch ( Exception ex ) $F95123 ( log , _BOOL ) if ( ! highlyUtilizedService ) { \n\t\t$F140706 ( log ) return _BOOL ; \n\t\t} \n\tfinal ResourceScores resourceScores = resourceManager . getResourceScores ( ) ; \n\tfinal boolean shouldMove = ( resourceScores . percentCPUTime >= resourceManager . movePercentCpuTimeThreshold ) || ( resourceScores . majorPageFaultsPerSec > NUM00 ) || ( resourceScores . dataDirBytesFree < Bytes . gigabyte * NUM00 ) || ( resourceScores . dataDirBytesFree < Bytes . gigabyte * NUM00 ) ; \n\treturn shouldMove ; \n\t} \n"}, {"code": "$F29422 ( encodedPublicKey , decodedKey , Base64 , keyFactory , KeyFactory , KEY_FACTORY_ALGORITHM , e , Log , TAG ) "}, {"code": "private static $F131 convertThrowableMessages ( final $F131 args ) { \n\tif ( args != null ) { \n\t\tfor ( $F1139 ( i , args ) ) { \n\t\t\tif ( args [ i ] instanceof Throwable ) { \n\t\t\t\tThrowable t = ( Throwable ) args [ i ] ; \n\t\t\t\tif ( t . getMessage ( ) != null ) { \n\t\t\t\t\targs [ i ] = t . getMessage ( ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn args ; \n\t} \n"}, {"code": "protected void wrapContent $F72 { \n\t$F24126 ( DO_WRAP ) $F2329 ( mText ) Canvas c = new Canvas $F72 ; \n\tc . setFont ( mFont ) ; \n\t$F23540 ( fm , c , mFont ) String string = getText ( ) ; \n\tif ( mToUpperCase ) $F168450 ( string ) int tw = fm . stringWidth ( string ) + NUM00 * ( mHorizontalPadding + mHorizontalMargin ) ; \n\tint th = fm . getMaxAscent ( ) + NUM00 * fm . getMaxDescent ( ) + NUM00 * ( mVerticalPadding + mVerticalMargin ) ; \n\tmWidget . setWrapWidth ( tw ) ; \n\tmWidget . setWrapHeight ( th ) ; \n\tif ( tw > mWidget . getMinWidth ( ) ) { \n\t\tmWidget . setMinWidth ( tw ) ; \n\t\t} \n\tif ( th > mWidget . getMinHeight ( ) ) { \n\t\tmWidget . setMinHeight ( th ) ; \n\t\t} \n\tif ( mWidget . getHorizontalDimensionBehaviour ( ) == ConstraintWidget . DimensionBehaviour . WRAP_CONTENT ) { \n\t\tmWidget . setWidth ( tw ) ; \n\t\t} \n\tif ( mWidget . getVerticalDimensionBehaviour ( ) == ConstraintWidget . DimensionBehaviour . WRAP_CONTENT ) { \n\t\tmWidget . setHeight ( th ) ; \n\t\t} \n\tif ( mWidget . getHorizontalDimensionBehaviour ( ) == ConstraintWidget . DimensionBehaviour . FIXED ) { \n\t\tif ( mWidget . getWidth ( ) <= mWidget . getMinWidth ( ) ) { \n\t\t\tmWidget . setHorizontalDimensionBehaviour ( ConstraintWidget . DimensionBehaviour . WRAP_CONTENT ) ; \n\t\t\t} \n\t\t} \n\tif ( mWidget . getVerticalDimensionBehaviour ( ) == ConstraintWidget . DimensionBehaviour . FIXED ) { \n\t\tif ( mWidget . getHeight ( ) <= mWidget . getMinHeight ( ) ) { \n\t\t\tmWidget . setVerticalDimensionBehaviour ( ConstraintWidget . DimensionBehaviour . WRAP_CONTENT ) ; \n\t\t\t} \n\t\t} \n\tint baseline = fm . getAscent ( ) + fm . getMaxDescent ( ) + mVerticalPadding + mVerticalMargin ; \n\tmWidget . setBaselineDistance ( baseline ) ; \n\t} \n"}, {"code": "public RAFDirectory ( Path path , LockFactory lockFactory ) throws IOException { \n\tsuper ( path , lockFactory ) ; \n\tpath . toFile ( ) ; \n\t} \n"}, {"code": "public static void addMinutesToList ( Context context , $F15272 values , $F5 labels , int minutes ) { \n\t$F12747 ( index , values , minutes ) if ( index != - NUM00 ) $F932 String label = constructReminderLabel ( context , minutes , _BOOL ) ; \n\t$F2199 ( len , values ) for ( $F119 ( i , len ) ) { \n\t\tif ( minutes < values . get ( i ) ) { \n\t\t\tvalues . add ( i , minutes ) ; \n\t\t\tlabels . add ( i , label ) ; \n\t\t\t$F665 } \n\t\t} \n\tvalues . add ( minutes ) ; \n\tlabels . add ( len , label ) ; \n\t} \n"}, {"code": "void recomposeVariables ( ElemVariable elemVar ) { \n\tif ( $F6798 ( getVariableOrParamComposed , elemVar ) == null ) { \n\t\telemVar . setIsTopLevel ( _BOOL ) ; \n\t\t$F232083 ( elemVar , m_variables ) m_variables . addElement ( elemVar ) ; \n\t\t} \n\t} \n"}, {"code": "public void propertyChange ( PropertyChangeEvent e ) { \n\tString propertyName = e . getPropertyName ( ) ; \n\tif ( propertyName == NUM00 ) { \n\t\tif ( e . getOldValue ( ) == Boolean . FALSE && e . getNewValue ( ) == Boolean . TRUE ) { \n\t\t\thandlePopupIsVisibleEvent ( _BOOL ) ; \n\t\t\t} \n\t\telse if ( e . getOldValue ( ) == Boolean . TRUE && e . getNewValue ( ) == Boolean . FALSE ) { \n\t\t\thandlePopupIsVisibleEvent ( _BOOL ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private static $F2027 maybeSort $F23416 ( values ) { \n\tif ( ! isSorted ( values , NUM00 , _BOOL ) ) { \n\t\tvalues = values . clone ( ) ; \n\t\tArrays . sort ( values ) ; \n\t\t} \n\treturn values ; \n\t} \n"}, {"code": "public int executeUpdate ( String sql ) throws GenericDataSourceException { \n\tStatement stmt = null ; \n\ttry { \n\t\t$F2715 ( stmt , _connection ) return stmt . executeUpdate ( sql ) ; \n\t\t} \n\tcatch ( SQLException sqle ) { \n\t\tthrow new GenericDataSourceException ( NUM00 + _sql , sqle ) ; \n\t\t} \n\tfinally { \n\t\tif ( stmt != null ) { \n\t\t\ttry $F881 ( stmt ) catch ( SQLException sqle ) { \n\t\t\t\tDebug . logWarning ( $F5351 ( sqle ) , module ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private void doTextNormal ( final PDFPage cmds , final String text ) { \n\tfinal PointF zero = new PointF $F72 ; \n\tfinal Matrix scale = new Matrix $F72 ; \n\tUtils . setMatValues ( scale , fsize , NUM00 , NUM00 , fsize * th , NUM00 , tr ) ; \n\tfinal Matrix at = new Matrix $F72 ; \n\tfinal List < PDFGlyph > l = ( List < PDFGlyph > ) font . getGlyphs ( text ) ; \n\tfor ( final PDFGlyph glyph : l ) { \n\t\tat . set ( cur ) ; \n\t\tat . preConcat ( scale ) ; \n\t\tfinal PointF advance = glyph . addCommands ( cmds , at , tm ) ; \n\t\tfloat advanceX = ( advance . x * fsize ) + tc ; \n\t\tif ( glyph . getChar ( ) == NUM00 ) { \n\t\t\tadvanceX += tw ; \n\t\t\t} \n\t\tadvanceX *= th ; \n\t\tcur . preTranslate ( advanceX , advance . y ) ; \n\t\t} \n\tfinal $F5415 src = { \n\t\tzero . x , zero . y } \n\t; \n\tfinal $F5415 dst = new float [ src . length ] ; \n\tcur . mapPoints ( dst , src ) ; \n\tprevEnd . set ( dst [ NUM00 ] , dst [ NUM00 ] ) ; \n\t} \n"}, {"code": "public synchronized static void initialize ( Connection conn ) throws SQLException { \n\tif ( logHadoopIdPatterns != null && logLineagePatterns != null ) $F932 loadLineagePatterns ( conn ) ; \n\tloadHadoopIdPatterns ( conn ) ; \n\t} \n"}, {"code": "public void addIndices ( Collection < IIndex > indices ) { \n\tfor ( Iterator < IIndex > it = indices . iterator ( ) ; \n\tit . hasNext ( ) ; \n\t) { \n\t\taddIndex ( ( IIndex ) it . next ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isCookieSecure $F72 { \n\treturn secureCookie ; \n\t} \n"}, {"code": "public static List < ObjectModel > loadJsonStream ( InputStream input ) { \n\tList < ObjectModel > $F204 ( models ) ; \n\tReader reader = new InputStreamReader ( input ) ; \n\tObjectModel [ ] objectModels = GSON . fromJson ( reader , ObjectModel [ ] . class ) ; \n\tfor ( ObjectModel objectModel : objectModels ) $F207 ( models , objectModel ) return models ; \n\t} \n"}, {"code": "protected MultistepExprHolder createMultistepExprList ( Vector paths ) { \n\tMultistepExprHolder first = null ; \n\t$F2199 ( n , paths ) for ( $F119 ( i , n ) ) { \n\t\t$F55733 ( eo , paths , i ) if ( null == eo ) $F598 LocPathIterator lpi = ( LocPathIterator ) eo . getExpression ( ) ; \n\t\tint numPaths = countSteps ( lpi ) ; \n\t\tif ( numPaths > NUM00 ) { \n\t\t\tif ( null == first ) first = new MultistepExprHolder ( eo , numPaths , null ) ; \n\t\t\telse first = first . addInSortedOrder ( eo , numPaths ) ; \n\t\t\t} \n\t\t} \n\tif ( ( null == first ) || ( first . getLength ( ) <= NUM00 ) ) $F1274 else return first ; \n\t} \n"}, {"code": "private int addWordlenWeights ( Channel chan , int weightIdx ) { \n\t$F2027 weigthsTab = atrac3p_wl_weights [ chan . chNum * NUM00 + weightIdx - NUM00 ] ; \n\tfor ( int i = NUM00 ; \n\ti < ctx . numQuantUnits ; \n\ti ++ ) { \n\t\tchan . quWordlen [ i ] += weigthsTab [ i ] ; \n\t\tif ( chan . quWordlen [ i ] < NUM00 || chan . quWordlen [ i ] > NUM00 ) { \n\t\t\tlog . error ( String . format ( NUM00 , i , chan . quWordlen [ i ] ) ) ; \n\t\t\treturn AT3P_ERROR ; \n\t\t\t} \n\t\t} \n\t$F1082 } \n"}, {"code": "public void testUpdate3 $F72 throws SQLException { \n\tDatabaseCreator . fillFKStrictTable ( conn ) ; \n\t$F283254 ( statement , DatabaseCreator ) $F62856 ( statement , DatabaseCreator ) } \n"}, {"code": "final void pruneExceptionalOut ( IR ir ) { \n\tint n = getNumberOfExceptionalOut ( ) ; \n\tif ( n > NUM00 ) { \n\t\tComputedBBEnum handlers = new ComputedBBEnum ( n ) ; \n\t\t$F12039 e = forwardRealInstrEnumerator ( ) ; \n\t\twhile $F1444 ( e ) { \n\t\t\t$F12043 ( x , e ) $F32409 bbs = getApplicableExceptionalOut ( x ) ; \n\t\t\twhile $F1444 ( bbs ) { \n\t\t\t\t$F32413 ( bb , bbs ) handlers . addPossiblyDuplicateElement ( bb ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tdeleteExceptionalOut ( ) ; \n\t\tfor ( int i = NUM00 ; \n\t\thandlers . hasMoreElements ( ) ; \n\t\ti ++ ) { \n\t\t\tExceptionHandlerBasicBlock b = ( ExceptionHandlerBasicBlock ) handlers . nextElement ( ) ; \n\t\t\tinsertOut ( b ) ; \n\t\t\t} \n\t\t} \n\trecomputeNormalOut ( ir ) ; \n\t} \n"}, {"code": "private Pair < DBIDVar , Double > singleIteration ( $F42616 relationx , Relation < ? extends NumberVector > relationy ) { \n\t$F2601 ( dim , RelationUtil , relationx ) $F2601 ( dimy , RelationUtil , relationy ) assert ( dim == NUM00 ) ; \n\tKNNQuery $F2193 knnQuery = QueryUtil . getKNNQuery ( relationx , getDistanceFunction ( ) , k + NUM00 ) ; \n\tArrayModifiableDBIDs ids = DBIDUtil . newArray ( relationx . getDBIDs ( ) ) ; \n\t$F112999 ( ids ) $F3789 X = new double [ ids . size ( ) ] [ NUM00 ] ; \n\t$F3789 F = new double [ ids . size ( ) ] [ ids . size ( ) ] ; \n\t$F3789 Y = new double [ ids . size ( ) ] [ dimy ] ; \n\t{ \n\t\tint i = NUM00 ; \n\t\tfor ( DBIDIter id = ids . iter ( ) ; \n\t\tid . valid ( ) ; \n\t\t$F102236 ( id , i ) ) { \n\t\t\t{ \n\t\t\t\t$F42637 ( vec , relationx , id ) double la = vec . doubleValue ( NUM00 ) ; \n\t\t\t\tdouble lo = vec . doubleValue ( NUM00 ) ; \n\t\t\t\tX [ i ] [ NUM00 ] = NUM00 ; \n\t\t\t\tX [ i ] [ NUM00 ] = la ; \n\t\t\t\tX [ i ] [ NUM00 ] = lo ; \n\t\t\t\tX [ i ] [ NUM00 ] = la * lo ; \n\t\t\t\tX [ i ] [ NUM00 ] = la * la ; \n\t\t\t\tX [ i ] [ NUM00 ] = lo * lo ; \n\t\t\t\t} \n\t\t\t{ \n\t\t\t\tfinal NumberVector vecy = relationy . get ( id ) ; \n\t\t\t\tfor ( $F119 ( d , dimy ) ) { \n\t\t\t\t\t$F42635 ( idy , vecy , d ) Y [ i ] [ d ] = idy ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t{ \n\t\t\t\tKNNList neighbors = knnQuery . getKNNForDBID ( id , k + NUM00 ) ; \n\t\t\t\tModifiableDBIDs neighborhood = DBIDUtil . newArray ( neighbors . size ( ) ) ; \n\t\t\t\tfor ( $F60471 ( neighbor , neighbors ) ) { \n\t\t\t\t\t$F95009 ( DBIDUtil , id , neighbor ) neighborhood . add ( neighbor ) ; \n\t\t\t\t\t} \n\t\t\t\t$F162129 ( F , i ) final int nweight = - NUM00 / neighborhood . size ( ) ; \n\t\t\t\tfor ( $F134224 ( iter , neighborhood ) ) { \n\t\t\t\t\tint pos = ids . binarySearch ( iter ) ; \n\t\t\t\t\tassert ( pos >= NUM00 ) ; \n\t\t\t\t\tF [ pos ] [ i ] = nweight ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F3789 common = times ( transposeTimesTranspose ( X , F ) , F ) ; \n\t$F3789 b = times ( inverse ( times ( common , X ) ) , times ( common , Y ) ) ; \n\t$F3789 sigmaMat = times ( F , minusEquals ( times ( X , b ) , times ( F , Y ) ) ) ; \n\tfinal double sigma_sum_square = normF ( sigmaMat ) / ( $F2281 ( relationx ) - NUM00 ) ; \n\tfinal double norm = NUM00 / Math . sqrt ( sigma_sum_square ) ; \n\t$F3789 E = timesEquals ( times ( F , minus ( Y , times ( X , b ) ) ) , norm ) ; \n\tDBIDVar worstid = DBIDUtil . newVar ( ) ; \n\tdouble worstscore = Double . NEGATIVE_INFINITY ; \n\tint i = NUM00 ; \n\tfor ( DBIDIter id = ids . iter ( ) ; \n\tid . valid ( ) ; \n\t$F102236 ( id , i ) ) { \n\t\tdouble err = squareSum ( getRow ( E , i ) ) ; \n\t\tif ( err > worstscore ) { \n\t\t\tworstscore = err ; \n\t\t\tworstid . set ( id ) ; \n\t\t\t} \n\t\t} \n\treturn new $F24650 ( worstid , Math . sqrt ( worstscore ) ) ; \n\t} \n"}, {"code": "$F146067 ( zzBuffer , zzStartRead , zzMarkedPos ) "}, {"code": "private void cleanupMinidumpFile $F72 { \n\tif ( ! CrashFileManager . tryMarkAsUploaded ( mFileToUpload ) ) { \n\t\tLog . w ( TAG , NUM00 + mFileToUpload + NUM00 ) ; \n\t\tif $F7119 ( mFileToUpload ) { \n\t\t\t$F248237 ( Log , TAG , mFileToUpload ) } \n\t\t} \n\t} \n"}, {"code": "public String toSpacedString $F72 { \n\t$F61105 ( original , toString ) $F1121 ( builder ) for ( $F1088 ( i , original ) ) { \n\t\tif ( i > NUM00 && ( i % NUM00 ) == NUM00 ) $F84 ( builder ) $F4137 ( builder , original , i ) } \n\t$F92 ( builder ) } \n"}, {"code": "private int parseContentType $F4741 ( b , off ) throws ParseException { \n\tcontentTypeVal_ = PrimitivesParser . parseByte ( b , off ) ; \n\tif ( ContentType . deserialize ( contentTypeVal_ ) == null ) { \n\t\tthrow new BadCiphertextException $F580 ; \n\t\t} \n\t$F1082 } \n"}, {"code": "@ Benchmark public void nonCaching $F72 $F5795 ( run ) "}, {"code": "public int decode ( String data , OutputStream out ) throws IOException { \n\tbyte b1 , b2 , b3 , b4 ; \n\tint length = NUM00 ; \n\t$F1749 ( end , data ) while ( end > NUM00 ) { \n\t\tif ( ! ignore ( data . charAt ( end - NUM00 ) ) ) $F5153 end -- ; \n\t\t} \n\tint i = NUM00 ; \n\tint finish = end - NUM00 ; \n\ti = nextI ( data , i , finish ) ; \n\twhile ( i < finish ) { \n\t\t$F75763 ( b1 , decodingTable , data , i ) i = nextI ( data , i , finish ) ; \n\t\t$F75763 ( b2 , decodingTable , data , i ) i = nextI ( data , i , finish ) ; \n\t\t$F75763 ( b3 , decodingTable , data , i ) i = nextI ( data , i , finish ) ; \n\t\t$F75763 ( b4 , decodingTable , data , i ) $F75765 ( b1 , b2 , b3 , b4 ) $F75768 ( out , b1 , b2 ) $F75768 ( out , b2 , b3 ) $F75770 ( out , b3 , b4 ) length += NUM00 ; \n\t\ti = nextI ( data , i , finish ) ; \n\t\t} \n\tlength += decodeLastBlock ( out , data . charAt ( end - NUM00 ) , data . charAt ( end - NUM00 ) , data . charAt ( end - NUM00 ) , data . charAt ( end - NUM00 ) ) ; \n\treturn length ; \n\t} \n"}, {"code": "private void rLineTo ( float dx , float dy ) { \n\tif ( isEmpty ( ) ) { \n\t\tmPath . moveTo ( mLastX = NUM00 , mLastY = NUM00 ) ; \n\t\t} \n\tdx += mLastX ; \n\tdy += mLastY ; \n\tmPath . lineTo ( mLastX = dx , mLastY = dy ) ; \n\t} \n"}, {"code": "$F1 public ConflictResults parseOutput $F2236 ( stdout , stderr ) { \n\t$F191108 ( contentConflicts ) $F191108 ( renameConflicts ) $F191108 ( bothConflicts ) final $F806 lines = getLines ( stderr ) ; \n\tfor ( final String line : lines ) { \n\t\t$F55879 ( index , line ) if ( index != - NUM00 ) { \n\t\t\tif ( StringUtils . endsWith ( line , BOTH_CONFLICTS_SUFFIX ) ) { \n\t\t\t\tbothConflicts . add ( line . substring ( NUM00 , index ) ) ; \n\t\t\t\t} \n\t\t\telse if ( StringUtils . endsWith ( line , RENAME_CONFLICT_SUFFIX ) ) { \n\t\t\t\trenameConflicts . add ( line . substring ( NUM00 , index ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tcontentConflicts . add ( line . substring ( NUM00 , index ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn new ConflictResults ( contentConflicts , renameConflicts , bothConflicts ) ; \n\t} \n"}, {"code": "protected void sendStart ( final OutputStream out ) throws IOException { \n\t$F1932 ( LOG ) out . write ( EXTRA_BYTES ) ; \n\tout . write ( getPartBoundary ( ) ) ; \n\tout . write ( CRLF_BYTES ) ; \n\t} \n"}, {"code": "public void addActualQty ( BigDecimal add ) { \n\tm_actualQty = m_actualQty . add ( add ) ; \n\t} \n"}, {"code": "protected static boolean isVowel ( final char c ) { \n\tfinal char l = Character . toLowerCase ( c ) ; \n\treturn ( $F152535 ( l ) || ( l == NUM00 ) || ( l == NUM00 ) ) ; \n\t} \n"}, {"code": "private $F96 createPreviewBuffer ( Size previewSize ) { \n\tint bitsPerPixel = ImageFormat . getBitsPerPixel ( ImageFormat . NV21 ) ; \n\tlong sizeInBits = previewSize . getHeight ( ) * previewSize . getWidth ( ) * bitsPerPixel ; \n\tint bufferSize = $F96308 ( Math , sizeInBits ) + NUM00 ; \n\t$F2175 ( byteArray , bufferSize ) $F23500 ( buffer , ByteBuffer , byteArray ) if ( ! buffer . hasArray ( ) || ( buffer . array ( ) != byteArray ) ) $F4639 mBytesToByteBuffer . put ( byteArray , buffer ) ; \n\treturn byteArray ; \n\t} \n"}, {"code": "$F46189 ( task , initExecutorsIfNeed , taskExecutorForCachedImages ) "}, {"code": "public static void printStackTrace ( SQLException e , PrintWriter pw ) { \n\tSQLException next = e ; \n\twhile ( next != null ) { \n\t\tnext . printStackTrace ( pw ) ; \n\t\tnext = next . getNextException ( ) ; \n\t\tif ( next != null ) $F12204 ( pw ) } \n\t} \n"}, {"code": "protected void initializeWorld $F72 { \n\tBody ground = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\tground . addFixture ( bf ) ; \n\t\t} \n\tground . translate ( new Vector2 $F261843 ) ; \n\tground . setMass ( MassType . INFINITE ) ; \n\tworld . addBody ( ground ) ; \n\tBody head = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createCircle ( NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\thead . addFixture ( bf ) ; \n\t\t} \n\thead . setMass ( MassType . NORMAL ) ; \n\tworld . addBody ( head ) ; \n\tBody torso = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\ttorso . addFixture ( bf ) ; \n\t\t} \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tc . translate ( new Vector2 $F32532 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\ttorso . addFixture ( bf ) ; \n\t\t} \n\ttorso . translate ( new Vector2 $F261843 ) ; \n\ttorso . setMass ( MassType . NORMAL ) ; \n\tworld . addBody ( torso ) ; \n\tBody rightHumerus = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\trightHumerus . addFixture ( bf ) ; \n\t\t} \n\trightHumerus . translate ( new Vector2 $F261843 ) ; \n\trightHumerus . setMass ( MassType . NORMAL ) ; \n\tworld . addBody ( rightHumerus ) ; \n\tBody rightUlna = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\trightUlna . addFixture ( bf ) ; \n\t\t} \n\trightUlna . translate ( new Vector2 $F261843 ) ; \n\trightUlna . setMass ( MassType . NORMAL ) ; \n\tworld . addBody ( rightUlna ) ; \n\tBody neck = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\tneck . addFixture ( bf ) ; \n\t\t} \n\tneck . translate ( new Vector2 $F261843 ) ; \n\tneck . setMass ( MassType . NORMAL ) ; \n\tworld . addBody ( neck ) ; \n\tBody leftHumerus = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\tleftHumerus . addFixture ( bf ) ; \n\t\t} \n\tleftHumerus . translate ( new Vector2 ( $F64496 ) ) ; \n\tleftHumerus . setMass ( MassType . NORMAL ) ; \n\tworld . addBody ( leftHumerus ) ; \n\tBody leftUlna = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\tleftUlna . addFixture ( bf ) ; \n\t\t} \n\tleftUlna . translate ( new Vector2 ( $F64496 ) ) ; \n\tleftUlna . setMass ( MassType . NORMAL ) ; \n\tworld . addBody ( leftUlna ) ; \n\tBody rightFemur = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\trightFemur . addFixture ( bf ) ; \n\t\t} \n\trightFemur . translate ( new Vector2 $F261843 ) ; \n\trightFemur . setMass ( MassType . NORMAL ) ; \n\tworld . addBody ( rightFemur ) ; \n\tBody leftFemur = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\tleftFemur . addFixture ( bf ) ; \n\t\t} \n\tleftFemur . translate ( new Vector2 ( $F64496 ) ) ; \n\tleftFemur . setMass ( MassType . NORMAL ) ; \n\tworld . addBody ( leftFemur ) ; \n\tBody rightTibia = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\trightTibia . addFixture ( bf ) ; \n\t\t} \n\trightTibia . translate ( new Vector2 $F261843 ) ; \n\trightTibia . setMass ( MassType . NORMAL ) ; \n\tworld . addBody ( rightTibia ) ; \n\tBody leftTibia = new SimulationBody $F72 ; \n\t{ \n\t\tConvex c = Geometry . createRectangle ( NUM00 , NUM00 ) ; \n\t\tBodyFixture bf = new BodyFixture ( c ) ; \n\t\tleftTibia . addFixture ( bf ) ; \n\t\t} \n\tleftTibia . translate ( new Vector2 ( $F64496 ) ) ; \n\tleftTibia . setMass ( MassType . NORMAL ) ; \n\tworld . addBody ( leftTibia ) ; \n\tRevoluteJoint headToNeck = new RevoluteJoint ( head , neck , new Vector2 $F261843 ) ; \n\theadToNeck . setLimitEnabled ( _BOOL ) ; \n\theadToNeck . setLimits ( Math . toRadians ( NUM00 ) , Math . toRadians ( NUM00 ) ) ; \n\theadToNeck . setReferenceAngle ( Math . toRadians ( NUM00 ) ) ; \n\theadToNeck . setMotorEnabled ( _BOOL ) ; \n\theadToNeck . setMotorSpeed ( Math . toRadians ( NUM00 ) ) ; \n\theadToNeck . setMaximumMotorTorque ( NUM00 ) ; \n\theadToNeck . setCollisionAllowed ( _BOOL ) ; \n\tworld . addJoint ( headToNeck ) ; \n\tRevoluteJoint neckToTorso = new RevoluteJoint ( neck , torso , new Vector2 $F261843 ) ; \n\tneckToTorso . setLimitEnabled ( _BOOL ) ; \n\tneckToTorso . setLimits ( Math . toRadians ( NUM00 ) , Math . toRadians ( NUM00 ) ) ; \n\tneckToTorso . setReferenceAngle ( Math . toRadians ( NUM00 ) ) ; \n\tneckToTorso . setMotorEnabled ( _BOOL ) ; \n\tneckToTorso . setMotorSpeed ( Math . toRadians ( NUM00 ) ) ; \n\tneckToTorso . setMaximumMotorTorque ( NUM00 ) ; \n\tneckToTorso . setCollisionAllowed ( _BOOL ) ; \n\tworld . addJoint ( neckToTorso ) ; \n\tRevoluteJoint torsoToLeftHumerus = new RevoluteJoint ( torso , leftHumerus , new Vector2 ( $F64496 ) ) ; \n\ttorsoToLeftHumerus . setLimitEnabled ( _BOOL ) ; \n\ttorsoToLeftHumerus . setLimits ( Math . toRadians ( NUM00 ) , Math . toRadians ( NUM00 ) ) ; \n\ttorsoToLeftHumerus . setReferenceAngle ( Math . toRadians ( NUM00 ) ) ; \n\ttorsoToLeftHumerus . setMotorEnabled ( _BOOL ) ; \n\ttorsoToLeftHumerus . setMotorSpeed ( Math . toRadians ( NUM00 ) ) ; \n\ttorsoToLeftHumerus . setMaximumMotorTorque ( NUM00 ) ; \n\ttorsoToLeftHumerus . setCollisionAllowed ( _BOOL ) ; \n\tworld . addJoint ( torsoToLeftHumerus ) ; \n\tRevoluteJoint torsoToRightHumerus = new RevoluteJoint ( torso , rightHumerus , new Vector2 $F261843 ) ; \n\ttorsoToRightHumerus . setLimitEnabled ( _BOOL ) ; \n\ttorsoToRightHumerus . setLimits ( Math . toRadians ( NUM00 ) , Math . toRadians ( NUM00 ) ) ; \n\ttorsoToRightHumerus . setReferenceAngle ( Math . toRadians ( NUM00 ) ) ; \n\ttorsoToRightHumerus . setMotorEnabled ( _BOOL ) ; \n\ttorsoToRightHumerus . setMotorSpeed ( Math . toRadians ( NUM00 ) ) ; \n\ttorsoToRightHumerus . setMaximumMotorTorque ( NUM00 ) ; \n\ttorsoToRightHumerus . setCollisionAllowed ( _BOOL ) ; \n\tworld . addJoint ( torsoToRightHumerus ) ; \n\tRevoluteJoint rightHumerusToRightUlna = new RevoluteJoint ( rightHumerus , rightUlna , new Vector2 $F261843 ) ; \n\trightHumerusToRightUlna . setLimitEnabled ( _BOOL ) ; \n\trightHumerusToRightUlna . setLimits ( Math . toRadians ( NUM00 ) , Math . toRadians ( NUM00 ) ) ; \n\trightHumerusToRightUlna . setReferenceAngle ( Math . toRadians ( NUM00 ) ) ; \n\trightHumerusToRightUlna . setMotorEnabled ( _BOOL ) ; \n\trightHumerusToRightUlna . setMotorSpeed ( Math . toRadians ( NUM00 ) ) ; \n\trightHumerusToRightUlna . setMaximumMotorTorque ( NUM00 ) ; \n\trightHumerusToRightUlna . setCollisionAllowed ( _BOOL ) ; \n\tworld . addJoint ( rightHumerusToRightUlna ) ; \n\tRevoluteJoint leftHumerusToLeftUlna = new RevoluteJoint ( leftHumerus , leftUlna , new Vector2 ( $F64496 ) ) ; \n\tleftHumerusToLeftUlna . setLimitEnabled ( _BOOL ) ; \n\tleftHumerusToLeftUlna . setLimits ( Math . toRadians ( NUM00 ) , Math . toRadians ( NUM00 ) ) ; \n\tleftHumerusToLeftUlna . setReferenceAngle ( Math . toRadians ( NUM00 ) ) ; \n\tleftHumerusToLeftUlna . setMotorEnabled ( _BOOL ) ; \n\tleftHumerusToLeftUlna . setMotorSpeed ( Math . toRadians ( NUM00 ) ) ; \n\tleftHumerusToLeftUlna . setMaximumMotorTorque ( NUM00 ) ; \n\tleftHumerusToLeftUlna . setCollisionAllowed ( _BOOL ) ; \n\tworld . addJoint ( leftHumerusToLeftUlna ) ; \n\tRevoluteJoint torsoToRightFemur = new RevoluteJoint ( torso , rightFemur , new Vector2 $F261843 ) ; \n\ttorsoToRightFemur . setLimitEnabled ( _BOOL ) ; \n\ttorsoToRightFemur . setLimits ( Math . toRadians ( NUM00 ) , Math . toRadians ( NUM00 ) ) ; \n\ttorsoToRightFemur . setReferenceAngle ( Math . toRadians ( NUM00 ) ) ; \n\ttorsoToRightFemur . setMotorEnabled ( _BOOL ) ; \n\ttorsoToRightFemur . setMotorSpeed ( Math . toRadians ( NUM00 ) ) ; \n\ttorsoToRightFemur . setMaximumMotorTorque ( NUM00 ) ; \n\ttorsoToRightFemur . setCollisionAllowed ( _BOOL ) ; \n\tworld . addJoint ( torsoToRightFemur ) ; \n\tRevoluteJoint torsoToLeftFemur = new RevoluteJoint ( torso , leftFemur , new Vector2 ( $F64496 ) ) ; \n\ttorsoToLeftFemur . setLimitEnabled ( _BOOL ) ; \n\ttorsoToLeftFemur . setLimits ( Math . toRadians ( NUM00 ) , Math . toRadians ( NUM00 ) ) ; \n\ttorsoToLeftFemur . setReferenceAngle ( Math . toRadians ( NUM00 ) ) ; \n\ttorsoToLeftFemur . setMotorEnabled ( _BOOL ) ; \n\ttorsoToLeftFemur . setMotorSpeed ( Math . toRadians ( NUM00 ) ) ; \n\ttorsoToLeftFemur . setMaximumMotorTorque ( NUM00 ) ; \n\ttorsoToLeftFemur . setCollisionAllowed ( _BOOL ) ; \n\tworld . addJoint ( torsoToLeftFemur ) ; \n\tRevoluteJoint rightFemurToRightTibia = new RevoluteJoint ( rightFemur , rightTibia , new Vector2 $F261843 ) ; \n\trightFemurToRightTibia . setLimitEnabled ( _BOOL ) ; \n\trightFemurToRightTibia . setLimits ( Math . toRadians ( NUM00 ) , Math . toRadians ( NUM00 ) ) ; \n\trightFemurToRightTibia . setReferenceAngle ( Math . toRadians ( NUM00 ) ) ; \n\trightFemurToRightTibia . setMotorEnabled ( _BOOL ) ; \n\trightFemurToRightTibia . setMotorSpeed ( Math . toRadians ( NUM00 ) ) ; \n\trightFemurToRightTibia . setMaximumMotorTorque ( NUM00 ) ; \n\trightFemurToRightTibia . setCollisionAllowed ( _BOOL ) ; \n\tworld . addJoint ( rightFemurToRightTibia ) ; \n\tRevoluteJoint leftFemurToLeftTibia = new RevoluteJoint ( leftFemur , leftTibia , new Vector2 ( $F64496 ) ) ; \n\tleftFemurToLeftTibia . setLimitEnabled ( _BOOL ) ; \n\tleftFemurToLeftTibia . setLimits ( Math . toRadians ( NUM00 ) , Math . toRadians ( NUM00 ) ) ; \n\tleftFemurToLeftTibia . setReferenceAngle ( Math . toRadians ( NUM00 ) ) ; \n\tleftFemurToLeftTibia . setMotorEnabled ( _BOOL ) ; \n\tleftFemurToLeftTibia . setMotorSpeed ( Math . toRadians ( NUM00 ) ) ; \n\tleftFemurToLeftTibia . setMaximumMotorTorque ( NUM00 ) ; \n\tleftFemurToLeftTibia . setCollisionAllowed ( _BOOL ) ; \n\tworld . addJoint ( leftFemurToLeftTibia ) ; \n\t} \n"}, {"code": "public void readData ( DataInput din ) throws IOException { \n\t$F1643 ( byteCount , din ) $F89921 ( status , din ) $F89921 ( eventCount , din ) $F89921 ( messageCount , din ) $F41018 ( events , byteCount ) ; \n\tif $F3305 ( events ) { \n\t\tdin . readFully ( events , NUM00 , events . length ) ; \n\t\t} \n\t} \n"}, {"code": "public E remove ( int index ) { \n\t$F677 ( lock , this ) $F790 ( lock ) try { \n\t\t$F8867 ( elements , getArray ) int len = elements . length ; \n\t\tE oldValue = get ( elements , index ) ; \n\t\tint numMoved = len - index - NUM00 ; \n\t\tif ( numMoved == NUM00 ) setArray ( Arrays . copyOf ( elements , len - NUM00 ) ) ; \n\t\telse { \n\t\t\t$F131 newElements = new Object [ len - NUM00 ] ; \n\t\t\t$F135 ( System , elements , newElements , index ) System . arraycopy ( elements , index + NUM00 , newElements , index , numMoved ) ; \n\t\t\tsetArray ( newElements ) ; \n\t\t\t} \n\t\treturn oldValue ; \n\t\t} \n\t$F796 ( lock ) } \n"}, {"code": "void createEdges ( Number [ ] v ) { \n\t$F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) $F31361 ( graph , Math , v , EdgeType ) } \n"}, {"code": "$F1431 public DataResponse paginateList ( $F2540 ( requestParams ) , PaginateRequest paginateRequest , Object query , String defaultSort , Map properties ) { \n\tif ( paginateRequest == null ) { \n\t\tpaginateRequest = new PaginateRequest $F72 ; \n\t\t} \n\tif ( paginateRequest . getStart ( ) == null ) { \n\t\tpaginateRequest . setStart ( RequestUtil . getInteger ( requestParams , NUM00 , NUM00 ) ) ; \n\t\t} \n\tif ( paginateRequest . getSize ( ) == null ) { \n\t\tpaginateRequest . setSize ( RequestUtil . getInteger ( requestParams , NUM00 , NUM00 ) ) ; \n\t\t} \n\tif ( paginateRequest . getOrder ( ) == null ) { \n\t\tpaginateRequest . setOrder ( requestParams . get ( NUM00 ) ) ; \n\t\t} \n\tif ( paginateRequest . getSort ( ) == null ) { \n\t\tpaginateRequest . setSort ( requestParams . get ( NUM00 ) ) ; \n\t\t} \n\tInteger start = paginateRequest . getStart ( ) ; \n\tif ( start == null || start < NUM00 ) { \n\t\tstart = NUM00 ; \n\t\t} \n\tInteger size = paginateRequest . getSize ( ) ; \n\tif ( size == null || size < NUM00 ) { \n\t\tsize = NUM00 ; \n\t\t} \n\tString sort = paginateRequest . getSort ( ) ; \n\t$F13265 ( sort , defaultSort ) String order = paginateRequest . getOrder ( ) ; \n\t$F23170 ( order ) if $F31724 ( sort , properties ) { \n\t\t$F16628 ( qp , properties , sort ) if ( qp == null ) { \n\t\t\tthrow new ActivitiIllegalArgumentException ( NUM00 + sort + NUM00 ) ; \n\t\t\t} \n\t\tif ( query instanceof AbstractQuery ) { \n\t\t\tAbstractQuery queryObject = ( AbstractQuery ) query ; \n\t\t\tQueryProperty queryProperty = ( QueryProperty ) qp ; \n\t\t\tqueryObject . orderBy ( queryProperty ) ; \n\t\t\tif $F3057 ( order ) { \n\t\t\t\tqueryObject . asc ( ) ; \n\t\t\t\t} \n\t\t\telse if $F3057 ( order ) { \n\t\t\t\tqueryObject . desc ( ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tthrow new ActivitiIllegalArgumentException ( NUM00 + order + NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( query instanceof org . activiti . idm . engine . impl . AbstractQuery ) { \n\t\t\torg . activiti . idm . engine . impl . AbstractQuery queryObject = ( org . activiti . idm . engine . impl . AbstractQuery ) query ; \n\t\t\torg . activiti . idm . api . QueryProperty queryProperty = ( org . activiti . idm . api . QueryProperty ) qp ; \n\t\t\tqueryObject . orderBy ( queryProperty ) ; \n\t\t\tif $F3057 ( order ) { \n\t\t\t\tqueryObject . asc ( ) ; \n\t\t\t\t} \n\t\t\telse if $F3057 ( order ) { \n\t\t\t\tqueryObject . desc ( ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tthrow new ActivitiIllegalArgumentException ( NUM00 + order + NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tDataResponse response = new DataResponse $F72 ; \n\tresponse . setStart ( start ) ; \n\tresponse . setSort ( sort ) ; \n\tresponse . setOrder ( order ) ; \n\tif ( query instanceof AbstractQuery ) { \n\t\tAbstractQuery queryObject = ( AbstractQuery ) query ; \n\t\tList list = processList ( queryObject . listPage ( start , size ) ) ; \n\t\tresponse . setTotal ( queryObject . count ( ) ) ; \n\t\tresponse . setSize ( list . size ( ) ) ; \n\t\tresponse . setData ( list ) ; \n\t\t} \n\telse if ( query instanceof org . activiti . idm . engine . impl . AbstractQuery ) { \n\t\torg . activiti . idm . engine . impl . AbstractQuery queryObject = ( org . activiti . idm . engine . impl . AbstractQuery ) query ; \n\t\tList list = processList ( queryObject . listPage ( start , size ) ) ; \n\t\tresponse . setTotal ( queryObject . count ( ) ) ; \n\t\tresponse . setSize ( list . size ( ) ) ; \n\t\tresponse . setData ( list ) ; \n\t\t} \n\treturn response ; \n\t} \n"}, {"code": "private static < T extends Component > T buildRow ( final JPanel panel , final String labelText , final String hint , final T component , final boolean isLast ) { \n\t$F174885 ( component , COLORPANEL_WIDTH , COLORPANEL_HEIGHT ) $F40881 ( rowPanel ) rowPanel . setBorder ( new EmptyBorder ( NUM00 , NUM00 , isLast ? NUM00 : NUM00 , NUM00 ) ) ; \n\trowPanel . add ( new JLabel ( labelText ) , BorderLayout . CENTER ) ; \n\trowPanel . add ( CHintCreator . createHintPanel ( component , hint ) , BorderLayout . EAST ) ; \n\tpanel . add ( rowPanel ) ; \n\treturn component ; \n\t} \n"}, {"code": "public Builder addTargetElements ( Element ... additionalTargets ) { \n\t$F68861 ( i , additionalTargets , targetElements ) return this ; \n\t} \n"}, {"code": "public void curveTo $F130908 ( x1 , y1 , x2 , y2 , x3 , y3 ) { \n\tif $F37713 ( size ) { \n\t\tthrow new IllegalPathStateException $F580 ; \n\t\t} \n\tNode lastPoint = get ( size ( ) - NUM00 ) ; \n\tlastPoint . mask |= C2_MASK ; \n\tlastPoint . x [ NUM00 ] = x1 ; \n\tlastPoint . y [ NUM00 ] = y1 ; \n\tif ( ( lastPoint . mask & C1C2_MASK ) == C1C2_MASK ) { \n\t\tlastPoint . keepColinear = Math . abs ( Geom . angle ( lastPoint . x [ NUM00 ] , lastPoint . y [ NUM00 ] , lastPoint . x [ NUM00 ] , lastPoint . y [ NUM00 ] ) - Geom . angle ( lastPoint . x [ NUM00 ] , lastPoint . y [ NUM00 ] , lastPoint . x [ NUM00 ] , lastPoint . y [ NUM00 ] ) ) < NUM00 ; \n\t\t} \n\tadd ( new Node ( C1_MASK , x3 , y3 , x2 , y2 , x3 , y3 ) ) ; \n\t} \n"}, {"code": "public void testDivideRoundUpNeg $F72 { \n\tString a = NUM00 ; \n\tint aScale = - NUM00 ; \n\tString b = NUM00 ; \n\tint bScale = NUM00 ; \n\tString c = NUM00 ; \n\tint resScale = - NUM00 ; \n\t$F1918 ( aNumber , a , aScale ) $F1918 ( bNumber , b , bScale ) BigDecimal result = aNumber . divide ( bNumber , resScale , BigDecimal . ROUND_UP ) ; \n\t$F1925 ( assertEquals , c , result ) $F1928 ( assertEquals , resScale , result ) } \n"}, {"code": "private void writeMetaBits $F72 throws IOException { \n\tfinal byte $F46499 = genMetabitsData ( ) ; \n\tfinal long addr = m_metaBitsAddr < NUM00 ? physicalAddress ( m_metaBitsAddr ) : ( ( long ) m_metaBitsAddr ) < < ALLOCATION_SCALEUP ; \n\tif ( addr == NUM00 ) $F1155 ( m_metaBitsAddr ) assert addr > NUM00 ; \n\ttry { \n\t\t$F51620 ( log , addr ) m_writeCacheService . write ( addr , ByteBuffer . wrap ( buf ) , NUM00 , _BOOL , m_metaBitsAddr < NUM00 ? m_metaBitsAddr : NUM00 ) ; \n\t\t} \n\t$F73196 ( e ) } \n"}, {"code": "private void openCounterDataInputStream $F72 throws DataFallbackException { \n\tif ( dInput == null ) { \n\t\tif $F585 ( LOG ) LOG . debug ( $F2990 ( counterFile ) ) ; \n\t\ttry { \n\t\t\t$F438 ( dInput , counterFile ) } \n\t\tcatch ( IOException e ) { \n\t\t\tthrow new DataFallbackException $F1783 ( e ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public CompositePredicate ( Predicate p1 , Predicate p2 ) $F23287 ( m_clauses , p1 , p2 ) "}, {"code": "public String readNextWord $F72 { \n\tif $F14498 ( tokenizer ) { \n\t\treturn tokenizer . nextToken ( ) ; \n\t\t} \n\telse $F1337 } \n"}, {"code": "public static final void toString ( StringBuffer output , String str ) { \n\tif ( str == null ) { \n\t\t$F84 ( output ) $F665 } \n\t$F6407 ( output , toString , str ) } \n"}, {"code": "public static boolean testFileExists ( String name ) { \n\tboolean status ; \n\tif ( ( testSaveLocationExists ( ) ) && $F1264 ( name ) ) { \n\t\t$F63896 ( path , Environment ) File $F63897 ( newPath , constructFilePaths , path , name ) ; \n\t\t$F63900 ( status , newPath ) } \n\telse { \n\t\tstatus = _BOOL ; \n\t\t} \n\treturn status ; \n\t} \n"}, {"code": "$F1 public void buildAssociations ( Instances data ) throws Exception { \n\tbuildAssociations ( ( Object ) data ) ; \n\t$F665 } \n"}, {"code": "public void testFloatValueNeg $F72 { \n\tString a = NUM00 ; \n\t$F12208 ( aNumber , a ) float result = - NUM00 ; \n\t$F229387 ( assertTrue , aNumber , result ) } \n"}, {"code": "public static String replaceFirst $F1947 ( s , sub , with ) { \n\t$F12747 ( i , s , sub ) $F5881 ( i , s ) return s . substring ( NUM00 , i ) + with + $F29991 ( s , i , sub ) ; \n\t} \n"}, {"code": "private LocationHelper $F72 $F845 "}, {"code": "public void addObject ( String s ) throws Exception { \n\tinspect ( Class . forName ( s ) ) ; \n\t} \n"}, {"code": "public static Element firstChildElement ( Element element , $F2689 childElementNames ) { \n\t$F1275 ( element ) $F15376 ( node , element ) if ( node != null ) { \n\t\tdo { \n\t\t\tif ( $F15377 ( node , Node ) && childElementNames . contains ( node . getNodeName ( ) ) ) { \n\t\t\t\t$F6721 ( childElement , node ) return childElement ; \n\t\t\t\t} \n\t\t\t} \n\t\twhile $F15388 ( node ) ; \n\t\t} \n\t$F1274 } \n"}, {"code": "public static void main $F4374 ( args ) throws Exception { \n\tfinal JFrame frame = new HTMLTest ( args ) ; \n\t$F30055 ( frame , JFrame ) $F30070 ( frame ) frame . setVisible ( _BOOL ) ; \n\t} \n"}, {"code": "$F16587 ( rawString ) "}, {"code": "public final void testAddAllHelperTextColorsFromArray $F72 { \n\tint helperTextColor1 = Color . BLACK ; \n\tint helperTextColor2 = Color . GRAY ; \n\t$F11844 ( helperTextColors1 ) helperTextColors1 [ NUM00 ] = helperTextColor1 ; \n\thelperTextColors1 [ NUM00 ] = helperTextColor2 ; \n\tPasswordEditText passwordEditText = new PasswordEditText ( getContext ( ) ) ; \n\tpasswordEditText . addAllHelperTextColors ( helperTextColors1 ) ; \n\tpasswordEditText . addAllHelperTextColors ( helperTextColors1 ) ; \n\t$F2306 helperTextColors2 = passwordEditText . getHelperTextColors ( ) ; \n\tassertEquals ( $F11620 ( helperTextColors1 , helperTextColors2 ) ) ; \n\tIterator $F2305 iterator = helperTextColors2 . iterator ( ) ; \n\tassertEquals ( helperTextColor1 , ( int ) iterator . next ( ) ) ; \n\tassertEquals ( helperTextColor2 , ( int ) iterator . next ( ) ) ; \n\t} \n"}, {"code": "private void normalize $F9830 ( in ) { \n\tdouble max = NUM00 ; \n\tfor ( double d : in ) { \n\t\t$F46000 ( max , Math , d ) } \n\tfor ( $F1139 ( i , in ) ) $F160348 ( in , i , max ) } \n"}, {"code": "public void add ( T graphic ) $F250537 ( mLock , mGraphics , graphic , postInvalidate ) "}, {"code": "public static boolean writeToFile $F22381 ( filename , message , append ) { \n\tboolean result ; \n\tBufferedWriter writer ; \n\ttry { \n\t\t$F88736 ( writer , filename , append ) writer . write ( message ) ; \n\t\t$F1769 ( writer ) $F1206 ( writer ) $F59 ( writer ) result = _BOOL ; \n\t\t} \n\t$F28453 ( result , _BOOL ) return result ; \n\t} \n"}, {"code": "public int hashCode $F72 { \n\treturn ( NUM00 * colorModel . hashCode ( ) ) + ( NUM00 * sampleModel . hashCode ( ) ) ; \n\t} \n"}, {"code": "static public final float random ( float start , float end ) { \n\treturn start + random . nextFloat ( ) * ( end - start ) ; \n\t} \n"}, {"code": "public void writeFile ( String name , String mimeType , String fileName , $F96 data ) throws IOException { \n\t$F826 ( data ) $F50542 ( fileName ) out . writeBytes ( PREFIX ) ; \n\tout . writeBytes ( boundary ) ; \n\tout . writeBytes ( NEWLINE ) ; \n\tout . writeBytes ( NUM00 + name + NUM00 + fileName + NUM00 ) ; \n\tout . writeBytes ( NEWLINE ) ; \n\tif ( mimeType != null ) { \n\t\tout . writeBytes ( NUM00 + mimeType ) ; \n\t\tout . writeBytes ( NEWLINE ) ; \n\t\t} \n\tout . writeBytes ( NEWLINE ) ; \n\t$F17918 ( out , data ) out . writeBytes ( NEWLINE ) ; \n\t$F1206 ( out ) } \n"}, {"code": "@ TargetApi ( Build . VERSION_CODES . ICE_CREAM_SANDWICH_MR1 ) private void onConfigurationChanged ( Configuration newConfig ) { \n\tfinal Locale newLocale = newConfig . locale ; \n\t$F7224 ( newLocale , mSystemLocale ) mSystemLocale = newLocale ; \n\tensureSupportedLocale ( ) ; \n\t} \n"}, {"code": "private static Boolean findConvexPolygon ( final PlanetModel planetModel , final Edge currentEdge , final GeoCompositePolygon rval , final EdgeBuffer edgeBuffer , final List < GeoPolygon > holes , final GeoPoint testPoint ) { \n\tfinal Set $F146131 $F9626 ( includedEdges ) ; \n\tincludedEdges . add ( currentEdge ) ; \n\tEdge firstEdge = currentEdge ; \n\tEdge lastEdge = currentEdge ; \n\twhile ( _BOOL ) { \n\t\tif ( firstEdge . startPoint == lastEdge . endPoint ) $F5153 final Edge newLastEdge = edgeBuffer . getNext ( lastEdge ) ; \n\t\tif ( isWithin ( newLastEdge . endPoint , includedEdges ) ) { \n\t\t\tfinal SidedPlane returnBoundary ; \n\t\t\tif ( firstEdge . startPoint != newLastEdge . endPoint ) { \n\t\t\t\treturnBoundary = new SidedPlane ( firstEdge . endPoint , firstEdge . startPoint , newLastEdge . endPoint ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\treturnBoundary = null ; \n\t\t\t\t} \n\t\t\tboolean foundPointInside = _BOOL ; \n\t\t\tfinal Iterator $F146131 edgeIterator = edgeBuffer . iterator ( ) ; \n\t\t\twhile $F2921 ( edgeIterator ) { \n\t\t\t\tfinal Edge edge = edgeIterator . next ( ) ; \n\t\t\t\tif ( ! includedEdges . contains ( edge ) && edge != newLastEdge ) { \n\t\t\t\t\tif ( edge . startPoint != newLastEdge . endPoint ) { \n\t\t\t\t\t\tif ( isWithin ( edge . startPoint , includedEdges , newLastEdge , returnBoundary ) ) $F3468 ( foundPointInside , _BOOL ) } \n\t\t\t\t\tif ( edge . endPoint != firstEdge . startPoint ) { \n\t\t\t\t\t\tif ( isWithin ( edge . endPoint , includedEdges , newLastEdge , returnBoundary ) ) $F3468 ( foundPointInside , _BOOL ) } \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( ! foundPointInside ) { \n\t\t\t\tincludedEdges . add ( newLastEdge ) ; \n\t\t\t\tlastEdge = newLastEdge ; \n\t\t\t\t$F598 } \n\t\t\t} \n\t\t$F597 } \n\twhile ( _BOOL ) { \n\t\tif ( firstEdge . startPoint == lastEdge . endPoint ) $F5153 final Edge newFirstEdge = edgeBuffer . getPrevious ( firstEdge ) ; \n\t\tif ( isWithin ( newFirstEdge . startPoint , includedEdges ) ) { \n\t\t\tfinal SidedPlane returnBoundary ; \n\t\t\tif ( newFirstEdge . startPoint != lastEdge . endPoint ) { \n\t\t\t\treturnBoundary = new SidedPlane ( lastEdge . startPoint , lastEdge . endPoint , newFirstEdge . startPoint ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\treturnBoundary = null ; \n\t\t\t\t} \n\t\t\tboolean foundPointInside = _BOOL ; \n\t\t\tfinal Iterator $F146131 edgeIterator = edgeBuffer . iterator ( ) ; \n\t\t\twhile $F2921 ( edgeIterator ) { \n\t\t\t\tfinal Edge edge = edgeIterator . next ( ) ; \n\t\t\t\tif ( ! includedEdges . contains ( edge ) && edge != newFirstEdge ) { \n\t\t\t\t\tif ( edge . startPoint != lastEdge . endPoint ) { \n\t\t\t\t\t\tif ( isWithin ( edge . startPoint , includedEdges , newFirstEdge , returnBoundary ) ) $F3468 ( foundPointInside , _BOOL ) } \n\t\t\t\t\tif ( edge . endPoint != newFirstEdge . startPoint ) { \n\t\t\t\t\t\tif ( isWithin ( edge . endPoint , includedEdges , newFirstEdge , returnBoundary ) ) $F3468 ( foundPointInside , _BOOL ) } \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( ! foundPointInside ) { \n\t\t\t\tincludedEdges . add ( newFirstEdge ) ; \n\t\t\t\tfirstEdge = newFirstEdge ; \n\t\t\t\t$F598 } \n\t\t\t} \n\t\t$F597 } \n\tif $F6214 ( includedEdges ) { \n\t\treturn _BOOL ; \n\t\t} \n\tfinal List < GeoPoint > points = new $F162971 ( $F2958 ( includedEdges ) ) ; \n\tfinal BitSet internalEdges = new BitSet $F716 ( includedEdges ) ; \n\tfinal boolean returnIsInternal ; \n\tif ( firstEdge . startPoint == lastEdge . endPoint ) { \n\t\tif $F6214 ( includedEdges ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\tEdge edge = firstEdge ; \n\t\tpoints . add ( edge . startPoint ) ; \n\t\tint k = NUM00 ; \n\t\twhile ( _BOOL ) { \n\t\t\t$F15290 ( edge , lastEdge ) points . add ( edge . endPoint ) ; \n\t\t\tinternalEdges . set ( k ++ , edge . isInternal ) ; \n\t\t\tedge = edgeBuffer . getNext ( edge ) ; \n\t\t\t} \n\t\treturnIsInternal = lastEdge . isInternal ; \n\t\tfor ( $F2277 ( i , points ) ) { \n\t\t\tfinal GeoPoint start = points . get ( i ) ; \n\t\t\tfinal GeoPoint end = points . get ( getLegalIndex ( i + NUM00 , points . size ( ) ) ) ; \n\t\t\tfinal Plane planeToFind = new Plane ( start , end ) ; \n\t\t\tint endPointIndex = - NUM00 ; \n\t\t\tfor ( $F2277 ( j , points ) ) { \n\t\t\t\tfinal int index = getLegalIndex ( j + i + NUM00 , points . size ( ) ) ; \n\t\t\t\tif ( ! planeToFind . evaluateIsZero ( points . get ( index ) ) ) $F3468 ( endPointIndex , index ) } \n\t\t\t$F5881 ( endPointIndex , _BOOL ) } \n\t\t$F725 ( edgeBuffer ) } \n\telse { \n\t\tfinal SidedPlane returnSidedPlane = new SidedPlane ( firstEdge . endPoint , _BOOL , firstEdge . startPoint , lastEdge . endPoint ) ; \n\t\tfinal Edge returnEdge = new Edge ( firstEdge . startPoint , lastEdge . endPoint , returnSidedPlane , _BOOL ) ; \n\t\tfinal $F146132 edges = new ArrayList $F146131 $F716 ( includedEdges ) ; \n\t\treturnIsInternal = _BOOL ; \n\t\tEdge edge = firstEdge ; \n\t\tpoints . add ( edge . startPoint ) ; \n\t\tint k = NUM00 ; \n\t\twhile ( _BOOL ) { \n\t\t\tpoints . add ( edge . endPoint ) ; \n\t\t\tinternalEdges . set ( k ++ , edge . isInternal ) ; \n\t\t\tedges . add ( edge ) ; \n\t\t\t$F15290 ( edge , lastEdge ) edge = edgeBuffer . getNext ( edge ) ; \n\t\t\t} \n\t\tfor ( $F2277 ( i , points ) ) { \n\t\t\tfinal GeoPoint start = points . get ( i ) ; \n\t\t\tfinal GeoPoint end = points . get ( getLegalIndex ( i + NUM00 , points . size ( ) ) ) ; \n\t\t\tfinal Plane planeToFind = new Plane ( start , end ) ; \n\t\t\tint endPointIndex = - NUM00 ; \n\t\t\tfor ( $F2277 ( j , points ) ) { \n\t\t\t\tfinal int index = getLegalIndex ( j + i + NUM00 , points . size ( ) ) ; \n\t\t\t\tif ( ! planeToFind . evaluateIsZero ( points . get ( index ) ) ) $F3468 ( endPointIndex , index ) } \n\t\t\t$F5881 ( endPointIndex , _BOOL ) } \n\t\tedgeBuffer . replace ( edges , returnEdge ) ; \n\t\t} \n\tif ( testPoint != null && holes != null && $F3816 ( holes ) ) { \n\t\tfinal GeoPolygon testPolygon = new GeoConvexPolygon ( planetModel , points , null , internalEdges , returnIsInternal ) ; \n\t\tif ( testPolygon . isWithin ( testPoint ) ) $F1337 } \n\tfinal GeoPolygon realPolygon = new GeoConvexPolygon ( planetModel , points , holes , internalEdges , returnIsInternal ) ; \n\tif ( testPoint != null && $F45555 ( holes ) ) { \n\t\tif ( realPolygon . isWithin ( testPoint ) ) $F1337 } \n\trval . addShape ( realPolygon ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static Keymap fromKey ( final String key ) { \n\t$F25770 ( key ) final Keymap searchResult = instances . get ( key ) ; \n\treturn searchResult ; \n\t} \n"}, {"code": "private static boolean isGMTish ( String name ) { \n\tif $F3599 ( name ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F12685 ( c1 , name ) $F12685 ( c2 , name ) $F12685 ( c3 , name ) if ( ! ( $F37111 ( c1 ) && $F37111 ( c2 ) && $F37111 ( c3 ) ) && ! ( $F37111 ( c1 ) && $F37111 ( c2 ) && $F37111 ( c3 ) ) && ! ( $F37111 ( c1 ) && $F37111 ( c2 ) && ( c3 == NUM00 ) ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\t$F25111 ( name , _BOOL ) $F28924 ( offset , name ) if $F3106 ( offset ) { \n\t\treturn offset . equals ( NUM00 ) || offset . equals ( NUM00 ) || offset . equals ( NUM00 ) ; \n\t\t} \n\telse { \n\t\treturn offset . equals ( NUM00 ) || offset . equals ( NUM00 ) || offset . equals ( NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private static String massageURI ( String uri ) { \n\t$F1382 ( uri ) $F1384 ( protocolEnd , uri ) if ( protocolEnd < NUM00 || isColonFollowedByPortNumber ( uri , protocolEnd ) ) $F21679 ( uri ) return uri ; \n\t} \n"}, {"code": "public void delete ( int key ) { \n\tint i = binarySearch ( mKeys , NUM00 , mSize , key ) ; \n\tif ( i >= NUM00 ) $F21314 ( System , mKeys , i , mSize , mValues ) } \n"}, {"code": "protected void addWholeMatch $F43574 ( sb , surface , analyzed ) $F7227 ( sb , surface ) "}, {"code": "public void start $F72 $F363139 ( stopAt , System , MAX_PROCESSING_TIME ) "}, {"code": "private $F131 singleRow ( int row ) { \n\t$F131 res = new Object [ this . nFields ] ; \n\tfor ( int i = NUM00 ; \n\ti < this . nFields ; \n\ti += NUM00 ) { \n\t\tif ( this . isNull == null || ! this . isNull [ row * this . nFields + i ] ) { \n\t\t\tres [ i ] = ArrayFuncs . newInstance ( this . types [ i ] , NUM00 ) ; \n\t\t\tSystem . arraycopy ( this . data [ i ] , row , res [ i ] , NUM00 , NUM00 ) ; \n\t\t\t} \n\t\t} \n\treturn res ; \n\t} \n"}, {"code": "public static String removeChars ( String src , String chars ) { \n\t$F1749 ( i , src ) $F7542 ( sb , i ) for ( $F119 ( j , i ) ) { \n\t\t$F1280 ( c , src , j ) if $F85013 ( chars , c ) $F288 ( sb , c ) } \n\t$F92 ( sb ) } \n"}, {"code": "private void addAllColumns $F72 throws SQLException { \n\tDatabaseMetaData metaData = getDatabaseMetaData ( ) ; \n\t$F24645 ( columns ) try ( ResultSet rs = metaData . getColumns ( null , null , normalizeObjectName ( statementModel . getTableName ( ) ) , null ) ) { \n\t\twhile $F1682 ( rs ) { \n\t\t\tcolumns . add ( quoteObjectName ( rs . getString ( IDX_COLUMN_NAME ) ) ) ; \n\t\t\t} \n\t\t} \n\tcolumnNames = $F16104 ( columns ) ; \n\taddReturningClause ( ) ; \n\t} \n"}, {"code": "public void loadHamNSpam ( Connection conn ) throws java . sql . SQLException { \n\tPreparedStatement pstmt = null ; \n\tResultSet rs = null ; \n\ttry { \n\t\tpstmt = conn . prepareStatement ( sqlQueries . getSqlString ( NUM00 , _BOOL ) ) ; \n\t\t$F47578 ( rs , pstmt ) $F8435 ham = getHamTokenCounts ( ) ; \n\t\twhile $F1682 ( rs ) { \n\t\t\t$F27130 ( token , rs ) $F24632 ( count , rs ) if ( count > NUM00 ) $F1717 ( ham , token , count ) } \n\t\tlog ( $F10532 ( ham ) ) ; \n\t\t$F59 ( rs ) $F59 ( pstmt ) pstmt = conn . prepareStatement ( sqlQueries . getSqlString ( NUM00 , _BOOL ) ) ; \n\t\t$F47578 ( rs , pstmt ) $F8435 spam = getSpamTokenCounts ( ) ; \n\t\twhile $F1682 ( rs ) { \n\t\t\t$F27130 ( token , rs ) $F24632 ( count , rs ) if ( count > NUM00 ) $F1717 ( spam , token , count ) } \n\t\tlog ( $F10532 ( spam ) ) ; \n\t\t$F59 ( rs ) $F59 ( pstmt ) pstmt = conn . prepareStatement ( sqlQueries . getSqlString ( NUM00 , _BOOL ) ) ; \n\t\t$F47578 ( rs , pstmt ) if $F1682 ( rs ) { \n\t\t\t$F213552 ( setHamMessageCount , rs ) $F213552 ( setSpamMessageCount , rs ) } \n\t\t$F59 ( rs ) $F59 ( pstmt ) } \n\tfinally { \n\t\tif ( rs != null ) { \n\t\t\ttry $F881 ( rs ) catch ( java . sql . SQLException se ) $F1941 ( log , se ) rs = null ; \n\t\t\t} \n\t\tif ( pstmt != null ) { \n\t\t\ttry $F881 ( pstmt ) catch ( java . sql . SQLException se ) $F1941 ( log , se ) pstmt = null ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "static private void copyStream ( final InputStream content , final OutputStream outstr ) throws IOException { \n\t$F4727 ( buf , GZIP_BUFFER ) while ( _BOOL ) { \n\t\t$F117439 ( rdlen , content , buf ) $F65649 ( rdlen ) $F11584 ( outstr , buf , rdlen ) } \n\t} \n"}, {"code": "public void checkAndSetupStreamsDrawer $F72 $F5795 ( setupListViewAdapter ) "}, {"code": "public void testFpTypeOverrideSimple $F72 throws Exception { \n\t$F44214 ( m ) m . enable ( DeserializationConfig . Feature . USE_BIG_DECIMAL_FOR_FLOATS ) ; \n\tBigDecimal dec = $F185880 ; \n\tNumber result = m . readValue ( dec . toString ( ) , Number . class ) ; \n\tassertEquals ( $F20778 , result . getClass ( ) ) ; \n\tassertEquals ( dec , result ) ; \n\tObject value = m . readValue ( dec . toString ( ) , $F12222 ) ; \n\tassertEquals ( $F20778 , result . getClass ( ) ) ; \n\tassertEquals ( dec , value ) ; \n\t} \n"}, {"code": "private com . codename1 . ui . Component copyComponent ( com . codename1 . ui . Component cmp ) { \n\tcom . codename1 . ui . Container cnt = builder . createContainer ( res , copiedResourceName ) ; \n\tcom . codename1 . ui . Component dest = builder . findByName ( cmp . getName ( ) , cnt ) ; \n\tif ( dest != null && dest . getParent ( ) != null ) { \n\t\tremoveComponentSync ( dest . getParent ( ) , dest ) ; \n\t\t} \n\treturn dest ; \n\t} \n"}, {"code": "static double zetastatic ( long st , long n , double theta , double initialsum ) { \n\tdouble sum = initialsum ; \n\tfor ( long i = st ; \n\ti < n ; \n\ti ++ ) { \n\t\tsum += NUM00 / ( Math . pow ( i + NUM00 , theta ) ) ; \n\t\t} \n\treturn sum ; \n\t} \n"}, {"code": "$F1 public BigDecimal calculateTotalPendingAdvance ( final BigDecimal totalAdvancePaid , final Date billDate , final WorkOrderEstimate workOrderEstimate , final Long billId ) { \n\tfinal CChartOfAccounts advanceCOA = contractorAdvanceService . getContractorAdvanceAccountcodeForWOE ( workOrderEstimate . getId ( ) ) ; \n\tBigDecimal totalPendingBalance = BigDecimal . ZERO ; \n\tBigDecimal totalAdvanceAdjusted = BigDecimal . ZERO ; \n\tif ( advanceCOA != null && totalAdvancePaid != null && $F17645 ( totalAdvancePaid , BigDecimal ) > NUM00 ) { \n\t\ttotalAdvanceAdjusted = getTotalAdvanceAdjustedForWOE ( billDate , workOrderEstimate . getId ( ) , advanceCOA . getId ( ) , billId ) ; \n\t\tif ( totalAdvanceAdjusted != null && $F17645 ( totalAdvanceAdjusted , BigDecimal ) > NUM00 && $F17645 ( totalAdvanceAdjusted , BigDecimal ) > NUM00 ) totalPendingBalance = totalAdvanceAdjusted . subtract ( totalAdvanceAdjusted ) ; \n\t\telse totalPendingBalance = totalAdvancePaid ; \n\t\t} \n\treturn totalPendingBalance ; \n\t} \n"}, {"code": "private void loadProfile ( String userId , String name ) { \n\tfinal Intent userProfileIntent = new Intent ( getActivity ( ) , UserProfileActivity . class ) ; \n\tuserProfileIntent . putExtra ( AppConstants . Keys . USER_ID , userId ) ; \n\tuserProfileIntent . putExtra ( AppConstants . Keys . USER_NAME , name ) ; \n\tuserProfileIntent . putExtra ( AppConstants . Keys . SERVICE_SCREEN_TYPE , AppConstants . ServiceScreenType . PROFILE ) ; \n\tstartActivity ( userProfileIntent ) ; \n\t} \n"}, {"code": "private void scrollBy ( final int increment ) { \n\tindex += increment ; \n\t$F17370 ( index ) if $F6389 ( index , items ) $F114853 ( index , items ) redraw ( ) ; \n\t} \n"}, {"code": "$F33495 ( seedBuffer , seedBufferOut , System , Process , BUILD_FINGERPRINT_AND_DEVICE_SERIAL , e ) "}, {"code": "public static boolean symbolNeedsQuoting ( CharSequence symbol , boolean quoteOperators ) { \n\t$F115 ( length , symbol ) if ( length == NUM00 ) { \n\t\tthrow new EmptySymbolException $F72 ; \n\t\t} \n\tif ( ! isIdentifierKeyword ( symbol ) ) { \n\t\t$F12685 ( c , symbol ) if ( ! quoteOperators && isOperatorPart ( c ) ) { \n\t\t\tfor ( $F119 ( ii , length ) ) { \n\t\t\t\tc = symbol . charAt ( ii ) ; \n\t\t\t\t$F38676 ( isOperatorPart , c , _BOOL ) } \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\telse if ( isIdentifierStart ( c ) ) { \n\t\t\tfor ( $F119 ( ii , length ) ) { \n\t\t\t\tc = symbol . charAt ( ii ) ; \n\t\t\t\tif ( ( c == NUM00 || c < NUM00 || c > NUM00 ) || ! isIdentifierPart ( c ) ) { \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static long parseCommitCounterFile $F2236 ( name , ext ) throws NumberFormatException { \n\t$F10057 ( name ) $F10057 ( ext ) final int len = $F15171 ( name , ext ) ; \n\t$F66071 ( fileBaseName , name , len ) final long commitCounter = Long . parseLong ( fileBaseName ) ; \n\treturn commitCounter ; \n\t} \n"}, {"code": "public static Document loadDocument ( File file ) throws Exception { \n\t$F2218 ( factory , DocumentBuilderFactory ) $F2220 ( builder , factory ) $F5651 ( builder , file ) } \n"}, {"code": "private Node newFloatingComment $F72 { \n\tNode c = new Node ( Token . EMPTY ) ; \n\tlinkCommentToNode ( c ) ; \n\treturn c ; \n\t} \n"}, {"code": "public Boolean isHod ( final Long assignId ) { \n\tfinal List < HeadOfDepartments > hodList = employeeDepartmentRepository . getAllHodDepartments ( assignId ) ; \n\t$F3386 ( hodList ) } \n"}, {"code": "public Munger singleLabelMode ( String ... languages ) $F28185 ( singleLabelMode , Arrays , languages ) "}, {"code": "public StatValue [ ] matchSpec ( StatSpec spec ) { \n\tif ( spec . getCombineType ( ) == StatSpec . GLOBAL ) { \n\t\tStatValue [ ] allValues = matchSpec ( new RawStatSpec ( spec ) ) ; \n\t\tif $F9634 ( allValues ) { \n\t\t\treturn allValues ; \n\t\t\t} \n\t\telse { \n\t\t\tComboValue cv = new ComboValue ( allValues ) ; \n\t\t\treturn new StatValue [ ] { \n\t\t\t\tcv } \n\t\t\t; \n\t\t\t} \n\t\t} \n\telse { \n\t\t$F19151 ( l ) StatArchiveReader . StatArchiveFile [ ] archives = getArchives ( ) ; \n\t\tfor ( $F1139 ( i , archives ) ) { \n\t\t\tStatArchiveFile f = archives [ i ] ; \n\t\t\tif ( spec . archiveMatches ( f . getFile ( ) ) ) { \n\t\t\t\tf . matchSpec ( spec , l ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tStatValue [ ] result = new StatValue $F2313 ( l ) ; \n\t\treturn ( StatValue [ ] ) l . toArray ( result ) ; \n\t\t} \n\t} \n"}, {"code": "private void assignClusterNums $F23416 ( cl_num ) throws Exception { \n\tif ( m_children != null && $F6213 ( m_children ) ) $F9451 m_clusterNum = cl_num [ NUM00 ] ; \n\tcl_num [ NUM00 ] ++ ; \n\tif ( m_children != null ) { \n\t\tfor ( $F2277 ( i , m_children ) ) { \n\t\t\tCNode child = m_children . get ( i ) ; \n\t\t\tchild . assignClusterNums ( cl_num ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void closeSubpath $F72 { \n\tmPSStream . println ( CLOSEPATH_STR ) ; \n\tmPenX = mStartPathX ; \n\tmPenY = mStartPathY ; \n\t} \n"}, {"code": "public TvShowEpisodeScrapeTask ( List < TvShowEpisode > episodes , MediaScraper mediaScraper ) { \n\tsuper ( BUNDLE . getString ( NUM00 ) , episodes . size ( ) , TaskType . BACKGROUND_TASK ) ; \n\tthis . episodes = episodes ; \n\tthis . mediaScraper = mediaScraper ; \n\tthis . scrapeThumb = _BOOL ; \n\t} \n"}, {"code": "public void saveSelection ( IMiniTable miniTable ) { \n\t$F973 ( log ) $F15277 ( results ) setSelection ( null ) ; \n\t$F160876 ( rows , miniTable ) $F251540 ( i , rows , id , miniTable , results ) $F44759 ( results ) $F251542 ( log , results ) setSelection ( results ) ; \n\t} \n"}, {"code": "public ModelMBeanNotificationInfo $F142640 ( notifTypes , name , description ) $F214324 ( this , notifTypes , name , description ) "}, {"code": "public void cleanBuildTask ( long id ) throws NotFoundException { \n\tFutureBuildTask task = tasks . remove ( id ) ; \n\tif ( task == null ) { \n\t\tthrow new NotFoundException $F10797 ( String , id ) ; \n\t\t} \n\ttask . cancel ( _BOOL ) ; \n\tcleanup ( task ) ; \n\t} \n"}, {"code": "public static File createTempDir ( File parent ) { \n\tFile temp = new File ( parent , Integer . toString ( $F23772 ( Math , UNSEEDED_RANDOM ) % NUM00 ) ) ; \n\t$F1900 ( temp ) $F27233 ( temp ) $F60829 ( temp ) return temp ; \n\t} \n"}, {"code": "public String toURI $F72 { \n\t$F126634 ( buffer ) buffer . append ( this . schemeName ) ; \n\t$F84 ( buffer ) buffer . append ( this . hostname ) ; \n\tif ( this . port != - NUM00 ) { \n\t\t$F84 ( buffer ) buffer . append ( Integer . toString ( this . port ) ) ; \n\t\t} \n\t$F92 ( buffer ) } \n"}, {"code": "public void moveTo $F6803 ( lonCenter , latCenter ) { \n\tdouble mLatCenter = GeoMath . latE7ToMercator ( latCenter ) ; \n\tdouble mTop = GeoMath . latE7ToMercator ( top ) ; \n\tint newBottom = GeoMath . mercatorToLatE7 ( mLatCenter - ( mTop - bottomMercator ) / NUM00 ) ; \n\ttry { \n\t\ttranslate ( ( lonCenter - left - $F55075 ( width ) ) , newBottom - bottom ) ; \n\t\t} \n\tcatch ( OsmException e ) $F302 ( e ) } \n"}, {"code": "public void sendEvent ( final String name , $F27504 ( properties ) ) { \n\tfinal String eventName = String . format ( TfsTelemetryConstants . PLUGIN_ACTION_EVENT_NAME_FORMAT , name ) ; \n\tfinal PropertyMapBuilder builder = new PropertyMapBuilder ( properties ) ; \n\tlogger . debug ( $F131442 ( String , name , builder ) ) ; \n\tif ( telemetryClient != null ) { \n\t\ttelemetryClient . trackEvent ( eventName , builder . build ( ) , null ) ; \n\t\t} \n\t} \n"}, {"code": "public void handleHeaderColumnPressed ( Point p ) { \n\tJTableHeader th = TABLE . getTableHeader ( ) ; \n\tint col = th . columnAtPoint ( p ) ; \n\tint c = TABLE . convertColumnIndexToModel ( col ) ; \n\tif ( c != - NUM00 ) { \n\t\tTABLE . setPressedColumnIndex ( c ) ; \n\t\tth . repaint ( th . getHeaderRect ( col ) ) ; \n\t\t} \n\t} \n"}, {"code": "private static List < FixedRecord > createFixedRecords ( int count ) { \n\tList < FixedRecord > $F204 ( records ) ; \n\tfor ( $F119 ( i , count ) ) { \n\t\trecords . add ( new FixedRecord ( i ) ) ; \n\t\t} \n\treturn records ; \n\t} \n"}, {"code": "public TrackedEntityInstanceQueryParams addAttributesIfNotExist ( List < QueryItem > attrs ) { \n\tfor ( QueryItem attr : attrs ) { \n\t\tif ( attributes != null && ! attributes . contains ( attr ) ) $F207 ( attributes , attr ) } \n\treturn this ; \n\t} \n"}, {"code": "void recomposeAttributeSets ( ElemAttributeSet attrSet ) { \n\tArrayList attrSetList = ( ArrayList ) $F22754 ( m_attrSets , attrSet ) ; \n\tif ( null == attrSetList ) { \n\t\t$F13241 ( attrSetList ) $F22760 ( m_attrSets , attrSet , attrSetList ) } \n\tattrSetList . add ( attrSet ) ; \n\t} \n"}, {"code": "public static List split ( String str , String regex ) { \n\treturn ( Arrays . asList ( str . split ( regex ) ) ) ; \n\t} \n"}, {"code": "protected final void deleteDBFFDCFiles ( String directoryToDelete ) throws AdeException { \n\ttry { \n\t\t$F15885 ( dirToDelete , directoryToDelete ) $F1894 ( fileList , dirToDelete ) if $F9634 ( fileList ) $F19636 ( dirToDelete ) else { \n\t\t\tfor ( $F1139 ( i , fileList ) ) { \n\t\t\t\tfinal File $F170887 ( f , dirToDelete , fileList , i ) ; \n\t\t\t\tif $F3444 ( f ) { \n\t\t\t\t\tfinal String filePath = f . getPath ( ) ; \n\t\t\t\t\tdeleteDBFFDCFiles ( filePath ) ; \n\t\t\t\t\t$F598 } \n\t\t\t\t$F1900 ( f ) } \n\t\t\tfileList = dirToDelete . list ( ) ; \n\t\t\tif $F9634 ( fileList ) $F19636 ( dirToDelete ) } \n\t\t} \n\tcatch ( Exception e ) $F212515 ( e ) } \n"}, {"code": "$F9341 findLast $F72 { \n\t$F154321 ( q , head ) for ( $F589 ) { \n\t\t$F154319 d , r ; \n\t\tif ( ( r = q . right ) != null ) { \n\t\t\tif ( r . indexesDeletedNode ( ) ) { \n\t\t\t\tq . unlink ( r ) ; \n\t\t\t\tq = head ; \n\t\t\t\t} \n\t\t\telse q = r ; \n\t\t\t} \n\t\telse if ( ( d = q . down ) != null ) { \n\t\t\tq = d ; \n\t\t\t} \n\t\telse { \n\t\t\t$F154325 ( b , q ) $F35175 ( n , b ) for ( $F589 ) { \n\t\t\t\tif ( n == null ) $F45454 ( b ) $F35175 ( f , n ) $F45438 ( n , b ) Object v = n . value ; \n\t\t\t\t$F45440 ( v , n , b , f ) $F45442 ( v , n , b ) b = n ; \n\t\t\t\tn = f ; \n\t\t\t\t} \n\t\t\tq = head ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void appendToNalUnit $F24576 ( data , offset , limit ) { \n\t$F24126 ( isFilling ) int readLength = limit - offset ; \n\tif ( nalData . length < nalLength + readLength ) { \n\t\tnalData = Arrays . copyOf ( nalData , ( nalLength + readLength ) * NUM00 ) ; \n\t\t} \n\tSystem . arraycopy ( data , offset , nalData , nalLength , readLength ) ; \n\tnalLength += readLength ; \n\t} \n"}, {"code": "public static long sizeOfDirectory ( File directory ) { \n\tcheckDirectory ( directory ) ; \n\t$F44946 ( files , directory ) $F1084 ( files ) long size = NUM00 ; \n\tfor ( final File file : files ) { \n\t\ttry { \n\t\t\tif ( ! isSymlink ( file ) ) { \n\t\t\t\tsize += sizeOf ( file ) ; \n\t\t\t\t$F29432 ( size ) } \n\t\t\t} \n\t\t$F62612 } \n\treturn size ; \n\t} \n"}, {"code": "public synchronized void panAbs ( double dx , double dy ) { \n\tdamageReport ( ) ; \n\tm_transform . translate ( dx , dy ) ; \n\t$F280860 ( m_itransform , m_transform ) } \n"}, {"code": "public static void checkSerializedEquality ( Object object ) { \n\tObject object2 = serializeAndRecover ( object ) ; \n\tAssert . assertEquals ( NUM00 , object , object2 ) ; \n\tAssert . assertEquals ( NUM00 , object . hashCode ( ) , object2 . hashCode ( ) ) ; \n\t} \n"}, {"code": "public String documentationReferenceGuideUrl $F72 $F16566 ( properties ) "}, {"code": "$F104170 ( purchase , result ) "}, {"code": "public static double mean ( final $F31488 list ) { \n\tdouble sum = NUM00 ; \n\tfor ( Double number : list ) { \n\t\tsum += number ; \n\t\t} \n\treturn sum / list . size ( ) ; \n\t} \n"}, {"code": "public static String toHex $F97 ( data ) { \n\ttry { \n\t\treturn new String ( Hex . encode ( data ) , NUM00 ) ; \n\t\t} \n\tcatch ( UnsupportedEncodingException e ) $F845 $F1274 } \n"}, {"code": "public In ( URL url ) { \n\t$F1149 ( url ) try { \n\t\t$F5858 ( site , url ) $F517 ( is , site ) scanner = new Scanner ( new BufferedInputStream ( is ) , CHARSET_NAME ) ; \n\t\tscanner . useLocale ( LOCALE ) ; \n\t\t} \n\tcatch ( IOException ioe ) $F18931 ( url ) } \n"}, {"code": "$F1219 public void processEnableFullscreenRunnableForTest $F72 { \n\tif ( mHandler . hasMessages ( MSG_ID_ENABLE_FULLSCREEN_AFTER_LOAD ) ) { \n\t\tmHandler . removeMessages ( MSG_ID_ENABLE_FULLSCREEN_AFTER_LOAD ) ; \n\t\tenableFullscreenAfterLoad ( ) ; \n\t\t} \n\t} \n"}, {"code": "private static String fromHtmlEntity ( String str ) { \n\tCharacter ch = map . get ( str ) ; \n\treturn ( ch != null ) ? ch . toString ( ) : str ; \n\t} \n"}, {"code": "public void write $F97 ( vector ) { \n\tcheck ( vector . length ) ; \n\t$F41363 ( System , vector , buffer , write_pos ) write_pos += vector . length ; \n\t} \n"}, {"code": "public void unlockUI ( ProcessInfo pi ) { \n\tboolean notPrint = pi != null && pi . getAD_Process_ID ( ) != m_curTab . getAD_Process_ID ( ) && pi . isReportingProcess ( ) == _BOOL ; \n\tsetBusy ( _BOOL , notPrint ) ; \n\tif ( notPrint ) { \n\t\tm_curTab . dataRefresh ( ) ; \n\t\tif ( pi . isTimeout ( ) ) Env . setContext ( m_ctx , m_curWindowNo , NUM00 , NUM00 ) ; \n\t\tm_curGC . dynamicDisplay ( NUM00 ) ; \n\t\tsetStatusLine ( pi . getSummary ( ) , pi . isError ( ) ) ; \n\t\tif ( pi . isError ( ) ) ADialog . error ( m_curWindowNo , this , null , pi . getSummary ( ) ) ; \n\t\tProcessInfoUtil . setLogFromDB ( pi ) ; \n\t\tString logInfo = pi . getLogInfo ( ) ; \n\t\tif $F4012 ( logInfo ) ADialog . info ( m_curWindowNo , this , Env . getHeader ( m_ctx , m_curWindowNo ) , pi . getTitle ( ) , logInfo ) ; \n\t\t} \n\telse { \n\t\tsetStatusLine ( pi . getSummary ( ) , pi . isError ( ) ) ; \n\t\tif ( pi . isError ( ) ) ADialog . error ( m_curWindowNo , this , null , pi . getSummary ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "private Map < URI , StorageSystem > buildArrayMap ( StorageSystem vplexSystem , $F81867 descriptors , $F112895 [ ] types ) { \n\tMap < URI , StorageSystem > arrayMap = new HashMap < URI , StorageSystem > $F72 ; \n\tif ( types != null ) { \n\t\tdescriptors = VolumeDescriptor . filterByType ( descriptors , types , new $F112895 $F10277 ) ; \n\t\t} \n\tfor ( VolumeDescriptor desc : descriptors ) { \n\t\tif ( arrayMap . containsKey ( desc . getDeviceURI ( ) ) == _BOOL ) { \n\t\t\tif ( vplexSystem == null ) { \n\t\t\t\tStorageSystem array = getDataObject ( $F41797 , desc . getDeviceURI ( ) , _dbClient ) ; \n\t\t\t\tarrayMap . put ( desc . getDeviceURI ( ) , array ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\t$F4324 connectedSystems = ConnectivityUtil . getStorageSystemAssociationsByNetwork ( _dbClient , vplexSystem . getId ( ) , StoragePort . PortType . backend ) ; \n\t\t\t\tif ( connectedSystems . contains ( desc . getDeviceURI ( ) ) ) { \n\t\t\t\t\tStorageSystem array = getDataObject ( $F41797 , desc . getDeviceURI ( ) , _dbClient ) ; \n\t\t\t\t\tarrayMap . put ( desc . getDeviceURI ( ) , array ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn arrayMap ; \n\t} \n"}, {"code": "public $F96 encrypt ( $F96 plainTextAsBytes , CharSequence password ) throws KeyCrypterException { \n\ttry { \n\t\t$F2175 ( salt , SALT_LENGTH ) secureRandom . nextBytes ( salt ) ; \n\t\tParametersWithIV key = ( ParametersWithIV ) getAESPasswordKey ( password , salt ) ; \n\t\tBufferedBlockCipher cipher = new PaddedBufferedBlockCipher ( new CBCBlockCipher ( new AESFastEngine $F72 ) ) ; \n\t\tcipher . init ( _BOOL , key ) ; \n\t\t$F251439 ( encryptedBytes , cipher , plainTextAsBytes ) final int processLength = cipher . processBytes ( $F251440 ( plainTextAsBytes , encryptedBytes ) ) ; \n\t\tfinal int doFinalLength = cipher . doFinal ( encryptedBytes , processLength ) ; \n\t\treturn concat ( salt , Arrays . copyOf ( encryptedBytes , processLength + doFinalLength ) ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\tthrow new KeyCrypterException ( NUM00 + Utils . bytesToHexString ( plainTextAsBytes ) + NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "public final ArrayList < WifiRecord > loadWifisByBssid ( final String bssid , final Integer session ) { \n\tfinal ArrayList < WifiRecord > $F204 ( wifis ) ; \n\tString selectSql ; \n\tif ( session != null ) { \n\t\tselectSql = Schema . COL_BSSID + NUM00 + bssid + NUM00 + Schema . COL_SESSION_ID + NUM00 + session + NUM00 ; \n\t\t} \n\telse { \n\t\tselectSql = Schema . COL_BSSID + NUM00 + bssid + NUM00 ; \n\t\t} \n\tfinal Cursor cursor = contentResolver . query ( ContentProvider . CONTENT_URI_WIFI , null , selectSql , null , null ) ; \n\tfinal int columnIndex = cursor . getColumnIndex ( Schema . COL_BSSID ) ; \n\tfinal int columnIndex2 = cursor . getColumnIndex ( Schema . COL_SSID ) ; \n\tfinal int columnIndex3 = cursor . getColumnIndex ( Schema . COL_CAPABILITIES ) ; \n\tfinal int columnIndex4 = cursor . getColumnIndex ( Schema . COL_FREQUENCY ) ; \n\tfinal int columnIndex5 = cursor . getColumnIndex ( Schema . COL_LEVEL ) ; \n\tfinal int columnIndex6 = cursor . getColumnIndex ( Schema . COL_TIMESTAMP ) ; \n\tfinal int columnIndex7 = cursor . getColumnIndex ( Schema . COL_BEGIN_POSITION_ID ) ; \n\tfinal int columnIndex8 = cursor . getColumnIndex ( Schema . COL_END_POSITION_ID ) ; \n\tfinal int columnIndex9 = cursor . getColumnIndex ( Schema . COL_KNOWN_WIFI ) ; \n\twhile $F12260 ( cursor ) { \n\t\tfinal WifiRecord wifi = new WifiRecord $F72 ; \n\t\twifi . setBssid ( cursor . getString ( columnIndex ) ) ; \n\t\twifi . setSsid ( cursor . getString ( columnIndex2 ) ) ; \n\t\twifi . setCapabilities ( cursor . getString ( columnIndex3 ) ) ; \n\t\twifi . setFrequency ( cursor . getInt ( columnIndex4 ) ) ; \n\t\twifi . setLevel ( cursor . getInt ( columnIndex5 ) ) ; \n\t\twifi . setOpenBmapTimestamp ( cursor . getLong ( columnIndex6 ) ) ; \n\t\twifi . setBeginPosition ( loadPositionById ( cursor . getString ( columnIndex7 ) ) ) ; \n\t\twifi . setEndPosition ( loadPositionById ( cursor . getString ( columnIndex8 ) ) ) ; \n\t\twifi . setCatalogStatus ( CatalogStatus . values ( ) [ cursor . getInt ( columnIndex9 ) ] ) ; \n\t\twifis . add ( wifi ) ; \n\t\t} \n\t$F59 ( cursor ) return wifis ; \n\t} \n"}, {"code": "$F20813 ( fieldId , AFTER_ID , MAX_JOBS ) "}, {"code": "$F1 public void deinstall ( JEditorPane editor ) { \n\tsuper . deinstall ( editor ) ; \n\teditor . removeKeyListener ( this ) ; \n\t} \n"}, {"code": "$F35762 ( newScrollValue , itemDimension , initialMotionValue , lastMotionValue , getPullToRefreshScrollDirection , HORIZONTAL , mInitialMotionX , mLastMotionX , VERTICAL , mInitialMotionY , mLastMotionY , mCurrentMode , PULL_FROM_END , Math , FRICTION , getFooterSize , PULL_FROM_START , getHeaderSize , setHeaderScroll , isRefreshing , scale , mFooterLayout , mHeaderLayout , mState , State , setState ) "}, {"code": "public boolean isSecure $F72 $F51935 ( mTlsCipher ) "}, {"code": "public void sample ( Record rec ) { \n\ttotalRecs ++ ; \n\tif $F10255 ( samples , MAX_SAMPLES ) { \n\t\tsamples . add ( new Sample ( rec , schema ) ) ; \n\t\tupdateNewValueInterval ( rec ) ; \n\t\t} \n\telse { \n\t\t$F8669 ( flip , random ) if ( flip < ( double ) MAX_SAMPLES / totalRecs ) { \n\t\t\tsamples . set ( random . nextInt ( MAX_SAMPLES ) , new Sample ( rec , schema ) ) ; \n\t\t\tupdateNewValueInterval ( rec ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public TenantCreateParam prepareTenantParam ( KeystoneTenant tenant ) { \n\tTenantCreateParam param = new TenantCreateParam ( CinderConstants . TENANT_NAME_PREFIX + NUM00 + tenant . getName ( ) , $F13536 ( prepareUserMappings , tenant ) ) ; \n\tparam . setDescription ( getProperTenantDescription ( tenant . getDescription ( ) ) ) ; \n\treturn param ; \n\t} \n"}, {"code": "private void forceInternalError $F72 { \n\tthrow $F86636 ; \n\t} \n"}, {"code": "$F1 public void drawHighlight $F177595 ( g , w , h ) { \n\t$F129587 ( g , Color ) $F319 ( fm , g ) int l = $F2354 ( m_x , w ) - fm . stringWidth ( m_id ) / NUM00 ; \n\tint t = $F2354 ( m_y , h ) - $F63370 ( fm ) ; \n\tg . fillRect ( l - NUM00 , t - NUM00 , fm . stringWidth ( m_id ) + NUM00 , fm . getHeight ( ) + fm . getDescent ( ) + NUM00 ) ; \n\tdrawNode ( g , w , h ) ; \n\t} \n"}, {"code": "public static ImageEncoder newInstance ( String format ) { \n\tImageEncoder imageEncoder = null ; \n\t$F123 ( className , encoders , format ) $F26344 ( className , format ) try { \n\t\t$F63290 ( imageEncoderClass , Class , className ) imageEncoder = ( ImageEncoder ) imageEncoderClass . newInstance ( ) ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F22681 ( e ) } \n\treturn imageEncoder ; \n\t} \n"}, {"code": "public static void applyPinchZoomImage ( ImageView mImageView ) { \n\tmImageView . setOnTouchListener ( new PinchZoom $F72 ) ; \n\t} \n"}, {"code": "public double empiricalHSICincompleteCholesky ( TetradMatrix Gy , TetradMatrix Gx , TetradMatrix Gz , int m ) { \n\tint ky = Gy . columns ( ) ; \n\tint kx = Gx . columns ( ) ; \n\tint kz = Gz . columns ( ) ; \n\tTetradMatrix H = KernelUtils . constructH ( m ) ; \n\tTetradMatrix Gcy = H . times ( Gy ) ; \n\tTetradMatrix Gcx = H . times ( Gx ) ; \n\tTetradMatrix Gcz = H . times ( Gz ) ; \n\tTetradMatrix A = new TetradMatrix ( ky , kx ) ; \n\tTetradMatrix Gcyt = Gcy . transpose ( ) ; \n\tA = Gcyt . times ( Gcx ) ; \n\tTetradMatrix B = Gcy . times ( A ) ; \n\tTetradMatrix Kyx = new TetradMatrix ( m , m ) ; \n\tTetradMatrix Gcxt = new TetradMatrix ( kx , m ) ; \n\tGcxt = Gcx . transpose ( ) ; \n\tKyx = B . times ( Gcxt ) ; \n\tdouble empHSIC = NUM00 ; \n\tdouble xy = NUM00 ; \n\tfor ( $F119 ( i , m ) ) { \n\t\tempHSIC += matrixProductEntry ( B , Gcxt , i , i ) ; \n\t\t} \n\tTetradMatrix Gytz = Gcyt . times ( Gcz ) ; \n\tTetradMatrix Gczt = Gcz . transpose ( ) ; \n\tTetradMatrix Gztx = Gczt . times ( Gcx ) ; \n\tTetradMatrix Gztz = Gczt . times ( Gcz ) ; \n\tTetradMatrix Gztzr = Gztz . copy ( ) ; \n\tfor ( $F119 ( i , kz ) ) { \n\t\tGztzr . set ( i , i , Gztz . get ( i , i ) + this . regularizer ) ; \n\t\t} \n\tTetradMatrix ZI = Gztzr . inverse ( ) ; \n\tTetradMatrix ZIzt = ZI . times ( Gczt ) ; \n\tTetradMatrix Gzr = Gcz . copy ( ) ; \n\tfor ( $F119 ( i , m ) ) { \n\t\tfor ( $F119 ( j , kz ) ) { \n\t\t\tGzr . set ( i , j , Gcz . get ( i , j ) * ( - NUM00 / this . regularizer ) ) ; \n\t\t\t} \n\t\t} \n\tTetradMatrix Zinv = Gzr . times ( ZIzt ) ; \n\tfor ( $F119 ( i , m ) ) { \n\t\tZinv . set ( i , i , Zinv . get ( i , i ) + ( NUM00 / this . regularizer ) ) ; \n\t\t} \n\tTetradMatrix Gztzinv = Gczt . times ( Zinv ) ; \n\tTetradMatrix Gzinvz = Zinv . times ( Gcz ) ; \n\tTetradMatrix Gztinv2z = Gztzinv . times ( Gzinvz ) ; \n\tTetradMatrix Gytzztzinv2z = Gytz . times ( Gztinv2z ) ; \n\tTetradMatrix Gytzztzinv2zztx = Gytzztzinv2z . times ( Gztx ) ; \n\tTetradMatrix Gyytzztzinv2zztx = Gcy . times ( Gytzztzinv2zztx ) ; \n\tdouble second = NUM00 ; \n\tfor ( $F119 ( i , m ) ) { \n\t\tsecond += matrixProductEntry ( Gyytzztzinv2zztx , Gcxt , i , i ) ; \n\t\t} \n\tempHSIC -= NUM00 * second ; \n\tTetradMatrix Gxtz = Gcxt . times ( Gcz ) ; \n\tTetradMatrix Gxtzztinv2z = Gxtz . times ( Gztinv2z ) ; \n\tTetradMatrix Gyytzztzinv2zztxxtzztinv2z = Gyytzztzinv2zztx . times ( Gxtzztinv2z ) ; \n\tfor ( $F119 ( i , m ) ) { \n\t\tempHSIC += matrixProductEntry ( Gyytzztzinv2zztxxtzztinv2z , Gczt , i , i ) ; \n\t\t} \n\tdouble betaz = NUM00 ; \n\tfor ( int i = NUM00 ; \n\ti < ( m - NUM00 ) ; \n\ti ++ ) { \n\t\tfor ( int j = ( i + NUM00 ) ; \n\t\tj < m ; \n\t\tj ++ ) { \n\t\t\tbetaz += Math . pow ( matrixProductEntry ( Gcz , Gczt , i , j ) , NUM00 ) ; \n\t\t\tbetaz += Math . pow ( matrixProductEntry ( Gcz , Gczt , j , i ) , NUM00 ) ; \n\t\t\t} \n\t\t} \n\tempHSIC *= ( m / $F78421 ( betaz , m ) ) ; \n\treturn empHSIC ; \n\t} \n"}, {"code": "public static File parse ( $F806 options , String option , File defValue ) throws Exception { \n\t$F142641 ( value , Utils , option , options ) if $F2979 ( value ) return defValue ; \n\telse return new File ( value ) ; \n\t} \n"}, {"code": "public boolean isAcctBalanced $F72 { \n\t$F298621 ( m_lines , _BOOL ) BigDecimal balance = getAcctBalance ( ) ; \n\tboolean retValue = $F67525 ( balance ) ; \n\tif ( retValue ) log . finer ( toString ( ) ) ; \n\telse log . warning ( NUM00 + balance + NUM00 + toString ( ) ) ; \n\treturn retValue ; \n\t} \n"}, {"code": "public void ensureCapacity ( int minCapacity ) { \n\tint oldCapacity = capacity ; \n\tif ( minCapacity > oldCapacity ) { \n\t\tint newCapacity = ( oldCapacity * NUM00 ) / NUM00 + NUM00 ; \n\t\t$F46169 ( newCapacity , minCapacity ) BitVector vector = toBitVector ( ) ; \n\t\tvector . setSize ( newCapacity * bitsPerElement ) ; \n\t\tthis . bits = vector . elements ( ) ; \n\t\tthis . capacity = newCapacity ; \n\t\t} \n\t} \n"}, {"code": "private String detailBase ( final Method method ) { \n\tfinal $F6969 clazz = method . getDeclaringClass ( ) ; \n\tfinal String detailBase = MessageUtils . bundleNameForClass ( clazz ) ; \n\tif ( isBlank ( detailBase ) ) $F1155 ( clazz ) return detailBase ; \n\t} \n"}, {"code": "public void finished $F72 throws IOException $F881 ( outputStream ) "}, {"code": "public final void lock $F72 { \n\tSunToolkit . awtLock ( ) ; \n\t} \n"}, {"code": "$F1 public Object createStatement ( Object proxy , Method method , $F131 args , Object statement , long time ) { \n\ttry { \n\t\tObject result = null ; \n\t\t$F20605 ( name , method ) String sql = null ; \n\t\t$F43121 constructor = null ; \n\t\tif ( compare ( CREATE_STATEMENT , name ) ) { \n\t\t\tconstructor = getConstructor ( CREATE_STATEMENT_IDX , Statement . class ) ; \n\t\t\t} \n\t\telse if ( compare ( PREPARE_STATEMENT , name ) ) { \n\t\t\tsql = ( String ) args [ NUM00 ] ; \n\t\t\tconstructor = getConstructor ( PREPARE_STATEMENT_IDX , PreparedStatement . class ) ; \n\t\t\t$F38251 ( sql , prepareStatement , time ) } \n\t\telse if ( compare ( PREPARE_CALL , name ) ) { \n\t\t\tsql = ( String ) args [ NUM00 ] ; \n\t\t\tconstructor = getConstructor ( PREPARE_CALL_IDX , CallableStatement . class ) ; \n\t\t\tprepareCall ( sql , time ) ; \n\t\t\t} \n\t\telse { \n\t\t\treturn statement ; \n\t\t\t} \n\t\tresult = constructor . newInstance ( new Object [ ] { \n\t\t\tnew StatementProxy ( statement , sql ) } \n\t\t) ; \n\t\treturn result ; \n\t\t} \n\t$F92403 ( log , x ) return statement ; \n\t} \n"}, {"code": "public UpdateResponse remove ( long id ) throws IOException , SolrServerException { \n\tUpdateResponse res = solrClient . deleteById ( String . valueOf ( id ) ) ; \n\tsolrClient . commit ( _BOOL , _BOOL , _BOOL ) ; \n\treturn res ; \n\t} \n"}, {"code": "public void switchSetup $F72 { \n\tint retVal ; \n\tretVal = m_SetupFileChooser . showOpenDialog ( this ) ; \n\tif ( retVal != JFileChooser . APPROVE_OPTION ) $F932 m_DbUtils . initialize ( m_SetupFileChooser . getSelectedFile ( ) ) ; \n\tm_URL = m_DbUtils . getDatabaseURL ( ) ; \n\tm_User = m_DbUtils . getUsername ( ) ; \n\t$F100094 ( m_Password , m_DbUtils ) m_TextURL . setText ( m_URL ) ; \n\t} \n"}, {"code": "private ClientDetailsEntity loadClientObject ( final OIDCAuthorizationRequestContext authorizationRequest ) { \n\tlog . debug ( NUM00 , authorizationRequest . getClientId ( ) ) ; \n\treturn clientService . loadClientByClientId ( authorizationRequest . getClientId ( ) ) ; \n\t} \n"}, {"code": "public void addFieldProperty ( String name , String accessorField ) { \n\tfieldProperties . add ( new LegacyFieldPropDesc ( name , accessorField ) ) ; \n\t} \n"}, {"code": "private void parseNoWildCards $F72 { \n\tthis . fSegments = $F382 ; \n\tthis . fSegments [ NUM00 ] = this . fPattern ; \n\tthis . fBound = this . fLength ; \n\t} \n"}, {"code": "public $F2539 environment $F72 { \n\tString base64 = toStringBase64 ( ) ; \n\tif $F6036 ( base64 ) $F83145 ( Collections ) $F2539 environment = Maps . newHashMap ( ) ; \n\tenvironment . put ( BaggageUtils . BAGGAGE_ENVIRONMENT_VARIABLE , base64 ) ; \n\treturn environment ; \n\t} \n"}, {"code": "$F1 public void drawSeries ( Canvas canvas , Paint paint , $F6205 points , $F31488 values , XYSeriesRenderer seriesRenderer , SupportSeriesRender supportSeriesRender , float yAxisValue , int seriesIndex , int startIndex ) { \n\t$F36951 ( seriesNr , mDataset ) $F2199 ( length , points ) $F14782 ( paint , seriesRenderer ) $F5597 ( paint , Style ) float halfDiffX = getHalfDiffX ( points , length , seriesNr ) ; \n\tfor ( $F6225 ( i , length ) ) { \n\t\t$F36955 ( x , points , i ) $F36957 ( y , points , i ) drawBar ( canvas , x , yAxisValue , x , y , halfDiffX , seriesNr , seriesIndex , paint ) ; \n\t\t} \n\t$F14782 ( paint , seriesRenderer ) } \n"}, {"code": "public void listenModLog ( String username , String token ) { \n\t$F933 ( hasServer ) if $F1710 ( modLogListen , username ) $F932 this . token = token ; \n\tlong userId = getUserId ( username ) ; \n\tmodLogListen . put ( username , userId ) ; \n\t$F21448 ( LOGGER , username , userId ) if ( userId != - NUM00 ) { \n\t\tsendListenModLog ( userId , _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean isValidClassName ( String className ) { \n\tif $F48846 ( className ) { \n\t\treturn _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1431 public void newMinute $F72 { \n\t$F24126 ( inSyncWithInternalFastClock ) if ( correctFastClock || synchronizeWithInternalClock ) { \n\t\t$F9110 ( now , clock ) if ( now . getMinutes ( ) != NUM00 ) { \n\t\t\tcurDays = now . getDate ( ) ; \n\t\t\tcurHours = now . getHours ( ) ; \n\t\t\tcurMinutes = now . getMinutes ( ) ; \n\t\t\tlong millis = now . getTime ( ) ; \n\t\t\tlong elapsedMS = millis % MSECPERMINUTE ; \n\t\t\tdouble frac_min = elapsedMS / ( double ) MSECPERMINUTE ; \n\t\t\tcurFractionalMinutes = ( int ) CORRECTION - $F2354 ( CORRECTION , frac_min ) ; \n\t\t\tsetClock ( ) ; \n\t\t\t} \n\t\t} \n\telse if ( setInternal && ! correctFastClock && ! synchronizeWithInternalClock ) $F21847 ( inSyncWithInternalFastClock , _BOOL , initiateRead ) } \n"}, {"code": "private < T extends DiscoveredSystemObject > boolean isDataCollectionScanJobSchedulingNeeded ( long lastScanTime , boolean inProgress ) { \n\t$F657 ( systemTime , System ) long refreshInterval = getRefreshInterval ( ControllerServiceImpl . SCANNER ) ; \n\t$F9303 ( inProgress , _BOOL ) if ( lastScanTime > NUM00 && ( systemTime - lastScanTime < refreshInterval * NUM00 ) ) $F53787 ( _logger , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "private void removeBreakpoints ( $F99304 ( breakpointAddressSet ) , final BreakpointStorage storage ) { \n\tif $F6887 ( breakpointAddressSet ) { \n\t\tfinal Set < Breakpoint > breakpoints = storage . getBreakPointsByAddress ( breakpointAddressSet ) ; \n\t\tstorage . removeBreakpoints ( breakpointAddressSet ) ; \n\t\tfor ( final BreakpointManagerListener listener : listeners ) { \n\t\t\ttry { \n\t\t\t\tlistener . breakpointsRemoved ( breakpoints ) ; \n\t\t\t\t} \n\t\t\t$F39654 ( CUtilityFunctions , e ) } \n\t\t} \n\t} \n"}, {"code": "public void replaceCreationTemplate ( Guid guid , String templateName , AttrSet attrSet ) throws ConfigManagerException { \n\tif ( guid == null ) { \n\t\tguid = new Guid ( _rootDN ) ; \n\t\t} \n\tDN dn = DN . valueOf ( guid . getDn ( ) ) ; \n\tString org = NUM00 ; \n\tList < RDN > $F204 ( rdns ) ; \n\tfor ( RDN rdn : dn ) $F6966 ( rdns , rdn ) for ( RDN rdn : rdns ) { \n\t\torg = org + NUM00 + LDAPUtils . rdnValue ( rdn ) ; \n\t\t} \n\tString service = CREATIONPATH + NUM00 + templateName ; \n\tMap map = convertToMap ( attrSet ) ; \n\ttry { \n\t\treplaceServiceAttributes ( org , service , map ) ; \n\t\t} \n\tcatch ( SMSException e ) { \n\t\tString $F1868 = $F382 ; \n\t\targs [ NUM00 ] = e . toString ( ) ; \n\t\tthrow new ConfigManagerException ( i18n . getString ( IUMSConstants . ERROR_CM , args ) ) ; \n\t\t} \n\tcatch ( SSOException se ) { \n\t\tString $F1868 = $F382 ; \n\t\targs [ NUM00 ] = se . toString ( ) ; \n\t\tthrow new ConfigManagerException ( i18n . getString ( IUMSConstants . ERROR_CM , args ) ) ; \n\t\t} \n\t} \n"}, {"code": "private void readObject ( ObjectInputStream stream ) throws $F6427 { \n\t$F6428 ( stream ) MarshalledInstance mi = ( MarshalledInstance ) stream . readObject ( ) ; \n\ttry { \n\t\tlistener = ( RemoteEventListener ) mi . get ( _BOOL ) ; \n\t\t} \n\tcatch ( Throwable e ) { \n\t\tif ( e instanceof Error && ThrowableConstants . retryable ( e ) == ThrowableConstants . BAD_OBJECT ) { \n\t\t\t$F106249 ( e ) } \n\t\tlogger . log ( Level . WARNING , NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "public void add ( T item ) { \n\tif $F9793 ( set , item ) { \n\t\tfireContentsChanged ( this , NUM00 , getSize ( ) - NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private $F51580 ( bytes , sb , element , v , Integer ) "}, {"code": "public ScServer createClusterServer $F1947 ( ssn , clusterName , osId ) throws StorageCenterAPIException { \n\tParameters $F108428 ( params ) ; \n\t$F269710 ( params , clusterName ) $F269710 ( params , ssn ) params . add ( NUM00 , NOTES_ \"STRING\" ) ; \n\t$F269710 ( params , osId ) RestResult rr = restClient . post ( NUM00 , params . toJson ( ) ) ; \n\tif ( ! checkResults ( rr ) ) { \n\t\tString error = String . format ( NUM00 , clusterName , rr . getErrorMsg ( ) ) ; \n\t\t$F269734 ( error ) } \n\treturn gson . fromJson ( rr . getResult ( ) , ScServer . class ) ; \n\t} \n"}, {"code": "public void testConstructorSignBytesPositive4 $F72 { \n\tbyte $F3009 = $F294877 ; \n\tint aSign = NUM00 ; \n\tbyte $F3018 = $F294877 ; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3030 ( rBytes ) $F3031 ( resBytes , aNumber ) $F3034 ( i , resBytes , assertTrue , rBytes ) $F3037 ( assertEquals , aNumber ) } \n"}, {"code": "public void testMinimalCompletionStage $F72 { \n\t$F70225 ( f ) CompletionStage $F2305 g = f . minimalCompletionStage ( ) ; \n\tAtomicInteger $F107657 ( x ) ; \n\tAtomicReference $F81247 r = new AtomicReference $F81247 $F72 ; \n\tcheckIncomplete ( f ) ; \n\tg . whenComplete ( null ) ; \n\tf . complete ( NUM00 ) ; \n\tcheckCompletedNormally ( f , NUM00 ) ; \n\tassertEquals ( x . get ( ) , NUM00 ) ; \n\t$F80909 ( assertNull , r ) } \n"}, {"code": "private void writeDirectoryPostResource ( Element postResourceEl , String path ) { \n\t$F34765 ( postResourceEl , DIR_RESOURCE_SET ) postResourceEl . setAttribute ( NUM00 , $F2934 ( path ) ) ; \n\t} \n"}, {"code": "private static $F2027 trimArray $F11072 ( array , size ) { \n\t$F63585 ( size ) $F6482 ( size , NO_ERRORS ) $F4120 ( a , size ) $F135 ( System , array , a , size ) return a ; \n\t} \n"}, {"code": "static PotionType fromName ( String name ) { \n\tfor ( PotionTypeTable table : values ( ) ) { \n\t\tif ( $F206388 ( name , table ) ) return table . type ; \n\t\t} \n\treturn PotionType . valueOf ( name . toUpperCase ( ) ) ; \n\t} \n"}, {"code": "public synchronized void removeCurlMesh ( CurlMesh mesh ) { \n\twhile $F16914 ( mCurlMeshes , mesh ) ; \n\t} \n"}, {"code": "private List < Datum > sampleNbestList ( int sourceId , $F246175 source , SentenceLevelMetric $F57784 scoreMetric , List < RichTranslation $F57784 > translations , List < $F246175 > references ) { \n\t$F11844 ( sourceIds ) sourceIds [ NUM00 ] = sourceId ; \n\tList < $F246175 > $F9187 ( sources ) ; \n\tsources . add ( source ) ; \n\tList < List < RichTranslation $F57784 > > translationList = new ArrayList < List < RichTranslation $F57784 > > $F989 ; \n\ttranslationList . add ( translations ) ; \n\tList < List < $F246175 > > referenceList = new ArrayList < List < $F246175 > > $F989 ; \n\treferenceList . add ( references ) ; \n\treturn sampleNbestLists ( sourceIds , sources , scoreMetric , translationList , referenceList ) ; \n\t} \n"}, {"code": "protected void postRunnable ( Runnable runnable ) { \n\tif ( runnable != null ) $F95028 ( handler , runnable ) } \n"}, {"code": "public boolean isClosed $F72 { \n\treturn map . isClosed ( ) ; \n\t} \n"}, {"code": "public void insertThinkTime $F72 { \n\tScriptStep thinkTimeScriptStep = ScriptStepFactory . createThinkTime ( getMinThinkTime ( ) , getMaxThinkTime ( ) ) ; \n\tsteps . add ( getInsertIndex ( ) , thinkTimeScriptStep ) ; \n\tminThinkTime = NUM00 ; \n\tmaxThinkTime = NUM00 ; \n\treindexScriptSteps ( ) ; \n\t} \n"}, {"code": "$F98441 ( is , os , listener , bufferSize , current , total , DEFAULT_IMAGE_TOTAL_SIZE , bytes , count , shouldStopLoading , _BOOL ) "}, {"code": "public void addNode ( final Instruction instruction ) { \n\tinstructions . add ( instruction ) ; \n\t$F38251 ( prevInstruction , addEdge , instruction ) prevInstruction = instruction ; \n\t} \n"}, {"code": "public void ensureCapacity ( int minimumCapacity ) { \n\tif ( minimumCapacity <= _capacity ) $F665 if ( minimumCapacity > NUM00 ) { \n\t\t_capacity = ( minimumCapacity + NUM00 ) & ~ NUM00 ; \n\t\t} \n\telse { \n\t\twhile ( _capacity < minimumCapacity ) { \n\t\t\t_capacity += _capacity ; \n\t\t\t} \n\t\t} \n\t$F2175 ( bytes , _capacity ) $F135 ( System , _buffer , bytes , _length ) _buffer = bytes ; \n\t} \n"}, {"code": "public Builder removeName ( final String name ) $F120129 ( names , name , this ) "}, {"code": "public $F4203 JSONAPIDocument < $F5675 > readDocumentCollection ( InputStream dataStream , $F20474 clazz ) { \n\ttry { \n\t\t$F10089 ( resourceCache ) JsonNode rootNode = objectMapper . readTree ( dataStream ) ; \n\t\tValidationUtils . ensureNotError ( objectMapper , rootNode ) ; \n\t\tValidationUtils . ensureCollection ( rootNode ) ; \n\t\tresourceCache . cache ( parseIncluded ( rootNode ) ) ; \n\t\t$F98037 ( resourceList ) for ( JsonNode element : rootNode . get ( DATA ) ) { \n\t\t\tT pojo = readObject ( element , clazz , _BOOL ) ; \n\t\t\tresourceList . add ( pojo ) ; \n\t\t\t} \n\t\tJSONAPIDocument < $F5675 > result = new JSONAPIDocument $F200 ( resourceList , objectMapper ) ; \n\t\tif $F186819 ( rootNode , META ) { \n\t\t\tresult . setMeta ( mapMeta ( rootNode . get ( META ) ) ) ; \n\t\t\t} \n\t\tif $F186819 ( rootNode , LINKS ) { \n\t\t\tresult . setLinks ( new Links $F26285 ( mapLinks , rootNode , LINKS ) ) ; \n\t\t\t} \n\t\treturn result ; \n\t\t} \n\t$F41337 ( e ) $F12237 ( e ) finally $F9096 ( resourceCache ) } \n"}, {"code": "public void addTargetedBySwarm ( int entityId , int weaponId ) { \n\thitBySwarmsEntity . addElement ( new Integer ( entityId ) ) ; \n\thitBySwarmsWeapon . addElement ( new Integer ( weaponId ) ) ; \n\t} \n"}, {"code": "private boolean isCheckpointExists ( Connection conn , String key ) throws SQLException { \n\tPreparedStatement st = null ; \n\tResultSet rs = null ; \n\ttry { \n\t\tst = conn . prepareStatement ( chkExistsSql ) ; \n\t\t$F3916 ( st , key ) $F47578 ( rs , st ) $F43104 ( rs ) } \n\tfinally { \n\t\tU . close ( rs , log ) ; \n\t\tU . close ( st , log ) ; \n\t\t} \n\t} \n"}, {"code": "public OMScalingRaster ( double ullat , double ullon , double lrlat , double lrlon , ImageIcon ii ) { \n\tthis ( ullat , ullon , lrlat , lrlon , ii . getImage ( ) ) ; \n\t} \n"}, {"code": "private static $F108629 findVertices ( BitMatrix matrix , boolean tryHarder ) { \n\t$F2047 ( height , matrix ) $F2049 ( width , matrix ) $F108629 result = new ResultPoint $F380 ; \n\tboolean found = _BOOL ; \n\t$F22974 ( counters , START_PATTERN ) int rowStep = Math . max ( NUM00 , height > > ( tryHarder ? NUM00 : NUM00 ) ) ; \n\t$F108661 ( i , height , rowStep , loc , findGuardPattern , matrix , width , _BOOL , START_PATTERN , counters , result , found ) $F108660 ( found , _BOOL , i , height , rowStep , loc , findGuardPattern , matrix , width , START_PATTERN , counters , result ) $F14244 ( counters , STOP_PATTERN ) if ( found ) { \n\t\tfound = _BOOL ; \n\t\t$F108661 ( i , height , rowStep , loc , findGuardPattern , matrix , width , _BOOL , STOP_PATTERN , counters , result , found ) } \n\t$F108660 ( found , _BOOL , i , height , rowStep , loc , findGuardPattern , matrix , width , STOP_PATTERN , counters , result ) return found ? result : null ; \n\t} \n"}, {"code": "public static void copyStream ( InputStream is , OutputStream os , $F96 buffer , int bufferSize , String confid , double fileSize , Context context ) throws IOException { \n\tdouble downloaded = NUM00 ; \n\t$F11844 ( update ) try { \n\t\tfor ( $F589 ) { \n\t\t\t$F65003 ( count , is , buffer , bufferSize ) downloaded += count ; \n\t\t\tif ( count == - NUM00 ) { \n\t\t\t\tif ( context != null ) $F845 $F597 } \n\t\t\t$F11584 ( os , buffer , count ) if ( context != null ) { \n\t\t\t\tupdate [ NUM00 ] = ( int ) downloaded ; \n\t\t\t\tupdate [ NUM00 ] = ( int ) fileSize ; \n\t\t\t\tupdate [ NUM00 ] = ( int ) ( ( downloaded / fileSize ) * NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F8012 ( e ) } \n"}, {"code": "$F1 public void writeHeader $F72 throws IOException { \n\tos = new PDFWriter ( new BufferedOutputStream ( ros ) , PDF_VERSION ) ; \n\tdelayImageQueue = new PDFImageDelayQueue ( os ) ; \n\tdelayPaintQueue = new PDFPaintDelayQueue ( os , delayImageQueue ) ; \n\tfontTable = new PDFFontTable ( os ) ; \n\tPDFDocInfo info = os . openDocInfo ( NUM00 ) ; \n\tinfo . setTitle ( getProperty ( TITLE ) ) ; \n\tinfo . setAuthor ( getProperty ( AUTHOR ) ) ; \n\tinfo . setSubject ( getProperty ( SUBJECT ) ) ; \n\tinfo . setKeywords ( getProperty ( KEYWORDS ) ) ; \n\tinfo . setCreator ( getCreator ( ) ) ; \n\tinfo . setProducer ( producer == null ? NUM00 : producer ) ; \n\tif $F931 ( isDeviceIndependent ) { \n\t\t$F4377 ( now , Calendar ) info . setCreationDate ( now ) ; \n\t\tinfo . setModificationDate ( now ) ; \n\t\t} \n\tinfo . setTrapped ( NUM00 ) ; \n\tos . close ( info ) ; \n\tPDFCatalog catalog = os . openCatalog ( NUM00 , NUM00 ) ; \n\tcatalog . setOutlines ( NUM00 ) ; \n\tcatalog . setPageMode ( NUM00 ) ; \n\tcatalog . setViewerPreferences ( NUM00 ) ; \n\tcatalog . setOpenAction ( new Object [ ] { \n\t\tos . ref ( NUM00 ) , os . name ( NUM00 ) } \n\t) ; \n\tos . close ( catalog ) ; \n\tPDFViewerPreferences prefs = os . openViewerPreferences ( NUM00 ) ; \n\tprefs . setFitWindow ( _BOOL ) ; \n\tprefs . setCenterWindow ( _BOOL ) ; \n\tos . close ( prefs ) ; \n\talphaIndex = NUM00 ; \n\textGStates = new HashMap < Float , String > $F72 ; \n\tif $F931 ( isMultiPage ) { \n\t\topenPage ( getSize ( ) , null ) ; \n\t\t} \n\t} \n"}, {"code": "protected String parseString ( int closingCharacter ) throws IOException , RDFParseException { \n\tStringBuilder sb = getBuilder ( ) ; \n\twhile ( _BOOL ) { \n\t\tint c = readCodePoint ( ) ; \n\t\tif ( c == closingCharacter ) $F5153 else if ( c == - NUM00 ) $F5795 ( throwEOFException ) appendCodepoint ( sb , c ) ; \n\t\tif ( c == NUM00 ) { \n\t\t\tc = readCodePoint ( ) ; \n\t\t\tif ( c == - NUM00 ) $F5795 ( throwEOFException ) appendCodepoint ( sb , c ) ; \n\t\t\t} \n\t\t} \n\t$F92 ( sb ) } \n"}, {"code": "private void codeUnwrapReturnValue ( $F6969 type , DataOutputStream out ) throws IOException { \n\tif $F24204 ( type ) { \n\t\t$F27383 ( prim , PrimitiveTypeInfo , type ) out . writeByte ( opc_checkcast ) ; \n\t\tout . writeShort ( cp . getClass ( prim . wrapperClassName ) ) ; \n\t\tout . writeByte ( opc_invokevirtual ) ; \n\t\tout . writeShort ( cp . getMethodRef ( prim . wrapperClassName , prim . unwrapMethodName , prim . unwrapMethodDesc ) ) ; \n\t\tif ( type == $F37010 || type == $F41254 || type == $F41266 || type == $F94714 || type == $F41260 ) { \n\t\t\tout . writeByte ( opc_ireturn ) ; \n\t\t\t} \n\t\telse if $F41238 ( type ) { \n\t\t\tout . writeByte ( opc_lreturn ) ; \n\t\t\t} \n\t\telse if $F41249 ( type ) { \n\t\t\tout . writeByte ( opc_freturn ) ; \n\t\t\t} \n\t\telse if $F41243 ( type ) { \n\t\t\tout . writeByte ( opc_dreturn ) ; \n\t\t\t} \n\t\telse $F10176 } \n\telse { \n\t\tout . writeByte ( opc_checkcast ) ; \n\t\tout . writeShort ( cp . getClass ( $F6798 ( dotToSlash , type ) ) ) ; \n\t\tout . writeByte ( opc_areturn ) ; \n\t\t} \n\t} \n"}, {"code": "private String formatLink $F4374 ( parts ) { \n\tString anchor , text ; \n\tif $F8830 ( parts ) $F85091 ( anchor , text ) else { \n\t\tanchor = parts [ NUM00 ] ; \n\t\ttext = parts [ NUM00 ] ; \n\t\t} \n\treturn String . format ( NUM00 , anchor , text ) ; \n\t} \n"}, {"code": "public JSONException ( Throwable cause ) { \n\t$F3270 ( super , cause ) this . cause = cause ; \n\t} \n"}, {"code": "public boolean fixUtils $F4374 ( utils ) throws Exception { \n\tfor ( String util : utils ) { \n\t\tif ( ! checkUtil ( util ) ) { \n\t\t\tif ( checkUtil ( NUM00 ) ) { \n\t\t\t\tif ( hasUtil ( util , NUM00 ) ) { \n\t\t\t\t\tfixUtil ( util , RootTools . utilPath ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tif ( checkUtil ( NUM00 ) ) { \n\t\t\t\t\tif ( hasUtil ( util , NUM00 ) ) { \n\t\t\t\t\t\tfixUtil ( util , RootTools . utilPath ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\treturn _BOOL ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F1 protected void initialize $F72 { \n\t$F101494 ( patterns ) $F21883 ( super ) m_Patterns = new ArrayList $F28916 $F72 ; \n\tpatterns = read ( ) ; \n\tfor ( String pattern : patterns ) { \n\t\tm_Patterns . add ( Pattern . compile ( pattern ) ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F806 lsDirectories ( String directory ) throws Exception { \n\t$F91090 ( tmp , ls , directory ) $F22547 ( files ) for ( String s : tmp ) { \n\t\tif ( isDirectory ( directory + File . separator + s ) ) files . add ( s ) ; \n\t\t} \n\t$F14862 ( files ) } \n"}, {"code": "private void toStringWithChildren ( StringBuffer buffer , int indent ) { \n\tinternalToString ( buffer , indent ) ; \n\tif ( fChildren != null ) { \n\t\tfor ( Iterator < TextEdit > iterator = fChildren . iterator ( ) ; \n\t\titerator . hasNext ( ) ; \n\t\t) { \n\t\t\tTextEdit child = iterator . next ( ) ; \n\t\t\t$F84 ( buffer ) child . toStringWithChildren ( buffer , indent + NUM00 ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static void encode ( Appendable out , int value ) throws IOException { \n\tvalue = toVLQSigned ( value ) ; \n\tdo { \n\t\tint digit = value & VLQ_BASE_MASK ; \n\t\tvalue >>>= VLQ_BASE_SHIFT ; \n\t\tif ( value > NUM00 ) { \n\t\t\tdigit |= VLQ_CONTINUATION_BIT ; \n\t\t\t} \n\t\tout . append ( Base64 . toBase64 ( digit ) ) ; \n\t\t} \n\twhile ( value > NUM00 ) ; \n\t} \n"}, {"code": "public mxICellOverlay removeCellOverlay ( Object cell , mxICellOverlay overlay ) { \n\tif ( overlay == null ) { \n\t\tremoveCellOverlays ( cell ) ; \n\t\t} \n\telse { \n\t\tmxICellOverlay [ ] arr = getCellOverlays ( cell ) ; \n\t\tif ( arr != null ) { \n\t\t\tList < mxICellOverlay > list = Arrays . asList ( arr ) ; \n\t\t\tif $F16914 ( list , overlay ) { \n\t\t\t\tremoveCellOverlayComponent ( overlay , cell ) ; \n\t\t\t\t} \n\t\t\tarr = ( mxICellOverlay [ ] ) list . toArray ( ) ; \n\t\t\toverlays . put ( cell , arr ) ; \n\t\t\t} \n\t\t} \n\treturn overlay ; \n\t} \n"}, {"code": "public void removeForeignKey ( int idx ) $F106 ( foreignKeys , idx ) "}, {"code": "public $F21637 insert ( int offset , int i ) { \n\tinternal . insert ( offset , i ) ; \n\treturn this ; \n\t} \n"}, {"code": "public void addGefaehrdungsUmsetzung ( GefaehrdungsUmsetzung gefaehrdung ) $F2202 ( allGefaehrdungsUmsetzungen , gefaehrdung ) "}, {"code": "String normalizeClassPath ( String classPath , boolean generateRelative ) { \n\tchar sep = CauchoUtil . getPathSeparatorChar ( ) ; \n\tint head = NUM00 ; \n\tint tail = NUM00 ; \n\tCharBuffer cb = CharBuffer . allocate ( ) ; \n\twhile $F7007 ( head , classPath ) { \n\t\ttail = classPath . indexOf ( sep , head ) ; \n\t\tif ( tail < NUM00 ) $F3935 ( tail , classPath ) if ( tail > head ) { \n\t\t\t$F12715 ( segment , classPath , head , tail ) segment = normalizePath ( segment , generateRelative ) ; \n\t\t\tif ( segment != null ) { \n\t\t\t\tif $F35625 ( cb ) cb . append ( sep ) ; \n\t\t\t\tcb . append ( segment ) ; \n\t\t\t\t} \n\t\t\t} \n\t\thead = tail + NUM00 ; \n\t\t} \n\treturn cb . close ( ) ; \n\t} \n"}, {"code": "protected ASN1Sequence ( ASN1Encodable obj ) $F6659 ( seq , obj ) "}, {"code": "public static double pow $F30455 ( x , y ) { \n\tif ( y == NUM00 ) $F1083 else { \n\t\t$F137479 ( yBits , Double , y ) final int yRawExp = ( int ) ( ( yBits & MASK_DOUBLE_EXPONENT ) > > NUM00 ) ; \n\t\tfinal long yRawMantissa = yBits & MASK_DOUBLE_MANTISSA ; \n\t\t$F137479 ( xBits , Double , x ) final int xRawExp = ( int ) ( ( xBits & MASK_DOUBLE_EXPONENT ) > > NUM00 ) ; \n\t\tfinal long xRawMantissa = xBits & MASK_DOUBLE_MANTISSA ; \n\t\tif ( yRawExp > NUM00 ) { \n\t\t\tif ( ( yRawExp == NUM00 && yRawMantissa != NUM00 ) || ( xRawExp == NUM00 && xRawMantissa != NUM00 ) ) $F6623 ( Double ) else if ( xRawExp == NUM00 && xRawMantissa == NUM00 ) { \n\t\t\t\tif ( yRawExp == NUM00 ) $F6623 ( Double ) else $F1083 } \n\t\t\telse { \n\t\t\t\tif ( ( y > NUM00 ) ^ ( xRawExp < NUM00 ) ) $F90685 ( Double ) else { \n\t\t\t\t\treturn + NUM00 ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( yRawExp >= NUM00 ) { \n\t\t\t\tfinal long yFullMantissa = IMPLICIT_HIGH_BIT | yRawMantissa ; \n\t\t\t\tif ( yRawExp < NUM00 ) { \n\t\t\t\t\tfinal long integralMask = $F81964 < < ( NUM00 - yRawExp ) ; \n\t\t\t\t\tif ( ( yFullMantissa & integralMask ) == yFullMantissa ) { \n\t\t\t\t\t\tfinal long l = yFullMantissa > > ( NUM00 - yRawExp ) ; \n\t\t\t\t\t\treturn FastMath . pow ( x , ( y < NUM00 ) ? - l : l ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tfinal long l = yFullMantissa < < ( yRawExp - NUM00 ) ; \n\t\t\t\t\treturn FastMath . pow ( x , ( y < NUM00 ) ? - l : l ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( x == NUM00 ) { \n\t\t\t\treturn y < NUM00 ? Double . POSITIVE_INFINITY : + NUM00 ; \n\t\t\t\t} \n\t\t\telse if ( xRawExp == NUM00 ) { \n\t\t\t\tif ( xRawMantissa == NUM00 ) { \n\t\t\t\t\treturn ( y < NUM00 ) ? + NUM00 : Double . POSITIVE_INFINITY ; \n\t\t\t\t\t} \n\t\t\t\telse $F6623 ( Double ) } \n\t\t\telse if ( x < NUM00 ) $F6623 ( Double ) else { \n\t\t\t\tfinal double tmp = y * HEX_40000000 ; \n\t\t\t\tfinal double ya = ( y + tmp ) - tmp ; \n\t\t\t\tfinal double yb = y - ya ; \n\t\t\t\tfinal double lns [ ] = $F1990 ; \n\t\t\t\tfinal double lores = log ( x , lns ) ; \n\t\t\t\tif $F28102 ( Double , lores ) { \n\t\t\t\t\treturn lores ; \n\t\t\t\t\t} \n\t\t\t\tdouble lna = lns [ NUM00 ] ; \n\t\t\t\tdouble lnb = lns [ NUM00 ] ; \n\t\t\t\tfinal double tmp1 = lna * HEX_40000000 ; \n\t\t\t\tfinal double tmp2 = ( lna + tmp1 ) - tmp1 ; \n\t\t\t\tlnb += lna - tmp2 ; \n\t\t\t\tlna = tmp2 ; \n\t\t\t\tfinal double aa = lna * ya ; \n\t\t\t\tfinal double ab = lna * yb + lnb * ya + lnb * yb ; \n\t\t\t\tlna = aa + ab ; \n\t\t\t\tlnb = - ( lna - aa - ab ) ; \n\t\t\t\tdouble z = NUM00 / NUM00 ; \n\t\t\t\tz = z * lnb + $F52906 ; \n\t\t\t\tz = z * lnb + $F52906 ; \n\t\t\t\tz = z * lnb + NUM00 ; \n\t\t\t\tz = z * lnb + NUM00 ; \n\t\t\t\tz *= lnb ; \n\t\t\t\tfinal double result = exp ( lna , z , null ) ; \n\t\t\t\treturn result ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public final void push ( int value ) { \n\tint ff = m_firstFree ; \n\tif $F11078 ( ff , m_mapSize ) { \n\t\tif ( null == m_map ) $F74814 ( m_map , m_blocksize , m_mapSize ) else { \n\t\t\tm_mapSize += m_blocksize ; \n\t\t\tint newMap [ ] = new int [ m_mapSize ] ; \n\t\t\t$F10236 ( System , m_map , newMap , ff ) m_map = newMap ; \n\t\t\t} \n\t\t} \n\tm_map [ ff ] = value ; \n\tff ++ ; \n\tm_firstFree = ff ; \n\t} \n"}, {"code": "protected Node stringConversion ( Node node ) { \n\tTypeElement stringElement = elements . getTypeElement ( NUM00 ) ; \n\tif ( ! TypesUtils . isString ( node . getType ( ) ) ) { \n\t\tNode converted = new StringConversionNode ( node . getTree ( ) , node , stringElement . asType ( ) ) ; \n\t\taddToConvertedLookupMap ( converted ) ; \n\t\tinsertNodeAfter ( converted , node ) ; \n\t\treturn converted ; \n\t\t} \n\telse { \n\t\treturn node ; \n\t\t} \n\t} \n"}, {"code": "$F61852 public void testUpdate7 $F72 throws SQLException { \n\tDatabaseCreator . fillFKStrictTable ( conn ) ; \n\tstatement . executeUpdate ( NUM00 + DatabaseCreator . FKSTRICT_TABLE + NUM00 + DatabaseCreator . PARENT_TABLE + NUM00 ) ; \n\tResultSet r = statement . executeQuery ( NUM00 + DatabaseCreator . FKSTRICT_TABLE + NUM00 ) ; \n\t$F24630 ( r ) $F92911 ( assertEquals , r ) $F59 ( r ) } \n"}, {"code": "CompletableFuture < HistoryReadResponse > historyRead ( HistoryReadDetails historyReadDetails , TimestampsToReturn timestampsToReturn , boolean releaseContinuationPoints , List < HistoryReadValueId > nodesToRead ) ; \n"}, {"code": "private void validate $F72 throws URISyntaxException { \n\tString s = getScheme ( ) ; \n\tif ( ( s != null ) && $F87842 ( s ) ) $F932 if ( getLocalVmId ( ) == - NUM00 ) { \n\t\tthrow new URISyntaxException ( uri . toString ( ) , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public synchronized void finishWriting $F72 $F21847 ( doneWriting , _BOOL , notifyAll ) "}, {"code": "private long offset2PhysicalAddress ( final long offset ) { \n\treturn offset + headerSize ; \n\t} \n"}, {"code": "$F1 public void internalEntityDecl ( String name , XMLString text , XMLString nonNormalizedText , Augmentations augs ) throws XNIException { \n\ttry { \n\t\tif ( fDeclHandler != null ) { \n\t\t\tfDeclHandler . internalEntityDecl ( name , text . toString ( ) ) ; \n\t\t\t} \n\t\t} \n\t$F122277 ( e ) } \n"}, {"code": "public static boolean isAuthorized ( String logName , String operation , Object credential ) { \n\treturn authorizer . isAuthorized ( logName , operation , credential ) ; \n\t} \n"}, {"code": "public Object next $F72 { \n\tif ( pos < size ) return Array . get ( array , pos ++ ) ; \n\tthrow new NoSuchElementException ( NUM00 + pos + NUM00 + size ) ; \n\t} \n"}, {"code": "public void addMessages ( List < ? extends Message > messages ) { \n\t$F12265 ( SHOW_LOGS , Logger , TAG , messages ) mQueueLock . lock ( TAG ) ; \n\tmPlayerMessagesQueue . addAll ( messages ) ; \n\tmQueueLock . notify ( TAG ) ; \n\t$F12265 ( SHOW_LOGS , Logger , TAG , messages ) mQueueLock . unlock ( TAG ) ; \n\t} \n"}, {"code": "public PermissionRequestObject onRational ( Func3 rationalFunc ) { \n\tmRationalFunc = rationalFunc ; \n\treturn this ; \n\t} \n"}, {"code": "public GenericPrincipal ( String userName , String password , $F3803 roles , Map < String , List < GenericPrincipal . Attribute > > writeEntries , Map < String , List < GenericPrincipal . Attribute > > readEntries , Map < String , List < GenericPrincipal . Attribute > > executeTasks ) { \n\tthis . userName = userName ; \n\tthis . password = password ; \n\tthis . writeEntries = writeEntries ; \n\tthis . readEntries = readEntries ; \n\tthis . executeTasks = executeTasks ; \n\tif ( roles != null ) { \n\t\tthis . roles = new String $F2313 ( roles ) ; \n\t\tthis . roles = roles . toArray ( this . roles ) ; \n\t\tif ( this . roles . length > NUM00 ) Arrays . sort ( this . roles ) ; \n\t\t} \n\twriteMatchObjects = new HashMap < String , MatchObject > $F72 ; \n\treadMatchObjects = new HashMap < String , MatchObject > $F72 ; \n\texecuteMatchObjects = new HashMap < String , MatchObject > $F72 ; \n\t$F30598 ( userDefinedRoles ) } \n"}, {"code": "public boolean equals ( Object other ) { \n\t$F3627 ( other , this , _BOOL ) if ( ! ( other instanceof X509CRLEntry ) ) { \n\t\treturn _BOOL ; \n\t\t} \n\tX509CRLEntry obj = ( X509CRLEntry ) other ; \n\ttry $F120506 ( Arrays , getEncoded , obj ) $F222842 ( _BOOL ) } \n"}, {"code": "public static int roll1D6 $F72 { \n\treturn $F6823 ( rand ) ; \n\t} \n"}, {"code": "static $F96 septetStream2octetStream $F97 ( septets ) { \n\tint octetLength = ( int ) Math . ceil ( ( $F28143 ( septets ) ) / NUM00 ) ; \n\t$F2175 ( octets , octetLength ) for ( $F1139 ( i , septets ) ) { \n\t\tfor ( $F6268 ( j ) ) { \n\t\t\tif ( ( septets [ i ] & ( NUM00 < < j ) ) != NUM00 ) { \n\t\t\t\tint bitIndex = ( i * NUM00 ) + j ; \n\t\t\t\toctets [ bitIndex > > > NUM00 ] |= NUM00 < < ( bitIndex & NUM00 ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn octets ; \n\t} \n"}, {"code": "public CTaggingPanel ( final JFrame parent , final ZyGraph graph , final ITagManager manager ) { \n\t$F9898 ( super ) m_tagsTree = new CTagsTree ( parent , graph , manager ) ; \n\tfinal JScrollPane pane = new JScrollPane ( m_tagsTree ) ; \n\tpane . setVerticalScrollBarPolicy ( ScrollPaneConstants . VERTICAL_SCROLLBAR_AS_NEEDED ) ; \n\tpane . setHorizontalScrollBarPolicy ( ScrollPaneConstants . HORIZONTAL_SCROLLBAR_AS_NEEDED ) ; \n\tadd ( pane ) ; \n\tsetBorder ( new TitledBorder ( new LineBorder ( Color . LIGHT_GRAY , NUM00 , _BOOL ) , NUM00 ) ) ; \n\tsetDoubleBuffered ( _BOOL ) ; \n\t} \n"}, {"code": "$F1 public double height ( final int markerIndex ) { \n\tMathUtils . checkRangeInclusive ( markerIndex , NUM00 , markerArray . length - NUM00 ) ; \n\treturn markerArray [ markerIndex ] . markerHeight ; \n\t} \n"}, {"code": "public $F9340 void consume ( String groupId , String clientId , OffsetResetStrategy autoOffsetReset , Deserializer $F22664 keyDeserializer , Deserializer $F2193 valueDeserializer , BooleanSupplier continuation , OffsetCommitCallback offsetCommitCallback , Runnable completion , $F6877 topics , java . util . function . Consumer < ConsumerRecord $F9340 > consumerFunction ) { \n\tProperties props = getConsumerProperties ( groupId , clientId , autoOffsetReset ) ; \n\tThread t = new Thread $F8320 ; \n\tt . setName ( clientId + NUM00 ) ; \n\t$F2346 ( t ) } \n"}, {"code": "public double distance ( Instance first , Instance second , PerformanceStats stats ) { \n\treturn Math . sqrt ( distance ( first , second , Double . POSITIVE_INFINITY , stats ) ) ; \n\t} \n"}, {"code": "$F25527 ( redundantOpCompactThreshold , redundantOpCount , lruEntries ) "}, {"code": "public void findSameAsChaining ( Resource subj , $F25925 currentSameAs , $F83495 contxts ) throws InferenceEngineException { \n\ttry { \n\t\tCloseableIteration < Statement , QueryEvaluationException > subjIter = RyaDAOHelper . query ( ryaDAO , subj , OWL . SAMEAS , null , conf , contxts ) ; \n\t\twhile $F2921 ( subjIter ) { \n\t\t\tStatement st = subjIter . next ( ) ; \n\t\t\tif ( ! currentSameAs . contains ( st . getObject ( ) ) ) { \n\t\t\t\tResource castedObj = ( Resource ) st . getObject ( ) ; \n\t\t\t\tcurrentSameAs . add ( castedObj ) ; \n\t\t\t\tfindSameAsChaining ( castedObj , currentSameAs , contxts ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F59 ( subjIter ) CloseableIteration < Statement , QueryEvaluationException > objIter = RyaDAOHelper . query ( ryaDAO , null , OWL . SAMEAS , subj , conf , contxts ) ; \n\t\twhile $F2921 ( objIter ) { \n\t\t\tStatement st = objIter . next ( ) ; \n\t\t\tif ( ! currentSameAs . contains ( st . getSubject ( ) ) ) { \n\t\t\t\tResource sameAsSubj = st . getSubject ( ) ; \n\t\t\t\tcurrentSameAs . add ( sameAsSubj ) ; \n\t\t\t\tfindSameAsChaining ( sameAsSubj , currentSameAs , contxts ) ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F59 ( objIter ) } \n\tcatch ( QueryEvaluationException e ) { \n\t\tthrow new InferenceEngineException ( e ) ; \n\t\t} \n\t} \n"}, {"code": "public static void reindex ( Connection conn ) throws SQLException { \n\tinit ( conn ) ; \n\tremoveAllTriggers ( conn , TRIGGER_PREFIX ) ; \n\tremoveIndexFiles ( conn ) ; \n\t$F11282 ( stat , conn ) ResultSet rs = stat . executeQuery ( NUM00 + SCHEMA + NUM00 ) ; \n\twhile $F1682 ( rs ) { \n\t\t$F21024 ( schema , rs ) $F21024 ( table , rs ) createTrigger ( conn , schema , table ) ; \n\t\tindexExistingRows ( conn , schema , table ) ; \n\t\t} \n\t} \n"}, {"code": "String toDot $F72 { \n\t$F83 ( buf ) for ( Type t : inferenceContext . undetvars ) { \n\t\tUndetVar uv = ( UndetVar ) t ; \n\t\tbuf . append ( String . format ( NUM00 , uv . qtype , uv . getBounds ( InferenceBound . UPPER ) , uv . getBounds ( InferenceBound . LOWER ) , uv . getBounds ( InferenceBound . EQ ) ) ) ; \n\t\t} \n\treturn GraphUtils . toDot ( nodes , NUM00 + hashCode ( ) , buf . toString ( ) ) ; \n\t} \n"}, {"code": "private void resizeTables $F72 { \n\tif ( mObjectDataUsed > mObjectData . length - MAX_DATA_SIZE ) { \n\t\tmObjectData = Arrays . copyOf ( mObjectData , mObjectData . length * NUM00 ) ; \n\t\t} \n\tif ( mObjectCount < mTypes . length ) $F932 mObjectOffset = Arrays . copyOf ( mObjectOffset , mObjectOffset . length * NUM00 ) ; \n\tmTypes = Arrays . copyOf ( mTypes , mTypes . length * NUM00 ) ; \n\tmObjects = Arrays . copyOf ( mObjects , mObjects . length * NUM00 ) ; \n\tmRect = Arrays . copyOf ( mRect , mRect . length * NUM00 ) ; \n\t} \n"}, {"code": "private boolean hasNextInetSocketAddress $F72 $F231867 ( nextInetSocketAddressIndex , inetSocketAddresses ) "}, {"code": "protected static double convertPercentileToX ( double percentileLevelIteratedTo ) { \n\tdouble x = NUM00 / ( NUM00 - ( percentileLevelIteratedTo / NUM00 ) ) ; \n\treturn Math . log10 ( x ) ; \n\t} \n"}, {"code": "public static String queueNameFromDBName ( String dbName ) { \n\t$F806 tokens = $F289440 ( dbName ) ; \n\treturn tokens [ NUM00 ] ; \n\t} \n"}, {"code": "public String UseThis $F103468 ( type , id , context ) { \n\tint i = FindSym ( type , id , context ) ; \n\tif $F25745 ( i , symtab ) return id ; \n\telse return ( ( SymTabEntry ) symtab . elementAt ( i ) ) . useThis ; \n\t} \n"}, {"code": "private float angle ( TouchState s ) { \n\treturn ( float ) Math . toDegrees ( Math . atan2 ( s . yDown - s . yCurrent , s . xDown - s . xCurrent ) ) ; \n\t} \n"}, {"code": "private int uint16FromData ( int offset ) { \n\treturn twoBytesToInt ( Arrays . copyOfRange ( data ( ) , offset , offset + NUM00 ) , Constants . CC2540_BYTE_ORDER ) ; \n\t} \n"}, {"code": "protected static $F7329 asrRegister $F7334 ( offset , environment , instructions , registerNodeValue1 , registerNodeValue2 ) { \n\t$F7336 ( shifterOperand , environment ) $F7336 ( shifterCarryOut , environment ) $F7336 ( isZeroCondition , environment ) $F7336 ( isLessCondition , environment ) $F7336 ( isGtEqCondition , environment ) $F7336 ( shifterCarryOutTmp1 , environment ) $F7336 ( shifterCarryOutTmp2 , environment ) $F7336 ( shifterCarryOutTmp3 , environment ) $F7336 ( shifterCarryOutTmp4 , environment ) $F7336 ( shifterOperandTmp1 , environment ) $F7336 ( shifterOperandTmp2 , environment ) $F7336 ( shifterOperandTmp3 , environment ) $F7336 ( shifterOperandTmp4 , environment ) $F7336 ( tmpRsRegister , environment ) $F7336 ( negativeTmpRsRegister , environment ) $F7336 ( tmpVar1 , environment ) $F7336 ( tmpVar2 , environment ) $F7336 ( tmpVar3 , environment ) $F7336 ( tmpVar4 , environment ) $F7336 ( tmpVar5 , environment ) $F7336 ( tmpVar6 , environment ) $F7336 ( tmpVar7 , environment ) $F7336 ( tmpVar8 , environment ) $F7336 ( tmpVar9 , environment ) $F7336 ( tmpVar10 , environment ) $F7336 ( tmpVar11 , environment ) long baseOffset = offset ; \n\tinstructions . add ( ReilHelpers . createAnd ( baseOffset ++ , dWordSize , registerNodeValue2 , dWordSize , String . valueOf ( NUM00 ) , dWordSize , tmpRsRegister ) ) ; \n\tinstructions . add ( ReilHelpers . createSub ( baseOffset ++ , dWordSize , zeroSet , dWordSize , tmpRsRegister , dWordSize , negativeTmpRsRegister ) ) ; \n\t$F453896 ( instructions , ReilHelpers , baseOffset , dWordSize , tmpRsRegister , byteSize , isZeroCondition ) instructions . add ( ReilHelpers . createAnd ( baseOffset ++ , byteSize , NUM00 , byteSize , isZeroCondition , byteSize , shifterCarryOutTmp1 ) ) ; \n\tinstructions . add ( ReilHelpers . createSub ( baseOffset ++ , dWordSize , String . valueOf ( NUM00 ) , byteSize , isZeroCondition , dWordSize , tmpVar1 ) ) ; \n\t$F7341 ( instructions , ReilHelpers , baseOffset , dWordSize , tmpVar1 , registerNodeValue2 , shifterOperandTmp1 ) instructions . add ( ReilHelpers . createAnd ( baseOffset ++ , dWordSize , tmpRsRegister , dWordSize , String . valueOf ( NUM00 ) , dWordSize , tmpVar2 ) ) ; \n\t$F453896 ( instructions , ReilHelpers , baseOffset , dWordSize , tmpVar2 , byteSize , isLessCondition ) $F43828 ( instructions , ReilHelpers , baseOffset , dWordSize , registerNodeValue1 , bitMaskHighestBitSet , tmpVar3 ) instructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dWordSize , tmpVar3 , dWordSize , negativeTmpRsRegister , dWordSize , tmpVar4 ) ) ; \n\tinstructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dWordSize , bitMaskHighestBitSet , dWordSize , negativeTmpRsRegister , dWordSize , tmpVar5 ) ) ; \n\tinstructions . add ( ReilHelpers . createSub ( baseOffset ++ , dWordSize , tmpVar4 , dWordSize , tmpVar5 , dWordSize , tmpVar6 ) ) ; \n\tinstructions . add ( ReilHelpers . createSub ( baseOffset ++ , dWordSize , zeroSet , byteSize , isLessCondition , dWordSize , tmpVar7 ) ) ; \n\t$F7341 ( instructions , ReilHelpers , baseOffset , dWordSize , tmpVar6 , tmpVar7 , shifterOperandTmp2 ) instructions . add ( ReilHelpers . createSub ( baseOffset ++ , dWordSize , tmpRsRegister , byteSize , oneSet , dWordSize , tmpVar8 ) ) ; \n\tinstructions . add ( ReilHelpers . createSub ( baseOffset ++ , dWordSize , zeroSet , dWordSize , tmpVar8 , dWordSize , tmpVar8 ) ) ; \n\tinstructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dWordSize , registerNodeValue1 , dWordSize , tmpVar8 , dWordSize , tmpVar9 ) ) ; \n\t$F7364 ( instructions , ReilHelpers , baseOffset , dWordSize , tmpVar9 , byteSize , isLessCondition , shifterCarryOutTmp2 ) $F43825 ( instructions , ReilHelpers , baseOffset , byteSize , isZeroCondition , isLessCondition , tmpVar10 ) instructions . add ( ReilHelpers . createBisz ( baseOffset ++ , byteSize , tmpVar10 , byteSize , isGtEqCondition ) ) ; \n\tinstructions . add ( ReilHelpers . createBsh ( baseOffset ++ , dWordSize , registerNodeValue1 , dWordSize , minusThirtyOneSet , byteSize , tmpVar11 ) ) ; \n\tinstructions . add ( ReilHelpers . createSub ( baseOffset ++ , byteSize , zeroSet , byteSize , isGtEqCondition , dWordSize , shifterOperandTmp3 ) ) ; \n\t$F7341 ( instructions , ReilHelpers , baseOffset , byteSize , tmpVar11 , isGtEqCondition , shifterCarryOutTmp3 ) $F43825 ( instructions , ReilHelpers , baseOffset , byteSize , shifterCarryOutTmp1 , shifterCarryOutTmp2 , shifterCarryOutTmp4 ) $F43825 ( instructions , ReilHelpers , baseOffset , byteSize , shifterCarryOutTmp3 , shifterCarryOutTmp4 , shifterCarryOut ) $F43825 ( instructions , ReilHelpers , baseOffset , dWordSize , shifterOperandTmp1 , shifterOperandTmp2 , shifterOperandTmp4 ) $F43825 ( instructions , ReilHelpers , baseOffset , dWordSize , shifterOperandTmp3 , shifterOperandTmp4 , shifterOperand ) $F7348 ( shifterOperand , shifterCarryOut ) } \n"}, {"code": "private static String removeQuotesEncolosingOption ( String fileName , String option ) throws Exception { \n\tString option1 = removeQuoteCharactersIfNecessary ( fileName , option , NUM00 ) ; \n\tif $F2137 ( option1 , option ) { \n\t\treturn option1 ; \n\t\t} \n\treturn removeQuoteCharactersIfNecessary ( fileName , option , NUM00 ) ; \n\t} \n"}, {"code": "$F1 public String generateLabel ( XYDataset dataset , int series ) { \n\t$F19400 ( ParamChecks , dataset ) String label = MessageFormat . format ( this . formatPattern , createItemArray ( dataset , series ) ) ; \n\treturn label ; \n\t} \n"}, {"code": "private boolean matchStrings ( String pattern , String str , $F2540 ( uriTemplateVariables ) ) { \n\tAntPathStringMatcher matcher = new AntPathStringMatcher ( pattern , str , uriTemplateVariables ) ; \n\treturn matcher . matchStrings ( ) ; \n\t} \n"}, {"code": "$F5466 public Dimension adjust ( $F1113 Dimension newPreferredSize , $F5466 Dimension oldPreferredSize , $F1113 EditorImpl editor ) { \n\tif ( oldPreferredSize == null || mySkip ) { \n\t\treturn newPreferredSize ; \n\t\t} \n\tif ( newPreferredSize . height != oldPreferredSize . height ) { \n\t\treturn newPreferredSize ; \n\t\t} \n\tstripTimings ( ) ; \n\tmyTimings . add ( System . currentTimeMillis ( ) ) ; \n\tif $F10255 ( myTimings , FREQUENT_SIZE_CHANGES1BER ) { \n\t\treturn newPreferredSize ; \n\t\t} \n\tboolean increaseWidth = newPreferredSize . width > oldPreferredSize . width ; \n\tDimension result ; \n\tif ( increaseWidth ) { \n\t\tfinal int spaceWidth = EditorUtil . getSpaceWidth ( Font . PLAIN , editor ) ; \n\t\tnewPreferredSize . width += myReserveColumns * spaceWidth ; \n\t\tmyReserveColumns += NUM00 ; \n\t\tresult = newPreferredSize ; \n\t\t} \n\telse { \n\t\tresult = oldPreferredSize ; \n\t\t} \n\tscheduleSizeUpdate ( editor ) ; \n\treturn result ; \n\t} \n"}, {"code": "public RVMField findDeclaredField ( Atom fieldName , Atom fieldDescriptor ) { \n\tfor ( RVMField field : declaredFields ) { \n\t\tif ( field . getName ( ) == fieldName && field . getDescriptor ( ) == fieldDescriptor ) { \n\t\t\treturn field ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public Quarter ( Date time , TimeZone zone ) $F118649 ( this , time , zone , Locale ) "}, {"code": "private Util $F72 $F845 "}, {"code": "default B withDefault ( String key , float value ) $F65298 ( withDefault , key , Float , value ) "}, {"code": "public static boolean readBoolean ( final JSONArray jsonArray , final int index , final boolean required , final boolean notNull ) throws JSONException { \n\tif ( required ) $F232979 ( jsonArray , index ) $F3652 ( notNull , jsonArray , index , String , Locale , NULL_VALUE_FORMAT_ARRAY ) boolean value = _BOOL ; \n\tif $F3653 ( jsonArray , index ) { \n\t\tvalue = jsonArray . getBoolean ( index ) ; \n\t\t} \n\treturn value ; \n\t} \n"}, {"code": "protected static void autoBoxing ( MethodVisitor mv , Type fieldType ) { \n\tswitch ( fieldType . getSort ( ) ) { \n\t\tcase Type . BOOLEAN : mv . visitMethodInsn ( INVOKESTATIC , NUM00 , NUM00 , NUM00 ) ; \n\t\t$F597 case Type . BYTE : mv . visitMethodInsn ( INVOKESTATIC , NUM00 , NUM00 , NUM00 ) ; \n\t\t$F597 case Type . CHAR : mv . visitMethodInsn ( INVOKESTATIC , NUM00 , NUM00 , NUM00 ) ; \n\t\t$F597 case Type . SHORT : mv . visitMethodInsn ( INVOKESTATIC , NUM00 , NUM00 , NUM00 ) ; \n\t\t$F597 case Type . INT : mv . visitMethodInsn ( INVOKESTATIC , NUM00 , NUM00 , NUM00 ) ; \n\t\t$F597 case Type . FLOAT : mv . visitMethodInsn ( INVOKESTATIC , NUM00 , NUM00 , NUM00 ) ; \n\t\t$F597 case Type . LONG : mv . visitMethodInsn ( INVOKESTATIC , NUM00 , NUM00 , NUM00 ) ; \n\t\t$F597 case Type . DOUBLE : mv . visitMethodInsn ( INVOKESTATIC , NUM00 , NUM00 , NUM00 ) ; \n\t\t$F597 } \n\t} \n"}, {"code": "public final void openPdfFile $F3295 ( data ) throws PdfException { \n\tfinal RandomAccessBuffer pdf_datafile ; \n\ttry { \n\t\tif ( PdfFileReader . alwaysCacheInMemory == - NUM00 || data . length < PdfFileReader . alwaysCacheInMemory ) { \n\t\t\tpdf_datafile = new RandomAccessDataBuffer ( data ) ; \n\t\t\t} \n\t\telse { \n\t\t\ttry { \n\t\t\t\tfinal File file = File . createTempFile ( NUM00 , NUM00 , new File ( ObjectStore . temp_dir ) ) ; \n\t\t\t\t$F24536 ( tempFileName , file ) final java . io . FileOutputStream a = new java . io . FileOutputStream ( file ) ; \n\t\t\t\ta . write ( data ) ; \n\t\t\t\t$F1206 ( a ) $F59 ( a ) pdf_datafile = new RandomAccessFileBuffer ( tempFileName , NUM00 ) ; \n\t\t\t\t} \n\t\t\tcatch ( final Exception e ) { \n\t\t\t\tthrow new RuntimeException ( NUM00 + ObjectStore . temp_dir + NUM00 + e ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tobjectReader . init ( pdf_datafile ) ; \n\t\t} \n\tcatch ( final Exception e ) { \n\t\tLogWriter . writeLog ( NUM00 + e + NUM00 ) ; \n\t\tthrow new PdfException ( NUM00 + e + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public static void main $F4374 ( args ) { \n\tif $F8830 ( args ) $F9465 ( LOGGER ) $F40997 ( lastIndex , args ) Path [ ] files = getFiles ( args ) ; \n\tMain main = new Main $F72 ; \n\tmain . generate ( files [ lastIndex ] , Arrays . copyOf ( files , lastIndex ) ) ; \n\t} \n"}, {"code": "$F5466 E awaitMatch ( int start ) { \n\tfor ( int step = NUM00 , totalSpins = NUM00 ; \n\t( step < ARENA_LENGTH ) && ( totalSpins < SPINS ) ; \n\tstep ++ ) { \n\t\tint index = ( start + step ) & ARENA_MASK ; \n\t\tAtomicReference $F1432 slot = arena [ index ] ; \n\t\t$F86788 ( found , slot ) if ( found == FREE ) { \n\t\t\tif $F73502 ( slot , FREE , WAITER ) { \n\t\t\t\tint slotSpins = NUM00 ; \n\t\t\t\tfor ( $F589 ) { \n\t\t\t\t\t$F16478 ( found , slot ) if ( ( found != WAITER ) && slot . compareAndSet ( found , FREE ) ) { \n\t\t\t\t\t\t$F1431 E e = ( E ) found ; \n\t\t\t\t\t\treturn e ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( ( slotSpins >= SPINS_PER_STEP ) && ( found == WAITER ) && $F73502 ( slot , WAITER , FREE ) ) { \n\t\t\t\t\t\ttotalSpins += slotSpins ; \n\t\t\t\t\t\t$F597 } \n\t\t\t\t\tslotSpins ++ ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\telse if ( ( found != WAITER ) && slot . compareAndSet ( found , FREE ) ) { \n\t\t\t$F1431 E e = ( E ) found ; \n\t\t\treturn e ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "private ArrayList < Signature > constructOneSignatures ( SetDBIDs [ ] [ ] partitions , final long [ ] [ ] markers ) { \n\t$F18832 ( dim , partitions ) ArrayList < Signature > $F204 ( signatures ) ; \n\tfor ( $F119 ( d , dim ) ) { \n\t\tfinal DBIDs [ ] parts = partitions [ d ] ; \n\t\t$F4322 ( parts ) final $F2469 marked = markers [ d ] ; \n\t\tfor ( int start = BitsUtil . nextSetBit ( marked , NUM00 ) ; \n\t\tstart >= NUM00 ; \n\t\t) { \n\t\t\tint end = BitsUtil . nextClearBit ( marked , start + NUM00 ) ; \n\t\t\tend = ( end == - NUM00 ) ? dim : end ; \n\t\t\t$F2027 signature = new int [ dim < < NUM00 ] ; \n\t\t\t$F99493 ( Arrays , signature ) signature [ d < < NUM00 ] = start ; \n\t\t\t$F107987 ( signature , d ) = end - NUM00 ; \n\t\t\tHashSetModifiableDBIDs sids = unionDBIDs ( parts , start , end ) ; \n\t\t\tif $F88618 ( LOG ) { \n\t\t\t\tLOG . debug ( NUM00 + d + NUM00 + start + NUM00 + ( end - NUM00 ) ) ; \n\t\t\t\t} \n\t\t\tsignatures . add ( new Signature ( signature , sids ) ) ; \n\t\t\tstart = ( end < dim ) ? BitsUtil . nextSetBit ( marked , end + NUM00 ) : - NUM00 ; \n\t\t\t} \n\t\t} \n\treturn signatures ; \n\t} \n"}, {"code": "public void testTestBitPositive1 $F72 { \n\t$F123148 int aSign = NUM00 ; \n\tint number = NUM00 ; \n\t$F3023 ( aNumber , aSign , aBytes ) assertTrue ( ! aNumber . testBit ( number ) ) ; \n\t} \n"}, {"code": "public static int findEndTrimNewlineChars ( CharSequence s ) { \n\tfor ( $F1748 ( i , s ) ; \n\ti > NUM00 ; \n\t) { \n\t\tif ( $F17486 ( s , i ) ) { \n\t\t\treturn i ; \n\t\t\t} \n\t\ti -- ; \n\t\tif $F41319 ( i , s ) { \n\t\t\ti -- ; \n\t\t\t} \n\t\t} \n\t$F1082 } \n"}, {"code": "public static String assertJQ ( SolrQueryRequest req , String ... tests ) throws Exception { \n\treturn assertJQ ( req , JSONTestUtil . DEFAULT_DELTA , tests ) ; \n\t} \n"}, {"code": "public void popElemAttributeSet $F72 $F89427 ( m_attrSetStack ) "}, {"code": "private void calcCoordinates ( final float x , final $F101632 Trm , float charSpacing ) { \n\tfinal $F101632 trm = new float $F387 ; \n\tfor ( $F6268 ( xx ) ) { \n\t\tSystem . arraycopy ( Trm [ xx ] , NUM00 , trm [ xx ] , NUM00 , NUM00 ) ; \n\t\t} \n\tx1 = x ; \n\tx2 = trm [ NUM00 ] [ NUM00 ] - ( charSpacing * trm [ NUM00 ] [ NUM00 ] ) ; \n\tif $F441256 ( glyphData ) { \n\t\tif $F148942 ( trm ) { \n\t\t\tx1 = x + trm [ NUM00 ] [ NUM00 ] - ( charSpacing * trm [ NUM00 ] [ NUM00 ] ) ; \n\t\t\t$F293670 ( x2 , trm ) } \n\t\telse if ( $F148939 ( trm ) ) { \n\t\t\tx1 = x ; \n\t\t\t$F293670 ( x2 , trm ) } \n\t\t} \n\telse if ( $F148939 ( trm ) ) { \n\t\t$F293670 ( x1 , trm ) x2 = x + trm [ NUM00 ] [ NUM00 ] - ( charSpacing * trm [ NUM00 ] [ NUM00 ] ) ; \n\t\t} \n\telse if $F148942 ( trm ) { \n\t\t$F293670 ( x2 , trm ) x1 = x + trm [ NUM00 ] [ NUM00 ] - ( charSpacing * trm [ NUM00 ] [ NUM00 ] ) ; \n\t\t} \n\t} \n"}, {"code": "public void printEntry ( Writer w ) { \n\ttry { \n\t\tString indent = NUM00 ; \n\t\t$F1749 ( indentWidth , indent ) HardcopyWriter ww = ( HardcopyWriter ) w ; \n\t\tint textSpace = ww . getCharactersPerLine ( ) - indentWidth - NUM00 ; \n\t\tString newLine = NUM00 ; \n\t\t$F105801 ( w , newLine ) String s = NUM00 + _id ; \n\t\t$F170077 ( w , s ) if ( ! $F3057 ( _consistNumber ) ) { \n\t\t\t$F105801 ( w , newLine ) s = NUM00 + _consistNumber ; \n\t\t\t$F170077 ( w , s ) } \n\t\tif ( ! $F3057 ( _roadName ) ) { \n\t\t\t$F105801 ( w , newLine ) s = NUM00 + _roadName ; \n\t\t\t$F170077 ( w , s ) } \n\t\tif ( ! $F3057 ( _roadNumber ) ) { \n\t\t\t$F105801 ( w , newLine ) s = NUM00 + _roadNumber ; \n\t\t\t$F170077 ( w , s ) } \n\t\tif ( ! $F3057 ( _model ) ) { \n\t\t\t$F105801 ( w , newLine ) s = NUM00 + _model ; \n\t\t\t$F170077 ( w , s ) } \n\t\tif ( ! $F3057 ( _loco1DccAddress ) ) { \n\t\t\t$F105801 ( w , newLine ) s = NUM00 + _loco1DccAddress + NUM00 + _loco1Direction ; \n\t\t\t$F170077 ( w , s ) } \n\t\tif ( ! $F3057 ( _loco2DccAddress ) ) { \n\t\t\t$F105801 ( w , newLine ) s = NUM00 + _loco2DccAddress + NUM00 + _loco2Direction ; \n\t\t\t$F170077 ( w , s ) } \n\t\tif ( ! $F3057 ( _loco3DccAddress ) ) { \n\t\t\t$F105801 ( w , newLine ) s = NUM00 + _loco3DccAddress + NUM00 + _loco3Direction ; \n\t\t\t$F170077 ( w , s ) } \n\t\tif ( ! $F3057 ( _loco4DccAddress ) ) { \n\t\t\t$F105801 ( w , newLine ) s = NUM00 + _loco4DccAddress + NUM00 + _loco4Direction ; \n\t\t\t$F170077 ( w , s ) } \n\t\tif ( ! $F3057 ( _loco5DccAddress ) ) { \n\t\t\t$F105801 ( w , newLine ) s = NUM00 + _loco5DccAddress + NUM00 + _loco5Direction ; \n\t\t\t$F170077 ( w , s ) } \n\t\tif ( ! $F3057 ( _loco6DccAddress ) ) { \n\t\t\t$F105801 ( w , newLine ) s = NUM00 + _loco6DccAddress + NUM00 + _loco6Direction ; \n\t\t\t$F170077 ( w , s ) } \n\t\tif ( ! $F3057 ( _comment ) ) { \n\t\t\t$F11968 commentVector = wrapComment ( _comment , textSpace ) ; \n\t\t\tint k = NUM00 ; \n\t\t\t$F105801 ( w , newLine ) s = NUM00 + commentVector . elementAt ( k ) ; \n\t\t\t$F170077 ( w , s ) k ++ ; \n\t\t\twhile $F1765 ( k , commentVector ) { \n\t\t\t\tString token = commentVector . elementAt ( k ) ; \n\t\t\t\tif $F1264 ( token ) { \n\t\t\t\t\ts = indent + token ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\ts = token ; \n\t\t\t\t\t} \n\t\t\t\t$F170077 ( w , s ) k ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\t$F105801 ( w , newLine ) } \n\tcatch ( IOException e ) $F17663 ( log , e ) } \n"}, {"code": "protected $F22273 fromJulian ( int julian ) { \n\tYMD ymd = new YMD ( julian ) ; \n\tGregorianCalendar cal = new GregorianCalendar ( ymd . year , ymd . month - NUM00 , ymd . day ) ; \n\t$F11894 ( cal ) } \n"}, {"code": "public synchronized boolean removeLast ( K obj ) { \n\tif ( peekLast ( ) != obj ) { \n\t\treturn _BOOL ; \n\t\t} \n\tarray = Arrays . copyOf ( array , array . length - NUM00 ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private boolean serializeCompactRDFStructProp ( XMPNode node , int indent , boolean hasRDFResourceQual ) throws XMPException , IOException { \n\tboolean hasAttrFields = _BOOL ; \n\tboolean hasElemFields = _BOOL ; \n\tboolean emitEndTag = _BOOL ; \n\tfor ( Iterator ic = node . iterateChildren ( ) ; \n\tic . hasNext ( ) ; \n\t) { \n\t\t$F38096 ( field , ic ) if ( canBeRDFAttrProp ( field ) ) { \n\t\t\thasAttrFields = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\thasElemFields = _BOOL ; \n\t\t\t} \n\t\tif ( hasAttrFields && hasElemFields ) $F5153 } \n\tif ( hasRDFResourceQual && hasElemFields ) { \n\t\tthrow new XMPException ( NUM00 , XMPError . BADRDF ) ; \n\t\t} \n\tif ( ! node . hasChildren ( ) ) { \n\t\twrite ( NUM00 ) ; \n\t\twriteNewline ( ) ; \n\t\temitEndTag = _BOOL ; \n\t\t} \n\telse if ( ! hasElemFields ) { \n\t\tserializeCompactRDFAttrProps ( node , indent + NUM00 ) ; \n\t\twrite ( NUM00 ) ; \n\t\twriteNewline ( ) ; \n\t\temitEndTag = _BOOL ; \n\t\t} \n\telse if ( ! hasAttrFields ) { \n\t\twrite ( NUM00 ) ; \n\t\twriteNewline ( ) ; \n\t\tserializeCompactRDFElementProps ( node , indent + NUM00 ) ; \n\t\t} \n\telse { \n\t\twrite ( NUM00 ) ; \n\t\twriteNewline ( ) ; \n\t\twriteIndent ( indent + NUM00 ) ; \n\t\twrite ( RDF_STRUCT_START ) ; \n\t\tserializeCompactRDFAttrProps ( node , indent + NUM00 ) ; \n\t\twrite ( NUM00 ) ; \n\t\twriteNewline ( ) ; \n\t\tserializeCompactRDFElementProps ( node , indent + NUM00 ) ; \n\t\twriteIndent ( indent + NUM00 ) ; \n\t\twrite ( RDF_STRUCT_END ) ; \n\t\twriteNewline ( ) ; \n\t\t} \n\treturn emitEndTag ; \n\t} \n"}, {"code": "public default UtilityTable queryUtil ( BNetwork network , String queryVar , Assignment evidence ) { \n\treturn queryUtil ( new Query . UtilQuery ( network , Arrays . asList ( queryVar ) , evidence ) ) ; \n\t} \n"}, {"code": "public static $F5415 stringListToNumeric $F24643 ( scoreList ) throws NumberFormatException { \n\t$F5415 scores = new float $F2313 ( scoreList ) ; \n\tint scoreId = NUM00 ; \n\tfor ( String score : scoreList ) { \n\t\tfloat floatScore = ( float ) Double . parseDouble ( score ) ; \n\t\tif $F35707 ( Float , floatScore ) $F111291 ( score ) scores [ scoreId ++ ] = floatScore ; \n\t\t} \n\treturn scores ; \n\t} \n"}, {"code": "$F1 public void next $F72 { \n\tcurrentImage = Optional . of ( addIndexAndGetImageByOffset ( + NUM00 ) ) ; \n\teventBus . post ( new SourceHasPendingUpdateEvent ( this ) ) ; \n\t} \n"}, {"code": "protected void parse ( DataInputStream stream ) throws Exception { \n\t$F5952 ( size , stream ) int ret , read = NUM00 ; \n\t$F1325 ( data , size ) while ( size > NUM00 ) { \n\t\tret = stream . read ( data , read , size ) ; \n\t\tsize -= ret ; \n\t\tread += ret ; \n\t\t} \n\t} \n"}, {"code": "private List $F43793 findBestInsertion ( List $F43793 partialRoute , boolean allowAsMajor ) { \n\tint startIndex = NUM00 ; \n\t$F40484 ( endIndex , partialRoute ) if ( allowAsMajor ) { \n\t\tstartIndex = NUM00 ; \n\t\t$F8935 ( endIndex , partialRoute ) } \n\tList $F43793 newList = partialRoute ; \n\tdouble best = Double . POSITIVE_INFINITY ; \n\tList $F43793 bestList = null ; \n\tfor ( int i = startIndex ; \n\ti <= endIndex ; \n\ti ++ ) { \n\t\tList $F43793 $F10252 ( tmpList , newList ) ; \n\t\tActivity tmpActivity = getRelocationActivity ( ) ; \n\t\ttmpList . add ( i , tmpActivity ) ; \n\t\tdouble tmp = evaluateList ( tmpList ) ; \n\t\tif ( tmp < best ) { \n\t\t\tif ( i == NUM00 ) { \n\t\t\t\t$F146148 ( tmpActivity ) tmpActivity . setEndTime ( Time . parseTime ( NUM00 ) ) ; \n\t\t\t\t} \n\t\t\telse if $F25745 ( i , partialRoute ) { \n\t\t\t\t$F146148 ( tmpActivity ) } \n\t\t\telse { \n\t\t\t\t$F146148 ( tmpActivity ) tmpActivity . setMaximumDuration ( Time . parseTime ( NUM00 ) ) ; \n\t\t\t\t} \n\t\t\tbest = tmp ; \n\t\t\tbestList = tmpList ; \n\t\t\t} \n\t\t} \n\treturn bestList ; \n\t} \n"}, {"code": "$F97565 ( value , pattern , locale , calendar , format , _BOOL , fail , e ) "}, {"code": "public void writeShort ( int value ) throws IOException { \n\tcheckWritePrimitiveTypes ( ) ; \n\tprimitiveTypes . writeShort ( value ) ; \n\t} \n"}, {"code": "private boolean isInitialized $F72 $F51935 ( poolNames ) "}, {"code": "public void onRegisterClick ( View view ) { \n\tIntent register = new Intent ( Intent . ACTION_VIEW , Uri . parse ( getString ( R . string . welcome_link_url ) ) ) ; \n\tsetResult ( RESULT_CANCELED ) ; \n\tstartActivity ( register ) ; \n\t} \n"}, {"code": "private void registerExtraValidSubject ( String subject ) { \n\textraValidSubjects . add ( subject ) ; \n\trestoredStatements . addAll ( unknownSubjects . removeAll ( subject ) ) ; \n\t} \n"}, {"code": "public static String trimLine ( String line ) { \n\t$F1384 ( idx , line ) $F63871 ( idx , line ) $F123954 ( line ) } \n"}, {"code": "public double distance2 ( double p1 , double p2 ) { \n\treturn $F127638 ( p1 , p2 ) ; \n\t} \n"}, {"code": "public static void appendInstruction ( OFFlowMod . Builder fmb , OFInstruction inst ) { \n\tList < OFInstruction > newIl = new ArrayList < OFInstruction > $F72 ; \n\tList < OFInstruction > oldIl = fmb . getInstructions ( ) ; \n\tif ( oldIl != null ) { \n\t\tnewIl . addAll ( fmb . getInstructions ( ) ) ; \n\t\t} \n\tfor ( OFInstruction i : newIl ) { \n\t\tif ( i . getType ( ) == inst . getType ( ) ) $F106 ( newIl , i ) } \n\tnewIl . add ( inst ) ; \n\tfmb . setInstructions ( newIl ) ; \n\t} \n"}, {"code": "public $F13085 iterator $F72 $F16048 ( orderList ) "}, {"code": "private void verifyDomainsIsNotInUse ( StringSet domains ) { \n\tcheckForActiveTenantsUsingDomains ( domains ) ; \n\tcheckForVdcRolesUsingDomains ( domains ) ; \n\tcheckForTenantRolesUsingDomains ( domains ) ; \n\tcheckForUserGroupsUsingDomains ( domains ) ; \n\t} \n"}, {"code": "private Hashtable < IPoint , List < ICircle > > filter ( Hashtable < IPoint , ICircle [ ] > circleIntersections ) { \n\tHashtable < IPoint , List < ICircle > > real = new Hashtable < IPoint , List < ICircle > > $F72 ; \n\tfor ( IPoint pt : circleIntersections . keySet ( ) ) { \n\t\tICircle [ ] circs = circleIntersections . get ( pt ) ; \n\t\tfor ( $F21583 ( i , circs ) ) { \n\t\t\tfor ( $F169942 ( j , i , circs ) ) { \n\t\t\t\tIPoint [ ] pts = intersects ( circs [ i ] , circs [ j ] ) ; \n\t\t\t\tif ( pts != null ) { \n\t\t\t\t\tfor ( IPoint p : pts ) { \n\t\t\t\t\t\treport ( real , p , circs [ i ] , circs [ j ] ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn real ; \n\t} \n"}, {"code": "public void initWithoutJUnitForFixture ( Class fixture , Method method ) { \n\tthis . testClass = fixture ; \n\tthis . testMethodName = method . getName ( ) ; \n\t} \n"}, {"code": "$F3594 ( oredCriteria , orderByClause , distinct , _BOOL ) "}, {"code": "public long sigignore $F72 $F12907 ( Long , fields ) "}, {"code": "protected JavaType findSerializationType ( Annotated a , boolean useStaticTyping , JavaType declaredType ) { \n\t$F6969 serClass = _annotationIntrospector . findSerializationType ( a ) ; \n\tif ( serClass != null ) { \n\t\t$F6969 rawDeclared = declaredType . getRawClass ( ) ; \n\t\tif $F62123 ( serClass , rawDeclared ) { \n\t\t\tdeclaredType = declaredType . widenBy ( serClass ) ; \n\t\t\t} \n\t\telse { \n\t\t\tif $F80006 ( rawDeclared , serClass ) { \n\t\t\t\tthrow new IllegalArgumentException ( $F27322 ( a , serClass ) + rawDeclared . getName ( ) ) ; \n\t\t\t\t} \n\t\t\tdeclaredType = _config . constructSpecializedType ( declaredType , serClass ) ; \n\t\t\t} \n\t\tuseStaticTyping = _BOOL ; \n\t\t} \n\tJavaType secondary = BeanSerializerFactory . modifySecondaryTypesByAnnotation ( _config , a , declaredType ) ; \n\tif ( secondary != declaredType ) { \n\t\tuseStaticTyping = _BOOL ; \n\t\tdeclaredType = secondary ; \n\t\t} \n\tif ( ! useStaticTyping ) { \n\t\tJsonSerialize . Typing typing = _annotationIntrospector . findSerializationTyping ( a ) ; \n\t\tif ( typing != null ) { \n\t\t\tuseStaticTyping = ( typing == JsonSerialize . Typing . STATIC ) ; \n\t\t\t} \n\t\t} \n\treturn useStaticTyping ? declaredType : null ; \n\t} \n"}, {"code": "private static void convert ( AScene scene , InputStream in , OutputStream out ) throws IOException , DefException , ParseException { \n\tIndexUnit iu = JavaParser . parse ( in ) ; \n\textractScene ( iu , scene ) ; \n\ttry ( Writer w = new BufferedWriter ( new OutputStreamWriter ( out ) ) ) { \n\t\tIndexFileWriter . write ( scene , w ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F9340 $F15228 of ( K k1 , V v1 , K k2 , V v2 ) { \n\tMap map = of ( ) ; \n\tmap . put ( k1 , v1 ) ; \n\tmap . put ( k2 , v2 ) ; \n\treturn map ; \n\t} \n"}, {"code": "$F1 public void write $F53421 ( chr ) throws IOException $F4050 ( out , chr ) "}, {"code": "public boolean boundScroll $F72 { \n\tfloat curScroll = getStackScroll ( ) ; \n\tfloat newScroll = getBoundedStackScroll ( curScroll ) ; \n\tif ( Float . compare ( newScroll , curScroll ) != NUM00 ) $F9278 ( setStackScroll , newScroll , _BOOL ) return _BOOL ; \n\t} \n"}, {"code": "public static void load ( marytts . modules . synthesis . Voice maryVoice ) throws NoSuchPropertyException { \n\tif ( mary2freettsVoices == null ) mary2freettsVoices = new HashMap < marytts . modules . synthesis . Voice , com . sun . speech . freetts . Voice > $F72 ; \n\tif ( freetts2maryVoices == null ) freetts2maryVoices = new HashMap < com . sun . speech . freetts . Voice , marytts . modules . synthesis . Voice > $F72 ; \n\tif $F1710 ( mary2freettsVoices , maryVoice ) $F665 load ( maryVoice , createFreeTTSVoice ( maryVoice ) ) ; \n\t} \n"}, {"code": "public void append ( int key , double value ) { \n\t$F49491 ( mSize , key , mKeys , put , value ) int pos = mSize ; \n\tif ( pos >= mKeys . length ) { \n\t\t$F49493 ( n , ArrayUtils , pos ) $F4120 ( nkeys , n ) $F9662 ( nvalues , n ) $F7057 ( System , mKeys , nkeys ) $F7057 ( System , mValues , nvalues ) mKeys = nkeys ; \n\t\tmValues = nvalues ; \n\t\t} \n\tmKeys [ pos ] = key ; \n\tmValues [ pos ] = value ; \n\tmSize = pos + NUM00 ; \n\t} \n"}, {"code": "public synchronized void addIncrementalClassifierListener ( IncrementalClassifierListener cl ) $F207 ( m_incrementalClassifierListeners , cl ) "}, {"code": "public float readR4 $F72 throws $F3258 { \n\treturn Float . intBitsToFloat ( $F112407 ( readDWORD ) ) ; \n\t} \n"}, {"code": "public Collection engineGenerateCertificates ( InputStream inStream ) throws CertificateException { \n\t$F132633 cert ; \n\t$F19151 ( certs ) while $F2108 ( cert , engineGenerateCertificate , inStream ) $F207 ( certs , cert ) return certs ; \n\t} \n"}, {"code": "public static boolean filesExistOnDestButNotSrc ( Configuration conf , Path src , Path dest , Optional < PathFilter > filter ) throws IOException { \n\tSet < FileStatus > srcFileStatuses = getFileStatusesRecursive ( conf , src , filter ) ; \n\tSet < FileStatus > destFileStatuses = getFileStatusesRecursive ( conf , dest , filter ) ; \n\t$F12295 srcFileSizes = null ; \n\t$F12295 destFileSizes = null ; \n\ttry { \n\t\tsrcFileSizes = getRelPathToSizes ( src , srcFileStatuses ) ; \n\t\tdestFileSizes = getRelPathToSizes ( dest , destFileStatuses ) ; \n\t\t} \n\tcatch ( ArgumentException e ) $F19592 ( e ) for ( $F3465 ( file , destFileSizes ) ) { \n\t\tif $F15257 ( srcFileSizes , file ) { \n\t\t\tLOG . warn ( String . format ( NUM00 , file , dest , src ) ) ; \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected void convertOrder ( SqlSelect select , Blackboard bb , RelCollation collation , List < SqlNode > orderExprList , SqlNode offset , SqlNode fetch ) { \n\tif ( select . getOrderList ( ) == null || select . getOrderList ( ) . getList ( ) . isEmpty ( ) ) { \n\t\tassert collation . getFieldCollations ( ) . isEmpty ( ) ; \n\t\tif ( ( offset == null || ( ( SqlLiteral ) offset ) . bigDecimalValue ( ) . equals ( BigDecimal . ZERO ) ) && fetch == null ) $F932 } \n\tbb . setRoot ( LogicalSort . create ( bb . root , collation , offset == null ? null : convertExpression ( offset ) , fetch == null ? null : convertExpression ( fetch ) ) , _BOOL ) ; \n\tif ( $F3816 ( orderExprList ) && ! bb . top ) { \n\t\tfinal List < RexNode > $F204 ( exprs ) ; \n\t\tfinal RelDataType rowType = bb . root . getRowType ( ) ; \n\t\tfinal int fieldCount = rowType . getFieldCount ( ) - orderExprList . size ( ) ; \n\t\tfor ( $F119 ( i , fieldCount ) ) { \n\t\t\texprs . add ( rexBuilder . makeInputRef ( bb . root , i ) ) ; \n\t\t\t} \n\t\tbb . setRoot ( LogicalProject . create ( bb . root , exprs , rowType . getFieldNames ( ) . subList ( NUM00 , fieldCount ) ) , _BOOL ) ; \n\t\t} \n\t} \n"}, {"code": "public void tickBlock ( BlockPos pos ) { \n\tList < BlockPos > $F204 ( validCoords ) ; \n\tfor ( $F142929 ( xOffset , TICK_RANGE ) ) { \n\t\tfor ( $F142929 ( zOffset , TICK_RANGE ) ) { \n\t\t\tif ( xOffset == NUM00 && zOffset == NUM00 ) $F598 if ( isValidSwapPosition ( pos . add ( xOffset , NUM00 , zOffset ) ) ) validCoords . add ( pos . add ( xOffset , NUM00 , zOffset ) ) ; \n\t\t\t} \n\t\t} \n\tif ( $F1030 ( validCoords ) && ! world . isRemote ) { \n\t\tBlockPos $F30353 ( toSwap , validCoords , rand ) ; \n\t\tworld . setBlockState ( toSwap , stateToSet , NUM00 | NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public synchronized int updatePurchase ( String orderId , String productId , PurchaseState purchaseState , long purchaseTime , String developerPayload ) { \n\tinsertOrder ( orderId , productId , purchaseState , purchaseTime , developerPayload ) ; \n\tCursor cursor = mDb . query ( PURCHASE_HISTORY_TABLE_NAME , HISTORY_COLUMNS , HISTORY_PRODUCT_ID_COL + NUM00 , $F8640 ( productId ) , null , null , null , null ) ; \n\t$F1084 ( cursor ) int quantity = NUM00 ; \n\ttry { \n\t\twhile $F12260 ( cursor ) { \n\t\t\t$F24632 ( stateIndex , cursor ) $F2544 ( state , PurchaseState , stateIndex ) if ( state == PurchaseState . PURCHASED || state == PurchaseState . REFUNDED ) { \n\t\t\t\tquantity += NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\tupdatePurchasedItem ( productId , quantity ) ; \n\t\t} \n\t$F14364 ( cursor ) return quantity ; \n\t} \n"}, {"code": "private void configureMessageLabel ( JLabel label ) { \n\tColor color = ( Color ) DefaultLookup . get ( optionPane , this , NUM00 ) ; \n\tif ( color != null ) { \n\t\tlabel . setForeground ( color ) ; \n\t\t} \n\tFont messageFont = ( Font ) DefaultLookup . get ( optionPane , this , NUM00 ) ; \n\tif ( messageFont != null ) { \n\t\tlabel . setFont ( messageFont ) ; \n\t\t} \n\t} \n"}, {"code": "public void removeAllLimitLines $F72 $F9096 ( mLimitLines ) "}, {"code": "$F65837 ( node , count , capacity , _BOOL , f , first , last , notEmpty ) "}, {"code": "default Filterable $F4203 removeAll ( final Stream $F10049 stream ) { \n\tfinal $F28904 set = stream . collect ( Collectors . toSet ( ) ) ; \n\treturn filterNot ( null ) ; \n\t} \n"}, {"code": "public void drawLine ( $F106590 pts , $F2100 ( style ) ) { \n\tColor penColor = mxUtils . getStyleStrokeColor ( style , Color . BLACK ) ; \n\tfloat penWidth = mxUtils . getStyleStrokeWidth ( style , $F77473 ) ; \n\tif ( penColor != null && penWidth > NUM00 ) { \n\t\tString shape = mxUtils . getString ( style , mxConstants . STYLE_SHAPE , NUM00 ) ; \n\t\tif ( shape . equals ( mxConstants . SHAPE_ARROW ) ) { \n\t\t\tsetStroke ( penWidth , style ) ; \n\t\t\tmxPoint p0 = pts . get ( NUM00 ) ; \n\t\t\tmxPoint $F7662 ( pe , pts ) ; \n\t\t\tRectangle bounds = new Rectangle ( p0 . getPoint ( ) ) ; \n\t\t\tbounds . add ( pe . getPoint ( ) ) ; \n\t\t\tColor fillColor = mxUtils . getStyleFillColor ( style ) ; \n\t\t\tPaint fillPaint = getFillPaint ( bounds , fillColor , style ) ; \n\t\t\tboolean shadow = mxUtils . isTrue ( style , mxConstants . STYLE_SHADOW , _BOOL ) ; \n\t\t\tdrawArrow ( pts , fillColor , fillPaint , penColor , shadow ) ; \n\t\t\t} \n\t\telse { \n\t\t\tObject startMarker = style . get ( mxConstants . STYLE_STARTARROW ) ; \n\t\t\tObject endMarker = style . get ( mxConstants . STYLE_ENDARROW ) ; \n\t\t\tfloat startSize = ( float ) ( mxUtils . getFloat ( style , mxConstants . STYLE_STARTSIZE , mxConstants . DEFAULT_MARKERSIZE ) ) ; \n\t\t\tfloat endSize = ( float ) ( mxUtils . getFloat ( style , mxConstants . STYLE_ENDSIZE , mxConstants . DEFAULT_MARKERSIZE ) ) ; \n\t\t\tboolean rounded = mxUtils . isTrue ( style , mxConstants . STYLE_ROUNDED , _BOOL ) ; \n\t\t\tdrawConnector ( pts , penWidth , penColor , startMarker , startSize , endMarker , endSize , rounded , style ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "private static MeteringRectangle [ ] regionsForNormalizedCoord ( float nx , float ny , float fraction , final Rect cropRegion , int sensorOrientation ) { \n\tint minCropEdge = Math . min ( $F78956 ( cropRegion ) ) ; \n\tint halfSideLength = ( int ) ( NUM00 * fraction * minCropEdge ) ; \n\tPointF nsc = CameraUtil . normalizedSensorCoordsForNormalizedDisplayCoords ( nx , ny , sensorOrientation ) ; \n\tint xCenterSensor = ( int ) ( cropRegion . left + nsc . x * cropRegion . width ( ) ) ; \n\tint yCenterSensor = ( int ) ( cropRegion . top + nsc . y * cropRegion . height ( ) ) ; \n\tRect meteringRegion = new Rect ( xCenterSensor - halfSideLength , yCenterSensor - halfSideLength , xCenterSensor + halfSideLength , yCenterSensor + halfSideLength ) ; \n\tmeteringRegion . left = CameraUtil . clamp ( meteringRegion . left , cropRegion . left , cropRegion . right ) ; \n\tmeteringRegion . top = CameraUtil . clamp ( meteringRegion . top , cropRegion . top , cropRegion . bottom ) ; \n\tmeteringRegion . right = CameraUtil . clamp ( meteringRegion . right , cropRegion . left , cropRegion . right ) ; \n\tmeteringRegion . bottom = CameraUtil . clamp ( meteringRegion . bottom , cropRegion . top , cropRegion . bottom ) ; \n\treturn new MeteringRectangle [ ] { \n\t\tnew MeteringRectangle ( meteringRegion , CAMERA2_REGION_WEIGHT ) } \n\t; \n\t} \n"}, {"code": "$F1 public void flush $F72 throws IOException { \n\tflushBuffer ( ) ; \n\t$F1206 ( _outputStream ) } \n"}, {"code": "public Vector ( double comp [ ] ) throws NegativeArraySizeException { \n\tint n = comp . length ; \n\tif ( n <= NUM00 ) throw new NegativeArraySizeException $F580 ; \n\t$F10254 ( components , n ) $F135 ( System , comp , components , n ) } \n"}, {"code": "$F34101 ( aname , outerName , innerName , attr_access , name , this , super ) "}, {"code": "public long lonToPixel ( double lon ) { \n\treturn ( long ) ( ( lon + NUM00 ) / NUM00 * Math . pow ( NUM00 , zoom ) * NUM00 ) ; \n\t} \n"}, {"code": "public static boolean worldFileValuesAppearGeographic ( AVList values ) { \n\tdouble xLocation ; \n\tdouble yLocation ; \n\tdouble xPixelSize ; \n\tdouble yPixelSize ; \n\tObject o = values . getValue ( WORLD_FILE_X_LOCATION ) ; \n\tif ( o != null && o instanceof Double ) xLocation = ( Double ) o ; \n\telse return _BOOL ; \n\to = values . getValue ( WORLD_FILE_Y_LOCATION ) ; \n\tif ( o != null && o instanceof Double ) yLocation = ( Double ) o ; \n\telse return _BOOL ; \n\to = values . getValue ( WORLD_FILE_X_PIXEL_SIZE ) ; \n\tif ( o != null && o instanceof Double ) xPixelSize = ( Double ) o ; \n\telse return _BOOL ; \n\to = values . getValue ( WORLD_FILE_Y_PIXEL_SIZE ) ; \n\tif ( o != null && o instanceof Double ) yPixelSize = ( Double ) o ; \n\telse return _BOOL ; \n\treturn ( Angle . isValidLongitude ( xPixelSize ) && Angle . isValidLatitude ( yPixelSize ) && Angle . isValidLongitude ( xLocation ) && Angle . isValidLatitude ( yLocation ) ) ; \n\t} \n"}, {"code": "public void storeInRegister ( int registerNumber ) throws IOException { \n\tprint ( NUM00 , new String [ ] { \n\t\tInteger . toString ( registerNumber ) } \n\t) ; \n\t} \n"}, {"code": "public void remove ( SessionID sessionID ) $F106 ( remoteSessionSet , sessionID ) "}, {"code": "$F1 public synchronized String toString $F72 { \n\t$F40722 ( elementCount ) int length = elementCount - NUM00 ; \n\t$F40726 ( buffer , elementCount ) $F84 ( buffer ) for ( $F119 ( i , length ) ) { \n\t\t$F40728 ( elementData , i , this , buffer ) $F84 ( buffer ) } \n\t$F40728 ( elementData , length , this , buffer ) $F84 ( buffer ) $F92 ( buffer ) } \n"}, {"code": "public Iterator < AbstractPage > childIterator ( final boolean dirtyNodesOnly ) { \n\tif ( dirtyNodesOnly ) { \n\t\treturn new DirtyChildIterator ( this ) ; \n\t\t} \n\telse { \n\t\treturn new ChildIterator $F72 ; \n\t\t} \n\t} \n"}, {"code": "public void enable $F72 throws IOException { \n\tsynchronized ( optOutLock ) { \n\t\tif ( isOptOut ( ) ) { \n\t\t\t$F113827 ( configuration , _BOOL ) configuration . save ( configurationFile ) ; \n\t\t\t} \n\t\t$F113304 ( task , start ) } \n\t} \n"}, {"code": "public HMACT64 $F97 ( key ) { \n\tsuper ( NUM00 ) ; \n\tint length = Math . min ( key . length , BLOCK_LENGTH ) ; \n\tfor ( $F119 ( i , length ) ) { \n\t\tipad [ i ] = ( byte ) ( key [ i ] ^ IPAD ) ; \n\t\topad [ i ] = ( byte ) ( key [ i ] ^ OPAD ) ; \n\t\t} \n\tfor ( int i = length ; \n\ti < BLOCK_LENGTH ; \n\ti ++ ) { \n\t\tipad [ i ] = IPAD ; \n\t\topad [ i ] = OPAD ; \n\t\t} \n\ttry $F14527 ( md5 , MessageDigest ) catch ( Exception ex ) { \n\t\tthrow new IllegalStateException $F1783 ( ex ) ; \n\t\t} \n\tengineReset ( ) ; \n\t} \n"}, {"code": "public boolean startsWith ( String string ) { \n\t$F397 ( string , _BOOL ) $F1749 ( strlen , string ) if ( _length < strlen ) return _BOOL ; \n\t$F1469 buffer = _buffer ; \n\tint offset = _offset ; \n\twhile ( -- strlen >= NUM00 ) { \n\t\tif ( buffer [ offset + strlen ] != string . charAt ( strlen ) ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void writeRawBytesInternal ( final ByteBuffer value ) throws IOException { \n\t$F45850 ( length , value ) if ( limit - position >= length ) { \n\t\tvalue . get ( buffer , position , length ) ; \n\t\tposition += length ; \n\t\ttotalBytesWritten += length ; \n\t\t} \n\telse { \n\t\tfinal int bytesWritten = limit - position ; \n\t\tvalue . get ( buffer , position , bytesWritten ) ; \n\t\tlength -= bytesWritten ; \n\t\tposition = limit ; \n\t\ttotalBytesWritten += bytesWritten ; \n\t\trefreshBuffer ( ) ; \n\t\twhile ( length > limit ) { \n\t\t\t$F37570 ( value , buffer , limit ) $F11584 ( output , buffer , limit ) length -= limit ; \n\t\t\ttotalBytesWritten += limit ; \n\t\t\t} \n\t\t$F37570 ( value , buffer , length ) position = length ; \n\t\ttotalBytesWritten += length ; \n\t\t} \n\t} \n"}, {"code": "public boolean isSrcClass ( SootClass clz ) { \n\treturn $F40656 ( srcClasses , clz ) ; \n\t} \n"}, {"code": "private void processLDIF ( Connection conn , String path ) throws UpgradeException { \n\tChangeRecordReader reader = null ; \n\ttry { \n\t\t$F19232 ( DEBUG , path ) $F2539 $F143413 ( tags ) ; \n\t\t$F545 ( tags , baseDN ) $F16824 ( tags ) String content = AMSetupServlet . readFile ( path ) ; \n\t\tString tagSwapped = StringUtils . tagSwap ( content , tags ) ; \n\t\treader = new LDIFChangeRecordReader ( new ByteArrayInputStream ( $F22470 ( tagSwapped , Charset ) ) ) ; \n\t\tChangeRecordWriter writer = new ConnectionChangeRecordWriter ( conn ) ; \n\t\twhile $F2921 ( reader ) { \n\t\t\twriter . writeChangeRecord ( reader . readChangeRecord ( ) ) ; \n\t\t\t} \n\t\t} \n\tcatch ( IOException ioe ) { \n\t\t$F30202 ( DEBUG , path , ioe ) throw new UpgradeException ( ioe ) ; \n\t\t} \n\tfinally { \n\t\tIOUtils . closeIfNotNull ( reader ) ; \n\t\t} \n\t} \n"}, {"code": "private void printProgress $F46828 ( row , rowFrom , rowTill ) { \n\tlong rowsProcessed = row + chunkSize - rowFrom ; \n\tif ( rowsProcessed > ( rowTill - rowFrom ) ) rowsProcessed = ( rowTill - rowFrom ) ; \n\tprint ( String . format ( NUM00 , ( int ) ( ( $F365047 ( rowsProcessed ) / $F250385 ( rowTill , rowFrom ) ) * NUM00 ) ) ) ; \n\t} \n"}, {"code": "void postRemoteReleaseLock ( Object objectName ) throws InterruptedException { \n\tif $F39897 ( acquireDestroyReadLock ) $F932 try { \n\t\tcheckDestroyed ( ) ; \n\t\tdrainPermittedRequests ( ) ; \n\t\tgrantLock ( objectName ) ; \n\t\t} \n\tcatch ( LockServiceDestroyedException e ) $F845 catch ( LockGrantorDestroyedException e ) $F845 $F49978 ( releaseDestroyReadLock ) } \n"}, {"code": "public final ArrayList < PositionRecord > loadPositions ( final int session , final Double minLat , final Double maxLat , final Double minLon , final Double maxLon ) { \n\tfinal ArrayList < PositionRecord > $F204 ( positions ) ; \n\tString selection = Schema . COL_SESSION_ID + NUM00 ; \n\tCursor cursor = null ; \n\t$F36422 ( selectionArgs ) if ( minLat != null & maxLat != null && minLon != null && maxLon != null ) { \n\t\t$F9404 ( selectionArgs ) $F269561 ( selectionArgs , String , session ) $F269561 ( selectionArgs , String , minLat ) $F269561 ( selectionArgs , String , maxLat ) $F269561 ( selectionArgs , String , minLon ) $F269561 ( selectionArgs , String , maxLon ) selection += NUM00 + Schema . COL_LATITUDE + NUM00 + Schema . COL_LATITUDE + NUM00 + Schema . COL_LONGITUDE + NUM00 + Schema . COL_LONGITUDE + NUM00 ; \n\t\tcursor = contentResolver . query ( ContentProvider . CONTENT_URI_POSITION , null , selection , $F16104 ( selectionArgs ) , Schema . COL_TIMESTAMP ) ; \n\t\t} \n\telse { \n\t\t$F27746 ( Log , TAG ) cursor = contentResolver . query ( ContentProvider . CONTENT_URI_POSITION , null , null , null , Schema . COL_TIMESTAMP ) ; \n\t\t} \n\twhile $F12260 ( cursor ) $F3762 ( positions , positionFromCursor , cursor ) $F59 ( cursor ) return positions ; \n\t} \n"}, {"code": "public static CheckBox createToggle ( String text , Image icon ) { \n\tCheckBox cb = new CheckBox ( text , icon ) ; \n\tcb . setToggle ( _BOOL ) ; \n\treturn cb ; \n\t} \n"}, {"code": "public long addCompletedBatch ( RequestBatch requestBatch ) { \n\tlong completedBatchId = insertBatchAsCompleted ( requestBatch ) ; \n\tfor ( Request request : requestBatch . getRequests ( ) ) { \n\t\trequest . setBatchId ( completedBatchId ) ; \n\t\tFile file = new File ( request . getDestinationPath ( ) ) ; \n\t\tlong length = file . exists ( ) ? file . length ( ) : NUM00 ; \n\t\tinsertRequestAsCompletedDownload ( request . getDestinationPath ( ) , length , request ) ; \n\t\t} \n\treturn completedBatchId ; \n\t} \n"}, {"code": "@ TargetApi ( Build . VERSION_CODES . JELLY_BEAN ) private void dequeueOutputBuffer ( MediaCodec codec , $F30903 outputBuffers , int index , MediaCodec . BufferInfo info ) { \n\tif ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN ) { \n\t\tByteBuffer buffer = outputBuffers [ index ] ; \n\t\tLog . i ( NUM00 + info . size + NUM00 + buffer . remaining ( ) ) ; \n\t\tif ( info . size <= buffer . remaining ( ) ) { \n\t\t\tfinal $F96 bufferCopied = new byte [ info . size ] ; \n\t\t\tbuffer . get ( bufferCopied ) ; \n\t\t\tcodec . releaseOutputBuffer ( index , _BOOL ) ; \n\t\t\taddEncoded ( bufferCopied ) ; \n\t\t\tif ( Log . DEBUG ) { \n\t\t\t\tAudioUtils . showSomeBytes ( NUM00 , bufferCopied ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\t$F294495 ( Log ) codec . releaseOutputBuffer ( index , _BOOL ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static DefaultJobDefinition retryableFixedDelayJobDefinition ( final String jobType , final String jobName , final String description , final Duration fixedDelay , final int restarts , final int retries , final Optional < Duration > retryDelay , final Optional < Duration > maxAge ) { \n\treturn new DefaultJobDefinition ( jobType , jobName , description , maxAge , Optional . of ( fixedDelay ) , Optional . empty ( ) , restarts , retries , retryDelay ) ; \n\t} \n"}, {"code": "$F37100 ( fieldId , MESSAGE ) "}, {"code": "public static void putLong ( long addr , long val ) { \n\tif ( UNALIGNED ) UNSAFE . putLong ( addr , val ) ; \n\telse putLongByByte ( addr , val , BIG_ENDIAN ) ; \n\t} \n"}, {"code": "public static File createMinimalSplit $F25022 ( inputFolder , numFolds , numAvailableJCas , isSequence ) throws Exception { \n\t$F109797 ( outputFolder , inputFolder ) int splitNum = ( int ) Math . ceil ( numFolds / ( double ) numAvailableJCas ) ; \n\tCollectionReaderDescription createReader = CollectionReaderFactory . createReaderDescription ( BinaryCasReader . class , BinaryCasReader . PARAM_SOURCE_LOCATION , inputFolder , BinaryCasReader . PARAM_PATTERNS , NUM00 ) ; \n\tAnalysisEngineDescription multiplier = AnalysisEngineFactory . createEngineDescription ( FoldClassificationUnitCasMultiplier . class , FoldClassificationUnitCasMultiplier . PARAM_REQUESTED_SPLITS , splitNum , FoldClassificationUnitCasMultiplier . PARAM_USE_SEQUENCES , isSequence ) ; \n\tAnalysisEngineDescription xmiWriter = AnalysisEngineFactory . createEngineDescription ( BinaryCasWriter . class , BinaryCasWriter . PARAM_TARGET_LOCATION , outputFolder . getAbsolutePath ( ) , BinaryCasWriter . PARAM_FORMAT , NUM00 ) ; \n\tAnalysisEngineDescription both = AnalysisEngineFactory . createEngineDescription ( multiplier , xmiWriter ) ; \n\tSimplePipeline . runPipeline ( createReader , both ) ; \n\tisNumberOfCasCreatedLargerEqualNumFolds ( outputFolder , numFolds ) ; \n\treturn outputFolder ; \n\t} \n"}, {"code": "public org . w3c . dom . Element signXML ( org . w3c . dom . Document doc , $F9738 ( certAlias ) ) throws XMLSignatureException $F25228 ( signXML , doc , certAlias ) "}, {"code": "public boolean displayPopup $F72 { \n\t$F397 ( m_popupClass , _BOOL ) try { \n\t\tWindow win = SwingUtilities . getWindowAncestor ( this ) ; \n\t\tCFieldPopup popup = null ; \n\t\tif ( win instanceof Dialog ) { \n\t\t\t$F43121 constructor = m_popupClass . getConstructor ( new $F6969 [ ] { \n\t\t\t\tDialog . class , $F10062 , $F61970 } \n\t\t\t) ; \n\t\t\tpopup = ( CFieldPopup ) constructor . newInstance ( new Object [ ] { \n\t\t\t\t( Dialog ) win , m_title , new Boolean ( _BOOL ) } \n\t\t\t) ; \n\t\t\t} \n\t\telse if ( win instanceof Frame ) { \n\t\t\t$F43121 constructor = m_popupClass . getConstructor ( new Class [ ] { \n\t\t\t\tFrame . class , $F10062 , $F61970 } \n\t\t\t) ; \n\t\t\tpopup = ( CFieldPopup ) constructor . newInstance ( new Object [ ] { \n\t\t\t\t( Frame ) win , m_title , new Boolean ( _BOOL ) } \n\t\t\t) ; \n\t\t\t} \n\t\t$F397 ( popup , _BOOL ) popup . setValue ( m_editor . getItem ( ) ) ; \n\t\tpopup . setFormat ( m_editor . getFormat ( ) ) ; \n\t\t$F114746 ( popup ) m_editor . setItem ( popup . getValue ( ) ) ; \n\t\tpopup = null ; \n\t\t} \n\t$F114671 ( notifyUser , e ) return _BOOL ; \n\t} \n"}, {"code": "public AbstractSdfWriter ( final PrereadType prereadType , final boolean hasQuality , boolean hasNames , boolean compressed , final SequenceType type ) { \n\tmPrereadType = prereadType ; \n\tmPrereadArm = PrereadArm . UNKNOWN ; \n\tmSdfId = new SdfId $F72 ; \n\tmNameHandler = new SequenceNameHandler $F72 ; \n\tmSequenceType = type ; \n\tmFirstValid = mSequenceType . firstValid ( ) ; \n\tmResidueCounts = new long [ mSequenceType . numberKnownCodes ( ) + mSequenceType . firstValid ( ) ] ; \n\t$F11125 ( mNHistogram , MAX_HISTOGRAM ) $F11125 ( mPosHistogram , MAX_HISTOGRAM ) $F10254 ( mQSAveragePerPos , MAX_HISTOGRAM ) $F11125 ( mPositionCounts , MAX_HISTOGRAM ) mGlobalQSAverage = NUM00 ; \n\tmDataHashFunction = new PrereadHashFunction $F72 ; \n\tmQualityHashFunction = new PrereadHashFunction $F72 ; \n\tmNameHashFunction = new PrereadHashFunction $F72 ; \n\tmNameSuffixHashFunction = new PrereadHashFunction $F72 ; \n\tmHasQuality = hasQuality ; \n\tmHasNames = hasNames ; \n\tmCompressed = compressed ; \n\tmSeqDataChecksum = new CRC32 $F72 ; \n\tmQualDataChecksum = new CRC32 $F72 ; \n\t} \n"}, {"code": "FiringPlan guessBestFiringPlanUnderHeat ( Entity shooter , $F5466 EntityState shooterState , Targetable target , $F5466 EntityState targetState , int maxHeat , IGame game ) { \n\t$F17370 ( maxHeat ) FiringPlan alphaStrike = guessFullFiringPlan ( shooter , shooterState , target , targetState , game ) ; \n\tif ( alphaStrike . getHeat ( ) <= maxHeat && ! ( shooter instanceof Infantry ) && ! ( shooter instanceof BattleArmor ) ) { \n\t\treturn alphaStrike ; \n\t\t} \n\tFiringPlan heatPlans [ ] = calcFiringPlansUnderHeat ( shooter , alphaStrike ) ; \n\tArrays . sort ( heatPlans ) ; \n\tif $F3305 ( heatPlans ) $F3262 ( heatPlans ) else { \n\t\treturn new FiringPlan ( target ) ; \n\t\t} \n\t} \n"}, {"code": "public static VolumeGroupRestRep map ( VolumeGroup from ) { \n\t$F1338 ( from ) VolumeGroupRestRep rep = new VolumeGroupRestRep $F72 ; \n\tmapDataObjectFields ( from , rep ) ; \n\t$F100328 ( rep , from ) rep . setRoles ( from . getRoles ( ) ) ; \n\trep . setParent ( toRelatedResource ( ResourceTypeEnum . VOLUME_GROUP , from . getParent ( ) ) ) ; \n\trep . setMigrationGroupBy ( from . getMigrationGroupBy ( ) ) ; \n\trep . setMigrationType ( from . getMigrationType ( ) ) ; \n\treturn rep ; \n\t} \n"}, {"code": "public int postFiles ( $F806 args , int startIndexInArgs , OutputStream out , String type ) { \n\treset ( ) ; \n\tint filesPosted = NUM00 ; \n\tfor ( $F9958 ( j , startIndexInArgs , args ) ) { \n\t\tFile $F170883 ( srcFile , args , j ) ; \n\t\tif ( srcFile . isDirectory ( ) && srcFile . canRead ( ) ) { \n\t\t\tfilesPosted += postDirectory ( srcFile , out , type ) ; \n\t\t\t} \n\t\telse if ( srcFile . isFile ( ) && srcFile . canRead ( ) ) { \n\t\t\tfilesPosted += postFiles ( new File [ ] { \n\t\t\t\tsrcFile } \n\t\t\t, out , type ) ; \n\t\t\t} \n\t\telse { \n\t\t\t$F4924 ( parent , srcFile ) if ( parent == null ) $F263964 ( parent ) $F20605 ( fileGlob , srcFile ) GlobFileFilter ff = new GlobFileFilter ( fileGlob , _BOOL ) ; \n\t\t\t$F5237 files = parent . listFiles ( ff ) ; \n\t\t\tif $F12414 ( files ) { \n\t\t\t\twarn ( NUM00 + srcFile ) ; \n\t\t\t\t$F598 } \n\t\t\tfilesPosted += postFiles ( parent . listFiles ( ff ) , out , type ) ; \n\t\t\t} \n\t\t} \n\treturn filesPosted ; \n\t} \n"}, {"code": "$F1 public final String toString $F72 { \n\tif ( stringRep == null ) { \n\t\t$F83 ( buffer ) buffer . append ( this . name ) ; \n\t\t$F84 ( buffer ) buffer . append ( Integer . toString ( this . defaultPort ) ) ; \n\t\t$F6947 ( stringRep , buffer ) } \n\treturn stringRep ; \n\t} \n"}, {"code": "public void clearSearchable $F72 $F9096 ( searchables ) "}, {"code": "public void addActionListener ( ActionListener newListener ) $F207 ( m_listeners , newListener ) "}, {"code": "$F1309 public ShapelessRecipe addIngredient ( int count , Material ingredient , int rawdata ) { \n\tValidate . isTrue ( ingredients . size ( ) + count <= NUM00 , NUM00 ) ; \n\tif ( rawdata == - NUM00 ) $F7984 ( rawdata , Short ) while ( count -- > NUM00 ) { \n\t\tingredients . add ( new ItemStack ( ingredient , NUM00 , ( short ) rawdata ) ) ; \n\t\t} \n\treturn this ; \n\t} \n"}, {"code": "$F1017 ( request , container , mRequest , mContainers ) "}, {"code": "public String order $F72 { \n\treturn $F20 ( mOrderBy ) ? mOrderBy . toString ( ) : null ; \n\t} \n"}, {"code": "static AxesWalker findClone ( AxesWalker key , Vector cloneList ) { \n\tif ( null != cloneList ) { \n\t\t$F2199 ( n , cloneList ) for ( $F6225 ( i , n ) ) { \n\t\t\tif ( key == cloneList . elementAt ( i ) ) return ( AxesWalker ) cloneList . elementAt ( i + NUM00 ) ; \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public static $F96 encodingToBytes $F2236 ( str , encoding ) { \n\t$F1338 ( str ) try { \n\t\treturn str . getBytes ( encoding ) ; \n\t\t} \n\tcatch ( final UnsupportedEncodingException e ) { \n\t\tthrow new Error ( encoding + NUM00 + e ) ; \n\t\t} \n\t} \n"}, {"code": "public static boolean looksLikeABGRepeat ( String val ) { \n\treturn BACKGROUND_REPEATS . indexOf ( val ) >= NUM00 ; \n\t} \n"}, {"code": "public void before $F72 throws Throwable { \n\tif ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . M ) { \n\t\tProcessBuilder processBuilder = new ProcessBuilder $F72 ; \n\t\tprocessBuilder . command ( NUM00 , NUM00 ) ; \n\t\tprocessBuilder . redirectErrorStream ( ) ; \n\t\t$F111135 ( process , processBuilder ) $F84402 ( process ) if ( process . exitValue ( ) != NUM00 ) { \n\t\t\tLog . e ( LOG_TAG , NUM00 + process . exitValue ( ) ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void addMeta ( char meta , String replacement ) { \n\tmetaCharacterSet . set ( meta ) ; \n\treplacementMap . put ( new String ( new char [ ] { \n\t\tmeta } \n\t) , replacement ) ; \n\t} \n"}, {"code": "private Matches lookupDo ( Template tmpl , int maxMatches ) { \n\t$F30465 ( maxMatches ) int totalMatches = NUM00 ; \n\tArrayList matches = null ; \n\tItemIter iter = matchingItems ( tmpl ) ; \n\tif ( maxMatches > NUM00 || iter . dupsPossible ) $F13241 ( matches ) if ( iter . dupsPossible ) { \n\t\twhile $F2921 ( iter ) { \n\t\t\tItem item = iter . next ( ) ; \n\t\t\t$F24127 ( matches , item ) } \n\t\t$F8935 ( totalMatches , matches ) if ( maxMatches > NUM00 ) { \n\t\t\tfor ( $F2198 ( i , matches ) ; \n\t\t\t-- i >= maxMatches ; \n\t\t\t) matches . remove ( i ) ; \n\t\t\tfor ( $F335206 ( i , matches ) ) { \n\t\t\t\tmatches . set ( i , copyItem ( ( Item ) matches . get ( i ) ) ) ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tmatches = null ; \n\t\t\t} \n\t\t} \n\telse { \n\t\twhile $F2921 ( iter ) { \n\t\t\tItem item = iter . next ( ) ; \n\t\t\ttotalMatches ++ ; \n\t\t\tif ( -- maxMatches >= NUM00 ) $F3761 ( matches , copyItem , item ) } \n\t\t} \n\treturn new Matches ( matches , totalMatches ) ; \n\t} \n"}, {"code": "public static List < History > findHistoryByJob ( EntityManager em , JPAEntity job , BigInteger limit ) { \n\trequireArgument ( em != null , NUM00 ) ; \n\trequireArgument ( job != null , NUM00 ) ; \n\tTypedQuery < History > query = em . createNamedQuery ( NUM00 , History . class ) ; \n\tif ( limit != null ) { \n\t\tquery . setMaxResults ( limit . intValue ( ) ) ; \n\t\t} \n\ttry { \n\t\t$F155222 ( query , job ) $F155223 ( query ) } \n\tcatch ( NoResultException ex ) { \n\t\treturn new ArrayList < History > $F989 ; \n\t\t} \n\t} \n"}, {"code": "protected Character isWFXMLChar ( String chardata ) { \n\tCharacter refInvalidChar ; \n\tif ( chardata == null || $F1277 ( chardata ) ) $F1337 $F7782 ( dataarray , chardata ) int datalength = dataarray . length ; \n\tif ( fIsXMLVersion11 ) { \n\t\tint i = NUM00 ; \n\t\twhile ( i < datalength ) { \n\t\t\tif ( XML11Char . isXML11Invalid ( dataarray [ i ++ ] ) ) { \n\t\t\t\tchar ch = dataarray [ i - NUM00 ] ; \n\t\t\t\t$F121844 ( XMLChar , ch , i , datalength , ch2 , dataarray ) refInvalidChar = new Character ( ch ) ; \n\t\t\t\treturn refInvalidChar ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\tint i = NUM00 ; \n\t\twhile ( i < datalength ) { \n\t\t\tif ( XMLChar . isInvalid ( dataarray [ i ++ ] ) ) { \n\t\t\t\tchar ch = dataarray [ i - NUM00 ] ; \n\t\t\t\t$F121844 ( XMLChar , ch , i , datalength , ch2 , dataarray ) refInvalidChar = new Character ( ch ) ; \n\t\t\t\treturn refInvalidChar ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public static String quote ( char ch ) { \n\tswitch ( ch ) { \n\t\t$F12596 $F12596 $F12596 $F12596 $F12596 $F12596 $F12596 $F12596 $F1267 return ( isPrintableAscii ( ch ) ) ? String . valueOf ( ch ) : String . format ( NUM00 , ( int ) ch ) ; \n\t\t} \n\t} \n"}, {"code": "private void updatePendingNodes ( final int newLandmarkIndex , final RouterPriorityQueue $F6869 pendingNodes ) { \n\tfinal $F31488 $F204 ( newEstRemTravCosts ) ; \n\tfinal $F27878 $F204 ( nodesToBeUpdated ) ; \n\tfinal InternalLandmarkData landmarkData = new InternalLandmarkData $F72 ; \n\tfor ( Node node : pendingNodes ) { \n\t\tfinal AStarNodeData role = getData ( node ) ; \n\t\tfinal PreProcessLandmarks . LandmarksData ppRole = preprocess . getNodeData ( node ) ; \n\t\tlandmarkData . setDelegate ( ppRole ) ; \n\t\tfinal double newEstRemTravCost = estimateRemainingTravelCost ( landmarkData , newLandmarkIndex ) ; \n\t\tif ( newEstRemTravCost > role . getExpectedRemainingCost ( ) ) $F30090 ( nodesToBeUpdated , node , newEstRemTravCosts , newEstRemTravCost ) } \n\tfor ( Node node : nodesToBeUpdated ) $F106 ( pendingNodes , node ) for ( $F2277 ( i , nodesToBeUpdated ) ) { \n\t\tfinal Node node = nodesToBeUpdated . get ( i ) ; \n\t\tfinal AStarNodeData data = getData ( node ) ; \n\t\tdata . setExpectedRemainingCost ( newEstRemTravCosts . get ( i ) ) ; \n\t\t$F142564 ( pendingNodes , node , getPriority , data ) } \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\t$F280 ( buff ) if ( m_correlations == null ) $F86 ( buff ) else { \n\t\t$F84 ( buff ) if $F316063 ( m_detailedOutput , m_detailedOutputBuff ) $F20352 ( buff , m_detailedOutputBuff ) } \n\t$F92 ( buff ) } \n"}, {"code": "private void drawOverflowIndicator ( final Graphics g , int maxX ) { \n\tint width = NUM00 ; \n\tint height = NUM00 ; \n\tint xOffset = NUM00 ; \n\tint stepSize = width / NUM00 ; \n\tint dotSize = NUM00 ; \n\tint x = maxX - width - xOffset ; \n\tint y = button . getSize ( ) . height - height ; \n\tg . setColor ( LIGHTER_GRAY ) ; \n\tg . fillRect ( x , y , width , width ) ; \n\tg . setColor ( Color . GRAY ) ; \n\tg . drawRoundRect ( x , y , width , width , NUM00 , NUM00 ) ; \n\t$F339 ( g , Color ) g . fillOval ( x + stepSize , y + NUM00 , dotSize , dotSize ) ; \n\tg . fillOval ( x + stepSize * NUM00 , y + NUM00 , dotSize , dotSize ) ; \n\tg . fillOval ( x + stepSize * NUM00 , y + NUM00 , dotSize , dotSize ) ; \n\t$F355 ( g ) } \n"}, {"code": "public void writeLine ( long time , $F5415 column ) { \n\t$F4074 ( str , Long , time ) for ( $F9808 ( i , column ) ) { \n\t\tstr += NUM00 + column [ i ] ; \n\t\t} \n\twriter . println ( str ) ; \n\t} \n"}, {"code": "public static boolean isPEM ( InputStream is ) { \n\ttry { \n\t\tString startPEM = NUM00 ; \n\t\tint headerLength = NUM00 ; \n\t\t$F2175 ( preamble , headerLength ) if ( is . read ( preamble , NUM00 , headerLength ) > NUM00 ) { \n\t\t\t$F605 ( startArray , preamble ) $F112225 ( startArray , startPEM ) } \n\t\treturn _BOOL ; \n\t\t} \n\tcatch ( Exception e ) { \n\t\t$F148698 } \n\t} \n"}, {"code": "public CloseListener ( Object resource ) { \n\t_resource = resource ; \n\t} \n"}, {"code": "$F1 public IndexRequest routing ( String routing ) { \n\tif ( $F145545 ( routing ) ) { \n\t\tthis . routing = null ; \n\t\t} \n\telse $F6988 ( this , routing ) return this ; \n\t} \n"}, {"code": "public $F96 receive $F72 throws NetworkException { \n\ttry { \n\t\tpacket . setLength ( DatagramConnection . DEFAULT_DATAGRAM_SIZE ) ; \n\t\tconnection . receive ( packet ) ; \n\t\t$F19322 ( packetLength , packet ) $F2175 ( data , packetLength ) System . arraycopy ( packet . getData ( ) , NUM00 , data , NUM00 , packetLength ) ; \n\t\treturn data ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\tthrow new NetworkException ( NUM00 , e ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 protected void forceDeleteAttributeAt ( int position ) { \n\t$F284341 ( newValues , m_AttValues ) $F135 ( System , m_AttValues , newValues , position ) if $F18953 ( position , m_AttValues ) { \n\t\tSystem . arraycopy ( m_AttValues , position + NUM00 , newValues , position , m_AttValues . length - ( position + NUM00 ) ) ; \n\t\t} \n\tm_AttValues = newValues ; \n\t} \n"}, {"code": "public synchronized AlphabeticIndex addLabels ( Locale locale ) { \n\t$F10665 ( addLabels , peer , locale ) return this ; \n\t} \n"}, {"code": "protected $F96 engineWrap ( Key key ) throws IllegalBlockSizeException , InvalidKeyException $F59421 "}, {"code": "$F1309 public JavaPluginLoader ( Server instance ) { \n\t$F18062 ( Validate , instance ) server = instance ; \n\t} \n"}, {"code": "public void addSeparator $F72 { \n\tif $F935 ( log , PlatformLogger ) $F102497 ( log ) } \n"}, {"code": "public static boolean testSaveLocationExists $F72 { \n\t$F139156 ( sDCardStatus , Environment ) boolean status ; \n\tif $F139157 ( sDCardStatus , Environment ) { \n\t\tstatus = _BOOL ; \n\t\t} \n\telse { \n\t\tstatus = _BOOL ; \n\t\t} \n\treturn status ; \n\t} \n"}, {"code": "private static $F6969 loadClass ( $F52326 urls , String name ) throws ClassNotFoundException { \n\tClassLoader parent = getRMIContextClassLoader ( ) ; \n\tif $F134749 ( loaderLog , Log ) { \n\t\tloaderLog . log ( Log . VERBOSE , NUM00 + parent + NUM00 ) ; \n\t\t} \n\t$F8108 ( sm , System ) if ( sm == null ) { \n\t\ttry { \n\t\t\t$F6969 c = Class . forName ( name , _BOOL , parent ) ; \n\t\t\tif $F134749 ( loaderLog , Log ) { \n\t\t\t\tloaderLog . log ( Log . VERBOSE , NUM00 + name + NUM00 + NUM00 + NUM00 + NUM00 + c . getClassLoader ( ) ) ; \n\t\t\t\t} \n\t\t\treturn c ; \n\t\t\t} \n\t\tcatch ( ClassNotFoundException e ) { \n\t\t\tif ( loaderLog . isLoggable ( Log . BRIEF ) ) { \n\t\t\t\tloaderLog . log ( Log . BRIEF , NUM00 + name + NUM00 + NUM00 + NUM00 , e ) ; \n\t\t\t\t} \n\t\t\tthrow new ClassNotFoundException ( e . getMessage ( ) + NUM00 , e . getException ( ) ) ; \n\t\t\t} \n\t\t} \n\tLoader loader = lookupLoader ( urls , parent ) ; \n\ttry { \n\t\tif ( loader != null ) { \n\t\t\tloader . checkPermissions ( ) ; \n\t\t\t} \n\t\t} \n\tcatch ( SecurityException e ) { \n\t\ttry { \n\t\t\t$F6969 c = loadClassForName ( name , _BOOL , parent ) ; \n\t\t\tif $F134749 ( loaderLog , Log ) { \n\t\t\t\tloaderLog . log ( Log . VERBOSE , NUM00 + name + NUM00 + NUM00 + NUM00 + NUM00 + c . getClassLoader ( ) ) ; \n\t\t\t\t} \n\t\t\treturn c ; \n\t\t\t} \n\t\tcatch ( ClassNotFoundException unimportant ) { \n\t\t\tif ( loaderLog . isLoggable ( Log . BRIEF ) ) { \n\t\t\t\tloaderLog . log ( Log . BRIEF , NUM00 + name + NUM00 + NUM00 + NUM00 , e ) ; \n\t\t\t\t} \n\t\t\tthrow new ClassNotFoundException ( NUM00 , e ) ; \n\t\t\t} \n\t\t} \n\ttry { \n\t\t$F6969 c = loadClassForName ( name , _BOOL , loader ) ; \n\t\tif $F134749 ( loaderLog , Log ) { \n\t\t\tloaderLog . log ( Log . VERBOSE , NUM00 + name + NUM00 + NUM00 + NUM00 + c . getClassLoader ( ) ) ; \n\t\t\t} \n\t\treturn c ; \n\t\t} \n\tcatch ( ClassNotFoundException e ) { \n\t\tif ( loaderLog . isLoggable ( Log . BRIEF ) ) { \n\t\t\tloaderLog . log ( Log . BRIEF , NUM00 + name + NUM00 , e ) ; \n\t\t\t} \n\t\tthrow e ; \n\t\t} \n\t} \n"}, {"code": "public static final List < INaviRawModule > loadRawModules ( final AbstractSQLProvider provider ) throws CouldntLoadDataException { \n\t$F1832 ( Preconditions , provider ) final CConnection connection = provider . getConnection ( ) ; \n\tfinal List < INaviRawModule > modules = new ArrayList < INaviRawModule > $F72 ; \n\tif ( ! PostgreSQLHelpers . hasTable ( connection , CTableNames . RAW_MODULES_TABLE ) ) { \n\t\treturn modules ; \n\t\t} \n\tfinal String query = NUM00 + CTableNames . RAW_MODULES_TABLE + NUM00 ; \n\ttry ( ResultSet resultSet = connection . executeQuery ( query , _BOOL ) ) { \n\t\twhile $F1682 ( resultSet ) { \n\t\t\t$F10411 ( rawModuleId , resultSet ) $F435445 ( name , PostgreSQLHelpers , resultSet ) final boolean isComplete = PostgreSQLDatabaseFunctions . checkRawModulesTables ( provider . getConnection ( ) , PostgreSQLHelpers . getDatabaseName ( provider . getConnection ( ) ) , rawModuleId ) ; \n\t\t\tfinal int functionCount = isComplete ? PostgreSQLDatabaseFunctions . getRawModuleFunctionCount ( connection , rawModuleId ) : NUM00 ; \n\t\t\tfinal CRawModule module = new CRawModule ( rawModuleId , name , functionCount , isComplete , provider ) ; \n\t\t\tmodules . add ( module ) ; \n\t\t\t} \n\t\t} \n\tcatch ( final SQLException e ) { \n\t\tthrow new CouldntLoadDataException ( e ) ; \n\t\t} \n\treturn modules ; \n\t} \n"}, {"code": "void write ( ImageOutputStream ios ) throws IOException { \n\tlength = NUM00 + data . length ; \n\twriteTag ( ios ) ; \n\tios . write ( data ) ; \n\t} \n"}, {"code": "public static int probRound ( double value , Random rand ) { \n\tif ( value >= NUM00 ) { \n\t\tdouble lower = Math . floor ( value ) ; \n\t\tdouble prob = value - lower ; \n\t\tif ( rand . nextDouble ( ) < prob ) { \n\t\t\treturn ( int ) lower + NUM00 ; \n\t\t\t} \n\t\telse $F23220 ( lower ) } \n\telse { \n\t\tdouble lower = Math . floor ( Math . abs ( value ) ) ; \n\t\tdouble prob = Math . abs ( value ) - lower ; \n\t\tif ( rand . nextDouble ( ) < prob ) { \n\t\t\treturn - ( ( int ) lower + NUM00 ) ; \n\t\t\t} \n\t\telse { \n\t\t\treturn - ( int ) lower ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "Map < String , TypeName > convertPropertiesToTypes ( Map < String , ExecutableElement > properties ) { \n\tMap < String , TypeName > types = new LinkedHashMap < String , TypeName > $F72 ; \n\tfor ( Map . Entry < String , ExecutableElement > entry : properties . entrySet ( ) ) { \n\t\tExecutableElement el = entry . getValue ( ) ; \n\t\ttypes . put ( entry . getKey ( ) , TypeName . get ( el . getReturnType ( ) ) ) ; \n\t\t} \n\treturn types ; \n\t} \n"}, {"code": "private static List < RegisterDescription > parseRegisterInformation ( final Node node ) throws MessageParserException { \n\tfinal List < RegisterDescription > $F204 ( registers ) ; \n\tfinal NodeList nodes = node . getChildNodes ( ) ; \n\tfor ( $F184528 ( i , nodes ) ) { \n\t\tfinal Node child = nodes . item ( i ) ; \n\t\t$F20139 ( registerName , getAttribute , child ) $F20139 ( registerSize , getAttribute , child ) $F20139 ( registerEditable , getAttribute , child ) registers . add ( new RegisterDescription ( registerName , Integer . valueOf ( registerSize ) , Boolean . valueOf ( registerEditable ) ) ) ; \n\t\t} \n\treturn registers ; \n\t} \n"}, {"code": "public NamedThreadFactory ( String namePrefix ) { \n\t$F31108 ( this , Objects , namePrefix ) group = getThreadGroup ( ) ; \n\tdaemon = _BOOL ; \n\t} \n"}, {"code": "public void test_metric_cpu_num_uint16 $F72 { \n\tfinal IGangliaMetadataMessage decl = new GangliaMetadataMessage ( NUM00 , NUM00 , _BOOL , GangliaMessageTypeEnum . UINT16 , NUM00 , NUM00 , GangliaSlopeEnum . zero , NUM00 , NUM00 , AbstractMetrics . getMap ( IGangliaAttributes . GROUP_CPU , NUM00 , NUM00 ) ) ; \n\tassertEncodeDecode ( null , decl ) ; \n\tfinal IGangliaMetricMessage expected = new GangliaMetricMessage ( GangliaMessageTypeEnum . UINT16 , NUM00 , NUM00 , _BOOL , NUM00 , Integer . valueOf ( NUM00 ) ) ; \n\tfinal $F96 actualData = assertEncodeDecode ( decl , expected ) ; \n\tfinal $F96 expectedData = new byte [ ] { \n\t\tNUM00 , NUM00 , NUM00 , - NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 , NUM00 } \n\t; \n\tif $F1209 ( Arrays , expectedData , actualData ) { \n\t\tfail ( $F11846 ( Arrays , expectedData ) + Arrays . toString ( actualData ) ) ; \n\t\t} \n\t} \n"}, {"code": "String formatNumberList ( TransformerImpl transformer , $F2469 list , int contextNode ) throws TransformerException { \n\tString numStr ; \n\tFastStringBuffer formattedNumber = StringBufferPool . get ( ) ; \n\ttry { \n\t\tint nNumbers = list . length , numberWidth = NUM00 ; \n\t\tchar numberType = NUM00 ; \n\t\tString formatToken , lastSepString = null , formatTokenString = null ; \n\t\tString lastSep = NUM00 ; \n\t\tboolean isFirstToken = _BOOL ; \n\t\tString formatValue = ( null != m_format_avt ) ? m_format_avt . evaluate ( transformer . getXPathContext ( ) , contextNode , this ) : null ; \n\t\tif ( null == formatValue ) formatValue = NUM00 ; \n\t\tNumberFormatStringTokenizer formatTokenizer = new NumberFormatStringTokenizer ( formatValue ) ; \n\t\tfor ( $F119 ( i , nNumbers ) ) { \n\t\t\tif $F14498 ( formatTokenizer ) { \n\t\t\t\t$F39710 ( formatToken , formatTokenizer ) if ( Character . isLetterOrDigit ( $F7792 ( formatToken ) ) ) { \n\t\t\t\t\t$F3935 ( numberWidth , formatToken ) $F223528 ( numberType , formatToken , numberWidth ) } \n\t\t\t\telse if ( formatTokenizer . isLetterOrDigitAhead ( ) ) { \n\t\t\t\t\tformatTokenString = formatToken ; \n\t\t\t\t\twhile ( formatTokenizer . nextIsSep ( ) ) { \n\t\t\t\t\t\t$F39710 ( formatToken , formatTokenizer ) formatTokenString += formatToken ; \n\t\t\t\t\t\t} \n\t\t\t\t\tif ( ! isFirstToken ) lastSep = formatTokenString ; \n\t\t\t\t\t$F39710 ( formatToken , formatTokenizer ) $F3935 ( numberWidth , formatToken ) $F223528 ( numberType , formatToken , numberWidth ) } \n\t\t\t\telse { \n\t\t\t\t\tlastSepString = formatToken ; \n\t\t\t\t\twhile $F14498 ( formatTokenizer ) { \n\t\t\t\t\t\t$F39710 ( formatToken , formatTokenizer ) lastSepString += formatToken ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( null != formatTokenString && isFirstToken ) $F288 ( formattedNumber , formatTokenString ) else if ( null != lastSep && ! isFirstToken ) formattedNumber . append ( lastSep ) ; \n\t\t\tgetFormattedNumber ( transformer , contextNode , numberType , numberWidth , list [ i ] , formattedNumber ) ; \n\t\t\tisFirstToken = _BOOL ; \n\t\t\t} \n\t\twhile ( formatTokenizer . isLetterOrDigitAhead ( ) ) { \n\t\t\t$F89223 ( formatTokenizer ) } \n\t\t$F208830 ( lastSepString , formattedNumber ) while $F14498 ( formatTokenizer ) { \n\t\t\t$F39710 ( formatToken , formatTokenizer ) formattedNumber . append ( formatToken ) ; \n\t\t\t} \n\t\t$F6947 ( numStr , formattedNumber ) } \n\tfinally { \n\t\tStringBufferPool . free ( formattedNumber ) ; \n\t\t} \n\treturn numStr ; \n\t} \n"}, {"code": "public int addColumn ( Object newCol , int length ) throws FitsException { \n\tif ( this . nFields > NUM00 && Array . getLength ( newCol ) != this . nRows ) { \n\t\tthrow new FitsException $F580 ; \n\t\t} \n\tif ( this . nFields == NUM00 ) { \n\t\tthis . nRows = Array . getLength ( newCol ) ; \n\t\t} \n\t$F131 newData = new Object [ this . nFields + NUM00 ] ; \n\t$F2027 newOffsets = new int [ this . nFields + NUM00 ] ; \n\t$F2027 newLengths = new int [ this . nFields + NUM00 ] ; \n\t$F18547 newTypes = new Class [ this . nFields + NUM00 ] ; \n\t$F806 newNulls = new String [ this . nFields + NUM00 ] ; \n\tSystem . arraycopy ( this . data , NUM00 , newData , NUM00 , this . nFields ) ; \n\tSystem . arraycopy ( this . offsets , NUM00 , newOffsets , NUM00 , this . nFields ) ; \n\tSystem . arraycopy ( this . lengths , NUM00 , newLengths , NUM00 , this . nFields ) ; \n\tSystem . arraycopy ( this . types , NUM00 , newTypes , NUM00 , this . nFields ) ; \n\tSystem . arraycopy ( this . nulls , NUM00 , newNulls , NUM00 , this . nFields ) ; \n\tthis . data = newData ; \n\tthis . offsets = newOffsets ; \n\tthis . lengths = newLengths ; \n\tthis . types = newTypes ; \n\tthis . nulls = newNulls ; \n\tnewData [ this . nFields ] = newCol ; \n\tthis . offsets [ this . nFields ] = this . rowLen + NUM00 ; \n\tthis . lengths [ this . nFields ] = length ; \n\tthis . types [ this . nFields ] = ArrayFuncs . getBaseClass ( newCol ) ; \n\tthis . rowLen += length + NUM00 ; \n\tif ( this . isNull != null ) { \n\t\t$F8748 newIsNull = new boolean [ this . nRows * ( this . nFields + NUM00 ) ] ; \n\t\tint add = NUM00 ; \n\t\tfor ( int i = NUM00 ; \n\t\ti < this . isNull . length ; \n\t\ti += NUM00 ) { \n\t\t\tif ( i % this . nFields == NUM00 ) { \n\t\t\t\tadd += NUM00 ; \n\t\t\t\t} \n\t\t\tif ( this . isNull [ i ] ) { \n\t\t\t\tnewIsNull [ i + add ] = _BOOL ; \n\t\t\t\t} \n\t\t\t} \n\t\tthis . isNull = newIsNull ; \n\t\t} \n\tthis . nFields += NUM00 ; \n\tthis . buffer = null ; \n\treturn this . nFields ; \n\t} \n"}, {"code": "Deque $F40167 schedule ( Block entry ) { \n\tDeque $F40167 code = dfs ( entry ) ; \n\tDeque $F40167 scheduled = new ArrayDeque $F40167 $F72 ; \n\tSetMap < Block , Edge > pred = preds ( code ) ; \n\tMap < Block , Block > idom = idoms ( code , pred ) ; \n\tEdgeMap $F40167 loops = findLoops ( code , idom , pred ) ; \n\tif $F5973 ( loops ) verboseStatus ( NUM00 + loops ) ; \n\tfor ( Block b : code ) { \n\t\t$F24127 ( scheduled , b ) if $F1710 ( loops , b ) schedule_loop ( b , loops , scheduled ) ; \n\t\t} \n\tDeque $F40167 branch_analysis = new ArrayDeque $F40167 $F72 ; \n\tbranch_analysis . addAll ( scheduled ) ; \n\tSet $F40167 already_seen = new HashSet $F40167 $F72 ; \n\twhile $F3817 ( branch_analysis ) { \n\t\tBlock b = branch_analysis . removeFirst ( ) ; \n\t\tExpr last = b . last ( ) ; \n\t\tBlock next = branch_analysis . peekFirst ( ) ; \n\t\tif ( isBranch ( last ) && last . succ [ NUM00 ] . to != next && last . succ [ NUM00 ] . to == next ) invert ( last ) ; \n\t\talready_seen . add ( b ) ; \n\t\tb . is_backwards_branch_target = _BOOL ; \n\t\tfor ( Edge s : b . succ ( ) ) { \n\t\t\ts . to . is_backwards_branch_target |= s . is_backwards_branch = already_seen . contains ( s . to ) ; \n\t\t\t} \n\t\t} \n\tif ( verbose_mode ) for ( Block b : code ) if ( b . is_backwards_branch_target ) verboseStatus ( NUM00 + b ) ; \n\treturn scheduled ; \n\t} \n"}, {"code": "public void addTransaction ( SIPServerTransaction serverTransaction ) throws IOException { \n\tif $F293507 ( logger , LogWriter ) logger . logDebug ( NUM00 + serverTransaction ) ; \n\tserverTransaction . map ( ) ; \n\taddTransactionHash ( serverTransaction ) ; \n\t} \n"}, {"code": "private void delayRetry ( int multiplier ) { \n\tdebug ( NUM00 ) ; \n\ttry { \n\t\tThread . sleep ( NUM00 * multiplier ) ; \n\t\t} \n\tcatch ( InterruptedException e ) $F28986 ( warn , e ) } \n"}, {"code": "public void testSplitAndJoinSemicolonNestedInPipeProperties $F72 { \n\tProperties outer = PropertyUtils . splitPropertiesOnPipe ( ONE_THEN_TWO_OUTER_A ) ; \n\tassertEquals ( ONE_SEMI_TWO , outer . getProperty ( NUM00 ) ) ; \n\t$F70108 ( assertEquals , outer ) try { \n\t\tassertEquals ( ONE_THEN_TWO_OUTER_A , PropertyUtils . joinOnPipe ( PropertyUtils . toMap ( outer ) ) ) ; \n\t\t$F665 } \n\tcatch ( ComparisonFailure deviation1 ) $F845 try { \n\t\tassertEquals ( TWO_THEN_ONE_OUTER_A , PropertyUtils . joinOnPipe ( PropertyUtils . toMap ( outer ) ) ) ; \n\t\t$F665 } \n\tcatch ( ComparisonFailure deviation2 ) $F845 try { \n\t\tassertEquals ( ONE_THEN_TWO_OUTER_B , PropertyUtils . joinOnPipe ( PropertyUtils . toMap ( outer ) ) ) ; \n\t\t$F665 } \n\tcatch ( ComparisonFailure deviation3 ) $F845 try { \n\t\tassertEquals ( TWO_THEN_ONE_OUTER_B , PropertyUtils . joinOnPipe ( PropertyUtils . toMap ( outer ) ) ) ; \n\t\t$F665 } \n\tcatch ( ComparisonFailure deviation4 ) $F845 assertEquals ( TWO_THEN_ONE_OUTER_A , PropertyUtils . joinOnPipe ( PropertyUtils . toMap ( outer ) ) ) ; \n\t} \n"}, {"code": "public void testIntBooleanMap $F72 throws Exception { \n\t$F44214 ( mapper ) String JSON = NUM00 ; \n\t$F8435 result = mapper . readValue ( JSON , new TypeReference < HashMap < Integer , Boolean > > $F90279 ) ; \n\tassertNotNull ( result ) ; \n\tassertEquals ( HashMap . class , result . getClass ( ) ) ; \n\t$F70108 ( assertEquals , result ) assertEquals ( Boolean . TRUE , result . get ( Integer . valueOf ( NUM00 ) ) ) ; \n\tassertEquals ( Boolean . FALSE , result . get ( $F43818 ( Integer ) ) ) ; \n\tassertNull ( result . get ( NUM00 ) ) ; \n\t$F254829 ( assertNull , result ) } \n"}, {"code": "$F1 public boolean isBusy $F72 { \n\treturn _BOOL ; \n\t} \n"}, {"code": "protected ByteArrayOutputStream parseBytes ( ByteArrayOutputStream bos ) throws IOException { \n\tint ch ; \n\tfor ( ch = skipWhitespace ( ) ; \n\tch >= NUM00 && ch != NUM00 ; \n\tch = skipWhitespace ( ) ) { \n\t\tint b1 = ch ; \n\t\tint b2 = read ( ) ; \n\t\tint b3 = read ( ) ; \n\t\tint b4 = read ( ) ; \n\t\tif ( b4 != NUM00 ) { \n\t\t\tint chunk = ( ( base64Decode [ b1 ] < < NUM00 ) + ( base64Decode [ b2 ] < < NUM00 ) + ( base64Decode [ b3 ] < < NUM00 ) + ( base64Decode [ b4 ] ) ) ; \n\t\t\t$F34529 ( bos , chunk ) $F34529 ( bos , chunk ) bos . write ( chunk ) ; \n\t\t\t} \n\t\telse if ( b3 != NUM00 ) { \n\t\t\tint chunk = ( ( base64Decode [ b1 ] < < NUM00 ) + ( base64Decode [ b2 ] < < NUM00 ) + ( base64Decode [ b3 ] > > NUM00 ) ) ; \n\t\t\t$F34529 ( bos , chunk ) bos . write ( chunk ) ; \n\t\t\t} \n\t\telse { \n\t\t\tint chunk = ( ( base64Decode [ b1 ] < < NUM00 ) + ( base64Decode [ b2 ] > > NUM00 ) ) ; \n\t\t\tbos . write ( chunk ) ; \n\t\t\t} \n\t\t} \n\tif ( ch == NUM00 ) _peek = ch ; \n\treturn bos ; \n\t} \n"}, {"code": "public void reset $F72 { \n\t$F195699 ( mDownloadBandwidth ) mCurrentBandwidthConnectionQuality . set ( ConnectionQuality . UNKNOWN ) ; \n\t} \n"}, {"code": "public void testMergeSecurityRoleIntoEmptyDocument $F72 throws Exception { \n\tString srcXml = NUM00 ; \n\t$F34646 ( srcWebXml , WebXmlIo , srcXml ) $F180114 ( mergeXml ) $F34646 ( mergeWebXml , WebXmlIo , mergeXml ) $F34648 ( merger , srcWebXml ) merger . merge ( mergeWebXml ) ; \n\t$F3803 securityRoleNames = WebXmlUtils . getSecurityRoleNames ( srcWebXml ) ; \n\t$F70108 ( assertEquals , securityRoleNames ) $F100793 ( assertEquals , securityRoleNames ) } \n"}, {"code": "private DiffPart decodeFullRevision ( final int blockSize_L ) throws UnsupportedEncodingException , DecodingException { \n\tif ( blockSize_L < NUM00 ) { \n\t\tthrow new DecodingException ( NUM00 + blockSize_L ) ; \n\t\t} \n\t$F83249 ( l , r , blockSize_L ) $F1538 ( output ) for ( $F119 ( i , l ) ) { \n\t\toutput . write ( r . readByte ( ) ) ; \n\t\t} \n\tDiffPart part = new DiffPart ( DiffAction . FULL_REVISION_UNCOMPRESSED ) ; \n\t$F92634 ( part , output , WIKIPEDIA_ENCODING ) return part ; \n\t} \n"}, {"code": "private synchronized static void removeChildCharacterData ( Node node , boolean deep ) { \n\t$F9040 ( list , node ) for ( int i = list . getLength ( ) ; \n\ti >= NUM00 ; \n\ti -- ) { \n\t\t$F61359 ( n , list , i ) $F45557 ( n ) if ( n instanceof CharacterData ) node . removeChild ( XMLCaster . toRawNode ( n ) ) ; \n\t\telse if ( deep ) removeChildCharacterData ( n , deep ) ; \n\t\t} \n\t} \n"}, {"code": "void unlink $F75141 ( p , trail ) { \n\tp . item = null ; \n\t$F33910 ( trail , p ) if ( last == p ) last = trail ; \n\t$F75143 ( count , capacity , notFull ) } \n"}, {"code": "private void loadCorpus $F1947 ( source , target , align ) throws IOException { \n\t$F973 ( logger ) TimeKeeper timer = TimingUtils . start ( ) ; \n\tint numSourcePositions = NUM00 ; \n\tint numTargetPositions = NUM00 ; \n\tnumSentences = NUM00 ; \n\tParallelCorpus corpus = new ParallelCorpus $F989 ; \n\ttry ( LineNumberReader fReader = IOTools . getReaderFromFile ( source ) ) { \n\t\tLineNumberReader eReader = IOTools . getReaderFromFile ( target ) ; \n\t\tLineNumberReader aReader = IOTools . getReaderFromFile ( align ) ; \n\t\tfor ( $F26610 ( fLine , fReader ) ) { \n\t\t\t$F27015 ( eLine , eReader ) $F27015 ( aLine , aReader ) AlignedSentence example = corpus . getSentence ( fLine , eLine , aLine ) ; \n\t\t\tif ( example != null ) { \n\t\t\t\tnumSourcePositions += example . sourceLength ( ) ; \n\t\t\t\tnumTargetPositions += example . targetLength ( ) ; \n\t\t\t\t++ numSentences ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tfinal int initialVocabularySize = corpus . getVocabulary ( ) . size ( ) ; \n\ttimer . mark ( NUM00 ) ; \n\tlogger . info ( NUM00 , numSourcePositions , numTargetPositions , numSentences ) ; \n\tfinal int srcLength = numSourcePositions + numSentences ; \n\tif ( srcLength < NUM00 ) $F11388 $F3936 ( srcBitext , srcLength ) $F3936 ( f2e , srcLength ) final int tgtLength = numTargetPositions + numSentences ; \n\tif ( tgtLength < NUM00 ) $F11388 $F3936 ( tgtBitext , tgtLength ) $F3936 ( e2f , tgtLength ) try ( LineNumberReader fReader = IOTools . getReaderFromFile ( source ) ) { \n\t\tLineNumberReader eReader = IOTools . getReaderFromFile ( target ) ; \n\t\tLineNumberReader aReader = IOTools . getReaderFromFile ( align ) ; \n\t\tint srcOffset = NUM00 ; \n\t\tint tgtOffset = NUM00 ; \n\t\tfor ( $F26610 ( fLine , fReader ) ) { \n\t\t\t$F27015 ( eLine , eReader ) $F27015 ( aLine , aReader ) AlignedSentence sentence = corpus . getSentence ( fLine , eLine , aLine ) ; \n\t\t\tif ( sentence == null ) { \n\t\t\t\tlogger . info ( $F252806 ( fReader ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tSystem . arraycopy ( sentence . source , NUM00 , srcBitext , srcOffset , sentence . sourceLength ( ) ) ; \n\t\t\t\tSystem . arraycopy ( sentence . f2e , NUM00 , f2e , srcOffset , sentence . f2e . length ) ; \n\t\t\t\tSystem . arraycopy ( sentence . target , NUM00 , tgtBitext , tgtOffset , sentence . targetLength ( ) ) ; \n\t\t\t\tSystem . arraycopy ( sentence . e2f , NUM00 , e2f , tgtOffset , sentence . e2f . length ) ; \n\t\t\t\tsrcOffset += sentence . sourceLength ( ) ; \n\t\t\t\ttgtOffset += sentence . targetLength ( ) ; \n\t\t\t\tsrcBitext [ srcOffset ] = toSentenceOffset ( tgtOffset ) ; \n\t\t\t\ttgtBitext [ tgtOffset ] = toSentenceOffset ( srcOffset ) ; \n\t\t\t\t++ srcOffset ; \n\t\t\t\t++ tgtOffset ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tthis . vocabulary = corpus . getVocabulary ( ) ; \n\tassert initialVocabularySize == vocabulary . size ( ) ; \n\ttimer . mark ( NUM00 ) ; \n\t$F10635 ( logger , timer ) } \n"}, {"code": "public static float mixFriction ( float friction1 , float friction2 ) { \n\treturn MathUtils . sqrt ( friction1 * friction2 ) ; \n\t} \n"}, {"code": "public String serialize ( Object obj , String contentType ) throws ApiException { \n\tif $F3106 ( contentType ) { \n\t\treturn json . serialize ( obj ) ; \n\t\t} \n\telse { \n\t\tthrow new ApiException ( NUM00 , NUM00 + contentType ) ; \n\t\t} \n\t} \n"}, {"code": "private boolean compileSWsequenceZR ( int baseRegister , $F2027 offsets , $F2027 registers ) { \n\tfor ( $F1139 ( i , registers ) ) { \n\t\tif ( registers [ i ] != _zr ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\tfor ( $F1139 ( i , offsets ) ) { \n\t\tif ( offsets [ i ] != offsets [ i - NUM00 ] + NUM00 ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\tint offset = offsets [ NUM00 ] ; \n\tint length = offsets . length ; \n\tdo { \n\t\tint copyLength = Math . min ( length , FastMemory . zero . length ) ; \n\t\tmv . visitFieldInsn ( Opcodes . GETSTATIC , Type . getInternalName ( FastMemory . class ) , NUM00 , NUM00 ) ; \n\t\tloadImm ( NUM00 ) ; \n\t\tloadMemoryInt ( ) ; \n\t\tprepareMemIndex ( baseRegister , offset , _BOOL , NUM00 ) ; \n\t\tloadImm ( copyLength ) ; \n\t\tmv . visitMethodInsn ( Opcodes . INVOKESTATIC , Type . getInternalName ( System . class ) , NUM00 , arraycopyDescriptor ) ; \n\t\tlength -= copyLength ; \n\t\toffset += copyLength ; \n\t\t} \n\twhile ( length > NUM00 ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "private boolean isNativeVolumeExpansionSupported ( Volume vplexVolume , Long newSize ) { \n\tboolean useNativeVolumeExpansion = _BOOL ; \n\tStringSet assocVolumeIds = vplexVolume . getAssociatedVolumes ( ) ; \n\tif ( null == assocVolumeIds ) { \n\t\ts_logger . warn ( NUM00 , vplexVolume . forDisplay ( ) ) ; \n\t\tuseNativeVolumeExpansion = _BOOL ; \n\t\t} \n\telse { \n\t\tfor ( String assocVolumeId : assocVolumeIds ) { \n\t\t\tVolume assocVolume = _permissionsHelper . getObjectById ( URI . create ( assocVolumeId ) , $F8540 ) ; \n\t\t\ttry { \n\t\t\t\tsuper . verifyVolumeExpansionRequest ( assocVolume , newSize ) ; \n\t\t\t\t} \n\t\t\tcatch ( Exception e ) $F3468 ( useNativeVolumeExpansion , _BOOL ) } \n\t\t} \n\treturn useNativeVolumeExpansion ; \n\t} \n"}, {"code": "public void updateGUI ( RosterEntry r ) { \n\troadName . setText ( r . getRoadName ( ) ) ; \n\troadNumber . setText ( r . getRoadNumber ( ) ) ; \n\tmfg . setText ( r . getMfg ( ) ) ; \n\towner . setText ( r . getOwner ( ) ) ; \n\tmodel . setText ( r . getModel ( ) ) ; \n\tcomment . setText ( r . getComment ( ) ) ; \n\tdecoderModel . setText ( r . getDecoderModel ( ) ) ; \n\tdecoderFamily . setText ( r . getDecoderFamily ( ) ) ; \n\tdecoderComment . setText ( r . getDecoderComment ( ) ) ; \n\tdateUpdated . setText ( r . getDateUpdated ( ) ) ; \n\tmaxSpeedSpinner . setValue ( Integer . valueOf ( r . getMaxSpeedPCT ( ) ) ) ; \n\t} \n"}, {"code": "public static Double oizp ( Number value ) { \n\t$F1338 ( value ) return ( value . doubleValue ( ) >= NUM00 ) ? NUM00 : NUM00 ; \n\t} \n"}, {"code": "public TerminalSize with ( TerminalSize size ) { \n\t$F46660 ( equals , size , this ) return size ; \n\t} \n"}, {"code": "private boolean isGzipAllowed ( final HttpServletRequest request ) { \n\treturn ! DispatcherStreamLocator . isIncludedRequest ( request ) && WroUtil . isGzipSupported ( request ) ; \n\t} \n"}, {"code": "public ReplayProcessor ( int bufferSize , boolean unbounded ) { \n\tif ( unbounded ) { \n\t\tthis . buffer = new UnboundedBuffer $F200 ( bufferSize ) ; \n\t\t} \n\telse { \n\t\tthis . buffer = new BoundedBuffer $F200 ( bufferSize ) ; \n\t\t} \n\tSUBSCRIBERS . lazySet ( this , EMPTY ) ; \n\t} \n"}, {"code": "protected void onShowConversations ( $F4170 List $F37574 conversations ) { \n\tif ( DEBUG ) { \n\t\tLog . d ( $F46477 ( TAG , conversations ) ) ; \n\t\t} \n\tmView . showConversations ( $F7044 ( conversations ) ) ; \n\t} \n"}, {"code": "protected int read $F72 throws IOException { \n\tif ( offset == buffer . length ) $F11734 if ( in == null ) { \n\t\treturn buffer [ offset ++ ] & NUM00 ; \n\t\t} \n\telse { \n\t\t$F7468 ( octet , in ) if ( octet == - NUM00 ) $F11734 $F11740 ( buffer , offset , octet ) return octet ; \n\t\t} \n\t} \n"}, {"code": "public void enqueueJob ( final Runnable job ) { \n\tsynchronized ( mSleepSync ) { \n\t\tif ( hasJob ( ) ) $F4639 setJob ( job ) ; \n\t\t$F165 ( mSleepSync ) } \n\t} \n"}, {"code": "public void testSetNull_int_int $F72 throws SQLException { \n\tPreparedStatement ps = null ; \n\ttry { \n\t\tString query = NUM00 ; \n\t\tps = conn . prepareStatement ( query ) ; \n\t\tStatement st = null ; \n\t\ttry { \n\t\t\tps . setNull ( NUM00 , Types . INTEGER ) ; \n\t\t\t$F1699 ( ps ) } \n\t\t$F137812 ( ps ) query = NUM00 ; \n\t\tps = conn . prepareStatement ( query ) ; \n\t\ttry { \n\t\t\tps . setNull ( NUM00 , Types . BIGINT ) ; \n\t\t\t$F1699 ( ps ) } \n\t\t$F137812 ( ps ) query = NUM00 ; \n\t\tps = conn . prepareStatement ( query ) ; \n\t\ttry { \n\t\t\tps . setNull ( NUM00 , Types . DECIMAL ) ; \n\t\t\t$F1699 ( ps ) } \n\t\t$F137812 ( ps ) query = NUM00 ; \n\t\tps = conn . prepareStatement ( query ) ; \n\t\ttry { \n\t\t\tps . setNull ( NUM00 , Types . DATE ) ; \n\t\t\t$F1699 ( ps ) } \n\t\t$F137812 ( ps ) query = NUM00 ; \n\t\tps = conn . prepareStatement ( query ) ; \n\t\ttry { \n\t\t\tps . setNull ( NUM00 , Types . BLOB ) ; \n\t\t\t$F1699 ( ps ) } \n\t\t$F137812 ( ps ) query = NUM00 ; \n\t\tps = conn . prepareStatement ( query ) ; \n\t\tps . setNull ( NUM00 , Types . CHAR ) ; \n\t\t$F1699 ( ps ) } \n\t$F137812 ( ps ) } \n"}, {"code": "public void testTestBitPositive2 $F72 { \n\t$F123148 int aSign = NUM00 ; \n\tint number = NUM00 ; \n\t$F3023 ( aNumber , aSign , aBytes ) assertTrue ( aNumber . testBit ( number ) ) ; \n\t} \n"}, {"code": "public void startElement $F42838 ( uri , localName , qName , attributes ) throws $F2253 { \n\tif ( qName . equals ( PrintData . XML_TAG ) ) { \n\t\tString name = attributes . getValue ( PrintData . XML_ATTRIBUTE_NAME ) ; \n\t\tif ( m_pd == null ) { \n\t\t\tm_pd = new PrintData ( m_ctx , name ) ; \n\t\t\tpush ( m_pd ) ; \n\t\t\t} \n\t\telse { \n\t\t\tPrintData temp = new PrintData ( m_ctx , name ) ; \n\t\t\tm_curPD . addNode ( temp ) ; \n\t\t\tpush ( temp ) ; \n\t\t\t} \n\t\t} \n\telse if ( qName . equals ( PrintData . XML_ROW_TAG ) ) { \n\t\tm_curPD . addRow ( _BOOL , NUM00 ) ; \n\t\t} \n\telse if ( qName . equals ( PrintDataElement . XML_TAG ) ) { \n\t\tm_curPDEname = attributes . getValue ( PrintDataElement . XML_ATTRIBUTE_NAME ) ; \n\t\t$F7398 ( m_curPDEvalue ) } \n\t} \n"}, {"code": "public synchronized int updatePurchase ( String orderId , String productId , PurchaseState purchaseState , long purchaseTime , String developerPayload ) { \n\tinsertOrder ( orderId , productId , purchaseState , purchaseTime , developerPayload ) ; \n\tCursor cursor = mDb . query ( PURCHASE_HISTORY_TABLE_NAME , HISTORY_COLUMNS , HISTORY_PRODUCT_ID_COL + NUM00 , $F8640 ( productId ) , null , null , null , null ) ; \n\t$F1084 ( cursor ) int quantity = NUM00 ; \n\ttry { \n\t\twhile $F12260 ( cursor ) { \n\t\t\t$F24632 ( stateIndex , cursor ) $F2544 ( state , PurchaseState , stateIndex ) if ( state == PurchaseState . PURCHASED || state == PurchaseState . REFUNDED ) { \n\t\t\t\tquantity += NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\tupdatePurchasedItem ( productId , quantity ) ; \n\t\t} \n\t$F14364 ( cursor ) return quantity ; \n\t} \n"}, {"code": "public void drawString $F21324 ( str , x , y , textDecoration ) { \n\tif ( $F1276 ( str ) || ( $F1276 ( str ) && $F4431 ( str ) ) ) $F932 Object nativeFont = null ; \n\tif ( current != null ) { \n\t\tnativeFont = current . getNativeFont ( ) ; \n\t\t} \n\tif ( current instanceof CustomFont ) { \n\t\tcurrent . drawString ( this , str , x , y ) ; \n\t\t} \n\telse { \n\t\timpl . drawString ( nativeGraphics , nativeFont , str , x + xTranslate , y + yTranslate , textDecoration ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public int read $F21196 ( array , offset , length ) { \n\tif $F11984 ( idx , charSequence ) $F7629 $F896 ( array ) if ( length < NUM00 || offset < NUM00 || offset + length > array . length ) { \n\t\tthrow new IndexOutOfBoundsException ( $F130320 ( array , offset ) + length ) ; \n\t\t} \n\tint count = NUM00 ; \n\tfor ( $F119 ( i , length ) ) { \n\t\tint c = read ( ) ; \n\t\t$F5881 ( c , count ) array [ offset + i ] = ( char ) c ; \n\t\tcount ++ ; \n\t\t} \n\treturn count ; \n\t} \n"}, {"code": "public void updateNonceParameters $F72 { \n\tif $F1238 ( mNextNonce , mNonce ) { \n\t\tmCnonceCounter ++ ; \n\t\t} \n\telse { \n\t\tmCnonceCounter = NUM00 ; \n\t\tmNonce = mNextNonce ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void acceptInstance ( InstanceEvent e ) { \n\tif ( e . getStatus ( ) == InstanceEvent . FORMAT_AVAILABLE ) { \n\t\tm_connectedFormat = e . getStructure ( ) ; \n\t\tm_stopRequested . set ( _BOOL ) ; \n\t\ttry { \n\t\t\tinit ( new Instances ( e . getStructure ( ) , NUM00 ) ) ; \n\t\t\t} \n\t\tcatch ( IllegalArgumentException ex ) { \n\t\t\tif ( m_log != null ) { \n\t\t\t\tString message = NUM00 ; \n\t\t\t\tstopWithErrorMessage ( message , ex ) ; \n\t\t\t\t$F665 } \n\t\t\t} \n\t\tString buffSize = m_bufferSize ; \n\t\ttry { \n\t\t\tbuffSize = m_env . substitute ( buffSize ) ; \n\t\t\tm_bufferSizeI = Integer . parseInt ( buffSize ) ; \n\t\t\t} \n\t\t$F1516 ( ex ) m_incrementalBuffer = new ArrayList < InstanceHolder > ( m_bufferSizeI ) ; \n\t\t$F14389 ( m_bufferFiles ) ; \n\t\tm_streamCounter = NUM00 ; \n\t\t$F665 } \n\tm_busy = _BOOL ; \n\tif ( e . getInstance ( ) != null ) { \n\t\tif ( m_streamCounter == NUM00 ) { \n\t\t\tif ( m_log != null ) { \n\t\t\t\t$F37058 ( m_log , statusMessagePrefix ) m_log . logMessage ( NUM00 + statusMessagePrefix ( ) + NUM00 + m_bufferSizeI ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tInstanceHolder tempH = new InstanceHolder $F72 ; \n\t\ttempH . m_instance = e . getInstance ( ) ; \n\t\ttempH . m_fileNumber = - NUM00 ; \n\t\t$F40608 ( m_stringAttIndexes , copyStringAttVals , tempH ) m_incrementalBuffer . add ( tempH ) ; \n\t\tm_streamCounter ++ ; \n\t\t} \n\tif ( e . getInstance ( ) == null || $F158194 ( e , InstanceEvent ) ) $F10990 ( emitBufferedInstances ) else if $F36323 ( m_incrementalBuffer , m_bufferSizeI ) { \n\t\ttry { \n\t\t\tsortBuffer ( _BOOL ) ; \n\t\t\t} \n\t\tcatch ( Exception ex ) { \n\t\t\t$F158170 ( msg , statusMessagePrefix ) stopWithErrorMessage ( msg , ex ) ; \n\t\t\tm_busy = _BOOL ; \n\t\t\t$F665 } \n\t\t} \n\tm_busy = _BOOL ; \n\t} \n"}, {"code": "private void matchVPools ( URI rpSystemId ) { \n\t$F28584 storagePoolIds = ConnectivityUtil . getRPSystemStoragePools ( _dbClient , rpSystemId ) ; \n\t$F280 ( errorMessage ) if $F1032 ( storagePoolIds ) { \n\t\t$F37270 storagePools = _dbClient . queryObject ( StoragePool . class , storagePoolIds ) ; \n\t\tImplicitPoolMatcher . matchModifiedStoragePoolsWithAllVirtualPool ( storagePools , _dbClient , _coordinator , errorMessage ) ; \n\t\t} \n\t} \n"}, {"code": "public static BigDecimal calculateFee ( Player player , int price ) { \n\t$F2544 ( fee , BigDecimal , price ) fee = fee . multiply ( BigDecimal . valueOf ( TRADING_FEE_PERCENTAGE ) ) ; \n\tif ( player . isBadBoy ( ) ) { \n\t\tfee = fee . multiply ( BigDecimal . valueOf ( NUM00 + TRADING_FEE_PLAYER_KILLER_PENALTY ) ) ; \n\t\t} \n\tBigDecimal feeBonus = BigDecimal . ONE ; \n\tfeeBonus = BigDecimal . valueOf ( Math . exp ( - player . getTradescore ( ) / FEE_BONUS_CONSTANT ) ) ; \n\tfee = fee . multiply ( feeBonus ) ; \n\treturn fee . max ( BigDecimal . ONE ) ; \n\t} \n"}, {"code": "private static $F108629 findVertices180 ( BitMatrix matrix , boolean tryHarder ) { \n\t$F2047 ( height , matrix ) $F2049 ( width , matrix ) int halfWidth = width > > NUM00 ; \n\t$F108629 result = new ResultPoint $F380 ; \n\tboolean found = _BOOL ; \n\t$F22974 ( counters , START_PATTERN_REVERSE ) int rowStep = Math . max ( NUM00 , height > > ( tryHarder ? NUM00 : NUM00 ) ) ; \n\tfor ( int i = height - NUM00 ; \n\ti > NUM00 ; \n\ti -= rowStep ) { \n\t\t$F2027 loc = findGuardPattern ( matrix , halfWidth , i , halfWidth , _BOOL , START_PATTERN_REVERSE , counters ) ; \n\t\tif ( loc != null ) { \n\t\t\tresult [ NUM00 ] = new ResultPoint ( loc [ NUM00 ] , i ) ; \n\t\t\tresult [ NUM00 ] = new ResultPoint ( loc [ NUM00 ] , i ) ; \n\t\t\tfound = _BOOL ; \n\t\t\t$F597 } \n\t\t} \n\tif ( found ) { \n\t\tfound = _BOOL ; \n\t\tfor ( int i = NUM00 ; \n\t\ti < height ; \n\t\ti += rowStep ) { \n\t\t\t$F2027 loc = findGuardPattern ( matrix , halfWidth , i , halfWidth , _BOOL , START_PATTERN_REVERSE , counters ) ; \n\t\t\tif ( loc != null ) { \n\t\t\t\tresult [ NUM00 ] = new ResultPoint ( loc [ NUM00 ] , i ) ; \n\t\t\t\tresult [ NUM00 ] = new ResultPoint ( loc [ NUM00 ] , i ) ; \n\t\t\t\tfound = _BOOL ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t} \n\t$F14244 ( counters , STOP_PATTERN_REVERSE ) $F108660 ( found , _BOOL , i , height , rowStep , loc , findGuardPattern , matrix , halfWidth , STOP_PATTERN_REVERSE , counters , result ) if ( found ) { \n\t\tfound = _BOOL ; \n\t\t$F108661 ( i , height , rowStep , loc , findGuardPattern , matrix , halfWidth , _BOOL , STOP_PATTERN_REVERSE , counters , result , found ) } \n\treturn found ? result : null ; \n\t} \n"}, {"code": "private void addSearchHistory $F72 { \n\t$F47592 ( addSearchHistory , tfSearchEditor ) ; \n\t} \n"}, {"code": "ArrayList < SourceFile > trimFileList ( ArrayList < SourceFile > files ) { \n\t$F144226 ( names ) ArrayList < SourceFile > list = new ArrayList < SourceFile > $F72 ; \n\t$F115 ( size , files ) for ( $F119 ( i , size ) ) { \n\t\tboolean addIt = _BOOL ; \n\t\tSourceFile fi = files . get ( i ) ; \n\t\tString fName = fi . getRawName ( ) ; \n\t\tif ( m_swfFilter == null ) { \n\t\t\tif $F4257 ( names , fName ) addIt = _BOOL ; \n\t\t\t} \n\t\telse { \n\t\t\taddIt = m_swfFilter . containsSource ( fi ) ; \n\t\t\t} \n\t\tif ( addIt ) { \n\t\t\t$F22747 ( names , fName ) list . add ( fi ) ; \n\t\t\t} \n\t\t} \n\treturn list ; \n\t} \n"}, {"code": "public static String join ( $F1986 self , String separator ) { \n\t$F83 ( buffer ) boolean first = _BOOL ; \n\t$F12553 ( separator ) for ( double next : self ) $F98972 ( first , _BOOL , buffer , separator , next ) $F92 ( buffer ) } \n"}, {"code": "protected void writeShort ( int value ) throws IOException { \n\t$F88315 ( out , value ) out . write ( $F11786 ( value ) ) ; \n\t} \n"}, {"code": "public EntityQuery orderBy ( String ... fields ) { \n\tthis . orderBy = Arrays . asList ( fields ) ; \n\treturn this ; \n\t} \n"}, {"code": "public StemmedString ( String orig , String stemmed ) { \n\tstrOrig = orig ; \n\tstrStemmed = stemmed ; \n\t} \n"}, {"code": "public LogNetworkStreamMerger ( LogRequest req , MediaType mediaType , LogSvcPropertiesLoader propertiesLoader ) { \n\t$F1932 ( logger ) this . request = req ; \n\tthis . mediaType = mediaType ; \n\tthis . propertiesLoader = propertiesLoader ; \n\tList < LogNetworkReader > readers = getLogNetworkStreams ( ) ; \n\t$F115 ( size , readers ) logHeads = new LogMessage [ size ] ; \n\tthis . logStreamList = new LogNetworkReader [ size ] ; \n\tint index = NUM00 ; \n\tfor ( LogNetworkReader reader : readers ) { \n\t\tlogStreamList [ index ] = reader ; \n\t\tlogHeads [ index ] = null ; \n\t\tindex ++ ; \n\t\t} \n\t} \n"}, {"code": "public static String packCipherSuites $F4374 ( ciphers ) { \n\tString cipherSet = null ; \n\tif ( ciphers != null ) { \n\t\t$F280 ( buf ) for ( $F1139 ( i , ciphers ) ) { \n\t\t\t$F6939 ( buf , ciphers , i ) if $F18953 ( i , ciphers ) $F86 ( buf ) } \n\t\t$F6947 ( cipherSet , buf ) } \n\treturn cipherSet ; \n\t} \n"}, {"code": "public ExtensionFileFilter ( String description , String extension ) { \n\tthis . description = description ; \n\tthis . extensions = $F2692 ; \n\t$F9631 ( extensions , extension ) defaultExtension = extension ; \n\t} \n"}, {"code": "private void ensureTupleArray ( int row ) { \n\tint nrows = Math . max ( m_table . getRowCount ( ) , row + NUM00 ) ; \n\tif ( m_tuples == null ) { \n\t\tm_tuples = new TableTuple [ nrows ] ; \n\t\t} \n\telse if ( m_tuples . length < nrows ) { \n\t\tint capacity = Math . max ( $F113948 ( m_tuples ) / NUM00 + NUM00 , nrows ) ; \n\t\tTableTuple [ ] tuples = new TableTuple [ capacity ] ; \n\t\t$F7057 ( System , m_tuples , tuples ) m_tuples = tuples ; \n\t\t} \n\t} \n"}, {"code": "private static boolean isAnArgument ( final String arg ) { \n\treturn ( arg . startsWith ( NUM00 ) && $F4012 ( arg ) && ! $F142343 ( Character , arg ) ) ; \n\t} \n"}, {"code": "private synchronized static void removeChildren ( Node node , short type , boolean deep ) { \n\t$F9040 ( list , node ) for ( int i = list . getLength ( ) ; \n\ti >= NUM00 ; \n\ti -- ) { \n\t\t$F61359 ( n , list , i ) $F45557 ( n ) if ( n . getNodeType ( ) == type || type == UNDEFINED_NODE ) node . removeChild ( XMLCaster . toRawNode ( n ) ) ; \n\t\telse if ( deep ) removeChildren ( n , type , deep ) ; \n\t\t} \n\t} \n"}, {"code": "public final void lazySet ( V newValue ) { \n\tunsafe . putOrderedObject ( this , valueOffset , newValue ) ; \n\t} \n"}, {"code": "public boolean isValidSavepoint ( Savepoint sp ) { \n\tif ( isSource ( ) ) return _BOOL ; \n\tboolean result = _BOOL ; \n\tif ( sp != null ) result = _BOOL ; \n\treturn result ; \n\t} \n"}, {"code": "public static void columnsFor ( ResultSet resultSet , TableEditor editor ) throws SQLException { \n\t$F100709 $F204 ( columns ) ; \n\tcolumnsFor ( resultSet , null ) ; \n\teditor . setColumns ( columns ) ; \n\t} \n"}, {"code": "private static void write ( $F6877 src , File out ) throws IOException { \n\ttry ( Writer writer = new BufferedWriter ( new FileWriter ( out ) ) ) { \n\t\tfor ( String line : src ) $F5299 ( writer , line ) } \n\t} \n"}, {"code": "public void clear $F72 { \n\tif ( mOriginalValues != null ) { \n\t\t$F101536 ( mLock , mOriginalValues ) } \n\telse $F9096 ( mObjects ) $F32367 ( mNotifyOnChange , notifyDataSetChanged ) } \n"}, {"code": "private long resetUidValidity $F72 throws IOException { \n\t$F657 ( timestamp , System ) setUidValidity ( timestamp ) ; \n\treturn timestamp ; \n\t} \n"}, {"code": "public final $F79542 pseudoLegalMoves ( Position pos ) { \n\t$F79542 moveList = getMoveListObj ( ) ; \n\tfinal boolean wtm = pos . whiteMove ; \n\tfor ( $F6268 ( x ) ) { \n\t\tfor ( $F6268 ( y ) ) { \n\t\t\tint sq = Position . getSquare ( x , y ) ; \n\t\t\tint p = pos . getPiece ( sq ) ; \n\t\t\tif ( ( p == Piece . EMPTY ) || ( Piece . isWhite ( p ) != wtm ) ) $F1448 if ( ( p == Piece . WROOK ) || ( p == Piece . BROOK ) || ( p == Piece . WQUEEN ) || ( p == Piece . BQUEEN ) ) { \n\t\t\t\tif ( addDirection ( moveList , pos , sq , NUM00 - x , NUM00 ) ) return moveList ; \n\t\t\t\tif ( addDirection ( moveList , pos , sq , NUM00 - y , NUM00 ) ) return moveList ; \n\t\t\t\tif ( addDirection ( moveList , pos , sq , x , - NUM00 ) ) return moveList ; \n\t\t\t\tif ( addDirection ( moveList , pos , sq , y , - NUM00 ) ) return moveList ; \n\t\t\t\t} \n\t\t\tif ( ( p == Piece . WBISHOP ) || ( p == Piece . BBISHOP ) || ( p == Piece . WQUEEN ) || ( p == Piece . BQUEEN ) ) { \n\t\t\t\tif ( addDirection ( moveList , pos , sq , Math . min ( NUM00 - x , NUM00 - y ) , NUM00 ) ) return moveList ; \n\t\t\t\tif ( addDirection ( moveList , pos , sq , Math . min ( x , NUM00 - y ) , NUM00 ) ) return moveList ; \n\t\t\t\tif ( addDirection ( moveList , pos , sq , Math . min ( x , y ) , - NUM00 ) ) return moveList ; \n\t\t\t\tif ( addDirection ( moveList , pos , sq , Math . min ( NUM00 - x , y ) , - NUM00 ) ) return moveList ; \n\t\t\t\t} \n\t\t\tif ( ( p == Piece . WKNIGHT ) || ( p == Piece . BKNIGHT ) ) { \n\t\t\t\tif ( x < NUM00 && y < NUM00 && addDirection ( moveList , pos , sq , NUM00 , NUM00 ) ) return moveList ; \n\t\t\t\tif ( x < NUM00 && y < NUM00 && addDirection ( moveList , pos , sq , NUM00 , NUM00 ) ) return moveList ; \n\t\t\t\tif ( x > NUM00 && y < NUM00 && addDirection ( moveList , pos , sq , NUM00 , NUM00 ) ) return moveList ; \n\t\t\t\tif ( x > NUM00 && y < NUM00 && addDirection ( moveList , pos , sq , NUM00 , NUM00 ) ) return moveList ; \n\t\t\t\tif ( x > NUM00 && y > NUM00 && addDirection ( moveList , pos , sq , NUM00 , - NUM00 ) ) return moveList ; \n\t\t\t\tif ( x > NUM00 && y > NUM00 && addDirection ( moveList , pos , sq , NUM00 , - NUM00 ) ) return moveList ; \n\t\t\t\tif ( x < NUM00 && y > NUM00 && addDirection ( moveList , pos , sq , NUM00 , - NUM00 ) ) return moveList ; \n\t\t\t\tif ( x < NUM00 && y > NUM00 && addDirection ( moveList , pos , sq , NUM00 , - NUM00 ) ) return moveList ; \n\t\t\t\t} \n\t\t\tif ( ( p == Piece . WKING ) || ( p == Piece . BKING ) ) { \n\t\t\t\tif ( x < NUM00 && addDirection ( moveList , pos , sq , NUM00 , NUM00 ) ) return moveList ; \n\t\t\t\tif ( x < NUM00 && y < NUM00 && addDirection ( moveList , pos , sq , NUM00 , NUM00 ) ) return moveList ; \n\t\t\t\tif ( y < NUM00 && addDirection ( moveList , pos , sq , NUM00 , NUM00 ) ) return moveList ; \n\t\t\t\tif ( x > NUM00 && y < NUM00 && addDirection ( moveList , pos , sq , NUM00 , NUM00 ) ) return moveList ; \n\t\t\t\tif ( x > NUM00 && addDirection ( moveList , pos , sq , NUM00 , - NUM00 ) ) return moveList ; \n\t\t\t\tif ( x > NUM00 && y > NUM00 && addDirection ( moveList , pos , sq , NUM00 , - NUM00 ) ) return moveList ; \n\t\t\t\tif ( y > NUM00 && addDirection ( moveList , pos , sq , NUM00 , - NUM00 ) ) return moveList ; \n\t\t\t\tif ( x < NUM00 && y > NUM00 && addDirection ( moveList , pos , sq , NUM00 , - NUM00 ) ) return moveList ; \n\t\t\t\tint k0 = wtm ? Position . getSquare ( NUM00 , NUM00 ) : Position . getSquare ( NUM00 , NUM00 ) ; \n\t\t\t\tif ( Position . getSquare ( x , y ) == k0 ) { \n\t\t\t\t\tint aCastle = wtm ? Position . A1_CASTLE : Position . A8_CASTLE ; \n\t\t\t\t\tint hCastle = wtm ? Position . H1_CASTLE : Position . H8_CASTLE ; \n\t\t\t\t\tint rook = wtm ? Piece . WROOK : Piece . BROOK ; \n\t\t\t\t\tif ( ( ( pos . getCastleMask ( ) & ( NUM00 < < hCastle ) ) != NUM00 ) && ( pos . getPiece ( k0 + NUM00 ) == Piece . EMPTY ) && ( pos . getPiece ( k0 + NUM00 ) == Piece . EMPTY ) && ( pos . getPiece ( k0 + NUM00 ) == rook ) && ! sqAttacked ( pos , k0 ) && ! sqAttacked ( pos , k0 + NUM00 ) ) { \n\t\t\t\t\t\tmoveList . add ( getMoveObj ( k0 , k0 + NUM00 , Piece . EMPTY ) ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\tif ( ( ( pos . getCastleMask ( ) & ( NUM00 < < aCastle ) ) != NUM00 ) && ( pos . getPiece ( k0 - NUM00 ) == Piece . EMPTY ) && ( pos . getPiece ( k0 - NUM00 ) == Piece . EMPTY ) && ( pos . getPiece ( k0 - NUM00 ) == Piece . EMPTY ) && ( pos . getPiece ( k0 - NUM00 ) == rook ) && ! sqAttacked ( pos , k0 ) && ! sqAttacked ( pos , k0 - NUM00 ) ) { \n\t\t\t\t\t\tmoveList . add ( getMoveObj ( k0 , k0 - NUM00 , Piece . EMPTY ) ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( ( p == Piece . WPAWN ) || ( p == Piece . BPAWN ) ) { \n\t\t\t\tint yDir = wtm ? NUM00 : - NUM00 ; \n\t\t\t\tif ( pos . getPiece ( sq + yDir ) == Piece . EMPTY ) { \n\t\t\t\t\taddPawnMoves ( moveList , sq , sq + yDir ) ; \n\t\t\t\t\tif ( ( y == ( wtm ? NUM00 : NUM00 ) ) && ( pos . getPiece ( sq + NUM00 * yDir ) == Piece . EMPTY ) ) { \n\t\t\t\t\t\taddPawnMoves ( moveList , sq , sq + yDir * NUM00 ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\tif ( x > NUM00 ) { \n\t\t\t\t\tint toSq = sq + yDir - NUM00 ; \n\t\t\t\t\tint cap = pos . getPiece ( toSq ) ; \n\t\t\t\t\tif ( cap != Piece . EMPTY ) { \n\t\t\t\t\t\tif ( Piece . isWhite ( cap ) != wtm ) { \n\t\t\t\t\t\t\tif ( cap == ( wtm ? Piece . BKING : Piece . WKING ) ) { \n\t\t\t\t\t\t\t\treturnMoveList ( moveList ) ; \n\t\t\t\t\t\t\t\tmoveList = getMoveListObj ( ) ; \n\t\t\t\t\t\t\t\tmoveList . add ( getMoveObj ( sq , toSq , Piece . EMPTY ) ) ; \n\t\t\t\t\t\t\t\treturn moveList ; \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\telse { \n\t\t\t\t\t\t\t\taddPawnMoves ( moveList , sq , toSq ) ; \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( toSq == pos . getEpSquare ( ) ) { \n\t\t\t\t\t\taddPawnMoves ( moveList , sq , toSq ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\tif ( x < NUM00 ) { \n\t\t\t\t\tint toSq = sq + yDir + NUM00 ; \n\t\t\t\t\tint cap = pos . getPiece ( toSq ) ; \n\t\t\t\t\tif ( cap != Piece . EMPTY ) { \n\t\t\t\t\t\tif ( Piece . isWhite ( cap ) != wtm ) { \n\t\t\t\t\t\t\tif ( cap == ( wtm ? Piece . BKING : Piece . WKING ) ) { \n\t\t\t\t\t\t\t\treturnMoveList ( moveList ) ; \n\t\t\t\t\t\t\t\tmoveList = getMoveListObj ( ) ; \n\t\t\t\t\t\t\t\tmoveList . add ( getMoveObj ( sq , toSq , Piece . EMPTY ) ) ; \n\t\t\t\t\t\t\t\treturn moveList ; \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\telse { \n\t\t\t\t\t\t\t\taddPawnMoves ( moveList , sq , toSq ) ; \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} \n\t\t\t\t\telse if ( toSq == pos . getEpSquare ( ) ) { \n\t\t\t\t\t\taddPawnMoves ( moveList , sq , toSq ) ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\treturn moveList ; \n\t} \n"}, {"code": "public static int writeOggPageHeader ( $F96 buf , int offset , int headerType , long granulepos , int streamSerialNumber , int pageCount , int packetCount , $F96 packetSizes ) { \n\twriteString ( buf , offset , NUM00 ) ; \n\tbuf [ offset + NUM00 ] = NUM00 ; \n\tbuf [ offset + NUM00 ] = ( byte ) headerType ; \n\twriteLong ( buf , offset + NUM00 , granulepos ) ; \n\twriteInt ( buf , offset + NUM00 , streamSerialNumber ) ; \n\twriteInt ( buf , offset + NUM00 , pageCount ) ; \n\twriteInt ( buf , offset + NUM00 , NUM00 ) ; \n\tbuf [ offset + NUM00 ] = ( byte ) packetCount ; \n\tSystem . arraycopy ( packetSizes , NUM00 , buf , offset + NUM00 , packetCount ) ; \n\treturn packetCount + NUM00 ; \n\t} \n"}, {"code": "private void beforeKey $F72 throws JSONException { \n\tScope context = peek ( ) ; \n\tif ( context == Scope . NONEMPTY_OBJECT ) $F86 ( out ) else if ( context != Scope . EMPTY_OBJECT ) $F19954 newline ( ) ; \n\treplaceTop ( Scope . DANGLING_KEY ) ; \n\t} \n"}, {"code": "private $F96 createPreviewBuffer ( Size previewSize ) { \n\tint bitsPerPixel = ImageFormat . getBitsPerPixel ( ImageFormat . NV21 ) ; \n\tlong sizeInBits = previewSize . getHeight ( ) * previewSize . getWidth ( ) * bitsPerPixel ; \n\tint bufferSize = $F96308 ( Math , sizeInBits ) + NUM00 ; \n\t$F2175 ( byteArray , bufferSize ) $F23500 ( buffer , ByteBuffer , byteArray ) if ( ! buffer . hasArray ( ) || ( buffer . array ( ) != byteArray ) ) $F4639 mBytesToByteBuffer . put ( byteArray , buffer ) ; \n\treturn byteArray ; \n\t} \n"}, {"code": "private void handleStaticSiteRequest ( StaticSiteRequest . PointRequest request , TransportNetwork transportNetwork , TaskStatistics ts ) { \n\tStaticComputer computer = new StaticComputer ( request , transportNetwork , ts ) ; \n\tif ( request . request . bucket != null ) $F21687 ( computer ) else { \n\t\ttry { \n\t\t\tPipedInputStream pis = new PipedInputStream $F72 ; \n\t\t\tPipedOutputStream pos = new PipedOutputStream ( pis ) ; \n\t\t\tfinishPriorityTask ( request , pis ) ; \n\t\t\tcomputer . write ( pos ) ; \n\t\t\t$F59 ( pos ) } \n\t\t$F5199 ( LOG , e ) } \n\tdeleteRequest ( request ) ; \n\t} \n"}, {"code": "public synchronized void removeRoom ( String room ) { \n\tif ( ! Helper . validateStream ( room ) ) $F932 $F37156 ( room ) if $F16914 ( rooms , room ) { \n\t\tunsubRoom ( room ) ; \n\t\tremoveEmotes ( room ) ; \n\t\tprevEmotesets . remove ( room ) ; \n\t\t} \n\t} \n"}, {"code": "public static double discharge ( ItemStack itemStack , double amount ) { \n\tif ( itemStack != null ) { \n\t\tif ( itemStack . getItem ( ) instanceof IEnergizedItem ) { \n\t\t\tIEnergizedItem energizedItem = ( IEnergizedItem ) itemStack . getItem ( ) ; \n\t\t\tif ( energizedItem . canSend ( itemStack ) ) { \n\t\t\t\tdouble energyToUse = Math . min ( energizedItem . getMaxTransfer ( itemStack ) , Math . min ( energizedItem . getEnergy ( itemStack ) , amount ) ) ; \n\t\t\t\tenergizedItem . setEnergy ( itemStack , energizedItem . getEnergy ( itemStack ) - energyToUse ) ; \n\t\t\t\treturn energyToUse ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1082 } \n"}, {"code": "$F238095 ( lock , this , a , count , k , p , first ) "}, {"code": "public void addAll ( final Collection elements ) { \n\tadjusting = _BOOL ; \n\t$F46709 ( oldSelection , selection ) boolean rv = selection . addAll ( elements ) ; \n\tadjusting = _BOOL ; \n\t$F308 ( rv , fireSelectionChanged , oldSelection , selection ) oldSelection = null ; \n\t} \n"}, {"code": "public boolean hasFeature ( int feature ) { \n\treturn ( ( feature >= MODE_FIRST && feature <= MODE_LAST ) || ( feature >= FEATURE_FIRST && feature <= FEATURE_LAST ) ) && ( feature == MODE_OFF || mCapabilities . get ( feature ) ) ; \n\t} \n"}, {"code": "public $F11868 backupPartitions ( UUID nodeId ) { \n\t$F86394 ( set , backup , nodeId ) return set == null ? Collections . $F2305 $F35890 : set ; \n\t} \n"}, {"code": "public $F21637 insert ( int offset , $F9738 ( str ) ) { \n\tinternal . insert ( offset , str ) ; \n\treturn this ; \n\t} \n"}, {"code": "public Loader load ( String imageUrl ) { \n\tImageUrl = imageUrl ; \n\treturn this ; \n\t} \n"}, {"code": "private void generateLegalTimesTree $F72 { \n\tint k0 = KeyEvent . KEYCODE_0 ; \n\tint k1 = KeyEvent . KEYCODE_1 ; \n\tint k2 = KeyEvent . KEYCODE_2 ; \n\tint k3 = KeyEvent . KEYCODE_3 ; \n\tint k4 = KeyEvent . KEYCODE_4 ; \n\tint k5 = KeyEvent . KEYCODE_5 ; \n\tint k6 = KeyEvent . KEYCODE_6 ; \n\tint k7 = KeyEvent . KEYCODE_7 ; \n\tint k8 = KeyEvent . KEYCODE_8 ; \n\tint k9 = KeyEvent . KEYCODE_9 ; \n\t$F58037 ( mLegalTimesTree ) $F58066 ( mIs24HourMode , minuteFirstDigit , k0 , k1 , k2 , k3 , k4 , k5 , minuteSecondDigit , k6 , k7 , k8 , k9 , firstDigit , mLegalTimesTree , secondDigit , thirdDigit , ampm , getAmOrPmKeyCode , AM , PM , fourthDigit ) } \n"}, {"code": "private void buildPTR $F72 { \n\t$F1986 temp_row ; \n\t$F28974 ( PTRA ) ; \n\tint k ; \n\tPivotTransform pt ; \n\tPTR = Matrix . identity ( n , n ) ; \n\tPTRA = PTR . getArray ( ) ; \n\t$F8935 ( k , pivotTransformQueue ) while ( k -- > NUM00 ) { \n\t\tpt = pivotTransformQueue . removeLast ( ) ; \n\t\ttemp_row = PTRA [ pt . pos1 ] ; \n\t\tPTRA [ pt . pos1 ] = PTRA [ pt . pos2 ] ; \n\t\tPTRA [ pt . pos2 ] = temp_row ; \n\t\t} \n\t} \n"}, {"code": "private static String byteToHex $F97 ( digest ) { \n\t$F83 ( builder ) for ( byte b : digest ) { \n\t\tString hex = Integer . toHexString ( NUM00 & b ) ; \n\t\tif $F1277 ( hex ) $F86 ( builder ) builder . append ( hex ) ; \n\t\t} \n\t$F92 ( builder ) } \n"}, {"code": "public String replace ( char oldChar , char newChar ) { \n\t$F1469 buffer = value ; \n\tint _offset = offset ; \n\tint _count = count ; \n\tint idx = _offset ; \n\tint last = _offset + _count ; \n\tboolean copied = _BOOL ; \n\twhile ( idx < last ) { \n\t\tif ( buffer [ idx ] == oldChar ) { \n\t\t\tif ( ! copied ) { \n\t\t\t\t$F18064 ( newBuffer , _count ) $F21535 ( System , buffer , _offset , newBuffer , _count ) buffer = newBuffer ; \n\t\t\t\tidx -= _offset ; \n\t\t\t\tlast -= _offset ; \n\t\t\t\tcopied = _BOOL ; \n\t\t\t\t} \n\t\t\tbuffer [ idx ] = newChar ; \n\t\t\t} \n\t\tidx ++ ; \n\t\t} \n\treturn copied ? new String ( NUM00 , count , buffer ) : this ; \n\t} \n"}, {"code": "public Bidi createLineBidi ( int lineStart , int lineLimit ) { \n\tAttributedString astr = new AttributedString $F580 ; \n\tBidi newBidi = new Bidi ( astr . getIterator ( ) ) ; \n\treturn bidiBase . setLine ( this , bidiBase , newBidi , newBidi . bidiBase , lineStart , lineLimit ) ; \n\t} \n"}, {"code": "public boolean isCallerValidForPackage ( Context context , int authRequirements , String packageToMatch ) { \n\tassert ! TextUtils . isEmpty ( packageToMatch ) ; \n\treturn isCallerValid ( context , authRequirements , packageToMatch ) ; \n\t} \n"}, {"code": "public void paintInternalFrameTitlePaneBackground $F147434 ( context , g , x , y , w , h ) $F72336 ( paintBackground , context , g , x , y , w , h ) "}, {"code": "public synchronized void addGraphListener ( GraphListener cl ) $F6659 ( m_graphListeners , cl ) "}, {"code": "public void restartAndInstallIfNecessary $F72 { \n\tFile patchesDir = new File ( mySdkHandler . getLocation ( ) , PatchInstallerUtil . PATCHES_DIR_NAME ) ; \n\tStudioLoggerProgressIndicator progress = new StudioLoggerProgressIndicator ( PatchInstallerFactory . class ) ; \n\tif $F3428 ( patchesDir ) { \n\t\t$F5237 subDirs = patchesDir . listFiles ( null ) ; \n\t\tfor ( File patchDir : subDirs ) { \n\t\t\tprocessPatch ( mySdkHandler . getLocation ( ) , progress , patchDir ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static $F3789 align ( $F2027 real , $F1986 pred ) { \n\tint missing = numberOfMissingLabels ( real ) ; \n\t$F1986 _real = new double [ real . length - missing ] ; \n\t$F1986 _pred = new double [ real . length - missing ] ; \n\tint offset = NUM00 ; \n\tfor ( $F1139 ( i , real ) ) { \n\t\tif ( real [ i ] == - NUM00 || pred [ i ] == - NUM00 || Double . isNaN ( pred [ i ] ) ) $F118993 ( offset ) _real [ i - offset ] = real [ i ] ; \n\t\t_pred [ i - offset ] = pred [ i ] ; \n\t\t} \n\t$F3789 $F90858 ( res ) ; \n\tres [ NUM00 ] = _real ; \n\tres [ NUM00 ] = _pred ; \n\treturn res ; \n\t} \n"}, {"code": "public static boolean isCategory ( int M_Product_Category_ID , int M_Product_ID ) { \n\tif ( M_Product_ID == NUM00 || M_Product_Category_ID == NUM00 ) return _BOOL ; \n\t$F16747 ( product , M_Product_ID ) $F10158 ( category , s_products , product ) if ( category != null ) return category . intValue ( ) == M_Product_Category_ID ; \n\tString sql = NUM00 ; \n\tPreparedStatement pstmt = null ; \n\ttry { \n\t\t$F47577 ( pstmt , DB , sql ) $F47 ( pstmt , M_Product_ID ) $F49 ( rs , pstmt ) if $F1682 ( rs ) category = new Integer ( rs . getInt ( NUM00 ) ) ; \n\t\t$F59 ( rs ) $F59 ( pstmt ) pstmt = null ; \n\t\t} \n\t$F285018 ( s_log , Level , sql , e ) $F285021 ( pstmt ) if ( category != null ) { \n\t\ts_products . put ( product , category ) ; \n\t\ts_log . fine ( NUM00 + M_Product_ID + NUM00 + category + NUM00 + M_Product_Category_ID + NUM00 + ( category . intValue ( ) == M_Product_Category_ID ) ) ; \n\t\treturn category . intValue ( ) == M_Product_Category_ID ; \n\t\t} \n\t$F68676 ( s_log , Level , M_Product_ID ) return _BOOL ; \n\t} \n"}, {"code": "public AllStatsTableMulti ( DatasetGenerator datasetGenerator , Locker locker ) { \n\t$F18062 ( ArgumentChecking , datasetGenerator ) initComponents ( ) ; \n\ttable . setDefaultRenderer ( JLabel . class , new Renderer $F72 ) ; \n\ttable . setColumnSelectionAllowed ( _BOOL ) ; \n\ttable . setRowSelectionAllowed ( _BOOL ) ; \n\ttable . setGridColor ( GRID_COLOR ) ; \n\tJTableHeader header = table . getTableHeader ( ) ; \n\theader . setReorderingAllowed ( _BOOL ) ; \n\tGUIUtilities . setTableHeader ( header ) ; \n\tmodel = new Model ( datasetGenerator ) ; \n\ttable . setModel ( model ) ; \n\tthis . locker = locker ; \n\t} \n"}, {"code": "$F5803 ( drawable , getDrawable , matrix , prevMatrix , drawableWidth , drawableHeight , scaleX , viewWidth , scaleY , viewHeight , mScaleType , CENTER , CENTER_CROP , Math , CENTER_INSIDE , FIT_CENTER , FIT_XY , redundantXSpace , redundantYSpace , matchViewWidth , matchViewHeight , isZoomed , imageRenderedAtLeastOnce , normalizedScale , prevMatchViewWidth , prevMatchViewHeight , savePreviousImageValues , m , Matrix , transX , transY , prevActualWidth , actualWidth , getImageWidth , translateMatrixAfterRotate , prevViewWidth , prevActualHeight , actualHeight , getImageHeight , prevViewHeight , fixTrans , setImageMatrix ) "}, {"code": "public void append ( File file , FTPDataTransferListener listener ) throws IllegalStateException , FileNotFoundException , IOException , FTPIllegalReplyException , FTPException , FTPDataTransferException , FTPAbortedException { \n\tif $F1906 ( file ) { \n\t\tthrow new FileNotFoundException $F89450 ( file ) ; \n\t\t} \n\tInputStream inputStream = null ; \n\ttry { \n\t\t$F5335 ( inputStream , file ) } \n\tcatch ( IOException e ) { \n\t\tthrow new FTPDataTransferException ( e ) ; \n\t\t} \n\ttry { \n\t\tappend ( file . getName ( ) , inputStream , NUM00 , listener ) ; \n\t\t} \n\tcatch ( IllegalStateException e ) { \n\t\tthrow e ; \n\t\t} \n\t$F8012 ( e ) catch ( FTPIllegalReplyException e ) { \n\t\tthrow e ; \n\t\t} \n\tcatch ( FTPException e ) { \n\t\tthrow e ; \n\t\t} \n\tcatch ( FTPDataTransferException e ) { \n\t\tthrow e ; \n\t\t} \n\tcatch ( FTPAbortedException e ) { \n\t\tthrow e ; \n\t\t} \n\tfinally { \n\t\t$F73912 ( inputStream ) } \n\t} \n"}, {"code": "public $F3803 provideWhiteList $F72 { \n\t$F127233 ( whiteList ) $F18793 ( whiteList ) return whiteList ; \n\t} \n"}, {"code": "public static boolean isScopedName ( String name ) { \n\treturn $F412 ( name ) ; \n\t} \n"}, {"code": "public Input ( IoBuffer buf ) { \n\tsuper ( buf ) ; \n\tamf3_mode = NUM00 ; \n\t$F30598 ( stringReferences ) classReferences = new ArrayList < ClassReference > $F72 ; \n\t} \n"}, {"code": "public static Properties loadConfigFile ( String path ) { \n\tProperties property = null ; \n\t$F1705 ( file , path ) if ( $F302235 ( file ) ) { \n\t\ttry { \n\t\t\t$F65625 ( property ) property . load ( new FileReader $F89450 ( file ) ) ; \n\t\t\t} \n\t\t$F35546 ( e ) $F12241 ( e ) } \n\treturn property ; \n\t} \n"}, {"code": "protected void illegalMessageReceived ( OFMessage m ) { \n\tString msg = getSwitchStateMessage ( m , NUM00 ) ; \n\tthrow new SwitchStateException ( msg ) ; \n\t} \n"}, {"code": "protected void sprint ( boolean booleanField ) $F45719 ( sprint , String , booleanField ) "}, {"code": "protected static void toEPLViews ( StringWriter writer , $F183286 views ) { \n\tif ( ( views != null ) && $F6887 ( views ) ) { \n\t\t$F3410 ( writer ) String delimiter = NUM00 ; \n\t\tfor ( View view : views ) { \n\t\t\twriter . write ( delimiter ) ; \n\t\t\tview . toEPL ( writer ) ; \n\t\t\tdelimiter = NUM00 ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void removeDatabaseListeners $F72 $F9096 ( databaseListeners ) "}, {"code": "private AudioMapType loadAudioMapXml ( File audioMapFile ) throws XmlParsingException , FileNotFoundException { \n\tif $F48790 ( audioMapFile ) { \n\t\tthrow $F135029 ( String , audioMapFile ) ; \n\t\t} \n\treturn XmlParser . parse ( audioMapFile , $F8640 ( AUDIOMAP_XML_SCHEME ) , AUDIOMAP_PACKAGE , AudioMapType . class ) ; \n\t} \n"}, {"code": "public void addGenericAttr ( GenericAttr g ) $F6659 ( generic , g ) "}, {"code": "private List < FahrzeitEvent > addFahrtInfoToFahrzeitEvents ( List < FahrtEvent > fahrtEvents , List < FahrzeitEvent > fahrzeitEvents , boolean keepFahrzeitEventsWithoutFahrtEvent ) { \n\tList < FahrzeitEvent > fahrzeitEventsOut = new LinkedList < FahrzeitEvent > $F72 ; \n\tMap < String , FahrtEvent > rblDateKursDateTimeIst2FahrtEventMap = new HashMap < String , FahrtEvent > $F72 ; \n\t$F205052 ( searchStrings ) for ( FahrtEvent fahrtEvent : fahrtEvents ) { \n\t\tString searchId = String . valueOf ( fahrtEvent . getRblDate ( ) ) + String . valueOf ( fahrtEvent . getKurs ( ) ) + fahrtEvent . getDepartureDateIst ( ) + fahrtEvent . getDepartureTimeIst ( ) ; \n\t\tif $F105 ( searchStrings , searchId ) $F34420 ( log , searchId ) else { \n\t\t\tsearchStrings . add ( searchId ) ; \n\t\t\trblDateKursDateTimeIst2FahrtEventMap . put ( searchId , fahrtEvent ) ; \n\t\t\t} \n\t\t} \n\tint numberOfMissingFahrtEvents = NUM00 ; \n\tfor ( FahrzeitEvent fahrzeitEvent : fahrzeitEvents ) { \n\t\tString searchId = String . valueOf ( fahrzeitEvent . getRblDate ( ) ) + String . valueOf ( fahrzeitEvent . getKurs ( ) ) + fahrzeitEvent . getDepartureDateIst ( ) + fahrzeitEvent . getDepartureTimeIst ( ) ; \n\t\tFahrtEvent fahrtEvent = rblDateKursDateTimeIst2FahrtEventMap . get ( searchId ) ; \n\t\tif ( fahrtEvent == null ) { \n\t\t\tnumberOfMissingFahrtEvents ++ ; \n\t\t\t$F46023 ( keepFahrzeitEventsWithoutFahrtEvent , fahrzeitEventsOut , fahrzeitEvent ) } \n\t\telse { \n\t\t\tfahrzeitEvent . add ( fahrtEvent ) ; \n\t\t\tfahrzeitEventsOut . add ( fahrzeitEvent ) ; \n\t\t\t} \n\t\t} \n\t$F60651 ( log , numberOfMissingFahrtEvents ) log . info ( $F10533 ( fahrzeitEventsOut ) ) ; \n\treturn fahrzeitEventsOut ; \n\t} \n"}, {"code": "private static Object newInstanceNoServiceLoader $F60993 ( providerClass ) { \n\tif ( System . getSecurityManager ( ) == null ) $F1337 try { \n\t\tMethod creationMethod = providerClass . getDeclaredMethod ( NUM00 ) ; \n\t\treturn creationMethod . invoke ( null , ( $F131 ) null ) ; \n\t\t} \n\tcatch ( NoSuchMethodException exc ) $F1337 catch ( Exception exc ) $F1337 } \n"}, {"code": "private void checkUUID ( String uuid , int code ) { \n\tcheckHash ( UUID . fromString ( uuid ) , code ) ; \n\t} \n"}, {"code": "$F1 protected void prepareWrite ( WritableByteChannel channel ) throws Exception { \n\tos = Channels . newOutputStream ( channel ) ; \n\t} \n"}, {"code": "public void run $F72 { \n\ttry { \n\t\tboolean cleanRemoteSessions = _BOOL ; \n\t\tsynchronized ( this ) { \n\t\t\tCollection < StateInfo > $F204 ( infos ) ; \n\t\t\t$F2966 ( infos , servers ) $F2966 ( infos , sites ) for ( StateInfo info : infos ) { \n\t\t\t\tinfo . isUp = checkServerUp ( info ) ; \n\t\t\t\tif ( ! info . isUp ) { \n\t\t\t\t\t$F52932 ( down , info ) } \n\t\t\t\telse { \n\t\t\t\t\tif ( $F1030 ( down ) && down . remove ( info . id ) ) { \n\t\t\t\t\t\tcleanRemoteSessions = _BOOL ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\tif ( cleanRemoteSessions ) { \n\t\t\tforeignSessionHandler . cleanUpRemoteSessions ( ) ; \n\t\t\t} \n\t\t} \n\tcatch ( Exception ex ) $F36592 ( sessionDebug , ex ) } \n"}, {"code": "private void writeObject $F9338 ( p_stream ) throws $F3258 { \n\t$F9339 ( p_stream ) p_stream . writeInt ( trace_angle_restriction . get_no ( ) ) ; \n\t} \n"}, {"code": "$F1431 public LiteralExtensionIV createIV ( final Value value ) { \n\tif ( value instanceof Literal == _BOOL ) $F10056 final Literal lit = ( Literal ) value ; \n\tfinal AbstractLiteralIV delegate = new PackedLongIV ( Long . parseLong ( lit . getLabel ( ) ) ) ; \n\treturn new LiteralExtensionIV ( delegate , datatype . getIV ( ) ) ; \n\t} \n"}, {"code": "public Builder addHeader ( String name , String value ) { \n\theaders . add ( new Header ( name , value ) ) ; \n\treturn this ; \n\t} \n"}, {"code": "public void add ( LeafAtom atom ) $F207 ( leafChildren , atom ) "}, {"code": "$F25527 ( redundantOpCompactThreshold , redundantOpCount , lruEntries ) "}, {"code": "public static double normalCDF ( double x ) { \n\treturn ( NUM00 * ( NUM00 + ( erf ( x / ( Math . sqrt ( NUM00 ) ) ) ) ) ) ; \n\t} \n"}, {"code": "public void removeResult ( String name ) { \n\tStringBuffer buff = m_Results . get ( name ) ; \n\tif ( buff != null ) { \n\t\tm_Results . remove ( name ) ; \n\t\tm_Model . removeElement ( name ) ; \n\t\tm_Objs . remove ( name ) ; \n\t\t$F58463 ( System ) } \n\t} \n"}, {"code": "private void addEntry $F72 { \n\tfilterModel . addNewEntry ( ) ; \n\textentModel . populate ( null ) ; \n\tremoveFTCButton . setEnabled ( _BOOL ) ; \n\taddExtentButton . setEnabled ( _BOOL ) ; \n\tremoveExtentButton . setEnabled ( _BOOL ) ; \n\t} \n"}, {"code": "public void testCase22 $F72 { \n\t$F3013 byte $F3014 = { \n\t\tNUM00 , NUM00 , NUM00 , NUM00 , - NUM00 , NUM00 } \n\t; \n\tint aSign = NUM00 ; \n\tint bSign = - NUM00 ; \n\t$F3023 ( aNumber , aSign , aBytes ) $F3023 ( bNumber , bSign , bBytes ) try { \n\t\taNumber . mod ( bNumber ) ; \n\t\tfail ( NUM00 ) ; \n\t\t} \n\t$F174375 } \n"}, {"code": "$F3789 CalcTheoreticalSVValues ( Variogram vario , double MaximumDisplyDistanst ) { \n\t$F3789 res = new double [ NUM00 * NumberOfLags + NUM00 ] [ NUM00 ] ; \n\tfor ( $F1139 ( i , res ) ) { \n\t\tres [ i ] [ NUM00 ] = i * MaximumDisplyDistanst / ( NUM00 * NumberOfLags ) ; \n\t\tswitch ( vario . Type ) { \n\t\t\tcase EXPONENTIAL : if ( res [ i ] [ NUM00 ] != NUM00 ) { \n\t\t\t\tres [ i ] [ NUM00 ] = vario . Nugget + vario . Sill * ( NUM00 - Math . exp ( - res [ i ] [ NUM00 ] / vario . Range ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tres [ i ] [ NUM00 ] = vario . Nugget ; \n\t\t\t\t} \n\t\t\t$F597 case GAUSSIAN : if ( res [ i ] [ NUM00 ] != NUM00 ) { \n\t\t\t\tres [ i ] [ NUM00 ] = vario . Nugget + vario . Sill * ( NUM00 - Math . exp ( - NUM00 * ( Math . pow ( res [ i ] [ NUM00 ] , NUM00 ) ) / ( Math . pow ( vario . Range , NUM00 ) ) ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tres [ i ] [ NUM00 ] = vario . Nugget ; \n\t\t\t\t} \n\t\t\t$F597 case SPHERICAL : if ( res [ i ] [ NUM00 ] > vario . Range ) { \n\t\t\t\tres [ i ] [ NUM00 ] = vario . Nugget + vario . Sill ; \n\t\t\t\t} \n\t\t\telse if ( res [ i ] [ NUM00 ] > NUM00 && res [ i ] [ NUM00 ] <= vario . Range ) { \n\t\t\t\tres [ i ] [ NUM00 ] = vario . Nugget + vario . Sill * ( NUM00 * res [ i ] [ NUM00 ] / vario . Range - NUM00 * Math . pow ( ( res [ i ] [ NUM00 ] / vario . Range ) , NUM00 ) ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tres [ i ] [ NUM00 ] = vario . Nugget ; \n\t\t\t\t} \n\t\t\t$F597 } \n\t\t} \n\treturn res ; \n\t} \n"}, {"code": "public DExportPrivateKeyOpenSsl ( JFrame parent , String entryAlias , PasswordQualityConfig passwordQualityConfig ) { \n\t$F36748 ( super , parent , Dialog ) this . entryAlias = entryAlias ; \n\tthis . passwordQualityConfig = passwordQualityConfig ; \n\tinitComponents ( ) ; \n\t} \n"}, {"code": "public BigDecimal sum ( String sqlExpression ) $F8587 ( aggregate , sqlExpression , AGGREGATE_SUM ) "}, {"code": "private void smoothSnapToPosition ( int scrollY , int availableScrollHeight , AlphabeticalAppsList . FastScrollSectionInfo info ) { \n\tmRv . removeCallbacks ( mSmoothSnapNextFrameRunnable ) ; \n\tmRv . removeCallbacks ( mFastScrollToTargetSectionRunnable ) ; \n\ttrackAllChildViews ( ) ; \n\tif ( mHasFastScrollTouchSettled ) { \n\t\tmCurrentFastScrollSection = info . sectionName ; \n\t\tmTargetFastScrollSection = null ; \n\t\tupdateTrackedViewsFastScrollFocusState ( ) ; \n\t\t} \n\telse { \n\t\tmCurrentFastScrollSection = null ; \n\t\tmTargetFastScrollSection = info . sectionName ; \n\t\tmHasFastScrollTouchSettled = _BOOL ; \n\t\tupdateTrackedViewsFastScrollFocusState ( ) ; \n\t\tmRv . postDelayed ( mFastScrollToTargetSectionRunnable , mHasFastScrollTouchSettledAtLeastOnce ? REPEAT_TOUCH_SETTLING_DURATION : INITIAL_TOUCH_SETTLING_DURATION ) ; \n\t\t} \n\tint newScrollY = Math . min ( availableScrollHeight , mRv . getPaddingTop ( ) + mRv . getTop ( info . fastScrollToItem . rowIndex ) ) ; \n\tint numFrames = mFastScrollFrames . length ; \n\tfor ( $F119 ( i , numFrames ) ) { \n\t\tmFastScrollFrames [ i ] = ( newScrollY - scrollY ) / numFrames ; \n\t\t} \n\tmFastScrollFrameIndex = NUM00 ; \n\tmRv . postOnAnimation ( mSmoothSnapNextFrameRunnable ) ; \n\t} \n"}, {"code": "$F1 public int calculateOffsetX $F72 { \n\treturn ( int ) ( Math . cos ( this . angle ) * this . distance ) - this . shadowSize ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "protected void onFinish $F72 { \n\tmErrorListener = null ; \n\t} \n"}, {"code": "private $F4203 void runTestWrite ( XmlWriter $F4203 writer , $F5675 bundle , $F3803 expected ) throws Exception { \n\tFile tmpFile = tmpFolder . newFile ( NUM00 ) ; \n\ttry $F64338 ( fileOutputStream , tmpFile ) { \n\t\twriteBundle ( writer , bundle , fileOutputStream . getChannel ( ) ) ; \n\t\t} \n\t$F24645 ( lines ) try ( BufferedReader reader = new BufferedReader $F434 ( tmpFile ) ) { \n\t\tfor ( $F589 ) { \n\t\t\t$F27015 ( line , reader ) $F32472 ( line ) $F1382 ( line ) if $F4012 ( line ) $F207 ( lines , line ) } \n\t\tassertEquals ( expected , lines ) ; \n\t\t} \n\t} \n"}, {"code": "public String addDays ( Object odays , String format ) { \n\t$F41834 ( days , FunctionHandler , odays ) $F4377 ( now , Calendar ) now . add ( Calendar . DAY_OF_YEAR , days ) ; \n\tDateFormat formatter = getFormatter ( format ) ; \n\t$F13440 ( formatter , now ) } \n"}, {"code": "private static File createTempFile ( Context context , $F5466 String mimeType ) throws IOException { \n\tFile externalCacheDir = context . getExternalCacheDir ( ) ; \n\tFile internalCacheDir = context . getCacheDir ( ) ; \n\tFile cacheDir ; \n\tif ( externalCacheDir == null && internalCacheDir == null ) $F14525 if ( externalCacheDir == null ) { \n\t\tcacheDir = internalCacheDir ; \n\t\t} \n\telse if ( internalCacheDir == null ) { \n\t\tcacheDir = externalCacheDir ; \n\t\t} \n\telse { \n\t\tcacheDir = externalCacheDir . getFreeSpace ( ) > internalCacheDir . getFreeSpace ( ) ? externalCacheDir : internalCacheDir ; \n\t\t} \n\treturn File . createTempFile ( TEMP_FILE_PREFIX , getFileExtensionForType ( mimeType ) , cacheDir ) ; \n\t} \n"}, {"code": "$F1 public $F987 listOptions $F72 { \n\t$F994 ( newVector ) $F9007 ( newVector ) $F9007 ( newVector ) $F1000 ( newVector ) $F1006 ( newVector ) $F1007 ( newVector ) } \n"}, {"code": "public boolean removeEntry ( int xIndex , int dataSetIndex ) { \n\tif $F6389 ( dataSetIndex , mDataSets ) return _BOOL ; \n\t$F6391 ( dataSet , mDataSets , dataSetIndex ) Entry e = dataSet . getEntryForXIndex ( xIndex ) ; \n\treturn removeEntry ( e , dataSetIndex ) ; \n\t} \n"}, {"code": "private void runReadTest ( $F96 input , CompressionMode mode ) throws IOException $F34231 ( runReadTest , input , mode ) "}, {"code": "public static void close ( $F5466 Context rsrc , $F5466 IgniteLogger log ) { \n\tif ( rsrc != null ) try $F881 ( rsrc ) catch ( NamingException e ) { \n\t\twarn ( $F56761 ( log , e ) ) ; \n\t\t} \n\t} \n"}, {"code": "void removeEQ ( Object o ) { \n\t$F677 ( lock , this ) $F790 ( lock ) try { \n\t\t$F131 array = queue ; \n\t\tfor ( int i = NUM00 , n = size ; \n\t\ti < n ; \n\t\ti ++ ) { \n\t\t\tif ( o == array [ i ] ) $F87181 ( removeAt , i ) } \n\t\t} \n\t$F796 ( lock ) } \n"}, {"code": "public WritableRaster createCompatibleWritableRaster ( int w , int h ) { \n\tif ( w <= NUM00 || h <= NUM00 ) { \n\t\tthrow new RasterFormatException ( NUM00 + ( ( w <= NUM00 ) ? NUM00 : NUM00 ) ) ; \n\t\t} \n\tSampleModel sm = sampleModel . createCompatibleSampleModel ( w , h ) ; \n\treturn new IntegerInterleavedRaster ( sm , $F69159 ) ; \n\t} \n"}, {"code": "$F221804 ( d , imageView , getImageView , viewWidth , getImageViewWidth , viewHeight , getImageViewHeight , drawableWidth , drawableHeight , mBaseMatrix , widthScale , heightScale , mScaleType , ScaleType , scale , Math , mTempSrc , mTempDst , FIT_CENTER , ScaleToFit , FIT_START , FIT_END , FIT_XY , resetMatrix ) "}, {"code": "public static $F806 schedulerCommandArgs ( Config config , Config runtime , $F3807 freePorts ) { \n\tif $F10255 ( freePorts , PORTS_REQUIRED_FOR_SCHEDULER ) $F11389 for ( int port : freePorts ) { \n\t\t$F201598 ( port ) } \n\tint httpPort = freePorts . get ( NUM00 ) ; \n\t$F24645 ( commands ) $F18793 ( commands ) commands . add ( Context . cluster ( config ) ) ; \n\t$F18793 ( commands ) commands . add ( Context . role ( config ) ) ; \n\t$F18793 ( commands ) commands . add ( Context . environ ( config ) ) ; \n\t$F18793 ( commands ) commands . add ( Context . topologyName ( config ) ) ; \n\t$F18793 ( commands ) commands . add ( Context . topologyBinaryFile ( config ) ) ; \n\t$F18793 ( commands ) commands . add ( Integer . toString ( httpPort ) ) ; \n\t$F16105 ( commands ) } \n"}, {"code": "public DocumentAnalysisRequest addDocument ( SolrInputDocument doc ) $F18637 ( documents , doc , this ) "}, {"code": "public final Key doPhase ( Key key , boolean lastPhase ) throws InvalidKeyException , IllegalStateException { \n\tchooseFirstProvider ( ) ; \n\treturn spi . engineDoPhase ( key , lastPhase ) ; \n\t} \n"}, {"code": "public SimpleSystemPermissionSet $F72 $F845 "}, {"code": "$F1 public final void addBezierCurveY ( final float x , final float y , final float x3 , final float y3 ) { \n\telements . add ( new QuadCurveTo ( x , y , x3 , y3 ) ) ; \n\tcurrentPos [ NUM00 ] = x3 ; \n\tcurrentPos [ NUM00 ] = y3 ; \n\t} \n"}, {"code": "public void readBucketsFromPrefs $F72 { \n\tSharedPreferences prefs = mContext . getSharedPreferences ( SHARED_PREFS , NUM00 ) ; \n\t$F2689 buckets = prefs . getStringSet ( PREF_BUCKETS_IDS , new $F32030 $F72 ) ; \n\t$F725 ( mBuckets ) for ( String bucketId : buckets ) { \n\t\tAutoMixBucket bucket = restoreBucketFromId ( bucketId ) ; \n\t\tmBuckets . add ( bucket ) ; \n\t\t} \n\t} \n"}, {"code": "protected int nextChar $F72 throws IOException { \n\tfReadFromBuffer = $F4012 ( fBuffer ) ; \n\tif ( fReadFromBuffer ) { \n\t\t$F52837 ( ch , fBuffer , fIndex ) if $F11984 ( fIndex , fBuffer ) { \n\t\t\t$F4910 ( fBuffer ) fIndex = NUM00 ; \n\t\t\t} \n\t\treturn ch ; \n\t\t} \n\tint ch = fCharAfterWhiteSpace ; \n\tif ( ch == - NUM00 ) $F145798 ( ch , fReader ) if ( fSkipWhiteSpace && $F136808 ( Character , ch ) ) { \n\t\tdo $F145798 ( ch , fReader ) while ( $F136808 ( Character , ch ) ) ; \n\t\tif ( ch != - NUM00 ) { \n\t\t\tfCharAfterWhiteSpace = ch ; \n\t\t\t$F1278 } \n\t\t} \n\telse $F44867 ( fCharAfterWhiteSpace ) return ch ; \n\t} \n"}, {"code": "$F1 public void acceptAppOffer ( Offer offer ) { \n\tint index = getIndex ( offer , appOffers ) ; \n\tif ( index != - NUM00 ) { \n\t\tappOffers . remove ( index ) ; \n\t\tappOfferStream . onNext ( offer ) ; \n\t\t} \n\tindex = getIndex ( offer , acceptedOffers ) ; \n\tif ( index == - NUM00 ) $F207 ( acceptedOffers , offer ) } \n"}, {"code": "public boolean verify ( PublicKey key , String sigProvider ) throws NoSuchAlgorithmException , NoSuchProviderException , CMSException { \n\treturn verify ( key , CMSUtils . getProvider ( sigProvider ) ) ; \n\t} \n"}, {"code": "private void injectDependencies $F72 { \n\tEasyMVPApplication easyMVPApplication = ( EasyMVPApplication ) getApplication ( ) ; \n\t$F6689 activityScopeModules = $F89491 ( getModules ) ? getModules ( ) : $F203 ; \n\tactivityScopeModules . add ( new ActivityModule ( this ) ) ; \n\tactivityScopeGraph = easyMVPApplication . buildGraphWithAditionalModules ( activityScopeModules ) ; \n\tinject ( this ) ; \n\t} \n"}, {"code": "public void writeRequest $F72 { \n\t$F38008 ( lock ) synchronized ( lock ) { \n\t\tsynchronized ( this ) { \n\t\t\tboolean goAheadWithWrite = $F10470 ( writerLocks ) && currentReaders == NUM00 && currentWriters == NUM00 ; \n\t\t\tif ( goAheadWithWrite ) { \n\t\t\t\t++ currentWriters ; \n\t\t\t\t$F665 } \n\t\t\twriterLocks . addLast ( lock ) ; \n\t\t\t} \n\t\t$F29028 ( lock ) } \n\t} \n"}, {"code": "public long readLocalDate $F72 throws IOException { \n\texpectStartTag ( NUM00 ) ; \n\tif ( localCalendar == null ) $F90333 ( localCalendar , Calendar ) long value = parseDate ( localCalendar ) ; \n\texpectEndTag ( NUM00 ) ; \n\treturn value ; \n\t} \n"}, {"code": "public void removeSelectionListener ( final SelectionListener listener ) { \n\tcheckWidget ( ) ; \n\tlisteners . remove ( listener ) ; \n\t} \n"}, {"code": "private void writeHex ( int i ) throws IOException { \n\tint cursor = NUM00 ; \n\tdo { \n\t\thex [ -- cursor ] = HEX_DIGITS [ i & NUM00 ] ; \n\t\t} \n\twhile ( ( i >>>= NUM00 ) != NUM00 ) ; \n\tsocketOut . write ( hex , cursor , hex . length - cursor ) ; \n\t} \n"}, {"code": "private synchronized String readInputStream ( InputStreamReader inputStreamReader ) throws IOException , BadLocationException { \n\tBufferedReader bufferedReader = null ; \n\ttry { \n\t\t$F26608 ( bufferedReader , inputStreamReader ) String newLine = NUM00 ; \n\t\t$F280 ( sb ) String line ; \n\t\twhile $F443 ( line , bufferedReader ) { \n\t\t\tsb . append ( line + newLine ) ; \n\t\t\t} \n\t\t$F92 ( sb ) } \n\tfinally { \n\t\tif ( null != bufferedReader ) $F59 ( bufferedReader ) if ( null != inputStreamReader ) $F59 ( inputStreamReader ) } \n\t} \n"}, {"code": "private $F20526 typeParameters ( List < TypeParameter > tpl , Declaration from ) { \n\tif $F1032 ( tpl ) { \n\t\t$F20526 $F719 ( l , tpl ) ; \n\t\tfor ( TypeParameter tp : tpl ) $F18351 ( l , typeParameterMap , tp , from ) return l ; \n\t\t} \n\t$F1274 } \n"}, {"code": "long freeSpaceUnix ( String path , boolean kb , boolean posix , long timeout ) throws IOException { \n\tif $F1277 ( path ) $F825 String flags = NUM00 ; \n\t$F70739 ( kb , flags ) $F70739 ( posix , flags ) $F806 cmdAttribs = $F20 ( flags ) ? $F2707 ( DF , flags , path ) : $F17191 ( DF , path ) ; \n\t$F3803 lines = performCommand ( cmdAttribs , NUM00 , timeout ) ; \n\tif $F6214 ( lines ) { \n\t\tthrow new IOException ( NUM00 + DF + NUM00 + NUM00 + path + NUM00 + lines ) ; \n\t\t} \n\t$F13410 ( line2 , lines ) $F17727 ( tok , line2 ) if ( tok . countTokens ( ) < NUM00 ) { \n\t\tif ( tok . countTokens ( ) == NUM00 && $F14764 ( lines ) ) { \n\t\t\t$F13410 ( line3 , lines ) $F49888 ( tok , line3 ) } \n\t\telse { \n\t\t\tthrow new IOException ( NUM00 + DF + NUM00 + NUM00 + path + NUM00 ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\t$F89223 ( tok ) } \n\t$F89223 ( tok ) $F89223 ( tok ) $F8095 ( freeSpace , tok ) return parseBytes ( freeSpace , path ) ; \n\t} \n"}, {"code": "$F21985 ( is , bytes , DEFAULT_BUFFER_SIZE , closeSilently ) "}, {"code": "private static boolean withinTwo ( INode n , INode goal ) { \n\tDoubleLinkedList $F62805 moves = n . validMoves ( ) ; \n\tfor ( Iterator $F62805 it = moves . iterator ( ) ; \n\tit . hasNext ( ) ; \n\t) { \n\t\tIMove move = it . next ( ) ; \n\t\tINode successor = n . copy ( ) ; \n\t\tmove . execute ( successor ) ; \n\t\tif ( withinOne ( successor , goal ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public PennTreebankReader ( String treebankHome , $F806 sections , String parseViewName ) throws Exception { \n\tsuper ( CorpusReaderConfigurator . buildResourceManager ( PENN_TREEBANK_WSJ , treebankHome ) ) ; \n\tthis . parseViewName = parseViewName ; \n\tcombinedWSJHome = treebankHome ; \n\tif ( sections == null ) this . sections = IOUtils . lsDirectories ( combinedWSJHome ) ; \n\telse { \n\t\tthis . sections = new String [ sections . length ] ; \n\t\t$F833 ( System , sections , this ) } \n\tupdateCurrentFiles ( ) ; \n\t} \n"}, {"code": "$F1 public void unwrapSSLv2 $F97 ( bytes ) $F5795 ( unexpectedMessage ) "}, {"code": "$F1 public void closeWrite $F72 throws IOException { \n\t$F7254 ( _isCloseWrite ) _isCloseWrite = _BOOL ; \n\tOutputStream os = _os ; \n\t_os = null ; \n\tboolean isShutdownOutput = _BOOL ; \n\tif ( _s instanceof SSLSocket ) { \n\t\tlog . finer ( L . l ( NUM00 ) ) ; \n\t\t$F665 } \n\telse if ( _s != null ) { \n\t\ttry { \n\t\t\t$F124256 ( _s ) isShutdownOutput = _BOOL ; \n\t\t\t} \n\t\tcatch ( UnsupportedOperationException e ) { \n\t\t\t$F120634 ( log , Level , e ) } \n\t\tcatch ( Exception e ) { \n\t\t\tlog . finer ( e . toString ( ) ) ; \n\t\t\t$F120634 ( log , Level , e ) } \n\t\t} \n\tif ( ! isShutdownOutput && os != null ) $F881 ( os ) } \n"}, {"code": "protected void applyRowChangeData ( RowChangeData data , List < ReplOption > options , String sourceDbmsType ) throws ReplicatorException { \n\tif ( options != null ) { \n\t\ttry { \n\t\t\tif ( applySessionVariables ( null , options ) ) { \n\t\t\t\t$F35060 ( logger ) executePendingBatch ( ) ; \n\t\t\t\t$F180903 ( statement ) statement . clearBatch ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( SQLException e ) { \n\t\t\tthrow new ApplierException ( NUM00 , e ) ; \n\t\t\t} \n\t\t} \n\tList < ReplOption > rowOptions = data . getOptions ( ) ; \n\tif ( rowOptions != null ) { \n\t\ttry { \n\t\t\tif ( applySessionVariables ( null , rowOptions ) ) { \n\t\t\t\t$F35060 ( logger ) executePendingBatch ( ) ; \n\t\t\t\t$F180903 ( statement ) statement . clearBatch ( ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( SQLException e ) { \n\t\t\tthrow new ApplierException ( NUM00 , e ) ; \n\t\t\t} \n\t\t} \n\tfor ( OneRowChange row : data . getRowChanges ( ) ) { \n\t\tapplyOneRowChangePrepared ( row , sourceDbmsType ) ; \n\t\t} \n\t} \n"}, {"code": "$F99425 ( os , writeInt , CACHE_MAGIC , writeString , key , etag , writeLong , serverDate , lastModified , ttl , softTtl , writeStringStringMap , responseHeaders , _BOOL , VolleyLog , e ) "}, {"code": "public NamedList normalize ( NamedList input ) { \n\t$F36382 ( input ) for ( $F2277 ( i , input ) ) { \n\t\tObject v = input . getVal ( i ) ; \n\t\tif ( v instanceof NamedList ) { \n\t\t\tinput . setVal ( i , normalize ( ( NamedList ) v ) ) ; \n\t\t\t} \n\t\t} \n\treturn input ; \n\t} \n"}, {"code": "$F38759 ( isInfinite , value ) "}, {"code": "String inprogressZNodeName $F46828 ( ledgerId , firstTxId , logSegmentSeqNo ) { \n\tif ( DistributedLogConstants . LOGSEGMENT_NAME_VERSION == conf . getLogSegmentNameVersion ( ) ) { \n\t\treturn String . format ( NUM00 , DistributedLogConstants . INPROGRESS_LOGSEGMENT_PREFIX , logSegmentSeqNo ) ; \n\t\t} \n\telse { \n\t\treturn DistributedLogConstants . INPROGRESS_LOGSEGMENT_PREFIX + NUM00 + Long . toString ( firstTxId , NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "public synchronized void add ( double value ) { \n\tadd ( $F37513 ( mCategories ) , value ) ; \n\t} \n"}, {"code": "public void receiveRedundancy $F72 { \n\ttry { \n\t\twhile ( _BOOL ) { \n\t\t\tif ( mIn . read ( mInBuffer ) <= NUM00 ) $F665 } \n\t\t} \n\t$F29052 } \n"}, {"code": "void outputDocTypeDecl ( String name , boolean closeDecl ) throws SAXException { \n\t$F32367 ( m_cdataTagOpen , closeCDATA ) try { \n\t\t$F42851 ( writer , m_writer ) $F3410 ( writer ) writer . write ( name ) ; \n\t\tString doctypePublic = getDoctypePublic ( ) ; \n\t\tif ( null != doctypePublic ) $F74647 ( writer , doctypePublic ) String doctypeSystem = getDoctypeSystem ( ) ; \n\t\tif ( null != doctypeSystem ) { \n\t\t\tif ( null == doctypePublic ) $F3410 ( writer ) else $F3410 ( writer ) writer . write ( doctypeSystem ) ; \n\t\t\tif ( closeDecl ) { \n\t\t\t\t$F3410 ( writer ) $F11584 ( writer , m_lineSep , m_lineSepLen ) closeDecl = _BOOL ; \n\t\t\t\t} \n\t\t\telse $F3410 ( writer ) } \n\t\t} \n\t$F6289 ( e ) } \n"}, {"code": "MVStore ( $F530 config ) { \n\t$F100553 ( o , config ) this . compressionLevel = o == null ? NUM00 : ( Integer ) o ; \n\t$F28495 ( fileName , config ) $F178035 ( o , config ) if ( o == null ) { \n\t\tpageSplitSize = fileName == null ? NUM00 * NUM00 : NUM00 * NUM00 ; \n\t\t} \n\telse { \n\t\tpageSplitSize = ( Integer ) o ; \n\t\t} \n\t$F178035 ( o , config ) this . backgroundExceptionHandler = ( UncaughtExceptionHandler ) o ; \n\tmeta = new MVMap $F2538 ( StringDataType . INSTANCE , StringDataType . INSTANCE ) ; \n\t$F530 c = New . hashMap ( ) ; \n\t$F140284 ( c ) $F545 ( c , currentVersion ) meta . init ( this , c ) ; \n\tfileStore = ( FileStore ) config . get ( NUM00 ) ; \n\tif ( fileName == null && fileStore == null ) { \n\t\tcache = null ; \n\t\tcacheChunkRef = null ; \n\t\t$F665 } \n\tif ( fileStore == null ) { \n\t\tfileStoreIsProvided = _BOOL ; \n\t\tfileStore = new FileStore $F72 ; \n\t\t} \n\telse { \n\t\tfileStoreIsProvided = _BOOL ; \n\t\t} \n\tretentionTime = fileStore . getDefaultRetentionTime ( ) ; \n\tboolean readOnly = config . containsKey ( NUM00 ) ; \n\t$F178035 ( o , config ) int mb = o == null ? NUM00 : ( Integer ) o ; \n\tif ( mb > NUM00 ) { \n\t\tCacheLongKeyLIRS . Config cc = new CacheLongKeyLIRS . Config $F72 ; \n\t\tcc . maxMemory = mb * NUM00 * NUM00 ; \n\t\t$F178035 ( o , config ) if ( o != null ) { \n\t\t\tcc . segmentCount = ( Integer ) o ; \n\t\t\t} \n\t\tcache = new CacheLongKeyLIRS < Page > ( cc ) ; \n\t\tcc . maxMemory /= NUM00 ; \n\t\tcacheChunkRef = new CacheLongKeyLIRS < PageChildren > ( cc ) ; \n\t\t} \n\t$F178035 ( o , config ) int kb = o == null ? NUM00 : ( Integer ) o ; \n\tautoCommitMemory = kb * NUM00 * NUM00 ; \n\t$F178035 ( o , config ) autoCompactFillRate = o == null ? NUM00 : ( Integer ) o ; \n\t$F1469 encryptionKey = ( $F1469 ) config . get ( NUM00 ) ; \n\ttry { \n\t\tif ( ! fileStoreIsProvided ) { \n\t\t\tfileStore . open ( fileName , readOnly , encryptionKey ) ; \n\t\t\t} \n\t\tif $F10471 ( fileStore ) { \n\t\t\tcreationTime = getTimeAbsolute ( ) ; \n\t\t\tlastCommitTime = creationTime ; \n\t\t\t$F140284 ( storeHeader ) $F545 ( storeHeader , BLOCK_SIZE ) $F545 ( storeHeader , FORMAT_WRITE ) $F545 ( storeHeader , creationTime ) writeStoreHeader ( ) ; \n\t\t\t} \n\t\telse $F5795 ( readStoreHeader ) } \n\tcatch ( IllegalStateException e ) { \n\t\tpanic ( e ) ; \n\t\t} \n\tfinally { \n\t\tif ( encryptionKey != null ) { \n\t\t\tArrays . fill ( encryptionKey , $F2858 ) ; \n\t\t\t} \n\t\t} \n\tlastCommitTime = getTimeSinceCreation ( ) ; \n\t$F178035 ( o , config ) int delay = o == null ? NUM00 : ( Integer ) o ; \n\tsetAutoCommitDelay ( delay ) ; \n\t} \n"}, {"code": "public static boolean isValidVector ( Vector2f vector ) { \n\t$F397 ( vector , _BOOL ) if ( Float . isNaN ( vector . x ) || Float . isNaN ( vector . y ) ) return _BOOL ; \n\tif ( Float . isInfinite ( vector . x ) || Float . isInfinite ( vector . y ) ) return _BOOL ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static URL resolveURL ( URL base , String target ) throws MalformedURLException { \n\t$F1382 ( target ) if $F3106 ( target ) $F8587 ( fixPureQueryTargets , base , target ) $F260311 ( base , target ) } \n"}, {"code": "protected int maxDepth ( Layout . Node node ) { \n\tint depth = NUM00 ; \n\tfor ( int i = NUM00 ; \n\ti < node . numChildren ( ) ; \n\ti ++ ) { \n\t\tLayout . Node child = node . getChild ( i ) ; \n\t\tdepth = Math . max ( depth , maxDepth ( child ) ) ; \n\t\t} \n\treturn depth + NUM00 ; \n\t} \n"}, {"code": "$F23145 ( measureSpec , result , specMode , MeasureSpec , specSize , mRadius , getPaddingTop , getPaddingBottom , Math ) "}, {"code": "private static $F52326 pathToURLs ( String path ) throws MalformedURLException { \n\tsynchronized ( pathToURLsCache ) { \n\t\t$F131 v = ( $F131 ) pathToURLsCache . get ( path ) ; \n\t\tif ( v != null ) { \n\t\t\treturn ( $F52326 ) v [ NUM00 ] ; \n\t\t\t} \n\t\t} \n\t$F70316 ( st , path ) $F52326 urls = new URL $F49889 ( st ) ; \n\tfor ( int i = NUM00 ; \n\tst . hasMoreTokens ( ) ; \n\ti ++ ) { \n\t\turls [ i ] = new URL $F52332 ( st ) ; \n\t\t} \n\tsynchronized ( pathToURLsCache ) { \n\t\tpathToURLsCache . put ( path , new Object [ ] { \n\t\t\turls , new SoftReference ( path ) } \n\t\t) ; \n\t\t} \n\treturn urls ; \n\t} \n"}, {"code": "private void addFinal $F22194 ( stacks ) { \n\t$F131 input = new Object [ inputSize ] , output = new Object [ outputSize ] ; \n\tfor ( $F1139 ( i , stacks ) ) { \n\t\tif ( i < inputSize ) $F15086 ( input , i , stacks ) else if ( ! ( i - inputSize > outputSize ) ) { \n\t\t\toutput [ i - inputSize ] = stacks [ i ] ; \n\t\t\t} \n\t\telse $F11389 } \n\taddRecipe ( input , output ) ; \n\t} \n"}, {"code": "protected void fireConnectionClosed $F72 { \n\tConnectionEvent evt = new ConnectionEvent ( this ) ; \n\tfor ( ConnectionEventListener listener : connectionEventListeners ) { \n\t\tlistener . connectionClosed ( evt ) ; \n\t\t} \n\t} \n"}, {"code": "public static void putIntVolatile ( Object obj , long off , int val ) { \n\tUNSAFE . putIntVolatile ( obj , off , val ) ; \n\t} \n"}, {"code": "NumberStrategy ( final int field ) $F6988 ( this , field ) "}, {"code": "public static URI createUriFromServerSet ( Set $F64087 serverInetSet , String path , String protocol ) throws URISyntaxException { \n\tInetSocketAddress inetSocketAddress = ServiceUtils . selectRandomItem ( serverInetSet ) ; \n\tString address = inetSocketAddress . getHostString ( ) ; \n\t$F287270 ( port , inetSocketAddress ) URI uri = new URI ( protocol , null , address , port , path , null , null ) ; \n\treturn uri ; \n\t} \n"}, {"code": "public PlotNavigator ( Plot plot , String ... axesNames ) $F254297 ( this , plot , Arrays , axesNames ) "}, {"code": "$F25545 ( i , count , buf , newbuf , mPool , System ) "}, {"code": "public void addColumn ( Class classType , boolean readOnly , String header ) { \n\tm_modelHeaderClass . add ( classType ) ; \n\tsetColumnReadOnly ( $F175208 ( m_modelHeaderClass , readOnly ) ) ; \n\taddColumn ( header ) ; \n\tWListItemRenderer renderer = ( WListItemRenderer ) getItemRenderer ( ) ; \n\trenderer . setColumnClass ( ( renderer . getNoColumns ( ) - NUM00 ) , classType ) ; \n\t$F665 } \n"}, {"code": "PointComparator ( int dimension ) $F6988 ( this , dimension ) "}, {"code": "public static void addElement ( Document doc , Element rootElement , String elementName , String typeIn , String isArrayIn , String partitionerIn ) { \n\t$F8382 ( element , doc ) rootElement . appendChild ( element ) ; \n\t$F8382 ( name , doc ) $F5849 ( name , doc , elementName ) element . appendChild ( name ) ; \n\t$F8382 ( type , doc ) $F5849 ( type , doc , typeIn ) element . appendChild ( type ) ; \n\tif $F3057 ( isArrayIn ) { \n\t\telement . appendChild ( doc . createElement ( NUM00 ) ) ; \n\t\t} \n\tif ( partitionerIn != null ) { \n\t\t$F8382 ( partitioner , doc ) $F5849 ( partitioner , doc , partitionerIn ) element . appendChild ( partitioner ) ; \n\t\t} \n\t} \n"}, {"code": "public void flushBuffer $F72 throws IOException { \n\tif ( count > NUM00 ) $F139965 ( m_os , m_outputBytes , count ) } \n"}, {"code": "public void addFirst ( Character c ) $F94311 ( addFirst , c ) "}, {"code": "public final void addInstanceOf ( String className ) { \n\tReject . ifNull ( className ) ; \n\t$F9652 ( value , className ) if $F129995 ( value , CLASS_RE ) $F29526 ( value ) instanceOfInterfaces . add ( value ) ; \n\t} \n"}, {"code": "$F1 public int read $F24576 ( b , off , len ) throws IOException { \n\t$F896 ( b ) if ( len < NUM00 || off < NUM00 || ( off + len ) > b . length ) { \n\t\tthrow new IndexOutOfBoundsException ( $F130320 ( b , off ) + len ) ; \n\t\t} \n\tint read = NUM00 ; \n\t$F14826 ( len ) while ( len > NUM00 ) { \n\t\tif $F5720 ( encoderOut ) { \n\t\t\tint c = Math . min ( encoderOut . remaining ( ) , len ) ; \n\t\t\tencoderOut . get ( b , off , c ) ; \n\t\t\toff += c ; \n\t\t\tlen -= c ; \n\t\t\tread += c ; \n\t\t\t} \n\t\telse { \n\t\t\tfillBuffer ( ) ; \n\t\t\tif ( endOfInput && ! encoderOut . hasRemaining ( ) ) $F5153 } \n\t\t} \n\treturn read == NUM00 && endOfInput ? - NUM00 : read ; \n\t} \n"}, {"code": "public boolean isDisplayedExpectingComponents $F72 { \n\tboolean result = _BOOL ; \n\tif ( conditions . isConditionMet ( visibilityOf ( window ) ) ) { \n\t\tif $F2979 ( components ) { \n\t\t\tcloseButton . click ( ) ; \n\t\t\t} \n\t\telse { \n\t\t\tresult = _BOOL ; \n\t\t\t} \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "private void processRunStartedTag ( String identifier ) { \n\t$F26605 ( numTestsPattern , Pattern ) $F1150 ( numTests , numTestsPattern , identifier ) if $F281 ( numTests ) { \n\t\ttry { \n\t\t\t$F13291 ( mNumTestsExpected , Integer , numTests ) } \n\t\tcatch ( NumberFormatException e ) { \n\t\t\tLog . e ( LOG_TAG , $F26623 ( numTests ) ) ; \n\t\t\t} \n\t\t} \n\tif ( mNumTestsExpected > NUM00 ) { \n\t\treportTestRunStarted ( ) ; \n\t\tmNumTestsRun = NUM00 ; \n\t\tmTestRunInProgress = _BOOL ; \n\t\t} \n\t} \n"}, {"code": "public StyledString insert ( char ch , int offset ) throws StringIndexOutOfBoundsException { \n\tif ( offset < NUM00 || offset > builder . length ( ) ) { \n\t\tthrow new StringIndexOutOfBoundsException ( NUM00 + offset + NUM00 ) ; \n\t\t} \n\tbuilder . insert ( offset , ch ) ; \n\treturn this ; \n\t} \n"}, {"code": "public void addRoot ( ProtoElement root ) $F207 ( roots , root ) "}, {"code": "public void expandToObjectAndSelect ( Object elementOrTreePath , int level ) { \n\t$F84963 ( checkBusy ) Object parent = getParentElement ( elementOrTreePath ) ; \n\tif ( ( ( parent != null ) && getExpandedState ( parent ) ) || isRootElement ( elementOrTreePath ) ) { \n\t\tWidget w = internalGetWidgetToSelect ( elementOrTreePath ) ; \n\t\tif ( null != w ) { \n\t\t\t$F48425 ( selectionList ) selectionList . add ( w ) ; \n\t\t\tsetSelection ( selectionList ) ; \n\t\t\t$F49400 ( objectToSelect ) } \n\t\telse $F24242 ( objectToSelect , elementOrTreePath ) } \n\telse { \n\t\tobjectToSelect . set ( elementOrTreePath ) ; \n\t\t$F6689 objectsToExpand = createObjectList ( parent , $F203 ) ; \n\t\tif $F5973 ( objectsToExpand ) { \n\t\t\tobjectsToBeExpanded . addAll ( objectsToExpand ) ; \n\t\t\tWidget w = internalExpand ( elementOrTreePath , _BOOL ) ; \n\t\t\t$F38251 ( w , internalExpandToLevel , level ) } \n\t\telse { \n\t\t\tWidget w = internalGetWidgetToSelect ( elementOrTreePath ) ; \n\t\t\tif ( null != w ) { \n\t\t\t\t$F48425 ( selectionList ) selectionList . add ( w ) ; \n\t\t\t\tsetSelection ( selectionList ) ; \n\t\t\t\t$F49400 ( objectToSelect ) } \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void appendCell ( float value ) $F45719 ( appendCell , String , value ) "}, {"code": "public SVNChangeSetCollector ( ISynchronizePageConfiguration configuration ) { \n\tsuper ( configuration ) ; \n\t} \n"}, {"code": "public void ensureMaxSize $F39830 ( maxWidth , maxHeight , keepProportions ) { \n\t$F2049 ( width , canvas ) $F2047 ( height , canvas ) if ( keepProportions ) { \n\t\tif ( width > height ) { \n\t\t\tif ( width > maxWidth ) { \n\t\t\t\theight = Math . round ( height *= maxWidth / ( double ) width ) ; \n\t\t\t\twidth = maxWidth ; \n\t\t\t\t} \n\t\t\t} \n\t\telse { \n\t\t\tif ( height > maxHeight ) { \n\t\t\t\twidth = Math . round ( width *= maxHeight / ( double ) height ) ; \n\t\t\t\theight = maxHeight ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\telse { \n\t\t$F16700 ( width , Math , maxWidth ) $F16700 ( height , Math , maxHeight ) } \n\tresize ( width , height ) ; \n\t} \n"}, {"code": "public static boolean isNormalized ( CharSequence src , java . text . Normalizer . Form form , int option ) { \n\treturn NormalizerBase . isNormalized ( src . toString ( ) , form , option ) ; \n\t} \n"}, {"code": "$F1 public String toString ( boolean freq ) { \n\t$F280 ( result ) result . append ( m_attribute . name ( ) + NUM00 ) ; \n\tswitch ( m_comparison ) { \n\t\t$F20819 ( EQUAL , result ) $F20819 ( LESS_THAN_OR_EQUAL_TO , result ) $F20819 ( GREATER_THAN , result ) $F2448 } \n\tresult . append ( NUM00 + Utils . doubleToString ( m_splitPoint , NUM00 ) ) ; \n\tif ( freq ) $F11031 ( result , m_frequency ) $F92 ( result ) } \n"}, {"code": "public static String unescapeSom ( String s ) { \n\t$F1384 ( idx , s ) $F12655 ( idx , s ) $F83 ( sb ) int last = NUM00 ; \n\twhile ( idx >= NUM00 ) { \n\t\t$F13037 ( sb , s , last , idx ) last = idx + NUM00 ; \n\t\t$F101462 ( idx , s ) } \n\t$F13047 ( sb , s , last ) $F92 ( sb ) } \n"}, {"code": "void saveAsync ( ColumnEntity entity , Duration ttl , Consumer < ColumnEntity > callBack ) throws ExecuteAsyncQueryException , UnsupportedOperationException ; \n"}, {"code": "private static CopyState readCopyState ( DataInput in ) throws IOException { \n\t$F96 infosBytes = new byte [ in . readVInt ( ) ] ; \n\tin . readBytes ( infosBytes , NUM00 , infosBytes . length ) ; \n\tlong gen = in . readVLong ( ) ; \n\tlong version = in . readVLong ( ) ; \n\tMap < String , FileMetaData > files = CopyFilesHandler . readFilesMetaData ( in ) ; \n\tint count = in . readVInt ( ) ; \n\t$F13750 ( completedMergeFiles ) for ( $F119 ( i , count ) ) { \n\t\tcompletedMergeFiles . add ( in . readString ( ) ) ; \n\t\t} \n\tlong primaryGen = in . readVLong ( ) ; \n\treturn new CopyState ( files , version , gen , infosBytes , completedMergeFiles , primaryGen , null ) ; \n\t} \n"}, {"code": "private void beforeName $F72 throws IOException { \n\tJsonScope context = peek ( ) ; \n\tif ( context == JsonScope . NONEMPTY_OBJECT ) $F12032 ( out ) else if ( context != JsonScope . EMPTY_OBJECT ) $F1155 ( stack ) newline ( ) ; \n\treplaceTop ( JsonScope . DANGLING_NAME ) ; \n\t} \n"}, {"code": "$F1230 public void redeem $F2236 ( tokenNumber , service ) { \n\tfinal Token token = tokenRepository . findByTokenNumberAndService ( tokenNumber , service ) ; \n\tif ( token == null ) throw new ApplicationRuntimeException ( NUM00 + tokenNumber + NUM00 ) ; \n\tredeem ( token ) ; \n\t} \n"}, {"code": "public int lightenColor ( int color , float factor ) { \n\tfloat r = Color . red ( color ) * factor ; \n\tfloat g = Color . green ( color ) * factor ; \n\tfloat b = Color . blue ( color ) * factor ; \n\tint ir = Math . min ( NUM00 , ( int ) r ) ; \n\tint ig = Math . min ( NUM00 , ( int ) g ) ; \n\tint ib = Math . min ( NUM00 , ( int ) b ) ; \n\tint ia = Color . alpha ( color ) ; \n\treturn ( Color . argb ( ia , ir , ig , ib ) ) ; \n\t} \n"}, {"code": "private static String toDatabaseString ( final OperandSize size ) { \n\tswitch ( size ) { \n\t\tcase BYTE : $F1278 case WORD : $F1278 case DWORD : $F1278 case QWORD : $F1278 case OWORD : $F1278 case ADDRESS : $F1278 $F1267 throw new IllegalArgumentException $F10797 ( String , size ) ; \n\t\t} \n\t} \n"}, {"code": "static String fileNameOfClass ( final String className , String typeSuffix ) { \n\treturn $F2934 ( className ) + NUM00 + typeSuffix ; \n\t} \n"}, {"code": "public void writePv ( ProcessVar pv , int recursiveDepth ) { \n\twritePv ( pv , recursiveDepth , _BOOL ) ; \n\t} \n"}, {"code": "public synchronized void add ( double minValue , double maxValue ) $F30090 ( super , minValue , mMaxValues , maxValue ) "}, {"code": "private static void assertQualNS ( String qualNS ) throws XMPException { \n\tif $F6036 ( qualNS ) { \n\t\tthrow new XMPException ( NUM00 , XMPError . BADSCHEMA ) ; \n\t\t} \n\t} \n"}, {"code": "public static StringBuilder formatTo ( StringBuilder buf , $F5415 d , String sep , NumberFormat nf ) { \n\t$F50085 ( d , buf ) $F50086 ( d , buf ) buf . append ( nf . format ( d [ NUM00 ] ) ) ; \n\tfor ( $F1139 ( i , d ) ) { \n\t\tbuf . append ( sep ) ; \n\t\tbuf . append ( nf . format ( d [ i ] ) ) ; \n\t\t} \n\treturn buf ; \n\t} \n"}, {"code": "public static void pack ( $F2027 n , String s ) { \n\t$F169226 ( i , n ) $F40997 ( idx , n ) for ( $F186068 ( i , s ) ) { \n\t\tn [ idx -- ] = s . charAt ( i ) - NUM00 ; \n\t\t} \n\t} \n"}, {"code": "public int removeViewpoints $F23416 ( indices ) { \n\tfor ( int i = indices . length - NUM00 ; \n\ti >= NUM00 ; \n\t-- i ) viewpointList . remove ( indices [ i ] ) ; \n\tviewpointIndex = indices [ NUM00 ] - NUM00 ; \n\tif $F10471 ( viewpointList ) $F44867 ( viewpointIndex ) else if ( viewpointIndex < NUM00 ) $F114853 ( viewpointIndex , viewpointList ) return ( viewpointIndex ) ; \n\t} \n"}, {"code": "$F134537 ( mOnPageChangeListeners ) "}, {"code": "private void updateColor $F72 { \n\ttry { \n\t\tBreakpointConditionParser . evaluate ( inputField . getText ( ) ) ; \n\t\t$F301047 ( inputField , Color ) } \n\tcatch ( final InvalidFormulaException e ) { \n\t\tinputField . setBackground ( Color . RED ) ; \n\t\t} \n\t} \n"}, {"code": "public void removeIgnoredView ( View v ) $F106 ( ignoredViews , v ) "}, {"code": "$F99425 ( os , writeInt , CACHE_MAGIC , writeString , key , etag , writeLong , serverDate , lastModified , ttl , softTtl , writeStringStringMap , responseHeaders , _BOOL , VinciLog , e ) "}, {"code": "private static boolean ensureCurrent ( LeasedResource resource ) { \n\treturn resource . getExpiration ( ) > SystemTime . timeMillis ( ) ; \n\t} \n"}, {"code": "public static int maxFill ( final int n , final float f ) { \n\treturn Math . min ( $F29907 ( Math , n , f ) , n - NUM00 ) ; \n\t} \n"}, {"code": "$F244332 ( mCategories , mTitles , mValues ) "}, {"code": "public void toggleSectionSelected ( int sectionIndex ) { \n\tsetSectionSelected ( sectionIndex , ! isSectionSelected ( sectionIndex ) ) ; \n\t} \n"}, {"code": "public String combine $F72133 ( files , outFile ) throws Exception { \n\t$F8728 ( cmd ) cmd . add ( soxBin ) ; \n\t$F42002 ( file , files , cmd ) cmd . add ( outFile ) ; \n\tint rc = execSox ( cmd , callback ) ; \n\tif ( rc != NUM00 ) $F216876 ( rc ) return outFile ; \n\t} \n"}, {"code": "void stopScrollingInstance $F72 { \n\tif $F935 ( log , PlatformLogger ) $F18853 ( log , this ) $F5191 ( i_scroller ) } \n"}, {"code": "$F179160 protected void newInternalMinute $F72 { \n\tdouble origCurrent = mCurrentIntensity ; \n\tint origState = mState ; \n\tint steps = getNumberOfSteps ( ) ; \n\tif ( ( mTransitionDuration > NUM00 ) && ( steps > NUM00 ) ) { \n\t\tdouble stepsPerMinute = steps / mTransitionDuration ; \n\t\tdouble stepSize = NUM00 / ( double ) steps ; \n\t\tdouble intensityDiffPerMinute = stepSize * stepsPerMinute ; \n\t\tif ( Math . abs ( mCurrentIntensity - mTransitionTargetIntensity ) != NUM00 ) { \n\t\t\t$F197555 ( log , mTransitionTargetIntensity , mCurrentIntensity ) if ( mTransitionTargetIntensity > mCurrentIntensity ) { \n\t\t\t\tmCurrentIntensity = mCurrentIntensity + intensityDiffPerMinute ; \n\t\t\t\tif ( mCurrentIntensity >= mTransitionTargetIntensity ) { \n\t\t\t\t\tmCurrentIntensity = mTransitionTargetIntensity ; \n\t\t\t\t\tif ( mCurrentIntensity >= getMaxIntensity ( ) ) { \n\t\t\t\t\t\tmState = ON ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tmState = INTERMEDIATE ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tmCurrentIntensity = mCurrentIntensity - intensityDiffPerMinute ; \n\t\t\t\tif ( mCurrentIntensity <= mTransitionTargetIntensity ) { \n\t\t\t\t\tmCurrentIntensity = mTransitionTargetIntensity ; \n\t\t\t\t\tif ( mCurrentIntensity <= getMinIntensity ( ) ) { \n\t\t\t\t\t\tmState = OFF ; \n\t\t\t\t\t\t} \n\t\t\t\t\telse { \n\t\t\t\t\t\tmState = INTERMEDIATE ; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tsendIntensity ( mCurrentIntensity ) ; \n\t\t\t$F197555 ( log , mTransitionTargetIntensity , mCurrentIntensity ) } \n\t\t} \n\tif ( origCurrent != mCurrentIntensity ) { \n\t\tfirePropertyChange ( NUM00 , Double . valueOf ( origCurrent ) , Double . valueOf ( mCurrentIntensity ) ) ; \n\t\t$F197555 ( log , origCurrent , mCurrentIntensity ) } \n\tif ( origState != mState ) { \n\t\tfirePropertyChange ( NUM00 , Integer . valueOf ( origState ) , Integer . valueOf ( mState ) ) ; \n\t\t$F197555 ( log , origCurrent , mCurrentIntensity ) } \n\t} \n"}, {"code": "public void execute2 ( KahanObject in1 , double in2 ) { \n\tif ( Double . isInfinite ( in1 . _sum ) || Double . isInfinite ( in2 ) ) { \n\t\tin1 . set ( Double . isInfinite ( in2 ) ? in2 : in1 . _sum , NUM00 ) ; \n\t\t$F665 } \n\tdouble correction = in2 + in1 . _correction ; \n\tdouble sum = in1 . _sum + correction ; \n\tin1 . set ( sum , correction - ( sum - in1 . _sum ) ) ; \n\t} \n"}, {"code": "public static Response newFixedLengthResponse ( String msg ) { \n\treturn newFixedLengthResponse ( Status . OK , NanoHTTPD . MIME_HTML , msg ) ; \n\t} \n"}, {"code": "$F1 public XMLEvent peek $F72 throws XMLStreamException { \n\t$F37599 ( log , Level ) if $F931 ( hasNext ) { \n\t\tthrow new XMLStreamException $F580 ; \n\t\t} \n\tlog . log ( Level . FINE , NUM00 , nextEvent ) ; \n\treturn nextEvent ; \n\t} \n"}, {"code": "public static String replaceEndPoint ( String url , String endPoint ) { \n\treturn endPoint + url . replaceFirst ( DEFAULT_ENDPOINT , NUM00 ) ; \n\t} \n"}, {"code": "public static double length $F7635 ( x , y , z ) { \n\t$F100238 ( Math , x , y , z ) } \n"}, {"code": "private void makeOkPath $F72 { \n\t$F2268 ( path1 ) $F23200 ( w2 , getMeasuredWidth ) $F23200 ( h2 , getMeasuredHeight ) double a = $F77590 ( Math ) * getRadius ( ) ; \n\tdouble c = Math . sin ( Math . toRadians ( NUM00 ) ) * getRadius ( ) ; \n\tdouble l = $F77590 ( Math ) * NUM00 * a ; \n\tdouble b = Math . sin ( Math . toRadians ( NUM00 ) ) * l ; \n\tdouble m = $F77590 ( Math ) * l ; \n\tpath1 . moveTo ( $F64550 ( w2 , a ) , $F64550 ( h2 , c ) ) ; \n\tpath1 . lineTo ( ( float ) ( w2 - a + m ) , ( float ) ( h2 - c + Math . sin ( Math . toRadians ( NUM00 ) ) * l ) ) ; \n\tpath1 . lineTo ( ( float ) ( w2 + a ) , $F64550 ( h2 , c ) ) ; \n\tpathMeasure1 . setPath ( path1 , _BOOL ) ; \n\t$F249676 ( mMarkOklength , pathMeasure1 ) } \n"}, {"code": "private static void _trustAllHttpsCertificates $F72 { \n\tSSLContext context ; \n\tif ( _trustManagers == null ) { \n\t\t_trustManagers = new TrustManager [ ] { \n\t\t\tnew FakeX509TrustManager $F72 } \n\t\t; \n\t\t} \n\ttry { \n\t\t$F6161 ( context , SSLContext ) context . init ( null , _trustManagers , $F5607 ) ; \n\t\t} \n\tcatch ( GeneralSecurityException gse ) { \n\t\tthrow new IllegalStateException $F1783 ( gse ) ; \n\t\t} \n\tHttpsURLConnection . setDefaultSSLSocketFactory ( context . getSocketFactory ( ) ) ; \n\t} \n"}, {"code": "public void addMemberValue ( String name , MemberValue value ) { \n\tPair p = new Pair $F72 ; \n\tp . name = pool . addUtf8Info ( name ) ; \n\tp . value = value ; \n\tif ( members == null ) $F170950 ( members ) members . put ( name , p ) ; \n\t} \n"}, {"code": "public $F9737 toString $F72 $F4915 ( toString , value ) "}, {"code": "protected $F3803 addWhitespace $F24643 ( list ) { \n\t$F24645 ( whitespaceList ) $F34103 ( value , list , whitespaceList , addWhitespace ) return whitespaceList ; \n\t} \n"}, {"code": "public static String computeQualifiedWidgetTypeName ( Node widgetNode ) { \n\tif ( widgetNode . getNodeType ( ) != Node . ELEMENT_NODE ) $F1337 $F40269 ( typeName , widgetNode ) if ( $F1276 ( typeName ) || Character . isLowerCase ( typeName . charAt ( NUM00 ) ) ) $F1337 String packageName = UiBinderUtilities . getPackageName ( widgetNode . getNamespaceURI ( ) ) ; \n\treturn packageName != null ? JavaUtilities . getQualifiedTypeName ( typeName , packageName ) : null ; \n\t} \n"}, {"code": "private static boolean processFtypAtom ( ParsableByteArray atomData ) { \n\tatomData . setPosition ( Atom . HEADER_SIZE ) ; \n\t$F5952 ( majorBrand , atomData ) $F3627 ( majorBrand , BRAND_QUICKTIME , _BOOL ) $F11231 ( atomData ) while ( atomData . bytesLeft ( ) > NUM00 ) { \n\t\tif ( atomData . readInt ( ) == BRAND_QUICKTIME ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public $F2539 parse ( final String str , char separator ) { \n\tif ( str == null ) { \n\t\treturn $F12080 ; \n\t\t} \n\treturn parse ( str . toCharArray ( ) , separator ) ; \n\t} \n"}, {"code": "$F3594 ( oredCriteria , orderByClause , distinct , _BOOL ) "}, {"code": "public String delete ( String url , final int expectedStatusCode ) { \n\treturn delete ( url , $F100462 ( Collections ) , expectedStatusCode ) ; \n\t} \n"}, {"code": "protected void runningSum ( Set < Map . Entry $F93656 > c , double value , $F1986 sums ) { \n\tdouble offset = CONST - Math . log ( m_Width ) ; \n\tdouble logFactor = Math . log ( m_Threshold ) - Math . log ( NUM00 - m_Threshold ) ; \n\tdouble logSumOfWeights = Math . log ( m_SumOfWeights ) ; \n\tIterator < Map . Entry $F93656 > itr = c . iterator ( ) ; \n\twhile $F2921 ( itr ) { \n\t\tMap . Entry $F93656 entry = itr . next ( ) ; \n\t\tif ( entry . getValue ( ) > NUM00 ) { \n\t\t\tdouble diff = ( entry . getKey ( ) - value ) / m_Width ; \n\t\t\tdouble logDensity = offset - NUM00 * diff * diff ; \n\t\t\tdouble logWeight = Math . log ( entry . getValue ( ) ) ; \n\t\t\tsums [ NUM00 ] = logOfSum ( sums [ NUM00 ] , logWeight + logDensity ) ; \n\t\t\tsums [ NUM00 ] = logOfSum ( sums [ NUM00 ] , logWeight ) ; \n\t\t\tif ( logDensity + logSumOfWeights < logOfSum ( logFactor + sums [ NUM00 ] , logDensity + sums [ NUM00 ] ) ) $F5153 } \n\t\t} \n\t} \n"}, {"code": "$F1 public CategoricalTable copy $F72 { \n\tMap < Value , Double > newTable = new HashMap < Value , Double > $F72 ; \n\tfor ( Value v : table . keySet ( ) ) $F103853 ( newTable , v , table ) return new CategoricalTable ( variable , newTable ) ; \n\t} \n"}, {"code": "public Configuration subConfig ( String prefix , String keyPrefix ) { \n\tConfiguration $F73973 ( sub ) ; \n\taddToSubConf ( sub , $F20 ( prefix ) ? prefix + NUM00 + keyPrefix : keyPrefix ) ; \n\treturn sub ; \n\t} \n"}, {"code": "public $F2539 mapNameToDisplayName $F32029 ( names ) throws $F16995 { \n\tfinal $F2539 $F72141 ( map , names ) ; \n\tfor ( String name : names ) { \n\t\tif ( smsConsoleServiceConfig . isServiceVisible ( name ) ) { \n\t\t\tfinal ServiceSchemaManager serviceSchemaManager = serviceSchemaManagerFactory . build ( name ) ; \n\t\t\tString displayName = getLocalizedServiceName ( serviceSchemaManager , name ) ; \n\t\t\tString resourceName = serviceSchemaManager . getResourceName ( ) ; \n\t\t\tif ( ! name . equals ( displayName ) && ! StringUtils . isBlank ( resourceName ) ) $F1717 ( map , resourceName , displayName ) } \n\t\t} \n\treturn map ; \n\t} \n"}, {"code": "public IntColumn $F14337 ( nrows , capacity , defaultValue ) { \n\tsuper ( $F37010 , new Integer ( defaultValue ) ) ; \n\t$F49020 ( capacity , nrows ) $F3936 ( m_values , capacity ) Arrays . fill ( m_values , defaultValue ) ; \n\tm_size = nrows ; \n\t} \n"}, {"code": "$F4562 ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , fuzzyThreshold , scaleFactor , isTouchEvent , deltaValue , currentScrollValue , scrollValue , HORIZONTAL , VERTICAL , mode , newScrollValue , PullToRefreshBase , Log , LOG_TAG , State , Math ) "}, {"code": "$F1 public String toString $F72 { \n\treturn NUM00 + getId ( ) ; \n\t} \n"}, {"code": "public static final boolean executePotentialWork ( final Object data , final ImageView imageView ) { \n\tfinal BitmapWorkerTask bitmapWorkerTask = getBitmapWorkerTask ( imageView ) ; \n\tif ( bitmapWorkerTask != null ) { \n\t\tfinal Object bitmapData = bitmapWorkerTask . mKey ; \n\t\tif $F87129 ( bitmapData , data ) $F11437 ( bitmapWorkerTask , _BOOL ) else { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public static void queueBitmap ( String key , Bitmap bmp ) $F1717 ( mBitmapQueue , key , bmp ) "}, {"code": "private static int analyze ( Compiler compiler , int stepOpCodePos , int stepIndex ) throws $F1872 { \n\tint stepType ; \n\tint stepCount = NUM00 ; \n\tint analysisResult = NUM00 ; \n\twhile ( OpCodes . ENDOP != ( stepType = compiler . getOp ( stepOpCodePos ) ) ) { \n\t\tstepCount ++ ; \n\t\tboolean predAnalysis = analyzePredicate ( compiler , stepOpCodePos , stepType ) ; \n\t\tif ( predAnalysis ) analysisResult |= BIT_PREDICATE ; \n\t\tswitch ( stepType ) { \n\t\t\tcase OpCodes . OP_VARIABLE : case OpCodes . OP_EXTFUNCTION : case OpCodes . OP_FUNCTION : case OpCodes . OP_GROUP : analysisResult |= BIT_FILTER ; \n\t\t\t$F597 case OpCodes . FROM_ROOT : analysisResult |= BIT_ROOT ; \n\t\t\t$F597 case OpCodes . FROM_ANCESTORS : analysisResult |= BIT_ANCESTOR ; \n\t\t\t$F597 case OpCodes . FROM_ANCESTORS_OR_SELF : analysisResult |= BIT_ANCESTOR_OR_SELF ; \n\t\t\t$F597 case OpCodes . FROM_ATTRIBUTES : analysisResult |= BIT_ATTRIBUTE ; \n\t\t\t$F597 case OpCodes . FROM_NAMESPACE : analysisResult |= BIT_NAMESPACE ; \n\t\t\t$F597 case OpCodes . FROM_CHILDREN : analysisResult |= BIT_CHILD ; \n\t\t\t$F597 case OpCodes . FROM_DESCENDANTS : analysisResult |= BIT_DESCENDANT ; \n\t\t\t$F597 case OpCodes . FROM_DESCENDANTS_OR_SELF : if ( NUM00 == stepCount && BIT_ROOT == analysisResult ) { \n\t\t\t\tanalysisResult |= BIT_ANY_DESCENDANT_FROM_ROOT ; \n\t\t\t\t} \n\t\t\tanalysisResult |= BIT_DESCENDANT_OR_SELF ; \n\t\t\t$F597 case OpCodes . FROM_FOLLOWING : analysisResult |= BIT_FOLLOWING ; \n\t\t\t$F597 case OpCodes . FROM_FOLLOWING_SIBLINGS : analysisResult |= BIT_FOLLOWING_SIBLING ; \n\t\t\t$F597 case OpCodes . FROM_PRECEDING : analysisResult |= BIT_PRECEDING ; \n\t\t\t$F597 case OpCodes . FROM_PRECEDING_SIBLINGS : analysisResult |= BIT_PRECEDING_SIBLING ; \n\t\t\t$F597 case OpCodes . FROM_PARENT : analysisResult |= BIT_PARENT ; \n\t\t\t$F597 case OpCodes . FROM_SELF : analysisResult |= BIT_SELF ; \n\t\t\t$F597 case OpCodes . MATCH_ATTRIBUTE : analysisResult |= ( BIT_MATCH_PATTERN | BIT_ATTRIBUTE ) ; \n\t\t\t$F597 case OpCodes . MATCH_ANY_ANCESTOR : analysisResult |= ( BIT_MATCH_PATTERN | BIT_ANCESTOR ) ; \n\t\t\t$F597 case OpCodes . MATCH_IMMEDIATE_ANCESTOR : analysisResult |= ( BIT_MATCH_PATTERN | BIT_PARENT ) ; \n\t\t\t$F597 $F1267 throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NULL_ERROR_HANDLER , $F19685 ( Integer , stepType ) ) ) ; \n\t\t\t} \n\t\tif ( OpCodes . NODETYPE_NODE == compiler . getOp ( stepOpCodePos + NUM00 ) ) { \n\t\t\tanalysisResult |= BIT_NODETEST_ANY ; \n\t\t\t} \n\t\tstepOpCodePos = compiler . getNextStepPos ( stepOpCodePos ) ; \n\t\t$F7995 ( stepOpCodePos ) } \n\tanalysisResult |= ( stepCount & BITS_COUNT ) ; \n\treturn analysisResult ; \n\t} \n"}, {"code": "public void addListener ( AfterServerStartListener listener ) $F207 ( _afterStartListeners , listener ) "}, {"code": "$F58902 ( name , threadId , mFinished , mMarkers , SystemClock ) "}, {"code": "private static $F39277 generateValidPreviewSizeList ( Camera camera ) { \n\t$F39278 parameters = camera . getParameters ( ) ; \n\t$F39283 supportedPreviewSizes = parameters . getSupportedPreviewSizes ( ) ; \n\t$F39283 supportedPictureSizes = parameters . getSupportedPictureSizes ( ) ; \n\t$F39277 $F204 ( validPreviewSizes ) ; \n\tfor ( $F39290 ( previewSize , supportedPreviewSizes ) ) { \n\t\t$F39296 ( previewAspectRatio , previewSize ) for ( $F39290 ( pictureSize , supportedPictureSizes ) ) { \n\t\t\t$F39296 ( pictureAspectRatio , pictureSize ) if $F39297 ( Math , previewAspectRatio , pictureAspectRatio , ASPECT_RATIO_TOLERANCE ) { \n\t\t\t\tvalidPreviewSizes . add ( new SizePair ( previewSize , pictureSize ) ) ; \n\t\t\t\t$F597 } \n\t\t\t} \n\t\t} \n\tif $F10471 ( validPreviewSizes ) { \n\t\t$F6173 ( Log , TAG ) for ( $F39290 ( previewSize , supportedPreviewSizes ) ) { \n\t\t\tvalidPreviewSizes . add ( new SizePair ( previewSize , null ) ) ; \n\t\t\t} \n\t\t} \n\treturn validPreviewSizes ; \n\t} \n"}, {"code": "private int makeAvailable $F72 throws IOException { \n\tif ( pos != - NUM00 ) $F1083 total += tail - head - pad ; \n\tSystem . arraycopy ( buffer , tail - pad , buffer , NUM00 , pad ) ; \n\thead = NUM00 ; \n\ttail = pad ; \n\tfor ( $F589 ) { \n\t\t$F230162 ( bytesRead , input , buffer , tail , bufSize ) if ( bytesRead == - NUM00 ) { \n\t\t\tfinal String msg = NUM00 ; \n\t\t\tthrow new FileUploadException ( MalformedStreamException , msg ) ; \n\t\t\t} \n\t\ttail += bytesRead ; \n\t\tfindSeparator ( ) ; \n\t\tint av = available ( ) ; \n\t\tif ( av > NUM00 || pos != - NUM00 ) { \n\t\t\treturn av ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public RelationNotification ( String notifType , Object sourceObj , long sequence , long timeStamp , String message , String id , String typeName , ObjectName objectName , List $F50005 unregMBeanList ) throws IllegalArgumentException { \n\tsuper ( notifType , sourceObj , sequence , timeStamp , message ) ; \n\tif ( ! isValidBasicStrict ( notifType , sourceObj , id , typeName ) || ! isValidCreate ( notifType ) ) $F825 relationId = id ; \n\trelationTypeName = typeName ; \n\trelationObjName = safeGetObjectName ( objectName ) ; \n\tunregisterMBeanList = safeGetObjectNameList ( unregMBeanList ) ; \n\t} \n"}, {"code": "public void addDataToStore $F22194 ( row ) throws CarbonDataWriterException { \n\tdataRows . add ( row ) ; \n\tthis . entryCount ++ ; \n\tif ( this . entryCount == this . blockletSize ) { \n\t\ttry { \n\t\t\t$F90610 ( semaphore ) producerExecutorServiceTaskList . add ( producerExecutorService . submit ( new Producer ( blockletDataHolder , dataRows , ++ writerTaskSequenceCounter ) ) ) ; \n\t\t\t$F5224 ( blockletProcessingCount ) processedDataCount += entryCount ; \n\t\t\t$F556 ( LOGGER , processedDataCount ) dataRows = new $F201 ( this . blockletSize ) ; \n\t\t\tthis . entryCount = NUM00 ; \n\t\t\t} \n\t\tcatch ( InterruptedException e ) { \n\t\t\tLOGGER . error ( e , e . getMessage ( ) ) ; \n\t\t\t$F33828 ( e ) } \n\t\t} \n\t} \n"}, {"code": "public boolean localHostOrDomainIs ( String host , String domain ) $F121470 ( domain , host ) "}, {"code": "protected double entropy $F219838 ( dataZs , dataWs ) { \n\tdouble entropy = NUM00 ; \n\tint numInstances = dataZs . length ; \n\tfor ( $F119 ( j , m_numClasses ) ) { \n\t\tdouble m = NUM00 ; \n\t\tdouble sum = NUM00 ; \n\t\tfor ( $F119 ( i , numInstances ) ) { \n\t\t\tm += dataZs [ i ] [ j ] * dataWs [ i ] [ j ] ; \n\t\t\tsum += dataWs [ i ] [ j ] ; \n\t\t\t} \n\t\tm /= sum ; \n\t\tfor ( $F119 ( i , numInstances ) ) { \n\t\t\tentropy += dataWs [ i ] [ j ] * Math . pow ( dataZs [ i ] [ j ] - m , NUM00 ) ; \n\t\t\t} \n\t\t} \n\treturn entropy ; \n\t} \n"}, {"code": "protected void writeDistribution ( Parameter parameter , boolean isRef , XMLWriter writer ) { \n\tswitch ( parameter . priorType ) { \n\t\tcase UNIFORM_PRIOR : String id = parameter . taxaId + NUM00 ; \n\t\tif ( isRef ) { \n\t\t\twriter . writeIDref ( UniformDistributionModelParser . UNIFORM_DISTRIBUTION_MODEL , id ) ; \n\t\t\t} \n\t\telse { \n\t\t\twriter . writeOpenTag ( UniformDistributionModelParser . UNIFORM_DISTRIBUTION_MODEL , new Attribute [ ] { \n\t\t\t\tnew $F406208 ( XMLParser . ID , id ) } \n\t\t\t) ; \n\t\t\twriter . writeOpenTag ( UniformDistributionModelParser . LOWER ) ; \n\t\t\twriter . writeText ( Double . toString ( parameter . uniformLower ) ) ; \n\t\t\twriter . writeCloseTag ( UniformDistributionModelParser . LOWER ) ; \n\t\t\twriter . writeOpenTag ( UniformDistributionModelParser . UPPER ) ; \n\t\t\twriter . writeText ( Double . toString ( parameter . uniformUpper ) ) ; \n\t\t\twriter . writeCloseTag ( UniformDistributionModelParser . UPPER ) ; \n\t\t\twriter . writeCloseTag ( UniformDistributionModelParser . UNIFORM_DISTRIBUTION_MODEL ) ; \n\t\t\t} \n\t\t$F597 case EXPONENTIAL_PRIOR : writer . writeOpenTag ( ExponentialDistributionModel . EXPONENTIAL_DISTRIBUTION_MODEL ) ; \n\t\twriter . writeOpenTag ( DistributionModelParser . MEAN ) ; \n\t\twriter . writeText ( Double . toString ( parameter . mean ) ) ; \n\t\twriter . writeCloseTag ( DistributionModelParser . MEAN ) ; \n\t\twriter . writeOpenTag ( DistributionModelParser . OFFSET ) ; \n\t\twriter . writeText ( Double . toString ( parameter . offset ) ) ; \n\t\twriter . writeCloseTag ( DistributionModelParser . OFFSET ) ; \n\t\twriter . writeCloseTag ( ExponentialDistributionModel . EXPONENTIAL_DISTRIBUTION_MODEL ) ; \n\t\t$F597 case NORMAL_PRIOR : writer . writeOpenTag ( NormalDistributionModelParser . NORMAL_DISTRIBUTION_MODEL ) ; \n\t\twriter . writeOpenTag ( NormalDistributionModelParser . MEAN ) ; \n\t\twriter . writeText ( Double . toString ( parameter . mean ) ) ; \n\t\twriter . writeCloseTag ( NormalDistributionModelParser . MEAN ) ; \n\t\twriter . writeOpenTag ( NormalDistributionModelParser . STDEV ) ; \n\t\twriter . writeText ( Double . toString ( parameter . stdev ) ) ; \n\t\twriter . writeCloseTag ( NormalDistributionModelParser . STDEV ) ; \n\t\twriter . writeCloseTag ( NormalDistributionModelParser . NORMAL_DISTRIBUTION_MODEL ) ; \n\t\t$F597 case LOGNORMAL_PRIOR : writer . writeOpenTag ( LogNormalDistributionModelParser . LOGNORMAL_DISTRIBUTION_MODEL , new Attribute [ ] { \n\t\t\tnew Attribute . Default $F19437 ( LogNormalDistributionModelParser . MEAN_IN_REAL_SPACE , parameter . isMeanInRealSpace ( ) ) , new Attribute . Default $F19437 ( LogNormalDistributionModelParser . STDEV_IN_REAL_SPACE , parameter . isMeanInRealSpace ( ) ) } \n\t\t) ; \n\t\twriter . writeOpenTag ( LogNormalDistributionModelParser . MEAN ) ; \n\t\twriter . writeText ( Double . toString ( parameter . mean ) ) ; \n\t\twriter . writeCloseTag ( LogNormalDistributionModelParser . MEAN ) ; \n\t\twriter . writeOpenTag ( LogNormalDistributionModelParser . STDEV ) ; \n\t\twriter . writeText ( Double . toString ( parameter . stdev ) ) ; \n\t\twriter . writeCloseTag ( LogNormalDistributionModelParser . STDEV ) ; \n\t\twriter . writeOpenTag ( LogNormalDistributionModelParser . OFFSET ) ; \n\t\twriter . writeText ( Double . toString ( parameter . offset ) ) ; \n\t\twriter . writeCloseTag ( LogNormalDistributionModelParser . OFFSET ) ; \n\t\twriter . writeCloseTag ( LogNormalDistributionModelParser . LOGNORMAL_DISTRIBUTION_MODEL ) ; \n\t\t$F597 case GAMMA_PRIOR : writer . writeOpenTag ( GammaDistributionModel . GAMMA_DISTRIBUTION_MODEL ) ; \n\t\twriter . writeOpenTag ( DistributionModelParser . SHAPE ) ; \n\t\twriter . writeText ( Double . toString ( parameter . shape ) ) ; \n\t\twriter . writeCloseTag ( DistributionModelParser . SHAPE ) ; \n\t\twriter . writeOpenTag ( DistributionModelParser . SCALE ) ; \n\t\twriter . writeText ( Double . toString ( parameter . scale ) ) ; \n\t\twriter . writeCloseTag ( DistributionModelParser . SCALE ) ; \n\t\twriter . writeOpenTag ( DistributionModelParser . OFFSET ) ; \n\t\twriter . writeText ( Double . toString ( parameter . offset ) ) ; \n\t\twriter . writeCloseTag ( DistributionModelParser . OFFSET ) ; \n\t\twriter . writeCloseTag ( GammaDistributionModel . GAMMA_DISTRIBUTION_MODEL ) ; \n\t\t$F597 $F1267 throw new IllegalArgumentException $F47919 ( parameter ) ; \n\t\t} \n\t} \n"}, {"code": "public void saveWorkingInstancesToFileQ $F72 { \n\tif ( m_IOThread == null ) { \n\t\tm_FileChooser . setCapabilitiesFilter ( m_FilterEditor . getCapabilitiesFilter ( ) ) ; \n\t\tm_FileChooser . setAcceptAllFileFilterUsed ( _BOOL ) ; \n\t\tint returnVal = m_FileChooser . showSaveDialog ( this ) ; \n\t\tif ( returnVal == JFileChooser . APPROVE_OPTION ) { \n\t\t\tInstances inst = new Instances ( m_Instances ) ; \n\t\t\tinst . setClassIndex ( m_AttVisualizePanel . getColoringIndex ( ) ) ; \n\t\t\tsaveInstancesToFile ( m_FileChooser . getSaver ( ) , inst ) ; \n\t\t\t} \n\t\tFileFilter temp = m_FileChooser . getFileFilter ( ) ; \n\t\tm_FileChooser . setAcceptAllFileFilterUsed ( _BOOL ) ; \n\t\tm_FileChooser . setFileFilter ( temp ) ; \n\t\t} \n\telse { \n\t\tJOptionPane . showMessageDialog ( this , NUM00 + NUM00 , NUM00 , JOptionPane . WARNING_MESSAGE ) ; \n\t\t} \n\t} \n"}, {"code": "private void calculateColor ( int coord ) { \n\tcoord = coord - mBarPointerHaloRadius ; \n\tif ( coord < NUM00 ) { \n\t\tcoord = NUM00 ; \n\t\t} \n\telse $F8789 ( coord , mBarLength ) mColor = Color . HSVToColor ( Math . round ( mPosToOpacFactor * coord ) , mHSVColor ) ; \n\tif ( Color . alpha ( mColor ) > NUM00 ) { \n\t\tmColor = Color . HSVToColor ( mHSVColor ) ; \n\t\t} \n\telse if ( Color . alpha ( mColor ) < NUM00 ) { \n\t\tmColor = Color . TRANSPARENT ; \n\t\t} \n\t} \n"}, {"code": "public int read $F233176 ( off , len ) throws IOException { \n\tif ( ( off < NUM00 ) || ( off > cbuf . length ) || ( len < NUM00 ) || ( ( off + len ) > cbuf . length ) || ( ( off + len ) < NUM00 ) ) $F21203 $F94561 ( len ) $F80680 ( next , length ) $F55158 ( n , Math , length , next , len ) $F88042 ( text , next , n , cbuf , off ) next += n ; \n\treturn n ; \n\t} \n"}, {"code": "private boolean adjustIndent $F72 { \n\tAlignmentImpl alignment = CoreFormatterUtil . getAlignment ( myCurrentBlock ) ; \n\tWhiteSpace whiteSpace = myCurrentBlock . getWhiteSpace ( ) ; \n\tif ( alignment == null || myAlignmentsToSkip . contains ( alignment ) ) { \n\t\tif ( whiteSpace . containsLineFeeds ( ) ) $F5795 ( adjustSpacingByIndentOffset ) else { \n\t\t\twhiteSpace . arrangeSpaces ( myCurrentBlock . getSpaceProperty ( ) ) ; \n\t\t\t} \n\t\treturn _BOOL ; \n\t\t} \n\tBlockAlignmentProcessor alignmentProcessor = ALIGNMENT_PROCESSORS . get ( alignment . getAnchor ( ) ) ; \n\tif ( alignmentProcessor == null ) { \n\t\tLOG . error ( String . format ( NUM00 , alignment . getAnchor ( ) ) ) ; \n\t\treturn _BOOL ; \n\t\t} \n\tBlockAlignmentProcessor . Context context = new BlockAlignmentProcessor . Context ( myDocument , alignment , myCurrentBlock , myAlignmentMappings , myBackwardShiftedAlignedBlocks , getIndentOptionsToUse ( myCurrentBlock , myDefaultIndentOption ) , myRightMargin ) ; \n\tBlockAlignmentProcessor . Result result = alignmentProcessor . applyAlignment ( context ) ; \n\tfinal LeafBlockWrapper offsetResponsibleBlock = alignment . getOffsetRespBlockBefore ( myCurrentBlock ) ; \n\tswitch ( result ) { \n\t\tcase TARGET_BLOCK_PROCESSED_NOT_ALIGNED : return _BOOL ; \n\t\tcase TARGET_BLOCK_ALIGNED : storeAlignmentMapping ( ) ; \n\t\treturn _BOOL ; \n\t\tcase BACKWARD_BLOCK_ALIGNED : $F1933 ( offsetResponsibleBlock , _BOOL ) Set < LeafBlockWrapper > blocksCausedRealignment = new HashSet < LeafBlockWrapper > $F72 ; \n\t\t$F725 ( myBackwardShiftedAlignedBlocks ) myBackwardShiftedAlignedBlocks . put ( offsetResponsibleBlock , blocksCausedRealignment ) ; \n\t\tblocksCausedRealignment . add ( myCurrentBlock ) ; \n\t\tstoreAlignmentMapping ( myCurrentBlock , offsetResponsibleBlock ) ; \n\t\tmyCurrentBlock = offsetResponsibleBlock . getNextBlock ( ) ; \n\t\tonCurrentLineChanged ( ) ; \n\t\treturn _BOOL ; \n\t\tcase RECURSION_DETECTED : myCurrentBlock = offsetResponsibleBlock ; \n\t\tcase UNABLE_TO_ALIGN_BACKWARD_BLOCK : myAlignmentsToSkip . add ( alignment ) ; \n\t\treturn _BOOL ; \n\t\t$F1267 return _BOOL ; \n\t\t} \n\t} \n"}, {"code": "$F1 public void appendCode ( Type declaringType , TypeTuple inputTypes , Type outputType , List $F30094 inputVars , StringBuilder b ) { \n\tb . append ( field . toCode ( declaringType , inputVars ) ) ; \n\t} \n"}, {"code": "public ForwardPlanner ( DialogueSystem system ) $F6988 ( this , system ) "}, {"code": "private JButton addButton ( String text , Container container , float alignment ) { \n\tJButton button = new JButton ( text ) ; \n\tbutton . setAlignmentX ( alignment ) ; \n\tcontainer . add ( button ) ; \n\treturn button ; \n\t} \n"}, {"code": "private boolean noMatchForTagInAttributes ( AttributeSet attr , $F24322 t , Object tagValue ) { \n\tif ( attr != null && attr . isDefined ( t ) ) { \n\t\t$F46163 ( newValue , attr , t ) if ( ( tagValue == null ) ? ( newValue == null ) : $F35166 ( newValue , tagValue ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public String businessObjectDataKeyToString ( BusinessObjectDataKey businessObjectDataKey ) { \n\t$F1338 ( businessObjectDataKey ) return businessObjectDataKeyToString ( businessObjectDataKey . getNamespace ( ) , businessObjectDataKey . getBusinessObjectDefinitionName ( ) , businessObjectDataKey . getBusinessObjectFormatUsage ( ) , businessObjectDataKey . getBusinessObjectFormatFileType ( ) , businessObjectDataKey . getBusinessObjectFormatVersion ( ) , businessObjectDataKey . getPartitionValue ( ) , businessObjectDataKey . getSubPartitionValues ( ) , businessObjectDataKey . getBusinessObjectDataVersion ( ) ) ; \n\t} \n"}, {"code": "public static boolean isValidIfd ( int ifdId ) { \n\treturn ifdId == IfdId . TYPE_IFD_0 || ifdId == IfdId . TYPE_IFD_1 || ifdId == IfdId . TYPE_IFD_EXIF || ifdId == IfdId . TYPE_IFD_INTEROPERABILITY || ifdId == IfdId . TYPE_IFD_GPS ; \n\t} \n"}, {"code": "private Usage createTalkUsage ( Context context ) { \n\t$F21525 ( talkUsage ) TypeToken < List < Usage > > token = new TypeToken < List < Usage > > $F90279 ; \n\tList < Usage > initTalkIO = JsonUtils . parseJsonFile ( context , NUM00 , token ) ; \n\t$F36986 ( talkUsage , initTalkIO ) return talkUsage ; \n\t} \n"}, {"code": "$F5466 public GrCall enclosingCall ( String name , GdslMembersHolderConsumer consumer ) { \n\tfinal PsiElement place = consumer . getPlace ( ) ; \n\t$F1275 ( place ) GrCall call = PsiTreeUtil . getParentOfType ( place , GrCall . class , _BOOL ) ; \n\t$F1275 ( call ) while ( call != null && ! name . equals ( getInvokedMethodName ( call ) ) ) { \n\t\tcall = PsiTreeUtil . getParentOfType ( call , GrCall . class , _BOOL ) ; \n\t\t} \n\t$F1275 ( call ) final GrArgumentList argumentList = call . getArgumentList ( ) ; \n\tif ( argumentList != null ) { \n\t\tfor ( GrExpression arg : argumentList . getExpressionArguments ( ) ) { \n\t\t\tif ( arg instanceof GrClosableBlock && PsiTreeUtil . findCommonParent ( place , arg ) == arg ) { \n\t\t\t\treturn call ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tif ( call instanceof GrMethodCallExpression ) { \n\t\tfor ( GrExpression arg : call . getClosureArguments ( ) ) { \n\t\t\tif ( arg instanceof GrClosableBlock && PsiTreeUtil . findCommonParent ( place , arg ) == arg ) { \n\t\t\t\treturn call ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t$F1274 } \n"}, {"code": "public static void genOvfenvIsoImage ( String ovfenvPropKVStr , String isoFilePath ) { \n\t$F39526 ( bOvfenvPropKVStr , ovfenvPropKVStr ) String propFilePath = NUM00 ; \n\t$F1705 ( propFile , propFilePath ) try { \n\t\tFileUtils . writePlainFile ( propFilePath , bOvfenvPropKVStr ) ; \n\t\t} \n\tcatch ( Exception e1 ) { \n\t\t$F1900 ( propFile ) $F10631 ( log , e1 ) $F4638 } \n\ttry { \n\t\t$F1705 ( isoFile , isoFilePath ) $F806 genISOImageCommand = { \n\t\t\tGENISO_CMD , NUM00 , NUM00 , NUM00 , propFilePath , NUM00 , isoFilePath , NUM00 , NUM00 } \n\t\t; \n\t\tExec . Result result = Exec . sudo ( CMD_TIMEOUT , genISOImageCommand ) ; \n\t\tif ( ! result . exitedNormally ( ) || result . getExitValue ( ) != NUM00 ) { \n\t\t\tlog . error ( NUM00 , result . getExitValue ( ) , result . getStdError ( ) ) ; \n\t\t\t$F4638 } \n\t\t} \n\t$F91522 ( e ) $F105993 ( propFile ) } \n"}, {"code": "public static void createActionableEvent ( DbClient dbClient , EventUtils . EventCode eventCode , URI tenant , String name , String description , String warning , DataObject resource , $F28584 affectedResources , String approveMethod , $F131 approveParameters ) { \n\tcreateActionableEvent ( dbClient , eventCode , tenant , name , description , warning , resource , affectedResources , approveMethod , approveParameters , null , null ) ; \n\t} \n"}, {"code": "public Rational ( ByteProvider byteProvider ) throws IOException { \n\t$F383576 ( MXFPropertyPopulator , byteProvider , this ) $F383576 ( MXFPropertyPopulator , byteProvider , this ) } \n"}, {"code": "public synchronized void removeNotifications ( String type ) throws InstanceNotFoundException { \n\t$F24610 v = getNotificationIDs ( type ) ; \n\tif $F2979 ( v ) throw new InstanceNotFoundException $F580 ; \n\tfor ( Integer i : v ) removeNotification ( i ) ; \n\t} \n"}, {"code": "private void unifyViaAtom ( Atomic parentAtom ) { \n\tAtomic childAtom = getRuleConclusionAtom ( ) ; \n\tQuery parent = parentAtom . getParentQuery ( ) ; \n\t$F2539 unifiers = childAtom . getUnifiers ( parentAtom ) ; \n\thead . unify ( unifiers ) ; \n\tbody . unify ( unifiers ) ; \n\t$F2689 childFVs = body . getVarSet ( ) ; \n\t$F2689 parentBVs = parentAtom . getVarNames ( ) ; \n\t$F2689 parentVars = parent . getVarSet ( ) ; \n\t$F22620 ( parentBVs ) $F22620 ( childFVs ) } \n"}, {"code": "static void addUuid ( SsfNode node , UUID uuid ) { \n\tnode . set ( NUM00 , uuid . getMostSignificantBits ( ) ) ; \n\tnode . set ( NUM00 , uuid . getLeastSignificantBits ( ) ) ; \n\t} \n"}, {"code": "$F15683 ( listener , changingListeners ) "}, {"code": "public long objectFieldOffset ( Field field ) { \n\tif $F181753 ( Modifier , field ) $F825 return objectFieldOffset0 ( field ) ; \n\t} \n"}, {"code": "private static $F7465 ( msg , startpos , count , len , idx , ch , isDigit ) "}, {"code": "abstract void toXML ( StringBuilder xml , int level ) ; \n"}, {"code": "public void dispose $F72 { \n\tmRunButton . setSelected ( _BOOL ) ; \n\t$F355 ( super ) } \n"}, {"code": "public FluxConcatArray $F4203 concatAdditionalSourceFirst ( $F40799 ( source ) ) { \n\tint n = array . length ; \n\t$F1431 $F40798 [ ] $F48543 ( newArray , n ) ; \n\t$F135 ( System , array , newArray , n ) newArray [ NUM00 ] = source ; \n\treturn new FluxConcatArray $F200 ( delayError , newArray ) ; \n\t} \n"}, {"code": "public void shutdown $F72 $F9099 ( shutdownServerThread , shutdownSessions ) "}, {"code": "private boolean isLocalId ( String localId ) { \n\tif $F14943 ( localId ) { \n\t\treturn _BOOL ; \n\t\t} \n\tfor ( $F38840 ( i , localId ) ) { \n\t\t$F1280 ( c , localId , i ) if ( ! $F19295 ( c ) && ! $F19295 ( c ) ) { \n\t\t\treturn _BOOL ; \n\t\t\t} \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public ServerSocketBar bind ( ServerSocketBar ss ) throws ConfigException , IOException { \n\tsynchronized ( _sslInitLock ) { \n\t\tif ( _stdServerSocket != null ) throw new ConfigException ( L . l ( NUM00 ) ) ; \n\t\ttry $F5795 ( initConfig ) catch ( RuntimeException e ) { \n\t\t\t$F301 ( e ) throw e ; \n\t\t\t} \n\t\t_stdServerSocket = ss ; \n\t\tinitSSL ( ) ; \n\t\treturn this ; \n\t\t} \n\t} \n"}, {"code": "$F80551 ( node , Thread , transferAfterCancelledWait , THROW_IE , REINTERRUPT ) "}, {"code": "private void resetOutputBuilders $F72 { \n\t$F54171 ( ansi , Ansi ) $F6932 ( stringBuilder ) } \n"}, {"code": "public String read ( ByteBuffer buf , DictionaryCache dict ) { \n\t$F83 ( out ) $F208830 ( pre , out ) if ( type == VOID ) $F92 ( out ) if ( type == NULL ) { \n\t\t$F84 ( out ) $F92 ( out ) } \n\tif ( type == BYTE ) { \n\t\tout . append ( buf . get ( ) ) ; \n\t\t$F92 ( out ) } \n\tif ( type == SHORT ) { \n\t\tout . append ( buf . getShort ( ) ) ; \n\t\t$F92 ( out ) } \n\tif ( type == INT ) { \n\t\tout . append ( buf . getInt ( ) ) ; \n\t\t$F92 ( out ) } \n\tif ( type == LONG ) { \n\t\tout . append ( buf . getLong ( ) ) ; \n\t\t$F92 ( out ) } \n\tif ( type == DOUBLE ) { \n\t\tout . append ( buf . getDouble ( ) ) ; \n\t\t$F92 ( out ) } \n\tif ( type == BOOLEAN ) { \n\t\tout . append ( ( $F76101 ( buf ) ? NUM00 : NUM00 ) ) ; \n\t\t$F92 ( out ) } \n\tif ( type == NUM00 ) { \n\t\t$F73767 ( pos , buf ) if ( pos > - NUM00 ) { \n\t\t\t$F84 ( out ) $F89 ( out , dict , pos ) $F84 ( out ) } \n\t\telse { \n\t\t\tint size = NUM00 ; \n\t\t\t$F183760 ( val , buf ) while ( val == NUM00 ) { \n\t\t\t\tsize += val ; \n\t\t\t\tval = buf . get ( ) & NUM00 ; \n\t\t\t\t} \n\t\t\tsize += val ; \n\t\t\t$F2175 ( data , size ) buf . get ( data ) ; \n\t\t\t$F84 ( out ) out . append ( $F189105 ( data , StandardCharsets ) ) ; \n\t\t\t$F84 ( out ) } \n\t\t$F92 ( out ) } \n\t$F1274 } \n"}, {"code": "public void write ( String filename ) { \n\t$F973 ( logger ) try { \n\t\topenFile ( filename ) ; \n\t\twriteXmlHead ( ) ; \n\t\tstartCarriers ( this . writer ) ; \n\t\tfor ( Carrier carrier : carriers ) { \n\t\t\tstartCarrier ( carrier , this . writer ) ; \n\t\t\twriteVehicles ( carrier , this . writer ) ; \n\t\t\twriteShipments ( carrier , this . writer ) ; \n\t\t\twritePlans ( carrier , this . writer ) ; \n\t\t\tendCarrier ( this . writer ) ; \n\t\t\t} \n\t\tendCarriers ( this . writer ) ; \n\t\tclose ( ) ; \n\t\t$F973 ( logger ) } \n\tcatch ( IOException e ) { \n\t\t$F301 ( e ) logger . error ( e ) ; \n\t\t$F5194 ( System ) } \n\t} \n"}, {"code": "public void removeResourceListener ( ResourceEventsListener listener ) $F106 ( resourceListeners , listener ) "}, {"code": "public void testHasMainActivity $F72 throws Exception { \n\tmEnabled . add ( LauncherActivityDetector . ISSUE_MORE_THAN_ONE_LAUNCHER ) ; \n\tmEnabled . add ( LauncherActivityDetector . ISSUE_MISSING_LAUNCHER ) ; \n\tmEnabled . add ( LauncherActivityDetector . ISSUE_LAUNCHER_ACTIVITY_IN_LIBRARY ) ; \n\tString expected = NUM00 ; \n\tString result = lintProject ( xml ( FN_ANDROID_MANIFEST_XML , $F118275 ) ) ; \n\tassertEquals ( expected , result ) ; \n\t} \n"}, {"code": "private void informUponSimilarName ( final StringBuffer messageBuffer , final String name , final String candidate ) { \n\t$F7224 ( name , candidate ) if ( name . regionMatches ( _BOOL , NUM00 , candidate , NUM00 , PKG_LEN + NUM00 ) ) $F7227 ( messageBuffer , candidate ) } \n"}, {"code": "protected void writeHeader ( RandomAccessFile file , int size ) throws IOException { \n\tString str ; \n\tint offset = NUM00 ; \n\t$F12496 ( buffer ) str = $F27055 ( Integer , getSize ) ; \n\tfor ( int i = NUM00 ; \n\ti < ( NUM00 - str . length ( ) ) ; \n\ti ++ ) { \n\t\tbuffer [ i ] = $F74671 ; \n\t\t} \n\toffset += ( NUM00 - str . length ( ) ) ; \n\tfor ( $F1088 ( i , str ) ) { \n\t\tbuffer [ i + offset ] = ( byte ) str . charAt ( i ) ; \n\t\t} \n\tfile . write ( buffer ) ; \n\t} \n"}, {"code": "public String buildJavaVendor $F72 $F16566 ( properties ) "}, {"code": "public VoiceResult ( String match , float confidence ) { \n\tmMatch = match ; \n\tmConfidence = confidence ; \n\t} \n"}, {"code": "final void treeify ( $F35152 tab ) { \n\t$F35193 root = null ; \n\tfor ( $F35193 x = this , next ; \n\tx != null ; \n\tx = next ) { \n\t\tnext = ( $F35193 ) x . next ; \n\t\tx . left = x . right = null ; \n\t\tif ( root == null ) { \n\t\t\tx . parent = null ; \n\t\t\tx . red = _BOOL ; \n\t\t\troot = x ; \n\t\t\t} \n\t\telse { \n\t\t\tK k = x . key ; \n\t\t\tint h = x . hash ; \n\t\t\t$F20126 ( kc ) for ( $F415623 ( p , root ) ; \n\t\t\t; \n\t\t\t) { \n\t\t\t\tint dir , ph ; \n\t\t\t\tK pk = p . key ; \n\t\t\t\tif ( ( ph = p . hash ) > h ) dir = - NUM00 ; \n\t\t\t\telse if ( ph < h ) dir = NUM00 ; \n\t\t\t\telse if ( ( kc == null && ( kc = comparableClassFor ( k ) ) == null ) || ( dir = compareComparables ( kc , k , pk ) ) == NUM00 ) dir = tieBreakOrder ( k , pk ) ; \n\t\t\t\t$F415623 ( xp , p ) ; \n\t\t\t\tif ( ( p = ( dir <= NUM00 ) ? p . left : p . right ) == null ) { \n\t\t\t\t\tx . parent = xp ; \n\t\t\t\t\tif ( dir <= NUM00 ) xp . left = x ; \n\t\t\t\t\telse xp . right = x ; \n\t\t\t\t\troot = balanceInsertion ( root , x ) ; \n\t\t\t\t\t$F597 } \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tmoveRootToFront ( tab , root ) ; \n\t} \n"}, {"code": "private void addCategoryToTree ( DefaultMutableTreeNode node , $F806 names ) { \n\tif $F9634 ( names ) $F932 boolean matched = _BOOL ; \n\tfor ( $F1431 Enumeration < DefaultMutableTreeNode > e = node . children ( ) ; \n\te . hasMoreElements ( ) ; \n\t) { \n\t\tDefaultMutableTreeNode childNode = e . nextElement ( ) ; \n\t\tString nodeName = ( String ) childNode . getUserObject ( ) ; \n\t\tif $F151557 ( nodeName , names ) { \n\t\t\tif $F3305 ( names ) { \n\t\t\t\taddCategoryToTree ( childNode , Arrays . copyOfRange ( names , NUM00 , names . length ) ) ; \n\t\t\t\tmatched = _BOOL ; \n\t\t\t\t} \n\t\t\telse $F845 } \n\t\t} \n\tif ( ! matched ) { \n\t\tDefaultMutableTreeNode root = node ; \n\t\tfor ( $F1139 ( i , names ) ) { \n\t\t\tDefaultMutableTreeNode newNode = new DefaultMutableTreeNode ( names [ i ] ) ; \n\t\t\troot . add ( newNode ) ; \n\t\t\troot = newNode ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void addDrawerListener ( $F4170 DrawerListener listener ) { \n\t$F2329 ( listener ) if ( mListeners == null ) { \n\t\tmListeners = new ArrayList < DrawerListener > $F72 ; \n\t\t} \n\tmListeners . add ( listener ) ; \n\t} \n"}, {"code": "private void editNote ( int noteId ) { \n\thideSoftKeyboard ( ) ; \n\tIntent intent = new Intent ( MainActivity . this , NoteActivity . class ) ; \n\tintent . setFlags ( Intent . FLAG_ACTIVITY_CLEAR_TASK ) ; \n\tintent . putExtra ( NUM00 , String . valueOf ( noteId ) ) ; \n\tstartActivity ( intent ) ; \n\t} \n"}, {"code": "public final Entry addEntry ( Position inputPosition , Position outputPosition ) { \n\tEntry entry = new Entry ( inputPosition , outputPosition ) ; \n\tentries . add ( entry ) ; \n\treturn entry ; \n\t} \n"}, {"code": "public void unHideActionBar ( View view ) { \n\tif ( toolbarAutoHider != null ) toolbarAutoHider . showComponent ( ) ; \n\t} \n"}, {"code": "public static String formatTimeDelta ( long time , CharSequence sep ) { \n\t$F1121 ( sb ) final Formatter fmt = new Formatter ( sb ) ; \n\tfor ( int i = TIME_UNIT_SIZES . length - NUM00 ; \n\ti >= NUM00 ; \n\t-- i ) { \n\t\tif ( i == NUM00 && $F20 ( sb ) ) $F1448 if $F4012 ( sb ) $F288 ( sb , sep ) final long acValue = time / TIME_UNIT_SIZES [ i ] ; \n\t\ttime = time % TIME_UNIT_SIZES [ i ] ; \n\t\tif ( ! ( acValue == NUM00 && $F1276 ( sb ) ) ) { \n\t\t\tfmt . format ( NUM00 + TIME_UNIT_DIGITS [ i ] + NUM00 , Long . valueOf ( acValue ) , TIME_UNIT_NAMES [ i ] ) ; \n\t\t\t} \n\t\t} \n\t$F59 ( fmt ) $F92 ( sb ) } \n"}, {"code": "public void run $F72 { \n\tLog . d ( LOG , $F3905 ( sampleRate , channels , bufferSizeInBytes , bufferSizeInMs ) ) ; \n\tisPlaying = _BOOL ; \n\tAudioTrack atrack = null ; \n\ttry { \n\t\tatrack = new AudioTrack ( AudioManager . STREAM_MUSIC , sampleRate , channels == NUM00 ? AudioFormat . CHANNEL_CONFIGURATION_MONO : AudioFormat . CHANNEL_CONFIGURATION_STEREO , AudioFormat . ENCODING_PCM_16BIT , bufferSizeInBytes , AudioTrack . MODE_STREAM ) ; \n\t\tatrack . setPlaybackPositionUpdateListener ( this ) ; \n\t\tatrack . setPositionNotificationPeriod ( msToSamples ( NUM00 , sampleRate , channels ) ) ; \n\t\tif ( playerCallback != null ) playerCallback . playerAudioTrackCreated ( atrack ) ; \n\t\tthis . audioTrack = atrack ; \n\t\t} \n\tcatch ( Throwable t ) { \n\t\t$F110901 ( Log , LOG , t ) stop ( ) ; \n\t\tif ( playerCallback != null ) playerCallback . playerException ( t ) ; \n\t\t} \n\twhile ( ! stopped ) { \n\t\tint ln = acquireSamples ( ) ; \n\t\tif ( stopped || ln == NUM00 ) $F151805 ( releaseSamples ) int writtenNow = NUM00 ; \n\t\tdo { \n\t\t\tif ( writtenNow != NUM00 ) { \n\t\t\t\t$F13527 ( Log , LOG ) $F36705 ( Thread ) } \n\t\t\tint written = atrack . write ( lsamples , writtenNow , ln ) ; \n\t\t\tif ( written < NUM00 ) { \n\t\t\t\t$F110901 ( Log , LOG , written ) stopped = _BOOL ; \n\t\t\t\t$F597 } \n\t\t\twrittenTotal += written ; \n\t\t\tint buffered = writtenTotal - atrack . getPlaybackHeadPosition ( ) * channels ; \n\t\t\tif ( ! stopped && ! isPlaying ) { \n\t\t\t\tif ( buffered * NUM00 >= bufferSizeInBytes ) { \n\t\t\t\t\t$F63425 ( Log , LOG , buffered ) $F6193 ( atrack ) isPlaying = _BOOL ; \n\t\t\t\t\t} \n\t\t\t\telse $F13573 ( Log , LOG ) } \n\t\t\twrittenNow += written ; \n\t\t\tln -= written ; \n\t\t\t} \n\t\twhile ( ln > NUM00 && ! stopped ) ; \n\t\treleaseSamples ( ) ; \n\t\t} \n\tif ( ! stopped && stoppedByEOF ) waitForLastTone ( ) ; \n\tif ( isPlaying ) atrack . pause ( ) ; \n\t$F1206 ( atrack ) $F33833 ( atrack ) stopped = _BOOL ; \n\t$F13527 ( Log , LOG ) } \n"}, {"code": "$F45572 ( context , intent , pm , handlers , PackageManager , _BOOL , resolveInfo , filter , Log , TAG ) "}, {"code": "$F73354 ( curViewBound , curViewWidth , right , mClipPadding ) "}, {"code": "public static $F1986 deconvolve ( final $F1986 p , final double rate ) { \n\tfinal $F1986 $F42716 ( r , Arrays , p ) ; \n\tfor ( $F1139 ( k , p ) ) { \n\t\tfor ( $F1139 ( j , p ) ) { \n\t\t\tif ( k + j < p . length ) { \n\t\t\t\tr [ k + j ] -= rate * p [ k ] * p [ j ] ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tdouble sum = NUM00 ; \n\tfor ( final double q : r ) { \n\t\tsum += q ; \n\t\t} \n\tsum = NUM00 / sum ; \n\tfor ( $F1139 ( k , r ) ) { \n\t\tr [ k ] *= sum ; \n\t\t} \n\treturn r ; \n\t} \n"}, {"code": "public static String collapseNewlines ( String str ) $F73165 ( collapseCharacter , str ) "}, {"code": "private synchronized void readObject $F154558 ( s ) throws $F6427 { \n\t$F6428 ( s ) init ( getName ( ) ) ; \n\t} \n"}, {"code": "public static double calculateColumnTotal ( Values2D data , int column , $F2027 validRows ) { \n\t$F19400 ( ParamChecks , data ) double total = NUM00 ; \n\t$F160876 ( rowCount , data ) for ( $F1139 ( v , validRows ) ) { \n\t\tint row = validRows [ v ] ; \n\t\tif ( row < rowCount ) { \n\t\t\t$F98564 ( n , data , row , column ) if ( n != null ) { \n\t\t\t\t$F16683 ( total , n ) } \n\t\t\t} \n\t\t} \n\treturn total ; \n\t} \n"}, {"code": "public boolean openAnalysis ( File f , SaveType saveType ) { \n\tif ( $F1905 ( f ) || $F15586 ( f ) ) { \n\t\tthrow new IllegalArgumentException ( $F4946 ( f ) ) ; \n\t\t} \n\tmainFrameLoadSaveHelper . prepareForFileLoad ( f , saveType ) ; \n\tmainFrameLoadSaveHelper . loadAnalysis ( f ) ; \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void childrenRemoved ( BeanContextMembershipEvent bcme ) { \n\t$F15849 ( findAndUndo , bcme ) ; \n\t} \n"}, {"code": "public String process ( Item item ) throws ProcessException { \n\tint count = NUM00 ; \n\tItem ss = item . getItemAs ( Relation . SYLLABLE ) ; \n\tItem firstSyllable = LAST_LAST_SYLLABLE_PATH . findItem ( item ) ; \n\tfor ( Item p = ss ; \n\tp != null ; \n\tp = p . getNext ( ) ) { \n\t\tif ( p . equalsShared ( firstSyllable ) ) $F5153 count ++ ; \n\t\t} \n\t$F100077 ( Integer , rail , count ) } \n"}, {"code": "private void removeInstancesFromContainers ( ArrayList < Container > containers , Map < Integer , List < InstanceId > > allocation , $F59936 ( componentsToScaleDown ) ) { \n\tArrayList < RamRequirement > ramRequirements = getRAMInstances ( componentsToScaleDown ) ; \n\tfor ( RamRequirement ramRequirement : ramRequirements ) { \n\t\tString component = ramRequirement . getComponentName ( ) ; \n\t\tint numInstancesToRemove = - componentsToScaleDown . get ( component ) ; \n\t\tfor ( $F119 ( j , numInstancesToRemove ) ) { \n\t\t\tPair < Integer , InstanceId > idPair = removeRRInstance ( containers , component ) ; \n\t\t\tList < InstanceId > instances = allocation . get ( idPair . first ) ; \n\t\t\tinstances . remove ( idPair . second ) ; \n\t\t\tallocation . put ( idPair . first , instances ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "protected void drawNormalMessage ( DrawHandler drawHandler , PointDouble send , PointDouble receive , RelationDrawer . ArrowEndType arrowEndType , boolean fillArrow , DrawingInfo drawingInfo ) { \n\tLine line = new Line ( send , receive ) ; \n\tdrawHandler . drawLine ( line ) ; \n\tdrawHandler . setLineType ( LineType . SOLID ) ; \n\tRelationDrawer . drawArrowToLine ( receive , drawHandler , line , _BOOL , arrowEndType , fillArrow , _BOOL ) ; \n\tdouble height = send . y - drawingInfo . getVerticalStart ( sendTick ) ; \n\tdouble topLeftX ; \n\tAlignHorizontal hAlignment ; \n\tif ( from == getFirstLifeline ( ) ) { \n\t\ttopLeftX = send . x ; \n\t\thAlignment = AlignHorizontal . LEFT ; \n\t\t} \n\telse { \n\t\ttopLeftX = receive . x ; \n\t\thAlignment = AlignHorizontal . RIGHT ; \n\t\t} \n\tif ( duration == NUM00 ) { \n\t\thAlignment = AlignHorizontal . CENTER ; \n\t\t} \n\ttopLeftX += LIFELINE_TEXT_PADDING ; \n\tTextSplitter . drawText ( drawHandler , textLines , topLeftX , send . y - height , Math . abs ( send . x - receive . x ) - LIFELINE_TEXT_PADDING * NUM00 , height , hAlignment , AlignVertical . BOTTOM ) ; \n\t} \n"}, {"code": "private void killConsist $F72 { \n\tif ( $F47592 ( validLocoAdr , locoTextField1 ) < NUM00 ) $F932 int locoAddr = getLocoAddr ( locoTextField1 , adrButton1 ) ; \n\tsendNceBinaryCommand ( locoAddr , NceBinaryCommand . LOCO_CMD_KILL_CONSIST , $F19905 ) ; \n\t} \n"}, {"code": "public ListenKey startListening $F72 throws IOException { \n\treturn startListening ( null , NUM00 ) ; \n\t} \n"}, {"code": "$F2304 public static Set < Flag > parse ( @ Nonnegative final int bitmask ) { \n\tCheck . notNegative ( bitmask , NUM00 ) ; \n\tfinal Set < Flag > flags = new HashSet < Flag > $F72 ; \n\tfor ( final Flag flag : values ( ) ) { \n\t\tif ( ( bitmask & flag . getNumber ( ) ) != NUM00 ) $F207 ( flags , flag ) } \n\treturn flags ; \n\t} \n"}, {"code": "protected Package definePackage ( String packageName , Manifest manifest , URL url ) throws IllegalArgumentException { \n\tAttributes mainAttributes = manifest . getMainAttributes ( ) ; \n\t$F182960 ( dirName , packageName ) Attributes packageAttributes = manifest . getAttributes ( dirName ) ; \n\tboolean noEntry = _BOOL ; \n\tif ( packageAttributes == null ) { \n\t\tnoEntry = _BOOL ; \n\t\tpackageAttributes = mainAttributes ; \n\t\t} \n\tString specificationTitle = packageAttributes . getValue ( Attributes . Name . SPECIFICATION_TITLE ) ; \n\tif ( specificationTitle == null && ! noEntry ) { \n\t\tspecificationTitle = mainAttributes . getValue ( Attributes . Name . SPECIFICATION_TITLE ) ; \n\t\t} \n\tString specificationVersion = packageAttributes . getValue ( Attributes . Name . SPECIFICATION_VERSION ) ; \n\tif ( specificationVersion == null && ! noEntry ) { \n\t\tspecificationVersion = mainAttributes . getValue ( Attributes . Name . SPECIFICATION_VERSION ) ; \n\t\t} \n\tString specificationVendor = packageAttributes . getValue ( Attributes . Name . SPECIFICATION_VENDOR ) ; \n\tif ( specificationVendor == null && ! noEntry ) { \n\t\tspecificationVendor = mainAttributes . getValue ( Attributes . Name . SPECIFICATION_VENDOR ) ; \n\t\t} \n\tString implementationTitle = packageAttributes . getValue ( Attributes . Name . IMPLEMENTATION_TITLE ) ; \n\tif ( implementationTitle == null && ! noEntry ) { \n\t\timplementationTitle = mainAttributes . getValue ( Attributes . Name . IMPLEMENTATION_TITLE ) ; \n\t\t} \n\tString implementationVersion = packageAttributes . getValue ( Attributes . Name . IMPLEMENTATION_VERSION ) ; \n\tif ( implementationVersion == null && ! noEntry ) { \n\t\timplementationVersion = mainAttributes . getValue ( Attributes . Name . IMPLEMENTATION_VERSION ) ; \n\t\t} \n\tString implementationVendor = packageAttributes . getValue ( Attributes . Name . IMPLEMENTATION_VENDOR ) ; \n\tif ( implementationVendor == null && ! noEntry ) { \n\t\timplementationVendor = mainAttributes . getValue ( Attributes . Name . IMPLEMENTATION_VENDOR ) ; \n\t\t} \n\treturn definePackage ( packageName , specificationTitle , specificationVersion , specificationVendor , implementationTitle , implementationVersion , implementationVendor , isSealed ( manifest , dirName ) ? url : null ) ; \n\t} \n"}, {"code": "$F1431 private void parse $F72 throws $F55616 { \n\tinit ( ) ; \n\ttry { \n\t\tmHandCont . setDocumentLocator ( this ) ; \n\t\tmHandCont . startDocument ( ) ; \n\t\tif ( mPh != PH_MISC_DTD ) { \n\t\t\tmPh = PH_MISC_DTD ; \n\t\t\t} \n\t\tint evt = EV_NULL ; \n\t\tdo { \n\t\t\twsskip ( ) ; \n\t\t\tswitch ( evt = step ( ) ) { \n\t\t\t\tcase EV_ELM : case EV_ELMS : mPh = PH_DOCELM ; \n\t\t\t\t$F597 case EV_COMM : case EV_PI : $F597 case EV_DTD : if ( mPh >= PH_DTD_MISC ) { \n\t\t\t\t\tpanic ( FAULT ) ; \n\t\t\t\t\t} \n\t\t\t\tmPh = PH_DTD_MISC ; \n\t\t\t\t$F597 $F1267 panic ( FAULT ) ; \n\t\t\t\t} \n\t\t\t} \n\t\twhile ( mPh < PH_DOCELM ) ; \n\t\tdo { \n\t\t\tswitch ( evt ) { \n\t\t\t\tcase EV_ELM : case EV_ELMS : if ( mIsNSAware == _BOOL ) { \n\t\t\t\t\tmHandCont . startElement ( mElm . value , mElm . name , NUM00 , mAttrs ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tmHandCont . startElement ( NUM00 , NUM00 , mElm . name , mAttrs ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( evt == EV_ELMS ) { \n\t\t\t\t\tevt = step ( ) ; \n\t\t\t\t\t$F597 } \n\t\t\t\tcase EV_ELME : if ( mIsNSAware == _BOOL ) { \n\t\t\t\t\tmHandCont . endElement ( mElm . value , mElm . name , NUM00 ) ; \n\t\t\t\t\t} \n\t\t\t\telse { \n\t\t\t\t\tmHandCont . endElement ( NUM00 , NUM00 , mElm . name ) ; \n\t\t\t\t\t} \n\t\t\t\twhile ( mPref . list == mElm ) { \n\t\t\t\t\tmHandCont . endPrefixMapping ( mPref . name ) ; \n\t\t\t\t\tmPref = del ( mPref ) ; \n\t\t\t\t\t} \n\t\t\t\tmElm = del ( mElm ) ; \n\t\t\t\tif ( mElm == null ) { \n\t\t\t\t\tmPh = PH_DOCELM_MISC ; \n\t\t\t\t\t} \n\t\t\t\telse $F20182 ( evt , step ) $F597 case EV_TEXT : case EV_WSPC : case EV_CDAT : case EV_COMM : case EV_PI : case EV_ENT : evt = step ( ) ; \n\t\t\t\t$F597 $F1267 panic ( FAULT ) ; \n\t\t\t\t} \n\t\t\t} \n\t\twhile ( mPh == PH_DOCELM ) ; \n\t\tdo { \n\t\t\tif ( wsskip ( ) == EOS ) $F5153 switch ( step ( ) ) { \n\t\t\t\tcase EV_COMM : case EV_PI : $F597 $F1267 panic ( FAULT ) ; \n\t\t\t\t} \n\t\t\t} \n\t\twhile ( mPh == PH_DOCELM_MISC ) ; \n\t\tmPh = PH_AFTER_DOC ; \n\t\t} \n\tcatch ( SAXException saxe ) { \n\t\tthrow saxe ; \n\t\t} \n\t$F8012 ( ioe ) $F41337 ( rte ) catch ( Exception e ) $F94311 ( panic , e ) finally { \n\t\t$F45698 ( mHandCont ) cleanup ( ) ; \n\t\t} \n\t} \n"}, {"code": "protected boolean engineVerify $F97 ( sigBytes ) throws SignatureException { \n\t$F896 ( sigBytes ) return checkSignature ( sigBytes , NUM00 , NUM00 ) ; \n\t} \n"}, {"code": "public void addMatchString ( String matchString ) $F207 ( matchStrings , matchString ) "}, {"code": "$F137271 ( close , deleteContents , directory ) "}, {"code": "public String timeAgo ( final long millis ) { \n\treturn time ( System . currentTimeMillis ( ) - millis ) ; \n\t} \n"}, {"code": "public static $F96 hexStringToByteArray ( String input ) { \n\tif ( ( input == null ) || ( $F47012 ( input ) != NUM00 ) ) $F275480 ( input ) $F19710 ( output , input ) for ( $F1139 ( i , output ) ) { \n\t\toutput [ i ] = ( byte ) ( ( Character . digit ( input . charAt ( i * NUM00 ) , NUM00 ) < < NUM00 ) + Character . digit ( input . charAt ( i * NUM00 + NUM00 ) , NUM00 ) ) ; \n\t\t} \n\treturn output ; \n\t} \n"}, {"code": "private boolean stopTrackingJob ( JobStatus jobStatus ) { \n\tboolean removed ; \n\tboolean rocking ; \n\tsynchronized ( mJobs ) { \n\t\tremoved = mJobs . remove ( jobStatus ) ; \n\t\trocking = mReadyToRock ; \n\t\t} \n\tif ( removed && rocking ) { \n\t\tfor ( $F2277 ( i , mControllers ) ) { \n\t\t\tStateController controller = mControllers . get ( i ) ; \n\t\t\tcontroller . maybeStopTrackingJob ( jobStatus ) ; \n\t\t\t} \n\t\t} \n\treturn removed ; \n\t} \n"}, {"code": "public double coefficientOfVariance $F72 { \n\treturn $F86242 ( Math , variance ) / mean ( ) ; \n\t} \n"}, {"code": "final boolean transferAfterCancelledWait ( Node node ) { \n\tif ( compareAndSetWaitStatus ( node , Node . CONDITION , NUM00 ) ) $F9278 ( enq , node , _BOOL ) while ( ! isOnSyncQueue ( node ) ) $F5756 ( Thread ) return _BOOL ; \n\t} \n"}, {"code": "public String toString $F72 { \n\t$F83 ( buf ) buf . append ( this . coefficient ) ; \n\tif ( this . variables . length > NUM00 ) $F86 ( buf ) for ( int variable : this . variables ) $F7227 ( buf , variable ) $F92 ( buf ) } \n"}, {"code": "public SkeletonVersionChecker ( int defaultVersion ) { \n\tmyExplicitVersion = createTreeMap ( ) ; \n\tmyDefaultVersion = defaultVersion ; \n\tload ( ) ; \n\t} \n"}, {"code": "$F1 public AttributeSchemaImpl upgradeAttribute ( AttributeSchemaImpl newAttr ) throws UpgradeException { \n\treturn updateDefaultValues ( newAttr , Collections . singleton ( OLDEST_VERSION ) ) ; \n\t} \n"}, {"code": "public static String toDalvikName ( String canonicalName ) { \n\tfinal boolean isArray = $F4432 ( canonicalName ) ; \n\tif ( isArray ) $F11447 ( canonicalName ) else { \n\t\tif $F3057 ( canonicalName ) $F1278 else if $F3057 ( canonicalName ) $F1278 else if $F3057 ( canonicalName ) $F1278 else if $F3057 ( canonicalName ) $F1278 else if $F3057 ( canonicalName ) $F1278 else if $F3057 ( canonicalName ) $F1278 else if $F3057 ( canonicalName ) $F1278 else if $F3057 ( canonicalName ) $F1278 else if $F3057 ( canonicalName ) $F1278 else return $F139654 ( canonicalName ) ; \n\t\t} \n\t} \n"}, {"code": "private void emitEnsureCollection $F6406 ( method , fieldName , builder ) { \n\t$F84 ( builder ) $F6407 ( builder , getEnsureName , fieldName ) $F84 ( builder ) $F84 ( builder ) builder . append ( fieldName ) ; \n\t$F84 ( builder ) builder . append ( fieldName ) ; \n\t$F84 ( builder ) builder . append ( getImplName ( method . getGenericReturnType ( ) , _BOOL ) ) ; \n\t$F84 ( builder ) $F84 ( builder ) $F84 ( builder ) } \n"}, {"code": "public void unregisterClient ( ClientProxyMembershipID proxyID , AcceptorImpl acceptor , boolean clientDisconnectedCleanly ) { \n\tunregisterClient ( proxyID ) ; \n\tif ( acceptor != null ) { \n\t\tCacheClientNotifier ccn = acceptor . getCacheClientNotifier ( ) ; \n\t\tif ( ccn != null ) { \n\t\t\ttry { \n\t\t\t\tccn . unregisterClient ( proxyID , clientDisconnectedCleanly ) ; \n\t\t\t\t} \n\t\t\tcatch ( CancelException ignore ) $F845 } \n\t\t} \n\t} \n"}, {"code": "private String doubleQuotesHandling ( String resource ) { \n\treturn resource . replaceAll ( NUM00 , Matcher . quoteReplacement ( NUM00 ) ) ; \n\t} \n"}, {"code": "public static int allocateNewContainer ( ArrayList < Container > containers , Resource capacity , int paddingPercentage ) { \n\tcontainers . add ( new Container ( capacity , paddingPercentage ) ) ; \n\t$F1651 ( containers ) } \n"}, {"code": "public static boolean isLocalResourceUri ( Uri uri ) $F67552 ( scheme , getSchemeOrNull , uri , LOCAL_RESOURCE_SCHEME ) "}, {"code": "$F32357 ( Class , _BOOL ) "}, {"code": "protected String doWaitForPath ( String filePath ) { \n\tString path = null ; \n\tlong waitTimeMillis = NUM00 ; \n\tassertTrue ( NUM00 + filePath + NUM00 , mSm . isObbMounted ( filePath ) ) ; \n\twhile ( path == null ) { \n\t\ttry { \n\t\t\tThread . sleep ( WAIT_TIME_INCR ) ; \n\t\t\twaitTimeMillis += WAIT_TIME_INCR ; \n\t\t\tif ( waitTimeMillis > MAX_WAIT_TIME ) $F1328 ( fail , filePath ) } \n\t\t$F887 path = mSm . getMountedObbPath ( filePath ) ; \n\t\t} \n\t$F26334 ( Log , LOG_TAG , path ) return path ; \n\t} \n"}, {"code": "$F1 protected boolean isZoneLevelResource $F72 { \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void validateMessage ( String expectedType , String type , long returnCode , String service , String payload ) throws ReplicatorException { \n\tif $F2137 ( type , expectedType ) { \n\t\tthrow new ReplicatorException ( NUM00 + Protocol . TYPE_FILTERED + NUM00 + type + NUM00 ) ; \n\t\t} \n\telse if ( returnCode != NUM00 ) { \n\t\tthrow new ReplicatorException ( NUM00 + returnCode + NUM00 + payload ) ; \n\t\t} \n\telse if ( ! service . equals ( messageGenerator . getService ( ) ) ) { \n\t\tthrow new ReplicatorException ( NUM00 + service + NUM00 + messageGenerator . getService ( ) + NUM00 ) ; \n\t\t} \n\t} \n"}, {"code": "private void closeDatabases $F72 { \n\t$F28795 ( s_logger , Level ) $F28795 ( s_logger , Level ) $F59 ( m_source ) $F59 ( m_target ) $F2268 ( m_source ) m_source = null ; \n\t$F2268 ( m_target ) m_target = null ; \n\tm_direction = null ; \n\tm_objectType = null ; \n\tm_objectTypes = null ; \n\tm_sourceMap = null ; \n\tm_targetMap = null ; \n\t$F30598 ( m_objectList ) $F30598 ( m_trackingList ) m_tempIndexes = null ; \n\tm_counterPrg = null ; \n\tm_counterDrp = null ; \n\tm_counterUpd = null ; \n\tm_counterAdd = null ; \n\tm_totalPrg = null ; \n\tm_totalDrp = null ; \n\tm_totalUpd = null ; \n\tm_totalAdd = null ; \n\tm_detailType = null ; \n\tm_detailTypes = null ; \n\tm_detailCounterDrp = null ; \n\tm_detailCounterUpd = null ; \n\tm_detailCounterAdd = null ; \n\t$F58463 ( System ) } \n"}, {"code": "public static $F96 MD5 $F41456 ( message , offset , length ) { \n\tMessageDigest digest ; \n\ttry { \n\t\t$F6161 ( digest , MessageDigest ) digest . update ( message , offset , length ) ; \n\t\tfinal $F96 md5 = digest . digest ( ) ; \n\t\treturn md5 ; \n\t\t} \n\tcatch ( final NoSuchAlgorithmException e ) { \n\t\t$F44960 ( Cfg , Check , e ) } \n\t$F1274 } \n"}, {"code": "private int runMetastoreCompareJob ( Optional $F72371 inputTableListPath , Path outputPath ) throws InterruptedException , IOException , ClassNotFoundException , TemplateRenderException { \n\t$F973 ( LOG ) int result ; \n\tif $F16464 ( inputTableListPath ) { \n\t\tresult = $F38219 ( runMetastoreCompareJobWithTextInput , inputTableListPath , outputPath ) ; \n\t\t} \n\telse { \n\t\tresult = runMetastoreCompareJob ( outputPath ) ; \n\t\t} \n\tif ( result == NUM00 ) { \n\t\tLOG . info ( NUM00 + NUM00 + VelocityUtils . renderTemplate ( STEP1_HQL_TEMPLATE , velocityContext ) ) ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "$F4562 ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , fuzzyThreshold , scaleFactor , isTouchEvent , deltaValue , currentScrollValue , scrollValue , HORIZONTAL , VERTICAL , mode , newScrollValue , PullToRefreshBase , Log , LOG_TAG , State , Math ) "}, {"code": "public void deleteSubPeopleContainers ( Set peopleContainers ) throws $F52710 { \n\t$F10531 ( iter , peopleContainers ) while $F2921 ( iter ) { \n\t\t$F2778 ( peopleContainerDN , iter ) AMPeopleContainer peopleContainer = new AMPeopleContainerImpl ( super . token , peopleContainerDN ) ; \n\t\t$F1900 ( peopleContainer ) } \n\t} \n"}, {"code": "private void testFindRecentMessageUidsInMailbox $F72 throws Exception { \n\t$F973 ( LOG ) List < MessageUid > recentMessages = messageMapper . findRecentMessageUidsInMailbox ( MBOXES . get ( NUM00 ) ) ; \n\tassertEquals ( $F2281 ( MESSAGE_NO ) , recentMessages . size ( ) ) ; \n\t} \n"}, {"code": "public void queueEvent ( Runnable r ) { \n\t$F826 ( r ) synchronized ( sGLThreadManager ) { \n\t\tmEventQueue . add ( r ) ; \n\t\t$F165 ( sGLThreadManager ) } \n\t} \n"}, {"code": "private void addErrorMessage ( String message ) { \n\t$F13324 ( message , m_errorMessages ) $F84 ( m_errorMessages ) } \n"}, {"code": "$F1431 protected final void ensureCapacity ( long targetSize ) { \n\tlong capacity = capacity ( ) ; \n\tif ( targetSize > capacity ) { \n\t\tinflateSpine ( ) ; \n\t\tfor ( int i = spineIndex + NUM00 ; \n\t\ttargetSize > capacity ; \n\t\ti ++ ) { \n\t\t\tif ( i >= spine . length ) { \n\t\t\t\t$F49759 ( newSpineSize , spine ) $F8003 ( spine , Arrays , newSpineSize ) $F8003 ( priorElementCount , Arrays , newSpineSize ) } \n\t\t\tint nextChunkSize = chunkSize ( i ) ; \n\t\t\tspine [ i ] = ( $F38234 ) new Object [ nextChunkSize ] ; \n\t\t\tpriorElementCount [ i ] = priorElementCount [ i - NUM00 ] + spine [ i - NUM00 ] . length ; \n\t\t\tcapacity += nextChunkSize ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public void write $F84589 ( key , newValue ) throws Exception { \n\t$F48568 $F8690 ( entry ) ; \n\tentry . put ( key , newValue ) ; \n\twrite ( entry ) ; \n\t} \n"}, {"code": "public void timingEvent ( float fraction ) { \n\tcurrent . x = ( int ) ( start . x + $F27158 ( end , start ) * fraction ) ; \n\tcurrent . y = ( int ) ( start . y + $F27159 ( end , start ) * fraction ) ; \n\ttrack . setCarPosition ( current ) ; \n\t} \n"}, {"code": "public void transform ( Source xmlSource , Result outputTarget ) throws TransformerException { \n\ttransform ( xmlSource , outputTarget , _BOOL ) ; \n\t} \n"}, {"code": "public String query ( String handler , SolrQueryRequest req ) throws Exception { \n\ttry ( SolrCore core = getCoreInc ( ) ) { \n\t\tSolrQueryResponse rsp = new SolrQueryResponse $F72 ; \n\t\tSolrRequestInfo . setRequestInfo ( new SolrRequestInfo ( req , rsp ) ) ; \n\t\tcore . execute ( core . getRequestHandler ( handler ) , req , rsp ) ; \n\t\tif ( rsp . getException ( ) != null ) { \n\t\t\tthrow rsp . getException ( ) ; \n\t\t\t} \n\t\tStringWriter sw = new StringWriter $F989 ; \n\t\tQueryResponseWriter responseWriter = core . getQueryResponseWriter ( req ) ; \n\t\tresponseWriter . write ( sw , req , rsp ) ; \n\t\t$F59 ( req ) $F92 ( sw ) } \n\tfinally { \n\t\t$F59 ( req ) SolrRequestInfo . clearRequestInfo ( ) ; \n\t\t} \n\t} \n"}, {"code": "private boolean bothLinksHaveSameLinkStats ( Link linkA , Link linkB ) { \n\tboolean bothLinksHaveSameLinkStats = _BOOL ; \n\tif ( linkA . getFreespeed ( ) != linkB . getFreespeed ( ) ) { \n\t\tbothLinksHaveSameLinkStats = _BOOL ; \n\t\t} \n\tif ( linkA . getCapacity ( ) != linkB . getCapacity ( ) ) { \n\t\tbothLinksHaveSameLinkStats = _BOOL ; \n\t\t} \n\treturn bothLinksHaveSameLinkStats ; \n\t} \n"}, {"code": "public String generateSanitizedId $F72 { \n\tString result = generateId ( ) ; \n\t$F2936 ( result ) $F2936 ( result ) $F2936 ( result ) return result ; \n\t} \n"}, {"code": "public static synchronized void removeProvider ( int providerNumber ) { \n\tProvider p = providers . remove ( providerNumber - NUM00 ) ; \n\t$F139889 ( providersNames , p ) setNeedRefresh ( ) ; \n\t} \n"}, {"code": "private Object parseElement ( Node element ) throws XmlParseException { \n\ttry $F4915 ( parseElementRaw , element ) catch ( Exception e ) { \n\t\tthrow new XmlParseException ( NUM00 + element . getNodeName ( ) , e ) ; \n\t\t} \n\t} \n"}, {"code": "public IOUtils $F72 $F5795 ( super ) "}, {"code": "public static String format ( Money money ) { \n\tlong microAmount = NUM00 ; \n\tif ( money != null ) { \n\t\tmicroAmount = money . getMicroAmount ( ) ; \n\t\t} \n\telse { \n\t\treturn PLACEHOLDER_NULL ; \n\t\t} \n\t$F67468 ( amount , microAmount , MICRO_UNITS ) $F27028 ( String , FORMAT_MONEY , amount ) } \n"}, {"code": "private void deleteInstance ( EntryClass eclass ) { \n\t$F12747 ( idx , entryClasses , eclass ) eclass = ( EntryClass ) entryClasses . get ( idx ) ; \n\tint num = eclass . getNumInstances ( ) - NUM00 ; \n\tif ( num == NUM00 ) entryClasses . remove ( idx ) ; \n\teclass . setNumInstances ( num ) ; \n\t} \n"}, {"code": "public Properties readSettings $F72 { \n\ttry { \n\t\tString pacScriptUrl = detectScriptUrlPerDHCP ( ) ; \n\t\t$F22771 ( pacScriptUrl , detectScriptUrlPerDNS ) $F1338 ( pacScriptUrl ) $F2697 ( result ) $F48491 ( result , pacScriptUrl ) return result ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\treturn $F856 ; \n\t\t} \n\t} \n"}, {"code": "public void logWarning ( String message ) { \n\tlogger . warning ( logPrefix + message ) ; \n\t} \n"}, {"code": "public static String readAsString ( InputStream is ) throws IOException { \n\t$F280 ( buf ) $F12496 ( b ) int nread = - NUM00 ; \n\twhile $F42482 ( nread , is , b ) { \n\t\tString s = $F626 ( b , nread ) ; \n\t\tbuf . append ( s ) ; \n\t\t} \n\t$F92 ( buf ) } \n"}, {"code": "public ArrayFieldVector ( int size , T preset ) { \n\tthis ( preset . getField ( ) , size ) ; \n\tArrays . fill ( data , preset ) ; \n\t} \n"}, {"code": "public static synchronized void unregisterTransactionServicePlugin ( TransactionServicePlugin l ) { \n\tif ( service_ != null ) { \n\t\tservice_ . removeTSListener ( l ) ; \n\t\t} \n\ttsListenersList_ . remove ( l ) ; \n\t} \n"}, {"code": "$F2146 ( progressLabel , progress , myHost , previousProgress , previousProgressLabel ) "}, {"code": "$F4486 ( type , outputStack , n , outputStackTop , t , Math , System , top , owner ) "}, {"code": "protected static void isort ( int level [ ] , float BC [ ] ) { \n\tfloat temp ; \n\tint temp2 ; \n\tfor ( $F21583 ( i , BC ) ) { \n\t\tint j = i ; \n\t\ttemp = BC [ j + NUM00 ] ; \n\t\ttemp2 = level [ j + NUM00 ] ; \n\t\t$F67632 ( temp ) int prej = j + NUM00 ; \n\t\twhile ( j > - NUM00 && ( temp < BC [ j ] || BC [ j ] == NUM00 ) ) { \n\t\t\tif ( BC [ j ] == NUM00 ) { \n\t\t\t\tj -- ; \n\t\t\t\t$F598 } \n\t\t\telse { \n\t\t\t\tBC [ prej ] = BC [ j ] ; \n\t\t\t\tlevel [ prej ] = level [ j ] ; \n\t\t\t\tprej = j ; \n\t\t\t\tj -- ; \n\t\t\t\t} \n\t\t\t} \n\t\tBC [ prej ] = temp ; \n\t\tlevel [ prej ] = temp2 ; \n\t\t} \n\t} \n"}, {"code": "public void testIsConsistentModelClass $F72 { \n\tSessionNode node1 = new SessionNode ( Type1 . class ) ; \n\tSessionNode node2 = new SessionNode ( Type2 . class ) ; \n\tSessionNode node3 = new SessionNode ( Type3 . class ) ; \n\tSessionNode node4 = new SessionNode ( new Class [ ] { \n\t\tType1 . class , Type2 . class } \n\t) ; \n\tSessionNode node6 = new SessionNode ( new Class [ ] { \n\t\tType1 . class , Type2 . class , Type3 . class } \n\t) ; \n\tSessionNode node7 = new SessionNode ( new Class [ ] { \n\t\tType1 . class , Type4 . class } \n\t) ; \n\t$F19151 ( parents ) parents . add ( node1 ) ; \n\tparents . add ( node2 ) ; \n\tparents . add ( node3 ) ; \n\tparents . remove ( node1 ) ; \n\tparents . remove ( node2 ) ; \n\tparents . remove ( node3 ) ; \n\tparents . add ( node4 ) ; \n\tassertTrue ( node1 . isConsistentModelClass ( Type1 . class , parents , _BOOL ) ) ; \n\tparents . add ( node6 ) ; \n\tassertTrue ( node1 . isConsistentModelClass ( Type1 . class , parents , _BOOL ) ) ; \n\tparents . remove ( node6 ) ; \n\tparents . add ( node7 ) ; \n\tassertTrue ( ! node1 . isConsistentModelClass ( Type1 . class , parents , _BOOL ) ) ; \n\t} \n"}, {"code": "public void findAndInit ( Object someObj ) { \n\tif ( someObj instanceof com . bbn . openmap . MapBean ) { \n\t\t$F22806 ( logger ) setMapBean ( ( MapBean ) someObj ) ; \n\t\t} \n\t} \n"}, {"code": "public void removeAllLayers $F72 { \n\t$F6050 ( _layers ) refreshLayers = _BOOL ; \n\t$F8798 ( super ) } \n"}, {"code": "$F1654 ( productions ) "}, {"code": "public static Future < BoxedUnit > zkAsyncCreateFullPathOptimistic ( final ZooKeeperClient zkc , final String pathToCreate , final $F96 data , final List < ACL > acl , final CreateMode createMode ) { \n\t$F65632 parentPathShouldNotCreate = Optional . absent ( ) ; \n\treturn zkAsyncCreateFullPathOptimistic ( zkc , pathToCreate , parentPathShouldNotCreate , data , acl , createMode ) ; \n\t} \n"}, {"code": "private void writeObject ( ObjectOutputStream oos ) throws IOException { \n\t$F9339 ( oos ) writeStroke ( oos , stroke , OMGraphicAdapter . BASIC_STROKE ) ; \n\twriteTextureMask ( oos , textureMask ) ; \n\t} \n"}, {"code": "public boolean equals ( Object obj ) { \n\tif ( obj instanceof MRfQResponseLineQty ) { \n\t\tMRfQResponseLineQty cmp = ( MRfQResponseLineQty ) obj ; \n\t\tif ( ! cmp . isValidAmt ( ) || ! isValidAmt ( ) ) return _BOOL ; \n\t\tBigDecimal cmpNet = cmp . getNetAmt ( ) ; \n\t\t$F397 ( cmpNet , _BOOL ) BigDecimal net = cmp . getNetAmt ( ) ; \n\t\t$F397 ( net , _BOOL ) return cmpNet . compareTo ( net ) == NUM00 ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "$F13429 ( criteria , createCriteriaInternal , oredCriteria ) "}, {"code": "public ReflectiveAttribute ( Class $F65331 objectType , $F67889 fieldType , String fieldName ) { \n\tsuper ( objectType , fieldType , fieldName ) ; \n\tField field ; \n\ttry { \n\t\tfield = getField ( objectType , fieldName ) ; \n\t\t$F41506 ( field , _BOOL ) } \n\tcatch ( Exception e ) { \n\t\tthrow new IllegalStateException ( $F106503 ( fieldName , objectType ) ) ; \n\t\t} \n\tif ( ! fieldType . isAssignableFrom ( field . getType ( ) ) ) { \n\t\tthrow new IllegalStateException ( NUM00 + fieldName + NUM00 + field . getType ( ) + NUM00 + objectType . getName ( ) + NUM00 + fieldType . getName ( ) ) ; \n\t\t} \n\tthis . field = field ; \n\t} \n"}, {"code": "private void processEvent ( EventLogControl check , final String name , final DTNHost host1 , final DTNHost host2 , final Message message ) { \n\tString descString ; \n\tif ( ! check . showEvent ( ) ) $F932 descString = name + NUM00 + $F134738 ( host1 ) + ( host2 != null ? ( HOST_DELIM + host2 ) : NUM00 ) + ( message != null ? NUM00 + message : NUM00 ) ; \n\tif ( regExp != null && ! descString . matches ( regExp ) ) $F932 if ( check . pauseOnEvent ( ) ) { \n\t\tgui . setPaused ( _BOOL ) ; \n\t\tif ( host1 != null ) { \n\t\t\tgui . setFocus ( host1 ) ; \n\t\t\t} \n\t\t} \n\taddEvent ( name , host1 , host2 , message , check . pauseOnEvent ( ) ) ; \n\t} \n"}, {"code": "public boolean removeMembershipListener ( MembershipListener listener ) { \n\treturn membershipListeners . remove ( listener ) != null ; \n\t} \n"}, {"code": "public static Uri addMessageToUri ( ContentResolver resolver , Uri uri , String address , String body , String subject , Long date , boolean read , boolean deliveryReport , long threadId ) { \n\t$F41874 ( values ) values . put ( ADDRESS , address ) ; \n\t$F114625 ( date , values , DATE ) values . put ( READ , read ? Integer . valueOf ( NUM00 ) : Integer . valueOf ( NUM00 ) ) ; \n\tvalues . put ( SUBJECT , subject ) ; \n\tvalues . put ( BODY , body ) ; \n\tif ( deliveryReport ) $F1717 ( values , STATUS , STATUS_PENDING ) if ( threadId != - NUM00 ) $F1717 ( values , THREAD_ID , threadId ) return resolver . insert ( uri , values ) ; \n\t} \n"}, {"code": "private void present $F72 { \n\tglUseProgram ( quadProgram ) ; \n\tglBindBuffer ( GL_ARRAY_BUFFER , vbo ) ; \n\tglActiveTexture ( GL_TEXTURE0 ) ; \n\tglBindTexture ( GL_TEXTURE_2D , tex ) ; \n\tglDrawArrays ( GL_TRIANGLES , NUM00 , NUM00 ) ; \n\tglActiveTexture ( GL_TEXTURE0 ) ; \n\tglBindTexture ( GL_TEXTURE_2D , NUM00 ) ; \n\tglBindBuffer ( GL_ARRAY_BUFFER , NUM00 ) ; \n\tglUseProgram ( NUM00 ) ; \n\t} \n"}, {"code": "public static Calendar next ( Calendar self ) { \n\t$F30242 ( result , self ) $F107166 ( result , Calendar ) return result ; \n\t} \n"}, {"code": "protected void angularObjectClientBind ( NotebookSocket conn , $F2690 userAndRoles , Notebook notebook , Message fromMessage ) throws Exception { \n\tString noteId = fromMessage . getType ( NUM00 ) ; \n\tString varName = fromMessage . getType ( NUM00 ) ; \n\t$F100553 ( varValue , fromMessage ) String paragraphId = fromMessage . getType ( NUM00 ) ; \n\tNote note = notebook . getNote ( noteId ) ; \n\tif ( paragraphId == null ) $F11813 if ( note != null ) { \n\t\tfinal InterpreterGroup interpreterGroup = findInterpreterGroupForParagraph ( note , paragraphId ) ; \n\t\tfinal AngularObjectRegistry registry = interpreterGroup . getAngularObjectRegistry ( ) ; \n\t\tif ( registry instanceof RemoteAngularObjectRegistry ) { \n\t\t\tRemoteAngularObjectRegistry remoteRegistry = ( RemoteAngularObjectRegistry ) registry ; \n\t\t\tpushAngularObjectToRemoteRegistry ( noteId , paragraphId , varName , varValue , remoteRegistry , interpreterGroup . getId ( ) , conn ) ; \n\t\t\t} \n\t\telse { \n\t\t\tpushAngularObjectToLocalRepo ( noteId , paragraphId , varName , varValue , registry , interpreterGroup . getId ( ) , conn ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public static $F4203 void removeAll ( $F5675 list , $F3807 indexes ) { \n\t$F5768 ( list , indexes ) Collections . sort ( indexes , Collections . reverseOrder ( ) ) ; \n\t$F11550 ( size , list ) for ( Integer index : indexes ) { \n\t\tif ( index >= NUM00 && index < size ) { \n\t\t\tlist . remove ( ( int ) index ) ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public CProjectTree ( final JFrame parent , final CDatabaseManager databaseManager ) { \n\t$F1832 ( Preconditions , databaseManager ) m_treeModel = new CProjectTreeModel ( this ) ; \n\tsetModel ( m_treeModel ) ; \n\tCProjectTreeDragHandlerInitializer . initialize ( parent , this , databaseManager ) ; \n\taddMouseListener ( new InternalMouseListener $F72 ) ; \n\tsetScrollsOnExpand ( _BOOL ) ; \n\tsetRootVisible ( _BOOL ) ; \n\tm_rootNode = new CRootNode ( this , databaseManager ) ; \n\tm_treeModel . setRoot ( m_rootNode ) ; \n\tsetCellRenderer ( new IconNodeRenderer $F72 ) ; \n\tm_popup . add ( CActionProxy . proxy ( new CAddDatabaseAction ( this ) ) ) ; \n\t} \n"}, {"code": "public boolean isObject $F72 $F121470 ( typeString , OBJECT ) "}, {"code": "$F663 ( currTime , System , elapsed , startTime , ZOOM_TIME , Math , interpolator ) "}, {"code": "private void autoRequestMods $F72 { \n\tif ( ! c . autoRequestModsEnabled ( ) ) $F932 $F2689 joinedChannels = c . getJoinedChannels ( ) ; \n\tfor ( String channel : joinedChannels ) { \n\t\tif $F2200 ( modsAlreadyRequested , channel ) { \n\t\t\t$F556 ( LOGGER , channel ) modsAlreadyRequested . add ( channel ) ; \n\t\t\trequestModsSilent ( channel ) ; \n\t\t\t$F665 } \n\t\t} \n\t} \n"}, {"code": "public void buildDepreciation $F72 { \n\t$F933 ( isDepreciated ) $F280 ( sb ) load ( get_TrxName ( ) ) ; \n\tMAssetAcct assetacct = getA_AssetAcct ( null , get_TrxName ( ) ) ; \n\tMDepreciation depreciation_C = MDepreciation . get ( getCtx ( ) , assetacct . getA_Depreciation_ID ( ) ) ; \n\tMDepreciation depreciation_F = MDepreciation . get ( getCtx ( ) , assetacct . getA_Depreciation_F_ID ( ) ) ; \n\tint offset_C = NUM00 , offset_F = NUM00 ; \n\tBigDecimal assetCost = getActualCost ( ) ; \n\tBigDecimal accumDep_C = getA_Accumulated_Depr ( _BOOL ) ; \n\tBigDecimal accumDep_F = getA_Accumulated_Depr ( _BOOL ) ; \n\tint lifePeriods_C = getUseLifeMonths ( _BOOL ) + offset_C ; \n\tint lifePeriods_F = getUseLifeMonths ( _BOOL ) + offset_F ; \n\tint lifePeriods = ( lifePeriods_C > lifePeriods_F ? lifePeriods_C : lifePeriods_F ) ; \n\tBigDecimal exp_C = Env . ZERO ; \n\tBigDecimal exp_F = Env . ZERO ; \n\tif ( CLogMgt . isLevelFine ( ) ) { \n\t\tsb . append ( NUM00 + getA_Current_Period ( ) + NUM00 + getAssetDepreciationDate ( ) + NUM00 ) ; \n\t\t$F45293 ( sb , offset_C , offset_F ) sb . append ( NUM00 + lifePeriods_C + NUM00 + lifePeriods_F + NUM00 + lifePeriods + NUM00 ) ; \n\t\t} \n\ttruncDepreciation ( ) ; \n\tint A_Current_Period = getA_Current_Period ( ) ; \n\tfor ( int currentPeriod = A_Current_Period , cnt = NUM00 ; \n\tcurrentPeriod <= lifePeriods ; \n\tcurrentPeriod ++ , cnt ++ ) { \n\t\texp_C = Env . ZERO ; \n\t\texp_F = Env . ZERO ; \n\t\t$F35113 ( help , accumDep_C , accumDep_F ) if ( lifePeriods_C > currentPeriod || ! depreciation_C . requireLastPeriodAdjustment ( ) ) { \n\t\t\tsetFiscal ( _BOOL ) ; \n\t\t\texp_C = depreciation_C . invoke ( this , assetacct , currentPeriod , accumDep_C ) ; \n\t\t\t$F10950 ( accumDep_C , exp_C ) } \n\t\telse if ( lifePeriods_C == currentPeriod ) { \n\t\t\texp_C = assetCost . subtract ( accumDep_C ) ; \n\t\t\taccumDep_C = assetCost ; \n\t\t\t} \n\t\tif ( lifePeriods_F > currentPeriod || ! depreciation_F . requireLastPeriodAdjustment ( ) ) { \n\t\t\tsetFiscal ( _BOOL ) ; \n\t\t\texp_F = depreciation_F . invoke ( this , assetacct , currentPeriod , accumDep_F ) ; \n\t\t\t$F10950 ( accumDep_F , exp_F ) } \n\t\telse if ( lifePeriods_F == currentPeriod ) { \n\t\t\texp_F = assetCost . subtract ( accumDep_F ) ; \n\t\t\taccumDep_F = assetCost ; \n\t\t\t} \n\t\thelp += NUM00 + exp_C + NUM00 + exp_F + NUM00 + accumDep_C + NUM00 + accumDep_F ; \n\t\tint months = NUM00 ; \n\t\tmonths = months + ( currentPeriod - A_Current_Period ) ; \n\t\tTimestamp dateAcct = TimeUtil . getMonthLastDay ( TimeUtil . addMonths ( getDateAcct ( ) , months ) ) ; \n\t\tMDepreciationExp . createDepreciation ( this , currentPeriod , dateAcct , exp_C , exp_F , accumDep_C , accumDep_F , help , get_TrxName ( ) ) ; \n\t\tif ( CLogMgt . isLevelFine ( ) ) { \n\t\t\tString info = $F3911 ( cnt , currentPeriod , lifePeriods_C , lifePeriods_F , exp_C , exp_F , accumDep_C ) + accumDep_F + NUM00 + dateAcct ; \n\t\t\tlog . fine ( NUM00 + info + Env . NL + Env . NL ) ; \n\t\t\tsb . append ( info + Env . NL ) ; \n\t\t\t} \n\t\t} \n\t$F7404 ( log , sb ) m_buildDepreciation = _BOOL ; \n\t} \n"}, {"code": "$F1 public boolean contains ( Object value ) { \n\tfinal Iterator < Comparable > iter = new StepIterator ( this , NUM00 ) ; \n\t$F1933 ( value , _BOOL ) while $F2921 ( iter ) { \n\t\tif ( DefaultTypeTransformation . compareEqual ( value , iter . next ( ) ) ) return _BOOL ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "public synchronized void renameFile ( JDBCSequentialFile file , String newFileName ) throws SQLException { \n\ttry { \n\t\tconnection . setAutoCommit ( _BOOL ) ; \n\t\t$F3916 ( renameFile , newFileName ) $F36264 ( renameFile , file ) $F3917 ( renameFile ) $F17621 ( connection ) } \n\tcatch ( SQLException e ) $F33796 ( connection , e ) } \n"}, {"code": "public boolean hasNext $F72 throws IOException { \n\t$F46282 ( dataInputStream ) $F7468 ( val , dataInputStream ) $F2268 ( dataInputStream ) return val != - NUM00 ; \n\t} \n"}, {"code": "public static void handleErrorViolations ( Formatter formatter , long numErrors ) { \n\tExitCode exitCode = formatter . getExitStatus ( numErrors ) ; \n\tif ( exitCode != ExitCode . SUCCESS ) { \n\t\tSystem . exit ( exitCode . ordinal ( ) ) ; \n\t\t} \n\t} \n"}, {"code": "public void remove ( final Sensor sensor ) { \n\tSet $F310647 oldSelection = new HashSet $F310647 ( selection ) ; \n\t$F12396 ( rv , selection , sensor ) $F308 ( rv , fireSelectionChanged , oldSelection , selection ) } \n"}, {"code": "protected void printWay ( MapWay way , DefaultEntityViewInfo pInfo , boolean asArea ) { \n\tList $F455692 nodes = getWayNodes ( way ) ; \n\tif ( nodes != null ) { \n\t\tboolean asOneway = _BOOL ; \n\t\tNameInfo textInfo = null ; \n\t\tif ( scale >= pInfo . minNameScale * displayFactor ) { \n\t\t\tasOneway = way . isOneway ( ) ; \n\t\t\tif ( way . getName ( ) != null && pInfo . nameColor != null ) { \n\t\t\t\ttextInfo = new NameInfo ( way . getName ( ) , pInfo . nameColor , pInfo . printOrder ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tprintLine ( imageBdr , nodes , pInfo , asArea , asOneway , textInfo ) ; \n\t\t} \n\t} \n"}, {"code": "$F1 public String toString $F72 { \n\t$F280 ( result ) for ( $F1139 ( i , data ) ) { \n\t\tresult . append ( $F262485 ( i ) + data [ i ] ) ; \n\t\t} \n\t$F92 ( result ) } \n"}, {"code": "public Element fullPath ( ManagedObjectReference obj ) throws InvalidPropertyFaultMsg , RuntimeFaultFaultMsg , FinderException { \n\tList < ObjectContent > set = ancestrySet ( obj ) ; \n\tMap < MoRef , Element > $F8690 ( childToParent ) ; \n\tfor ( ObjectContent cont : set ) { \n\t\tMoRef key = new MoRef ( cont . getObj ( ) ) ; \n\t\tManagedObjectReference parentRef = getParent ( cont ) ; \n\t\tElement parent ; \n\t\tif ( parentRef != null ) { \n\t\t\tparent = Element . make ( parentRef , getName ( cont ) ) ; \n\t\t\t} \n\t\telse { \n\t\t\tparent = Element . make ( cont . getObj ( ) , getName ( cont ) ) ; \n\t\t\t} \n\t\tchildToParent . put ( key , parent ) ; \n\t\t} \n\tMoRef next = new MoRef ( obj ) ; \n\t$F24645 ( path ) while ( _BOOL ) { \n\t\tElement parent = childToParent . get ( next ) ; \n\t\tpath . add ( parent . path ) ; \n\t\tif ( next . equals ( new MoRef ( parent . object ) ) ) $F5153 next = new MoRef ( parent . object ) ; \n\t\t} \n\tCollections . reverse ( path ) ; \n\t$F83 ( sb ) for ( String s : path ) $F20352 ( sb , s ) return Element . make ( obj , sb . toString ( ) ) ; \n\t} \n"}, {"code": "private boolean hasNextProxy $F72 $F231867 ( nextProxyIndex , proxies ) "}, {"code": "private boolean noObjectWasClickedOn $F72 { \n\tboolean pickedNodeNull = ( pickedNode == null ) ; \n\tboolean cameraPicked = ( pickedNode instanceof PCamera ) ; \n\treturn ( pickedNodeNull || cameraPicked ) ; \n\t} \n"}, {"code": "$F1 public int hashCode $F72 $F39976 "}, {"code": "public Builder measurementMappings $F3501 ( measurementMappings ) { \n\tMap < String , Pattern > mappingsByPattern = new HashMap < String , Pattern > $F72 ; \n\tfor ( $F19318 ( entry , measurementMappings ) ) { \n\t\ttry { \n\t\t\tfinal Pattern pattern = Pattern . compile ( entry . getValue ( ) ) ; \n\t\t\t$F15251 ( mappingsByPattern , entry , pattern ) } \n\t\tcatch ( PatternSyntaxException e ) { \n\t\t\tthrow new RuntimeException ( $F253401 ( entry ) , e ) ; \n\t\t\t} \n\t\t} \n\tthis . measurementMappings = mappingsByPattern ; \n\treturn this ; \n\t} \n"}, {"code": "private $F16501 diff_bisectSplit ( String text1 , String text2 , int x , int y , long deadline ) { \n\t$F11991 ( text1a , text1 , x ) $F11991 ( text2a , text2 , y ) $F12716 ( text1b , text1 , x ) $F12716 ( text2b , text2 , y ) $F40337 ( diffs , diff_main , text1a , text2a , _BOOL , deadline ) $F40337 ( diffsb , diff_main , text1b , text2b , _BOOL , deadline ) diffs . addAll ( diffsb ) ; \n\treturn diffs ; \n\t} \n"}, {"code": "public static String validateCreditCardNumber ( String creditCardNumber , String creditCardType ) { \n\tif ( creditCardNumber == null || creditCardType == null ) $F1278 String ccStartList = NUM00 ; \n\tString ccLengthList = NUM00 ; \n\tif ( creditCardType . equals ( X_C_Payment . CREDITCARDTYPE_MasterCard ) ) $F85091 ( ccStartList , ccLengthList ) else if ( creditCardType . equals ( X_C_Payment . CREDITCARDTYPE_Visa ) ) $F85091 ( ccStartList , ccLengthList ) else if ( creditCardType . equals ( X_C_Payment . CREDITCARDTYPE_Amex ) ) $F85091 ( ccStartList , ccLengthList ) else if ( creditCardType . equals ( X_C_Payment . CREDITCARDTYPE_Discover ) ) $F85091 ( ccStartList , ccLengthList ) else if ( creditCardType . equals ( X_C_Payment . CREDITCARDTYPE_Diners ) ) $F85091 ( ccStartList , ccLengthList ) else { \n\t\tccStartList = NUM00 ; \n\t\tccLengthList = NUM00 ; \n\t\tccStartList += NUM00 ; \n\t\tccLengthList += NUM00 ; \n\t\tccStartList += NUM00 ; \n\t\tccLengthList += NUM00 ; \n\t\t} \n\tString ccNumber = checkNumeric ( creditCardNumber ) ; \n\t$F1749 ( ccLength , ccNumber ) boolean ccLengthOK = _BOOL ; \n\t$F8093 ( st , ccLengthList , _BOOL ) while ( st . hasMoreTokens ( ) && ! ccLengthOK ) { \n\t\t$F24697 ( l , Integer , st ) if ( ccLength == l ) ccLengthOK = _BOOL ; \n\t\t} \n\tif ( ! ccLengthOK ) { \n\t\t$F21516 ( s_log , ccLength , ccLengthList ) $F1278 } \n\tboolean ccIdentified = _BOOL ; \n\t$F8091 ( st , ccStartList , _BOOL ) ; \n\twhile ( st . hasMoreTokens ( ) && ! ccIdentified ) { \n\t\tif ( ccNumber . startsWith ( st . nextToken ( ) ) ) ccIdentified = _BOOL ; \n\t\t} \n\tif ( ! ccIdentified ) $F21516 ( s_log , creditCardType , ccStartList ) String check = validateCreditCardNumber ( ccNumber ) ; \n\tif $F35625 ( check ) return check ; \n\tif ( ! ccIdentified ) $F1278 $F1278 } \n"}, {"code": "public static void extract ( File zipFile , File destDir ) throws IOException { \n\t$F170751 ( zf , zipFile ) try { \n\t\textract ( zf , destDir ) ; \n\t\t} \n\t$F3229 ( zf ) } \n"}, {"code": "public Config ( String file ) { \n\tthis ( new File ( CONFIG_DIR , file . contains ( NUM00 ) ? file : file . concat ( NUM00 ) ) ) ; \n\t} \n"}, {"code": "public GotoLineDialog ( JTextComponent text ) { \n\tsuper ( ActionUtils . getFrameFor ( text ) , _BOOL ) ; \n\tinitComponents ( ) ; \n\tthis . text = text ; \n\tsetLocationRelativeTo ( text . getRootPane ( ) ) ; \n\t} \n"}, {"code": "$F11730 ( logPrefix , request , exception , retryPolicy , oldTimeout , String , e ) "}, {"code": "protected void computeAxisValues ( float min , float max ) { \n\tfloat yMin = min ; \n\tfloat yMax = max ; \n\tint labelCount = mYAxis . getLabelCount ( ) ; \n\t$F14050 ( range , Math , yMax , yMin ) if ( labelCount == NUM00 || range <= NUM00 ) { \n\t\tmYAxis . mEntries = new float $F10277 ; \n\t\tmYAxis . mEntryCount = NUM00 ; \n\t\t$F665 } \n\tdouble rawInterval = range / labelCount ; \n\tdouble interval = Utils . roundToNextSignificant ( rawInterval ) ; \n\tdouble intervalMagnitude = Math . pow ( NUM00 , ( int ) Math . log10 ( interval ) ) ; \n\t$F113182 ( intervalSigDigit , interval , intervalMagnitude ) if ( intervalSigDigit > NUM00 ) { \n\t\tinterval = Math . floor ( NUM00 * intervalMagnitude ) ; \n\t\t} \n\tif ( mYAxis . isShowOnlyMinMaxEnabled ( ) ) { \n\t\tmYAxis . mEntryCount = NUM00 ; \n\t\tmYAxis . mEntries = $F12454 ; \n\t\t$F127729 ( mYAxis , yMin ) $F127729 ( mYAxis , yMax ) } \n\telse { \n\t\tdouble first = Math . ceil ( yMin / interval ) * interval ; \n\t\tdouble last = Utils . nextUp ( Math . floor ( yMax / interval ) * interval ) ; \n\t\tdouble f ; \n\t\tint i ; \n\t\tint n = NUM00 ; \n\t\tfor ( f = first ; \n\t\tf <= last ; \n\t\tf += interval ) { \n\t\t\t++ n ; \n\t\t\t} \n\t\tmYAxis . mEntryCount = n ; \n\t\t$F127722 ( mYAxis , n ) for ( f = first , i = NUM00 ; \n\t\ti < n ; \n\t\tf += interval , ++ i ) { \n\t\t\tmYAxis . mEntries [ i ] = ( float ) f ; \n\t\t\t} \n\t\t} \n\tif ( interval < NUM00 ) { \n\t\tmYAxis . mDecimals = ( int ) Math . ceil ( - Math . log10 ( interval ) ) ; \n\t\t} \n\telse { \n\t\tmYAxis . mDecimals = NUM00 ; \n\t\t} \n\t} \n"}, {"code": "private void sendRequestTeardown $F72 throws IOException { \n\tString request = NUM00 + mParameters . host + NUM00 + mParameters . port + mParameters . path + NUM00 + addHeaders ( ) ; \n\tLog . i ( TAG , $F31599 ( request ) ) ; \n\t$F42213 ( mOutputStream , request ) $F1206 ( mOutputStream ) } \n"}, {"code": "public boolean parseMoreData ( final EncodedImage encodedImage ) { \n\t$F3627 ( mParserState , NOT_A_JPEG , _BOOL ) final int dataBufferSize = encodedImage . getSize ( ) ; \n\t$F24599 ( dataBufferSize , mBytesParsed , _BOOL ) final InputStream bufferedDataStream = new PooledByteArrayBufferedInputStream ( encodedImage . getInputStream ( ) , mByteArrayPool . get ( BUFFER_SIZE ) , mByteArrayPool ) ; \n\ttry { \n\t\tStreamUtil . skip ( bufferedDataStream , mBytesParsed ) ; \n\t\treturn doParseMoreData ( bufferedDataStream ) ; \n\t\t} \n\tcatch ( IOException ioe ) { \n\t\tThrowables . propagate ( ioe ) ; \n\t\treturn _BOOL ; \n\t\t} \n\t$F18090 ( Closeables , bufferedDataStream ) } \n"}, {"code": "public void testSimpleEar $F72 throws Exception $F123330 ( url , System , expected , PingUtils , logger ) "}, {"code": "public int length $F72 { \n\treturn this . filledLength ; \n\t} \n"}, {"code": "$F1 public boolean equals ( Object o ) { \n\tif ( o instanceof Prefix ) { \n\t\treturn value . equals ( ( ( Prefix ) o ) . value ) ; \n\t\t} \n\treturn _BOOL ; \n\t} \n"}, {"code": "private void notifyWifiState $F72 { \n\tsynchronized ( mWifiMonitor ) { \n\t\t$F27746 ( Log , LOG_TAG ) $F8071 ( mWifiMonitor ) } \n\t} \n"}, {"code": "private boolean arrayKeyValueExists ( String key , String value ) { \n\tif $F1710 ( visitedPost , key ) { \n\t\tfor ( String s : visitedPost . get ( key ) ) $F12419 ( s , value , _BOOL ) } \n\treturn _BOOL ; \n\t} \n"}, {"code": "public void removeDiagramChangeListener ( mxDiagramChangeListener listener ) $F4579 ( diagramChangeListeners , listener ) "}, {"code": "public static ConnectivityGrid ConnectivityGridFactory ( int key , double maxRange ) { \n\tif ( gridobjects . containsKey ( ( Integer ) key ) ) { \n\t\treturn ( ConnectivityGrid ) gridobjects . get ( ( Integer ) key ) ; \n\t\t} \n\telse { \n\t\tConnectivityGrid newgrid = new ConnectivityGrid ( $F29907 ( Math , maxRange , cellSizeMultiplier ) ) ; \n\t\tgridobjects . put ( ( Integer ) key , newgrid ) ; \n\t\treturn newgrid ; \n\t\t} \n\t} \n"}, {"code": "public static String stripLeadingDollar ( String str ) { \n\treturn $F4432 ( str ) ? str . substring ( NUM00 ) : str ; \n\t} \n"}, {"code": "@ AfterClass public static void clearHostContext $F72 throws Exception { \n\t$F739 ( System ) } \n"}, {"code": "public PNormNormalization ( double p ) { \n\tif $F92586 ( p , Double ) $F11416 ( p ) this . p = p ; \n\t} \n"}, {"code": "public void addSeparator $F72 { \n\tif $F935 ( log , PlatformLogger ) $F102497 ( log ) } \n"}, {"code": "$F1 public void start ( Stage stage ) throws Exception { \n\tCategoryDataset dataset = createDataset ( ) ; \n\tJFreeChart chart = createChart ( dataset ) ; \n\tChartViewer viewer = new ChartViewer ( chart ) ; \n\tviewer . addChartMouseListener ( this ) ; \n\tstage . setScene ( new Scene ( viewer ) ) ; \n\t$F249283 ( stage ) stage . setWidth ( NUM00 ) ; \n\tstage . setHeight ( NUM00 ) ; \n\t$F114746 ( stage ) } \n"}, {"code": "$F10929 ( buf , mSizeLimit , mBuffersByLastUse , pos , Collections , mBuffersBySize , BUF_COMPARATOR , mCurrentSize , trim ) "}, {"code": "$F1 public void acceptDataPoint ( ChartEvent e ) { \n\tif ( e . getReset ( ) ) { \n\t\tm_xCount = NUM00 ; \n\t\tm_max = NUM00 ; \n\t\tm_min = NUM00 ; \n\t\t} \n\tif ( m_outputFrame != null ) { \n\t\tboolean refresh = _BOOL ; \n\t\tif ( e . getLegendText ( ) != null & e . getLegendText ( ) != m_legendText ) { \n\t\t\tm_legendText = e . getLegendText ( ) ; \n\t\t\trefresh = _BOOL ; \n\t\t\t} \n\t\tif ( e . getMin ( ) != m_min || e . getMax ( ) != m_max ) { \n\t\t\tm_oldMax = m_max ; \n\t\t\tm_oldMin = m_min ; \n\t\t\t$F268954 ( m_max , e ) m_min = e . getMin ( ) ; \n\t\t\trefresh = _BOOL ; \n\t\t\tm_yScaleUpdate = _BOOL ; \n\t\t\t} \n\t\tif ( refresh ) { \n\t\t\t$F8798 ( m_legendPanel ) $F8798 ( m_scalePanel ) } \n\t\tacceptDataPoint ( e . getDataPoint ( ) ) ; \n\t\t} \n\tm_xCount ++ ; \n\t} \n"}, {"code": "public void sub ( NamedRangeSet other ) { \n\tList < NamedRange > newRanges = new ArrayList < NamedRange > $F72 ; \n\tOUTER_LOOP : for ( NamedRange range : ranges ) { \n\t\tNamedRange thisRange = new NamedRange ( range . start , range . end , range . name ) ; \n\t\tfor ( NamedRange otherRange : other . ranges ) { \n\t\t\tif ( otherRange . start <= thisRange . start && otherRange . end >= thisRange . end ) { \n\t\t\t\tcontinue OUTER_LOOP ; \n\t\t\t\t} \n\t\t\tif ( otherRange . end < thisRange . start || otherRange . start > thisRange . end ) $F845 else if ( otherRange . start <= thisRange . start ) { \n\t\t\t\tthisRange . start = otherRange . end + NUM00 ; \n\t\t\t\t} \n\t\t\telse if ( otherRange . end >= thisRange . end ) { \n\t\t\t\tthisRange . end = otherRange . start - NUM00 ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tnewRanges . add ( new NamedRange ( thisRange . start , otherRange . start - NUM00 , thisRange . name ) ) ; \n\t\t\t\tthisRange . start = otherRange . end + NUM00 ; \n\t\t\t\t} \n\t\t\t} \n\t\tnewRanges . add ( thisRange ) ; \n\t\t} \n\tranges = newRanges ; \n\t} \n"}, {"code": "private static Node locateAttrParent ( Element elem , Node attr ) { \n\tNode parent = null ; \n\tAttr check = elem . getAttributeNode ( attr . getNodeName ( ) ) ; \n\tif ( check == attr ) parent = elem ; \n\tif ( null == parent ) { \n\t\tfor ( Node node = elem . getFirstChild ( ) ; \n\t\tnull != node ; \n\t\tnode = node . getNextSibling ( ) ) { \n\t\t\tif ( Node . ELEMENT_NODE == node . getNodeType ( ) ) { \n\t\t\t\tparent = locateAttrParent ( ( Element ) node , attr ) ; \n\t\t\t\tif ( null != parent ) $F597 } \n\t\t\t} \n\t\t} \n\treturn parent ; \n\t} \n"}, {"code": "public static Tailer create ( File file , TailerListener listener , long delayMillis , boolean end , int bufSize ) { \n\tTailer tailer = new Tailer ( file , listener , delayMillis , end , bufSize ) ; \n\t$F24440 ( thread , tailer ) thread . setDaemon ( _BOOL ) ; \n\t$F2346 ( thread ) return tailer ; \n\t} \n"}, {"code": "public static boolean isMacOs $F72 $F144200 ( osName ) "}, {"code": "$F1654 ( values ) "}, {"code": "public DViewAsn1Dump ( JDialog parent , X509CRL crl ) throws $F31549 { \n\t$F15426 ( super , res ) this . crl = crl ; \n\tinitComponents ( ) ; \n\t} \n"}, {"code": "public static String rightTrim ( final String value ) { \n\tvalidate ( value , NULL_ <missing ';'> NUM00 <missing ';'> $F38386 NULL_ NUM00 <missing ';'> $F38387 ; \n\t$F8479 ( value ) } \n"}, {"code": "public synchronized void putMessage ( Object obj ) { \n\tfifo . addElement ( obj ) ; \n\tnumMessage ++ ; \n\tnotifyAll ( ) ; \n\t} \n"}, {"code": "public void dispose $F72 { \n\t$F84963 ( isDisposed ) setDisposed ( _BOOL ) ; \n\tif ( ! menu ) $F47532 ( super ) } \n"}, {"code": "public double signed_distance ( PlaPointFloat p_point ) { \n\tdouble dx = point_b . v_x - point_a . v_x ; \n\tdouble dy = point_b . v_y - point_a . v_y ; \n\tdouble det = dy * ( p_point . v_x - point_a . v_x ) - dx * ( p_point . v_y - point_a . v_y ) ; \n\t$F25559 ( length , Math , dx , dy ) return det / length ; \n\t} \n"}, {"code": "public static void expandReal ( String numberString , WordRelation wordRelation , Item tokenItem ) { \n\t$F1749 ( stringLength , numberString ) int position ; \n\tif $F4432 ( numberString ) { \n\t\t$F56208 ( wordRelation , tokenItem ) expandReal ( numberString . substring ( NUM00 , stringLength ) , wordRelation , tokenItem ) ; \n\t\t} \n\telse if $F4432 ( numberString ) { \n\t\t$F56208 ( wordRelation , tokenItem ) expandReal ( numberString . substring ( NUM00 , stringLength ) , wordRelation , tokenItem ) ; \n\t\t} \n\telse if ( $F12720 ( position , numberString ) != - NUM00 || $F12720 ( position , numberString ) != - NUM00 ) { \n\t\texpandReal ( numberString . substring ( NUM00 , position ) , wordRelation , tokenItem ) ; \n\t\t$F56208 ( wordRelation , tokenItem ) expandReal ( numberString . substring ( position + NUM00 ) , wordRelation , tokenItem ) ; \n\t\t} \n\telse if $F48458 ( position , numberString ) { \n\t\t$F11991 ( beforeDot , numberString , position ) if $F4012 ( beforeDot ) { \n\t\t\texpandReal ( beforeDot , wordRelation , tokenItem ) ; \n\t\t\t} \n\t\t$F56208 ( wordRelation , tokenItem ) $F36289 ( afterDot , numberString , position ) if $F4012 ( afterDot ) { \n\t\t\texpandDigits ( afterDot , wordRelation , tokenItem ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\texpandNumber ( numberString , wordRelation , tokenItem ) ; \n\t\t} \n\t} \n"}, {"code": "public static $F1986 ones ( int L ) { \n\tdouble m [ ] = new double [ L ] ; \n\t$F9952 ( Arrays , m ) return m ; \n\t} \n"}, {"code": "private PermissionRequest submit $F72 { \n\tint showRationale = NUM00 ; \n\t$F22547 ( requests ) for ( final String permission : mPermissions ) { \n\t\tif ( mActivity . checkSelfPermission ( permission ) != PackageManager . PERMISSION_GRANTED ) { \n\t\t\trequests . add ( permission ) ; \n\t\t\tif ( ActivityCompat . shouldShowRequestPermissionRationale ( mActivity , permission ) ) { \n\t\t\t\tshowRationale ++ ; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tmRequestCode = mRequestId . addAndGet ( NUM00 ) ; \n\tif $F2979 ( requests ) { \n\t\tif ( mCallback != null ) { \n\t\t\tmCallback . onPermissionsGranted ( ) ; \n\t\t\t} \n\t\t} \n\telse { \n\t\tif ( showRationale == NUM00 ) { \n\t\t\tActivityCompat . requestPermissions ( mActivity , mPermissions , mRequestCode ) ; \n\t\t\t} \n\t\telse $F5795 ( showRationale ) } \n\treturn this ; \n\t} \n"}, {"code": "public void error ( XPathContext xctxt , String msg , $F131 args ) throws $F1872 { \n\t$F9737 fmsg = XSLMessages . createXPATHMessage ( msg , args ) ; \n\tif ( null != xctxt ) { \n\t\t$F1875 ( eh , xctxt ) TransformerException te = new TransformerException ( fmsg , this ) ; \n\t\teh . fatalError ( te ) ; \n\t\t} \n\t} \n"}, {"code": "public void testSettingANullDeployableProperty $F72 { \n\tDeployable deployableElement = new Deployable $F72 ; \n\tWAR war = new WAR $F580 ; \n\t$F13404 ( properties ) $F91191 ( properties ) deployableElement . setProperties ( properties ) ; \n\tdeployableElement . setPropertiesOnDeployable ( war , createDefaultProject ( NUM00 , null ) ) ; \n\tassertEquals ( NUM00 , war . getContext ( ) ) ; \n\t} \n"}, {"code": "private NaviLogger $F72 $F845 "}, {"code": "public static DeleteSubCommandHandler create ( SubCommandArgumentParser parser , $F303831 ( p ) , SetRelationDefinition $F5162 r ) throws ArgumentException { \n\treturn new DeleteSubCommandHandler ( parser , p , r , p . child ( r ) ) ; \n\t} \n"}, {"code": "protected void removeCycles $F72 { \n\tint visited [ ] = $F2315 ( m_nodes ) ; \n\tfor ( $F1139 ( i , graphMatrix ) ) { \n\t\tif ( visited [ i ] == NUM00 ) { \n\t\t\tremoveCycles2 ( i , visited ) ; \n\t\t\tvisited [ i ] = NUM00 ; \n\t\t\t} \n\t\t} \n\t} \n"}, {"code": "public String toString ( ObjectMatrix3D matrix ) { \n\t$F280 ( buf ) boolean oldPrintShape = this . printShape ; \n\tthis . printShape = _BOOL ; \n\tfor ( int slice = NUM00 ; \n\tslice < matrix . slices ( ) ; \n\tslice ++ ) { \n\t\tif ( slice != NUM00 ) buf . append ( sliceSeparator ) ; \n\t\tbuf . append ( toString ( matrix . viewSlice ( slice ) ) ) ; \n\t\t} \n\tthis . printShape = oldPrintShape ; \n\tif ( printShape ) buf . insert ( NUM00 , shape ( matrix ) + NUM00 ) ; \n\t$F92 ( buf ) } \n"}, {"code": "int findAncestor ( XPathContext xctxt , XPath fromMatchPattern , XPath countMatchPattern , int context , ElemNumber namespaceContext ) throws $F1872 { \n\tDTM dtm = xctxt . getDTM ( context ) ; \n\twhile ( DTM . NULL != context ) { \n\t\tif ( null != fromMatchPattern ) { \n\t\t\tif ( fromMatchPattern . getMatchScore ( xctxt , context ) != XPath . MATCH_SCORE_NONE ) $F5153 } \n\t\tif ( null != countMatchPattern ) { \n\t\t\tif ( countMatchPattern . getMatchScore ( xctxt , context ) != XPath . MATCH_SCORE_NONE ) $F5153 } \n\t\tcontext = dtm . getParent ( context ) ; \n\t\t} \n\treturn context ; \n\t} \n"}, {"code": "public synchronized void kill $F72 { \n\trunning = _BOOL ; \n\tclosed = _BOOL ; \n\t$F29053 ( STDIN ) try $F17624 ( process ) $F3957 } \n"}, {"code": "public final ByteBuffer encode ( CharBuffer in ) throws CharacterCodingException { \n\tint length = ( int ) ( in . remaining ( ) * averageBytesPerChar ) ; \n\t$F87627 ( out , ByteBuffer , length ) reset ( ) ; \n\twhile ( state != FLUSHED ) { \n\t\tCoderResult result = encode ( in , out , _BOOL ) ; \n\t\tif ( result == CoderResult . OVERFLOW ) { \n\t\t\tout = allocateMore ( out ) ; \n\t\t\t$F598 } \n\t\telse { \n\t\t\tcheckCoderResult ( result ) ; \n\t\t\t} \n\t\tresult = flush ( out ) ; \n\t\tif ( result == CoderResult . OVERFLOW ) $F8576 ( out , allocateMore ) else { \n\t\t\tcheckCoderResult ( result ) ; \n\t\t\t} \n\t\t} \n\t$F14257 ( out ) return out ; \n\t} \n"}, {"code": "public static Metrics create $F3501 ( dimensionMap ) { \n\t$F2539 map = Maps . newTreeMap ( ) ; \n\tmap . putAll ( dimensionMap ) ; \n\treturn new Metrics ( Collections . unmodifiableMap ( map ) ) ; \n\t} \n"}, {"code": "protected $F6969 resolveClass ( ObjectStreamClass classDesc ) throws $F6427 { \n\tObject annotation = readLocation ( ) ; \n\t$F20605 ( className , classDesc ) ClassLoader defaultLoader = skipDefaultResolveClass ? null : latestUserDefinedLoader ( ) ; \n\tString codebase = null ; \n\tif ( ! useCodebaseOnly && annotation instanceof String ) $F80631 ( codebase , annotation ) try { \n\t\treturn RMIClassLoader . loadClass ( codebase , className , defaultLoader ) ; \n\t\t} \n\tcatch ( AccessControlException e ) $F8587 ( checkSunClass , className , e ) catch ( ClassNotFoundException e ) { \n\t\ttry { \n\t\t\tif ( Character . isLowerCase ( className . charAt ( NUM00 ) ) && $F8907 ( className ) ) { \n\t\t\t\treturn super . resolveClass ( classDesc ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tcatch ( ClassNotFoundException e2 ) $F845 throw e ; \n\t\t} \n\t} \n"}, {"code": "public IOUtils $F72 $F5795 ( super ) "}, {"code": "public boolean contains ( final CreatureRespawnPoint point ) { \n\t$F1933 ( point , _BOOL ) final IRPZone entityZone = point . getZone ( ) ; \n\treturn zone . equals ( entityZone ) && shape . contains ( $F5048 ( point ) ) ; \n\t} \n"}, {"code": "public void add $F95906 ( i , buffer , offset , length ) { \n\tif ( _length + length > _capacity ) ensureCapacity ( _length + length ) ; \n\t$F75427 ( System , _buffer , i , length , _length ) System . arraycopy ( buffer , offset , _buffer , i , length ) ; \n\t_length += length ; \n\t} \n"}, {"code": "public boolean isUseAntiAlias $F72 { \n\treturn useAntiAlias ; \n\t} \n"}, {"code": "private void loadLevelFile $F19845 ( tableName , columnName , cubeName , schemaName ) { \n\tString baseLocation = CarbonUtil . getCarbonStorePath ( schemaName , cubeName ) ; \n\tbaseLocation = baseLocation + File . separator + schemaName + File . separator + cubeName ; \n\tif $F10471 ( loadFolderList ) { \n\t\tcheckAndUpdateFolderList ( baseLocation ) ; \n\t\t} \n\ttry { \n\t\t$F5237 filesArray = null ; \n\t\tfor ( File loadFoler : loadFolderList ) { \n\t\t\tfilesArray = getFilesArray ( loadFoler , tableName + NUM00 + columnName ) ; \n\t\t\tif ( null != filesArray ) { \n\t\t\t\tfor ( $F1139 ( i , filesArray ) ) { \n\t\t\t\t\treadLevelFileAndUpdateCache ( filesArray [ i ] , tableName + NUM00 + columnName ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\tcatch ( IOException e ) $F21338 ( LOGGER ) } \n"}, {"code": "protected void doValidateZeroLongFile ( String path , String filename , long size , boolean checkContents ) { \n\t$F4453 ( inFile , path , filename ) DataInputStream inStream = null ; \n\t$F6848 ( Log , LOG_TAG , filename , path ) try { \n\t\tinStream = new DataInputStream $F18079 ( inFile ) ; \n\t\tif ( checkContents ) { \n\t\t\tfor ( long i = NUM00 ; \n\t\t\ti < size ; \n\t\t\t++ i ) { \n\t\t\t\tif ( inStream . readLong ( ) != NUM00 ) $F1328 ( fail , filename ) } \n\t\t\t} \n\t\t$F2727 ( inStream ) Log . i ( LOG_TAG , NUM00 + filename + NUM00 + size + NUM00 ) ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\t$F60313 ( fail , inFile , e ) } \n\t} \n"}, {"code": "protected void write ( DataOutputStream stream ) throws Exception { \n\tIterator < NBT_Tag > iter = elements . iterator ( ) ; \n\twhile $F2921 ( iter ) { \n\t\tNBT_Tag ret = iter . next ( ) ; \n\t\tret . save ( stream ) ; \n\t\t} \n\tTAG_End end = new TAG_End $F580 ; \n\tend . save ( stream ) ; \n\t} \n"}, {"code": "public String applyMask ( String mask , String value ) { \n\treturn ( String ) getMaskOrGetCursorIndex ( mask , value , NUM00 , _BOOL ) ; \n\t} \n"}, {"code": "private void computeDuration $F72 { \n\t$F266849 ( duration , System , start ) total_duration += duration ; \n\t} \n"}, {"code": "$F22330 $F1 public $F96 serialize ( List list ) { \n\t$F1275 ( list ) $F11550 ( size , list ) $F64664 ( valueIDs , size ) $F37191 ( valueBytes , size ) int totalSize = NUM00 + size * NUM00 ; \n\tint i = NUM00 ; \n\t$F10531 ( iter , list ) while $F2921 ( iter ) { \n\t\tfinal Object value = iter . next ( ) ; \n\t\t$F20850 ( valueClass , value ) int valueTypeID = EntityDefinitionManager . getIDBySerDerClass ( valueClass ) ; \n\t\tif ( valueTypeID == - NUM00 ) { \n\t\t\tif ( value instanceof List ) { \n\t\t\t\tvalueClass = List . class ; \n\t\t\t\tvalueTypeID = EntityDefinitionManager . getIDBySerDerClass ( valueClass ) ; \n\t\t\t\t} \n\t\t\telse if ( value instanceof Map ) { \n\t\t\t\tvalueClass = $F64671 ; \n\t\t\t\tvalueTypeID = EntityDefinitionManager . getIDBySerDerClass ( valueClass ) ; \n\t\t\t\t} \n\t\t\telse { \n\t\t\t\tthrow new IllegalArgumentException $F47919 ( valueClass ) ; \n\t\t\t\t} \n\t\t\t} \n\t\tvalueIDs [ i ] = valueTypeID ; \n\t\tfinal EntitySerDeser valueSerDer = EntityDefinitionManager . getSerDeser ( valueClass ) ; \n\t\tif ( valueSerDer == null ) { \n\t\t\tthrow new IllegalArgumentException $F47919 ( valueClass ) ; \n\t\t\t} \n\t\tvalueBytes [ i ] = valueSerDer . serialize ( value ) ; \n\t\ttotalSize += valueBytes [ i ] . length ; \n\t\t++ i ; \n\t\t} \n\t$F4727 ( result , totalSize ) int offset = NUM00 ; \n\tByteUtil . intToBytes ( size , result , offset ) ; \n\toffset += NUM00 ; \n\tfor ( i = NUM00 ; \n\ti < size ; \n\t++ i ) { \n\t\tByteUtil . intToBytes ( valueIDs [ i ] , result , offset ) ; \n\t\toffset += NUM00 ; \n\t\tByteUtil . intToBytes ( valueBytes [ i ] . length , result , offset ) ; \n\t\toffset += NUM00 ; \n\t\tSystem . arraycopy ( valueBytes [ i ] , NUM00 , result , offset , valueBytes [ i ] . length ) ; \n\t\toffset += valueBytes [ i ] . length ; \n\t\t} \n\treturn result ; \n\t} \n"}, {"code": "public int handleNITFHeader ( BinaryFile binFile ) { \n\ttry { \n\t\t$F96 nitfArray = binFile . readBytes ( NUM00 , _BOOL ) ; \n\t\t$F605 ( nitf , nitfArray ) binFile . seek ( RPF_DATE_LOCATION ) ; \n\t\tnitfArray = binFile . readBytes ( NUM00 , _BOOL ) ; \n\t\t$F84838 ( nitf , nitfArray ) if $F141797 ( nitf ) $F1082 binFile . seek ( RPF_DATE_LOCATION + TOC_NITF_HEADER_LENGTH ) ; \n\t\tnitfArray = binFile . readBytes ( NUM00 , _BOOL ) ; \n\t\t$F84838 ( nitf , nitfArray ) if $F141797 ( nitf ) return TOC_NITF_HEADER_LENGTH ; \n\t\tbinFile . seek ( RPF_DATE_LOCATION + FRAME_SHORT_NITF_HEADER_LENGTH ) ; \n\t\tnitfArray = binFile . readBytes ( NUM00 , _BOOL ) ; \n\t\t$F84838 ( nitf , nitfArray ) if $F141797 ( nitf ) return FRAME_SHORT_NITF_HEADER_LENGTH ; \n\t\tbinFile . seek ( RPF_DATE_LOCATION + FRAME_LONG_NITF_HEADER_LENGTH ) ; \n\t\tnitfArray = binFile . readBytes ( NUM00 , _BOOL ) ; \n\t\t$F84838 ( nitf , nitfArray ) if $F141797 ( nitf ) return FRAME_LONG_NITF_HEADER_LENGTH ; \n\t\t} \n\tcatch ( IOException e ) { \n\t\t$F17662 ( Debug , e ) $F150 } \n\tcatch ( FormatException f ) { \n\t\t$F17662 ( Debug , f ) $F150 } \n\t$F150 } \n"}, {"code": "public BufferedImage takeScreenshot $F72 { \n\tDebug . setDebugLevel ( NUM00 ) ; \n\tFile scrFile = driver . getScreenshotAs ( OutputType . FILE ) ; \n\tBufferedImage bufferedImage = null ; \n\ttry $F616 ( bufferedImage , ImageIO , scrFile ) $F12241 ( e ) return bufferedImage ; \n\t} \n"}, {"code": "private void pickCenterOverlap ( ScoutWidget [ ] list ) { \n\tfor ( $F1139 ( i , list ) ) { \n\t\tScoutWidget scoutWidget = list [ i ] ; \n\t\tfloat centerX = scoutWidget . getX ( ) + $F77576 ( scoutWidget ) ; \n\t\tfloat centerY = $F167223 ( scoutWidget ) ; \n\t\tfor ( $F1139 ( j , list ) ) { \n\t\t\t$F73688 ( i , j ) ScoutWidget widget = list [ j ] ; \n\t\t\tif ( scoutWidget . isGuideline ( ) ) $F1448 if ( ! widget . isGuideline ( ) && ScoutWidget . distance ( scoutWidget , widget ) > MAX_DIST_FOR_CENTER_OVERLAP ) $F1448 if ( ! widget . isGuideline ( ) || widget . isVerticalGuideline ( ) ) { \n\t\t\t\tif ( Math . abs ( widget . getX ( ) - centerX ) < CENTER_ERROR ) { \n\t\t\t\t\tscoutWidget . setEdgeCentered ( NUM00 , widget , Direction . WEST ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( Math . abs ( $F7573 ( widget ) - centerX ) < CENTER_ERROR ) { \n\t\t\t\t\tscoutWidget . setEdgeCentered ( NUM00 , widget , Direction . EAST ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\tif ( ! widget . isGuideline ( ) || widget . isHorizontalGuideline ( ) ) { \n\t\t\t\tif ( Math . abs ( widget . getY ( ) - centerY ) < CENTER_ERROR ) { \n\t\t\t\t\tscoutWidget . setEdgeCentered ( NUM00 , widget , Direction . NORTH ) ; \n\t\t\t\t\t} \n\t\t\t\tif ( Math . abs ( $F175125 ( widget ) - centerY ) < CENTER_ERROR ) { \n\t\t\t\t\tscoutWidget . setEdgeCentered ( NUM00 , widget , Direction . SOUTH ) ; \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n"}]